<!doctype html>
<html lang="en">

<head>
    <title>Decrement by one to rule them all: AsIO3.sys driver exploitation</title>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://blog.talosintelligence.com/assets/css/bootstrap.min.css?v=ea98fc7d1f">

    <link rel="stylesheet" href="https://blog.talosintelligence.com/assets/css/navigation.css?v=ea98fc7d1f">
    <link rel="stylesheet" href="https://blog.talosintelligence.com/assets/css/footer.css?v=ea98fc7d1f">

    <link rel="stylesheet" href="https://blog.talosintelligence.com/assets/css/pagination.css?v=ea98fc7d1f">

    <link rel="stylesheet" href="https://blog.talosintelligence.com/assets/css/banners.css?v=ea98fc7d1f">

    <link rel="stylesheet" href="https://blog.talosintelligence.com/assets/css/style.css?v=ea98fc7d1f">

    <link rel="stylesheet" href="https://blog.talosintelligence.com/assets/css/prism.css?v=ea98fc7d1f">
    <link rel="stylesheet" href="https://blog.talosintelligence.com/assets/css/prism-vsc-dark-plus.css?v=ea98fc7d1f">
    <link rel="stylesheet" href="https://blog.talosintelligence.com/assets/css/prism-talos.css?v=ea98fc7d1f">

    <link rel="stylesheet" href="https://blog.talosintelligence.com/assets/css/landing-page.css?v=ea98fc7d1f">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;1,100;1,300;1,400&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Fira+Mono:wght@400;500&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;1,100;1,300;1,400&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/ghost-theme-utils@latest/dist/css/style.min.css" rel="stylesheet">


    <meta name="description" content="Cisco Talos uncovered and analyzed two critical vulnerabilities in ASUS&#x27; AsIO3.sys driver, highlighting serious security risks and the importance of robust driver design.">
    <link rel="icon" href="https://blog.talosintelligence.com/content/images/size/w256h256/2022/07/talos_o_square.png" type="image/png">
    <link rel="canonical" href="https://blog.talosintelligence.com/decrement-by-one-to-rule-them-all/">
    <meta name="referrer" content="no-referrer-when-downgrade">
    
    <meta property="og:site_name" content="Cisco Talos Blog">
    <meta property="og:type" content="article">
    <meta property="og:title" content="Decrement by one to rule them all: AsIO3.sys driver exploitation">
    <meta property="og:description" content="Cisco Talos uncovered and analyzed two critical vulnerabilities in ASUS&#x27; AsIO3.sys driver, highlighting serious security risks and the importance of robust driver design.">
    <meta property="og:url" content="https://blog.talosintelligence.com/decrement-by-one-to-rule-them-all/">
    <meta property="og:image" content="https://blog.talosintelligence.com/content/images/size/w1200/2025/06/VulnDeepDive.jpg">
    <meta property="article:published_time" content="2025-06-26T10:00:32.000Z">
    <meta property="article:modified_time" content="2025-06-26T10:00:31.000Z">
    <meta property="article:tag" content="Vulnerability Deep Dive">
    <meta property="article:tag" content="vulnerability">
    
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="Decrement by one to rule them all: AsIO3.sys driver exploitation">
    <meta name="twitter:description" content="Cisco Talos uncovered and analyzed two critical vulnerabilities in ASUS&#x27; AsIO3.sys driver, highlighting serious security risks and the importance of robust driver design.">
    <meta name="twitter:url" content="https://blog.talosintelligence.com/decrement-by-one-to-rule-them-all/">
    <meta name="twitter:image" content="https://blog.talosintelligence.com/content/images/size/w1200/2025/06/VulnDeepDive.jpg">
    <meta name="twitter:label1" content="Written by">
    <meta name="twitter:data1" content="Marcin Noga">
    <meta name="twitter:label2" content="Filed under">
    <meta name="twitter:data2" content="Vulnerability Deep Dive, vulnerability">
    <meta name="twitter:site" content="@TalosSecurity">
    <meta property="og:image:width" content="1200">
    <meta property="og:image:height" content="600">
    
    <script type="application/ld+json">
{
    "@context": "https://schema.org",
    "@type": "Article",
    "publisher": {
        "@type": "Organization",
        "name": "Cisco Talos Blog",
        "url": "https://blog.talosintelligence.com/",
        "logo": {
            "@type": "ImageObject",
            "url": "https://blog.talosintelligence.com/content/images/2022/11/TalosBrand_ukraine.svg"
        }
    },
    "author": {
        "@type": "Person",
        "name": "Marcin Noga",
        "url": "https://blog.talosintelligence.com/author/marcin-noga/",
        "sameAs": []
    },
    "headline": "Decrement by one to rule them all: AsIO3.sys driver exploitation",
    "url": "https://blog.talosintelligence.com/decrement-by-one-to-rule-them-all/",
    "datePublished": "2025-06-26T10:00:32.000Z",
    "dateModified": "2025-06-26T10:00:31.000Z",
    "image": {
        "@type": "ImageObject",
        "url": "https://blog.talosintelligence.com/content/images/size/w1200/2025/06/VulnDeepDive.jpg",
        "width": 1200,
        "height": 600
    },
    "keywords": "Vulnerability Deep Dive, vulnerability",
    "description": "Cisco Talos uncovered and analyzed two critical vulnerabilities in ASUS&#x27; AsIO3.sys driver, highlighting serious security risks and the importance of robust driver design.",
    "mainEntityOfPage": "https://blog.talosintelligence.com/decrement-by-one-to-rule-them-all/"
}
    </script>

    <meta name="generator" content="Ghost 5.127">
    <link rel="alternate" type="application/rss+xml" title="Cisco Talos Blog" href="https://blog.talosintelligence.com/rss/">
    
    <script defer src="https://cdn.jsdelivr.net/ghost/sodo-search@~1.5/umd/sodo-search.min.js" data-key="4ffb0139d74ada998f4b141e4d" data-styles="https://cdn.jsdelivr.net/ghost/sodo-search@~1.5/umd/main.css" data-sodo-search="https://cisco-talos-blog.ghost.io/" data-locale="en" crossorigin="anonymous"></script>
    
    <link href="https://blog.talosintelligence.com/webmentions/receive/" rel="webmention">
    <script defer src="/public/cards.min.js?v=ea98fc7d1f"></script><style>:root {--ghost-accent-color: #006db6;}</style>
    <link rel="stylesheet" type="text/css" href="/public/cards.min.css?v=ea98fc7d1f">
    <style type='text/css'>
    img[src*="icon_check_white.svg"] { width: 20px; margin-left: 0px; margin-right: auto; }
    
    #ghost-portal-root { display: none; }
</style>
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-F45RVJG3BK"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-F45RVJG3BK');
</script>
</head>

<body class="post-template tag-vulnerability-deep-dive tag-vulnerability">

    <div id="mobile-page-header" class="desktop-hide">
    <h1>Cisco Talos Blog</h1>
</div>

<nav id="nav">
    <input id="nav-trigger" class="nav-trigger" type="checkbox"/>
    <label for="nav-trigger">
        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="22px" height="16px" viewBox="0 0 22 16">
            <g id="menu-icon">
                <path fill="#FFFFFF" d="M20.5,3h-19C0.672,3,0,2.329,0,1.5S0.672,0,1.5,0h19C21.328,0,22,0.671,22,1.5S21.328,3,20.5,3z"></path>
                <path fill="#FFFFFF" d="M20.5,9.5h-19C0.672,9.5,0,8.828,0,8c0-0.829,0.672-1.5,1.5-1.5h19C21.328,6.5,22,7.171,22,8   C22,8.828,21.328,9.5,20.5,9.5z"></path>
                <path fill="#FFFFFF" d="M20.5,16h-19C0.672,16,0,15.328,0,14.5S0.672,13,1.5,13h19c0.828,0,1.5,0.672,1.5,1.5S21.328,16,20.5,16z"></path>
            </g>
        </svg>
    </label>
    <div id="top-nav-bar">
    </div>

    <div id="navigation">
        <div class="navigation-logos-wrapper">
            <div id="talos-logo-wrapper">
                <a class="navbar-brand" href="https://talosintelligence.com">
                </a>
            </div>
        </div>
        <div class="navigation-links-wrapper">
            <ul class="main-nav-list">
                <li class="nav-item">
                    <div class="primary-link-wrapper">
                        <a class="primary_nav_link" href="https://talosintelligence.com/reputation">
                            <div class="mobile-nav-icon"><!-- Generator: Adobe Illustrator 24.2.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Layer_1" x="0px" y="0px" viewBox="0 0 20 20" height="20px" width="20px" style="enable-background:new 0 0 20 20;" xml:space="preserve">
                            <style type="text/css">
                                .white{fill:#FFFFFF;}
                            </style>
                            <g>
                                <path class="white" d="M19.5,9.5h-1.1c-0.3-4.2-3.6-7.6-7.8-7.8V0.5C10.5,0.2,10.3,0,10,0l0,0C9.7,0,9.5,0.2,9.5,0.5l0,0v1.1   C5.3,1.9,1.9,5.3,1.6,9.5H0.5C0.2,9.5,0,9.7,0,10s0.2,0.5,0.5,0.5l0,0h1.1c0.3,4.2,3.6,7.6,7.8,7.8v1.1c0,0.3,0.2,0.5,0.5,0.5l0,0   c0.3,0,0.5-0.2,0.5-0.5l0,0v-1.1c4.2-0.3,7.6-3.6,7.8-7.8h1.1c0.3,0,0.5-0.2,0.5-0.5C20,9.7,19.8,9.5,19.5,9.5 M16.6,10.5h0.7   c-0.3,3.6-3.2,6.5-6.8,6.8v-0.8c0-0.3-0.2-0.5-0.5-0.5l0,0c-0.3,0-0.5,0.2-0.5,0.5v0.8C5.8,17,3,14.2,2.7,10.5h0.8   C3.8,10.5,4,10.3,4,10S3.8,9.5,3.5,9.5l0,0H2.7C3,5.8,5.8,3,9.5,2.7v0.8C9.5,3.7,9.7,4,10,4l0,0c0.3,0,0.5-0.2,0.5-0.5V2.7   C14.2,3,17,5.8,17.3,9.5h-0.7c-0.3,0-0.5,0.2-0.5,0.5C16.1,10.3,16.3,10.5,16.6,10.5L16.6,10.5"></path>
                                                            <circle class="white" cx="10" cy="10" r="3.2"></circle>
                            </g>
                            </svg>
                            </div>
                            <span class="top-nav-link-text">
                                Intelligence Center
                            </span>
                        </a>
                    </div>
                    <input class="sub-nav-trigger" id="intelligence-sub-trigger" type="checkbox">
                    <label class="sub-nav-trigger-label" for="intelligence-sub-trigger">
                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="48.167px" height="47.75px" viewBox="0 0 48.167 47.75">
                            <circle opacity="0.4" fill="none" stroke="#FFFFFF" stroke-miterlimit="10" cx="24.083" cy="23.875" r="22"></circle>
                            <g>
                                <circle fill="#FFFFFF" cx="24.083" cy="16.068" r="2.496"></circle>
                                <circle fill="#FFFFFF" cx="24.083" cy="23.875" r="2.496"></circle>
                                <circle fill="#FFFFFF" cx="24.083" cy="31.682" r="2.496"></circle>
                            </g>
                        </svg>

                    </label>
                    <ul class="sub-nav sub-nav-single-list">
                        <li class="desktop-hide">
                            <a class="mobile_nav_link" href="https://talosintelligence.com/reputation"><h1>Intelligence Center</h1>
                            </a></li>
                        <li class="desktop-hide">
                            <label class="subnav-back-button" for="intelligence-sub-trigger">BACK</label>
                        </li>
                        <li><a class="secondary_nav_link" href="https://talosintelligence.com/reputation_center">Intelligence Search</a></li>
                        <li><a class="secondary_nav_link" href="https://talosintelligence.com/reputation_center/email_rep">Email &amp; Spam Trends</a></li>
                    </ul>
                    <div class="desktop-hide subnav-overlay"><!-- Generator: Adobe Illustrator 24.2.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Layer_1" x="0px" y="0px" viewBox="0 0 20 20" height="20px" width="20px" style="enable-background:new 0 0 20 20;" xml:space="preserve">
                        <style type="text/css">
                            .white{fill:#FFFFFF;}
                        </style>
                                                <g>
                            <path class="white" d="M19.5,9.5h-1.1c-0.3-4.2-3.6-7.6-7.8-7.8V0.5C10.5,0.2,10.3,0,10,0l0,0C9.7,0,9.5,0.2,9.5,0.5l0,0v1.1   C5.3,1.9,1.9,5.3,1.6,9.5H0.5C0.2,9.5,0,9.7,0,10s0.2,0.5,0.5,0.5l0,0h1.1c0.3,4.2,3.6,7.6,7.8,7.8v1.1c0,0.3,0.2,0.5,0.5,0.5l0,0   c0.3,0,0.5-0.2,0.5-0.5l0,0v-1.1c4.2-0.3,7.6-3.6,7.8-7.8h1.1c0.3,0,0.5-0.2,0.5-0.5C20,9.7,19.8,9.5,19.5,9.5 M16.6,10.5h0.7   c-0.3,3.6-3.2,6.5-6.8,6.8v-0.8c0-0.3-0.2-0.5-0.5-0.5l0,0c-0.3,0-0.5,0.2-0.5,0.5v0.8C5.8,17,3,14.2,2.7,10.5h0.8   C3.8,10.5,4,10.3,4,10S3.8,9.5,3.5,9.5l0,0H2.7C3,5.8,5.8,3,9.5,2.7v0.8C9.5,3.7,9.7,4,10,4l0,0c0.3,0,0.5-0.2,0.5-0.5V2.7   C14.2,3,17,5.8,17.3,9.5h-0.7c-0.3,0-0.5,0.2-0.5,0.5C16.1,10.3,16.3,10.5,16.6,10.5L16.6,10.5"></path>
                                                    <circle class="white" cx="10" cy="10" r="3.2"></circle>
                        </g>
                        </svg>
                    </div>
                </li>
                <li class="nav-item">
                    <div class="primary-link-wrapper">
                        <a class="primary_nav_link" href="https://talosintelligence.com/vulnerability_info"><div class="mobile-nav-icon"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="26px" height="20px" viewBox="0 0 26 20">
                            <g id="vuln-icon" class="nav-icon">
                                <path fill="#FFFFFF" d="M24.256,18.49L13.872,0.503C13.692,0.192,13.36,0,13,0c-0.359,0-0.692,0.192-0.872,0.503L1.744,18.49  c-0.18,0.312-0.18,0.695,0,1.006C1.924,19.809,2.257,20,2.616,20h20.769c0.359,0,0.691-0.191,0.871-0.504  C24.436,19.186,24.436,18.803,24.256,18.49 M14.268,18.215h-2.533v-1.85h2.533V18.215z M14.268,15.441h-2.533L10.89,6.515h4.222  L14.268,15.441z"></path>
                            </g>
                        </svg>
                        </div>
                            <span class="top-nav-link-text">
                            Vulnerability Research
                            </span>
                        </a></div>
                    <input class="sub-nav-trigger" id="vuln-sub-trigger" type="checkbox">
                    <label class="sub-nav-trigger-label" for="vuln-sub-trigger">
                        <div class="mobile-nav-icon">
                            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="48.167px" height="47.75px" viewBox="0 0 48.167 47.75">
                            <circle opacity="0.4" fill="none" stroke="#FFFFFF" stroke-miterlimit="10" cx="24.083" cy="23.875" r="22"></circle>
                            <g>
                                <circle fill="#FFFFFF" cx="24.083" cy="16.068" r="2.496"></circle>
                                <circle fill="#FFFFFF" cx="24.083" cy="23.875" r="2.496"></circle>
                                <circle fill="#FFFFFF" cx="24.083" cy="31.682" r="2.496"></circle>
                            </g>
                        </svg>
                        </div>
                    </label>
                    <ul class="sub-nav sub-nav-single-list">
                        <li class="desktop-hide">
                            <a href="https://talosintelligence.com/vulnerability_info"><h1>Vulnerability Research</h1>
                            </a></li>
                        <li class="desktop-hide">
                            <label class="subnav-back-button" for="vuln-sub-trigger">BACK</label>
                        </li>
                        <li><a class="vulnerabilty-info-nav-link" href="https://talosintelligence.com/vulnerability_reports">Vulnerability Reports</a></li>
                        <li><a class="vulnerabilty-info-nav-link" href="https://talosintelligence.com/ms_advisories">Microsoft Advisories</a></li>
                    </ul>
                    <div class="desktop-hide subnav-overlay">
                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="26px" height="20px" viewBox="0 0 26 20">
                        <g id="vuln-icon" class="nav-icon">
                            <path fill="#FFFFFF" d="M24.256,18.49L13.872,0.503C13.692,0.192,13.36,0,13,0c-0.359,0-0.692,0.192-0.872,0.503L1.744,18.49  c-0.18,0.312-0.18,0.695,0,1.006C1.924,19.809,2.257,20,2.616,20h20.769c0.359,0,0.691-0.191,0.871-0.504  C24.436,19.186,24.436,18.803,24.256,18.49 M14.268,18.215h-2.533v-1.85h2.533V18.215z M14.268,15.441h-2.533L10.89,6.515h4.222  L14.268,15.441z"></path>
                        </g>
                        </svg>
                    </div>
                </li>


               <li class="nav-item">
                   <div class="primary-link-wrapper">
                        <a class="primary_nav_link" href="https://talosintelligence.com/incident_response">
                           <div class="mobile-nav-icon">
                               <svg xmlns="http://www.w3.org/2000/svg" width="111.588" height="148.311" viewBox="0 0 111.588 148.311">
                                    <path d="M1.181,128.446v15.7a4.167,4.167,0,0,0,4.167,4.167h100.9a4.167,4.167,0,0,0,4.167-4.167v-15.7a4.167,4.167,0,0,0-4.167-4.167H5.348a4.167,4.167,0,0,0-4.167,4.166M55.8,63.109a3.277,3.277,0,1,1,0,6.553c-10.344,0-20.755,8.578-20.755,18.57a3.277,3.277,0,1,1-6.554,0C28.489,73.947,41.93,63.109,55.8,63.109Zm0-12.016c-21.787,0-39.325,17.81-39.325,39.937v26.7H95.122V91.03c0-22.128-17.537-39.937-39.324-39.937m52.365-38.3a3.291,3.291,0,0,0-2.254,1.024L88.432,31.294a3.283,3.283,0,0,0,4.642,4.644l17.478-17.479a3.278,3.278,0,0,0-2.389-5.666m-105.138,0a3.276,3.276,0,0,0-1.98,5.666L18.522,35.938a3.283,3.283,0,0,0,4.643-4.644L5.687,13.817A3.255,3.255,0,0,0,3.025,12.793ZM55.389.026a3.276,3.276,0,0,0-2.867,3.345V19.642a3.277,3.277,0,1,0,6.554,0V3.371A3.283,3.283,0,0,0,55.389.026Z" fill="#fff"></path>
                                </svg>
                            </div>
                            <span class="top-nav-link-text">
                                Incident Response
                            </span>
                       </a>
                   </div>
                   <input class="sub-nav-trigger" id="ir-sub-trigger" type="checkbox">
                   <label class="sub-nav-trigger-label" for="ir-sub-trigger">
                       <div class="mobile-nav-icon">
                           <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="48.167px" height="47.75px" viewBox="0 0 48.167 47.75">
                                <circle opacity="0.4" fill="none" stroke="#FFFFFF" stroke-miterlimit="10" cx="24.083" cy="23.875" r="22"></circle>
                               <g>
                                <circle fill="#FFFFFF" cx="24.083" cy="16.068" r="2.496"></circle>
                                <circle fill="#FFFFFF" cx="24.083" cy="23.875" r="2.496"></circle>
                                <circle fill="#FFFFFF" cx="24.083" cy="31.682" r="2.496"></circle>
                               </g>
                           </svg>
                       </div>
                   </label>
                   <ul class="sub-nav sub-nav-single-list">
                       <li class="desktop-hide">
                           <a href="/incident_response">
                               <h1>Incident Response</h1>
                           </a>
                        </li>
                       <li class="desktop-hide">
                           <label class="subnav-back-button" for="ir-sub-trigger">BACK</label>
                       </li>
                       <li>
                           <a class="secondary_nav_link" href="https://talosintelligence.com/incident_response/services#reactive-services">Reactive Services</a>
                       </li>
                       <li>
                           <a class="secondary_nav_link" href="https://talosintelligence.com/incident_response/services#proactive-services">Proactive Services</a></li>
                       <li>
                           <a href="https://talosintelligence.com/incident_response/contact">Emergency Support</a>
                        </li>
                   </ul>
                   <div class="desktop-hide subnav-overlay"><svg xmlns="http://www.w3.org/2000/svg" width="111.588" height="148.311" viewBox="0 0 111.588 148.311">
                     <path d="M1.181,128.446v15.7a4.167,4.167,0,0,0,4.167,4.167h100.9a4.167,4.167,0,0,0,4.167-4.167v-15.7a4.167,4.167,0,0,0-4.167-4.167H5.348a4.167,4.167,0,0,0-4.167,4.166M55.8,63.109a3.277,3.277,0,1,1,0,6.553c-10.344,0-20.755,8.578-20.755,18.57a3.277,3.277,0,1,1-6.554,0C28.489,73.947,41.93,63.109,55.8,63.109Zm0-12.016c-21.787,0-39.325,17.81-39.325,39.937v26.7H95.122V91.03c0-22.128-17.537-39.937-39.324-39.937m52.365-38.3a3.291,3.291,0,0,0-2.254,1.024L88.432,31.294a3.283,3.283,0,0,0,4.642,4.644l17.478-17.479a3.278,3.278,0,0,0-2.389-5.666m-105.138,0a3.276,3.276,0,0,0-1.98,5.666L18.522,35.938a3.283,3.283,0,0,0,4.643-4.644L5.687,13.817A3.255,3.255,0,0,0,3.025,12.793ZM55.389.026a3.276,3.276,0,0,0-2.867,3.345V19.642a3.277,3.277,0,1,0,6.554,0V3.371A3.283,3.283,0,0,0,55.389.026Z" fill="#fff"></path>
                   </svg>
                </div>
               </li>





                <li class="nav-item">
                    <a class="primary_nav_link" href="https://blog.talosintelligence.com">
                        <div class="mobile-nav-icon">
                        <!-- Generator: Adobe Illustrator 16.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Layer_1" x="0px" y="0px" width="260px" height="296.5px" viewBox="0 0 260 296.5" enable-background="new 0 0 260 296.5" xml:space="preserve">
                        <path fill="#FFFFFF" d="M243.586,42.404h-14.448c-0.943-4.513-3.143-8.813-6.616-12.33L201.793,9.098  c-4.7-4.757-10.972-7.377-17.66-7.377c-6.578,0-12.777,2.547-17.457,7.173l-33.875,33.511H17.586c-6.6,0-12,5.399-12,12V226.28  c0,6.6,5.4,12,12,12H153.83l84.21,56.278l-27.448-56.278h32.994c6.6,0,12-5.4,12-12V54.404  C255.586,47.804,250.186,42.404,243.586,42.404z M214.662,48.045c-0.01,0.2-0.021,0.399-0.044,0.599  c-0.008,0.069-0.021,0.139-0.031,0.207c-0.046,0.345-0.113,0.688-0.196,1.026c-0.034,0.137-0.063,0.273-0.103,0.408  c-0.039,0.135-0.087,0.267-0.133,0.399c-0.051,0.151-0.102,0.302-0.16,0.45c-0.049,0.126-0.105,0.249-0.16,0.373  c-0.068,0.153-0.139,0.307-0.216,0.457c-0.059,0.116-0.12,0.23-0.184,0.345c-0.088,0.157-0.181,0.312-0.278,0.465  c-0.065,0.104-0.13,0.206-0.2,0.308c-0.115,0.168-0.239,0.33-0.366,0.492c-0.064,0.081-0.124,0.165-0.19,0.244  c-0.199,0.238-0.409,0.472-0.635,0.694L82.458,182.308l-47.932,12.871l13.427-47.74L177.223,19.561  c1.917-1.895,4.414-2.84,6.911-2.84c2.534,0,5.068,0.975,6.99,2.92l20.726,20.974c0.545,0.552,1.002,1.156,1.39,1.79  c0.574,0.938,0.975,1.951,1.206,2.993c0.004,0.021,0.01,0.04,0.014,0.06c0.049,0.226,0.086,0.453,0.119,0.682  c0.008,0.06,0.017,0.118,0.024,0.178c0.026,0.211,0.045,0.424,0.058,0.636c0.004,0.077,0.007,0.153,0.009,0.23  c0.007,0.203,0.011,0.407,0.005,0.61C214.673,47.877,214.666,47.961,214.662,48.045z"></path>
                        </svg>
                    </div>
                        <span class="top-nav-link-text">Blog</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a class="primary_nav_link" href="https://support.talosintelligence.com">
                        <div class="mobile-nav-icon">
                            <svg xmlns="http://www.w3.org/2000/svg" width="26px" height="20px" viewBox="0 0 123.17 159.292">
                            <path d="M61.59,0,0,17.069v85.32c0,23.472,61.59,56.9,61.59,56.9s61.58-36.288,61.58-56.9V17.069Zm-.433,149.746C38.314,136.662,8.128,114.3,8.128,102.389V23.239l53.029-14.7Z" fill="#fff"></path>
                        </svg>
                        </div>
                        <span class="top-nav-link-text">Support</span>
                    </a>
                </li>
            </ul>


<!--                <li class="nav-item desktop-hide">-->
<!--                    <button class="search-button" data-ghost-search><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg> <span>Search Blog</span></button>-->
<!--                </li>-->

            <ul class="secondary-nav-list">
                <div class="more-desktop-link">
                    <div class="more-link-wrapper">
                        <span class="more-nav-link">
                            <div class="desktop-nav-icon more-menu-icon">
                                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="22px" height="16px" viewBox="0 0 22 16">
                                <g id="menu-icon">
                                    <path fill="#FFFFFF" d="M20.5,3h-19C0.672,3,0,2.329,0,1.5S0.672,0,1.5,0h19C21.328,0,22,0.671,22,1.5S21.328,3,20.5,3z"></path>
                                    <path fill="#FFFFFF" d="M20.5,9.5h-19C0.672,9.5,0,8.828,0,8c0-0.829,0.672-1.5,1.5-1.5h19C21.328,6.5,22,7.171,22,8   C22,8.828,21.328,9.5,20.5,9.5z"></path>
                                    <path fill="#FFFFFF" d="M20.5,16h-19C0.672,16,0,15.328,0,14.5S0.672,13,1.5,13h19c0.828,0,1.5,0.672,1.5,1.5S21.328,16,20.5,16z"></path>
                                </g>
                                </svg>
                            </div>
                            <span class="top-nav-link-text top-nav-more-text">
                            More
                            </span>
                        </span>
                    </div>
                </div>
                <li class="nav-item more-text-link">
                    <div class="more-link-wrapper more-link-wrapper-mobile">
                        <span class="more-nav-link">
                            <div class="mobile-nav-icon"><!-- Generator: Adobe Illustrator 24.2.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Layer_1" x="0px" y="0px" viewBox="0 0 20 20" style="enable-background:new 0 0 20 20;" width="25px" height="25px" xml:space="preserve">
                                <style type="text/css">
                                    .white{fill:#FFFFFF;}
                                </style>
                                <path class="white" d="M19.4,17.1c0,0.1-0.1,0-0.2,0c0,0-1.3-0.9-2-1.4c-0.2-0.1-0.5-0.1-0.6,0.1c-0.3,0.3-0.6,0.8-0.9,1.3  c-0.1,0.2-0.1,0.5,0.1,0.6l2,1.5c0.1,0,0,0.1,0.1,0.2c0,0.1,0,0.1-0.1,0.2c-1.2,0.5-2.6,0.2-3.5-0.7c-0.8-0.9-1-2-0.7-3.1L4.5,6.5  c-1,0.3-2.3,0-3-0.9c-0.8-0.9-1.1-1.7-1-2.7c0-0.1,0-0.1,0.1-0.2c0.1,0,0.2,0.1,0.2,0.1l2,1.5C3,4.4,3.3,4.5,3.4,4.2  c0,0,0.5-0.8,0.9-1.3c0.1-0.2,0.1-0.5-0.1-0.6L2.3,0.9c-0.1,0,0-0.1-0.1-0.3c0-0.1,0-0.1,0.1-0.2C3.5-0.1,5,0.2,5.8,1.1  c0.8,0.9,1,2,0.7,3.1l9.1,9.3c1-0.3,2.3,0,3,0.9c0.7,0.7,0.9,1.5,0.9,2.5C19.5,16.9,19.5,17,19.4,17.1z"></path>
                                </svg>
                            </div>
                            <span class="top-nav-link-text top-nav-more-text">
                            Security Resources
                            </span>
                        </span>
                    </div>
                    <input class="sub-nav-trigger" id="security-resources-sub-trigger" type="checkbox">
                    <label class="sub-nav-trigger-label" for="security-resources-sub-trigger">
                        <div class="mobile-nav-icon"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="48.167px" height="47.75px" viewBox="0 0 48.167 47.75">
                            <circle opacity="0.4" fill="none" stroke="#FFFFFF" stroke-miterlimit="10" cx="24.083" cy="23.875" r="22"></circle>
                            <g>
                                <circle fill="#FFFFFF" cx="24.083" cy="16.068" r="2.496"></circle>
                                <circle fill="#FFFFFF" cx="24.083" cy="23.875" r="2.496"></circle>
                                <circle fill="#FFFFFF" cx="24.083" cy="31.682" r="2.496"></circle>
                            </g>
                        </svg>
                        </div>
                    </label>
                    <div class="sub-nav sub-nav-multiple-list sub-nav-multiple-list-left">
                        <div class="sub-nav-multiple-wrapper">
                            <div class="sub-nav-list-top-of-mobile-wrapper">
                                <h1 class="sub-nav-list-header sub-nav-list-top-of-mobile">Security Resources</h1>
                                <ul class="sub-nav-list">
                                    <li class="desktop-hide">
                                        <label class="subnav-back-button" for="security-resources-sub-trigger">BACK</label>
                                    </li>
                                </ul>
                            </div>
                            <div class="sub-nav-list-item-wrapper">
                                <span class="sub-nav-desktop-header uppercase">Security Resources</span>
                                <ul class="sub-nav-list">
                                    <li>
                                        <a href="https://talosintelligence.com/software"><span>Open Source Security Tools</span>
                                        </a></li>
                                    <li>
                                        <a href="https://talosintelligence.com/categories"><span>Intelligence Categories Reference</span>
                                        </a></li>
                                    <li>
                                        <a href="https://talosintelligence.com/secure-endpoint-naming"><span>Secure Endpoint Naming Reference</span>
                                        </a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="desktop-hide subnav-overlay"><!-- Generator: Adobe Illustrator 24.2.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Layer_1" x="0px" y="0px" viewBox="0 0 20 20" style="enable-background:new 0 0 20 20;" width="25px" height="25px" xml:space="preserve">
                        <style type="text/css">
                            .white{fill:#FFFFFF;}
                        </style>
                                                <path class="white" d="M19.4,17.1c0,0.1-0.1,0-0.2,0c0,0-1.3-0.9-2-1.4c-0.2-0.1-0.5-0.1-0.6,0.1c-0.3,0.3-0.6,0.8-0.9,1.3  c-0.1,0.2-0.1,0.5,0.1,0.6l2,1.5c0.1,0,0,0.1,0.1,0.2c0,0.1,0,0.1-0.1,0.2c-1.2,0.5-2.6,0.2-3.5-0.7c-0.8-0.9-1-2-0.7-3.1L4.5,6.5  c-1,0.3-2.3,0-3-0.9c-0.8-0.9-1.1-1.7-1-2.7c0-0.1,0-0.1,0.1-0.2c0.1,0,0.2,0.1,0.2,0.1l2,1.5C3,4.4,3.3,4.5,3.4,4.2  c0,0,0.5-0.8,0.9-1.3c0.1-0.2,0.1-0.5-0.1-0.6L2.3,0.9c-0.1,0,0-0.1-0.1-0.3c0-0.1,0-0.1,0.1-0.2C3.5-0.1,5,0.2,5.8,1.1  c0.8,0.9,1,2,0.7,3.1l9.1,9.3c1-0.3,2.3,0,3,0.9c0.7,0.7,0.9,1.5,0.9,2.5C19.5,16.9,19.5,17,19.4,17.1z"></path>
                        </svg>
                    </div>
                </li>
                <li class="nav-item">
                    <div class="more-link-wrapper more-link-wrapper-mobile">
                        <span class="more-nav-link">
                            <div class="mobile-nav-icon"><!-- Generator: Adobe Illustrator 24.2.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Layer_1" x="0px" y="0px" viewBox="0 0 20 20" width="25px" height="25px" style="enable-background:new 0 0 20 20;" xml:space="preserve">
                                <style type="text/css">
                                    .sticoncomment{fill-rule:evenodd;clip-rule:evenodd;fill:#FFFFFF;}
                                </style>
                                <path class="sticoncomment" d="M13.6,7.1H6.4c-0.3,0-0.6-0.3-0.6-0.6c0-0.3,0.3-0.6,0.6-0.6l7.2,0c0.3,0,0.6,0.3,0.6,0.6  C14.2,6.8,13.9,7.1,13.6,7.1L13.6,7.1z M13.6,9.4H6.4c-0.3,0-0.6-0.3-0.6-0.6s0.3-0.6,0.6-0.6l7.2,0c0.3,0,0.6,0.3,0.6,0.6  C14.2,9.2,13.9,9.4,13.6,9.4L13.6,9.4z M11.5,11.7H6.4c-0.3,0-0.6-0.3-0.6-0.6c0-0.3,0.3-0.6,0.6-0.6h5.1c0.3,0,0.6,0.3,0.6,0.6  C12.1,11.5,11.8,11.7,11.5,11.7z M15.8,3H4.2C3.5,3,3,3.5,3,4.2V17l2.8-2.3h10c0.6,0,1.2-0.5,1.2-1.2V4.2C17,3.5,16.5,3,15.8,3  L15.8,3z"></path>
                                </svg>
                            </div>
                            <span class="top-nav-link-text top-nav-more-text">
                            Media
                            </span>
                        </span>
                    </div>
                    <input class="sub-nav-trigger" id="media-sub-trigger" type="checkbox">
                    <label class="sub-nav-trigger-label" for="media-sub-trigger">
                        <div class="mobile-nav-icon">
                            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="48.167px" height="47.75px" viewBox="0 0 48.167 47.75">
                            <circle opacity="0.4" fill="none" stroke="#FFFFFF" stroke-miterlimit="10" cx="24.083" cy="23.875" r="22"></circle>
                            <g>
                                <circle fill="#FFFFFF" cx="24.083" cy="16.068" r="2.496"></circle>
                                <circle fill="#FFFFFF" cx="24.083" cy="23.875" r="2.496"></circle>
                                <circle fill="#FFFFFF" cx="24.083" cy="31.682" r="2.496"></circle>
                            </g>
                            </svg>
                        </div>
                    </label>
                    <div class="sub-nav sub-nav-multiple-list sub-nav-multiple-list-middle">
                        <div class="sub-nav-multiple-wrapper">
                            <div class="sub-nav-list-top-of-mobile-wrapper">
                                <h1 class="sub-nav-list-header sub-nav-list-top-of-mobile">Media</h1>
                                <ul class="sub-nav-list">
                                    <li class="desktop-hide">
                                        <label class="subnav-back-button" for="media-sub-trigger">BACK</label>
                                    </li>
                                </ul>
                            </div>
                            <div class="sub-nav-list-item-wrapper">
                                <span class="sub-nav-desktop-header uppercase">Media</span>
                                <ul class="sub-nav-list">
                                    <li>
                                        <a href="https://blog.talosintelligence.com"><span>Talos Intelligence Blog</span>
                                        </a></li>
                                    <li>
                                        <a href="https://blog.talosintelligence.com/category/threat-source-newsletter/"><span>Threat Source Newsletter</span>
                                        </a></li>
                                    <li>
                                        <a href="https://talosintelligence.com/podcasts/shows/beers_with_talos"><span>Beers with Talos Podcast</span>
                                        </a></li>
                                    <li>
                                        <a href="https://talosintelligence.com/podcasts/shows/talos_takes"><span>Talos Takes Podcast</span>
                                        </a></li>
                                    <li>
                                        <a target="_blank" href="https://www.youtube.com/channel/UCPZ1DtzQkStYBSG3GTNoyfg/featured"><span>Talos Videos</span>
                                        </a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="desktop-hide subnav-overlay"><!-- Generator: Adobe Illustrator 24.2.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Layer_1" x="0px" y="0px" viewBox="0 0 20 20" width="25px" height="25px" style="enable-background:new 0 0 20 20;" xml:space="preserve">
                        <style type="text/css">
                            .sticoncomment{fill-rule:evenodd;clip-rule:evenodd;fill:#FFFFFF;}
                        </style>
                        <path class="sticoncomment" d="M13.6,7.1H6.4c-0.3,0-0.6-0.3-0.6-0.6c0-0.3,0.3-0.6,0.6-0.6l7.2,0c0.3,0,0.6,0.3,0.6,0.6  C14.2,6.8,13.9,7.1,13.6,7.1L13.6,7.1z M13.6,9.4H6.4c-0.3,0-0.6-0.3-0.6-0.6s0.3-0.6,0.6-0.6l7.2,0c0.3,0,0.6,0.3,0.6,0.6  C14.2,9.2,13.9,9.4,13.6,9.4L13.6,9.4z M11.5,11.7H6.4c-0.3,0-0.6-0.3-0.6-0.6c0-0.3,0.3-0.6,0.6-0.6h5.1c0.3,0,0.6,0.3,0.6,0.6  C12.1,11.5,11.8,11.7,11.5,11.7z M15.8,3H4.2C3.5,3,3,3.5,3,4.2V17l2.8-2.3h10c0.6,0,1.2-0.5,1.2-1.2V4.2C17,3.5,16.5,3,15.8,3  L15.8,3z"></path>
                        </svg>
                    </div>
                </li>
                <li class="nav-item">
                    <div class="more-link-wrapper more-link-wrapper-mobile">
                        <span class="more-nav-link">
                            <div class="mobile-nav-icon">
                                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="25px" height="25px" viewBox="0 0 55 55">
                                <g>
                                    <g class="mobile-nav-home">
                                        <path fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" d="M45.201,12.343c0.378,0.48,0.758,0.925,1.096,1.401    c2.975,4.207,4.543,8.876,4.494,14.044c-0.05,5.452-1.643,10.386-5.186,14.593c-3.484,4.133-7.929,6.73-13.182,7.895    c-6.313,1.398-12.216,0.275-17.695-3.131c-0.441-0.273-0.847-0.6-1.266-0.904c-0.11-0.078-0.208-0.174-0.337-0.287    c0.127-0.141,0.246-0.27,0.366-0.398c0.887-0.949,1.765-1.904,2.663-2.844c0.114-0.119,0.321-0.217,0.485-0.217    c3.658-0.006,7.318,0,10.975,0.008c3.458,0.006,6.913,0.02,10.369,0.02c0.957,0,1.871-0.193,2.62-0.844    c0.797-0.693,1.157-1.596,1.157-2.643c0.001-7.533,0.003-15.067-0.005-22.601c-0.002-0.309,0.088-0.524,0.3-0.743    C43.098,14.598,44.127,13.49,45.201,12.343"></path>
                                        <path fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" d="M41.402,8.822c-0.99,1.027-1.994,2.021-2.935,3.072    c-0.312,0.35-0.616,0.416-1.036,0.415c-6.98-0.009-13.957-0.007-20.938-0.007c-2.039,0-3.561,1.514-3.561,3.557    c0,6.504,0.002,13.008,0.006,19.512c0.002,0.973,0.011,1.943,0.004,2.914c0,0.133-0.04,0.301-0.127,0.393    c-1.069,1.162-2.15,2.314-3.229,3.469c-0.021,0.023-0.052,0.039-0.109,0.08c-0.159-0.188-0.323-0.369-0.471-0.562    c-2.535-3.348-4.119-7.102-4.605-11.268c-0.61-5.229,0.194-10.229,2.835-14.839c2.669-4.664,6.655-7.805,11.618-9.75    c3.205-1.257,6.533-1.852,9.977-1.621c4.478,0.298,8.553,1.754,12.227,4.325c0.101,0.072,0.197,0.151,0.291,0.229    C41.364,8.755,41.374,8.778,41.402,8.822"></path>
                                        <path fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" d="M39.799,12.47c0.873-0.911,1.749-1.829,2.676-2.797    c0.605,0.564,1.195,1.112,1.816,1.691c-0.941,0.985-1.817,1.903-2.703,2.83c-0.276-0.339-0.511-0.688-0.807-0.975    C40.492,12.941,40.145,12.728,39.799,12.47"></path>
                                        <path fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" d="M10.35,43.279c0.969-1.016,1.885-1.977,2.76-2.893    c0.213,0.369,0.376,0.762,0.639,1.072c0.265,0.312,0.627,0.539,0.98,0.832c-0.853,0.891-1.713,1.791-2.624,2.746    C11.513,44.445,10.939,43.869,10.35,43.279"></path>
                                    </g>
                                </g>
                                </svg>
                            </div>
                            <span class="top-nav-link-text top-nav-more-text">
                            Company
                            </span>
                        </span>
                    </div>
                    <input class="sub-nav-trigger" id="company-sub-trigger" type="checkbox">
                    <label class="sub-nav-trigger-label" for="company-sub-trigger">
                        <div class="mobile-nav-icon">
                            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="48.167px" height="47.75px" viewBox="0 0 48.167 47.75">
                            <circle opacity="0.4" fill="none" stroke="#FFFFFF" stroke-miterlimit="10" cx="24.083" cy="23.875" r="22"></circle>
                            <g>
                                <circle fill="#FFFFFF" cx="24.083" cy="16.068" r="2.496"></circle>
                                <circle fill="#FFFFFF" cx="24.083" cy="23.875" r="2.496"></circle>
                                <circle fill="#FFFFFF" cx="24.083" cy="31.682" r="2.496"></circle>
                            </g>
                        </svg>
                        </div>
                    </label>
                    <div class="sub-nav sub-nav-multiple-list sub-nav-multiple-list-right">
                        <div class="sub-nav-multiple-wrapper">
                            <div class="sub-nav-list-top-of-mobile-wrapper">
                                <h1 class="sub-nav-list-header sub-nav-list-top-of-mobile">Company</h1>
                                <ul class="sub-nav-list">
                                    <li class="desktop-hide">
                                        <label class="subnav-back-button" for="company-sub-trigger">BACK</label>
                                    </li>
                                </ul>
                            </div>
                            <div class="sub-nav-list-item-wrapper">
                                <span class="sub-nav-desktop-header uppercase">Company</span>
                                <ul class="sub-nav-list">
                                    <li>
                                        <a href="https://talosintelligence.com/about"><span>About Talos</span>
                                        </a></li>
                                    <li>
                                        <a href="https://talosintelligence.com/careers"><span>Careers</span>
                                        </a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="desktop-hide subnav-overlay"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="25px" height="25px" viewBox="0 0 55 55">
                        <g>
                            <g class="mobile-nav-home">
                                <path fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" d="M45.201,12.343c0.378,0.48,0.758,0.925,1.096,1.401    c2.975,4.207,4.543,8.876,4.494,14.044c-0.05,5.452-1.643,10.386-5.186,14.593c-3.484,4.133-7.929,6.73-13.182,7.895    c-6.313,1.398-12.216,0.275-17.695-3.131c-0.441-0.273-0.847-0.6-1.266-0.904c-0.11-0.078-0.208-0.174-0.337-0.287    c0.127-0.141,0.246-0.27,0.366-0.398c0.887-0.949,1.765-1.904,2.663-2.844c0.114-0.119,0.321-0.217,0.485-0.217    c3.658-0.006,7.318,0,10.975,0.008c3.458,0.006,6.913,0.02,10.369,0.02c0.957,0,1.871-0.193,2.62-0.844    c0.797-0.693,1.157-1.596,1.157-2.643c0.001-7.533,0.003-15.067-0.005-22.601c-0.002-0.309,0.088-0.524,0.3-0.743    C43.098,14.598,44.127,13.49,45.201,12.343"></path>
                                <path fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" d="M41.402,8.822c-0.99,1.027-1.994,2.021-2.935,3.072    c-0.312,0.35-0.616,0.416-1.036,0.415c-6.98-0.009-13.957-0.007-20.938-0.007c-2.039,0-3.561,1.514-3.561,3.557    c0,6.504,0.002,13.008,0.006,19.512c0.002,0.973,0.011,1.943,0.004,2.914c0,0.133-0.04,0.301-0.127,0.393    c-1.069,1.162-2.15,2.314-3.229,3.469c-0.021,0.023-0.052,0.039-0.109,0.08c-0.159-0.188-0.323-0.369-0.471-0.562    c-2.535-3.348-4.119-7.102-4.605-11.268c-0.61-5.229,0.194-10.229,2.835-14.839c2.669-4.664,6.655-7.805,11.618-9.75    c3.205-1.257,6.533-1.852,9.977-1.621c4.478,0.298,8.553,1.754,12.227,4.325c0.101,0.072,0.197,0.151,0.291,0.229    C41.364,8.755,41.374,8.778,41.402,8.822"></path>
                                <path fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" d="M39.799,12.47c0.873-0.911,1.749-1.829,2.676-2.797    c0.605,0.564,1.195,1.112,1.816,1.691c-0.941,0.985-1.817,1.903-2.703,2.83c-0.276-0.339-0.511-0.688-0.807-0.975    C40.492,12.941,40.145,12.728,39.799,12.47"></path>
                                <path fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" d="M10.35,43.279c0.969-1.016,1.885-1.977,2.76-2.893    c0.213,0.369,0.376,0.762,0.639,1.072c0.265,0.312,0.627,0.539,0.98,0.832c-0.853,0.891-1.713,1.791-2.624,2.746    C11.513,44.445,10.939,43.869,10.35,43.279"></path>
                            </g>
                        </g>
                    </svg>
                    </div>
                </li>
            </ul>
            <div class="nav-search-wrapper">
                <button class="search-button" data-ghost-search>
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg>
                </button>
            </div>
        </div>



    </div>
</nav>

    

    <main id="site-main">

            <div class="banner-content-wrapper">
                <div class="container">
                    <div class="row">
                            <div class="col vulnerability-deep-dive-graphic banner-post-graphic"></div>

                    </div>
                </div>
            </div>
                <div class="container-fluid">
                    <div class="row banner-bg-container banner-bg-2">
                        <div class="col left-bg-2"></div>
                        <div class="col right-bg-2"></div>
                    </div>
                </div>

            
        <div class="container-fluid">
            <div class="row main-content-row">
                <div class="col">
                    <div class="post-full-content">
                        
<article class="post tag-vulnerability-deep-dive tag-vulnerability featured  blog-series-article">

    <h1 class="text-center">Decrement by one to rule them all: AsIO3.sys driver exploitation</h1>

    <div class="text-center m-1">
        <div class="post-author">
            <span>By </span>
                <a href="https://blog.talosintelligence.com/author/marcin-noga/">Marcin Noga</a>
        </div>

        <br/>
        <time class="post-datetime" datetime="June 26, 2025 06:00">
            Thursday, June 26, 2025 06:00
        </time>

        <div class="m-3">
                        <a href="https://blog.talosintelligence.com/category/vulnerability-deep-dive/" class="category primary-category">
                            Vulnerability Deep Dive
                        </a>
                                            <a href="https://blog.talosintelligence.com/category/vulnerability/" class="category primary-category">
                            vulnerability
                        </a>
                            </div>
    </div>

    <section class="post-content-wrapper mt-5">
        <div class="post-content">
            <h2 id="introduction">Introduction</h2><p>Armory Crate and AI Suite are applications used to manage and monitor ASUS motherboards and related components such as the processor, RAM or the increasingly popular RGB lighting. These types of applications often install drivers in the system, which are necessary for direct communication with hardware to configure settings or retrieve critical parameters such as CPU temperature, fan speeds and firmware updates.</p><p>Therefore, it is critical to ensure that drivers are well-written with security in mind and designed such that access to the driver interfaces are limited only to certain services and administrators.</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image5.png" class="kg-image" alt="" loading="lazy" width="1197" height="813" srcset="https://blog.talosintelligence.com/content/images/size/w600/2025/06/image5.png 600w, https://blog.talosintelligence.com/content/images/size/w1000/2025/06/image5.png 1000w, https://blog.talosintelligence.com/content/images/2025/06/image5.png 1197w" sizes="(min-width: 720px) 720px"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 1. Armory Crate application.</em></i></figcaption></figure><p>During the audit of the code and components related to the aforementioned applications, Cisco Talos discovered two critical vulnerabilities in the AsIO3.sys driver. Both vulnerabilities were discovered in the IRP_MJ_CREATE handler:</p><ul><li><a href="https://talosintelligence.com/vulnerability_reports/TALOS-2025-2144"><u>CVE-2025-1533/TALOS-2025-2144 – Asus Armoury Crate AsIO3.sys stack-based buffer overflow vulnerability</u></a></li><li><a href="https://talosintelligence.com/vulnerability_reports/TALOS-2025-2150"><u>CVE-2025-3464/TALOS-2025-2150 – Asus Armoury Crate AsIO3.sys authorization bypass vulnerability</u></a></li></ul><p>The first vulnerability is a stack-based buffer overflow that occurs during the process's ImagePath conversion from "Win32 Path" to "NT Namespace Path”.</p><p>The second vulnerability allowed bypassing the authorization mechanism implemented in the driver, granting access to its functionality not just to the intended service but to any user. With access to a security-critical function within this driver, I successfully developed a fully working exploit that escalates local user privileges to “NT SYSTEM”, which we describe in detail below.</p><p>Please keep in mind that I discovered this exploit before the Windows 11 24H2 update arrived. This update prevents regular users from leaking information such as loaded kernel modules and their addresses via “NtQuerySystemInformation.” This is discussed in further detail below.</p><h2 id="recon-phase">Recon phase</h2><p>While looking for drivers installed alongside the Armory Crate software, I noticed two related to ASUS in the DriverView list.</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image31.png" class="kg-image" alt="" loading="lazy" width="844" height="68" srcset="https://blog.talosintelligence.com/content/images/size/w600/2025/06/image31.png 600w, https://blog.talosintelligence.com/content/images/2025/06/image31.png 844w" sizes="(min-width: 720px) 720px"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 2. Screenshot presenting driver entries belonging to ASUSTek Computer Inc.</em></i></figcaption></figure><p>Focusing on AsIO3.sys, I investigated whether this driver creates any devices and, most importantly, whether a regular user can communicate with such a device.</p><h3 id="obtaining-a-handle-to-the-asusgio3">Obtaining a handle to the Asusgio3</h3><p>Using DeviceTree, we can see the following encouraging picture:</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image27.png" class="kg-image" alt="" loading="lazy" width="368" height="480"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 3. DeviceTree incorrectly displays that the group “everyone” has full access to the Asusgio3 device.</em></i></figcaption></figure><p>The AsIO3.sys driver creates the Asusgio3 device, which nearly everyone in the system has full access to. After a quick check with a simple code that attempts to open a handle to the device, I got the error code:<br> “5 == ERROR_ACCESS_DENIED”.</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image4.png" class="kg-image" alt="" loading="lazy" width="733" height="321" srcset="https://blog.talosintelligence.com/content/images/size/w600/2025/06/image4.png 600w, https://blog.talosintelligence.com/content/images/2025/06/image4.png 733w" sizes="(min-width: 720px) 720px"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 4. Part of PoC code responsible for opening a handle to the Asusgio3 device.</em></i></figcaption></figure><p>This was unexpected based on the DeviceTree interface, so I re-checked the privileges to that device using Sysinternals “accesschk” and got completely opposite results.</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image25.png" class="kg-image" alt="" loading="lazy" width="363" height="84"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 5. Checking permissions for Asusgio3 with “accesschk”.</em></i></figcaption></figure><p>Which is the truth? To find out, I reversed fragments in the AsIO3 driver responsible for handling the “IRP_MJ_CREATE” request.</p><h3 id="analyzing-%E2%80%9Cirpmjcreate%E2%80%9D-handler">Analyzing “IRP_MJ_CREATE” handler</h3><p>By loading the driver and beginning the reversing process, we see a single function handles IRP requests for three different request types.</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image22.png" class="kg-image" alt="" loading="lazy" width="702" height="363" srcset="https://blog.talosintelligence.com/content/images/size/w600/2025/06/image22.png 600w, https://blog.talosintelligence.com/content/images/2025/06/image22.png 702w"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 6. Driver initialization routine where IRP request handlers are assigned to DriverObject.</em></i></figcaption></figure><p>Diving into “callback_irp_dispatch”, I found a fragment responsible for handling the “IRP CREATE” request:</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image15.png" class="kg-image" alt="" loading="lazy" width="805" height="322" srcset="https://blog.talosintelligence.com/content/images/size/w600/2025/06/image15.png 600w, https://blog.talosintelligence.com/content/images/2025/06/image15.png 805w" sizes="(min-width: 720px) 720px"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 7. Part of “callback_irp_dispatch” function code. Functions’ names have been added by the author.</em></i></figcaption></figure><h3 id="authorization-mechanism">Authorization mechanism&nbsp;</h3><p>Checking the “ImageHashCheck” function, we can see the following:</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image8.png" class="kg-image" alt="" loading="lazy" width="814" height="1067" srcset="https://blog.talosintelligence.com/content/images/size/w600/2025/06/image8.png 600w, https://blog.talosintelligence.com/content/images/2025/06/image8.png 814w" sizes="(min-width: 720px) 720px"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 8. ImageHashCheck function body.</em></i></figcaption></figure><p>Using the API “ZwQueryInformationProcess” with the flag “ProcessImageFileNameWin32” (lines 8 and 19), ASUS developers attempt to obtain the image path (the path to the executable file) of the current process — specifically, the process that is trying to obtain a handle to the device.&nbsp;&nbsp;</p><p>Next, in line 26, we see the translation of the path from the “Win32 File Namespace” to the “NT Namespace”. Hold tight — we will return to this line in a moment.</p><p>In lines 35-46, there is a typical SHA256 hash calculation for the current process's executable file. In line 47, the calculated hash is compared with a hardcoded hash in the driver, and if they match, the function returns “true”, allowing the process to obtain a handle to the device.</p><p>When we dump the hash from the global variable “g_sha256Hash” (visible on line 47), it appears as follows:</p>
<!--kg-card-begin: html-->
<pre>python
Python>binascii.b2a_hex(idc.get_bytes(0x0000000140009150,32))
B'c5c176fc0cbf4cc4e37c84b6237392b8bea58dbccf5fbbc902819dfc72ca9efa'
</pre>
<!--kg-card-end: html-->
<p>I calculated the SHA256 hash for “AsusCertService.exe” and saw that it was the same hash:</p>
<!--kg-card-begin: html-->
<pre>powershell
PS C:\Users\icewall> Get-FileHash -Path "C:\Program Files (x86)\ASUS\AsusCertService\AsusCertService.exe" -Algorithm SHA256

Algorithm       Hash                                                                   Path
---------       ----                                                                   ----
SHA256          C5C176FC0CBF4CC4E37C84B6237392B8BEA58DBCCF5FBBC902819DFC72CA9EFA       C:\Program Files (x86)\ASUS\AsusCertService\AsusCertService.exe</pre>
<!--kg-card-end: html-->
<p>With this new understanding, only the “AsusCertService.exe” service and processes whose PIDs are added by it to the allowed list can obtain a handle to the Asusgio3 device. Otherwise, the operation returns the status "Access is denied."</p><h3 id="win32pathtontpathstack-based-buffer-overflow">Win32PathToNtPath - stack based buffer overflow</h3><p>This article will not spend much time on the vulnerability discovered in the “Win32PathToNtPath” function, as it will not be used in the later stages of exploitation. However, it is interesting enough to mention.</p><p>The developers assumed that a Windows path could have a maximum length of approximately “MAX_PATH” (260) characters. Based on this assumption, they copied the received Image Path into a fixed-size 255-character buffer located on the stack, without first checking the actual length of the path. However, this assumption is incorrect, as a path can exceed ~260 characters. As Microsoft documents <a href="https://learn.microsoft.com/en-us/windows/win32/fileio/maximum-file-path-limitation"><u>here</u></a>, “The maximum path of 32,767 characters is approximate, because the "\\?\" prefix may be expanded to a longer string by the system at run time, and this expansion applies to the total length.”</p><p>For more information about this vulnerability, read this advisory: <a href="https://talosintelligence.com/vulnerability_reports/TALOS-2025-2144"><u>CVE-2025-1533/TALOS-2025-2144 – Asus Armoury Crate AsIO3.sys stack-based buffer overflow vulnerability</u></a></p><h2 id="authorization-bypass">Authorization bypass</h2><p>Knowing that the authorization mechanism is based on the “ImagePath” returned by the “ZwQueryInformationProcess” API and the SHA256 hash calculated for the executable file at this path, we can start considering potential bypasses.</p><p>By examining the implementation of “(Nt/Zw)QueryInformationProcess” in the “Windows Research Kernel (WRK)”, I learned that the information about the current process's “ImagePath” is retrieved from the “EPROCESS” structure. Therefore, there is no chance to manipulate its value from User-Mode, but there are still options for potential bypass.&nbsp;</p><h4 id="hardlinks-to-the-rescue">Hardlinks to the rescue</h4><p>Using a hardlink, we can bypass the “ImageHashCheck” routine. First, we create a hardlink to the PoC.exe file.</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image23.png" class="kg-image" alt="" loading="lazy" width="427" height="51"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 9. Creation of a hard link pointing to “PoC.exe”.</em></i></figcaption></figure><p>The “PoC.exe” won’t do much for now — it will simply wait for user input before attempting to open a handle to the Asusgio3 device.</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image9.png" class="kg-image" alt="" loading="lazy" width="842" height="478" srcset="https://blog.talosintelligence.com/content/images/size/w600/2025/06/image9.png 600w, https://blog.talosintelligence.com/content/images/2025/06/image9.png 842w" sizes="(min-width: 720px) 720px"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 10. Image presenting part of the PoC.exe file responsible for opening a handle to the Asusgio3 device.</em></i></figcaption></figure><p>Instead of running our “PoC.exe” directly, we then execute “run.exe” hardlink. As a result, in the EPROCESS structure, ImagePath will point to a hardlink.</p><p>While the run.exe (PoC.exe) is executed and waiting for user input, we then delete the hardlink and create a new one with the same name, but pointing to AsusCertService.exe. However, trying to create a direct hard link to the original AsusCertService.exe location returns the following:</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image29.png" class="kg-image" alt="" loading="lazy" width="819" height="41" srcset="https://blog.talosintelligence.com/content/images/size/w600/2025/06/image29.png 600w, https://blog.talosintelligence.com/content/images/2025/06/image29.png 819w" sizes="(min-width: 720px) 720px"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 11. Due to implemented mitigations, the attempt to create a hardlink to the direct location of AsusCertService.exe failed.</em></i></figcaption></figure><p>Because of mitigations Microsoft introduced years ago, a user can only create a hard link to a file that they have permission to overwrite. This is not a problem in this case, as I can simply copy the file to a temporary location and then create a hard link.</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image28.png" class="kg-image" alt="" loading="lazy" width="729" height="149" srcset="https://blog.talosintelligence.com/content/images/size/w600/2025/06/image28.png 600w, https://blog.talosintelligence.com/content/images/2025/06/image28.png 729w" sizes="(min-width: 720px) 720px"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 12. Successful attempt to create a hardlink to the local copy of AsusCertService.exe.</em></i></figcaption></figure><p>Now I can further run the previously executed PoC.exe process. In this scenario, at the moment when PoC.exe attempts to open a handle to the Asusgio3 device, the run.exe hard link points to the AsusCertService.exe file, and the SHA256 hash matches. When this occurs, we can bypass this authorization mechanism.</p><h2 id="finding-strong-exploitation-primitives">Finding strong exploitation primitives</h2><h3 id="analyzing-the-drivers-functionality">Analyzing the driver's functionality</h3><p>Browsing through the code of the AsIO3.sys driver’s IOCTL handlers, I came across the following functionality, which serves as a good primitive for exploit development. As a regular user, I performed the following actions (among others) using proper IOCTL:</p><ul><li>Read/write to Model-specific registers (MSR)</li><li>Map arbitrary physical memory [address,size] into our process virtual memory</li><li>Read/write I/O ports</li></ul><p>However, the exploitation turned out to be more challenging than this originally indicated.</p><h3 id="exploitation-attempt-with-msr-modification">Exploitation attempt with MSR modification</h3><p>There are at least two crucial MSR registers from a security perspective:</p><ul><li>IA32_LSTAR (0xC0000082)&nbsp;</li><li>IA32_SYSENTER_EIP (0x00000176)</li></ul><p>These MSR registers define the addresses in the kernel where execution is redirected when the SYSCALL or SYSENTER instructions are triggered. By modifying these registers, we can potentially hijack control flow and execute arbitrary code with privileged access, making them an important vector in kernel exploitation. I found a promising-looking handler for IOCTL 0xA040A45C, which allows overwriting the MSR register with arbitrary data.</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image1.png" class="kg-image" alt="" loading="lazy" width="904" height="425" srcset="https://blog.talosintelligence.com/content/images/size/w600/2025/06/image1.png 600w, https://blog.talosintelligence.com/content/images/2025/06/image1.png 904w" sizes="(min-width: 720px) 720px"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 13. IOCTLT handler providing limited way to modify MSR registers.</em></i></figcaption></figure><p>In line 16, the “_writemsr” instruction, where the data we control, coming from “SystemBuffer” (line 8), is used as the MSR register index (“msrReg”) and value (“msrRegVal”).</p><p>At first glance, this looks promising; however, there is a call in line 11 that checks the “msrReg” value (index). Take a closer look:</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image19.png" class="kg-image" alt="" loading="lazy" width="792" height="837" srcset="https://blog.talosintelligence.com/content/images/size/w600/2025/06/image19.png 600w, https://blog.talosintelligence.com/content/images/2025/06/image19.png 792w" sizes="(min-width: 720px) 720px"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 14. MSR filtering function, allowing modification of only a limited set of MSR registers.</em></i></figcaption></figure><p>The MSR index is checked against the list of allowed MSR indexes located in the “MSR_allowedList” array. Unfortunately, this list does not show the crucial registers mentioned earlier: “IA32_LSTAR (0xC0000082)” or “IA32_SYSENTER_EIP (0x00000176)”. Instead, after decoding the indexes to register names and their purposes, we can only manipulate registers without security implications.</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image18.png" class="kg-image" alt="" loading="lazy" width="751" height="485" srcset="https://blog.talosintelligence.com/content/images/size/w600/2025/06/image18.png 600w, https://blog.talosintelligence.com/content/images/2025/06/image18.png 751w" sizes="(min-width: 720px) 720px"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 15. Table presenting part of allowed MSR indexes.</em></i></figcaption></figure><p>With these discoveries, we must look for alternative exploitation methods.</p><h3 id="physical-memory-mapping">Physical memory mapping</h3><p>Looking for other code that could be useful during the exploitation process, I found a few IOCTL handlers giving the possibility to map physical memory into the virtual address space of our process. One of them is “0xA040200C”.</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image24.png" class="kg-image" alt="" loading="lazy" width="825" height="887" srcset="https://blog.talosintelligence.com/content/images/size/w600/2025/06/image24.png 600w, https://blog.talosintelligence.com/content/images/2025/06/image24.png 825w" sizes="(min-width: 720px) 720px"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 16. Function body responsible for physical memory mapping into caller virtual memory.</em></i></figcaption></figure><p>We fully control the values of arguments passed to this function: “phyAddress”, “memSize”. At first glance, it seems as though we can map arbitrary physical memory into our user space. We can leverage this primitive in a few different ways, some of which are below:</p><ul><li>Try to translate the virtual address of important kernel data that we want to modify into a physical address, then use the above code to map it to our user space. Since this address translation cannot be done from User-Mode, we need to use the Kernel-Level API “MmGetPhysicalAddress”.</li><li>Consistently map successive portions of physical memory and search for structures such as the EPROCESS structure of the SYSTEM process to later replace our process's security token with the token belonging to the SYSTEM process.</li><li>Using knowledge about “Low Stub” (PPROCESSOR_START_BLOCK structure), read the value of the CR3 register (PML4 base address) and then, by reading other entries from the memory paging structures, manually translate any virtual address to a physical one.</li></ul><p><a href="https://www.slideshare.net/slideshow/0x003-exploiting-loldrivers-physical-memory-mayhem/259167836"><u>Russell Sanford’s “Exploiting LOLDrivers” presentation</u></a> provides more information about these methods, but I had to choose one adequate for the situation.</p><p>Unfortunately, I can’t directly translate virtual addresses to physical ones via MmGetPhysicalAddress<strong> </strong>because there is no way to call this API directly in this driver. Searching through physical memory is very time-consuming and might be problematic (see other examples of implementations and the issues people encountered when choosing this path).</p><p>In the end, I chose to implement the “Low Stub” method to manually translate virtual addresses to physical ones. Before doing this, I looked at the function called in line 18, which I named “checkPhyMemoryRange”.</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image11.png" class="kg-image" alt="" loading="lazy" width="867" height="332" srcset="https://blog.talosintelligence.com/content/images/size/w600/2025/06/image11.png 600w, https://blog.talosintelligence.com/content/images/2025/06/image11.png 867w" sizes="(min-width: 720px) 720px"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 17. checkPhyMemoryRange body, allowing mapping only certain ranges of physical memory.</em></i></figcaption></figure><p>Developers defined certain physical memory address ranges located under the “g_goodRanges” variable. If the specified range does not fit pre-defined ranges, the function returns true, continues execution and results in an error code.</p><p>When checking the location of the “Low Stub” “PPROCESSOR_START_BLOCK structure”, we're able to read it. In the same way, we could read the value of the CR3 register pointing to the PML4 base address.</p><p>The next entry from the memory mapping structures pointed to a location outside the allowed address ranges. As a result, I abandoned this approach.</p><h3 id="decrement-by-one-to-rule-them-all">Decrement by one to rule them all</h3><p>Looking for new useful piece of code, I spotted the following “IOCTL 0xa0402450” handler:</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image13.png" class="kg-image" alt="" loading="lazy" width="828" height="155" srcset="https://blog.talosintelligence.com/content/images/size/w600/2025/06/image13.png 600w, https://blog.talosintelligence.com/content/images/2025/06/image13.png 828w" sizes="(min-width: 720px) 720px"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 18. IOCTL handler allowing for a call “ObfDereferenceObject” with an arbitrary address controlled by the user.</em></i></figcaption></figure><p>Users can fully control all three arguments. At first glance, this code might look quite harmless, but when I dove into internals of “ObfDereferenceObject”, I saw the following:&nbsp;&nbsp;</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image12.png" class="kg-image" alt="" loading="lazy" width="480" height="85"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 19. A small part of the implementation of the “ObfDereferenceObject” API.</em></i></figcaption></figure><p>Being able to pass arbitrary addresses to “ObfDereferenceObject”, I can decrement any memory value by 1. To be precise, using “ObfDereferenceObject” I decrement by 1 memory located at “Object - 0x30”. I kept this in mind when writing the exploit.</p><h2 id="are-there-enough-puzzles">Are there enough puzzles?</h2><p>But how can we turn these primitives into something useful? Do we need an additional memory leak? When I decided to create a fully working exploit, I assumed a scenario where the code would be executed by a local user (process integrity level: medium). Those familiar with the exploitation process on Windows know that NtQuerySystemInformation can provide very useful information about kernel structures.</p><p>However, it’s 2025 and Windows 11 is in use. I remembered <a href="https://windows-internals.com/kaslr-leaks-restriction/"><u>news about an upcoming mitigation</u></a> that would prevent regular users from leaking information such as loaded kernel modules and their addresses via “NtQuerySystemInformation”.</p><p>At the beginning of February, when I wrote a fully working exploit, my Windows 11 still did not get the 24H2 update. It was still “ntoskrnl.exe - 10.0.22621.4890 (WinBuild.160101.0800)”.</p><p>After I finished writing this article in March 2025, I could see that my 24H2 update finally arrived (“ntoskrnl.exe -10.0.26100.3476 (WinBuild.160101.0800)”). Leaking kernel addresses with “NtQuerySystemInformation” is no longer possible.</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image26.png" class="kg-image" alt="" loading="lazy" width="840" height="478" srcset="https://blog.talosintelligence.com/content/images/size/w600/2025/06/image26.png 600w, https://blog.talosintelligence.com/content/images/2025/06/image26.png 840w" sizes="(min-width: 720px) 720px"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 20. ntoskrnl.exe before mitigation visible at the top, where bottom part presents ntoskrnl.exe with implemented mitigation.</em></i></figcaption></figure><h2 id="exploitation">Exploitation</h2><p>Armed with all the knowledge mentioned above, I began writing the exploit.</p><h3 id="leak-own-thread-kthread-structure-address">Leak own thread KTHREAD structure address</h3><p>As mentioned in the previous paragraph, users can utilize the “NtQuerySystemInformation” API to leak, among others, the address of the “KTHREAD” structure for its own thread. This is where such a simple primitive as “decrement by one” becomes useful.</p><p>The “KTHREAD” structure at offset “0x232” has a field called “PreviousMode”, which for User-Mode threads is set to 1. That field is very important and is checked by multiple kernel-level APIs, eventually limiting their functionality if a user calls a particular syscall from User-Mode.</p><p>For example, examine what happens when the API calls “ReadProcessMemory,” which calls syscall “NtReadVirtualMemory (MiReadWriteVirtualMemory)”.</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image30.png" class="kg-image" alt="" loading="lazy" width="824" height="742" srcset="https://blog.talosintelligence.com/content/images/size/w600/2025/06/image30.png 600w, https://blog.talosintelligence.com/content/images/2025/06/image30.png 824w" sizes="(min-width: 720px) 720px"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 21. Part of NtReadVirtualMemory implementation showing meaning of PreviousMode field.</em></i></figcaption></figure><p>As we can see at the beginning, the syscall obtains the current thread structure at line 11. Next, in line 13, there is a special condition for the case when PreviousMode is set to 1 (User-Mode). In line 23, there is a check verifying whether the address pointed to by the user (“BaseAddress”), when increased by the requested memory size, exceeds the maximum address where user-mode components are mapped. This ensures that a user making a call from User-Mode cannot read any memory from the Kernel-Mode address space.</p><p>Based on this fact, I changed PreviousMode for my own thread by decrementing its value from “1” to “0”, effectively changing its status from User-Mode to Kernel-Mode. This allows me, among other things, to read and write across the entire address space.</p><p>To find the address of “KTHREAD” for my own thread, I followed these steps:</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image14.png" class="kg-image" alt="" loading="lazy" width="718" height="399" srcset="https://blog.talosintelligence.com/content/images/size/w600/2025/06/image14.png 600w, https://blog.talosintelligence.com/content/images/2025/06/image14.png 718w"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 22. Using “NtQuerySystemInformation” to obtain information about all opened handles in the system.</em></i></figcaption></figure><p>To identify my own thread, I opened a handle to it in line 8. (I later used the handle value to spot related to its structure.) Calling “NtQuerySystemInformation” with “SystemHandleInformation” class, I obtained information about all handles in the system. To spot my own thread handle, I filtered the results looking for a handle value, process ID and object type (thread).</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image6.png" class="kg-image" alt="" loading="lazy" width="620" height="216" srcset="https://blog.talosintelligence.com/content/images/size/w600/2025/06/image6.png 600w, https://blog.talosintelligence.com/content/images/2025/06/image6.png 620w"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 23. Searching for structure related to their own thread.</em></i></figcaption></figure><h3 id="change-previousmode">Change PreviousMode</h3><p>Now that I had the “KTHREAD” address and primitive to change the “PreviousMode” field, I combined it together:</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image7.png" class="kg-image" alt="" loading="lazy" width="529" height="311"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 24. Initial part of the exploit code.</em></i></figcaption></figure><p>I obtained a pointer to the EPROCESS structure simply by using information about its location from KTHREAD. EPROCESS will be discussed in more detail shortly. Remember that “ObfDereferenceObject” subtracts 0x30 from the address passed as an argument, which is why in line 900, 0x30 is added to the PreviousMode address.&nbsp;&nbsp;</p><p>Next, thanks to line 903, we have time to swap the symlink destination and bypass the authorization mechanism before opening a handle to the Asusgio3 device. Inside the “DecrementPreviousMode” function, I simply opened a handle to “Asusgio3” and sent a properly formatted buffer to trigger the primitive.</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image16.png" class="kg-image" alt="" loading="lazy" width="912" height="341" srcset="https://blog.talosintelligence.com/content/images/size/w600/2025/06/image16.png 600w, https://blog.talosintelligence.com/content/images/2025/06/image16.png 912w" sizes="(min-width: 720px) 720px"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 25. Code responsible for sending IRP requests triggering a call to a “ObfDereferenceObject” API with the arbitrary address.</em></i></figcaption></figure><h3 id="stealing-token">Stealing token</h3><p>The “PreviousMode” field of the thread has now been changed to “Kernel-Mode”, allowing me to read the entire virtual address space.&nbsp; With this capability, the first step is to read and store the address location of the EPROCESS structure.</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image3.png" class="kg-image" alt="" loading="lazy" width="976" height="223" srcset="https://blog.talosintelligence.com/content/images/size/w600/2025/06/image3.png 600w, https://blog.talosintelligence.com/content/images/2025/06/image3.png 976w" sizes="(min-width: 720px) 720px"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 26. Read the address location of the EPROCESS structure.</em></i></figcaption></figure><p>Having the address of my own EPROCESS structure, I started to search the linked list of processes for the SYSTEM process (PID == 4). To achieve this, I used a specific field within the EPROCESS structure called “ActiveProcessLinks”, which is a double-linked list of all processes in the system.</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image21.png" class="kg-image" alt="" loading="lazy" width="1231" height="529" srcset="https://blog.talosintelligence.com/content/images/size/w600/2025/06/image21.png 600w, https://blog.talosintelligence.com/content/images/size/w1000/2025/06/image21.png 1000w, https://blog.talosintelligence.com/content/images/2025/06/image21.png 1231w" sizes="(min-width: 720px) 720px"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 27. Traversing the linked list of processes, looking for the SYSTEM process.</em></i></figcaption></figure><p>Finding the EPROCESS structure belonging to the SYSTEM process allows me to read its security token and replace the token with the one just read. Remember to increment the reference count of the SYSTEM token!</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image17.png" class="kg-image" alt="" loading="lazy" width="953" height="206" srcset="https://blog.talosintelligence.com/content/images/size/w600/2025/06/image17.png 600w, https://blog.talosintelligence.com/content/images/2025/06/image17.png 953w" sizes="(min-width: 720px) 720px"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 28. Swapping the user’s own security token with SYSTEM one.</em></i></figcaption></figure><h3 id="run-escalated-console">Run escalated console</h3><p>Now I can run the escalated console:</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image10.png" class="kg-image" alt="" loading="lazy" width="454" height="65"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 29. Execution of the console, which should be run with escalated privileges to the SYSTEM level.</em></i></figcaption></figure><p>This reveals the following:</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://blog.talosintelligence.com/content/images/2025/06/image2.png" class="kg-image" alt="" loading="lazy" width="1846" height="882" srcset="https://blog.talosintelligence.com/content/images/size/w600/2025/06/image2.png 600w, https://blog.talosintelligence.com/content/images/size/w1000/2025/06/image2.png 1000w, https://blog.talosintelligence.com/content/images/size/w1600/2025/06/image2.png 1600w, https://blog.talosintelligence.com/content/images/2025/06/image2.png 1846w" sizes="(min-width: 720px) 720px"><figcaption><i><em class="italic" style="white-space: pre-wrap;">Figure 30. Image showing a fully functional exploit in action and its result.</em></i></figcaption></figure><p>Success! This exploit results in a console with escalated privileges to SYSTEM level. Watch the video <a href="https://drive.google.com/file/d/1mx6IM6RCz5yK2VDXcIXsFUP_zZdWPDug/view?pli=1"><u>here</u></a>.</p><h2 id="summary">Summary</h2><p>During the reversal process, I noticed that the developers had patched some previously discovered vulnerabilities and exploitation primitives by restricting certain driver functionalities. However, relying on a disallowed list approach is never a good security practice, as an attacker only needs to find one function that isn’t explicitly blocked to exploit it. Instead, a more effective approach is to implement an allowed list, limiting functionality to only what is necessary.</p><p>More importantly, access to a driver with such critical and potentially dangerous functionality should be strictly controlled through multiple layers of security and made available only to a limited number of privileged system users.&nbsp;&nbsp;</p><p>Lastly, this research has demonstrated that attackers can leverage even seemingly simple primitives — such as "decrement by one" — to develop a fully functional privilege escalation exploit. This highlights the importance of careful security design in kernel-mode components.</p>
        </div>
    </section>
    <div class="social-media-wrapper">
    <h5>Share this post</h5>
    <ul class="social-media-share-list">
        <li>
            <a class="share-facebook" title="Share this on Facebook" data-text="Decrement by one to rule them all: AsIO3.sys driver exploitation" data-href="https://blog.talosintelligence.com/decrement-by-one-to-rule-them-all/" rel="nofollow" target="_blank" href="https://www.facebook.com/sharer.php?u=https://blog.talosintelligence.com/decrement-by-one-to-rule-them-all/"></a>
        </li>
        <li>
            <a class="share-x" title="Post This" data-text="Decrement by one to rule them all: AsIO3.sys driver exploitation" data-href="https://blog.talosintelligence.com/decrement-by-one-to-rule-them-all/" rel="nofollow" target="_blank" href="https://x.com/share?url=https://blog.talosintelligence.com/decrement-by-one-to-rule-them-all/"></a>
        </li>
        <li>
            <a class="share-linkedin" title="Share this on LinkedIn" data-text="Decrement by one to rule them all: AsIO3.sys driver exploitation" data-href="https://blog.talosintelligence.com/decrement-by-one-to-rule-them-all/" rel="nofollow" target="_blank" href="https://www.linkedin.com/sharing/share-offsite/?url=https://blog.talosintelligence.com/decrement-by-one-to-rule-them-all/"></a>
        </li>
        <li>
            <a class="share-reddit" title="Reddit This" data-text="Decrement by one to rule them all: AsIO3.sys driver exploitation" data-href="https://blog.talosintelligence.com/decrement-by-one-to-rule-them-all/" rel="nofollow" target="_blank" href="https://www.reddit/submit?url=https://blog.talosintelligence.com/decrement-by-one-to-rule-them-all/"></a>
        </li>
        <li>
            <a class="share-email" title="Email This" href="mailto:?body=Decrement by one to rule them all: AsIO3.sys driver exploitationhttps://blog.talosintelligence.com/decrement-by-one-to-rule-them-all/"></a>
        </li>
    </ul>
</div></article>
                    </div>
                </div>
                <div class="col-lg alt-layout-row-dk sidebar" id="side-bar">


                            <h4>Related Content</h4>
                                <div class="sidebar-snippet-wrapper">
                                    <a href="/small-praise-for-modern-compilers-a-case-of-ubuntu-printing-vulnerability-that-wasnt/">
                                        <h3>Small praise for modern compilers - A case of Ubuntu printing vulnerability that wasn’t</h3>
                                        <span  class="preview-attributes">February 10, 2025 08:30</span>
                                        <p>During an earlier investigation of the macOS printing subsystem, IPP-USB protocol caught our attention. We decided to take a look at how other operating systems handle the same functionality.</p>
                                    </a>
                                </div>
                                <div class="sidebar-snippet-wrapper">
                                    <a href="/finding-vulnerabilities-in-clipsp-the-driver-at-the-core-of-windows-client-license-platform/">
                                        <h3>Finding vulnerabilities in ClipSp, the driver at the core of Windows’ Client License Platform</h3>
                                        <span  class="preview-attributes">November 25, 2024 08:00</span>
                                        <p>By Philippe Laulheret

ClipSP (clipsp.sys) is a Windows driver used to implement client licensing and system policies on Windows 10 and 11 systems.

Cisco Talos researchers have discovered eight vulnerabilities related to clipsp.sys ranging from signature bypass to elevation of privileges and sandbox escape:

 * TALOS-2024-1964 (CVE-2024-38184)
 * TALOS-2024-1965 (CVE-2024-38185)</p>
                                    </a>
                                </div>
                                <div class="sidebar-snippet-wrapper">
                                    <a href="/fuzzing-uc-os-protocol-stacks/">
                                        <h3>The vulnerabilities we uncovered by fuzzing µC/OS protocol stacks</h3>
                                        <span  class="preview-attributes">August 28, 2024 12:00</span>
                                        <p>Fuzzing has long been one of our favorite ways to search for security issues or vulnerabilities in software, but when it comes to fuzzing popular systems used in ICS environments, it traditionally involved a custom hardware setup to fuzz the code in its native environment.</p>
                                    </a>
                                </div>
                </div>
            </div>
        </div>
    </main>



    <footer id="footer">
    <div class="row footer_nav_wrapper">
        <div class="col-xl-10 col-12">
            <div class="multi-col-list-wrapper">
                <ul class="footer-parent-list">
                    <li class="footer-links-group">
                        <ul>
                            <li>
                                <h6><a href="https://talosintelligence.com/reputation">Intelligence Center</a></h6>
                            </li>
                            <li><a href="https://talosintelligence.com/reputation_center">Intelligence Search</a></li>
                            <li><a href="https://talosintelligence.com/reputation_center/email_rep">Email &amp; Spam Trends</a></li>
                        </ul>
                    </li>
                    <li class="footer-links-group">
                        <ul>
                            <li>
                                <h6><a href="https://talosintelligence.com/vulnerability_info">Vulnerability Research</a></h6>
                            </li>
                            <li><a href="https://talosintelligence.com/vulnerability_reports">Vulnerability Reports</a></li>
                            <li><a href="https://talosintelligence.com/ms_advisories">Microsoft Advisories</a></li>
                        </ul>
                    </li>
                    <li class="footer-links-group">
                         <ul>
                            <li>
                                <h6><a href="https://talosintelligence.com/incident_response">Incident Response</a></h6>
                            </li>
                            <li>
                                <a href="https://talosintelligence.com/incident_response/services#reactive-services">Reactive Services</a>
                            </li>
                            <li>
                                <a href="https://talosintelligence.com/incident_response/services#proactive-services">Proactive Services</a>
                            </li>
                            <li>
                                <a href="https://talosintelligence.com/incident_response/contact">Emergency Support</a>
                            </li>
                        </ul>
                    </li>
                    <li class="footer-links-group">
                        <ul>
                            <li>
                                <h6>Security Resources</h6>
                            </li>
                            <li><a href="https://talosintelligence.com/software">Open Source Security Tools</a></li>
                            <li><a href="https://talosintelligence.com/categories">Intelligence Categories Reference</a></li>
                            <li><a href="https://talosintelligence.com/secure-endpoint-naming">Secure Endpoint Naming Reference</a></li>
                        </ul>
                    </li>
                    <li class="footer-links-group">
                        <ul>
                            <li>
                                <h6>Media</h6>
                            </li>
                            <li><a href="https://blog.talosintelligence.com">Talos Intelligence Blog</a></li>
                            <li><a href="https://blog.talosintelligence.com/category/threat-source-newsletter/">Threat Source Newsletter</a></li>
                            <li><a href="https://talosintelligence.com/podcasts/shows/beers_with_talos">Beers with Talos Podcast</a></li>
                            <li><a href="https://talosintelligence.com/podcasts/shows/talos_takes">Talos Takes Podcast</a></li>
                            <li><a target="_blank" href="https://www.youtube.com/channel/UCPZ1DtzQkStYBSG3GTNoyfg/featured">Talos Videos</a></li>
                        </ul>
                    </li>
                    <li class="footer-links-group">
                        <ul>
                            <li>
                                <h6>Support</h6>
                            </li>
                            <li><a href="https://support.talosintelligence.com">Support Documentation</a></li>
                        </ul>
                    </li>
                    <li class="footer-links-group">
                        <ul>
                            <li>
                                <h6>Company</h6>
                            </li>
                            <li><a href="https://talosintelligence.com/about">About Talos</a></li>
                            <li><a href="https://talosintelligence.com/careers">Careers</a></li>
                            <li><a target="_blank" href="https://www.cisco.com/c/en/us/products/security/product-listing.html">Cisco Security</a></li>
                        </ul>
                    </li>
                </ul>
            </div>
        </div>
        <div class="col-xl-2 col-12 connect_social">
            <div class="connect-footer-section-wrapper">
                <h6>Follow us</h6>
                <ul>
                    <li>
                        <a target="_blank" href="https://x.com/talossecurity"><div class="footer-media-icon" id="footer-media-icon-x"></div>
                        </a></li>
                    <li>
                        <a target="_blank" href="https://www.youtube.com/channel/UCPZ1DtzQkStYBSG3GTNoyfg/featured"><div class="footer-media-icon" id="footer-media-icon-youtube"></div>
                        </a></li>
                    <li>
                        <a target="_blank" href="https://www.linkedin.com/company/cisco-talos-intelligence-group/"><div class="footer-media-icon" id="footer-media-icon-linkedin"></div>
                        </a></li>
                </ul>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 footer_corporate">
            <a target="_blank" href="http://tools.cisco.com/security/center/home.x"><img alt="Cisco" src="https://blog.talosintelligence.com/assets/images/logo_cisco_white.svg">
            </a><p class="copyright">
            ©
            <span id='current-year'></span>
            Cisco Systems, Inc. and/or its affiliates. All rights
            reserved. View our
            <a target="_blank" class="underline" href="http://www.cisco.com/web/siteassets/legal/privacy_full.html">Privacy Policy.</a>
        </p>
        </div>
    </div>
</footer>
    


<!-- jQuery first, then Popper.js, then Bootstrap JS -->
<script src="https://blog.talosintelligence.com/assets/js/jquery-3.6.0.min.js?v=ea98fc7d1f"></script>
<script src="https://blog.talosintelligence.com/assets/js/popper.min.js?v=ea98fc7d1f"></script>
<script src="https://blog.talosintelligence.com/assets/js/bootstrap.bundle.min.js?v=ea98fc7d1f"></script>
<script src="https://blog.talosintelligence.com/assets/js/date.js?v=ea98fc7d1f"></script>
<script src="https://blog.talosintelligence.com/assets/js/prism.js?v=ea98fc7d1f"></script>
<script src="https://cdn.jsdelivr.net/npm/ghost-theme-utils@latest/dist/js/ghost-theme-utils.min.js" async defer></script>


<script defer src="https://static.cloudflareinsights.com/beacon.min.js/vcd15cbe7772f49c399c6a5babf22c1241717689176015" integrity="sha512-ZpsOmlRQV6y907TI0dKBHq9Md29nnaEIPlkf84rnaERnq6zvWvPUqr2ft8M1aS28oN72PdrCzSjY4U6VaAw1EQ==" data-cf-beacon='{"rayId":"956a026d49d8e61f","version":"2025.6.2","serverTiming":{"name":{"cfExtPri":true,"cfEdge":true,"cfOrigin":true,"cfL4":true,"cfSpeedBrain":true,"cfCacheStatus":true}},"token":"35f8ae698f9d471b83b846a751388737","b":1}' crossorigin="anonymous"></script>
</body>

</html>