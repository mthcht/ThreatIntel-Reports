<!doctype html>

<!--[if lt IE 7]><html lang="en-CA" prefix="og: https://ogp.me/ns#"><![endif]-->
<!--[if (IE 7)&!(IEMobile)]><html lang="en-CA" prefix="og: https://ogp.me/ns#"><![endif]-->
<!--[if (IE 8)&!(IEMobile)]><html lang="en-CA" prefix="og: https://ogp.me/ns#"><![endif]-->
<!--[if gt IE 8]><!--> <html lang="en-CA" prefix="og: https://ogp.me/ns#"><!--<![endif]-->

	<head>
		<meta charset="utf-8">

				<meta http-equiv="X-UA-Compatible" content="IE=edge">

		<title>Group5: Syria and the Iranian Connection - The Citizen Lab</title>

		<meta name="HandheldFriendly" content="True">
		<meta name="MobileOptimized" content="320">
		<meta name="viewport" content="width=device-width, initial-scale=1"/>

		<link rel="apple-touch-icon" sizes="57x57" href="https://citizenlab.ca/wp-content/themes/citizenlab-2.1.5/library/images/apple-icon-57x57.png">
		<link rel="apple-touch-icon" sizes="60x60" href="https://citizenlab.ca/wp-content/themes/citizenlab-2.1.5/library/images/apple-icon-60x60.png">
		<link rel="apple-touch-icon" sizes="72x72" href="https://citizenlab.ca/wp-content/themes/citizenlab-2.1.5/library/images/apple-icon-72x72.png">
		<link rel="apple-touch-icon" sizes="76x76" href="https://citizenlab.ca/wp-content/themes/citizenlab-2.1.5/library/images/apple-icon-76x76.png">
		<link rel="apple-touch-icon" sizes="114x114" href="https://citizenlab.ca/wp-content/themes/citizenlab-2.1.5/library/images/apple-icon-114x114.png">
		<link rel="apple-touch-icon" sizes="120x120" href="https://citizenlab.ca/wp-content/themes/citizenlab-2.1.5/library/images/apple-icon-120x120.png">
		<link rel="apple-touch-icon" sizes="144x144" href="https://citizenlab.ca/wp-content/themes/citizenlab-2.1.5/library/images/apple-icon-144x144.png">
		<link rel="apple-touch-icon" sizes="152x152" href="https://citizenlab.ca/wp-content/themes/citizenlab-2.1.5/library/images/apple-icon-152x152.png">
		<link rel="apple-touch-icon" sizes="180x180" href="https://citizenlab.ca/wp-content/themes/citizenlab-2.1.5/library/images/apple-icon-180x180.png">
		<link rel="icon" type="image/png" sizes="192x192"  href="https://citizenlab.ca/wp-content/themes/citizenlab-2.1.5/library/images/android-icon-192x192.png">
		<link rel="icon" type="image/png" sizes="32x32" href="https://citizenlab.ca/wp-content/themes/citizenlab-2.1.5/library/images/favicon-32x32.png">
		<link rel="icon" type="image/png" sizes="96x96" href="https://citizenlab.ca/wp-content/themes/citizenlab-2.1.5/library/images/favicon-96x96.png">
		<link rel="icon" type="image/png" sizes="16x16" href="https://citizenlab.ca/wp-content/themes/citizenlab-2.1.5/library/images/favicon-16x16.png">
		<link rel="manifest" href="https://citizenlab.ca/wp-content/themes/citizenlab-2.1.5/library/images/manifest.json">
		<meta name="msapplication-TileColor" content="#ffffff">
		<meta name="msapplication-TileImage" content="/ms-icon-144x144.png">
		<meta name="theme-color" content="#ffffff">
		<!--[if IE]>
			<link rel="shortcut icon" href="https://citizenlab.ca/wp-content/themes/citizenlab-2.1.5/favicon.ico">
		<![endif]-->
		
		<link rel="pingback" href="https://citizenlab.ca/xmlrpc.php">

					<style>img:is([sizes="auto" i], [sizes^="auto," i]) { contain-intrinsic-size: 3000px 1500px }</style>
	
<!-- Search Engine Optimization by Rank Math PRO - https://rankmath.com/ -->
<meta name="description" content="This report describes a malware operation against the Syrian Opposition. We name the operator Group5, and suspect they have not been previously-reported. Group5 used &quot;just enough&quot; technical sophistication, combined with social engineering, to target computers and mobile phones with malware."/>
<meta name="robots" content="follow, index, max-snippet:-1, max-video-preview:-1, max-image-preview:large"/>
<link rel="canonical" href="https://citizenlab.ca/2016/08/group5-syria/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="Group5: Syria and the Iranian Connection - The Citizen Lab" />
<meta property="og:description" content="This report describes a malware operation against the Syrian Opposition. We name the operator Group5, and suspect they have not been previously-reported. Group5 used &quot;just enough&quot; technical sophistication, combined with social engineering, to target computers and mobile phones with malware." />
<meta property="og:url" content="https://citizenlab.ca/2016/08/group5-syria/" />
<meta property="og:site_name" content="The Citizen Lab" />
<meta property="article:tag" content="Android" />
<meta property="article:tag" content="Cybersecurity" />
<meta property="article:tag" content="Iran" />
<meta property="article:tag" content="Malware" />
<meta property="article:tag" content="Mobile security" />
<meta property="article:tag" content="Surveillance" />
<meta property="article:tag" content="Syria" />
<meta property="article:tag" content="Targeted Threats" />
<meta property="article:section" content="Targeted Threats" />
<meta property="og:updated_time" content="2020-06-23T19:35:31-04:00" />
<meta property="og:image" content="https://citizenlab.ca/wp-content/uploads/2016/08/2-Noura-Al-Ameer-1024x680.jpg" />
<meta property="og:image:secure_url" content="https://citizenlab.ca/wp-content/uploads/2016/08/2-Noura-Al-Ameer-1024x680.jpg" />
<meta property="og:image:width" content="640" />
<meta property="og:image:height" content="425" />
<meta property="og:image:alt" content="Noura Al-Ameer" />
<meta property="og:image:type" content="image/jpeg" />
<meta property="article:published_time" content="2016-08-02T05:55:36-04:00" />
<meta property="article:modified_time" content="2020-06-23T19:35:31-04:00" />
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content="Group5: Syria and the Iranian Connection - The Citizen Lab" />
<meta name="twitter:description" content="This report describes a malware operation against the Syrian Opposition. We name the operator Group5, and suspect they have not been previously-reported. Group5 used &quot;just enough&quot; technical sophistication, combined with social engineering, to target computers and mobile phones with malware." />
<meta name="twitter:site" content="@citizenlab" />
<meta name="twitter:creator" content="@jsrailton" />
<meta name="twitter:image" content="https://citizenlab.ca/wp-content/uploads/2016/08/2-Noura-Al-Ameer-1024x680.jpg" />
<meta name="twitter:label1" content="Written by" />
<meta name="twitter:data1" content="John Scott-Railton" />
<meta name="twitter:label2" content="Time to read" />
<meta name="twitter:data2" content="58 minutes" />
<script type="application/ld+json" class="rank-math-schema-pro">{"@context":"https://schema.org","@graph":[{"@type":["CollegeOrUniversity","Organization"],"@id":"https://citizenlab.ca/#organization","name":"The Citizen Lab","url":"https://citizenlab.ca","sameAs":["https://twitter.com/citizenlab"],"logo":{"@type":"ImageObject","@id":"https://citizenlab.ca/#logo","url":"https://citizenlab.ca/wp-content/uploads/2019/02/citlablogo.png","contentUrl":"https://citizenlab.ca/wp-content/uploads/2019/02/citlablogo.png","caption":"The Citizen Lab","inLanguage":"en-CA","width":"7824","height":"5216"}},{"@type":"WebSite","@id":"https://citizenlab.ca/#website","url":"https://citizenlab.ca","name":"The Citizen Lab","publisher":{"@id":"https://citizenlab.ca/#organization"},"inLanguage":"en-CA"},{"@type":"ImageObject","@id":"https://citizenlab.ca/wp-content/uploads/2016/08/2-Noura-Al-Ameer.jpg","url":"https://citizenlab.ca/wp-content/uploads/2016/08/2-Noura-Al-Ameer.jpg","width":"2500","height":"1661","caption":"Noura Al-Ameer","inLanguage":"en-CA"},{"@type":"WebPage","@id":"https://citizenlab.ca/2016/08/group5-syria/#webpage","url":"https://citizenlab.ca/2016/08/group5-syria/","name":"Group5: Syria and the Iranian Connection - The Citizen Lab","datePublished":"2016-08-02T05:55:36-04:00","dateModified":"2020-06-23T19:35:31-04:00","isPartOf":{"@id":"https://citizenlab.ca/#website"},"primaryImageOfPage":{"@id":"https://citizenlab.ca/wp-content/uploads/2016/08/2-Noura-Al-Ameer.jpg"},"inLanguage":"en-CA"},{"@type":"Person","@id":"https://citizenlab.ca/author/jsrailton/","name":"John Scott-Railton","url":"https://citizenlab.ca/author/jsrailton/","image":{"@type":"ImageObject","@id":"https://secure.gravatar.com/avatar/56b6dce280fcd636632c5927f531793a7669311ff905f085e2475478c3e3743a?s=96&amp;d=mm&amp;r=g","url":"https://secure.gravatar.com/avatar/56b6dce280fcd636632c5927f531793a7669311ff905f085e2475478c3e3743a?s=96&amp;d=mm&amp;r=g","caption":"John Scott-Railton","inLanguage":"en-CA"},"sameAs":["https://www.johnscottrailton.com","https://twitter.com/jsrailton"],"worksFor":{"@id":"https://citizenlab.ca/#organization"}},{"@type":"BlogPosting","headline":"Group5: Syria and the Iranian Connection - The Citizen Lab","datePublished":"2016-08-02T05:55:36-04:00","dateModified":"2020-06-23T19:35:31-04:00","author":{"@id":"https://citizenlab.ca/author/jsrailton/","name":"John Scott-Railton"},"publisher":{"@id":"https://citizenlab.ca/#organization"},"description":"This report describes a malware operation against the Syrian Opposition. We name the operator Group5, and suspect they have not been previously-reported. Group5 used &quot;just enough&quot; technical sophistication, combined with social engineering, to target computers and mobile phones with malware.","name":"Group5: Syria and the Iranian Connection - The Citizen Lab","@id":"https://citizenlab.ca/2016/08/group5-syria/#richSnippet","isPartOf":{"@id":"https://citizenlab.ca/2016/08/group5-syria/#webpage"},"image":{"@id":"https://citizenlab.ca/wp-content/uploads/2016/08/2-Noura-Al-Ameer.jpg"},"inLanguage":"en-CA","mainEntityOfPage":{"@id":"https://citizenlab.ca/2016/08/group5-syria/#webpage"}}]}</script>
<!-- /Rank Math WordPress SEO plugin -->

<link rel="alternate" type="application/rss+xml" title="The Citizen Lab &raquo; Feed" href="https://citizenlab.ca/feed/" />
<link rel="alternate" type="application/rss+xml" title="The Citizen Lab &raquo; Comments Feed" href="https://citizenlab.ca/comments/feed/" />
<script type="text/javascript">
/* <![CDATA[ */
window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.1.0\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/15.1.0\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/citizenlab.ca\/wp-includes\/js\/wp-emoji-release.min.js"}};
/*! This file is auto-generated */
!function(i,n){var o,s,e;function c(e){try{var t={supportTests:e,timestamp:(new Date).valueOf()};sessionStorage.setItem(o,JSON.stringify(t))}catch(e){}}function p(e,t,n){e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(t,0,0);var t=new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data),r=(e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(n,0,0),new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data));return t.every(function(e,t){return e===r[t]})}function u(e,t,n){switch(t){case"flag":return n(e,"\ud83c\udff3\ufe0f\u200d\u26a7\ufe0f","\ud83c\udff3\ufe0f\u200b\u26a7\ufe0f")?!1:!n(e,"\ud83c\uddfa\ud83c\uddf3","\ud83c\uddfa\u200b\ud83c\uddf3")&&!n(e,"\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f","\ud83c\udff4\u200b\udb40\udc67\u200b\udb40\udc62\u200b\udb40\udc65\u200b\udb40\udc6e\u200b\udb40\udc67\u200b\udb40\udc7f");case"emoji":return!n(e,"\ud83d\udc26\u200d\ud83d\udd25","\ud83d\udc26\u200b\ud83d\udd25")}return!1}function f(e,t,n){var r="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?new OffscreenCanvas(300,150):i.createElement("canvas"),a=r.getContext("2d",{willReadFrequently:!0}),o=(a.textBaseline="top",a.font="600 32px Arial",{});return e.forEach(function(e){o[e]=t(a,e,n)}),o}function t(e){var t=i.createElement("script");t.src=e,t.defer=!0,i.head.appendChild(t)}"undefined"!=typeof Promise&&(o="wpEmojiSettingsSupports",s=["flag","emoji"],n.supports={everything:!0,everythingExceptFlag:!0},e=new Promise(function(e){i.addEventListener("DOMContentLoaded",e,{once:!0})}),new Promise(function(t){var n=function(){try{var e=JSON.parse(sessionStorage.getItem(o));if("object"==typeof e&&"number"==typeof e.timestamp&&(new Date).valueOf()<e.timestamp+604800&&"object"==typeof e.supportTests)return e.supportTests}catch(e){}return null}();if(!n){if("undefined"!=typeof Worker&&"undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof URL&&URL.createObjectURL&&"undefined"!=typeof Blob)try{var e="postMessage("+f.toString()+"("+[JSON.stringify(s),u.toString(),p.toString()].join(",")+"));",r=new Blob([e],{type:"text/javascript"}),a=new Worker(URL.createObjectURL(r),{name:"wpTestEmojiSupports"});return void(a.onmessage=function(e){c(n=e.data),a.terminate(),t(n)})}catch(e){}c(n=f(s,u,p))}t(n)}).then(function(e){for(var t in e)n.supports[t]=e[t],n.supports.everything=n.supports.everything&&n.supports[t],"flag"!==t&&(n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&n.supports[t]);n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&!n.supports.flag,n.DOMReady=!1,n.readyCallback=function(){n.DOMReady=!0}}).then(function(){return e}).then(function(){var e;n.supports.everything||(n.readyCallback(),(e=n.source||{}).concatemoji?t(e.concatemoji):e.wpemoji&&e.twemoji&&(t(e.twemoji),t(e.wpemoji)))}))}((window,document),window._wpemojiSettings);
/* ]]> */
</script>
<style id='wp-emoji-styles-inline-css' type='text/css'>

	img.wp-smiley, img.emoji {
		display: inline !important;
		border: none !important;
		box-shadow: none !important;
		height: 1em !important;
		width: 1em !important;
		margin: 0 0.07em !important;
		vertical-align: -0.1em !important;
		background: none !important;
		padding: 0 !important;
	}
</style>
<link rel='stylesheet' id='wp-block-library-css' href='https://citizenlab.ca/wp-includes/css/dist/block-library/style.min.css' type='text/css' media='all' />
<style id='classic-theme-styles-inline-css' type='text/css'>
/*! This file is auto-generated */
.wp-block-button__link{color:#fff;background-color:#32373c;border-radius:9999px;box-shadow:none;text-decoration:none;padding:calc(.667em + 2px) calc(1.333em + 2px);font-size:1.125em}.wp-block-file__button{background:#32373c;color:#fff;text-decoration:none}
</style>
<style id='co-authors-plus-coauthors-style-inline-css' type='text/css'>
.wp-block-co-authors-plus-coauthors.is-layout-flow [class*=wp-block-co-authors-plus]{display:inline}

</style>
<style id='co-authors-plus-avatar-style-inline-css' type='text/css'>
.wp-block-co-authors-plus-avatar :where(img){height:auto;max-width:100%;vertical-align:bottom}.wp-block-co-authors-plus-coauthors.is-layout-flow .wp-block-co-authors-plus-avatar :where(img){vertical-align:middle}.wp-block-co-authors-plus-avatar:is(.alignleft,.alignright){display:table}.wp-block-co-authors-plus-avatar.aligncenter{display:table;margin-inline:auto}

</style>
<style id='co-authors-plus-image-style-inline-css' type='text/css'>
.wp-block-co-authors-plus-image{margin-bottom:0}.wp-block-co-authors-plus-image :where(img){height:auto;max-width:100%;vertical-align:bottom}.wp-block-co-authors-plus-coauthors.is-layout-flow .wp-block-co-authors-plus-image :where(img){vertical-align:middle}.wp-block-co-authors-plus-image:is(.alignfull,.alignwide) :where(img){width:100%}.wp-block-co-authors-plus-image:is(.alignleft,.alignright){display:table}.wp-block-co-authors-plus-image.aligncenter{display:table;margin-inline:auto}

</style>
<style id='global-styles-inline-css' type='text/css'>
:root{--wp--preset--aspect-ratio--square: 1;--wp--preset--aspect-ratio--4-3: 4/3;--wp--preset--aspect-ratio--3-4: 3/4;--wp--preset--aspect-ratio--3-2: 3/2;--wp--preset--aspect-ratio--2-3: 2/3;--wp--preset--aspect-ratio--16-9: 16/9;--wp--preset--aspect-ratio--9-16: 9/16;--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;--wp--preset--spacing--20: 0.44rem;--wp--preset--spacing--30: 0.67rem;--wp--preset--spacing--40: 1rem;--wp--preset--spacing--50: 1.5rem;--wp--preset--spacing--60: 2.25rem;--wp--preset--spacing--70: 3.38rem;--wp--preset--spacing--80: 5.06rem;--wp--preset--shadow--natural: 6px 6px 9px rgba(0, 0, 0, 0.2);--wp--preset--shadow--deep: 12px 12px 50px rgba(0, 0, 0, 0.4);--wp--preset--shadow--sharp: 6px 6px 0px rgba(0, 0, 0, 0.2);--wp--preset--shadow--outlined: 6px 6px 0px -3px rgba(255, 255, 255, 1), 6px 6px rgba(0, 0, 0, 1);--wp--preset--shadow--crisp: 6px 6px 0px rgba(0, 0, 0, 1);}:where(.is-layout-flex){gap: 0.5em;}:where(.is-layout-grid){gap: 0.5em;}body .is-layout-flex{display: flex;}.is-layout-flex{flex-wrap: wrap;align-items: center;}.is-layout-flex > :is(*, div){margin: 0;}body .is-layout-grid{display: grid;}.is-layout-grid > :is(*, div){margin: 0;}:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}
:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}
:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}
:root :where(.wp-block-pullquote){font-size: 1.5em;line-height: 1.6;}
</style>
<link rel='stylesheet' id='bigfoot-number-css' href='https://citizenlab.ca/wp-content/plugins/bigfoot_footnotes/library/bigfoot-number.css' type='text/css' media='all' />
<link rel='stylesheet' id='__EPYT__style-css' href='https://citizenlab.ca/wp-content/plugins/youtube-embed-plus/styles/ytprefs.min.css' type='text/css' media='all' />
<style id='__EPYT__style-inline-css' type='text/css'>

                .epyt-gallery-thumb {
                        width: 33.333%;
                }
                
</style>
<link rel='stylesheet' id='bones-base-stylesheet-css' href='https://citizenlab.ca/wp-content/themes/citizenlab-2.1.5/library/css/tachyons.css' type='text/css' media='all' />
<link rel='stylesheet' id='bones-stylesheet-css' href='https://citizenlab.ca/wp-content/themes/citizenlab-2.1.5/library/css/style.css' type='text/css' media='all' />
<!--[if lt IE 9]>
<link rel='stylesheet' id='bones-ie-only-css' href='https://citizenlab.ca/wp-content/themes/citizenlab-2.1.5/library/css/ie.css' type='text/css' media='all' />
<![endif]-->
<link rel='stylesheet' id='fontawesome-css' href='https://citizenlab.ca/wp-content/themes/citizenlab-2.1.5/library/fontawesome/css/fontawesome.min.css' type='text/css' media='all' />
<link rel='stylesheet' id='fontawesome-brands-css' href='https://citizenlab.ca/wp-content/themes/citizenlab-2.1.5/library/fontawesome/css/brands.min.css' type='text/css' media='all' />
<link rel='stylesheet' id='fontawesome-solid-css' href='https://citizenlab.ca/wp-content/themes/citizenlab-2.1.5/library/fontawesome/css/solid.min.css' type='text/css' media='all' />
<script type="text/javascript" src="https://citizenlab.ca/wp-includes/js/jquery/jquery.min.js" id="jquery-core-js"></script>
<script type="text/javascript" src="https://citizenlab.ca/wp-includes/js/jquery/jquery-migrate.min.js" id="jquery-migrate-js"></script>
<script type="text/javascript" id="__ytprefs__-js-extra">
/* <![CDATA[ */
var _EPYT_ = {"ajaxurl":"https:\/\/citizenlab.ca\/wp-admin\/admin-ajax.php","security":"715c5512cd","gallery_scrolloffset":"20","eppathtoscripts":"https:\/\/citizenlab.ca\/wp-content\/plugins\/youtube-embed-plus\/scripts\/","eppath":"https:\/\/citizenlab.ca\/wp-content\/plugins\/youtube-embed-plus\/","epresponsiveselector":"[\"iframe.__youtube_prefs__\",\"iframe[src*='youtube.com']\",\"iframe[src*='youtube-nocookie.com']\",\"iframe[data-ep-src*='youtube.com']\",\"iframe[data-ep-src*='youtube-nocookie.com']\",\"iframe[data-ep-gallerysrc*='youtube.com']\"]","epdovol":"1","version":"14.2.3","evselector":"iframe.__youtube_prefs__[src], iframe[src*=\"youtube.com\/embed\/\"], iframe[src*=\"youtube-nocookie.com\/embed\/\"]","ajax_compat":"","maxres_facade":"eager","ytapi_load":"light","pause_others":"","stopMobileBuffer":"1","facade_mode":"","not_live_on_channel":""};
/* ]]> */
</script>
<script type="text/javascript" src="https://citizenlab.ca/wp-content/plugins/youtube-embed-plus/scripts/ytprefs.min.js" id="__ytprefs__-js"></script>
<script type="text/javascript" src="https://citizenlab.ca/wp-content/themes/citizenlab-2.1.5/library/js/libs/modernizr.custom.min.js" id="bones-modernizr-js"></script>
<link rel="https://api.w.org/" href="https://citizenlab.ca/wp-json/" /><link rel="alternate" title="JSON" type="application/json" href="https://citizenlab.ca/wp-json/wp/v2/posts/27745" /><link rel='shortlink' href='https://citizenlab.ca/?p=27745' />
<link rel="alternate" title="oEmbed (JSON)" type="application/json+oembed" href="https://citizenlab.ca/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fcitizenlab.ca%2F2016%2F08%2Fgroup5-syria%2F" />
<link rel="alternate" title="oEmbed (XML)" type="text/xml+oembed" href="https://citizenlab.ca/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fcitizenlab.ca%2F2016%2F08%2Fgroup5-syria%2F&#038;format=xml" />
<script type="text/javascript" id="google_gtagjs" src="https://www.googletagmanager.com/gtag/js?id=G-RCDQQLPVF0" async="async"></script>
<script type="text/javascript" id="google_gtagjs-inline">
/* <![CDATA[ */
window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-RCDQQLPVF0', {'anonymize_ip': true} );
/* ]]> */
</script>
		
				
	</head>

	<body itemscope itemtype="http://schema.org/WebPage">

		<!-- <div class="mw-12 pv3 ph3 pv3-l ph6-l bg-lab-dark-brown"> -->

			<header id="header" role="banner" itemscope itemtype="http://schema.org/WPHeader">

				<div id="header__inner" class="flex-ns items-center justify-between">

										<div class="v-mid flex justify-between items-center">
						<div class="mr-auto">
							<a href="https://citizenlab.ca" rel="nofollow"							id="logo" itemscope itemtype="http://schema.org/Organization">
								<img src="https://citizenlab.ca/wp-content/themes/citizenlab-2.1.5/library/images/CL-logo-3-headed.png" alt="The Citizen Lab"/>
							</a>
							<img src="https://citizenlab.ca/wp-content/themes/citizenlab-2.1.5/library/images/MunkSchool-WHT.png" class="munk-logo" alt="Munk School of Global Affairs & Public Policy | University of Toronto" />
						</div>
						<!-- Visible on mobile -->
						<a href="#main-menu" id="homepage" aria-label="Open main menu">
							<span class="fa-solid fa-bars-staggered white dib" title="Open Menu"></span>
							<span class="screen-reader-text">Open main menu</span>
						</a>
					</div>

					<!-- Main navigation menu -->
					<a class="skip-main" href="#main">Skip to main content</a>
					<div class="flex-ns main-menu" id="main-menu">
						
						<a href="#homepage" id="homepage" class="menu-close" aria-label="Close main menu">
							<span class="fa-solid fa-x white dib" title="Close Menu"></span>
							<span class="screen-reader-text">Close main menu</span>
						</a>



						<nav id="nav-main" role="navigation" itemscope itemtype="http://schema.org/SiteNavigationElement" class="tc tl-l">
							<ul id="menu-top-menu" class="list ma0 mt2 mt0-ns pa0 b dib-ns"><li id="menu-item-29705" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor menu-item-has-children menu-item-29705 dib-ns f5-l f4 ttu pv2 "><a href="https://citizenlab.ca/category/research/" class="white no-underline h-underline pr2 ml0">Research</a>
<ul class="sub-menu">
	<li id="menu-item-72358" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-72358 dib-ns f5-l f4 ttu pv2 "><a href="https://citizenlab.ca/category/research/targeted-threats/" class="white no-underline h-underline pr2">Targeted Threats</a></li>
	<li id="menu-item-72357" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-72357 dib-ns f5-l f4 ttu pv2 "><a href="https://citizenlab.ca/category/research/free-expression-online/" class="white no-underline h-underline pr2 mr0">Free Expression Online</a></li>
	<li id="menu-item-72359" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-72359 dib-ns f5-l f4 ttu pv2 "><a href="https://citizenlab.ca/category/research/transparency/" class="white no-underline h-underline pr2">Transparency and Accountability</a></li>
	<li id="menu-item-72360" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-72360 dib-ns f5-l f4 ttu pv2 "><a href="https://citizenlab.ca/category/research/app-privacy-and-security/" class="white no-underline h-underline pr2">App Privacy and Controls</a></li>
	<li id="menu-item-72362" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-72362 dib-ns f5-l f4 ttu pv2 "><a href="https://citizenlab.ca/category/research/global-research-network/" class="white no-underline h-underline pr2">Global Research Network</a></li>
	<li id="menu-item-72385" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-72385 dib-ns f5-l f4 ttu pv2 "><a href="https://citizenlab.ca/category/research/tools-resources/" class="white no-underline h-underline pr2">Tools &amp; Resources</a></li>
	<li id="menu-item-72361" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-72361 dib-ns f5-l f4 ttu pv2 "><a href="https://citizenlab.ca/publications/" class="white no-underline h-underline pr2">Publications</a></li>
</ul>
</li>
<li id="menu-item-29706" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-29706 dib-ns f5-l f4 ttu pv2 "><a href="https://citizenlab.ca/category/lab-news/" class="white no-underline h-underline pr2">News</a>
<ul class="sub-menu">
	<li id="menu-item-72363" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-72363 dib-ns f5-l f4 ttu pv2 "><a href="https://citizenlab.ca/category/lab-news/mentions/" class="white no-underline h-underline pr2">In the Media</a></li>
	<li id="menu-item-72364" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-72364 dib-ns f5-l f4 ttu pv2 "><a href="https://citizenlab.ca/category/lab-news/events/" class="white no-underline h-underline pr2">Events</a></li>
	<li id="menu-item-72365" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-72365 dib-ns f5-l f4 ttu pv2 "><a href="https://citizenlab.ca/category/lab-news/opportunities/" class="white no-underline h-underline pr2">Opportunities</a></li>
</ul>
</li>
<li id="menu-item-29707" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-29707 dib-ns f5-l f4 ttu pv2 "><a href="https://citizenlab.ca/about/" class="white no-underline h-underline pr2">About</a>
<ul class="sub-menu">
	<li id="menu-item-72367" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-72367 dib-ns f5-l f4 ttu pv2 "><a href="https://citizenlab.ca/about/" class="white no-underline h-underline pr2">About The Citizen Lab</a></li>
	<li id="menu-item-72368" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-72368 dib-ns f5-l f4 ttu pv2 "><a href="https://citizenlab.ca/media/" class="white no-underline h-underline pr2">Media Resources</a></li>
	<li id="menu-item-72369" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-72369 dib-ns f5-l f4 ttu pv2 "><a href="https://citizenlab.ca/people/" class="white no-underline h-underline pr2">People</a></li>
	<li id="menu-item-72370" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-72370 dib-ns f5-l f4 ttu pv2 "><a href="https://citizenlab.ca/teaching/" class="white no-underline h-underline pr2">Teaching</a></li>
	<li id="menu-item-72387" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-72387 dib-ns f5-l f4 ttu pv2 "><a href="https://engage.utoronto.ca/site/SPageServer?pagename=donate#/fund/847" class="white no-underline h-underline pr2">Donate</a></li>
	<li id="menu-item-74537" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-74537 dib-ns f5-l f4 ttu pv2 "><a href="https://citizenlab.ca/disclosure-of-security-vulnerabilities/" class="white no-underline h-underline pr2">Security Vulnerabilities</a></li>
</ul>
</li>
</ul>
						</nav>

						<!-- Search bar -->
						<div class="flex items-start justify-center searchbar">
							<form class="db-l ma0 pa0 b0 lh0 f5" role="search" method="get" id="menuSearchform" action="https://citizenlab.ca/">

								<div id="menuSearchContainer" class="ml3 dib w0 transition-width overflow-hidden">
									<input type="search"  id="menuSearch" name="s" value="" class="b--none ma0 pa1 w-100" placeholder="Search"/>
								</div> <!--end of menuSearchContainer-->
							</form>
							<div id="menuSearchButton" class="db-l ml3 pointer items-end">
								<span class="fa-solid fa-magnifying-glass white f5" aria-label="Search" title="Search"></span>
							</div>
						</div> <!--end of searchbar-->

					</div> <!--end of main-menu -->
				</div> <!-- end of header__inner -->
			</header>
    <!-- </div> -->
    <div id="container" class="pa3 pv4-l ph5-l"> <!--TODO move to stylesheet -->
		<main id="main" role="main" itemscope itemprop="mainContentOfPage" itemtype="http://schema.org/Blog">
			<section id="content" class="container">


						
							

     <article id="post-27745" dir="ltr" 27745role="article" itemscope itemprop="blogPost" itemtype="http://schema.org/BlogPosting" class="lh-copy">

        <header>
          <span class="f6 mt0" dir="ltr"><a href="https://citizenlab.ca/category/research/" class="breadcrumbs"><a href="https://citizenlab.ca/category/research/" class="breadcrumbs">Research</a><span class="fa-solid fa-chevron-right mh2" aria-hidden="true"></span></a><a href="https://citizenlab.ca/category/research/targeted-threats/" class="breadcrumbs">Targeted Threats</a></span>
            <h1 itemprop="headline" rel="bookmark" class="ma0 mt5 lh-title">
            	<!-- Title -->
	<span class="db f2 f1-ns black lh-solid no-hyphen">Group5</span>
	<!-- Subtitle -->
	<span class="db f4 f2-ns mid-gray mt2 lh-title oswald-regular mb2-ns no-hyphen"> Syria and the Iranian Connection</span>
	 
            </h1>
            <div dir="ltr" class="mt2">
              
            <div class="f5 mr4 b dark-gray dib">By 
            <a href="https://citizenlab.ca/author/jsrailton/" title="Posts by John Scott-Railton" class="author url fn" rel="author">John Scott-Railton</a>, <a href="https://citizenlab.ca/author/bahrabdulrazzak/" title="Posts by Bahr Abdul Razzak" class="author url fn" rel="author">Bahr Abdul Razzak</a>, <a href="https://citizenlab.ca/author/adam-hulcoop/" title="Posts by Adam Hulcoop" class="author url fn" rel="author">Adam Hulcoop</a>, <a href="https://citizenlab.ca/author/mattbrooks/" title="Posts by Matt Brooks" class="author url fn" rel="author">Matt Brooks</a>, and <a href="https://citizenlab.ca/author/kkleemola/" title="Posts by Katie Kleemola" class="author url fn" rel="author">Katie Kleemola</a></div>          

          <time class="dark-gray dib f5 mr4" datetime="2016-08-02" itemprop="datePublished">August 2, 2016</time>
          <!-- Display other versions of the post -->
                      </div>

          <!-- Display the link for the PDF version of the post -->
                          <div>

                   <a class="cta-button-outline" href="https://tspace.library.utoronto.ca/bitstream/1807/97084/1/Report%2376--group5.pdf" title="Download this report">Download this report</a>

                </div>
                
        </header>         
                <section itemprop="articleBody" class="article-body mb4 mt4 pt2 bt b--light-gray">
                  <h2 class="lh-solid mb3">Executive Summary</h2>
<p class="mt0">This report describes an elaborately staged malware operation with targets in the Syrian opposition. The operators use a range of techniques to target Windows computers and Android phones with the apparent goal of penetrating the computers of well-connected individuals in the Syrian opposition.</p>
<p>We first discovered the operation in late 2015 when a member of the Syrian opposition spotted a suspicious e-mail containing a PowerPoint slideshow. From this initial message, we uncovered a watering hole website with malicious programs, malicious PowerPoint files, and Android malware, all apparently designed to appeal to members of the opposition.</p>
<p>Elements of the Syrian opposition have been targeted by malware campaigns since the early days of the conflict: regime-linked malware groups, the Syrian Electronic Army, ISIS, and a group linked to Lebanon reported by FireEye in 2015 have all attempted to penetrate opposition computers and communications. Some of these operations are still active as of the time of writing. This report adds one more threat actor to the list: Group5, which we name to reflect the four other known malware groups.</p>
<p>Group5 stands out from the operations that have already been reported on: some of the tactics and tools used have not been observed in this conflict; the operators seem comfortable with Iranian Persian dialect tools and Iranian hosting companies; and they appear to have run elements of the operation from Iranian IP space.</p>
<p><img fetchpriority="high" decoding="async" class="aligncenter wp-image-27750" src="https://citizenlab.ca/wp-content/uploads/2016/08/1-Syria-publicly-reported-threat-actors.jpg" alt="Syria: Publicly-reported Threat Actors" width="750" height="699" title="Group5: Syria and the Iranian Connection 1" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/1-Syria-publicly-reported-threat-actors.jpg 948w, https://citizenlab.ca/wp-content/uploads/2016/08/1-Syria-publicly-reported-threat-actors-300x280.jpg 300w, https://citizenlab.ca/wp-content/uploads/2016/08/1-Syria-publicly-reported-threat-actors-768x716.jpg 768w, https://citizenlab.ca/wp-content/uploads/2016/08/1-Syria-publicly-reported-threat-actors-180x168.jpg 180w, https://citizenlab.ca/wp-content/uploads/2016/08/1-Syria-publicly-reported-threat-actors-365x340.jpg 365w, https://citizenlab.ca/wp-content/uploads/2016/08/1-Syria-publicly-reported-threat-actors-213x199.jpg 213w" sizes="(max-width: 750px) 100vw, 750px" /></p>
<p>Like a chameleon, Group5 borrows opposition text and slogans for e-mail messages and watering holes, showing evidence of good social engineering and targeting. However, Group5&rsquo;s technical quality is low, and their operational security uneven. This is a common feature of many operations in the Syrian context: since the baseline security of many of the targets is very low, many successful threat actors seem to conserve (and in some cases not possess) more sophisticated techniques. We believe we identified Group5 early in its lifecycle, before all of the malware that had been staged and prepared could be deployed in a full campaign.</p>
<p>Our analysis indicates that Group5 is likely a new entrant in Syria, and we outline the circumstantial evidence pointing to an Iranian nexus. We do not conclusively attribute Group5 to a sponsor, although we suspect the interests of a state are present, in some form. Group5 is just the latest addition to an expanding cast of actors targeting Syrian opposition groups, and its entry into the conflict shows the continuing information security risks that they face.</p>
<h2 class="lh-solid mb3">Background: The Perpetual Targeting of the Syrian Opposition</h2>
<p class="mt0">Syrians have experienced monitoring and blocking of their electronic communications <a href="https://citizenlab.ca/2014/11/citizen-lab-research-on-blue-coat-in-article-on-censorship-syria/" class="pointer">for many years</a>. As a result, many more technically literate Syrians have familiarized themselves with VPNs and other tools to circumvent simple blocking, and achieve a degree of privacy. After the 2011 Uprising began, the regime disconnected telecommunications services in many areas controlled by opposition groups. This led, in these areas, to the widespread adoption of satellite internet connectivity, mostly via VSAT (Very Small Aperture Terminal) services like Tooway and iDirect, and to a lesser extent the use of BGAN (Broadband Global Area Network) terminals.</p>
<p>At the same time, the Syrian opposition&rsquo;s activities outside the country, both in neighboring countries like Turkey, as well as in the diaspora, dramatically increased. Much of this activity takes place over social networks, free e-mail accounts like Gmail (and Google Apps for Work), and via tools like Skype&rsquo;s VoIP services.</p>
<p>These shifts in connectivity limited the effectiveness of the passive monitoring and blocking used by the Al Assad Regime, and frustrated its abilities to monitor the opposition.</p>
<p>However, the shift towards social networks and other online tools has created new opportunities for the regime to target the opposition. Opposition members constantly share information, files, tools and programs, via social media. This highly-connected environment enables them to be highly aware of changing events, and quickly mobilize resources. In addition, a number of online services, such as the Google Play Store, are blocked or restricted for Syria. As a result, a culture of sharing Android APK files has also developed.</p>
<p>The heavy reliance on popular online platforms, and regular sharing of tools, presents many opportunities to seed malicious files. For the regime, a successful operation means a chance to regain visibility into the activities of groups within the geographic borders of Syria, while extending their reach outside into the diaspora. For other groups, such as ISIS, the digital vulnerability of the opposition presents an opportunity to develop a capability against opposition communications. The following section outlines several of these known threat actors.</p>
<h3 class="lh-solid mb3">Regime-Linked Groups</h3>
<p class="mt0">The most well-known threat actor to target the Syrian Revolution is the Syrian Electronic Army (SEA). However, many of the targets of the SEA have been Western organizations, although the SEA continues to conduct lower-profile operations that include malware against the opposition. Less notorious, although still the subject of reporting, are malware groups linked to the regime. These malware groups have been active since 2011, and have used a wide range of Commercial-Off-The-Shelf (COTS) Remote Access Trojans (RATs) to target the opposition. Typically, these groups bundle RATs with a wide range of documents and programs designed to appeal to the opposition. Over the years, these campaigns have included everything from &ldquo;revolution plans,&rdquo; lists of &ldquo;wanted suspects,&rdquo; to fake security and encryption tools. These campaigns have been extensively characterized by reports from the Citizen Lab, The Electronic Frontier Foundation, and private companies like TrendMicro and Kaspersky. A range of reports have documented these regime-linked campaigns over the years.</p>
<h3 class="lh-solid mb3">Pro-Regime Groups Outside Syria</h3>
<p class="mt0">There is also evidence of pro-Assad groups outside Syria participating in malware campaigns against opposition. Notably, <a href="https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-behind-the-syria-conflict.pdf" class="pointer" target="_blank" rel="noopener">a group reported on in 2015 by FireEye</a> (in collaboration with one of the authors of this report) used female avatars to send trojaned documents to high profile figures in opposition politics, aid, and armed groups. The operation yielded over 31,000 conversations, and a trove of sensitive information about a variety of groups&rsquo; plans and activities. This group also made use of fake matchmaking websites and social media accounts to backstop their deception.</p>
<h3 class="lh-solid mb3">ISIS-Linked Groups</h3>
<p class="mt0">On a different side of conflict, the Citizen Lab <a href="https://citizenlab.ca/2014/12/malware-attack-targeting-syrian-isis-critics/" class="pointer">documented a malware operation</a> linked to ISIS against the group &lsquo;Raqqa is Being Slaughtered Silently&rsquo; (RBSS) in 2015. The operators, masquerading as a group of RBSS sympathizers based in Canada, targeted victims with a file that claimed to contain locations of ISIS forces and US Airstrikes within Syria. The file actually contained custom malware that collected and transmitted information about the infected computer. The report concluded that there was strong circumstantial evidence linking the malware to members of ISIS.</p>
<h3 class="lh-solid mb3">Many Groups, Similar Tactics</h3>
<p class="mt0">Each of these groups has distinct Tactics, Techniques and Procedures (TTPs). However, one common thread among the many publicly-reported groups is that they rarely use exploits in their campaigns, instead relying heavily on social engineering and trickery to convince targets to execute malicious files, disguised as innocuous documents.</p>
<p>This may reflect some of these groups&rsquo; lack of technical sophistication. For example, many regime-linked groups seem to have very limited skills and technical resources, and rely almost entirely on RATs coupled with well-informed social engineering. These techniques have evolved, but not improved radically since 2011. In other cases, such as the Lebanon-linked group reported on by FireEye, operators may have access to more sophisticated techniques, but see little reason to use them against their targets, given the limited technical capabilities of the opposition.<br>
<a name="part1" class="pointer"></a></p>
<h2 class="lh-solid mb3">Part 1: Discovering Group5</h2>
<p class="mt0"><em>This section describes the e-mails that first alerted us to an operation targeting the Syrian political opposition in October 2015.</em></p>
<p>On October 3rd 2015, Noura Al-Ameer, a well-connected Syrian opposition political figure, negotiator, and former Vice President of the opposition Syrian National Council (SNC), received a suspicious e-mail.<a href="#1" class="pointer"><sup>1</sup></a> The e-mail purported to come from a human rights documentation organization she had never heard of: &ldquo;Assad Crimes.&rdquo; The sender, using the e-mail address office@assadcrimes[.]info claimed to be sharing information about Iranian &ldquo;crimes,&rdquo; a theme familiar to many in the opposition.</p>
<figure class="center mw-100 ba b--light-gray" style="width:750px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/2-Noura-Al-Ameer.jpg" class="pointer"><img decoding="async" class=" wp-image-27752" src="https://citizenlab.ca/wp-content/uploads/2016/08/2-Noura-Al-Ameer.jpg" alt="Noura Al-Ameer" width="750" height="498" title="Group5: Syria and the Iranian Connection 2" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/2-Noura-Al-Ameer.jpg 2500w, https://citizenlab.ca/wp-content/uploads/2016/08/2-Noura-Al-Ameer-300x199.jpg 300w, https://citizenlab.ca/wp-content/uploads/2016/08/2-Noura-Al-Ameer-768x510.jpg 768w, https://citizenlab.ca/wp-content/uploads/2016/08/2-Noura-Al-Ameer-1024x680.jpg 1024w, https://citizenlab.ca/wp-content/uploads/2016/08/2-Noura-Al-Ameer-180x120.jpg 180w, https://citizenlab.ca/wp-content/uploads/2016/08/2-Noura-Al-Ameer-512x340.jpg 512w, https://citizenlab.ca/wp-content/uploads/2016/08/2-Noura-Al-Ameer-297x197.jpg 297w" sizes="(max-width: 750px) 100vw, 750px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Fig. 1: Noura Al-Ameer, former SNC Vice President and a target of the operation. An activist from Homs, Syria, Al-Ameer was detained and tortured in the security branches, later moved to the infamous Adra prison in Damascus, prior to fleeing the country several years ago. Today, she is a delegate to the SNC&rsquo;s political council and works to document war crimes committed during the conflict. Her identity was falsely used to register the assadcrimes website.</figcaption></figure>
<p>Interestingly, Al-Ameer&rsquo;s own name was used in the assadcrimes[.]info domain registration, along with other false information (we speculate on the reason for using her name in <strong><a href="#part6" class="pointer">Part 6: Analysis of Competing Hypotheses</a></strong>).</p>
<p>Along with a brief pretext in the Subject and Body, the e-mail also contains an attached Microsoft PowerPoint Slideshow (PPSX) document that, when clicked, directly opens and runs a PowerPoint slideshow.</p>
<h3 class="lh-solid mb3">E-mail 1: The Initial Message (Dropper Doc 1)</h3>
<p class="mt0">On October 3rd 2015, Al-Ameer received the initial e-mail message, containing the first malicious file:<br>
<a href="https://citizenlab.ca/wp-content/uploads/2016/08/3-email-assadcrimes.png" class="pointer"><img decoding="async" class="aligncenter wp-image-27753" src="https://citizenlab.ca/wp-content/uploads/2016/08/3-email-assadcrimes.png" alt="Email message from AssadCrimes" width="750" height="249" title="Group5: Syria and the Iranian Connection 3" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/3-email-assadcrimes.png 933w, https://citizenlab.ca/wp-content/uploads/2016/08/3-email-assadcrimes-300x100.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/3-email-assadcrimes-768x255.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/3-email-assadcrimes-180x60.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/3-email-assadcrimes-605x201.png 605w, https://citizenlab.ca/wp-content/uploads/2016/08/3-email-assadcrimes-297x99.png 297w" sizes="(max-width: 750px) 100vw, 750px" /></a></p>
<p>Translation:</p>
<div class="about-author pa3 br1 f5 lh-copy mv1 bg-washed-yellow ba b--mid-gray"><strong>From: office@assadcrimes[.]info</strong><br>
<strong>To:</strong><br>
Subject: Iran is killing the Pilgrims in Mina<br>
Body: Iran&rsquo;s Crimes in the Kingdom of Saudi Arabia</div>
<p>Examination of the header of the message indicates that the message was sent via 88.198.222[.]163, the same IP address as the Command &amp; Control (C2) for the malware dropped by the file (See <strong><a href="#part3" class="pointer">Part 3: Windows Malware</a></strong>).</p>
<div class="about-author pa3 br1 f5 lh-copy mv1 bg-washed-yellow ba b--mid-gray">Assadcrimes.ppsx<br>
MD5 : 76F8142B4E52C671871B3DF87F10C30C</div>
<h4 class="lh-solid mb3">Communication with the Operator</h4>
<p class="mt0">Al-Ameer, who is no stranger to digital threats, recognized that the e-mail was suspicious, and on our instruction made contact with the operator, hoping to elicit further malware.</p>
<p>Al-Ameer&rsquo;s E-mail:<br>
<a href="https://citizenlab.ca/wp-content/uploads/2016/08/4-al-ameer-email.png" class="pointer"><img loading="lazy" decoding="async" class="aligncenter wp-image-27754" src="https://citizenlab.ca/wp-content/uploads/2016/08/4-al-ameer-email.png" alt="Al Ameer&#039;s Email" width="749" height="138" title="Group5: Syria and the Iranian Connection 4" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/4-al-ameer-email.png 923w, https://citizenlab.ca/wp-content/uploads/2016/08/4-al-ameer-email-300x55.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/4-al-ameer-email-768x141.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/4-al-ameer-email-180x33.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/4-al-ameer-email-605x111.png 605w, https://citizenlab.ca/wp-content/uploads/2016/08/4-al-ameer-email-297x55.png 297w" sizes="auto, (max-width: 749px) 100vw, 749px" /></a></p>
<p>Translation:</p>
<div class="about-author pa3 br1 f5 lh-copy mv1 bg-washed-yellow ba b--mid-gray"><strong>From</strong>: [Redacted]<br>
<strong>To</strong>: office@assadcrimes[.]info<br>
<strong>Body</strong>:<br>
Hello<br>
The file didn&rsquo;t work &hellip;. Please send a correct version</div>
<h3 class="lh-solid mb3">E-mail 2: The Operator&nbsp;Replies (Dropper Doc 2)</h3>
<p class="mt0">Shortly after the target&rsquo;s message, the operator replied with an updated file, sent via a webmail client (RoundCube):<br>
<a href="https://citizenlab.ca/wp-content/uploads/2016/08/5-threat-actor-replied.png" class="pointer"><img loading="lazy" decoding="async" class="aligncenter wp-image-27755" src="https://citizenlab.ca/wp-content/uploads/2016/08/5-threat-actor-replied.png" alt="The Threat Actor Replied" width="749" height="218" title="Group5: Syria and the Iranian Connection 5" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/5-threat-actor-replied.png 923w, https://citizenlab.ca/wp-content/uploads/2016/08/5-threat-actor-replied-300x87.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/5-threat-actor-replied-768x224.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/5-threat-actor-replied-180x52.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/5-threat-actor-replied-605x176.png 605w, https://citizenlab.ca/wp-content/uploads/2016/08/5-threat-actor-replied-297x87.png 297w" sizes="auto, (max-width: 749px) 100vw, 749px" /></a></p>
<p>Translation:</p>
<div class="about-author pa3 br1 f5 lh-copy mv1 bg-washed-yellow ba b--mid-gray"><strong>From</strong>: office@assadcrimes[.]info<br>
<strong>To</strong>:[Redacted]<br>
<strong>Body</strong>:<br>
inf* download</div>
<p>We are unsure why the second e-mail does not contain additional social engineering text. It is possible this was an oversight, or that the Group5 operator at the time was not comfortable writing in Arabic.</p>
<div class="about-author pa3 br1 f5 lh-copy mv1 bg-washed-yellow ba b--mid-gray">Assadcrimes1.ppsx<br>
MD5: F1F84EA3229DCA0CCACB7381A2F49F99</div>
<h3 class="lh-solid mb3">Bait Content: Syria and Iran-Themed PowerPoint Slideshows</h3>
<p class="mt0">The PPSX documents (assadcrimes.ppsx &amp; assadcrimes1.ppsx) contain a series of images and Arabic text, including cartoons and photographs describing politically sensitive events, such as aggressions launched by Iran against Saudi Arabia, and the politics surrounding the current Syrian conflict. The documents also provide a historical overview of Iranian-linked &ldquo;attacks&rdquo; and other events in the Kingdom of Saudi Arabia.</p>
<figure class="center mw-100 ba b--light-gray" style="width:750px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/6-figure-2-screenshot-iranian-attack-1984.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27756" src="https://citizenlab.ca/wp-content/uploads/2016/08/6-figure-2-screenshot-iranian-attack-1984.png" alt="Figure 2: Screenshot from a slide referred to an Iranian attack in 1984 against petrochemical facilities in Saudi Arabia." width="750" height="468" title="Group5: Syria and the Iranian Connection 6" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/6-figure-2-screenshot-iranian-attack-1984.png 2500w, https://citizenlab.ca/wp-content/uploads/2016/08/6-figure-2-screenshot-iranian-attack-1984-300x187.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/6-figure-2-screenshot-iranian-attack-1984-768x480.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/6-figure-2-screenshot-iranian-attack-1984-1024x640.png 1024w, https://citizenlab.ca/wp-content/uploads/2016/08/6-figure-2-screenshot-iranian-attack-1984-180x112.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/6-figure-2-screenshot-iranian-attack-1984-544x340.png 544w, https://citizenlab.ca/wp-content/uploads/2016/08/6-figure-2-screenshot-iranian-attack-1984-297x186.png 297w" sizes="auto, (max-width: 750px) 100vw, 750px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 2: Screenshot from a slide referred to an Iranian attack in 1984 against petrochemical facilities in Saudi Arabia.</figcaption></figure>
<p>Translation:</p>
<div class="about-author pa3 br1 f5 lh-copy mv1 bg-washed-yellow ba b--mid-gray">On 1404 A.H &ndash; 1984 A.D Iranian warship attacked Saudi Arabia<br>
On 1404 A.H, two Iranian war planes headed to Jubail industrial city, to bomb and hit critical factories (Petrochemical factory) and by god&rsquo;s well, the Saudi&rsquo;s air forces was able to hit one plane, while the other managed to escape.</div>
<p>When opened, both files download malware onto the victim&rsquo;s machine. Malware from these files is analyzed in <a href="#part3" class="pointer">Part 3: Windows Malware</a>.<br>
<a name="part2" class="pointer"></a></p>
<h2 class="lh-solid mb3">Part 2: The Assadcrimes Website</h2>
<p class="mt0"><em>Group5 operated a website, assadcrimes[.] info that served as a watering hole for Android and Windows malware. This section outlines the various files hosted on the site.<br>
</em></p>
<p>After the initial e-mails, we began to monitor a website linked to the e-mails: assadcrimes[.]info. At the time of these e-mails (Oct. 3, 2015), the site was not fully functional. However, within a few days (Oct. 11, 2015) the main page displayed &ldquo;Posts Tagged Bashar Assad Crimes&rdquo; with content apparently critical of Bashar Assad. The content appears to have been <a href="https://syriatopics.wordpress.com/" class="pointer" target="_blank" rel="noopener">scraped from an opposition blog</a>, as well as from <a href="http://syrian-mirror.net/en/cat/syria-mirror/who-is-caesar-the-man-who-leaked-crime-of-the-century/" class="pointer" target="_blank" rel="noopener">other opposition sites</a>. This blog was created in the name of <a href="https://en.wikipedia.org/wiki/Tal_al-Mallohi" class="pointer" target="_blank" rel="noopener">Tal al-Mallohi</a>, known as Syria&rsquo;s youngest prisoner of conscience. The original blog creation predates the current unrest in Syria.</p>
<p><figure class="center mw-100 ba b--light-gray" style="width:750px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/7-assadcrimes.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27757" src="https://citizenlab.ca/wp-content/uploads/2016/08/7-assadcrimes-1024x765.png" alt="Figure 3 : Screenshot of the website taken in April 2016 (assadcrimes[.]info)." width="750" height="560" title="Group5: Syria and the Iranian Connection 7" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/7-assadcrimes-1024x765.png 1024w, https://citizenlab.ca/wp-content/uploads/2016/08/7-assadcrimes-300x224.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/7-assadcrimes-768x574.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/7-assadcrimes-180x135.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/7-assadcrimes-455x340.png 455w, https://citizenlab.ca/wp-content/uploads/2016/08/7-assadcrimes-266x199.png 266w" sizes="auto, (max-width: 750px) 100vw, 750px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 3 : Screenshot of the website taken in April 2016 (assadcrimes[.]info).</figcaption></figure>Shortly before this publication of Group5, the website was listed as &ldquo;expired&rdquo; and parked, indicating that the owner chose not to renew the domain.</p>
<figure class="center mw-100 ba b--light-gray" style="width:742px;"><div class="tc pa2 bg-white"><img loading="lazy" decoding="async" class="wp-image-27765" src="https://citizenlab.ca/wp-content/uploads/2016/08/8-group5-staging-and-targeting.jpg" alt="Group5 Staging and Targeting" width="742" height="765" title="Group5: Syria and the Iranian Connection 8" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/8-group5-staging-and-targeting.jpg 755w, https://citizenlab.ca/wp-content/uploads/2016/08/8-group5-staging-and-targeting-291x300.jpg 291w, https://citizenlab.ca/wp-content/uploads/2016/08/8-group5-staging-and-targeting-180x185.jpg 180w, https://citizenlab.ca/wp-content/uploads/2016/08/8-group5-staging-and-targeting-330x340.jpg 330w, https://citizenlab.ca/wp-content/uploads/2016/08/8-group5-staging-and-targeting-193x199.jpg 193w, https://citizenlab.ca/wp-content/uploads/2016/08/8-group5-staging-and-targeting-32x32.jpg 32w" sizes="auto, (max-width: 742px) 100vw, 742px" /></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Group5 Staging and Targeting</figcaption></figure>
<h3 class="lh-solid mb3">Malware Seeding on the Website (Dropper Doc 3)</h3>
<p class="mt0">While monitoring the website, we identified several directories that auto-download a further malicious file (assadcrimes.info.ppsx). These links seem designed for other forms of social engineering, perhaps using similar bait to the messages targeting Al-Ameer. The Assadcrimes.info.ppsx file concerns the Syrian conflict, with characters and cartoons culled from social media and online sites.</p>
<figure class="center mw-100 ba b--light-gray" style="width:749px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/9-slide-from-assadcrimes.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27766" src="https://citizenlab.ca/wp-content/uploads/2016/08/9-slide-from-assadcrimes-1024x767.png" alt="Figure 4 : A slide from the file Assadcrimes.info.ppsx" width="749" height="561" title="Group5: Syria and the Iranian Connection 9" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/9-slide-from-assadcrimes-1024x767.png 1024w, https://citizenlab.ca/wp-content/uploads/2016/08/9-slide-from-assadcrimes-300x225.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/9-slide-from-assadcrimes-768x575.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/9-slide-from-assadcrimes-180x135.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/9-slide-from-assadcrimes-454x340.png 454w, https://citizenlab.ca/wp-content/uploads/2016/08/9-slide-from-assadcrimes-266x199.png 266w, https://citizenlab.ca/wp-content/uploads/2016/08/9-slide-from-assadcrimes.png 1906w" sizes="auto, (max-width: 749px) 100vw, 749px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 4 : A slide from the file Assadcrimes.info.ppsx</figcaption></figure>
<p>Translation:</p>
<div class="about-author pa3 br1 f5 lh-copy mv1 bg-washed-yellow ba b--mid-gray">A new Play in Syria<br>
Russian-American plan to divide the Syrian cake.</div>
<p>When viewed, the victim&rsquo;s computer is silently infected with malware (See <strong><a href="#part3" class="pointer">Part 3: Windows Malware</a></strong>).</p>
<div class="about-author pa3 br1 f5 lh-copy mv1 bg-washed-yellow ba b--mid-gray">Assadcrimes.info.ppsx<br>
MD5: 30BB678DB3AD0140FC33ACD9803385C3</div>
<h3 class="lh-solid mb3">Martyred Children (Decoy Dropper 4)</h3>
<p class="mt0">Elsewhere on the site we found several HTML pages that, when visited, triggered the downloading of a malicious executable named &ldquo;martyred children&rdquo; (alshohadaa alatfal.exe). When executed, the program pulls images hosted on assadcrimes[.]info of the <a href="https://en.wikipedia.org/wiki/Ghouta_chemical_attack" class="pointer" target="_blank" rel="noopener">Ghouta Chemical Attacks</a>, while simultaneously infecting the target machine with malware.</p>
<figure class="center mw-100 ba b--light-gray" style="width:749px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/10-figure-5-alshohadaa.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27767" src="https://citizenlab.ca/wp-content/uploads/2016/08/10-figure-5-alshohadaa.png" alt="Figure 5 : showing screenshot of &lsquo;alshohadaa alatfal.exe&rsquo; running" width="749" height="548" title="Group5: Syria and the Iranian Connection 10" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/10-figure-5-alshohadaa.png 950w, https://citizenlab.ca/wp-content/uploads/2016/08/10-figure-5-alshohadaa-300x219.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/10-figure-5-alshohadaa-768x562.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/10-figure-5-alshohadaa-180x132.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/10-figure-5-alshohadaa-465x340.png 465w, https://citizenlab.ca/wp-content/uploads/2016/08/10-figure-5-alshohadaa-272x199.png 272w" sizes="auto, (max-width: 749px) 100vw, 749px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 5 : showing screenshot of &lsquo;alshohadaa alatfal.exe&rsquo; running. Images blurred by the authors.</figcaption></figure>
<p>Malware from the website is described in Part 3: Windows Malware</p>
<div class="about-author pa3 br1 f5 lh-copy mv1 bg-washed-yellow ba b--mid-gray">alshohadaa alatfal.exe<br>
MD5: 2FC276E1C06C3C78C6D7B66A141213BE</div>
<h3 class="lh-solid mb3">Android Malware</h3>
<p class="mt0">While examining the assadcrimes[.]info website, we identified Android malware, seeded via a fake Adobe Flash Player update notification. We describe this Android malware in detail in: Part 4: Android Malware.</p>
<div class="about-author pa3 br1 f5 lh-copy mv1 bg-washed-yellow ba b--mid-gray">adobe_flash_player.apk<br>
MD5: 8EBEB3F91CDA8E985A9C61BEB8CDDE9D</div>
<p><a name="part3" class="pointer"></a></p>
<h2 class="lh-solid mb3">Part 3: Windows Malware</h2>
<p class="mt0">Group5 used (or was staging) a range of malware in this operation, ranging from malicious PowerPoint slideshows using exploits to executable files that directly drop malware. A comprehensive analysis of their malware is found in <strong><a href="#appendix-a" class="pointer">Appendix A: Windows Malware Analysis</a></strong>.</p>
<h3 class="lh-solid mb3">Malicious PowerPoint</h3>
<p class="mt0">The initial Group5 targeting that we observed in the e-mails to Al-Ameer included PPSX documents as a vehicle for malware using two different techniques: (1) executing OLE objects using animation actions within a PowerPoint slideshow and; (2) using CVE-2014-4114 to drop and execute malicious code.</p>
<p>In assadcrimes.ppsx the operators embed an OLE Package object within a PowerPoint slideshow. When displayed as an animation, the object is executed while the slideshow is viewed, a <a href="http://phishme.com/powerpoint-and-custom-actions/" class="pointer" target="_blank" rel="noopener">technique that has been previously described</a> (for more detail, see <strong><a href="#appendix-a" class="pointer">Appendix A: Dropper Doc 1</a></strong> &amp; <strong><a href="#appendix-a" class="pointer">Appendix A: Dropper Doc 3</a></strong>). In this case the user is presented with a prompt asking whether they wish to run the object.</p>
<figure class="center mw-100 ba b--light-gray" style="width:745px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/11-figure-6-malicious-powerpoint.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27770" src="https://citizenlab.ca/wp-content/uploads/2016/08/11-figure-6-malicious-powerpoint-1024x657.png" alt="Figure 6: The malicious executable within the PowerPoint slideshow, when viewed in edit mode. A victim double clicking on the slideshow would not be shown the object." width="745" height="478" title="Group5: Syria and the Iranian Connection 11" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/11-figure-6-malicious-powerpoint-1024x657.png 1024w, https://citizenlab.ca/wp-content/uploads/2016/08/11-figure-6-malicious-powerpoint-300x193.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/11-figure-6-malicious-powerpoint-768x493.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/11-figure-6-malicious-powerpoint-180x116.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/11-figure-6-malicious-powerpoint-530x340.png 530w, https://citizenlab.ca/wp-content/uploads/2016/08/11-figure-6-malicious-powerpoint-297x191.png 297w, https://citizenlab.ca/wp-content/uploads/2016/08/11-figure-6-malicious-powerpoint.png 1776w" sizes="auto, (max-width: 745px) 100vw, 745px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 6: The malicious executable within the PowerPoint slideshow, when viewed in edit mode. A victim double clicking on the slideshow would not be shown the object.</figcaption></figure>
<p>In the assadcrimes1.ppsx, the operator has created a PowerPoint file that leverages CVE-2014-4114, a vulnerability in the OLE packager component of the Windows operating system (See <strong><a href="#appendix-a" class="pointer">Appendix A: Dropper Doc 2</a></strong>).</p>
<p>Decoy Applications<br>
The operators have also created a decoy application, hosted on assadcrimes[.]info, that displays images of child victims of the 2013 Ghouta Chemical Attacks. When executed, the application silently decrypts and drops the malware (See <strong><a href="#appendix-a" class="pointer">Appendix A: Decoy Dropper 4</a></strong>).</p>
<p><a href="https://citizenlab.ca/wp-content/uploads/2016/08/12-group5-malware-techniques.jpg" class="pointer"><img loading="lazy" decoding="async" class="aligncenter wp-image-27772" src="https://citizenlab.ca/wp-content/uploads/2016/08/12-group5-malware-techniques.jpg" alt="Group5 Malware Techniques" width="729" height="751" title="Group5: Syria and the Iranian Connection 12" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/12-group5-malware-techniques.jpg 755w, https://citizenlab.ca/wp-content/uploads/2016/08/12-group5-malware-techniques-291x300.jpg 291w, https://citizenlab.ca/wp-content/uploads/2016/08/12-group5-malware-techniques-180x185.jpg 180w, https://citizenlab.ca/wp-content/uploads/2016/08/12-group5-malware-techniques-330x340.jpg 330w, https://citizenlab.ca/wp-content/uploads/2016/08/12-group5-malware-techniques-193x199.jpg 193w, https://citizenlab.ca/wp-content/uploads/2016/08/12-group5-malware-techniques-32x32.jpg 32w" sizes="auto, (max-width: 729px) 100vw, 729px" /></a></p>
<h3 class="lh-solid mb3">The RATs</h3>
<p class="mt0">The operators use these techniques to deliver two commonly available Remote Access Trojans (RATs): njRat and NanoCore RAT. In both cases, Group5 disguised the malicious binaries with several layers of obfuscation, including crypting and packing to reduce the possibility of detection by antivirus software.</p>
<p>Both RATs provide a wide range of functionality on the target machine, ranging from collecting files, watching the screen, to capturing passwords and keystrokes. The RATs also enable the operator to remotely delete files, and spy on the computer user via the microphone or webcam.</p>
<figure class="center mw-100 ba b--light-gray" style="width:750px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/13-njrat.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27774" src="https://citizenlab.ca/wp-content/uploads/2016/08/13-njrat.png" alt="Figure 7 : Screenshot of njRAT working, and accessing the victim&rsquo;s files." width="750" height="409" title="Group5: Syria and the Iranian Connection 13" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/13-njrat.png 798w, https://citizenlab.ca/wp-content/uploads/2016/08/13-njrat-300x164.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/13-njrat-768x419.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/13-njrat-180x98.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/13-njrat-605x330.png 605w, https://citizenlab.ca/wp-content/uploads/2016/08/13-njrat-297x162.png 297w" sizes="auto, (max-width: 750px) 100vw, 750px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 7 : Screenshot of njRAT working, and accessing the victim&rsquo;s files.</figcaption></figure>
<h3 class="lh-solid mb3">Antivirus Detection</h3>
<p class="mt0">On July 26, 2016 we conducted a VirusTotal search for the MD5 hashes of each of the files encountered during this operation. The results, provided in <strong><a href="#appendix-d" class="pointer">Appendix D: File Hashes</a></strong>, were consistent with a highly focused or targeted operation in that only two of the 16 (12.5%) unique MD5s were found.<br>
<a name="part4" class="pointer"></a></p>
<h2 class="lh-solid mb3">Part 4: The Android Malware</h2>
<p class="mt0"><em>While examining assadcrimes[.]info, we determined that the site was also hosting a decoy Flash Player update page. This page, located on a subdomain, included a download link to a malicious Android APK. For a full analysis of this malware see <strong><a href="#appendix-b" class="pointer">Appendix B: Android Malware</a></strong>.</em></p>
<p>While examining the website we found that the operators had prepared Android malware masquerading as an Adobe Flash Player update notification. Clicking on the &ldquo;Update&rdquo; link (See Figure 8) downloads a malicious file, masquerading as a software update.</p>
<figure class="center mw-100 ba b--light-gray" style="width:715px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/14-fake-flash-player-update.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27776" src="https://citizenlab.ca/wp-content/uploads/2016/08/14-fake-flash-player-update-867x1024.png" alt="Figure 8: Screenshot from the subdomain that was used to host the fake Flash Player update page." width="715" height="845" title="Group5: Syria and the Iranian Connection 14" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/14-fake-flash-player-update-867x1024.png 867w, https://citizenlab.ca/wp-content/uploads/2016/08/14-fake-flash-player-update-254x300.png 254w, https://citizenlab.ca/wp-content/uploads/2016/08/14-fake-flash-player-update-768x907.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/14-fake-flash-player-update-180x212.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/14-fake-flash-player-update-288x340.png 288w, https://citizenlab.ca/wp-content/uploads/2016/08/14-fake-flash-player-update-169x199.png 169w, https://citizenlab.ca/wp-content/uploads/2016/08/14-fake-flash-player-update.png 964w" sizes="auto, (max-width: 715px) 100vw, 715px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 8: Screenshot from the subdomain that was used to host the fake Flash Player update page.</figcaption></figure>
<p>The APK is an instance of DroidJack. According to <a href="http://www.symantec.com/connect/blogs/droidjack-rat-tale-how-budding-entrepreneurism-can-turn-cybercrime" class="pointer" target="_blank" rel="noopener">Symantec</a>, this malware evolved from an older codebase known as SandroRAT. The RAT provides a wide range of functionality, enabling the operator to capture messages, contacts, photos and other materials from the device. In addition, DroidJack can also remotely activate the phone camera and microphone, without notifying the victim. Figure 9 shows some of the functionality available.</p>
<figure class="center mw-100 ba b--light-gray" style="width:750px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/15-figure-9-droidjack.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27778" src="https://citizenlab.ca/wp-content/uploads/2016/08/15-figure-9-droidjack.png" alt="Figure 9: DroidJack server list of commands." width="750" height="528" title="Group5: Syria and the Iranian Connection 15" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/15-figure-9-droidjack.png 845w, https://citizenlab.ca/wp-content/uploads/2016/08/15-figure-9-droidjack-300x211.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/15-figure-9-droidjack-768x541.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/15-figure-9-droidjack-180x127.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/15-figure-9-droidjack-483x340.png 483w, https://citizenlab.ca/wp-content/uploads/2016/08/15-figure-9-droidjack-283x199.png 283w" sizes="auto, (max-width: 750px) 100vw, 750px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 9: DroidJack server list of commands.</figcaption></figure>
<p>A more extensive analysis of the DroidJack malware, can be found in <strong><a href="#appendix-b" class="pointer">Appendix B: Android Malware</a></strong>. Interestingly, DroidJack has also emerged recently, <a href="https://www.proofpoint.com/us/threat-insight/post/droidjack-uses-side-load-backdoored-pokemon-go-android-app" class="pointer" target="_blank" rel="noopener">bundled with versions of Pok&eacute;mon Go</a>.</p>
<p>This approach to mobile malware seeding, while cumbersome, might be assumed to have greater success in the target group of Syrians than other populations. It is common for Syrians to share Android APK files outside the Google Play Store, as Google Play Services are not available within Syria. This practice carries over to the Syrian diaspora in other countries, despite the availability of Google Play. As a result, we suspect that most devices are set to accept APK files from unknown developers.<br>
<a name="part5" class="pointer"></a></p>
<h2 class="lh-solid mb3">Part 5: Attribution</h2>
<p class="mt0"><em>Group5 left a number of clues as to their origin and identity, including the tools they used, where they hosted their website and C2, and how they accessed the website. Notably, Group5 may have also been using a customized version of an Iranian obfuscation tool.</em></p>
<p>This section provides an overview of the clues left by Group5 on the website, and in the malware. First, we analyze logs that the operator mistakenly left publicly visible on the assadcrimes[.]info website. These logs include not only the visitors to the site, but also the IP addresses and user agent strings that belong to the operator as she or he logged into the site during the development phase. These artifacts provide interesting clues as to the operator&rsquo;s identity and operational security practices, such as using a VPN, and suggest a strong Iranian nexus.</p>
<p>Second, we note the use of Persian-language tools in Group5, from the mailer to the packer.<br>
Finally, we analyze a recurrent theme in the binaries: &ldquo;Mr. Tekide&rdquo; &ndash; a name that appears regularly in the implants. We link this name to the Iranian developer of a series of malware tools, several of which were used in this operation. Additionally, we examine the circumstantial evidence connecting this developer to Group5&rsquo;s activities.</p>
<h3 class="lh-solid mb3">Unprotected Logs</h3>
<p class="mt0">Several key directories on the assadcrimes[.]info site were left as public, including a folder containing the website logs, a feature Group5 seems to have enabled early in the operation. These logs date to the early development and operation of the website, and reveal interesting clues about operator origin and operational security.</p>
<p>After processing the logs to remove crawlers belonging to Google, Bing, Yandex and others, we scrutinized the logs of the site for evidence of victims, but were unable to locate any victim IPs with high confidence.</p>
<h4 class="lh-solid mb3">Identifying the Operator from Website Logs</h4>
<p class="mt0">While the logs provided few clues as to victims, they proved to be exceptionally useful for identifying the IP addresses used by Group5 as they developed the site. Looking at the earliest logs in the set, from October 11, 2015, we find the operator accessing the site hourly from an Iranian IP block as the development continues.</p>
<p><figure class="center mw-100 ba b--light-gray" style="width:750px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/16-figure10-screenshot.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27779" src="https://citizenlab.ca/wp-content/uploads/2016/08/16-figure10-screenshot-1024x342.png" alt="Figure 10: Screenshot of 11th October 2015 log, showing list of IP&rsquo;s and referrer from hostnegar[.]com" width="750" height="251" title="Group5: Syria and the Iranian Connection 16" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/16-figure10-screenshot-1024x342.png 1024w, https://citizenlab.ca/wp-content/uploads/2016/08/16-figure10-screenshot-300x100.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/16-figure10-screenshot-768x256.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/16-figure10-screenshot-180x60.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/16-figure10-screenshot-605x202.png 605w, https://citizenlab.ca/wp-content/uploads/2016/08/16-figure10-screenshot-297x99.png 297w, https://citizenlab.ca/wp-content/uploads/2016/08/16-figure10-screenshot.png 1109w" sizes="auto, (max-width: 750px) 100vw, 750px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 10: Screenshot of 11th October 2015 log, showing list of IP&rsquo;s and referrer from hostnegar[.]com</figcaption></figure>The first logged visits to the site come from the IP address 37.137.131[.]70, which belongs to a block registered to &lsquo;Rightel Communication&rsquo;, an Iranian mobile phone network operator.</p>
<div class="about-author pa3 br1 f5 lh-copy mv1 bg-washed-yellow ba b--mid-gray">inetnum: 37.137.128[.]0 &ndash; 37.137.255[.]255<br>
netname: RighTel<br>
descr: &ldquo;Rightel Communication Service Company PJS&rdquo;<br>
country: IR<br>
admin-c: RP12366-RIPE<br>
tech-c: RP12366-RIPE<br>
status: ASSIGNED PA<br>
mnt-by: TA59784-MNT<br>
created: 2013-08-20T11:13:17Z<br>
last-modified: 2014-05-17T05:28:10Z<br>
source: RIPEperson: RighTel PJS<br>
address: 9th floor, Chooka Building, No 8 , west Armaghan Street, Vali-e-Asr Street<br>
(After Niayesh Highway), Tehran, Iran<br>
phone: + 982127654530<br>
nic-hdl: RP12366-RIPE<br>
mnt-by: TA59784-MNT<br>
created: 2014-05-17T05:23:47Z<br>
last-modified: 2014-05-17T05:23:47Z<br>
source: RIPE</div>
<p>Further confirming the link is that the operator&rsquo;s traffic includes a referrer from the Iranian hosting company (hostnegar[.]com) for the site.</p>
<figure class="center mw-100 ba b--light-gray" style="width:749px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/17-figure11-hostnegar.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27781" src="https://citizenlab.ca/wp-content/uploads/2016/08/17-figure11-hostnegar-1024x777.png" alt="Figure 11: Hostnegar&rsquo;s login page" width="749" height="568" title="Group5: Syria and the Iranian Connection 17" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/17-figure11-hostnegar-1024x777.png 1024w, https://citizenlab.ca/wp-content/uploads/2016/08/17-figure11-hostnegar-300x228.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/17-figure11-hostnegar-768x583.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/17-figure11-hostnegar-180x137.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/17-figure11-hostnegar-448x340.png 448w, https://citizenlab.ca/wp-content/uploads/2016/08/17-figure11-hostnegar-262x199.png 262w" sizes="auto, (max-width: 749px) 100vw, 749px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 11: Hostnegar&rsquo;s login page</figcaption></figure>
<p>Tracing the operator through an initial UserAgent string (a version of Windows NT 6.3)<a href="#2" class="pointer"><sup>2</sup></a> and IP address, we found them accessing the site from an iPhone, other Iranian IP addresses, as well as VPNs.</p>
<figure class="center mw-100 ba b--light-gray" style="width:747px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/18-figure12-user-agents.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27783" src="https://citizenlab.ca/wp-content/uploads/2016/08/18-figure12-user-agents-1024x275.png" alt="Figure 12: User agents for the site owner, accessing the website from Iranian IPs and VPN." width="747" height="201" title="Group5: Syria and the Iranian Connection 18" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/18-figure12-user-agents-1024x275.png 1024w, https://citizenlab.ca/wp-content/uploads/2016/08/18-figure12-user-agents-300x80.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/18-figure12-user-agents-768x206.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/18-figure12-user-agents-180x48.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/18-figure12-user-agents-605x162.png 605w, https://citizenlab.ca/wp-content/uploads/2016/08/18-figure12-user-agents-297x80.png 297w, https://citizenlab.ca/wp-content/uploads/2016/08/18-figure12-user-agents.png 1454w" sizes="auto, (max-width: 747px) 100vw, 747px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 12: User agents for the site owner, accessing the website from Iranian IPs and VPN.</figcaption></figure>
<p>Additionally, the operator accessed the site directly from the malware&rsquo;s C2 server (88.198.222[.]163).</p>
<figure class="center mw-100 ba b--light-gray" style="width:642px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/19-figure-13-useragents.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27785" src="https://citizenlab.ca/wp-content/uploads/2016/08/19-figure-13-useragents.png" alt="Figure 13 : User agents for the site owner, accessing the website from the C2, and using VPNs." width="642" height="418" title="Group5: Syria and the Iranian Connection 19" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/19-figure-13-useragents.png 644w, https://citizenlab.ca/wp-content/uploads/2016/08/19-figure-13-useragents-300x195.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/19-figure-13-useragents-180x117.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/19-figure-13-useragents-523x340.png 523w, https://citizenlab.ca/wp-content/uploads/2016/08/19-figure-13-useragents-297x193.png 297w" sizes="auto, (max-width: 642px) 100vw, 642px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 13 : User agents for the site owner, accessing the website from the C2, and using VPNs.</figcaption></figure>
<p>These links provide evidence for an Iranian nexus, and suggest that the operator may have been taking steps to conceal their true origin IP. However, these steps were not well executed, which enabled us to track Group5 as they continued to access the site.</p>
<p>Interestingly, after the flurry of activity in October 2015, by November-December the operator accessed the site only 7 times, and between January-February 2016 only twice (it is possible we have missed some access attempts that appear to be innocuous traffic). We concluded from this that Group5 may have stepped back from the site at some point after the New Year.</p>
<h3 class="lh-solid mb3">A Persian-language Mailer</h3>
<p class="mt0">Before the assadcrimes[.]info page was fully populated with decoy content, we found that the site was hosting a Persian-language mailer (See Figure 14 below). We were not able to determine how the mailer was being used by Group5, as it was not observed sending any of the e-mails we were able to analyze.</p>
<figure class="center mw-100 ba b--light-gray" style="width:747px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/20-figure-14-mailer.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27786" src="https://citizenlab.ca/wp-content/uploads/2016/08/20-figure-14-mailer.png" alt="Figure 14: A screenshot for the mailer as it was on October 4, 2015." width="747" height="481" title="Group5: Syria and the Iranian Connection 20" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/20-figure-14-mailer.png 975w, https://citizenlab.ca/wp-content/uploads/2016/08/20-figure-14-mailer-300x193.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/20-figure-14-mailer-768x494.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/20-figure-14-mailer-180x116.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/20-figure-14-mailer-529x340.png 529w, https://citizenlab.ca/wp-content/uploads/2016/08/20-figure-14-mailer-297x191.png 297w" sizes="auto, (max-width: 747px) 100vw, 747px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 14: A screenshot for the mailer as it was on October 4, 2015.</figcaption></figure>
<h3 class="lh-solid mb3">Links to Known Threat Actors</h3>
<p class="mt0">Group5 appears to have used only a single shared web hosting provider and a single command and control IP address for this operation. We are unsure whether this strategy was the product of limited resources, an effort to compartmentalise the operation from other activities, or simply a highly targeted operation with a specific focus.</p>
<p>The narrow infrastructure and small number of observed targets limited our search base for potential infrastructure overlap with known groups. In a holistic evaluation of the campaign, we failed to identify links with the TTPs of previously documented threat actors or groups active in Syria. We also failed to find a link in searches of malware databases and open source searching.</p>
<p>On the level of TTPs, superficially there is similarity between this group and other active groups originating in Iran. The group <a href="http://researchcenter.paloaltonetworks.com/2016/05/prince-of-persia-infy-malware-active-in-decade-of-targeted-attacks/" class="pointer" target="_blank" rel="noopener">multiply</a> <a href="http://researchcenter.paloaltonetworks.com/2016/06/unit42-prince-of-persia-game-over/" class="pointer" target="_blank" rel="noopener">documented</a> by Palo Alto Networks, which they call &ldquo;Infy,&rdquo; is also known to use PowerPoint files in their targeting, although we found no overlap in infrastructure. Furthermore, their targeting (according to what Palo Alto Networks has said publicly) is slightly different, and involved PowerPoint 97-2003 documents (not PPSX files) during the same period in which Group5 was using a different tactic.</p>
<p>We cannot not rule out the possibility that a known group is behind this operation, and that we missed or lacked access to a key piece of evidence that would link such a group to Group5&rsquo;s infrastructure or tools. One interesting direction for further investigation came from analysis of the tool used to obfuscate the RATs, which yielded a number of interesting connections to known threat actors and tools. Notably, the PAC Crypt tool, and Mr. Tekide, the alias of an Iranian malware developer.</p>
<h4 class="lh-solid mb3">PAC Crypt</h4>
<p class="mt0">Commonly used in malware campaigns, crypters are programs which are designed to disguise the underlying malicious binary by hiding it within a layer of obfuscation which is then deobfuscated at the time of execution. In this way, crypting a malicious binary provides a level of protection against signature-based endpoint security tools such as antivirus. In <a href="#appendix-a" class="pointer">Appendix A</a> we describe the discovery of a series of strings which suggest that both the njRAT and NanoCore RAT payloads were built, and then subsequently obfuscated using a crypter tool named &lsquo;PAC Crypt&rsquo;.</p>
<p>Careful inspection revealed that the crypter in this case had been compiled in debug mode, thus preserving PDB reference data. PDB file references are common in .Net applications when compiled in &lsquo;debug&rsquo; mode, and they frequently reveal the original file path of the application source code on the developer&rsquo;s computer.</p>
<p>Below are the PDB strings discovered when examining the &lsquo;crypted&rsquo; njRAT and NanoCore files:</p>
<figure class="center mw-100 table-overflow" style="min-width:50%; width: min-content; margin: 0px auto"><div class="center" style="min-width: 100%; width: fit-content"><table border="0" cellspacing="0" style="width: max-content; height: unset" class="ba b--light-gray">
<tbody>
<tr class="striped--light-gray">
<td>Reference: Doc Dropper 1 Crypter</td>
<td>MD5: a4f1f4921bb11ff9d22fad89b19b155d</td>
<td>Compile Time: 9/30/2015 00:02:51</td>
</tr>
<tr class="striped--light-gray">
<td colspan="3">c:\users\<strong>mr.tekide</strong>\documents\visual studio 2013\projects\paccryptnano core dehgani -vds\windowsapplication2\obj\debug\launch manager.pdb</td>
</tr>
</tbody>
</table></div></figure>
<p>&nbsp;</p>
<figure class="center mw-100 table-overflow" style="min-width:50%; width: min-content; margin: 0px auto"><div class="center" style="min-width: 100%; width: fit-content"><table border="0" cellspacing="0" style="width: max-content; height: unset" class="ba b--light-gray">
<tbody>
<tr class="striped--light-gray">
<td>Reference: Doc Dropper 3 Crypter</td>
<td>MD5:6161083021b695814434450c1882f9f3</td>
<td>Compile Time: 10/6/2015 02:13:45</td>
</tr>
<tr class="striped--light-gray">
<td colspan="3">C:\Users<strong>\mr.tekide</strong>\Documents\Visual Studio 2013\Projects\paccrypt11njratmalii\paccryptalipnahzade\obj\Debug\LManager.pdb</td>
</tr>
</tbody>
</table></div></figure>
<p>These PDB strings reveal two facts relevant to the discussion of attribution. The first is that the username of the individual who compiled the .Net application in both cases was &lsquo;mr.tekide&rsquo;. The second is that in both PDB strings we find not only a reference to the malware crypter used (a tool called &lsquo;PAC Crypt&rsquo;), but also an explicit reference to the crypted malware payloads &ndash; &lsquo;nano core&rsquo; and &lsquo;njrat&rsquo;.</p>
<p>These two facts together suggest that an individual having the username &lsquo;mr.tekide&rsquo; compiled a copy of PAC Crypt for specific projects involving njRAT and NanoCore RAT.</p>
<p>A common usage scenario for a malware crypter involves an operator purchasing a copy of the crypter in a compiled form (or using a cracked version), then using the crypter to obfuscate the malware executable which is to be distributed. In this scenario the developer of the crypter has no knowledge of what specific malware the threat actor will eventually choose to encrypt with the purchased copy of the crypter.</p>
<p>The fact that the &lsquo;PAC Crypt&rsquo; PDB strings discovered in this case contained the &lsquo;njrat&rsquo; and &lsquo;nano core&rsquo; references is therefore noteworthy because it indicates the possibility of prior knowledge of the precise malware payload which was to be crypted.</p>
<p>Research into the PAC Crypt tool revealed that this program is developed and sold by an Iranian malware developer known as &lsquo;Mr. Tekide&rsquo;.</p>
<h4 class="lh-solid mb3">Mr. Tekide</h4>
<p class="mt0">Mr. Tekide is the online alias of an Iranian malware developer who is also the administrator of the website http://crypter[.]ir, an Iranian hacking forum and online shop. Notably, this storefront offers various hacking tools and services, including the aforementioned &lsquo;PAC Crypt&rsquo; (see figure 15 below).</p>
<figure class="center mw-100 table-overflow" style="min-width:50%; width: min-content; margin: 0px auto"><div class="center" style="min-width: 100%; width: fit-content"><table border="0" cellspacing="0" style="width: max-content; height: unset" class="ba b--light-gray">
<tbody>
<tr class="striped--light-gray">
<td><a href="https://citizenlab.ca/wp-content/uploads/2016/08/21a-crypter-ir.png" class="pointer"><img loading="lazy" decoding="async" class="aligncenter wp-image-27791" src="https://citizenlab.ca/wp-content/uploads/2016/08/21a-crypter-ir.png" alt="Crypter[.]ir main page (left), and contact page (right)" width="349" height="236" title="Group5: Syria and the Iranian Connection 21" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/21a-crypter-ir.png 739w, https://citizenlab.ca/wp-content/uploads/2016/08/21a-crypter-ir-300x203.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/21a-crypter-ir-180x122.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/21a-crypter-ir-503x340.png 503w, https://citizenlab.ca/wp-content/uploads/2016/08/21a-crypter-ir-294x199.png 294w" sizes="auto, (max-width: 349px) 100vw, 349px" /></a></td>
<td><a href="https://citizenlab.ca/wp-content/uploads/2016/08/21b-contact-page.png" class="pointer"><img loading="lazy" decoding="async" class="aligncenter wp-image-27792" src="https://citizenlab.ca/wp-content/uploads/2016/08/21b-contact-page.png" alt="Crypter[.]ir main page (left), and contact page (right)" width="351" height="221" title="Group5: Syria and the Iranian Connection 22" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/21b-contact-page.png 794w, https://citizenlab.ca/wp-content/uploads/2016/08/21b-contact-page-300x189.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/21b-contact-page-768x484.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/21b-contact-page-180x113.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/21b-contact-page-540x340.png 540w, https://citizenlab.ca/wp-content/uploads/2016/08/21b-contact-page-297x187.png 297w" sizes="auto, (max-width: 351px) 100vw, 351px" /></a></td>
</tr>
</tbody>
</table></div><figcaption class="figcaption pa2 bt b--gray bw2 bg-light-gray"><p class="ma0"><em>Figure 15: Crypter[.]ir main page (left), and contact page (right)</em></p></figcaption></figure>

<p>In addition to the crypter[.]ir forum and shop, Mr. Tekide appears to be in the midst of creating a new online storefront for selling his various malware tools and services. The content shown in Figure 16 below, obtained from http://crypting[.]org, shows a &lsquo;rat service&rsquo; being offered to visitors. The store also touts a Windows Rootkit (&ldquo;coming soon&rdquo;) and various &lsquo;exploits.&rsquo;</p>
<figure class="center mw-100 table-overflow" style="min-width:50%; width: min-content; margin: 0px auto"><div class="center" style="min-width: 100%; width: fit-content"><table border="0" cellspacing="0" style="width: max-content; height: unset" class="ba b--light-gray">
<tbody>
<tr class="striped--light-gray">
<td><a href="https://citizenlab.ca/wp-content/uploads/2016/08/22a-crypting-org.png" class="pointer"><img loading="lazy" decoding="async" class="aligncenter wp-image-27795" src="https://citizenlab.ca/wp-content/uploads/2016/08/22a-crypting-org.png" alt="Figure 16: Crypting[.]org main page (left), list of hacking services offered (right)" width="350" height="258" title="Group5: Syria and the Iranian Connection 23" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/22a-crypting-org.png 949w, https://citizenlab.ca/wp-content/uploads/2016/08/22a-crypting-org-300x221.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/22a-crypting-org-768x566.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/22a-crypting-org-180x133.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/22a-crypting-org-461x340.png 461w, https://citizenlab.ca/wp-content/uploads/2016/08/22a-crypting-org-270x199.png 270w" sizes="auto, (max-width: 350px) 100vw, 350px" /></a></td>
<td><a href="https://citizenlab.ca/wp-content/uploads/2016/08/22b-list-hacking-services.png" class="pointer"><img loading="lazy" decoding="async" class="aligncenter wp-image-27796" src="https://citizenlab.ca/wp-content/uploads/2016/08/22b-list-hacking-services.png" alt="Figure 16: Crypting[.]org main page (left), list of hacking services offered (right)" width="350" height="259" title="Group5: Syria and the Iranian Connection 24" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/22b-list-hacking-services.png 947w, https://citizenlab.ca/wp-content/uploads/2016/08/22b-list-hacking-services-300x222.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/22b-list-hacking-services-768x568.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/22b-list-hacking-services-180x133.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/22b-list-hacking-services-460x340.png 460w, https://citizenlab.ca/wp-content/uploads/2016/08/22b-list-hacking-services-269x199.png 269w" sizes="auto, (max-width: 350px) 100vw, 350px" /></a></td>
</tr>
</tbody>
</table></div><figcaption class="figcaption pa2 bt b--gray bw2 bg-light-gray"><p class="ma0"><em>Figure 16: Crypting[.]org main page (left), list of hacking services offered (right)</em></p></figcaption></figure>

<p>Mr. Tekide also maintains an active presence as a moderator on the Ashiyane forums,<a href="#3" class="pointer"><sup>3</sup></a> an Iranian security discussion board run by the Ashiyane Digital Security Team (ADST). The ADST is a well-known Iranian security and hacking group which has earned notoriety for its prolific website defacement activities. These defacements invariably contain a list of ADST &lsquo;defacers&rsquo; alongside the phrase &lsquo;We Love Iran&rsquo;.</p>
<p>Web site defacements conducted by ADST have explicitly named Mr. Tekide as a member, as shown in Figure 17 below.</p>
<figure class="center mw-100 ba b--light-gray" style="width:748px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/23-figure-17-defacement-page.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27798" src="https://citizenlab.ca/wp-content/uploads/2016/08/23-figure-17-defacement-page-1024x304.png" alt="Figure 17: an Ashiyane Digital Security Team defacement page, naming Mr. Tekide " width="748" height="222" title="Group5: Syria and the Iranian Connection 25" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/23-figure-17-defacement-page-1024x304.png 1024w, https://citizenlab.ca/wp-content/uploads/2016/08/23-figure-17-defacement-page-300x89.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/23-figure-17-defacement-page-768x228.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/23-figure-17-defacement-page-180x53.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/23-figure-17-defacement-page-605x179.png 605w, https://citizenlab.ca/wp-content/uploads/2016/08/23-figure-17-defacement-page-297x88.png 297w, https://citizenlab.ca/wp-content/uploads/2016/08/23-figure-17-defacement-page.png 1680w" sizes="auto, (max-width: 748px) 100vw, 748px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 17: an Ashiyane Digital Security Team defacement page, naming Mr. Tekide</figcaption></figure>
<p>In addition to its defacement activities, ADST has been recently linked to the indictment by the US Department of Justice of seven Iranian nationals for cyber attacks against the US financial sector. <a href="https://www.justice.gov/opa/pr/seven-iranians-working-islamic-revolutionary-guard-corps-affiliated-entities-charged" class="pointer" target="_blank" rel="noopener">In its indictment</a>, the Department of Justice alleges that members of two Iranian security companies, ITSecTeam and Mersad Company, were responsible for Distributed-denial-of- Service (DDoS) attacks against numerous US bank websites between September 2012 and May 2013. The DoJ indictment also describes that Mersad was founded by members of the ADST, and furthermore that ADST had made prior public claims regarding its activities on behalf of the Iranian Government.</p>
<p>Additional open source information about Mr. Tekide is included in <strong><a href="#appendix-c" class="pointer">Appendix C: Mr. Tekide</a></strong>.</p>
<h3 class="lh-solid mb3">A Consistent Iranian Nexus</h3>
<p class="mt0">We cannot conclude with certainty that Group5 is Iran-based, although the confluence of information outlined above provides a circumstantial case. The IP addresses observed during early stages of development of the Assadcrimes website, as well as the Iranian hosting provider and the Persian language mailer, all speak to a level of Iranian presence. The additional apparent involvement of an Iranian malware developer with ties to a known Iranian cyber actor, whether his involvement was unwitting or intentional, only strengthens the Iranian connection.<br>
<a name="part6" class="pointer"></a></p>
<h2 class="lh-solid mb3">Part 6: Analysis of Competing Hypotheses</h2>
<p class="mt0">This section evaluates several competing hypotheses for explaining the identity of the operator. While we cannot conclusively support one of these hypotheses, we think the most plausible is that this operation is the work of an Iranian group newly active in Syria.</p>
<p>We believe we found Group5 fairly early in the process of preparing a larger malware campaign, thanks to Noura Al-Ameer&rsquo;s vigilance. This gave us unique visibility into some of their staging, but we had only a limited view of other possible targeting. Group5&rsquo;s reliance on a narrow infrastructure limited our ability to connect the operation to other known groups, as discussed above.</p>
<p>With these caveats and limitations in mind, we outline the known elements of the operation, and evaluate several hypotheses: (Hypothesis 1) an Iranian group newly active in Syria; (Hypothesis 2) that the operation is from known regime-linked groups, like the Syrian malware groups; and (Hypothesis 3) that it is from some other unknown group. After addressing the fit of each hypothesis with available evidence, we provide an overall evaluation of the three, and conclude that Hypothesis 1 provides the best explanation for what we have observed.</p>
<h2 class="lh-solid mb3">Hypothesis 1: Iranian Group Newly Active in Syria</h2>
<p class="mt0"><em>A group previously unreported in Syria with uneven skills but displaying thought and care in selecting the target, and preparing the operation, with an Iranian nexus and a possible government connection.</em></p>
<p><strong>Previously Unseen in Syria:</strong> We have been unable to find a high-confidence overlap in infrastructure or malware to previously-reported groups active around Syria. We also had difficulty connecting the operation to other known groups in the global threat actor space. Furthermore, the use of exploits, as well as DroidJack and other tools, is inconsistent with the TTPs of known groups targeting the Syrian opposition, especially the regime-linked groups. Notably, these groups have shown little ability or appetite for: (a) standing up multifaceted seeding websites; (b) targeting Android users; (c) using exploits in PowerPoint files.</p>
<p>Previously reported groups, especially regime-linked groups, have had a tendency to re-use infrastructure, and repurpose similar tools and approaches. It would be surprising for them to suddenly abandon tactics that still &ldquo;work,&rdquo; and cease using a C2 infrastructure that cannot be taken down (because it is inside Syria).</p>
<p>While Group5&rsquo;s tactics have more in common with the group <a href="https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-behind-the-syria-conflict.pdf" class="pointer" target="_blank" rel="noopener">reported in this FireEye report</a>, such as the use of a fake website, COTS .Net malware, and Android malware, there is no direct infrastructure or tool overlap, and only limited evidence of social engineering sophistication (e.g. the use of avatars).</p>
<p>Furthermore, the lack of technical sophistication, combined with low operational security, suggest that, had this group been previously active for any length of time, it would have run the risk of discovery, perhaps especially given all of the existing reporting about pro-Regime malware groups in Syria.</p>
<p><strong>Uneven Technical Sophistication:</strong> The operators showed familiarity with a range of cybercrime tools, yet also committed a range of operational security oversights, such as leaving their logs open and public-facing, connecting via their C2 server, and leaving debugging strings in compiled files. These characteristics would be inconsistent with the work of an in-house government capability.</p>
<p><strong>Iranian Connection:</strong> Analysis of the malware and seeding yields a consistent Iranian presence. The binary contains Iranian and Iranian-Persian traces, as do the tools used for obfuscation, which are popular in Iranian cybercrime forums. Similarly, the mailer discovered on the assadcrimes[.]info website is in Persian. There is also the intriguing, but ultimately unproven speculation that the crypter may have been sold to Group5 by a known Iranian malware developer. Furthermore, logs of access to the assadcrimes[.]info site suggest that the operators are working from within Iranian IP space. In addition, the bait content also contains substantial Iranian themes. Finally, the hosting provider (Hostnegar) is Iranian. A final piece of highly circumstantial evidence is that PowerPoint documents containing exploits, albeit often with quite different (and sometimes custom) malware, is a commonly reported feature of many <a href="http://researchcenter.paloaltonetworks.com/2016/05/prince-of-persia-infy-malware-active-in-decade-of-targeted-attacks/" class="pointer" target="_blank" rel="noopener">recently-reported</a> <a href="https://www.iranhumanrights.org/2016/04/cyber-attacks-iranian-officials/" class="pointer" target="_blank" rel="noopener">Iranian</a> campaigns.</p>
<p><strong>Targeting Sophistication:</strong> Group5 not only targeted a well-connected individual within the Syrian opposition, but also masqueraded as her to register the assadcrimes[.]info site. Both the site and the bait content also indicate a degree of familiarity with the opposition&rsquo;s concerns and activities, and their targeting indicates they were targeting a key person in opposition politics and multilateral negotiations, yet not highly visible outside of informed circles. Speculatively, the choice of target is indicative of the interests and resources of a state-level actor, or a group receiving direction or providing information to such an actor. A number of governments and non-state actors in the region have an interest in the workings of the opposition, and several are providing direct or indirect support to the Assad Regime. We discuss this possibility in greater detail below in <strong><a href="#evaluating-hypotheses" class="pointer">Evaluating Hypotheses</a></strong>.</p>
<h2 class="lh-solid mb3">Hypothesis 2: Known Regime-Linked Group</h2>
<p class="mt0"><em>A known Regime-linked group has modified its tactics to operate against familiar targets</em></p>
<p><strong>Familiar Targets:</strong> The most widely documented threat against the Syrian opposition comes from regime-linked groups, notably malware groups and the Syrian Electronic Army (to a lesser degree). These groups benefit from known links to the regime of Bashar al-Assad, which has a direct and strong interest in monitoring members of the Syrian Opposition, including the groups apparently targeted in this operation. We are familiar with previous operations by regime-linked groups targeting the same organizations.</p>
<p><strong>Modified Tactics:</strong> We cannot rule out the possibility that existing groups have added a range of new TTPs to their existing set as the conflict continues.</p>
<p>Regime-linked groups certainly have the motivation to conduct this operation. Do known groups have the skills to conduct such an operation? There are a range of features of this operation that suggest Group5 may not be a regime-linked group. First, known regime-linked Syrian groups have tended to use a limited set of C2 servers, almost always with at least one server (or a fallback) located within a narrow set of servers within Syria. Group5 does not have a fallback C2 in Syria. Similarly, the servers that Group5 does use are not from companies previously associated with Syrian regime groups, nor is there any prior evidence of regime-linked groups making use of Persian-language tools, or Iranian IP space. Further, known Syrian groups have been active for almost 5 years without evidence of familiarity with PPSX exploits. It is unclear why they would deploy so many new tactics all at once, even they continue to gently iterate on techniques familiar to them.</p>
<p><strong>Other Syria-Focused Groups?</strong> In the introduction we mentioned two other groups that have previously targeted the Syrian opposition: a Lebanon-linked group uncovered in 2014, and an ISIS-linked operation in 2015. The first group, described in a <a href="https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-behind-the-syria-conflict.pdf" class="pointer" target="_blank" rel="noopener">2015 FireEye Report</a>, coauthored by one of the authors of this report, conducted an extensive campaign against the Syrian opposition. The campaign relied heavily on Arabic-speaking female avatars to flirt with opposition figures and trick them into downloading malware for Windows or Android. That campaign, however, differed in malware tools, infrastructure, and social engineering style from Group5. In addition, it lacked any Persian-language elements, or connection to Iranian IP space.</p>
<p>In late 2014 <a href="https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-behind-the-syria-conflict.pdf" class="pointer" target="_blank" rel="noopener">a Citizen Lab report</a> coauthored by one of the authors of this report, identified a malware operation linked to ISIS that targeted <a href="http://www.raqqa-sl.com/en/" class="pointer" target="_blank" rel="noopener">Raqqa is Being Slaughtered Silently</a>, a documentation and media group working to uncover human rights abuses in Raqqa and other ISIS-controlled territories. That malware was apparently custom-made but very unsophisticated. Lacking the functionality of a RAT, and exfiltrating via e-mail, the operation was substantially less sophisticated than Group5&rsquo;s activities. We think it unlikely that the operator behind that malware has (a) grown much more sophisticated, or (b) begun to rely on Iranian tools and hosting providers.</p>
<h2 class="lh-solid mb3">Hypothesis 3: Other Unknown Group</h2>
<p class="mt0"><em>An unknown group, not located in Iran and not linked to prior groups</em></p>
<p>It is possible that the operation is the work of some other unknown group. One possibility that we consider is that the operation is a false flag from another state sponsor, deliberately crafted to appear to be an Iranian group. In another, we also consider the other common motivations for such operations, including financial crime.</p>
<p><strong>A False Flag:</strong> Certainly, many other governments are actively interested in information about the Syrian opposition. Given the extensive circumstantial evidence strewn throughout the operation that points to a group based in Iran, one possibility we consider is that the operators are deliberately masquerading as an Iranian group, while acting on behalf of another sponsor.</p>
<p>In such a scenario, each of the pieces of circumstantial evidence we have assembled is a string of deliberately planted artifacts, intended to deflect from the threat actor&rsquo;s true identity. This hypothesis is an intriguing possibility that cannot be conclusively ruled out. However, it is worth asking why, given the noisiness of existing groups targeting the Syrian opposition, a false flag operation would not simply be populated with the many publicly reported strings and other tools associated with pro-regime groups. Similarly, we wonder why a threat actor sophisticated enough to mount such an operation would not also have used more sophisticated malware or seeding techniques.</p>
<p><strong>Financial / Commercial Hacking:</strong> We find no evidence to suggest that financial crime or commercial espionage played a part in this operation. For a narrowly focused operation, the targeting, for example, does not appear to be geared towards wealthy individuals, or those with access to serious financial resources.</p>
<p><a name="evaluating-hypotheses" class="pointer"></a></p>
<h2 class="lh-solid mb3">Evaluating Hypotheses</h2>
<p class="mt0">We have moderate confidence that the best hypothesis is Hypothesis 1: Iranian Group Newly Active in Syria. The Group5 operation shows strong Iranian connections, with few indicators linked to previously reported groups, including Syrian regime-linked groups. The important caveat is that, perhaps partially by design, we have a limited view on the targets of the campaign, and it is possible that this analysis would change.</p>
<p>We further believe that Group5 shows some signs of being state-directed, however we do not have sufficient evidence to link Group5 to a particular government. Two possibilities seem likely: (1) Group5 is working under the control or direction of a government entity within Iran, or sympathetic to such an entity and receiving and sharing information with them; (2) Group5 is collaborating or working on behalf of a government entity within Syria for ideological or mercenary reasons. Both governments are belligerents within the Syrian conflict, and both would have a strong interest in accessing the communications of the Syrian opposition.</p>
<p>The Iranian government has been a strong supporter of the regime throughout the conflict, and clearly has an interest in learning and frustrating the political maneuvering of the Syrian opposition. Iranian intelligence and security services have reportedly provided a wide range of <a href="http://www.understandingwar.org/sites/default/files/IranianStrategyinSyria-1MAY.pdf" class="pointer" target="_blank" rel="noopener">military and intelligence gathering assistance</a> to the regime, ranging from troops and training, to electronic <a href="https://www.foreignaffairs.com/articles/iran/2011-08-25/how-iran-keeps-assad-power-syria" class="pointer" target="_blank" rel="noopener">monitoring capabilities</a>. At minimum, operators based in Iran certainly would be unlikely to face punishment from their government for work against the Syrian opposition. Speculatively, sponsoring such&nbsp;an operation (held at arm&rsquo;s length and consigned to a deniable, less experienced group) could provide useful information about the activities and thinking of key individuals within the Syrian Opposition, such as advanced knowledge of negotiating points in multilateral meetings, or internal disagreements.</p>
<p>Importantly, there is no evidence to directly connect Group5 to any entities within the&nbsp;Iranian government, security establishment, or military. Nor can we rule&nbsp;out the possibility that&nbsp;Group5 is&nbsp;Iran-based, but working on behalf of some other entity.</p>
<p>The most perplexing part of the activity we observe is that the operation appears to have been extensively prepared, and then apparently paused after initial seeding. This pause took place not long after Al-Ameer was initially targeted: the website development continued for a period after she had received the initial e-mail, and then ceased. Group5 may have initially targeted Al-Ameer hoping to leverage her well-connected position and digital identity to target others within the Syrian opposition. Theft of her digital identity would explain why her name was used in the WHOIS for assadcrimes[.]info, and why, after failing to infect&nbsp;Al-Ameer, the campaign did not appear to receive much further work, and the infrastructure was ultimately abandoned.</p>
<p>Other explanations for the pause in activity are possible, and we cannot discount them based on our limited evidence: Group5 may have undergone a shift in the focus of its targeting, concluded that their campaign was &lsquo;blown&rsquo; and abandoned it, experienced human resources or political issues, or simply concluded that the operation was using an ineffective technique.</p>
<h2 class="lh-solid mb3">Conclusion</h2>
<p class="mt0">When Syrian opposition figure Noura Al-Ameer sensed something wrong and refrained&nbsp;from clicking, she frustrated a reasonably well put together deception. We suspect she may have been targeted in order to steal her digital identity for the purposes of mounting a larger campaign. Beginning with this initial message, we were able to identify and characterize Group5, a seemingly new entrant into the game.</p>
<p>With the identification of Group5, the number of publicly identified operations known to have targeted the opposition with malware has risen to five, at least: Regime-linked groups (Syrian malware groups and the Syrian Electronic Army), <a href="https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-behind-the-syria-conflict.pdf" class="pointer" target="_blank" rel="noopener">a Lebanese Group</a>, <a href="https://citizenlab.ca/2014/12/malware-attack-targeting-syrian-isis-critics/" class="pointer">ISIS</a>, and most recently Group5. We believe that the most compelling explanation of Group5&rsquo;s activities is that a group in Iran may be attempting to compromise the communications of the opposition. The circumstantial evidence pointing to an Iranian group is unsurprising, given Iran&rsquo;s active military engagement in Syria, and the sympathies of many in that country for the Assad regime. However, mindful of the limits of our investigation, we stop short of conclusive statements of attribution about the identity of the operators, or their possible sponsors. We hope that by publishing this report and sharing indicators, our work will be helpful to other researchers who may see pieces of the puzzle that we do not.</p>
<p>Despite the diversity of the groups targeting the Syrian opposition, they share general features: uneven or low technical sophistication plus good social engineering and well-informed targeting. These elements are characteristic of the majority of malware and phishing operations targeting the Syrian opposition over the past several years.</p>
<p>The continued targeting, and entry of new groups, reflects the continued weakness in the Syrian opposition&rsquo;s digital security, and more generally the risks groups face when using popular online platforms for contested political activities.</p>
<p>Operators targeting the Syrian opposition plainly do not need sophisticated tools, because easily available malware continues to &ldquo;work,&rdquo; when paired with good social engineering. The technical requirement for entering the game is low, enabling unsophisticated groups to achieve successes, while permitting more advanced groups to conserve better techniques for harder targets.</p>
<p>The lack of a centralized communications hierarchy can make opposition groups responsive, and quick to adapt. However, decentralization also provides many opportunities for digital exploitation. Operators can target groups for long periods while remaining unnoticed, without fear of being spotted and blocked by a security team. Even when exploitation attempts are noticed, because the security of these groups relies on the behavior of individuals, it can be extremely difficult to ensure that more secure behaviors are adopted.</p>
<p>Opposition groups and their partners face many challenges, and we appreciate the difficulty of securing behavior. The infrastructure that we analyzed is, at time of writing, apparently abandoned. However, we suspect that Group5, or the interests behind it, may be continuing to pursue efforts to target the opposition. We hope to reinforce the message that continued vigilance is necessary to defend against these operations.</p>
<p><a href="https://www.johnscottrailton.com/jsrs-digital-security-low-hanging-fruit/" class="pointer" target="_blank" rel="noopener">Click here</a> for some suggestions about how to improve your digital hygiene. If you believe you may have been targeted by this operation, or other&nbsp;Syrian malware, you are welcome to get in touch with our researchers at <a href="/cdn-cgi/l/email-protection#483b3d2a25213c082b213c21322d2624292a662b29" class="pointer"><span class="__cf_email__" data-cfemail="423137202f2b3602212b362b38272c2e23206c2123">[email&#160;protected]</span></a>.</p>
<h2 class="lh-solid mb3">Acknowledgements</h2>
<p class="mt0">We thank Noura Al-Ameer for collaborating with this investigation, and for graciously agreeing to be included in this report. The targeted nature of many cases means that, without the help of brave targets and victims, we are often left with a very limited view of what is taking place.</p>
<p>We are exceptionally grateful to colleagues at Citizen Lab for comments, critical feedback, and assistance with document preparation including Ron Deibert, Bill Marczak, Morgan Marquis-Boire, Sarah McKune, Masashi Nishihata, Irene Poetranto,Christine Schoellhorn, and Adam Senft.</p>
<p>Thanks also to Justin Kosslyn and Brandon Dixon for helpful feedback.</p>
<p>We would also like to thank the following teams: Lookout, PassiveTotal and RiskIQ, VirusTotal, and Cisco&rsquo;s AMP Threat Grid Team for data correlation.</p>
<p>Very special thanks to other investigators who wished to remain anonymous but provided exceptionally helpful assistance, especially TNG and Tuka.</p>
<p>Note: the night sky image of Syria used as background for several illustrations is from <a href="http://cimss.ssec.wisc.edu/goes/blog/archives/14204" class="pointer" target="_blank" rel="noopener">CIMSS at the University of Wisconsin Madison</a>.<br>
<a name="appendix-a" class="pointer"></a></p>
<h2 class="lh-solid mb3">Appendix A: Windows Malware Analysis</h2>
<p class="mt0"><em>This section analyzes the malware used by Group5. It walks through the distinct droppers, which range from malicious OLEs in a PowerPoint Slideshow file (PPSX) combined with an exploit, to executable files directly containing malware.</em></p>
<p><a name="appendix-a-dropper-1" class="pointer"></a></p>
<h3 class="lh-solid mb3">Dropper Doc 1 (From E-mail 1)</h3>
<div class="about-author pa3 br1 f5 lh-copy mv1 bg-washed-yellow ba b--mid-gray">Assadcrimes.ppsx<br>
MD5: 76F8142B4E52C671871B3DF87F10C30C</div>
<p>This slideshow deploys its malicious payload by (ab)using the OLE object embedding capabilities of PowerPoint.<a href="#4" class="pointer"><sup>4</sup></a> Specifically, the malware executable is embedded into the slideshow as an OLE Object of type Package:</p>
<figure class="center mw-100 ba b--light-gray" style="width:700px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/24-figure-18-OLE-package.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27803" src="https://citizenlab.ca/wp-content/uploads/2016/08/24-figure-18-OLE-package.png" alt="Figure 18: Adding an OLE Package to a PowerPoint document" width="700" height="376" title="Group5: Syria and the Iranian Connection 26" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/24-figure-18-OLE-package.png 842w, https://citizenlab.ca/wp-content/uploads/2016/08/24-figure-18-OLE-package-300x161.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/24-figure-18-OLE-package-768x412.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/24-figure-18-OLE-package-180x97.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/24-figure-18-OLE-package-605x325.png 605w, https://citizenlab.ca/wp-content/uploads/2016/08/24-figure-18-OLE-package-297x159.png 297w" sizes="auto, (max-width: 700px) 100vw, 700px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 18: Adding an OLE Package to a PowerPoint document</figcaption></figure>
<p>Once embedded, the slideshow &ldquo;Animation&rdquo; feature is used to trigger the execution of the object immediately upon viewing the first slide.</p>
<p>In one of the malicious PPSX files, we can see the embedded package object by viewing the slides in normal view mode:</p>
<figure class="center mw-100 ba b--light-gray" style="width:740px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/25-figure-19-OLE-package.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27805" src="https://citizenlab.ca/wp-content/uploads/2016/08/25-figure-19-OLE-package-1024x657.png" alt="Figure 19: The malicious OLE Package, visible when editing the PPSX" width="740" height="475" title="Group5: Syria and the Iranian Connection 27" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/25-figure-19-OLE-package-1024x657.png 1024w, https://citizenlab.ca/wp-content/uploads/2016/08/25-figure-19-OLE-package-300x193.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/25-figure-19-OLE-package-768x493.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/25-figure-19-OLE-package-180x116.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/25-figure-19-OLE-package-530x340.png 530w, https://citizenlab.ca/wp-content/uploads/2016/08/25-figure-19-OLE-package-297x191.png 297w, https://citizenlab.ca/wp-content/uploads/2016/08/25-figure-19-OLE-package.png 1776w" sizes="auto, (max-width: 740px) 100vw, 740px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 19: The malicious OLE Package, visible when editing the PPSX</figcaption></figure>
<p>Once activated, the embedded object is saved to disk as <em>%TEMP%\putty.exe</em>, and then executed. This executable is a .Net downloader.</p>
<figure class="center mw-100 ba b--light-gray" style="width:749px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/26-figure-20-putty-exe.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27807" src="https://citizenlab.ca/wp-content/uploads/2016/08/26-figure-20-putty-exe-1024x700.png" alt="Figure 20: showing putty.exe (.Net downloader)" width="749" height="512" title="Group5: Syria and the Iranian Connection 28" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/26-figure-20-putty-exe-1024x700.png 1024w, https://citizenlab.ca/wp-content/uploads/2016/08/26-figure-20-putty-exe-300x205.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/26-figure-20-putty-exe-768x525.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/26-figure-20-putty-exe-180x123.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/26-figure-20-putty-exe-498x340.png 498w, https://citizenlab.ca/wp-content/uploads/2016/08/26-figure-20-putty-exe-291x199.png 291w" sizes="auto, (max-width: 749px) 100vw, 749px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 20: showing putty.exe (.Net downloader)</figcaption></figure>
<p>In Figure 20 we can see that the second stage payload is obtained from the URL <em>http://assadcrimes[.]info/1/dvm.exe</em> [Ref 1]. This second stage executable is saved to disk as <em>%temp%\dwm.exe</em> [Ref 2], and then executed [Ref 3].</p>
<p>The %temp%\dwm.exe file has the following hashes:</p>
<figure class="center mw-100 table-overflow" style="min-width:50%; width: min-content; margin: 0px auto"><div class="center" style="min-width: 100%; width: fit-content"><table border="0" cellspacing="0" style="width: max-content; height: unset" class="ba b--light-gray">
<tbody>
<tr class="striped--light-gray">
<th>MD5</th>
<th>SHA256</th>
</tr>
<tr class="striped--light-gray">
<td>7d898530d2e77f15f5badce8d7df215e</td>
<td>c19bc1ff5f8472fb7ba64f33c2168b42ea881a6ae6e134a1cc142e984fb6647f</td>
</tr>
</tbody>
</table></div></figure>
<p>The malware downloaded and executed by the .Net downloader is NanoCore, a well-known RAT (Remote Access Trojan) that enables the remote monitoring of victims via their computers. The NanoCore binary is wrapped using several layers of code obfuscation, which we describe in detail below.</p>
<h3 class="lh-solid mb3">Deobfuscating the Malware</h3>
<p class="mt0">The malware was obfuscated first with crypting, followed by packing before being distributed.</p>
<p><a href="https://citizenlab.ca/wp-content/uploads/2016/08/27-deobfuscating.png" class="pointer"><img loading="lazy" decoding="async" class="aligncenter wp-image-27808" src="https://citizenlab.ca/wp-content/uploads/2016/08/27-deobfuscating-1024x139.png" alt="Deobfuscating the Malware" width="751" height="102" title="Group5: Syria and the Iranian Connection 29" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/27-deobfuscating-1024x139.png 1024w, https://citizenlab.ca/wp-content/uploads/2016/08/27-deobfuscating-300x41.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/27-deobfuscating-768x104.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/27-deobfuscating-180x24.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/27-deobfuscating-605x82.png 605w, https://citizenlab.ca/wp-content/uploads/2016/08/27-deobfuscating-297x40.png 297w" sizes="auto, (max-width: 751px) 100vw, 751px" /></a></p>
<p>We will unwrap these steps in reverse order below.</p>
<h4 class="lh-solid mb3">Unpacking</h4>
<p class="mt0">The packer used on this executable employs a simple technique of base64 encoding the PE file and breaking it up into numerous lines which are then embedded into the resource section of the .Net packer stub file. At runtime, the packer reverses this process, then invokes the resulting .Net assembly from memory.</p>
<figure class="center mw-100 ba b--light-gray" style="width:749px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/28-unpacking-malware.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27809" src="https://citizenlab.ca/wp-content/uploads/2016/08/28-unpacking-malware-1024x527.png" alt="Figure 21: Base64 strings found in the resource section of the packed executable." width="749" height="386" title="Group5: Syria and the Iranian Connection 30" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/28-unpacking-malware-1024x527.png 1024w, https://citizenlab.ca/wp-content/uploads/2016/08/28-unpacking-malware-300x154.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/28-unpacking-malware-768x395.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/28-unpacking-malware-180x93.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/28-unpacking-malware-605x311.png 605w, https://citizenlab.ca/wp-content/uploads/2016/08/28-unpacking-malware-297x153.png 297w, https://citizenlab.ca/wp-content/uploads/2016/08/28-unpacking-malware.png 1182w" sizes="auto, (max-width: 749px) 100vw, 749px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 21: Base64 strings found in the resource section of the packed executable.</figcaption></figure>
<p>Extracting this packed code reveals a .Net assembly which is yet another layer of code protection applied using a &lsquo;crypter&rsquo;. This binary has the following hashes:</p>
<figure class="center mw-100 table-overflow" style="min-width:50%; width: min-content; margin: 0px auto"><div class="center" style="min-width: 100%; width: fit-content"><table border="0" cellspacing="0" style="width: max-content; height: unset" class="ba b--light-gray">
<tbody>
<tr class="striped--light-gray">
<th>MD5</th>
<th>SHA256</th>
</tr>
<tr class="striped--light-gray">
<td>a4f1f4921bb11ff9d22fad89b19b155d</td>
<td>d81ec563387e2ea47bc8ed50fd36e1de955cb2331d6eaae9f966b5d7ab094806</td>
</tr>
</tbody>
</table></div></figure>
<h4 class="lh-solid mb3">Decrypting</h4>
<p class="mt0">This executable is stub code which performs in-memory AES decryption of a base64 encoded string variable. This string variable holds an encrypted copy of the NanoCore RAT binary.</p>
<figure class="center mw-100 ba b--light-gray" style="width:751px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/29-figure-22-AES-decryption.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27812" src="https://citizenlab.ca/wp-content/uploads/2016/08/29-figure-22-AES-decryption-1024x649.png" alt="Figure 22: the AES decryption routines" width="751" height="476" title="Group5: Syria and the Iranian Connection 31" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/29-figure-22-AES-decryption-1024x649.png 1024w, https://citizenlab.ca/wp-content/uploads/2016/08/29-figure-22-AES-decryption-300x190.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/29-figure-22-AES-decryption-768x487.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/29-figure-22-AES-decryption-180x114.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/29-figure-22-AES-decryption-537x340.png 537w, https://citizenlab.ca/wp-content/uploads/2016/08/29-figure-22-AES-decryption-297x188.png 297w, https://citizenlab.ca/wp-content/uploads/2016/08/29-figure-22-AES-decryption.png 1446w" sizes="auto, (max-width: 751px) 100vw, 751px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 22: the AES decryption routines</figcaption></figure>
<p>This encryption of the underlying malware is typically employed to bypass detection by endpoint security controls such as antivirus programs. Many &lsquo;crypter&rsquo; tools, as they are known, are available for purchase or trade on various hacking forums.</p>
<p>Of particular note, this decrypting stub code retained its PDB (short for Program Database) information. PDB file references are common in .Net applications when compiled in &lsquo;debug&rsquo; mode, and they frequently reveal the original file path of the application source code on the developer&rsquo;s computer.</p>
<p>This executable revealed the following PDB file path:</p>
<div class="about-author pa3 br1 f5 lh-copy mv1 bg-washed-yellow ba b--mid-gray">c:\users\mr.tekide\documents\visual studio 2013\projects\paccryptnano core dehgani -vds\windowsapplication2\obj\debug\launch manager.pdb</div>
<p>This PDB string indicates that &lsquo;mr.tekide&rsquo; was the username of the developer who compiled this particular stub, and further that it was compiled as part of a Visual Studio project named &lsquo;paccryptnano core dehgani -vds&rsquo;. In addition, a single subroutine found inside the decrypting stub was named &lsquo;tekide&rsquo;. The relevance of this PDB string was discussed above in <strong>Part 5: Attribution</strong>.</p>
<p>In order to obtain the intended malware payload from this decrypting stub executable, we created a small .Net application to mimic the decryption steps and output the file to disk. Once complete, we obtained a malicious executable with hashes:</p>
<figure class="center mw-100 table-overflow" style="min-width:50%; width: min-content; margin: 0px auto"><div class="center" style="min-width: 100%; width: fit-content"><table border="0" cellspacing="0" style="width: max-content; height: unset" class="ba b--light-gray">
<tbody>
<tr class="striped--light-gray">
<th>MD5</th>
<th>SHA256</th>
</tr>
<tr class="striped--light-gray">
<td>dd5bedd915967c5efe00733cf7478cb4</td>
<td>a9db5a548ea17d6606bfbdb20306a3a08b38dbfe720f9f709f4d3369288be104</td>
</tr>
</tbody>
</table></div></figure>
<h4 class="lh-solid mb3">Original NanoCore binary</h4>
<p class="mt0">Now that we have arrived at the original NanoCore binary, we can examine the configuration as specified by the operator. In order to extract the configuration settings from this copy of NanoCore, we used Kevin Breen&rsquo;s <a href="https://github.com/kevthehermit/RATDecoders" class="pointer" target="_blank" rel="noopener">RATDecoders</a>.</p>
<p>Using Breen&rsquo;s tool we arrived at the following configuration:</p>
<figure class="center mw-100 ba b--light-gray" style="width:745px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/30-figure-23-nanocore.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27813" src="https://citizenlab.ca/wp-content/uploads/2016/08/30-figure-23-nanocore-1024x524.png" alt="Figure 23: The NanoCore configuration, using Kevin Breen&rsquo;s RATDecoders" width="745" height="381" title="Group5: Syria and the Iranian Connection 32" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/30-figure-23-nanocore-1024x524.png 1024w, https://citizenlab.ca/wp-content/uploads/2016/08/30-figure-23-nanocore-300x154.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/30-figure-23-nanocore-768x393.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/30-figure-23-nanocore-180x92.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/30-figure-23-nanocore-605x310.png 605w, https://citizenlab.ca/wp-content/uploads/2016/08/30-figure-23-nanocore-297x152.png 297w, https://citizenlab.ca/wp-content/uploads/2016/08/30-figure-23-nanocore.png 1106w" sizes="auto, (max-width: 745px) 100vw, 745px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 23: The NanoCore configuration, using Kevin Breen&rsquo;s RATDecoders</figcaption></figure>
<p>Notably, 88.198.222[.]163 port 8081 is the command and control channel for this malware. As noted in Part 1, the same IP was also present in the seeding e-mail header.</p>
<p><a name="appendix-a-dropper-2" class="pointer"></a></p>
<h3 class="lh-solid mb3">Dropper Doc 2</h3>
<div class="about-author pa3 br1 f5 lh-copy mv1 bg-washed-yellow ba b--mid-gray">assadcrimes1.ppsx<br>
MD5:F1F84EA3229DCA0CCACB7381A2F49F99</div>
<p>This PowerPoint document leverages CVE-2014-4114, a vulnerability in the OLE packager component of the Windows operating system. As described in <a href="https://citizenlab.ca/2015/06/targeted-attacks-against-tibetan-and-hong-kong-groups-exploiting-cve-2014-4114/" class="pointer">previous reporting</a>, this vulnerability causes a file embedded within the PowerPoint document to be copied to disk and executed silently on vulnerable systems.</p>
<p>The document under examination drops a file named <em>dvm.gif</em> to disk, renames it to <em>dvm.exe</em> and then executes it. This dvm.exe is the same packed and crypted copy of NanoCore as retrieved and executed by the .Net downloader described in the previous section.</p>
<p><a name="appendix-a-dropper-3" class="pointer"></a></p>
<h3 class="lh-solid mb3">Dropper Doc 3</h3>
<div class="about-author pa3 br1 f5 lh-copy mv1 bg-washed-yellow ba b--mid-gray">assadcrimes.info.ppsx<br>
MD5: 30BB678DB3AD0140FC33ACD9803385C3</div>
<p>This malicious PowerPoint document uses the same weaponization method described above with respect to Dropper Doc 1. The executable is embedded as an OLE package object, and subsequently executed using animation actions within the PowerPoint slideshow.</p>
<figure class="center mw-100 ba b--light-gray" style="width:700px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/31-figure-24-OLE.png" class="pointer"><img loading="lazy" decoding="async" class="size-full wp-image-27815" src="https://citizenlab.ca/wp-content/uploads/2016/08/31-figure-24-OLE.png" alt="Figure 24: The malicious OLE Package, visible when editing the PPSX" width="700" height="506" title="Group5: Syria and the Iranian Connection 33" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/31-figure-24-OLE.png 700w, https://citizenlab.ca/wp-content/uploads/2016/08/31-figure-24-OLE-300x217.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/31-figure-24-OLE-180x130.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/31-figure-24-OLE-470x340.png 470w, https://citizenlab.ca/wp-content/uploads/2016/08/31-figure-24-OLE-275x199.png 275w" sizes="auto, (max-width: 700px) 100vw, 700px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 24: The malicious OLE Package, visible when editing the PPSX</figcaption></figure>
<p>As with Dropper Doc 1, activation of the OLE Package object saves the embedded executable to disk as %TEMP%\putty.exe, then executes it. This file is a .Net application employing the same layers and methods of packing and crypting as seen in the payloads delivered by Dropper Docs 1 and 2. However, the ultimate malware payload in this case is njRat, another well-known RAT tool.</p>
<p>After unpacking the OLE embedded executable putty.exe, we again arrive at a decrypting stub file which will AES decrypt a base64 string variable and run it from memory. The hashes of this file are:</p>
<figure class="center mw-100 table-overflow" style="min-width:50%; width: min-content; margin: 0px auto"><div class="center" style="min-width: 100%; width: fit-content"><table border="0" cellspacing="0" style="width: max-content; height: unset" class="ba b--light-gray">
<tbody>
<tr class="striped--light-gray">
<th>MD5</th>
<th>SHA256</th>
</tr>
<tr class="striped--light-gray">
<td>6161083021b695814434450c1882f9f3</td>
<td>d72676bbf8de82486c3cebfdad2961cc68a6b564a43f9f987c95320fcd6a330a</td>
</tr>
</tbody>
</table></div></figure>
<p>Similar to the case of Dropper Doc 1 above, we find a PDB entry present in the decrypting stub executable:</p>
<div class="about-author pa3 br1 f5 lh-copy mv1 bg-washed-yellow ba b--mid-gray">C:\Users\mr.tekide\Documents\Visual Studio 2013\Projects\paccrypt11njratmalii\paccryptalipnahzade\obj\Debug\LManager.pdb</div>
<p>Again we can observe the same username of &lsquo;<em>mr.tekide</em>&rsquo; in the project source code path within the PDB string. Further, we note the development path components <em>paccrypt11njratmalii</em> and <em>paccryptalipnahzade</em>.</p>
<p>To obtain the malicious njRat executable from this decrypting stub we used the same .Net program we built for use in the Dropper Doc 1 example above. The resulting njRat binary had the following hashes:</p>
<figure class="center mw-100 table-overflow" style="min-width:50%; width: min-content; margin: 0px auto"><div class="center" style="min-width: 100%; width: fit-content"><table border="0" cellspacing="0" style="width: max-content; height: unset" class="ba b--light-gray">
<tbody>
<tr class="striped--light-gray">
<th>MD5</th>
<th>SHA256</th>
</tr>
<tr class="striped--light-gray">
<td>b4121c3a1892332402000ef0d587c0ee</td>
<td>1a287331e2bfb4df9cfe2dab1b77c9b5522e923e52998a2b1934ed8a8e52f3a8</td>
</tr>
</tbody>
</table></div></figure>
<p>Interestingly, the njRat executable appears to have been compiled from source by the same user who compiled the crypter described above. Note the PDB strings found inside the njRat executable:</p>
<div class="about-author pa3 br1 f5 lh-copy mv1 bg-washed-yellow ba b--mid-gray">C:\Users\mr.tekide\Documents\Visual Studio 2013\Projects\njrat7stubsoures &ndash; Copy\njrat7stubsoures\obj\Debug\dvvm.pdb</div>
<p>A quick look at the configuration data embedded within this njRat binary reveals the command and control IP address and port:</p>
<figure class="center mw-100 ba b--light-gray" style="width:750px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/32-figure-25-njrat-config.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27818" src="https://citizenlab.ca/wp-content/uploads/2016/08/32-figure-25-njrat-config-1024x882.png" alt="Figure 25: The njRAT configuration, showing the C2 and port." width="750" height="646" title="Group5: Syria and the Iranian Connection 34" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/32-figure-25-njrat-config-1024x882.png 1024w, https://citizenlab.ca/wp-content/uploads/2016/08/32-figure-25-njrat-config-300x258.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/32-figure-25-njrat-config-768x661.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/32-figure-25-njrat-config-180x155.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/32-figure-25-njrat-config-395x340.png 395w, https://citizenlab.ca/wp-content/uploads/2016/08/32-figure-25-njrat-config-231x199.png 231w, https://citizenlab.ca/wp-content/uploads/2016/08/32-figure-25-njrat-config.png 1038w" sizes="auto, (max-width: 750px) 100vw, 750px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 25: The njRAT configuration, showing the C2 and port.</figcaption></figure>
<h3 class="lh-solid mb3">Decoy Dropper 4</h3>
<div class="about-author pa3 br1 f5 lh-copy mv1 bg-washed-yellow ba b--mid-gray">alshohadaa alatfal.exe<br>
MD5: 2FC276E1C06C3C78C6D7B66A141213BE</div>
<p>This file is a .Net application designed to act as a decoy by displaying a window depicting images of dead children (see Figure: 5). While displaying these images, the decoy application also silently extracts an executable file from the .Net assembly&rsquo;s resource section, copies it to <em>%TEMP%\dvm.exe</em>, and then launches a new process from this newly created file. See Figure 26 below:</p>
<figure class="center mw-100 ba b--light-gray" style="width:752px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/33-figure-26-malware-dropping.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27819" src="https://citizenlab.ca/wp-content/uploads/2016/08/33-figure-26-malware-dropping-1024x460.png" alt="Figure 26: Malware dropping code inside the Decoy application" width="752" height="338" title="Group5: Syria and the Iranian Connection 35" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/33-figure-26-malware-dropping-1024x460.png 1024w, https://citizenlab.ca/wp-content/uploads/2016/08/33-figure-26-malware-dropping-300x135.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/33-figure-26-malware-dropping-768x345.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/33-figure-26-malware-dropping-180x81.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/33-figure-26-malware-dropping-605x272.png 605w, https://citizenlab.ca/wp-content/uploads/2016/08/33-figure-26-malware-dropping-297x133.png 297w, https://citizenlab.ca/wp-content/uploads/2016/08/33-figure-26-malware-dropping.png 1394w" sizes="auto, (max-width: 752px) 100vw, 752px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 26: Malware dropping code inside the Decoy application</figcaption></figure>
<p>The dropper also includes a PDB reference:</p>
<div class="about-author pa3 br1 f5 lh-copy mv1 bg-washed-yellow ba b--mid-gray">C:\users\enterok\desktop\slideshow\slideshow\obj\x86\debug\alshohadaa alatfal.pdb</div>
<p>The dvm.exe file is itself a .Net executable which is packed using the same .Net packer used above in the cases of Dropper Docs 1 &ndash; 3. Once unpacked, the resulting file is the same crypted .Net application analysed above from Dropper Doc 3, having MD5 hash 6161083021b695814434450c1882f9f3, and containing the njRat payload.</p>
<h3 class="lh-solid mb3">Malware Infrastructure</h3>
<h4 class="lh-solid mb3">Command and Control Server</h4>
<p class="mt0">Each of the three distinct RAT tools used by Group5 (njRAT, NanoCore RAT, and DroidJack) were configured to communicate with a single command and control server operating on IP address 88.198.222[.]163.</p>
<figure class="center mw-100 table-overflow" style="min-width:50%; width: min-content; margin: 0px auto"><div class="center" style="min-width: 100%; width: fit-content"><table border="0" cellspacing="0" style="width: max-content; height: unset" class="ba b--light-gray">
<tbody>
<tr class="striped--light-gray">
<th>IP</th>
<th>Reverse DNS PTR</th>
<th>Assignee</th>
</tr>
<tr class="striped--light-gray">
<td>88.198.222[.]163</td>
<td>static.88-198-222-163.clients.your-server.de</td>
<td>HETZNER-RZ-NBG-BLK4<br>
Hetzner Online GmbH</td>
</tr>
</tbody>
</table></div></figure>
<p>This server was the sole point of data exfiltration for each of the malware components. As detailed above for njRAT and NanoCore, and below in <a href="#appendix-b" class="pointer">Appendix B</a> for DroidJack, the TCP ports used for command and control for each of the RAT tools were as follows:</p>
<figure class="center mw-100 ba b--light-gray" style="width:546px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/34-figure-27-RAT-ports.png" class="pointer"><img loading="lazy" decoding="async" class="size-full wp-image-27820" src="https://citizenlab.ca/wp-content/uploads/2016/08/34-figure-27-RAT-ports.png" alt="Figure 27: RAT ports on the C2 server" width="546" height="291" title="Group5: Syria and the Iranian Connection 36" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/34-figure-27-RAT-ports.png 546w, https://citizenlab.ca/wp-content/uploads/2016/08/34-figure-27-RAT-ports-300x160.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/34-figure-27-RAT-ports-180x96.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/34-figure-27-RAT-ports-297x158.png 297w" sizes="auto, (max-width: 546px) 100vw, 546px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 27: RAT ports on the C2 server</figcaption></figure>
<p>Additionally, we believe a controller for yet another remote access trojan, XpertRAT, was also hosted on this IP in November 2015; however, we did not uncover any samples designed to communicate with this XpertRAT controller.</p>
<p>As noted in the above table, the IP address 88.198.222[.]163 is assigned to Hetzner Online, a Germany based web hosting provider. Hetzner offers web hosting services as well as virtual and dedicated server rentals. Contact was made with Hetzner technical personnel subsequent to the discovery of the malicious activity outlined in this report. A synopsis of this contact is provided in <a href="#appendix-f" class="pointer">Appendix F: Notification</a>.</p>
<p>Current data available for this IP address suggests that it was likely reprovisioned to a different Hetzner customer in early February 2016 at the latest, and then possibly again in May. A series of domain names associated with online multi-player games were directed to this Hetzner IP, one of which was apparently hosting <a href="https://www.virustotal.com/en/file/dd55d13621a905d0f4c4dfe84c4d2b68769debe7a79cf1ce514940306da47c25/analysis/" class="pointer" target="_blank" rel="noopener">a malicious HTML document</a>.</p>
<h4 class="lh-solid mb3">Assadcrimes Web Hosting</h4>
<p class="mt0">The assadcrimes[.]info domain name was registered in June 2015, but it remained parked until early October, at which time it was migrated to an Iran-based shared web hosting provider named Hostnegar. This action coincided with the delivery of the initial e-mails outlined in <strong>Part 1</strong>.</p>
<p>The assadcrimes[.]info website was hosted on a shared hosting platform, and as such the IP address associated was also shared by a significant number of other, unrelated, websites.</p>
<figure class="center mw-100 table-overflow" style="min-width:50%; width: min-content; margin: 0px auto"><div class="center" style="min-width: 100%; width: fit-content"><table border="0" cellspacing="0" style="width: max-content; height: unset" class="ba b--light-gray">
<tbody>
<tr class="striped--light-gray">
<th>IP</th>
<th>Reverse DNS PTR</th>
</tr>
<tr class="striped--light-gray">
<td>212.7.195[.]171</td>
<td>server22.rayanegarco[.]com</td>
</tr>
</tbody>
</table></div></figure>
<p>Headers from the initial e-mail are shown below in Figure 28. These headers indicate that the initial e-mail was most likely sent using the Horde webmail application running on the web hosting server. Furthermore, the headers indicate that the sender was accessing the webmail application from the IP address of the command and control server discussed above.</p>
<figure class="center mw-100 ba b--light-gray" style="width:753px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/35-figure-28-headers.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27821" src="https://citizenlab.ca/wp-content/uploads/2016/08/35-figure-28-headers-1024x241.png" alt="Figure 28: Headers from the initial e-mail " width="753" height="177" title="Group5: Syria and the Iranian Connection 37" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/35-figure-28-headers-1024x241.png 1024w, https://citizenlab.ca/wp-content/uploads/2016/08/35-figure-28-headers-300x71.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/35-figure-28-headers-768x181.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/35-figure-28-headers-180x42.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/35-figure-28-headers-605x142.png 605w, https://citizenlab.ca/wp-content/uploads/2016/08/35-figure-28-headers-297x70.png 297w, https://citizenlab.ca/wp-content/uploads/2016/08/35-figure-28-headers.png 1378w" sizes="auto, (max-width: 753px) 100vw, 753px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 28: Headers from the initial e-mail</figcaption></figure>
<p>Finally, available domain name service data indicates that the assadcrimes[.]info domain name was moved back to its original parked location on May 4, 2016.<br>
<a name="appendix-b" class="pointer"></a></p>
<h2 class="lh-solid mb3">Appendix B: Android Malware Analysis</h2>
<h3 class="lh-solid mb3">The Malicious APK &ndash; Overall Description</h3>
<figure class="center mw-100 table-overflow" style="min-width:50%; width: min-content; margin: 0px auto"><div class="center" style="min-width: 100%; width: fit-content"><table border="0" cellspacing="0" style="width: max-content; height: unset" class="ba b--light-gray">
<tbody>
<tr class="striped--light-gray">
<td><a href="https://citizenlab.ca/wp-content/uploads/2016/08/36a-figure-29-malicious-app.png" class="pointer"><img loading="lazy" decoding="async" class="aligncenter wp-image-27824" src="https://citizenlab.ca/wp-content/uploads/2016/08/36a-figure-29-malicious-app.png" alt="Figure 29: The malicious application is installed, and appears in the Apps tab (left), while hidden from the Apps list from the Drawer (right)" width="350" height="611" title="Group5: Syria and the Iranian Connection 38" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/36a-figure-29-malicious-app.png 466w, https://citizenlab.ca/wp-content/uploads/2016/08/36a-figure-29-malicious-app-172x300.png 172w, https://citizenlab.ca/wp-content/uploads/2016/08/36a-figure-29-malicious-app-180x314.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/36a-figure-29-malicious-app-195x340.png 195w, https://citizenlab.ca/wp-content/uploads/2016/08/36a-figure-29-malicious-app-114x199.png 114w" sizes="auto, (max-width: 350px) 100vw, 350px" /></a></td>
<td><a href="https://citizenlab.ca/wp-content/uploads/2016/08/36a-figure-29-hidden.png" class="pointer"><img loading="lazy" decoding="async" class="aligncenter wp-image-27823" src="https://citizenlab.ca/wp-content/uploads/2016/08/36a-figure-29-hidden.png" alt="Figure 29: The malicious application is installed, and appears in the Apps tab (left), while hidden from the Apps list from the Drawer (right)" width="350" height="614" title="Group5: Syria and the Iranian Connection 39" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/36a-figure-29-hidden.png 399w, https://citizenlab.ca/wp-content/uploads/2016/08/36a-figure-29-hidden-171x300.png 171w, https://citizenlab.ca/wp-content/uploads/2016/08/36a-figure-29-hidden-180x316.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/36a-figure-29-hidden-194x340.png 194w, https://citizenlab.ca/wp-content/uploads/2016/08/36a-figure-29-hidden-113x199.png 113w" sizes="auto, (max-width: 350px) 100vw, 350px" /></a></td>
</tr>
</tbody>
</table></div><figcaption class="figcaption pa2 bt b--gray bw2 bg-light-gray"><p class="ma0">Figure 29: The malicious application is installed, and appears in the Apps tab (left), while hidden from the Apps list from the Drawer (right)</p></figcaption></figure>

<p>Upon execution, the malware is installed and then hidden from the list of installed applications in order to remain covert.</p>
<figure class="center mw-100 ba b--light-gray" style="width:500px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/37-figure-30-malicious-app-error.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27825" src="https://citizenlab.ca/wp-content/uploads/2016/08/37-figure-30-malicious-app-error.png" alt="Figure 30 : The malicious app gives an error &lsquo;App isn&rsquo;t installed&rsquo; when the user tries to open the malware before it disappears from the list. " width="396" height="701" title="Group5: Syria and the Iranian Connection 40" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/37-figure-30-malicious-app-error.png 550w, https://citizenlab.ca/wp-content/uploads/2016/08/37-figure-30-malicious-app-error-170x300.png 170w, https://citizenlab.ca/wp-content/uploads/2016/08/37-figure-30-malicious-app-error-180x318.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/37-figure-30-malicious-app-error-192x340.png 192w, https://citizenlab.ca/wp-content/uploads/2016/08/37-figure-30-malicious-app-error-112x199.png 112w" sizes="auto, (max-width: 396px) 100vw, 396px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 30 : The malicious app gives an error &lsquo;App isn&rsquo;t installed&rsquo; when the user tries to open the malware before it disappears from the list.</figcaption></figure>
<p>After the installation, the Application icon will be removed from the installed applications list, yet it will still be running in the background.</p>
<p>The APK package in question had the following characteristics:</p>
<div class="about-author pa3 br1 f5 lh-copy mv1 bg-washed-yellow ba b--mid-gray">Adobe_Flash_Player.apk<br>
MD5: 8EBEB3F91CDA8E985A9C61BEB8CDDE9D</div>
<p>This APK is an instance of DroidJack. <a href="http://www.symantec.com/connect/blogs/droidjack-rat-tale-how-budding-entrepreneurism-can-turn-cybercrime" class="pointer" target="_blank" rel="noopener">According to Symantec</a>, this application evolved from an older codebase known as SandroRAT.</p>
<p>The discovered APK sample also contains references to both names, as shown in Figure 31 below:</p>
<figure class="center mw-100 table-overflow" style="min-width:50%; width: min-content; margin: 0px auto"><div class="center" style="min-width: 100%; width: fit-content"><table border="0" cellspacing="0" style="width: max-content; height: unset" class="ba b--light-gray">
<tbody>
<tr class="striped--light-gray">
<td><a href="https://citizenlab.ca/wp-content/uploads/2016/08/38a-figure-31-references.png" class="pointer"><img loading="lazy" decoding="async" class="aligncenter size-full wp-image-27826" src="https://citizenlab.ca/wp-content/uploads/2016/08/38a-figure-31-references.png" alt="38a-figure-31-references" width="161" height="131" title="Group5: Syria and the Iranian Connection 41"></a></td>
<td><a href="https://citizenlab.ca/wp-content/uploads/2016/08/38b-figure-31-references.png" class="pointer"><img loading="lazy" decoding="async" class="aligncenter size-full wp-image-27827" src="https://citizenlab.ca/wp-content/uploads/2016/08/38b-figure-31-references.png" alt="38b-figure-31-references" width="323" height="141" title="Group5: Syria and the Iranian Connection 42" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/38b-figure-31-references.png 323w, https://citizenlab.ca/wp-content/uploads/2016/08/38b-figure-31-references-300x131.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/38b-figure-31-references-180x79.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/38b-figure-31-references-297x130.png 297w" sizes="auto, (max-width: 323px) 100vw, 323px" /></a></td>
</tr>
</tbody>
</table></div><figcaption class="figcaption pa2 bt b--gray bw2 bg-light-gray"><p class="ma0">Figure 31: References to both DroidJack and SandroRat as seen in the source code</p></figcaption></figure>

<p>The APK Manifest file reveals important information about the sample&rsquo;s capabilities and the intentions of its operator. The Android operating system requires information from the Manifest file before the application can execute. This application will request the following permissions and use the following features from the device:</p>
<figure class="center mw-100 ba b--light-gray" style="width:702px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/39-figure-32-manifest.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27829" src="https://citizenlab.ca/wp-content/uploads/2016/08/39-figure-32-manifest.png" alt="Figure 32: screenshot from Manifest file with the requested permissions for the APK" width="702" height="431" title="Group5: Syria and the Iranian Connection 43" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/39-figure-32-manifest.png 809w, https://citizenlab.ca/wp-content/uploads/2016/08/39-figure-32-manifest-300x184.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/39-figure-32-manifest-768x472.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/39-figure-32-manifest-180x111.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/39-figure-32-manifest-553x340.png 553w, https://citizenlab.ca/wp-content/uploads/2016/08/39-figure-32-manifest-297x182.png 297w" sizes="auto, (max-width: 702px) 100vw, 702px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 32: screenshot from Manifest file with the requested permissions for the APK</figcaption></figure>
<p>In the Android system, Activities are components typically used to let the user of the device perform an action. The Main Activity is also defined in the Manifest, pictured in Figure 33.</p>
<figure class="center mw-100 ba b--light-gray" style="width:745px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/40-figure-33-main-activity.png" class="pointer"><img loading="lazy" decoding="async" class="size-full wp-image-27830" src="https://citizenlab.ca/wp-content/uploads/2016/08/40-figure-33-main-activity.png" alt="Figure 33: Main activity defined in the manifest" width="745" height="96" title="Group5: Syria and the Iranian Connection 44" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/40-figure-33-main-activity.png 745w, https://citizenlab.ca/wp-content/uploads/2016/08/40-figure-33-main-activity-300x39.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/40-figure-33-main-activity-180x23.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/40-figure-33-main-activity-605x78.png 605w, https://citizenlab.ca/wp-content/uploads/2016/08/40-figure-33-main-activity-297x38.png 297w" sizes="auto, (max-width: 745px) 100vw, 745px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 33: Main activity defined in the manifest</figcaption></figure>
<p>In this case, the Main Activity is designed to start the Controller as a Service and finish. The controller will be discussed in more detail in the next section.</p>
<p>Android applications can also have Services and Receivers defined. Services are used for background operations while Receivers define the types of broadcast messages the application can receive from other applications as well as the device. These messages are known as Intents.</p>
<p>This APK sample enables several services including &ldquo;Controller,&rdquo; &ldquo;GPSLocation&rdquo; and &ldquo;Toaster&rdquo; (See Figure 34).</p>
<figure class="center mw-100 ba b--light-gray" style="width:658px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/41-figure-34-main-activity.png" class="pointer"><img loading="lazy" decoding="async" class="size-full wp-image-27831" src="https://citizenlab.ca/wp-content/uploads/2016/08/41-figure-34-main-activity.png" alt="Figure 34: Services enabled by the APK" width="658" height="49" title="Group5: Syria and the Iranian Connection 45" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/41-figure-34-main-activity.png 658w, https://citizenlab.ca/wp-content/uploads/2016/08/41-figure-34-main-activity-300x22.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/41-figure-34-main-activity-180x13.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/41-figure-34-main-activity-605x45.png 605w, https://citizenlab.ca/wp-content/uploads/2016/08/41-figure-34-main-activity-297x22.png 297w" sizes="auto, (max-width: 658px) 100vw, 658px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 34: Services enabled by the APK</figcaption></figure>
<p>The Controller class, referred to by the Main Activity and started as a service on the device, handles the malware operator&rsquo;s interaction with the application while the GPSLocation class is responsible for obtaining the GPS position from the device&rsquo;s LocationManager. The Toaster class is not implemented in this APK; however, it is implemented in older SandroRAT samples.</p>
<p>The APK file has several Receiver classes defined to handle specific messages from the device (See Figure 35).</p>
<figure class="center mw-100 ba b--light-gray" style="width:568px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/42-figure-35-defined-receiver.png" class="pointer"><img loading="lazy" decoding="async" class="size-full wp-image-27832" src="https://citizenlab.ca/wp-content/uploads/2016/08/42-figure-35-defined-receiver.png" alt="Figure 35: Defined receiver classes" width="568" height="178" title="Group5: Syria and the Iranian Connection 46" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/42-figure-35-defined-receiver.png 568w, https://citizenlab.ca/wp-content/uploads/2016/08/42-figure-35-defined-receiver-300x94.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/42-figure-35-defined-receiver-180x56.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/42-figure-35-defined-receiver-297x93.png 297w" sizes="auto, (max-width: 568px) 100vw, 568px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 35: Defined receiver classes</figcaption></figure>
<p>&nbsp;</p>
<figure class="center mw-100 table-overflow" style="min-width:50%; width: min-content; margin: 0px auto"><div class="center" style="min-width: 100%; width: fit-content"><table border="0" cellspacing="0" style="width: max-content; height: unset" class="ba b--light-gray">
<tbody>
<tr class="striped--light-gray">
<td>Receiver Intent</td>
<td>Usage</td>
</tr>
<tr class="striped--light-gray">
<td>Connectivity Change</td>
<td>Allows the application to monitor any connectivity changes, including moving between mobile data and Wi-Fi. The constant value is set every time a change occurs.</td>
</tr>
<tr class="striped--light-gray">
<td>Boot Completed</td>
<td>Allows the application to re-connect when the device restarts. The constant value is broadcast when the device finishes booting.</td>
</tr>
<tr class="striped--light-gray">
<td>Phone State</td>
<td>Allows the application to monitor incoming calls. The constant value is set when the call state is changed.</td>
</tr>
</tbody>
</table></div></figure>
<p>The Connector Receiver simply starts the Controller Service when the phone boots allowing the malware to run in the background upon start up.</p>
<p>The CallListener Receiver allows the operator to log when the target makes calls, and record calls (if the operator has enabled it) as an .amr file that can then be sent to the command and control server.</p>
<p>Lastly, in the Manifest file, the Application enables two additional Activities, &ldquo;CAMSNAP&rdquo; and &ldquo;VIDEOCAP,&rdquo; as shown in Figure 36.</p>
<figure class="center mw-100 ba b--light-gray" style="width:580px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/43-figure-36-camera-video.png" class="pointer"><img loading="lazy" decoding="async" class="size-full wp-image-27833" src="https://citizenlab.ca/wp-content/uploads/2016/08/43-figure-36-camera-video.png" alt="Figure 36: Activities enabling camera and video capture" width="580" height="260" title="Group5: Syria and the Iranian Connection 47" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/43-figure-36-camera-video.png 580w, https://citizenlab.ca/wp-content/uploads/2016/08/43-figure-36-camera-video-300x134.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/43-figure-36-camera-video-180x81.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/43-figure-36-camera-video-297x133.png 297w" sizes="auto, (max-width: 580px) 100vw, 580px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 36: Activities enabling camera and video capture</figcaption></figure>
<p>These allow the operator to use the infected device&rsquo;s camera to take pictures and record video. This activity is hidden from the victim using a translucent theme.</p>
<h4 class="lh-solid mb3">The Malicious APK &ndash; The Controller</h4>
<p class="mt0">As previously mentioned, the Controller class is ultimately responsible for the rest of the functionality. The instance we analyzed was configured to use the same host as the Windows malware for command and control communication: 88.198.222[.]163.</p>
<figure class="center mw-100 ba b--light-gray" style="width:500px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/44-figure-37-droidjack.png" class="pointer"><img loading="lazy" decoding="async" class="size-full wp-image-27834" src="https://citizenlab.ca/wp-content/uploads/2016/08/44-figure-37-droidjack.png" alt="Figure 37: DroidJack configuration showing that it shares a host with the other Group5 malware" width="337" height="120" title="Group5: Syria and the Iranian Connection 48" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/44-figure-37-droidjack.png 337w, https://citizenlab.ca/wp-content/uploads/2016/08/44-figure-37-droidjack-300x107.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/44-figure-37-droidjack-180x64.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/44-figure-37-droidjack-297x106.png 297w" sizes="auto, (max-width: 337px) 100vw, 337px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 37: DroidJack configuration showing that it shares a host with the other Group5 malware</figcaption></figure>
<p>We were able to install a test instance to learn how the malware&rsquo;s operator could surveil victims. It is clear that the operator would have nearly full access to the victim&rsquo;s information.</p>
<p>Features offered include:</p>
<ul>
<li class="mt2">File browsing</li>
<li class="mt2">SMS and call logging</li>
<li class="mt2">Contacts</li>
<li class="mt2">Browser history</li>
<li class="mt2">Application Manager</li>
<li class="mt2">Location history</li>
<li class="mt2">WhatsApp Reader (only works on rooted devices)</li>
<li class="mt2">Remote camera and microphone</li>
</ul>
<figure class="center mw-100 ba b--light-gray" style="width:750px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/45-figure-38-droidjack-whatsapp.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27835" src="https://citizenlab.ca/wp-content/uploads/2016/08/45-figure-38-droidjack-whatsapp-1024x631.png" alt="Figure 38: DroidJack browsing WhatsApp logs for an infected device." width="750" height="462" title="Group5: Syria and the Iranian Connection 49" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/45-figure-38-droidjack-whatsapp-1024x631.png 1024w, https://citizenlab.ca/wp-content/uploads/2016/08/45-figure-38-droidjack-whatsapp-300x185.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/45-figure-38-droidjack-whatsapp-768x473.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/45-figure-38-droidjack-whatsapp-180x111.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/45-figure-38-droidjack-whatsapp-552x340.png 552w, https://citizenlab.ca/wp-content/uploads/2016/08/45-figure-38-droidjack-whatsapp-297x183.png 297w, https://citizenlab.ca/wp-content/uploads/2016/08/45-figure-38-droidjack-whatsapp.png 1032w" sizes="auto, (max-width: 750px) 100vw, 750px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 38: DroidJack browsing WhatsApp logs for an infected device.</figcaption></figure>
<p>Some features will only work on rooted devices. For example, the ability to read WhatsApp messages requires the victim&rsquo;s device to be rooted. Android apps are unable to access the data from other applications unless they are signed with the same certificate or if the app has been given permission to execute commands as root. If DroidJack is able to acquire root access it can then upload the database on the device where WhatsApp stores its message history.<br>
<a name="appendix-c" class="pointer"></a></p>
<h2 class="lh-solid mb3">Appendix C: Mr. Tekide</h2>
<p class="mt0">This appendix provides more context on Mr. Tekide, first delving into how we have identified his crypter (PAC Crypt) in strings in the binaries, and second highlighting the results of open source searching for his aliases and related strings.</p>
<h3 class="lh-solid mb3">Sample Correlation With PDB Strings</h3>
<p class="mt0">In the Group5 malware samples, we have several PDB file references that suggest that the crypter used with the two distinct RAT tools (njRat and NanoCore) was Mr. Tekide&rsquo;s &lsquo;PAC Crypt&rsquo;. For the njRat sample from Dropper Doc 3, we can see the malware stub was compiled by &lsquo;mr.tekide&rsquo; as well.</p>
<figure class="center mw-100 table-overflow" style="min-width:50%; width: min-content; margin: 0px auto"><div class="center" style="min-width: 100%; width: fit-content"><table border="0" cellspacing="0" style="width: max-content; height: unset" class="ba b--light-gray">
<tbody>
<tr class="striped--light-gray">
<td>Reference: Doc Dropper 1 Crypter</td>
<td>MD5: a4f1f4921bb11ff9d22fad89b19b155d</td>
<td>Compile Time: 9/30/2015 00:02:51</td>
</tr>
<tr class="striped--light-gray">
<td colspan="3">c:\users\mr.tekide\documents\visual studio 2013\projects\paccryptnano core dehgani -vds\windowsapplication2\obj\debug\launch manager.pdb</td>
</tr>
</tbody>
</table></div></figure>
<p>&nbsp;</p>
<figure class="center mw-100 table-overflow" style="min-width:50%; width: min-content; margin: 0px auto"><div class="center" style="min-width: 100%; width: fit-content"><table border="0" cellspacing="0" style="width: max-content; height: unset" class="ba b--light-gray">
<tbody>
<tr class="striped--light-gray">
<td>Reference: Doc Dropper 3 Crypter</td>
<td>MD5:6161083021b695814434450c1882f9f3</td>
<td>Compile Time: 10/6/2015 02:13:45</td>
</tr>
<tr class="striped--light-gray">
<td colspan="3">C:\Users\mr.tekide\Documents\Visual Studio 2013\Projects\paccrypt11njratmalii\paccryptalipnahzade\obj\Debug\LManager.pdb</td>
</tr>
</tbody>
</table></div></figure>
<p>&nbsp;</p>
<figure class="center mw-100 table-overflow" style="min-width:50%; width: min-content; margin: 0px auto"><div class="center" style="min-width: 100%; width: fit-content"><table border="0" cellspacing="0" style="width: max-content; height: unset" class="ba b--light-gray">
<tbody>
<tr class="striped--light-gray">
<td>Reference: Doc Dropper 3 njRat Payload</td>
<td>MD5:b4121c3a1892332402000ef0d587c0ee</td>
<td>Compile Time: 10/6/2015 01:23:31</td>
</tr>
<tr class="striped--light-gray">
<td colspan="3">C:\Users\mr.tekide\Documents\Visual Studio 2013\Projects\njrat7stubsoures &ndash; Copy\njrat7stubsoures\obj\Debug\dvvm.pdb</td>
</tr>
</tbody>
</table></div></figure>
<p>&nbsp;</p>
<p>The Visual Studio project folders listed above suggest the particular version of PAC Crypt compiled by Mr. Tekide was being prepared in one case for an njRat payload, and another for a NanoCore payload. The strings &lsquo;dehgani &ndash;vds&rsquo;, &lsquo;malii&rsquo; and &lsquo;alipnahzade&rsquo; may have additional significance or relevance.</p>
<p>We conducted searches across online malware repositories and analysis services (such as VirusTotal, Malwr, and TotalHash) in an effort to acquire additional data relating to the use of PAC Crypt. These searches revealed very little in relation to PAC Crypt specifically, so we instead examined the data for instances of &lsquo;tekide&rsquo; related strings found in PDB files.</p>
<p>It is our hope that the data or avenue of investigation presented below may be of value to other researchers.</p>
<p>The results we examined contained over 200 samples which we then clustered into sets based on compile time and PDB reference as shown in the table below:</p>
<p><a href="https://citizenlab.ca/wp-content/uploads/2016/08/46-samples.png" class="pointer"><img loading="lazy" decoding="async" class="aligncenter size-full wp-image-27837" src="https://citizenlab.ca/wp-content/uploads/2016/08/46-samples.png" alt="We examined contained over 200 samples which we then clustered into sets based on compile time and PDB reference as shown in the table" width="712" height="504" title="Group5: Syria and the Iranian Connection 50" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/46-samples.png 712w, https://citizenlab.ca/wp-content/uploads/2016/08/46-samples-300x212.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/46-samples-180x127.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/46-samples-480x340.png 480w, https://citizenlab.ca/wp-content/uploads/2016/08/46-samples-281x199.png 281w" sizes="auto, (max-width: 712px) 100vw, 712px" /></a></p>
<p>The following compile time / PDB references were also observed in singular instances:</p>
<p><a href="https://citizenlab.ca/wp-content/uploads/2016/08/47a-compile-time-pdb-full.png" class="pointer"><img loading="lazy" decoding="async" class="aligncenter size-full wp-image-27850" src="https://citizenlab.ca/wp-content/uploads/2016/08/47a-compile-time-pdb-full.png" alt="Compile time / PDB references were also observed in singular instances" width="743" height="363" title="Group5: Syria and the Iranian Connection 51" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/47a-compile-time-pdb-full.png 743w, https://citizenlab.ca/wp-content/uploads/2016/08/47a-compile-time-pdb-full-300x147.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/47a-compile-time-pdb-full-180x88.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/47a-compile-time-pdb-full-605x296.png 605w, https://citizenlab.ca/wp-content/uploads/2016/08/47a-compile-time-pdb-full-297x145.png 297w" sizes="auto, (max-width: 743px) 100vw, 743px" /></a></p>
<p>Keeping in mind the limitations of reliance on compile times, we nevertheless were able to compare the noted compile times against the first time samples appeared in common malware repositories such as VirusTotal, Malwr, and TotalHash. In most instances, samples began to appear in malware repositories within hours of the files being compiled. Dynamic analysis of the samples in these sets revealed multiple different payloads and C2 configurations. For example, analysis of the samples in Set A yielded the following payloads and configurations:</p>
<p><a href="https://citizenlab.ca/wp-content/uploads/2016/08/48-analysis-samples.png" class="pointer"><img loading="lazy" decoding="async" class="aligncenter size-full wp-image-27840" src="https://citizenlab.ca/wp-content/uploads/2016/08/48-analysis-samples.png" alt="analysis of the samples in Set A yielded the following payloads and configurations" width="754" height="523" title="Group5: Syria and the Iranian Connection 52" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/48-analysis-samples.png 754w, https://citizenlab.ca/wp-content/uploads/2016/08/48-analysis-samples-300x208.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/48-analysis-samples-180x125.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/48-analysis-samples-490x340.png 490w, https://citizenlab.ca/wp-content/uploads/2016/08/48-analysis-samples-287x199.png 287w" sizes="auto, (max-width: 754px) 100vw, 754px" /></a></p>
<p>Finally, analysis of the compile times observed across the acquired samples suggest a period of activity falling in the latter half of 2014. There are many possible explanations as to why so few samples were observed with compile times beyond 2014: conscious removal of PDB information, a change in personal circumstances, or possibly even a shift to less public malware development activities.</p>
<h4 class="lh-solid mb3">Mr. Tekide on the Internet</h4>
<p class="mt0">Mr. Tekide maintains a visible profile across various malware related web forums, as well as on social media. Searches conducted for this alias provided numerous results which reveal a consistent use of the Mr. Tekide name and avatar, as shown in the images below.</p>
<figure class="center mw-100 ba b--light-gray" style="width:750px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/49-figure-39-mr-tekide.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27841" src="https://citizenlab.ca/wp-content/uploads/2016/08/49-figure-39-mr-tekide-1024x698.png" alt="Figure 39: Mr. Tekide showcasing his &lsquo;ashiyane crypter v.7&rsquo; on the Ashiyane forums" width="750" height="511" title="Group5: Syria and the Iranian Connection 53" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/49-figure-39-mr-tekide-1024x698.png 1024w, https://citizenlab.ca/wp-content/uploads/2016/08/49-figure-39-mr-tekide-300x205.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/49-figure-39-mr-tekide-768x524.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/49-figure-39-mr-tekide-180x123.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/49-figure-39-mr-tekide-498x340.png 498w, https://citizenlab.ca/wp-content/uploads/2016/08/49-figure-39-mr-tekide-292x199.png 292w, https://citizenlab.ca/wp-content/uploads/2016/08/49-figure-39-mr-tekide.png 1944w" sizes="auto, (max-width: 750px) 100vw, 750px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 39: Mr. Tekide showcasing his &lsquo;ashiyane crypter v.7&rsquo; on the Ashiyane forums</figcaption></figure>
<p>&nbsp;</p>
<figure class="center mw-100 ba b--light-gray" style="width:500px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/50-figure-40-mr-tekide.png" class="pointer"><img loading="lazy" decoding="async" class="size-full wp-image-27842" src="https://citizenlab.ca/wp-content/uploads/2016/08/50-figure-40-mr-tekide.png" alt="Figure 40: Mr.Tekide&rsquo;s administrator profile on the crypter[.]ir forums" width="206" height="694" title="Group5: Syria and the Iranian Connection 54" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/50-figure-40-mr-tekide.png 206w, https://citizenlab.ca/wp-content/uploads/2016/08/50-figure-40-mr-tekide-89x300.png 89w, https://citizenlab.ca/wp-content/uploads/2016/08/50-figure-40-mr-tekide-180x606.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/50-figure-40-mr-tekide-101x340.png 101w, https://citizenlab.ca/wp-content/uploads/2016/08/50-figure-40-mr-tekide-59x199.png 59w" sizes="auto, (max-width: 206px) 100vw, 206px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 40: Mr.Tekide&rsquo;s administrator profile on the crypter[.]ir forums</figcaption></figure>
<figure class="center mw-100 ba b--light-gray" style="width:750px;"><div class="tc pa2 bg-white"><a href="https://citizenlab.ca/wp-content/uploads/2016/08/51-figure-41-pac-crypt-page.png" class="pointer"><img loading="lazy" decoding="async" class=" wp-image-27843" src="https://citizenlab.ca/wp-content/uploads/2016/08/51-figure-41-pac-crypt-page-1024x667.png" alt="Figure 41: PAC Crypt page on the crypter[.]ir online shop" width="750" height="488" title="Group5: Syria and the Iranian Connection 55" srcset="https://citizenlab.ca/wp-content/uploads/2016/08/51-figure-41-pac-crypt-page-1024x667.png 1024w, https://citizenlab.ca/wp-content/uploads/2016/08/51-figure-41-pac-crypt-page-300x195.png 300w, https://citizenlab.ca/wp-content/uploads/2016/08/51-figure-41-pac-crypt-page-768x500.png 768w, https://citizenlab.ca/wp-content/uploads/2016/08/51-figure-41-pac-crypt-page-180x117.png 180w, https://citizenlab.ca/wp-content/uploads/2016/08/51-figure-41-pac-crypt-page-522x340.png 522w, https://citizenlab.ca/wp-content/uploads/2016/08/51-figure-41-pac-crypt-page-297x194.png 297w, https://citizenlab.ca/wp-content/uploads/2016/08/51-figure-41-pac-crypt-page.png 1900w" sizes="auto, (max-width: 750px) 100vw, 750px" /></a></div><figcaption class="f5-ns f6 black-70 pa2 bg-light-gray">Figure 41: PAC Crypt page on the crypter[.]ir online shop</figcaption></figure>
<p>A link found on the &lsquo;Contact&rsquo; page of the crypter[.]ir website led to a <a href="https://www.facebook.com/tekide" class="pointer" target="_blank" rel="noopener">Facebook profile</a> in the name of &lsquo;Pezhman Blackhat.&rsquo; In addition to this Facebook profile, we also identified a <a href="https://ir.linkedin.com/in/pezhman-tekide-a87054bb" class="pointer" target="_blank" rel="noopener">LinkedIn profile</a> in which he refers to himself as a &lsquo;crypter,&rsquo; and states that he works for the ashiyane digital security team. He also maintains an <a href="https://www.instagram.com/tekide/" class="pointer" target="_blank" rel="noopener">Instagram profile</a>.</p>
<p><a name="appendix-d" class="pointer"></a></p>
<h2 class="lh-solid mb3">Appendix D: File Hashes</h2>
<h3 class="lh-solid mb3">Full Table of Binaries</h3>
<figure class="center mw-100 table-overflow" style="min-width:50%; width: min-content; margin: 0px auto"><div class="center" style="min-width: 100%; width: fit-content"><table border="0" cellspacing="0" style="width: max-content; height: unset" class="ba b--light-gray">
<thead>
<tr class="tableizer-firstrow">
<th>File</th>
<th>MD5</th>
<th>VirusTotal (26-Jul-2016)</th>
<th>First Sub. on VT</th>
</tr>
</thead>
<tbody>
<tr class="striped--light-gray">
<td><strong>Dropper Doc 1</strong></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="striped--light-gray">
<td>assadcrimes.ppsx</td>
<td>76F8142B4E52C671871B3DF87F10C30C</td>
<td>N/A</td>
<td>N/A</td>
</tr>
<tr class="striped--light-gray">
<td>putty.exe [stage1 downloader]</td>
<td>366908F6C5C4F4329478D60586ECA5BC</td>
<td>N/A</td>
<td>N/A</td>
</tr>
<tr class="striped--light-gray">
<td>dvm.exe [stage 2 payload]</td>
<td>7D898530D2E77F15F5BADCE8D7DF215E</td>
<td>N/A</td>
<td>N/A</td>
</tr>
<tr class="striped--light-gray">
<td>Unpacked dvm.exe</td>
<td>A4F1F4921BB11FF9D22FAD89B19B155D</td>
<td>N/A</td>
<td>N/A</td>
</tr>
<tr class="striped--light-gray">
<td>NanoCore RAT payload</td>
<td>DD5BEDD915967C5EFE00733CF7478CB4</td>
<td>N/A</td>
<td>N/A</td>
</tr>
<tr class="striped--light-gray">
<td><strong>Dropper Doc 2</strong></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="striped--light-gray">
<td>assadcrimes1.ppsx</td>
<td>F1F84EA3229DCA0CCACB7381A2F49F99</td>
<td>N/A</td>
<td>N/A</td>
</tr>
<tr class="striped--light-gray">
<td>dvm.exe</td>
<td>7D898530D2E77F15F5BADCE8D7DF215E</td>
<td>N/A</td>
<td>N/A</td>
</tr>
<tr class="striped--light-gray">
<td><strong>Dropper Doc 3</strong></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="striped--light-gray">
<td>assadcrimes.info.ppsx</td>
<td>30BB678DB3AD0140FC33ACD9803385C3</td>
<td>N/A</td>
<td>N/A</td>
</tr>
<tr class="striped--light-gray">
<td>putty.exe</td>
<td>5C4EC3D93A664E4BFA1CE6286CCF0249</td>
<td>N/A</td>
<td>N/A</td>
</tr>
<tr class="striped--light-gray">
<td>Unpacked putty.exe</td>
<td>6161083021B695814434450C1882F9F3</td>
<td>N/A</td>
<td>N/A</td>
</tr>
<tr class="striped--light-gray">
<td>njRAT payload</td>
<td>B4121C3A1892332402000EF0D587C0EE</td>
<td>N/A</td>
<td>N/A</td>
</tr>
<tr class="striped--light-gray">
<td><strong>Decoy Dropper 4</strong></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="striped--light-gray">
<td>alshohadaa alatfal.exe [decoy app]</td>
<td>2FC276E1C06C3C78C6D7B66A141213BE</td>
<td>N/A</td>
<td>N/A</td>
</tr>
<tr class="striped--light-gray">
<td>dvm.exe [dropped by decoy app]</td>
<td>494BAB7FD0B42B0B14051ED9ABBD651F</td>
<td>14 / 55</td>
<td>2-Mar-2016</td>
</tr>
<tr class="striped--light-gray">
<td>Unpacked dvm.exe</td>
<td>6161083021B695814434450C1882F9F3</td>
<td>N/A</td>
<td>N/A</td>
</tr>
<tr class="striped--light-gray">
<td>njRAT payload</td>
<td>B4121C3A1892332402000EF0D587C0EE</td>
<td>N/A</td>
<td>N/A</td>
</tr>
<tr class="striped--light-gray">
<td><strong>Android Malicious APK (DroidJack)</strong></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr class="striped--light-gray">
<td>adobe_flash_player.apk</td>
<td>8EBEB3F91CDA8E985A9C61BEB8CDDE9D</td>
<td>23 / 53</td>
<td>5-Jul-2016</td>
</tr>
</tbody>
</table></div></figure>
<p>These hashes are also available via the <a href="https://github.com/citizenlab/malware-signatures/blob/master/Group5/hashes" class="pointer" target="_blank" rel="noopener">Citizen Lab Github</a>.</p>
<h2 class="lh-solid mb3"><a name="appendix-e" class="pointer"></a>Appendix E: Email Information</h2>
<figure class="center mw-100 table-overflow" style="min-width:50%; width: min-content; margin: 0px auto"><div class="center" style="min-width: 100%; width: fit-content"><table border="0" cellspacing="0" style="width: max-content; height: unset" class="ba b--light-gray">
<thead>
<tr class="tableizer-firstrow">
<th>Date</th>
<th>Sender</th>
<th>subject</th>
<th>IP</th>
<th>Binary attached</th>
</tr>
</thead>
<tbody>
<tr class="striped--light-gray">
<td>03 Oct 2015 06:05:41 -0700 (PDT)</td>
<td><a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="711e17171812143110020210151203181c14025f181f171e">[email&#160;protected]</a></td>
<td>&#1575;&#1610;&#1585;&#1575;&#1606; &#1578;&#1602;&#1578;&#1604; &#1575;&#1604;&#1581;&#1580;&#1575;&#1580; &#1601;&#1610; &#1605;&#1606;&#1609;</td>
<td>88.198.222.163</td>
<td>assadcrimes.ppsx</td>
</tr>
<tr class="striped--light-gray">
<td>04 Oct 2015 05:47:00 -0700 (PDT)</td>
<td><a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="38575e5e515b5d78594b4b595c5b4a51555d4b1651565e57">[email&#160;protected]</a></td>
<td>Re: &#1575;&#1610;&#1585;&#1575;&#1606; &#1578;&#1602;&#1578;&#1604; &#1575;&#1604;&#1581;&#1580;&#1575;&#1580; &#1601;&#1610; &#1605;&#1606;&#1609;</td>
<td>RoundCube (212.7.195.171)</td>
<td>assadcrimes1.ppsx</td>
</tr>
</tbody>
</table></div></figure>
<h2 class="lh-solid mb3"><a name="appendix-f" class="pointer"></a>Appendix F: Notification</h2>
<p class="mt0">On April 12, 2016 we contacted Hetzner via e-mail as well as their abuse form, and informed them that the server was being used to host malware. We also provided network logs as well as a malware sample. We subsequently followed up with two phone calls. On a telephone call, a Hetzner representative refused to investigate, stating that they would take no investigative action before sharing the content of our complaint with the customer, who would then have 24 hours to take action. When we suggested that this might result in the deletion of evidence, and highlighted the special nature of the case, the representative refused any further action.<br>
Footnotes<a name="1" class="pointer"></a><sup>1</sup> Noura has given her permission for us to disclose her role in this case, and use her photograph.<br>
<a name="2" class="pointer"></a><sup>2</sup> Mozilla/5.0 (Windows NT 6.3; rv:39.0) Gecko/20100101 Firefox/39.0<br>
<a name="3" class="pointer"></a><sup>3</sup> http://ashiyane[.]org/forums<br>
<a name="4" class="pointer"></a><sup>4</sup> This technique has been <a href="http://phishme.com/powerpoint-and-custom-actions/" class="pointer" target="_blank" rel="noopener">documented previously</a>.</p>

                </section>
                                <section id="media_mentions" class="mb4 mt4 bt b--light-gray pt4 pb2">
                    <h2 class="mt0 mb2">Media Mentions</h2>
                    <p><strong><a href="http://bigstory.ap.org/article/6ab1ab75e89e480a9d12befd3fea4115/experts-iranian-link-attempted-hack-syrian-dissident">Associated Press exclusive</a>, </strong><a href="https://boingboing.net/2016/08/02/iranians-connected-to-phishing.html">BoingBoing</a>, <a href="http://www.bbc.com/persian/science/2016/08/160802_an_iran_syria_dissidents_attempted_hack">BBC</a>, <a href="http://ir.voanews.com/a/iranian-hack-syrian-dissident/3445779.html">Voice of America Persian</a>, <a href="http://www.ibtimes.co.uk/suspected-iranian-cyberespionage-group-targets-syrian-dissidents-1574221">IB Times</a>, <a href="http://news.softpedia.com/news/new-cyber-espionage-group-targets-syrian-dissidents-506952.shtml">Softpedia</a>, <a href="http://aawsat.com/home/article/704806/%D9%85%D9%86%D8%B8%D9%85%D8%A9-%D8%A3%D9%85%D9%8A%D8%B1%D9%83%D9%8A%D8%A9-%D8%A7%D9%84%D9%80%C2%AB%D9%87%D8%A7%D9%83%D8%B1%D8%B2%C2%BB-%D8%A7%D9%84%D8%A5%D9%8A%D8%B1%D8%A7%D9%86%D9%8A-%D9%8A%D9%86%D8%B6%D9%85-%D9%84%D9%84%D8%B5%D8%B1%D8%A7%D8%B9-%D9%81%D9%8A-%D8%B3%D9%88%D8%B1%D9%8A%D8%A7">Asharq Al-Awsat</a>, <a href="https://www.youtube.com/watch?v=JaWhUkBlqC4">AlArabiya</a>, <a href="http://www.securityweek.com/iranian-actor-group5-targeting-syrian-opposition">SecurityWeek</a>, <a href="http://www.scmagazine.com/researchers-spot-malware-targeting-syrian-opposition/article/514204/">SC Magazine</a>, <a href="http://www.okaz.com.sa/new/Issues/20160804/Con20160804851237.htm">Okaz</a>, <a href="http://www.milliyet.com.tr/iran-dan-esad-a-hacker-destegi--dunya-2288478/">Milliyet</a>, <a href="http://twsas.org/2016/08/%D9%81%D9%8A-%D8%AF%D9%88%D9%84-%D9%85%D9%86%D9%87%D8%A7-%D8%B3%D9%88%D8%B1%D9%8A%D8%A9-%D9%88%D8%A7%D9%84%D8%A5%D9%85%D8%A7%D8%B1%D8%A7%D8%AA-%D8%A8%D8%B1%D9%85%D8%AC%D9%8A%D8%A7%D8%AA-%D9%85/">Twsas</a>, <a href="http://www.radiosawa.com/a/syria-emirates-spy-twitter-/317518.html">Radio Sawa</a>, <a href="http://foreignpolicy.com/2016/08/03/situation-report-drones-special-ops-help-in-libya-strikes-navy-spy-trial-set-the-long-reach-of-isis-china-makes-its-case-and-lots-more/">Foreign Policy</a>, <a href="https://www.schneier.com/blog/archives/2016/08/how_the_iranian.html">Schneier on Security</a>.</p>
                </section>
                                <footer>



                </footer> 
              </article> 
						
												<aside class="social-sidebar">
				          <div id="social-sidebar" role="complementary" class="w-100">
	
	
	                 <section id="directors_message" class="sidebar-section">
                    <span class="db sidebar-title">Ron Deibert on this post</span> <div><p><a href="https://www.washingtonpost.com/posteverything/wp/2016/08/02/how-foreign-governments-spy-using-email-and-powerpoint/">How foreign governments spy using PowerPoint and Twitter</a></p>
</div>
                </section>
                 

</div>			          	</aside>

			</section>
		</main>
			 
</div>

<footer role="contentinfo" itemscope itemtype="http://schema.org/WPFooter" class="footer">
	<div class="footer__container">
		<nav role="navigation" class="footer__nav">
			<h2>Research</h2>
			<div class="footer-links cf"><ul id="menu-research" class="list pa0"><li id="menu-item-29711" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-29711"><a href="https://citizenlab.ca/category/research/targeted-threats/" class="lh-title mb2 db white b no-underline underline-hover">Targeted Threats</a></li>
<li id="menu-item-29709" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-29709"><a href="https://citizenlab.ca/category/research/free-expression-online/" class="lh-title mb2 db white b no-underline underline-hover">Free Expression Online</a></li>
<li id="menu-item-29712" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-29712"><a href="https://citizenlab.ca/category/research/transparency/" class="lh-title mb2 db white b no-underline underline-hover">Transparency and Accountability</a></li>
<li id="menu-item-29708" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-29708"><a href="https://citizenlab.ca/category/research/app-privacy-and-security/" class="lh-title mb2 db white b no-underline underline-hover">App Privacy and Controls</a></li>
<li id="menu-item-29710" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-29710"><a href="https://citizenlab.ca/category/research/global-research-network/" class="lh-title mb2 db white b no-underline underline-hover">Global Research Network</a></li>
<li id="menu-item-72386" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-72386"><a href="https://citizenlab.ca/category/research/tools-resources/" class="lh-title mb2 db white b no-underline underline-hover">Tools &#038; Resources</a></li>
<li id="menu-item-29713" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-29713"><a href="https://citizenlab.ca/publications/" class="lh-title mb2 db white b no-underline underline-hover">All Publications</a></li>
</ul></div>		</nav>
		<nav role="navigation" class="footer__nav">
			<h2>News</h2>
			<div class="footer-links cf"><ul id="menu-news" class="list pa0"><li id="menu-item-29714" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-29714"><a href="https://citizenlab.ca/category/lab-news/mentions/" class="lh-title mb2 db white b no-underline underline-hover">In the Media</a></li>
<li id="menu-item-29715" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-29715"><a href="https://citizenlab.ca/category/lab-news/events/" class="lh-title mb2 db white b no-underline underline-hover">Events</a></li>
<li id="menu-item-29716" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-29716"><a href="https://citizenlab.ca/category/lab-news/opportunities/" class="lh-title mb2 db white b no-underline underline-hover">Opportunities</a></li>
<li id="menu-item-29717" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-29717"><a href="https://citizenlab.ca/newsletter/archives/" class="lh-title mb2 db white b no-underline underline-hover">Newsletter Archives</a></li>
</ul></div>		</nav>
		<nav role="navigation" class="footer__nav">
			<h2>About</h2>
			<div class="footer-links cf"><ul id="menu-about" class="list pa0"><li id="menu-item-29718" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-29718"><a href="https://citizenlab.ca/about/" class="lh-title mb2 db white b no-underline underline-hover">About The Citizen Lab</a></li>
<li id="menu-item-29720" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-29720"><a href="https://citizenlab.ca/people/" class="lh-title mb2 db white b no-underline underline-hover">People</a></li>
<li id="menu-item-68022" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-68022"><a href="https://citizenlab.ca/media/" class="lh-title mb2 db white b no-underline underline-hover">Media Resources</a></li>
<li id="menu-item-29721" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-29721"><a href="https://citizenlab.ca/teaching/" class="lh-title mb2 db white b no-underline underline-hover">Teaching</a></li>
<li id="menu-item-68345" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-68345"><a href="https://donate.utoronto.ca/give/show/84" class="lh-title mb2 db white b no-underline underline-hover">Donate</a></li>
</ul></div>
		</nav>
		</div>

		<!-- Social Media & Newletter -->
		<div class="footer__container mt4 relative pt3-ns bt b--gray">
			<div class="flex-ns justify-between w-100">
				<div class="w-30-ns w-100 mb3 mr3-ns pt3">
					<h2 class="ttu mt0 mb2 f4">Connect</h2>
						<div class="social-media">
						
							<a class="dim" href="https://x.com/citizenlab" aria-label="Visit our Twitter/X account"><span class="fa-brands fa-x-twitter white" aria-hidden="true"></span></a>

							<a class="dim" href="https://bsky.app/profile/citizenlab.ca" aria-label="Visit our Bluesky account"><span class="fa-brands fa-bluesky white" aria-hidden="true"></span></a>

							<a class="dim" rel="me" href="https://mastodon.social/@citizenlab" aria-label="Follow our Mastodon account"><span class="fa-brands fa-mastodon white" aria-hidden="true"></span></a>

							<a class="dim" href="https://www.youtube.com/channel/UCf5Aunw7xvt3lAFrLhiCA5w" aria-label="Visit our Youtube page"><span class="fa-brands fa-youtube white" aria-hidden="true"></span></a>

							<a class="dim" href="https://ca.linkedin.com/company/the-citizen-lab" aria-label="Visit our LinkedIn page"><span class="fa-brands fa-linkedin white" aria-hidden="true"></span></a>

							<a class="dim" href="/cdn-cgi/l/email-protection#c5acabb4b0acb7aca0b685a6acb1acbfa0aba9a4a7eba6a4" aria-label="Email us"><span class="fa-solid fa-envelope white" aria-hidden="true"></span></a>

							<a class="dim" href="https://github.com/citizenlab" aria-label="Visit oour Github"><span class="fa-brands fa-github white" aria-hidden="true"></span></a>
						</div>
				</div>
				<div class="w-60-ns f6 w-100 pt3">
											<h2 class="f4 ttu mb2 mt3 mt0-ns">Newsletter</h2>
							
							<div id="text-3">			<div class="textwidget"><script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script>(function() {
	window.mc4wp = window.mc4wp || {
		listeners: [],
		forms: {
			on: function(evt, cb) {
				window.mc4wp.listeners.push(
					{
						event   : evt,
						callback: cb
					}
				);
			}
		}
	}
})();
</script><!-- Mailchimp for WordPress v4.10.4 - https://wordpress.org/plugins/mailchimp-for-wp/ --><form id="mc4wp-form-1" class="mc4wp-form mc4wp-form-29703" method="post" data-id="29703" data-name="" ><div class="mc4wp-form-fields"><input type="email" name="EMAIL" placeholder="Your email address" required class="dib pv1 mr2 mv1 lh-solid mw4"/><input type="submit" value="Sign up" class="link br1 b--none lh-solid cta-button-orange b pointer"/></div><label style="display: none !important;">Leave this field empty if you're human: <input type="text" name="_mc4wp_honeypot" value="" tabindex="-1" autocomplete="off" /></label><input type="hidden" name="_mc4wp_timestamp" value="1749252063" /><input type="hidden" name="_mc4wp_form_id" value="29703" /><input type="hidden" name="_mc4wp_form_element_id" value="mc4wp-form-1" /><div class="mc4wp-response"></div></form><!-- / Mailchimp for WordPress Plugin -->
</div>
		</div>						
									</div>		
			</div>
		</div>
		
</footer>
			<div id="privacy-footer">
				
												 <div class="mv0 dib">
							<div id="text-5">			<div class="textwidget"><p><a class="db white dim" href="https://citizenlab.ca/privacy/">Privacy Policy</a></p>
</div>
		</div>							</div>
																	 <div class="mv0 dib ph3-l">
							<div id="text-4">			<div class="textwidget"><p>Unless otherwise noted this site and its contents are licensed under a <a class="white dim" href="https://creativecommons.org/licenses/by/2.5/ca/">Creative Commons Attribution 2.5 Canada</a> license.</p>
</div>
		</div>							</div>
											<div class="dib mv0 mt2 lh0 mw5">
								<a href="http://munkschool.utoronto.ca/" target="blank">
										<img src="https://citizenlab.ca/wp-content/themes/citizenlab-2.1.5/library/images/MunkSchool-WHT.png" alt="Munk School of Global Affairs & Public Policy | University of Toronto" />
								</a>
						</div>
				
			</div>

<script type="speculationrules">
{"prefetch":[{"source":"document","where":{"and":[{"href_matches":"\/*"},{"not":{"href_matches":["\/wp-*.php","\/wp-admin\/*","\/wp-content\/uploads\/*","\/wp-content\/*","\/wp-content\/plugins\/*","\/wp-content\/themes\/citizenlab-2.1.5\/*","\/*\\?(.+)"]}},{"not":{"selector_matches":"a[rel~=\"nofollow\"]"}},{"not":{"selector_matches":".no-prefetch, .no-prefetch a"}}]},"eagerness":"conservative"}]}
</script>
<script>(function() {function maybePrefixUrlField () {
  const value = this.value.trim()
  if (value !== '' && value.indexOf('http') !== 0) {
    this.value = 'http://' + value
  }
}

const urlFields = document.querySelectorAll('.mc4wp-form input[type="url"]')
for (let j = 0; j < urlFields.length; j++) {
  urlFields[j].addEventListener('blur', maybePrefixUrlField)
}
})();</script><script type="text/javascript" src="https://citizenlab.ca/wp-content/plugins/bigfoot_footnotes/library/bigfoot.js" id="bigfoot-js"></script>
<script type="text/javascript" src="https://citizenlab.ca/wp-content/plugins/bigfoot_footnotes/library/bigfoot.min.js" id="bigfoot-min-js"></script>
<script type="text/javascript" src="https://citizenlab.ca/wp-content/plugins/bigfoot_footnotes/library/bigfoot-function.js" id="bigfoot-function-js"></script>
<script type="text/javascript" src="https://citizenlab.ca/wp-content/plugins/youtube-embed-plus/scripts/fitvids.min.js" id="__ytprefsfitvids__-js"></script>
<script type="text/javascript" src="https://citizenlab.ca/wp-content/themes/citizenlab-2.1.5/library/js/search-menu.js" id="search-menu-js"></script>
<script type="text/javascript" src="https://citizenlab.ca/wp-content/themes/citizenlab-2.1.5/library/js/jquery-details/jquery.details.min.js" id="jquery-details-js"></script>
<script type="text/javascript" defer src="https://citizenlab.ca/wp-content/plugins/mailchimp-for-wp/assets/js/forms.js" id="mc4wp-forms-api-js"></script>

</body>

</html> <!-- end of site. what a ride! -->
<!--
Performance optimized by Redis Object Cache. Learn more: https://wprediscache.com

Retrieved 2749 objects (1 MB) from Redis using Predis (v2.1.2).
-->
