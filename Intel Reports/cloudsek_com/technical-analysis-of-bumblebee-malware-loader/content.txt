<!DOCTYPE html><!-- Last Published: Thu Mar 27 2025 14:30:12 GMT+0000 (Coordinated Universal Time) --><html data-wf-domain="www.cloudsek.com" data-wf-page="643d86bee5710968d7e506fa" data-wf-site="634fc5026f66af518e897c77" lang="en" data-wf-locale="en" data-wf-collection="643d86bee571096b3be5069d" data-wf-item-slug="technical-analysis-of-bumblebee-malware-loader"><head><meta charset="utf-8"/><title>Technical Analysis of Bumblebee Malware Loader | CloudSEK</title><meta content="Technical Analysis of Bumblebee Malware Loader" name="description"/><meta content="Technical Analysis of Bumblebee Malware Loader | CloudSEK" property="og:title"/><meta content="Technical Analysis of Bumblebee Malware Loader" property="og:description"/><meta content="https://cdn.prod.website-files.com/635e632477408d12d1811a64/64062bd32c1bbdcb6c3db8d4_bumblee-malware-analysis.jpeg" property="og:image"/><meta content="Technical Analysis of Bumblebee Malware Loader | CloudSEK" property="twitter:title"/><meta content="Technical Analysis of Bumblebee Malware Loader" property="twitter:description"/><meta content="https://cdn.prod.website-files.com/635e632477408d12d1811a64/64062bd32c1bbdcb6c3db8d4_bumblee-malware-analysis.jpeg" property="twitter:image"/><meta property="og:type" content="website"/><meta content="summary_large_image" name="twitter:card"/><meta content="width=device-width, initial-scale=1" name="viewport"/><meta content="RA8J04uFx_ekOX_4m3szN0f75AAWDnipQvO1Zku9ju0" name="google-site-verification"/><link href="https://cdn.prod.website-files.com/634fc5026f66af518e897c77/css/cloudsek-website.webflow.d154e17e8.css" rel="stylesheet" type="text/css"/><script type="text/javascript">!function(o,c){var n=c.documentElement,t=" w-mod-";n.className+=t+"js",("ontouchstart"in o||o.DocumentTouch&&c instanceof DocumentTouch)&&(n.className+=t+"touch")}(window,document);</script><link href="https://cdn.prod.website-files.com/634fc5026f66af518e897c77/641377c816c6fc1eb7e44654_favicon-32x32.png" rel="shortcut icon" type="image/x-icon"/><link href="https://cdn.prod.website-files.com/634fc5026f66af518e897c77/634fc72bbb51ca5becedfe90_Logo%20Emblem%20only%20dark.png" rel="apple-touch-icon"/><link href="https://cloudsek.com/blog/technical-analysis-of-bumblebee-malware-loader" rel="canonical"/><link href="rss.xml" rel="alternate" title="RSS Feed" type="application/rss+xml"/><script async="" src="https://www.googletagmanager.com/gtag/js?id=UA-132848044-1"></script><script type="text/javascript">window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'UA-132848044-1', {'anonymize_ip': false, 'optimize_id': 'GTM-P8TZM5T'});</script><script async="" src="https://www.googletagmanager.com/gtag/js?id=G-CVBS2RDPRJ"></script><script type="text/javascript">window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('set', 'developer_id.dZGVlNj', true);gtag('config', 'G-CVBS2RDPRJ', {'optimize_id': 'GTM-P8TZM5T'});</script><!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-PQDP7HJ');</script>
<!-- End Google Tag Manager -->

<script type="text/javascript">
    (function(c,l,a,r,i,t,y){
        c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)};
        t=l.createElement(r);t.async=1;t.src="https://www.clarity.ms/tag/"+i;
        y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y);
    })(window, document, "clarity", "script", "frgg3qg64j");
</script>

<meta name="msvalidate.01" content="29FDD6466C5CF7F88B7192FFA8D8922E" />
<meta name="yandex-verification" content="61d5c297e7855473" />

<style>
  
table, th, td {
    border-collapse: collapse;
	padding: 5px;
  border: 1px solid black;
}
  
pre {
    background: #f4f4f4;
    border: 1px solid #ddd;
    border-left: 3px solid #0000FF;
    color: #666;
    page-break-inside: avoid;
    font-family: monospace;
    font-size: 15px;
    line-height: 1.6;
    margin-bottom: 1.6em;
    max-width: 100%;
    overflow: auto;
    padding: 1em 1.5em;
    display: block;
    word-wrap: break-word;
}
  
</style>
<script type="text/Javascript" src="https://pxl.sprouts.ai/latest/pixelV3.js?id=de4742baf9ae0326740152eb49dea10c" async></script>

<!-- [Attributes by Finsweet] Code Highlight -->
<script async src="https://cdn.jsdelivr.net/npm/@finsweet/attributes-codehighlight@1/codehighlight.js"></script>
<meta name="author" content="">

<!-- Go to www.addthis.com/dashboard to customize your tools -->
<style>
  .rich-text.w-richtext th,
  .rich-text.w-richtext td {
  border: 1px solid black;
    text-align: left;
    padding: 8px;
  }
 
  .rich-text.w-richtext table {
    border-collapse: collapse;
    border: 1px solid black;
  text-align: left;
    padding: 8px;
  }
</style>

<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "Article",
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": "https://cloudsek.com/technical-analysis-of-bumblebee-malware-loader"
  },
  "headline": "Technical Analysis of Bumblebee Malware Loader",
  "image": "",  
  "author": {
    "@type": "Person",
    "name": ""
  },  
  "publisher": {
    "@type": "Organization",
    "name": "CloudSEK",
    "logo": {
      "@type": "ImageObject",
      "url": "https://assets-global.website-files.com/634fc5026f66af518e897c77/634fc9354ba9486197b82cef_CloudSEK%20Logo.svg"
    }
  },
  "datePublished": "Aug 04, 2022",
  "dateModified": "Feb 03, 2024"
}
</script>
</head><body><div data-animation="default" class="uui-navbar01_component w-nav" data-easing2="ease" data-easing="ease" data-collapse="medium" data-w-id="473fcea6-94c1-5972-4949-87198f13f655" role="banner" data-duration="400" id="menu"><div class="uui-navbar01_container"><a href="/" class="uui-navbar01_logo-link w-nav-brand"><div class="uui-logo_component"><img width="180" height="100" alt="CloudSEK Logo" src="https://cdn.prod.website-files.com/634fc5026f66af518e897c77/634fc9354ba9486197b82cef_CloudSEK%20Logo.svg" loading="lazy" class="uui-logo_logotype"/></div></a><nav role="navigation" class="uui-navbar01_menu w-nav-menu"><div class="uui-navbar01_menu-left"><a href="/" class="uui-navbar01_link menu-bar w-nav-link">Home</a><div data-delay="300" data-hover="true" data-w-id="473fcea6-94c1-5972-4949-87198f13f65f" class="uui-navbar07_menu-dropdown w-dropdown"><div class="uui-navbar07_dropdown-toggle w-dropdown-toggle"><div class="uui-dropdown-icon w-embed"><svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M5 7.5L10 12.5L15 7.5" stroke="currentColor" stroke-width="1.67" stroke-linecap="round" stroke-linejoin="round"/>
</svg></div><div class="menu-block">Product</div></div><nav class="uui-navbar07_dropdown-list w-dropdown-list"><div class="uui-navbar07_dropdown-link-list"><a href="/nexus" class="uui-navbar07_dropdown-link w-inline-block"><div class="uui-navbar07_icon-wrapper"><img width="Auto" height="29" alt="" src="https://cdn.prod.website-files.com/634fc5026f66af518e897c77/67bc6fe0cf9db2a1ae51b7a2_paid.png" loading="lazy" class="image-32"/></div><div class="uui-navbar07_item-right"><div class="uui-navbar07_item-heading">Nexus</div><div class="uui-text-size-small-5">AI-Powered Command Center and Cyber Risk Quantification</div></div></a><a href="/xvigil" class="uui-navbar07_dropdown-link w-inline-block"><div class="uui-navbar07_icon-wrapper"><div class="uui-icon-1x1-xsmall-6 w-embed"><svg width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M20 19.5V16.5H7C5.34315 16.5 4 17.8431 4 19.5M8.8 22.5H16.8C17.9201 22.5 18.4802 22.5 18.908 22.282C19.2843 22.0903 19.5903 21.7843 19.782 21.408C20 20.9802 20 20.4201 20 19.3V5.7C20 4.57989 20 4.01984 19.782 3.59202C19.5903 3.21569 19.2843 2.90973 18.908 2.71799C18.4802 2.5 17.9201 2.5 16.8 2.5H8.8C7.11984 2.5 6.27976 2.5 5.63803 2.82698C5.07354 3.1146 4.6146 3.57354 4.32698 4.13803C4 4.77976 4 5.61984 4 7.3V17.7C4 19.3802 4 20.2202 4.32698 20.862C4.6146 21.4265 5.07354 21.8854 5.63803 22.173C6.27976 22.5 7.11984 22.5 8.8 22.5Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg></div></div><div class="uui-navbar07_item-right"><div class="uui-navbar07_item-heading">XVigil</div><div class="uui-text-size-small-5">External Digital Risk Protection</div></div></a><a href="/bevigil-enterprise" class="uui-navbar07_dropdown-link w-inline-block"><div class="uui-navbar07_icon-wrapper"><div class="uui-icon-1x1-xsmall-6 w-embed"><svg width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M9.13626 9.63628L4.92893 5.42896M4.92893 19.5711L9.16797 15.3321M14.8611 15.3638L19.0684 19.5711M19.0684 5.42896L14.8287 9.66862M22 12.5C22 18.0228 17.5228 22.5 12 22.5C6.47715 22.5 2 18.0228 2 12.5C2 6.97715 6.47715 2.5 12 2.5C17.5228 2.5 22 6.97715 22 12.5ZM16 12.5C16 14.7091 14.2091 16.5 12 16.5C9.79086 16.5 8 14.7091 8 12.5C8 10.2909 9.79086 8.5 12 8.5C14.2091 8.5 16 10.2909 16 12.5Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg></div></div><div class="uui-navbar07_item-right"><div class="uui-navbar07_item-heading">BeVigil <span class="highlighted-gradient-hero">Enterprise</span></div><div class="uui-text-size-small-5">Attack Surface Monitoring</div></div></a><a href="/svigil" class="uui-navbar07_dropdown-link w-inline-block"><div class="uui-navbar07_icon-wrapper"><div class="uui-icon-1x1-xsmall-6 w-embed"><svg width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M14 2.76953V6.90007C14 7.46012 14 7.74015 14.109 7.95406C14.2049 8.14222 14.3578 8.2952 14.546 8.39108C14.7599 8.50007 15.0399 8.50007 15.6 8.50007H19.7305M14 18L16.5 15.5L14 13M10 13L7.5 15.5L10 18M20 10.4882V17.7C20 19.3802 20 20.2202 19.673 20.862C19.3854 21.4265 18.9265 21.8854 18.362 22.173C17.7202 22.5 16.8802 22.5 15.2 22.5H8.8C7.11984 22.5 6.27976 22.5 5.63803 22.173C5.07354 21.8854 4.6146 21.4265 4.32698 20.862C4 20.2202 4 19.3802 4 17.7V7.3C4 5.61984 4 4.77976 4.32698 4.13803C4.6146 3.57354 5.07354 3.1146 5.63803 2.82698C6.27976 2.5 7.11984 2.5 8.8 2.5H12.0118C12.7455 2.5 13.1124 2.5 13.4577 2.58289C13.7638 2.65638 14.0564 2.77759 14.3249 2.94208C14.6276 3.1276 14.887 3.38703 15.4059 3.90589L18.5941 7.09411C19.113 7.61297 19.3724 7.8724 19.5579 8.17515C19.7224 8.44356 19.8436 8.7362 19.9171 9.0423C20 9.38757 20 9.75445 20 10.4882Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg></div></div><div class="uui-navbar07_item-right"><div class="uui-navbar07_item-heading">SVigil</div><div class="uui-text-size-small-5">Software and Supply chain Risk Monitoring and Protection</div></div></a><a href="/threat-intelligence" class="uui-navbar07_dropdown-link w-inline-block"><div class="uui-navbar07_icon-wrapper"><img width="Auto" height="29" alt="" src="https://cdn.prod.website-files.com/634fc5026f66af518e897c77/67b729ab68388dccd8835d1d_Vector.png" loading="lazy" class="image-32"/></div><div class="uui-navbar07_item-right"><div class="uui-navbar07_item-heading">Threat Intelligence</div><div class="uui-text-size-small-5">Cyber Threat Intel, IAVs, Threat Actor Directory &amp; More</div></div></a><a href="https://bevigil.com/?Ref=cloudsek.com" class="uui-navbar07_dropdown-link w-inline-block"><div class="uui-navbar07_icon-wrapper"><div class="uui-icon-1x1-xsmall-6 w-embed"><svg width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M9.13626 9.63628L4.92893 5.42896M4.92893 19.5711L9.16797 15.3321M14.8611 15.3638L19.0684 19.5711M19.0684 5.42896L14.8287 9.66862M22 12.5C22 18.0228 17.5228 22.5 12 22.5C6.47715 22.5 2 18.0228 2 12.5C2 6.97715 6.47715 2.5 12 2.5C17.5228 2.5 22 6.97715 22 12.5ZM16 12.5C16 14.7091 14.2091 16.5 12 16.5C9.79086 16.5 8 14.7091 8 12.5C8 10.2909 9.79086 8.5 12 8.5C14.2091 8.5 16 10.2909 16 12.5Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg></div></div><div class="uui-navbar07_item-right"><div class="uui-navbar07_item-heading">BeVigil <span class="highlighted-gradient-hero">Community</span></div><div class="uui-text-size-small-5">Application Scanner</div></div></a><a href="https://exposure.cloudsek.com/?Ref=cloudsek.com" class="uui-navbar07_dropdown-link w-inline-block"><div class="uui-navbar07_icon-wrapper"><div class="uui-icon-1x1-xsmall-6 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M4.5 22V17M4.5 7V2M2 4.5H7M2 19.5H7M13 3L11.2658 7.50886C10.9838 8.24209 10.8428 8.60871 10.6235 8.91709C10.4292 9.1904 10.1904 9.42919 9.91709 9.62353C9.60871 9.8428 9.24209 9.98381 8.50886 10.2658L4 12L8.50886 13.7342C9.24209 14.0162 9.60871 14.1572 9.91709 14.3765C10.1904 14.5708 10.4292 14.8096 10.6235 15.0829C10.8428 15.3913 10.9838 15.7579 11.2658 16.4911L13 21L14.7342 16.4911C15.0162 15.7579 15.1572 15.3913 15.3765 15.0829C15.5708 14.8096 15.8096 14.5708 16.0829 14.3765C16.3913 14.1572 16.7579 14.0162 17.4911 13.7342L22 12L17.4911 10.2658C16.7579 9.98381 16.3913 9.8428 16.0829 9.62353C15.8096 9.42919 15.5708 9.1904 15.3765 8.91709C15.1572 8.60871 15.0162 8.24209 14.7342 7.50886L13 3Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg></div></div><div class="uui-navbar07_item-right"><div class="uui-navbar07_item-heading"><span class="highlighted-gradient-hero">Exposure</span></div><div class="uui-text-size-small-5">Check if your organisation&#x27;s data is in a data breach</div></div></a></div></nav></div><div data-delay="300" data-hover="true" data-w-id="473fcea6-94c1-5972-4949-87198f13f680" class="uui-navbar07_menu-dropdown w-dropdown"><div class="uui-navbar07_dropdown-toggle w-dropdown-toggle"><div class="uui-dropdown-icon w-embed"><svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M5 7.5L10 12.5L15 7.5" stroke="currentColor" stroke-width="1.67" stroke-linecap="round" stroke-linejoin="round"/>
</svg></div><div class="menu-block">Solutions</div></div><nav class="uui-navbar07_dropdown-list w-dropdown-list"><div class="uui-navbar07_dropdown-link-list"><a href="/cyber-threats" class="uui-navbar07_dropdown-link w-inline-block"><div class="uui-navbar07_icon-wrapper"><div class="uui-icon-1x1-xsmall-6 w-embed"><svg class="svg-icon" viewBox="0 0 20 20">
							<path d="M18.092,5.137l-3.977-1.466h-0.006c0.084,0.042-0.123-0.08-0.283,0H13.82L10,5.079L6.178,3.671H6.172c0.076,0.038-0.114-0.076-0.285,0H5.884L1.908,5.137c-0.151,0.062-0.25,0.207-0.25,0.369v10.451c0,0.691,0.879,0.244,0.545,0.369l3.829-1.406l3.821,1.406c0.186,0.062,0.385-0.029,0.294,0l3.822-1.406l3.83,1.406c0.26,0.1,0.543-0.08,0.543-0.369V5.506C18.342,5.344,18.242,5.199,18.092,5.137 M5.633,14.221l-3.181,1.15V5.776l3.181-1.15V14.221z M9.602,15.371l-3.173-1.15V4.626l3.173,1.15V15.371z M13.57,14.221l-3.173,1.15V5.776l3.173-1.15V14.221z M17.547,15.371l-3.182-1.15V4.626l3.182,1.15V15.371z"></path>
						</svg></div></div><div class="uui-navbar07_item-right"><div class="uui-navbar07_item-heading">Cyber Threats Monitoring</div></div></a><a href="/cyber-threats/dark-web-monitoring" class="uui-navbar07_dropdown-link w-inline-block"><div class="uui-navbar07_icon-wrapper"><div class="uui-icon-1x1-xsmall-6 w-embed"><svg class="svg-icon" viewBox="0 0 20 20">
							<path d="M17.728,4.419H2.273c-0.236,0-0.429,0.193-0.429,0.429v10.304c0,0.234,0.193,0.428,0.429,0.428h15.455c0.235,0,0.429-0.193,0.429-0.428V4.849C18.156,4.613,17.963,4.419,17.728,4.419 M17.298,14.721H2.702V9.57h14.596V14.721zM17.298,8.712H2.702V7.424h14.596V8.712z M17.298,6.566H2.702V5.278h14.596V6.566z M9.142,13.005c0,0.235-0.193,0.43-0.43,0.43H4.419c-0.236,0-0.429-0.194-0.429-0.43c0-0.236,0.193-0.429,0.429-0.429h4.292C8.948,12.576,9.142,12.769,9.142,13.005"></path>
						</svg></div></div><div class="uui-navbar07_item-right"><div class="uui-navbar07_item-heading">Dark web monitoring</div></div></a><a href="/brand-monitor" class="uui-navbar07_dropdown-link w-inline-block"><div class="uui-navbar07_icon-wrapper"><div class="uui-icon-1x1-xsmall-6 w-embed"><svg class="svg-icon" viewBox="0 0 20 20">
							<path d="M15.396,2.292H4.604c-0.212,0-0.385,0.174-0.385,0.386v14.646c0,0.212,0.173,0.385,0.385,0.385h10.792c0.211,0,0.385-0.173,0.385-0.385V2.677C15.781,2.465,15.607,2.292,15.396,2.292 M15.01,16.938H4.99v-2.698h1.609c0.156,0.449,0.586,0.771,1.089,0.771c0.638,0,1.156-0.519,1.156-1.156s-0.519-1.156-1.156-1.156c-0.503,0-0.933,0.321-1.089,0.771H4.99v-3.083h1.609c0.156,0.449,0.586,0.771,1.089,0.771c0.638,0,1.156-0.518,1.156-1.156c0-0.638-0.519-1.156-1.156-1.156c-0.503,0-0.933,0.322-1.089,0.771H4.99V6.531h1.609C6.755,6.98,7.185,7.302,7.688,7.302c0.638,0,1.156-0.519,1.156-1.156c0-0.638-0.519-1.156-1.156-1.156c-0.503,0-0.933,0.322-1.089,0.771H4.99V3.062h10.02V16.938z M7.302,13.854c0-0.212,0.173-0.386,0.385-0.386s0.385,0.174,0.385,0.386s-0.173,0.385-0.385,0.385S7.302,14.066,7.302,13.854 M7.302,10c0-0.212,0.173-0.385,0.385-0.385S8.073,9.788,8.073,10s-0.173,0.385-0.385,0.385S7.302,10.212,7.302,10 M7.302,6.146c0-0.212,0.173-0.386,0.385-0.386s0.385,0.174,0.385,0.386S7.899,6.531,7.688,6.531S7.302,6.358,7.302,6.146"></path>
						</svg></div></div><div class="uui-navbar07_item-right"><div class="uui-navbar07_item-heading">Brand Threats Monitoring</div></div></a><a href="https://www.cloudsek.com/bevigil-enterprise" target="_blank" class="uui-navbar07_dropdown-link w-inline-block"><div class="uui-navbar07_icon-wrapper"><div class="uui-icon-1x1-xsmall-6 w-embed"><svg class="svg-icon" viewBox="0 0 20 20">
							<path d="M17.927,5.828h-4.41l-1.929-1.961c-0.078-0.079-0.186-0.125-0.297-0.125H4.159c-0.229,0-0.417,0.188-0.417,0.417v1.669H2.073c-0.229,0-0.417,0.188-0.417,0.417v9.596c0,0.229,0.188,0.417,0.417,0.417h15.854c0.229,0,0.417-0.188,0.417-0.417V6.245C18.344,6.016,18.156,5.828,17.927,5.828 M4.577,4.577h6.539l1.231,1.251h-7.77V4.577z M17.51,15.424H2.491V6.663H17.51V15.424z"></path>
						</svg></div></div><div class="uui-navbar07_item-right"><div class="uui-navbar07_item-heading">Infrastructure Monitoring</div></div></a><a href="https://bevigil.com/bevigil-secrets-scanning-partner-program" class="uui-navbar07_dropdown-link w-inline-block"><div class="uui-navbar07_icon-wrapper"><img src="https://cdn.prod.website-files.com/634fc5026f66af518e897c77/65a39b7b6841a21a6f3e7586_search.png" loading="lazy" width="20" alt=""/></div><div class="uui-navbar07_item-right"><div class="uui-navbar07_item-heading">Partner Secret Scanning</div></div></a><a href="https://plugins.jenkins.io/bevigil-ci/" class="uui-navbar07_dropdown-link w-inline-block"><div class="uui-navbar07_icon-wrapper"><img src="https://cdn.prod.website-files.com/634fc5026f66af518e897c77/65a39bd2f0fb75ff65472e13_global-network.webp" loading="lazy" width="20" alt=""/></div><div class="uui-navbar07_item-right"><div class="uui-navbar07_item-heading">BeVigil Jenkins CI</div></div></a><a href="https://github.com/Bevigil/BeVigil-OSINT-CLI" class="uui-navbar07_dropdown-link w-inline-block"><div class="uui-navbar07_icon-wrapper"><img src="https://cdn.prod.website-files.com/634fc5026f66af518e897c77/65a39c33d2f17e8fa68f75e7_configuration.webp" loading="lazy" width="20" alt=""/></div><div class="uui-navbar07_item-right"><div class="uui-navbar07_item-heading">BeVigil OSINTÂ CLI</div></div></a><a href="https://bevigil.com/osint-api" class="uui-navbar07_dropdown-link w-inline-block"><div class="uui-navbar07_icon-wrapper"><img src="https://cdn.prod.website-files.com/634fc5026f66af518e897c77/65a39c6759c55f9a7f741e12_link.webp" loading="lazy" width="20" alt=""/></div><div class="uui-navbar07_item-right"><div class="uui-navbar07_item-heading">BeVigil Asset Explorer</div></div></a></div></nav></div><div data-delay="300" data-hover="true" data-w-id="473fcea6-94c1-5972-4949-87198f13f69f" class="uui-navbar01_menu-dropdown w-dropdown"><div class="uui-navbar01_dropdown-toggle w-dropdown-toggle"><div class="uui-dropdown-icon w-embed"><svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M5 7.5L10 12.5L15 7.5" stroke="currentColor" stroke-width="1.67" stroke-linecap="round" stroke-linejoin="round"/>
</svg></div><div class="menu-block">Resources</div></div><nav class="uui-navbar01_dropdown-list w-dropdown-list"><div class="uui-navbar01_container"><div class="uui-navbar01_dropdown-content"><div class="uui-navbar01_dropdown-content-left"><div class="uui-navbar01_dropdown-link-list"><h4 class="uui-navbar01_heading">Resources</h4><a href="/blog" class="uui-navbar01_dropdown-link w-inline-block"><div class="uui-navbar01_icon-wrapper"><div class="uui-icon-1x1-xsmall-4 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M20 19V16H7C5.34315 16 4 17.3431 4 19M8.8 22H16.8C17.9201 22 18.4802 22 18.908 21.782C19.2843 21.5903 19.5903 21.2843 19.782 20.908C20 20.4802 20 19.9201 20 18.8V5.2C20 4.07989 20 3.51984 19.782 3.09202C19.5903 2.71569 19.2843 2.40973 18.908 2.21799C18.4802 2 17.9201 2 16.8 2H8.8C7.11984 2 6.27976 2 5.63803 2.32698C5.07354 2.6146 4.6146 3.07354 4.32698 3.63803C4 4.27976 4 5.11984 4 6.8V17.2C4 18.8802 4 19.7202 4.32698 20.362C4.6146 20.9265 5.07354 21.3854 5.63803 21.673C6.27976 22 7.11984 22 8.8 22Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg></div></div><div class="uui-navbar01_item-right"><div class="uui-navbar01_item-heading">Blog</div><div class="uui-text-size-small hide-mobile-landscape">The latest industry news, updates and info.</div></div></a><a href="/threatintelligence" class="uui-navbar01_dropdown-link w-inline-block"><div class="uui-navbar01_icon-wrapper"><div class="uui-icon-1x1-xsmall-4 text-color-primary600 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M9.5 8.96533C9.5 8.48805 9.5 8.24941 9.59974 8.11618C9.68666 8.00007 9.81971 7.92744 9.96438 7.9171C10.1304 7.90525 10.3311 8.03429 10.7326 8.29239L15.4532 11.3271C15.8016 11.551 15.9758 11.663 16.0359 11.8054C16.0885 11.9298 16.0885 12.0702 16.0359 12.1946C15.9758 12.337 15.8016 12.449 15.4532 12.6729L10.7326 15.7076C10.3311 15.9657 10.1304 16.0948 9.96438 16.0829C9.81971 16.0726 9.68666 15.9999 9.59974 15.8838C9.5 15.7506 9.5 15.512 9.5 15.0347V8.96533Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg></div></div><div class="uui-navbar01_item-right"><div class="uui-navbar01_item-heading">Threat Intelligence</div><div class="uui-text-size-small hide-mobile-landscape">Get up and running on new threat reports and techniques.</div></div></a><a href="/knowledgebase" class="uui-navbar01_dropdown-link w-inline-block"><div class="uui-navbar01_icon-wrapper"><div class="uui-icon-1x1-xsmall-4 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M20 19V16H7C5.34315 16 4 17.3431 4 19M8.8 22H16.8C17.9201 22 18.4802 22 18.908 21.782C19.2843 21.5903 19.5903 21.2843 19.782 20.908C20 20.4802 20 19.9201 20 18.8V5.2C20 4.07989 20 3.51984 19.782 3.09202C19.5903 2.71569 19.2843 2.40973 18.908 2.21799C18.4802 2 17.9201 2 16.8 2H8.8C7.11984 2 6.27976 2 5.63803 2.32698C5.07354 2.6146 4.6146 3.07354 4.32698 3.63803C4 4.27976 4 5.11984 4 6.8V17.2C4 18.8802 4 19.7202 4.32698 20.362C4.6146 20.9265 5.07354 21.3854 5.63803 21.673C6.27976 22 7.11984 22 8.8 22Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg></div></div><div class="uui-navbar01_item-right"><div class="uui-navbar01_item-heading">Knowledge Base</div><div class="uui-text-size-small hide-mobile-landscape">Basics of Cybersecurity and see more definitions</div></div></a><a href="/whitepapers-reports" class="uui-navbar01_dropdown-link w-inline-block"><div class="uui-navbar01_icon-wrapper"><div class="uui-icon-1x1-xsmall-4 text-color-primary600 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M14 2.26953V6.40007C14 6.96012 14 7.24015 14.109 7.45406C14.2049 7.64222 14.3578 7.7952 14.546 7.89108C14.7599 8.00007 15.0399 8.00007 15.6 8.00007H19.7305M14 17.5L16.5 15L14 12.5M10 12.5L7.5 15L10 17.5M20 9.98822V17.2C20 18.8802 20 19.7202 19.673 20.362C19.3854 20.9265 18.9265 21.3854 18.362 21.673C17.7202 22 16.8802 22 15.2 22H8.8C7.11984 22 6.27976 22 5.63803 21.673C5.07354 21.3854 4.6146 20.9265 4.32698 20.362C4 19.7202 4 18.8802 4 17.2V6.8C4 5.11984 4 4.27976 4.32698 3.63803C4.6146 3.07354 5.07354 2.6146 5.63803 2.32698C6.27976 2 7.11984 2 8.8 2H12.0118C12.7455 2 13.1124 2 13.4577 2.08289C13.7638 2.15638 14.0564 2.27759 14.3249 2.44208C14.6276 2.6276 14.887 2.88703 15.4059 3.40589L18.5941 6.59411C19.113 7.11297 19.3724 7.3724 19.5579 7.67515C19.7224 7.94356 19.8436 8.2362 19.9171 8.5423C20 8.88757 20 9.25445 20 9.98822Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg></div></div><div class="uui-navbar01_item-right"><div class="uui-navbar01_item-heading">Whitepapers &amp;Â Reports</div><div class="uui-text-size-small hide-mobile-landscape">The content team broke their backs making these reports.</div></div></a><a href="/customers" class="uui-navbar01_dropdown-link w-inline-block"><div class="uui-navbar01_icon-wrapper"><div class="uui-icon-1x1-xsmall-4 text-color-primary600 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M4.5 22V17M4.5 7V2M2 4.5H7M2 19.5H7M13 3L11.2658 7.50886C10.9838 8.24209 10.8428 8.60871 10.6235 8.91709C10.4292 9.1904 10.1904 9.42919 9.91709 9.62353C9.60871 9.8428 9.24209 9.98381 8.50886 10.2658L4 12L8.50886 13.7342C9.24209 14.0162 9.60871 14.1572 9.91709 14.3765C10.1904 14.5708 10.4292 14.8096 10.6235 15.0829C10.8428 15.3913 10.9838 15.7579 11.2658 16.4911L13 21L14.7342 16.4911C15.0162 15.7579 15.1572 15.3913 15.3765 15.0829C15.5708 14.8096 15.8096 14.5708 16.0829 14.3765C16.3913 14.1572 16.7579 14.0162 17.4911 13.7342L22 12L17.4911 10.2658C16.7579 9.98381 16.3913 9.8428 16.0829 9.62353C15.8096 9.42919 15.5708 9.1904 15.3765 8.91709C15.1572 8.60871 15.0162 8.24209 14.7342 7.50886L13 3Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg></div></div><div class="uui-navbar01_item-right"><div class="uui-navbar01_item-heading">Customer stories</div><div class="uui-text-size-small hide-mobile-landscape">Learn how our customers are making big changes. You have got good company!</div></div></a></div><div class="uui-navbar01_dropdown-link-list"><h4 class="uui-navbar01_heading">Company</h4><a href="/integrations" class="uui-navbar01_dropdown-link w-inline-block"><div class="uui-navbar01_icon-wrapper"><div class="uui-icon-1x1-xsmall-4 text-color-primary600 w-embed"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="#134ca7" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round"><path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline></svg></div></div><div class="uui-navbar01_item-right"><div class="uui-navbar01_item-heading">Integrations</div><div class="uui-text-size-small hide-mobile-landscape">We are more connected than you know. Explore all Integrations</div></div></a><a href="/partners" class="uui-navbar01_dropdown-link w-inline-block"><div class="uui-navbar01_icon-wrapper"><div class="uui-icon-1x1-xsmall-4 text-color-primary600 w-embed"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="#134ca7" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round"><path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="9" cy="7" r="4"></circle><path d="M23 21v-2a4 4 0 0 0-3-3.87"></path><path d="M16 3.13a4 4 0 0 1 0 7.75"></path></svg></div></div><div class="uui-navbar01_item-right"><div class="uui-navbar01_item-heading">Partners</div><div class="uui-text-size-small hide-mobile-landscape">100s of partners and one Shared goal; Secure future for all us.</div></div></a><a href="/about-us" class="uui-navbar01_dropdown-link w-inline-block"><div class="uui-navbar01_icon-wrapper"><div class="uui-icon-1x1-xsmall-4 text-color-primary600 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M4 21L4 4M4 13H11.4C11.9601 13 12.2401 13 12.454 12.891C12.6422 12.7951 12.7951 12.6422 12.891 12.454C13 12.2401 13 11.9601 13 11.4V4.6C13 4.03995 13 3.75992 12.891 3.54601C12.7951 3.35785 12.6422 3.20487 12.454 3.10899C12.2401 3 11.9601 3 11.4 3H5.6C5.03995 3 4.75992 3 4.54601 3.10899C4.35785 3.20487 4.20487 3.35785 4.10899 3.54601C4 3.75992 4 4.03995 4 4.6V13ZM13 5H19.4C19.9601 5 20.2401 5 20.454 5.10899C20.6422 5.20487 20.7951 5.35785 20.891 5.54601C21 5.75992 21 6.03995 21 6.6V13.4C21 13.9601 21 14.2401 20.891 14.454C20.7951 14.6422 20.6422 14.7951 20.454 14.891C20.2401 15 19.9601 15 19.4 15H14.6C14.0399 15 13.7599 15 13.546 14.891C13.3578 14.7951 13.2049 14.6422 13.109 14.454C13 14.2401 13 13.9601 13 13.4V5Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg></div></div><div class="uui-navbar01_item-right"><div class="uui-navbar01_item-heading">About us</div><div class="uui-text-size-small hide-mobile-landscape">Learn about our story and our mission statement.</div></div></a><a href="/work-life" class="uui-navbar01_dropdown-link w-inline-block"><div class="uui-navbar01_icon-wrapper"><div class="uui-icon-1x1-xsmall-4 text-color-primary600 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M20.9996 11.5C20.9996 16.1944 17.194 20 12.4996 20C11.4228 20 10.3928 19.7998 9.44478 19.4345C9.27145 19.3678 9.18478 19.3344 9.11586 19.3185C9.04807 19.3029 8.999 19.2963 8.92949 19.2937C8.85881 19.291 8.78127 19.299 8.62619 19.315L3.50517 19.8444C3.01692 19.8948 2.7728 19.9201 2.6288 19.8322C2.50337 19.7557 2.41794 19.6279 2.3952 19.4828C2.36909 19.3161 2.48575 19.1002 2.71906 18.6684L4.35472 15.6408C4.48942 15.3915 4.55677 15.2668 4.58728 15.1469C4.6174 15.0286 4.62469 14.9432 4.61505 14.8214C4.60529 14.6981 4.55119 14.5376 4.443 14.2166C4.15547 13.3636 3.99962 12.45 3.99962 11.5C3.99962 6.80558 7.8052 3 12.4996 3C17.194 3 20.9996 6.80558 20.9996 11.5Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg></div></div><div class="uui-navbar01_item-right"><div class="uui-navbar01_item-heading">Life at CloudSEK</div><div class="uui-text-size-small hide-mobile-landscape">A sneak peek at the awesome life at CloudSEK.</div></div></a><a href="/openings" class="uui-navbar01_dropdown-link w-inline-block"><div class="uui-navbar01_icon-wrapper"><div class="uui-icon-1x1-xsmall-4 text-color-primary600 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M22 21V19C22 17.1362 20.7252 15.5701 19 15.126M15.5 3.29076C16.9659 3.88415 18 5.32131 18 7C18 8.67869 16.9659 10.1159 15.5 10.7092M17 21C17 19.1362 17 18.2044 16.6955 17.4693C16.2895 16.4892 15.5108 15.7105 14.5307 15.3045C13.7956 15 12.8638 15 11 15H8C6.13623 15 5.20435 15 4.46927 15.3045C3.48915 15.7105 2.71046 16.4892 2.30448 17.4693C2 18.2044 2 19.1362 2 21M13.5 7C13.5 9.20914 11.7091 11 9.5 11C7.29086 11 5.5 9.20914 5.5 7C5.5 4.79086 7.29086 3 9.5 3C11.7091 3 13.5 4.79086 13.5 7Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg></div></div><div class="uui-navbar01_item-right"><div class="uui-navbar01_text-wrapper"><div class="uui-navbar01_item-heading margin-bottom-0">Careers</div><div class="uui-badge-small-success"><div>We&#x27;re hiring!</div></div></div><div class="uui-text-size-small hide-mobile-landscape">We are in love with undeniable talent. Join our team!</div></div></a><a href="/privacy" class="uui-navbar01_dropdown-link w-inline-block"><div class="uui-navbar01_icon-wrapper"><div class="uui-icon-1x1-xsmall-4 text-color-primary600 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M13 7L11.8845 4.76892C11.5634 4.1268 11.4029 3.80573 11.1634 3.57116C10.9516 3.36373 10.6963 3.20597 10.4161 3.10931C10.0992 3 9.74021 3 9.02229 3H5.2C4.0799 3 3.51984 3 3.09202 3.21799C2.71569 3.40973 2.40973 3.71569 2.21799 4.09202C2 4.51984 2 5.0799 2 6.2V7M2 7H17.2C18.8802 7 19.7202 7 20.362 7.32698C20.9265 7.6146 21.3854 8.07354 21.673 8.63803C22 9.27976 22 10.1198 22 11.8V16.2C22 17.8802 22 18.7202 21.673 19.362C21.3854 19.9265 20.9265 20.3854 20.362 20.673C19.7202 21 18.8802 21 17.2 21H6.8C5.11984 21 4.27976 21 3.63803 20.673C3.07354 20.3854 2.6146 19.9265 2.32698 19.362C2 18.7202 2 17.8802 2 16.2V7Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg></div></div><div class="uui-navbar01_item-right"><div class="uui-navbar01_item-heading">Legal</div><div class="uui-text-size-small hide-mobile-landscape">All the boring but necessary legalese that legal made us add.</div></div></a></div></div><div class="uui-navbar01_dropdown-content-right"><div class="uui-navbar01_dropdown-content-wrapper"><h4 class="uui-navbar01_dropdown-content-heading">Resources</h4><h4 class="uui-navbar01_dropdown-content-heading">Blog Posts</h4><div class="w-dyn-list"><div role="list" class="w-dyn-items"><div role="listitem" class="w-dyn-item"><div class="uui-navbar01_blog-item"><img id="w-node-_473fcea6-94c1-5972-4949-87198f13f71c-8f13f655" alt="How SVigil Prevented a Massive Supply Chain Breach in Banking Infrastructure?" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/67e53d3faea4b4cb73986b06_banking%20attack.jpeg" loading="lazy" sizes="100vw" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/67e53d3faea4b4cb73986b06_banking%20attack-p-500.jpeg 500w, https://cdn.prod.website-files.com/635e632477408d12d1811a64/67e53d3faea4b4cb73986b06_banking%20attack-p-800.jpeg 800w, https://cdn.prod.website-files.com/635e632477408d12d1811a64/67e53d3faea4b4cb73986b06_banking%20attack.jpeg 1024w"/><div id="w-node-_473fcea6-94c1-5972-4949-87198f13f71d-8f13f655" class="uui-navbar01_large-item-content"><a href="/blog/how-svigil-prevented-a-massive-supply-chain-breach-in-banking-infrastructure" class="w-inline-block"><div class="uui-navbar01_item-heading">How SVigil Prevented a Massive Supply Chain Breach in Banking Infrastructure?</div></a><div class="uui-button-row"><a href="/blog/how-svigil-prevented-a-massive-supply-chain-breach-in-banking-infrastructure" target="_blank" class="uui-breadcrumb-link link">Read Now</a></div></div><div id="w-node-_473fcea6-94c1-5972-4949-87198f13f723-8f13f655" class="uui-navbar01_dropdown-content-button-wrapper"><a id="w-node-_473fcea6-94c1-5972-4949-87198f13f724-8f13f655" data-w-id="473fcea6-94c1-5972-4949-87198f13f724" href="/blog" class="uui-button-link-4 is-button-xsmall w-inline-block"><div>All Blog Posts</div><div class="uui-button-icon-4 w-embed"><svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M4.16699 9.99996H15.8337M15.8337 9.99996L10.0003 4.16663M15.8337 9.99996L10.0003 15.8333" stroke="currentColor" stroke-width="1.66667" stroke-linecap="round" stroke-linejoin="round"/>
</svg></div></a></div></div></div></div></div><h4 class="uui-navbar01_dropdown-content-heading">Whitepapers &amp;Â Reports</h4><div id="w-node-_473fcea6-94c1-5972-4949-87198f13f72b-8f13f655"><div class="w-dyn-list"><div role="list" class="w-dyn-items"><div role="listitem" class="w-dyn-item"><div class="uui-navbar01_blog-item"><img id="w-node-_473fcea6-94c1-5972-4949-87198f13f730-8f13f655" alt="India To Lose â¹20,000 Crore To Cybercrime in 2025" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/67c13f4f26f79d62cae6b2ef_Report%20card%20design%20Crime%20outline%20for%20India%20revised%20again-output.jpg" loading="lazy" sizes="100vw" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/67c13f4f26f79d62cae6b2ef_Report%20card%20design%20Crime%20outline%20for%20India%20revised%20again-output-p-500.jpg 500w, https://cdn.prod.website-files.com/635e632477408d12d1811a64/67c13f4f26f79d62cae6b2ef_Report%20card%20design%20Crime%20outline%20for%20India%20revised%20again-output-p-800.jpg 800w, https://cdn.prod.website-files.com/635e632477408d12d1811a64/67c13f4f26f79d62cae6b2ef_Report%20card%20design%20Crime%20outline%20for%20India%20revised%20again-output-p-1080.jpg 1080w, https://cdn.prod.website-files.com/635e632477408d12d1811a64/67c13f4f26f79d62cae6b2ef_Report%20card%20design%20Crime%20outline%20for%20India%20revised%20again-output.jpg 1240w"/><div id="w-node-_473fcea6-94c1-5972-4949-87198f13f731-8f13f655" class="uui-navbar01_large-item-content"><a href="/whitepapers-reports/india-to-lose-20-000-crore-to-cybercrime-in-2025" class="w-inline-block"><div class="uui-navbar01_item-heading">India To Lose â¹20,000 Crore To Cybercrime in 2025</div></a><div class="uui-button-row"><a href="/whitepapers-reports/india-to-lose-20-000-crore-to-cybercrime-in-2025" target="_blank" class="uui-breadcrumb-link">Read the Report now!</a></div></div></div></div></div></div></div><div id="w-node-_473fcea6-94c1-5972-4949-87198f13f739-8f13f655" class="uui-navbar01_dropdown-content-button-wrapper"><a id="w-node-_473fcea6-94c1-5972-4949-87198f13f73a-8f13f655" data-w-id="473fcea6-94c1-5972-4949-87198f13f73a" href="/whitepapers-reports" class="uui-button-link-4 is-button-xsmall w-inline-block"><div>All Reports</div><div class="uui-button-icon-4 w-embed"><svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M4.16699 9.99996H15.8337M15.8337 9.99996L10.0003 4.16663M15.8337 9.99996L10.0003 15.8333" stroke="currentColor" stroke-width="1.66667" stroke-linecap="round" stroke-linejoin="round"/>
</svg></div></a></div></div><div class="uui-navbar01_dropdown-right-overlay-absolute"></div></div></div></div></nav></div></div></nav><div class="uui-navbar01_menu-right"><div class="uui-navbar01_button-wrapper"><a href="#" class="uui-button-tertiary-gray hide-tablet w-inline-block"><div>Log in</div></a><a href="/request-a-demo" class="uui-button w-inline-block"><div>Schedule a Demo</div></a></div></div><div class="uui-navbar01_menu-button w-nav-button"><div class="menu-icon_component"><div class="menu-icon_line-top-2"></div><div class="menu-icon_line-middle-2"><div class="menu-icon_line-middle-inner-2"></div></div><div class="menu-icon_line-bottom-2"></div></div></div></div></div><div class="page-wrapper"><div class="header"></div><div class="blog-post-hero"><div class="innerwrap-blog-post-hero"><div class="blog-template-hero-col-1"><div class="meta-tags"><div class="category-tag-wrap cat"><div class="w-dyn-list"><div role="list" class="w-dyn-items"><div role="listitem" class="w-dyn-item"><a href="/category/malware-intelligence" class="w-inline-block"><div class="read-time-text">Malware Intelligence</div></a></div></div></div></div><div class="time-to-read-wrap"><div class="dot-2 white"></div><div class="read-time-text w-dyn-bind-empty"></div><div class="read-time-text">mins read</div></div></div><h1 class="title-blog-template">Technical Analysis of Bumblebee Malware Loader</h1><p class="paragraph-8">Technical Analysis of Bumblebee Malware Loader</p><a href="#" class="w-inline-block"><div class="author-container"><div class="author-image-wrap"><img alt="" loading="lazy" src="" class="author-image-48px w-dyn-bind-empty"/></div><div class="author-details-wrap"><div class="author-name white w-dyn-bind-empty"></div><div class="author-position grey">August 4, 2022</div></div></div></a></div><div style="background-image:url(&quot;https://cdn.prod.website-files.com/635e632477408d12d1811a64/64062bd32c1bbdcb6c3db8d4_bumblee-malware-analysis.jpeg&quot;)" class="blog-template-hero-col-2"></div></div><div class="div-block-330"><div class="copy-me-blog_layout-wrapper"><div id="w-node-_2500ed58-22ac-60cf-f5a8-7efa71b3e3b9-d7e506fa" class="blog_toc-relative-wrapper infobox"><div class="div-block-332"><div class="alert-regular"><div class="alert-success"><img src="https://cdn.prod.website-files.com/61ef7f445c03bc7854721ad8/61ef7f445c03bc0c4b721cb0_Success.svg" loading="lazy" alt="Green Alert" class="alert-icon"/></div><div class="alert-content"><div class="paragraph-regular text-weight-medium">Last Update posted on</div><div class="paragraph-small-9 text-color-gray-500">February 3, 2024</div></div></div><div id="w-node-_764043bb-ed36-08d9-b543-b1e8048d15dd-d7e506fa" class="cta-feature blog"><div class="wrap-v-small-4"><div class="paragraph-large-bg text-weight-bold">Proactive Monitoring of the Dark Web for your organization</div><p class="cta-2---box text-color-gray-600 cta">Proactively monitor and defend against malware with CloudSEK XVigil Malware Logs module, ensuring the integrity of your digital assets</p><a href="/request-a-demo" class="button-primary-square w-button">Schedule a Demo</a></div></div><div id="w-node-_2500ed58-22ac-60cf-f5a8-7efa71b3e3ba-d7e506fa" class="blog_toc-wrapper"><div class="margin-bottom-34 margin-small"><div class="margin-bottom-34 margin-small"><div class="heading-style-h6">Table of Contents</div></div><div class="divider-3"></div></div><div id="toc-wrapper" class="blog_toc-list"><div class="custom-code-toc_script w-embed w-script"><div>
    <script src="https://tools.virtual-entity.de/toc-generator/v1.0.1.js"></script>
    <script>
        contentID = "content"; // ID of content wrapper
        tocID = "toc-wrapper"; // ID to TOC element, if empty use parent div
        headingLevels = ["h2", "h3"]; // Define the different levels
        offset_size = "6rem"; // Define the offset of the scroll-anchor
    </script>
</div></div><ul role="list" class="toc_uolist hide"><li class="toc_item"><a href="#" class="toc_link-2 toc_is-active">Text Link</a></li><li><a href="#" class="toc_link-2">Text Link</a></li><li></li></ul></div></div><div><div class="blog_toc-wrapper infobox"><div class="margin-bottom-34 margin-small w-condition-invisible"><div class="margin-bottom-34 margin-small"><div class="heading-style-h6">Author(s)</div></div><div class="divider-3"></div><div><div class="w-dyn-list"><div class="w-dyn-empty"><div>No items found.</div></div></div></div></div></div></div></div></div><div id="content" class="blog_content-wrapper w-node-_2500ed58-22ac-60cf-f5a8-7efa71b3e3cc-d7e506fa"><div class="blog_rich-text-2 w-richtext"><h1></h1>
<p>Malware loaders are essentially remote access trojans (RATs) that establish communication between the attacker and the compromised system. Loaders typically represent the first stage of a compromise. Their primary goal is to download and execute additional payloads, from the attacker-controlled server, on the compromised system without detection.</p>
<p>Researchers at ProofPoint have discovered a new malware loader called Bumblebee. The malware loader is named after a unique user agent string used for C2 communication. It has been observed that adversaries have started using Bumblebee to deploy malware such as CobaltStrike beacons and Meterpreter shells. Threat group TA578 has also been using Bumblebee the loader in their campaigns.</p>
<p>This article explores and decodes Bumblebee malware loaderâs:</p>
<ul>
<li>Technical features</li>
<li>Logic flow</li>
<li>Exploitation process</li>
<li>Network maintenance</li>
<li>Unique features</li>
</ul>
<h2><a id="post-20158-_8z79ttd1rn5b"></a>Campaign Delivery</h2>
<p>Adversaries push ISO files through compromised email (reply) chains, known as thread hijacked emails, to deploy the Bumblebee loader. ISO files contain a byte-to-byte copy of low-level data stored on a disk. The malicious ISO files are delivered through Google Cloud links or password protected zip folders.</p>
<figure id="attachment_20159" aria-describedby="caption-attachment-20159" style="width: 671px" class="wp-caption aligncenter"><img decoding="async" loading="lazy" class="wp-image-20159" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5694e8a25d90_word-image-20158-1.png" alt="ISO file retrieved from Google Cloud (âstorage.googleapis.comâ)" width="671" height="143" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5694e8a25d90_word-image-20158-1.png 671w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-1-300x64.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-1-150x32.png 150w" sizes="(max-width: 671px) 100vw, 671px"><figcaption id="caption-attachment-20159" class="wp-caption-text">ISO file retrieved from Google Cloud (âstorage.googleapis.comâ)</figcaption></figure>
<p>&nbsp;</p>
<figure id="attachment_20160" aria-describedby="caption-attachment-20160" style="width: 631px" class="wp-caption aligncenter"><img decoding="async" loading="lazy" class="wp-image-20160" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56bd8aa25d8a_word-image-20158-2.png" alt="ISO file retrieved from password protected zip files" width="631" height="98" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56bd8aa25d8a_word-image-20158-2.png 631w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-2-300x47.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-2-150x23.png 150w" sizes="(max-width: 631px) 100vw, 631px"><figcaption id="caption-attachment-20160" class="wp-caption-text">ISO file retrieved from password protected zip files</figcaption></figure>
<p>&nbsp;</p>
<p>The ISO files contain a hidden DLL with random names and an LNK file. DLL (Dynamic Link Library) is a library that contains codes and data which can be used by more than one program at a time. LNK is a filename extension in Microsoft Windows for shortcuts to local files.</p>
<p>The LNK file often contains a direct link to an executable file or metadata about the executable file, without the need to trace the programâs full path. LNK files are an attractive alternative to opening a file, and thus an effective way for threat actors to create script-based attacks. The target location for the LNK files is set to run <em>rundll32.exe</em>, which will call an exported function in the associated DLL. If the âshow hidden itemsâ option is not enabled on the victimâs system, DLLs may not be visible to the user.</p>
<h2><a id="post-20158-_5dkgwy3l178b"></a>Bumblebee Loader Analysis</h2>
<p>The analyzed sample <code>(f98898df74fb2b2fad3a2ea2907086397b36ae496ef3f4454bf6b7125fc103b8)</code> is a DLL file with exported functions.</p>
<p><img decoding="async" loading="lazy" width="638" height="99" class="wp-image-20161" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c561c68a25da0_word-image-20158-3.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c561c68a25da0_word-image-20158-3.png 638w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-3-300x47.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-3-150x23.png 150w" sizes="(max-width: 638px) 100vw, 638px"></p>
<p><em>Exported functions in the sample DLL file</em></p>
<p>Both the exported functions, <em>IternalJob</em> and <em>SetPath</em>, execute the function <em>sub_180004AA0</em>.</p>
<p><img decoding="async" loading="lazy" width="287" height="100" class="wp-image-20162" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56f9c7a25d8d_word-image-20158-4.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56f9c7a25d8d_word-image-20158-4.png 287w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-4-150x52.png 150w" sizes="(max-width: 287px) 100vw, 287px"> <img decoding="async" loading="lazy" width="305" height="77" class="wp-image-20163" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0faa236935f2b9ebbba_word-image-20158-5.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0faa236935f2b9ebbba_word-image-20158-5.png 305w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-5-300x76.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-5-150x38.png 150w" sizes="(max-width: 305px) 100vw, 305px"></p>
<p><em> InternalJob executing the function sub_180004AA0 SetPath executing the function sub_180004AA0</em></p>
<h3><a id="post-20158-_2xhud5yxzwsd"></a>Entropy of the DLL</h3>
<p>The entropy of a file measures the randomness of the data in the file. Entropy can be used to determine whether there is hidden data or suspicious scripts in the file. The scale of entropy is from 0 (not random) to 8 (totally random). High entropy values indicate that there is encrypted data stored in the file, while lower values indicate the decryption and storage of payload in different sections during runtime.</p>
<figure id="attachment_20164" aria-describedby="caption-attachment-20164" style="width: 1591px" class="wp-caption alignnone"><img decoding="async" loading="lazy" class="wp-image-20164" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0faa236934d3c9ebb8d_word-image-20158-6.jpeg" alt="Entropy of the Malware Sample" width="1591" height="536" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0faa236934d3c9ebb8d_word-image-20158-6.jpeg 1591w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-6-300x101.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-6-1024x345.jpeg 1024w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-6-768x259.jpeg 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-6-1536x517.jpeg 1536w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-6-150x51.jpeg 150w" sizes="(max-width: 1591px) 100vw, 1591px"><figcaption id="caption-attachment-20164" class="wp-caption-text">Entropy of the Malware Sample</figcaption></figure>
<p>&nbsp;</p>
<p>The peak is spread across the data segments of the DLL file. It is highly possible that this peak was caused by the presence of packed data in the data segments of the sample DLL. This indicates that the malware, at some point in runtime, will fetch the data from the data segment and unpack it for later use.</p>
<h3><a id="post-20158-_warrsmfjw6sw"></a>Unpacking and Deploying Payload (Function sub_180004AA0)</h3>
<p>The exported function <em>sub_180004AA0</em> is a critical component in unpacking and deploying the main payload on the target system.</p>
<figure id="attachment_20165" aria-describedby="caption-attachment-20165" style="width: 826px" class="wp-caption aligncenter"><img decoding="async" loading="lazy" class="wp-image-20165" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0faa236931f6e9ebbe3_word-image-20158-7.png" alt="Exported Function sub_180004AA0" width="826" height="426" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0faa236931f6e9ebbe3_word-image-20158-7.png 826w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-7-300x155.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-7-768x396.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-7-150x77.png 150w" sizes="(max-width: 826px) 100vw, 826px"><figcaption id="caption-attachment-20165" class="wp-caption-text">Exported Function sub_180004AA0</figcaption></figure>
<p>&nbsp;</p>
<p>The function <em>sub_180003490 </em>serves as the unpacker for the main payload.</p>
<figure id="attachment_20166" aria-describedby="caption-attachment-20166" style="width: 847px" class="wp-caption alignnone"><img decoding="async" loading="lazy" class="wp-image-20166" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fca2369361a29ebc37_word-image-20158-8.png" alt="Function sub_180003490" width="847" height="603" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fca2369361a29ebc37_word-image-20158-8.png 847w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-8-300x214.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-8-768x547.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-8-150x107.png 150w" sizes="(max-width: 847px) 100vw, 847px"><figcaption id="caption-attachment-20166" class="wp-caption-text">Function sub_180003490</figcaption></figure>
<p>&nbsp;</p>
<h4><a id="post-20158-_oafsnvh8xuuc"></a>Function sub_180003490</h4>
<p>Function <em>sub_180003490 </em>contains 2 functions of interest:</p>
<p><strong><em>sub_1800021D0:</em></strong> This function routine is responsible for allocating heap memory.</p>
<figure id="attachment_20167" aria-describedby="caption-attachment-20167" style="width: 937px" class="wp-caption aligncenter"><img decoding="async" loading="lazy" class="wp-image-20167" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fba2369339fb9ebbe6_word-image-20158-9.png" alt="Function sub_1800021D0" width="937" height="250" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fba2369339fb9ebbe6_word-image-20158-9.png 937w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-9-300x80.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-9-768x205.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-9-150x40.png 150w" sizes="(max-width: 937px) 100vw, 937px"><figcaption id="caption-attachment-20167" class="wp-caption-text">Function sub_1800021D0</figcaption></figure>
<p>&nbsp;</p>
<p><strong><em>sub_1800029BC: </em></strong>This function writes the embedded data, in the data segment of the DLL sample, into the newly allocated heap memory. The packed payload is fetched from the data segment and written into allocated heap memory. The code segment highlighted in the image below is responsible for transferring the data.</p>
<figure id="attachment_20168" aria-describedby="caption-attachment-20168" style="width: 955px" class="wp-caption aligncenter"><img decoding="async" loading="lazy" class="wp-image-20168" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fba23693ff849ebc0c_word-image-20158-10.png" alt="Function sub_1800029BC" width="955" height="513" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fba23693ff849ebc0c_word-image-20158-10.png 955w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-10-300x161.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-10-768x413.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-10-150x81.png 150w" sizes="(max-width: 955px) 100vw, 955px"><figcaption id="caption-attachment-20168" class="wp-caption-text">Function sub_1800029BC</figcaption></figure>
<h3><a id="post-20158-_m8scala40gid"></a>Function sub_1800029BC</h3>
<figure id="attachment_20169" aria-describedby="caption-attachment-20169" style="width: 681px" class="wp-caption aligncenter"><img decoding="async" loading="lazy" class="wp-image-20169" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0faa2369343759ebbb9_word-image-20158-11.jpeg" alt="Assembly code representation of function sub_1800029BC" width="681" height="213" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0faa2369343759ebbb9_word-image-20158-11.jpeg 681w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-11-300x94.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-11-150x47.jpeg 150w" sizes="(max-width: 681px) 100vw, 681px"><figcaption id="caption-attachment-20169" class="wp-caption-text">Assembly code representation of function sub_1800029BC</figcaption></figure>
<p>&nbsp;</p>
<ul>
<li>The assembly code highlighted yellow transfers the embedded data (packed payload) from the data segment of DLL to an intermediate CL register.</li>
<li>The assembly code highlighted red transfers the data from CL to the allocated heap. During runtime, the heap memory continues to get filled with the packed payload embedded within the DLL samples.</li>
</ul>
<figure id="attachment_20170" aria-describedby="caption-attachment-20170" style="width: 715px" class="wp-caption aligncenter"><img decoding="async" loading="lazy" class="wp-image-20170" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fba2369317379ebc07_word-image-20158-12.jpeg" alt="Heap memory during run time" width="715" height="490" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fba2369317379ebc07_word-image-20158-12.jpeg 715w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-12-300x206.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-12-150x103.jpeg 150w" sizes="(max-width: 715px) 100vw, 715px"><figcaption id="caption-attachment-20170" class="wp-caption-text">Heap memory during run time</figcaption></figure>
<p>&nbsp;</p>
<h3><a id="post-20158-_wx1t4y1uxuoj"></a>Function sub_180002FF4</h3>
<p>After dumping the packed payload in the allocated memory, the control goes back to <em>sub_180004AA0</em> and function <em>sub_180002FF4</em> is executed.</p>
<p><img decoding="async" loading="lazy" width="715" height="445" class="wp-image-20171" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c562c1ea25dc9_word-image-20158-13.jpeg" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c562c1ea25dc9_word-image-20158-13.jpeg 715w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-13-300x187.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-13-150x93.jpeg 150w" sizes="(max-width: 715px) 100vw, 715px"></p>
<p><em>Function sub_180002FF4</em></p>
<p>Function <em>sub_180002FF4 </em>performs the following operations:</p>
<ul>
<li>Allocates new heap memory.</li>
<li>Transfers previously dumped packed payload into newly allocated memory.</li>
<li>Deallocates previously allocated memory.</li>
</ul>
<p>After the control returns to <em>sub_180004AA0</em> function <em>sub_180004180</em> is executed.</p>
<p><img decoding="async" loading="lazy" width="715" height="445" class="wp-image-20172" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56225ba25dca_word-image-20158-14.jpeg" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56225ba25dca_word-image-20158-14.jpeg 715w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-14-300x187.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-14-150x93.jpeg 150w" sizes="(max-width: 715px) 100vw, 715px"></p>
<p><em>Function sub_180004180</em></p>
<h3><a id="post-20158-_sopbg231mz0z"></a>Function sub_180004180</h3>
<p><img decoding="async" loading="lazy" width="644" height="132" class="wp-image-20173" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c561fc1a25d92_word-image-20158-15.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c561fc1a25d92_word-image-20158-15.png 644w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-15-300x61.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-15-640x132.png 640w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-15-150x31.png 150w" sizes="(max-width: 644px) 100vw, 644px"></p>
<p><em>Three functions encapsulated in Function sub_180004180</em></p>
<p>Function <em>sub_180004180 </em>has 3 functions:</p>
<ul>
<li><strong><em>sub_180001670: </em></strong>This function is responsible for allocating multiple heap memories to the malware. The malware later dumps the unpacked MZ file into one of the allocated memories.</li>
<li><strong><em>sub_180003CE4: </em></strong>This function is responsible for unpacking previously dumped packed payload in the process heap and dumps it into one of the memories allocated by <em>sub_180001670. </em></li>
<li><strong><em>sub_180001A84: </em></strong>This function is responsible for deallocating memory.</li>
</ul>
<figure id="attachment_20174" aria-describedby="caption-attachment-20174" style="width: 640px" class="wp-caption aligncenter"><img decoding="async" loading="lazy" class="wp-image-20174" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fca2369380ba9ebc1d_word-image-20158-16.jpeg" alt="Unpacked MZ artifact in the memory" width="640" height="473" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fca2369380ba9ebc1d_word-image-20158-16.jpeg 640w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-16-300x222.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-16-150x111.jpeg 150w" sizes="(max-width: 640px) 100vw, 640px"><figcaption id="caption-attachment-20174" class="wp-caption-text">Unpacked MZ artifact in the memory</figcaption></figure>
<p>&nbsp;</p>
<h2><a id="post-20158-_113xic7sp51"></a>Hook Implementation</h2>
<p>Hooking refers to a range of techniques used to modify the behavior of an operating system, software, or software component, by intercepting the function calls, events, or communication between software components. The code which handles such intercepted function calls, events, or communication is called a hook.</p>
<p>Right after the Bumblebee loader unpacks the main payload in the memory, it hooks a few interesting functions exported by ntdll.dll (a file containing NT kernel functions, susceptible to cyberattacks) through an in-line hooking technique. The in-line hooks play a significant role in the execution of the final payload. The trigger mechanism, for the deployment of the payload, shows the creativity of the malware developer. Function <em>sub_180001000 </em>is responsible for implementing the in-line hooks.</p>
<figure id="attachment_20175" aria-describedby="caption-attachment-20175" style="width: 715px" class="wp-caption alignnone"><img decoding="async" loading="lazy" class="wp-image-20175" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fba2369300ea9ebbfd_word-image-20158-17.jpeg" alt="Function sub_180001000" width="715" height="445" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fba2369300ea9ebbfd_word-image-20158-17.jpeg 715w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-17-300x187.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-17-150x93.jpeg 150w" sizes="(max-width: 715px) 100vw, 715px"><figcaption id="caption-attachment-20175" class="wp-caption-text">Function sub_180001000</figcaption></figure>
<p>&nbsp;</p>
<p>Function <em>sub_180001000 </em>initially saves the addresses of 3 detour functions used for hooking. The detour functions are responsible for hijacking control flow in hooked Windows functions. After storing the addresses, <em>sub_1800025EC </em>is executed to resolve the addresses of the target API (Application Programming Interface) functions for hooking.</p>
<p><img decoding="async" loading="lazy" width="819" height="232" class="wp-image-20176" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c561a4aa25dc7_word-image-20158-18.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c561a4aa25dc7_word-image-20158-18.png 819w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-18-300x85.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-18-768x218.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-18-150x42.png 150w" sizes="(max-width: 819px) 100vw, 819px"></p>
<p><em>Detour functions in sub_180001000 function</em></p>
<p><em>sub_1800025EC </em>loads ntdll.dll in the address space of the loader process using function <em>LoadLibraryA</em>. Following the loading of the ntdll, function <em>GetProcAddress</em> is used to resolve the addresses of functions:</p>
<ul>
<li><em>NtOpenFile</em></li>
<li><em>NtCreateSection</em></li>
<li><em>NtMapViewOfSection</em></li>
</ul>
<p><img decoding="async" loading="lazy" width="878" height="550" class="wp-image-20177" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56b9f0a25db1_word-image-20158-19.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56b9f0a25db1_word-image-20158-19.png 878w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-19-300x188.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-19-768x481.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-19-150x94.png 150w" sizes="(max-width: 878px) 100vw, 878px"></p>
<p><em>LoadLibraryA and GetProcAddress functions</em></p>
<p>After obtaining the addresses to memory pages of the detour functions for hooking, the loader uses function <em>VirtualProtect </em>to change the memory permissions of the target pages. After changing the permissions, the loader writes the in-line hooks in <em>sub_180002978</em>. Then<em> VirtualProtect</em> is called again to restore the page permissions.</p>
<p><img decoding="async" loading="lazy" width="540" height="172" class="wp-image-20178" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c562134a25d8f_word-image-20158-20.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c562134a25d8f_word-image-20158-20.png 540w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-20-300x96.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-20-150x48.png 150w" sizes="(max-width: 540px) 100vw, 540px"></p>
<p><em>VirtualProtect and sub_180002978 functions</em></p>
<p>The data passed to<em> VirtualProtect</em> at runtime is shown in the image below. The call to <em>VirtualProtect </em>changes the<em> ntdll.NtOpenFile</em> page permission to 0x40 (<em>PAGE_EXECUTE_READWRITE</em>).</p>
<p><img decoding="async" loading="lazy" width="301" height="78" class="wp-image-20179" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c569400a25d8b_word-image-20158-21.jpeg" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c569400a25d8b_word-image-20158-21.jpeg 301w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-21-150x39.jpeg 150w" sizes="(max-width: 301px) 100vw, 301px"></p>
<p><em>Data passed/call to VirtualProtect function</em></p>
<p>After changing the page permissions of <em>ntdll.NtOpenFile</em>, the loader modifies the initial sequence of bytes in the <em>NtOpenFile</em> API by executing function <em>sub_180002978</em>.</p>
<p><img decoding="async" loading="lazy" width="529" height="385" class="wp-image-20180" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c566c3ca25d9d_word-image-20158-22.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c566c3ca25d9d_word-image-20158-22.png 529w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-22-300x218.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-22-150x109.png 150w" sizes="(max-width: 529px) 100vw, 529px"></p>
<p><em>sub_180002978 function modifying the NtOpenFile API</em></p>
<p>In-line hooking involves the following steps:</p>
<p><img decoding="async" loading="lazy" width="544" height="93" class="wp-image-20181" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c563ba9a25d99_word-image-20158-23.jpeg" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c563ba9a25d99_word-image-20158-23.jpeg 544w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-23-300x51.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-23-150x26.jpeg 150w" sizes="(max-width: 544px) 100vw, 544px"></p>
<p><em>ntdll.NtOpenFile before (hooking) execution of sub_180002978 function</em></p>
<ul>
<li>After <em>sub_180002978 is executed</em>, a call to <em>NtOpenFile</em> makes the malware code jump to location 1800023D4 (detour). This is how malicious in-line hooks change the execution flow of APIs.</li>
</ul>
<p><img decoding="async" loading="lazy" width="566" height="85" class="wp-image-20182" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c566e04a25d8c_word-image-20158-24.jpeg" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c566e04a25d8c_word-image-20158-24.jpeg 566w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-24-300x45.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-24-150x23.jpeg 150w" sizes="(max-width: 566px) 100vw, 566px"></p>
<p><em>Call to NtOpenFile making the malware jump to 1800023D4</em></p>
<ul>
<li>After writing the hook, <em>VirtualProtect </em>is used again to restore the page permission of <em>ntdll.NtOpenFile </em>to 0x20 (PAGE_EXECUTE_READ).</li>
</ul>
<p><img decoding="async" loading="lazy" width="300" height="74" class="wp-image-20183" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c564e7fa25d93_word-image-20158-25.jpeg" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c564e7fa25d93_word-image-20158-25.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-25-150x37.jpeg 150w" sizes="(max-width: 300px) 100vw, 300px"></p>
<p><em>VirtualProtect function </em>used to restore page permission of ntdll.NtOpenFile</p>
<ul>
<li>The process of changing memory permission and writing in-line hooks is repeated in a do-while loop, for the rest of the target functions, <em>NtCreateSection </em>and <em>NtMapViewOfSection.</em></li>
</ul>
<figure id="attachment_20184" aria-describedby="caption-attachment-20184" style="width: 951px" class="wp-caption aligncenter"><img decoding="async" loading="lazy" class="wp-image-20184" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0faa2369366249ebbe2_word-image-20158-26.png" alt="Do-while loop repeating the permission and hooks process for other target functions" width="951" height="262" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0faa2369366249ebbe2_word-image-20158-26.png 951w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-26-300x83.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-26-768x212.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-26-150x41.png 150w" sizes="(max-width: 951px) 100vw, 951px"><figcaption id="caption-attachment-20184" class="wp-caption-text">Do-while loop repeating the permission and hooks process for other target functions</figcaption></figure>
<p>&nbsp;</p>
<h3><a id="post-20158-_up9me939sg7a"></a>Summary of Hooked Functions</h3>
<p>After successful hooking, whenever target functions are called in the address space of the loader process, the control flow is transferred to the in-line the respective hook addresses:</p>
<table>
<thead>
<tr>
<th><strong>Target Function</strong></th>
<th><strong>In-line Hook </strong>(Detours)</th>
</tr>
<tr>
<th><em>ntdll.NtOpenFile</em></th>
<th>1800023D4</th>
</tr>
<tr>
<th><em>ntdll.NtCreateSection</em></th>
<th>1800041EC</th>
</tr>
<tr>
<th><em>ntdll.NtMapViewOfSection</em></th>
<th>180001D4C</th>
</tr>
</thead>
</table>
<h2><a id="post-20158-_893y4c8iz2aq"></a>Loading gdiplus.dll is Unique to Bumblebee</h2>
<p>The final function executed by the loader is <em>sub_1800013A0</em>. The malware uses the function <em>LoadLibraryW</em> to load the DLL module. It then uses the function <em>GetProcAddress</em> to obtain the address of a specific function exported by the library loaded.</p>
<p>This plays a crucial step in deployment of the main payload on the victim system. Unlike TTPs (Tactics, Techniques, and Procedures) of common malware loaders, this is where the Bumblebee loader gets creative.</p>
<p><img decoding="async" loading="lazy" width="812" height="347" class="wp-image-20185" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fba236939ecd9ebbe5_word-image-20158-27.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fba236939ecd9ebbe5_word-image-20158-27.png 812w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-27-300x128.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-27-768x328.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-27-150x64.png 150w" sizes="(max-width: 812px) 100vw, 812px"></p>
<p><em>Function sub_1800013A0 with LoadLibraryW and GetProcAddress functions</em></p>
<p>The module <em>gdiplus.dll </em>is loaded into the process memory address space.<em> Gdiplus.dll</em> is an important module, containing libraries that support the GDI Window Manager, in the Microsoft Windows OS.</p>
<p><img decoding="async" loading="lazy" width="692" height="124" class="wp-image-20186" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c5620fca25db9_word-image-20158-28.jpeg" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c5620fca25db9_word-image-20158-28.jpeg 692w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-28-300x54.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-28-150x27.jpeg 150w" sizes="(max-width: 692px) 100vw, 692px"></p>
<p><em>Runtime execution of function sub_1800013A0</em></p>
<p>The module <em>gdiplus.dll</em> is executed in the last function of the malware loader. This is the first instance in which the unpacked MZ payload is used directly by the loader. Hence, the loading of this module appears suspicious. Also, an unusual base address (<em>0x1d54fd0000</em>) is assigned to the loaded <em>gdiplus.dll</em> module. <img decoding="async" loading="lazy" width="452" height="384" class="wp-image-20187" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5620d1a25dae_word-image-20158-29.jpeg" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5620d1a25dae_word-image-20158-29.jpeg 452w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-29-300x255.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-29-150x127.jpeg 150w" sizes="(max-width: 452px) 100vw, 452px"></p>
<p><em>Unusual base address assigned to gdiplus.dll</em></p>
<p>By further examining the suspicious memory, it was found that the address is a mapped page with RWX permission in the loader address space. This is a classic use case of hollowing where the module content is replaced with unpacked malicious artifacts.</p>
<p><img decoding="async" loading="lazy" width="428" height="180" class="wp-image-20188" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c562cb5a25d94_word-image-20158-30.jpeg" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c562cb5a25d94_word-image-20158-30.jpeg 428w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-30-300x126.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-30-150x63.jpeg 150w" sizes="(max-width: 428px) 100vw, 428px"></p>
<p><em> Address as a mapped page with RWX permission</em></p>
<p>But in our analysis so far we have not come across any code that does the hollowing. Then how did the malware change the contents of the gdiplus.dll? Interestingly this is where the malware developer decided to get creative! The hooking seen earlier is responsible for hollowing the loaded module with the unpacked payload. More details about the same are covered in the following section.</p>
<h2><a id="post-20158-_m0jqpo54214o"></a>Investigating the Hooks and the Trigger</h2>
<p>As seen in the previous section, the malware hooks 3 specific APIs:</p>
<ul>
<li><em>NtOpenFile</em></li>
<li><em>NtCreateSection</em></li>
<li><em>NtMapViewOfSection</em></li>
</ul>
<p>The API selection is not random. The internal working of loading any DLL via<em> LoadLibrary</em> API uses the 3 functions mentioned above. Hooking these functions gives the malware the flexibility to deploy the unpacked payload covertly. This feature makes it difficult for researchers to hunt the main payload.</p>
<p>The detour function at 0x180001D4C is used to hook function <em>NtMapViewOfSection</em>, which lays the groundwork for hollowing the loaded module (in this case, <em>gdiplus.dll</em>) with the unpacked Bumblebee binary. The detour function is capable of the following actions:</p>
<ul>
<li>Section object creation via <em>NtCreateSection</em> API</li>
<li>Mapping of the view of gdiplus.dll to loader address space via <em>NtMapViewOfSection</em></li>
<li>Writing the unpacked payload into the mapped view of gdiplus.dll</li>
<li>Deallocating heap memory that holds unpacked payload from earlier steps</li>
</ul>
<p>The implementation of the detour function at 0x180001D4C, shows the use of a pointer to the <em>NtCreateSection</em> API, for creating a section object to be used later in mapping the <em>gdiplus.dll</em> module.</p>
<p><img decoding="async" loading="lazy" width="547" height="176" class="wp-image-20189" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56872da25db8_word-image-20158-31.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56872da25db8_word-image-20158-31.png 547w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-31-300x97.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-31-150x48.png 150w" sizes="(max-width: 547px) 100vw, 547px"></p>
<p><em>Pointer to NtCreateSection API</em></p>
<p>After creating a section object, the detour function calls <em>NtMapViewOfSection,</em> via a pointer. Now the view for the section is created by the system. The function <em>sub_180002E74</em> is responsible for filling the mapped view with an unpacked payload.</p>
<p><img decoding="async" loading="lazy" width="743" height="398" class="wp-image-20190" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56e48ca25da3_word-image-20158-32.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56e48ca25da3_word-image-20158-32.png 743w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-32-300x161.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-32-150x80.png 150w" sizes="(max-width: 743px) 100vw, 743px"></p>
<p><em>Pointer to NtMapViewOfSection along with sub_180002E74 function</em></p>
<p>The address of the mapped view, returned by <em>NtMapViewOfSection</em> pointer in the loader process, which is 0x1D54F5D0000, is the same address seen while examining the process modules.</p>
<p><img decoding="async" loading="lazy" width="452" height="85" class="wp-image-20191" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c560d00a25dc5_word-image-20158-33.jpeg" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c560d00a25dc5_word-image-20158-33.jpeg 452w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-33-300x56.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-33-150x28.jpeg 150w" sizes="(max-width: 452px) 100vw, 452px"></p>
<p><em>Address of the mapped view returned by NtMapViewOfSection</em></p>
<p><img decoding="async" loading="lazy" width="454" height="90" class="wp-image-20192" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56dca6a25dcb_word-image-20158-34.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56dca6a25dcb_word-image-20158-34.png 454w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-34-300x59.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-34-150x30.png 150w" sizes="(max-width: 454px) 100vw, 454px"></p>
<p><em>Unusual base address assigned to âgdiplus.dllâ as seen earlier</em></p>
<p>The mapped view starts from 0x1D54F5D0000. The loader dumps the unpacked payload here, hollowing<em> gdiplus.dll</em>. Hence, the final Bumblebee payload stays hidden inside the loaded module <em>gdiplus.dll</em>.</p>
<p>Right after mapping the view, the detour function executes <em>sub_180002E74</em> to initiate the writing of the unpacked binary.</p>
<p><img decoding="async" loading="lazy" width="1194" height="289" class="wp-image-20193" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c566202a25d97_word-image-20158-35.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c566202a25d97_word-image-20158-35.png 1194w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-35-300x73.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-35-1024x248.png 1024w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-35-768x186.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-35-150x36.png 150w" sizes="(max-width: 1194px) 100vw, 1194px"></p>
<p><em>Function sub_180002E74 responsible for filling the mapped view with the final payload</em></p>
<p>The hooks get activated as soon as the loader loads the <em>gdiplus.dll</em> module via <em>LoadLibraryW</em> API. Then the payload is covertly loaded into the <em>gdiplus.dll</em> module. The final payload is a DLL, hence the loader has to explicitly call an exported function to trigger the execution.</p>
<p>In this case, the loader obtains the address of exported function<em> SetPath</em> via function <em>GetProcAddress</em>. The control is then transferred to the final payload by the final call to <em>SetPath</em>, by providing the loader program name as argument.</p>
<p><img decoding="async" loading="lazy" width="832" height="353" class="wp-image-20194" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56cb33a25dbf_word-image-20158-36.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56cb33a25dbf_word-image-20158-36.png 832w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-36-300x127.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-36-768x326.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-36-150x64.png 150w" sizes="(max-width: 832px) 100vw, 832px"></p>
<p><em>Loader obtains the address of exported function âSetPathâ via GetProcAddress</em></p>
<p>The image below shows the function <em>SetPath</em> exported by the unpacked Bumblebee payload.</p>
<p><img decoding="async" loading="lazy" width="372" height="322" class="wp-image-20195" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c563780a25dbc_word-image-20158-37.jpeg" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c563780a25dbc_word-image-20158-37.jpeg 372w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-37-300x260.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-37-150x130.jpeg 150w" sizes="(max-width: 372px) 100vw, 372px"></p>
<p><em>SetPath Function</em></p>
<h2><a id="post-20158-_gjg44n805xww"></a>Bumblebee Main Payload Analysis</h2>
<p>The core malicious component of the bumblebee is executed in the memory, when the hollowed <em>gdiplus.dll</em> is loaded via the<em> LoadLibrary</em> API. When the module is loaded into memory, the function <em>DllMain</em> creates a new thread and executes <em>sub_180008EC0</em> routine.</p>
<p><strong><img decoding="async" loading="lazy" width="651" height="407" class="wp-image-20196" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56c8fda25daa_word-image-20158-38.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56c8fda25daa_word-image-20158-38.png 651w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-38-300x188.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-38-150x94.png 150w" sizes="(max-width: 651px) 100vw, 651px"></strong></p>
<p><em>The DllMain function of the bumblebee payload</em></p>
<p><em>sub_180008EC0</em> routine is quite a large function that is responsible for all the malicious activities performed by Bumblebee on the compromised system.</p>
<p><strong><img decoding="async" loading="lazy" width="649" height="938" class="wp-image-20197" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c5609e9a25dc8_word-image-20158-39.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c5609e9a25dc8_word-image-20158-39.png 649w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-39-208x300.png 208w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-39-150x217.png 150w" sizes="(max-width: 649px) 100vw, 649px"></strong></p>
<p><em> Function sub_180008EC0 logic flow</em></p>
<h3><a id="post-20158-_x1z4x0m8prka"></a>Anti VM Checks</h3>
<p>The first activity performed by<em> sub_180008EC0</em> is to check for a virtual machine (VM) environment. If the function returns True, then Bumblebee shuts itself down by executing the <em>ExitProcess</em> function.</p>
<p><strong><img decoding="async" loading="lazy" width="591" height="212" class="wp-image-20198" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c568b2ca25dbd_word-image-20158-40.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c568b2ca25dbd_word-image-20158-40.png 591w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-40-300x108.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-40-150x54.png 150w" sizes="(max-width: 591px) 100vw, 591px"></strong></p>
<p><em>sub_18003DA0 performs VM check</em></p>
<p>The VM checking routine is. Rigorous. It employs various techniques to ensure that the malware is not running in a sandbox environment used by security researchers. Some of the interesting features are:</p>
<ul>
<li>Iterating through running processes via functions <em>CreateToolHelp32Snapshot</em>, <em>Process32FirstW,</em> and <em>Process32NextW</em>.</li>
</ul>
<p><img decoding="async" loading="lazy" width="355" height="428" class="wp-image-20199" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c563ac0a25d9b_word-image-20158-41.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c563ac0a25d9b_word-image-20158-41.png 355w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-41-249x300.png 249w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-41-150x181.png 150w" sizes="(max-width: 355px) 100vw, 355px"></p>
<p><em>Malware functions which help in iterating through running processes</em></p>
<ul>
<li>Each running process is compared to a list of program names.</li>
</ul>
<p><img decoding="async" loading="lazy" width="603" height="218" class="wp-image-20200" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56d066a25dc1_word-image-20158-42.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56d066a25dc1_word-image-20158-42.png 603w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-42-300x108.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-42-150x54.png 150w" sizes="(max-width: 603px) 100vw, 603px"></p>
<p><em>Running process being compared to the list of program names</em></p>
<ul>
<li>The malware also checks for specific usernames used in sandboxed environments to confirm the absence of a VM.</li>
</ul>
<p><img decoding="async" loading="lazy" width="625" height="511" class="wp-image-20201" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56f53aa25da1_word-image-20158-43.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56f53aa25da1_word-image-20158-43.png 625w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-43-300x245.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-43-150x123.png 150w" sizes="(max-width: 625px) 100vw, 625px"></p>
<p><em>Malware checking for specific usernames</em></p>
<ul>
<li>The VM check routine also enumerates active system services running via the <em>OpenSCManagerW</em> API. The names of common services used by VM softwares are stored in an array.</li>
</ul>
<p><img decoding="async" loading="lazy" width="414" height="489" class="wp-image-20202" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c5609c2a25dc6_word-image-20158-44.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c5609c2a25dc6_word-image-20158-44.png 414w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-44-254x300.png 254w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-44-150x177.png 150w" sizes="(max-width: 414px) 100vw, 414px"></p>
<p><em>Enumerating active system services running via OpenSCManagerW</em></p>
<ul>
<li>It also scans the system directory for common drivers and library files used by VM applications.</li>
</ul>
<p><img decoding="async" loading="lazy" width="424" height="238" class="wp-image-20203" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56bfcca25d96_word-image-20158-45.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56bfcca25d96_word-image-20158-45.png 424w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-45-300x168.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-45-150x84.png 150w" sizes="(max-width: 424px) 100vw, 424px"></p>
<p><img decoding="async" loading="lazy" width="374" height="325" class="wp-image-20204" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c5656c3a25dc0_word-image-20158-46.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c5656c3a25dc0_word-image-20158-46.png 374w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-46-300x261.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-46-150x130.png 150w" sizes="(max-width: 374px) 100vw, 374px"></p>
<p><em>System check for common drivers and library files used by popular VM applications</em></p>
<ul>
<li>The routine also checks for named pipes to identify the presence of VM.</li>
</ul>
<p><img decoding="async" loading="lazy" width="470" height="310" class="wp-image-20205" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c564b7ea25d8e_word-image-20158-47.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c564b7ea25d8e_word-image-20158-47.png 470w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-47-300x198.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-47-150x99.png 150w" sizes="(max-width: 470px) 100vw, 470px"></p>
<p>Checking for named pipes</p>
<p>These are a few examples of techniques employed by the malware to identify analysis environments. It also has other functionalities built such as the use of WMI and registry functionalities to identify hardware information to check for the presence of VM environments installed on the target system.</p>
<h3><a id="post-20158-_burh1ro4lu22"></a>Event Creation</h3>
<p>After VM checks, if it is secure to continue, the malware creates an event. The event ID is 3C29FEA2-6FE8-4BF9-B98A-0E3442115F67. This is used for thread synchronization.</p>
<p><img decoding="async" loading="lazy" width="695" height="110" class="wp-image-20206" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c562f13a25dba_word-image-20158-48.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c562f13a25dba_word-image-20158-48.png 695w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-48-300x47.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-48-150x24.png 150w" sizes="(max-width: 695px) 100vw, 695px"></p>
<p><em>The event created by the malware</em></p>
<h3><a id="post-20158-_4khjdifzb8lo"></a>Persistence</h3>
<p>The malware uses <em>wsript.exe</em> as a persistence vector to run the malware each time the user logs into the system. The VB instruction is written into a <em>.vbs</em> file. This is performed when the C2 sends the âins&#8221; command as a task to execute on the system.</p>
<p><strong><img decoding="async" loading="lazy" width="569" height="79" class="wp-image-20207" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56bcd2a25dc3_word-image-20158-49.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56bcd2a25dc3_word-image-20158-49.png 569w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-49-300x42.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-49-150x21.png 150w" sizes="(max-width: 569px) 100vw, 569px"></strong></p>
<p><em>Wsript.exe</em></p>
<p><strong><img decoding="async" loading="lazy" width="541" height="173" class="wp-image-20208" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c565d2ca25d95_word-image-20158-50.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c565d2ca25d95_word-image-20158-50.png 541w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-50-300x96.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-50-150x48.png 150w" sizes="(max-width: 541px) 100vw, 541px"></strong></p>
<p><em>VB instruction written into a .vbs file</em></p>
<h3><a id="post-20158-_6l2f7cup6r53"></a>Token Manipulation</h3>
<p>The malware performs token manipulation to escalate its privilege on the target system by granting the malware process a <em>SeDebugPrivilege</em>. With this privilege the malware can perform arbitrary read/write operations.</p>
<p><strong><img decoding="async" loading="lazy" width="1100" height="336" class="wp-image-20209" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56656ba25da2_word-image-20158-51.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56656ba25da2_word-image-20158-51.png 1100w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-51-300x92.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-51-1024x313.png 1024w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-51-768x235.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-51-150x46.png 150w" sizes="(max-width: 1100px) 100vw, 1100px"></strong></p>
<p><em>Malware is given the âSeDebugPrivilegeâ</em></p>
<p>The malware is capable of performing code injections to deploy malicious code in running processes using various APIs. The malware dynamically retrieves the addresses of the APIs needed for the code injection. The core bumblebee payload comes with embedded files which areinjected into the running process to further attack the victim.</p>
<p><img decoding="async" loading="lazy" width="954" height="374" class="wp-image-20210" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c561cf3a25d9c_word-image-20158-52.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c561cf3a25d9c_word-image-20158-52.png 954w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-52-300x118.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-52-768x301.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-52-150x59.png 150w" sizes="(max-width: 954px) 100vw, 954px"></p>
<p><em>List of APIs used to perform code injections</em></p>
<h3><a id="post-20158-_olv352109gi6"></a>Code Injection Via NtQueueApcThread</h3>
<p>When the malware receives the command along with a DLL buffer, which gets injected, the malware starts scanning for a list of processes on the system. One of the executables in the list is randomly chosen to inject the malicious DLL.</p>
<p><strong><img decoding="async" loading="lazy" width="561" height="144" class="wp-image-20211" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56cb72a25d9e_word-image-20158-53.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56cb72a25d9e_word-image-20158-53.png 561w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-53-300x77.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-53-150x39.png 150w" sizes="(max-width: 561px) 100vw, 561px"></strong></p>
<p><em>Malware looking for the list of processes on the system</em></p>
<p><strong><img decoding="async" loading="lazy" width="375" height="109" class="wp-image-20212" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c562fbca25da9_word-image-20158-54.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c562fbca25da9_word-image-20158-54.png 375w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-54-300x87.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-54-150x44.png 150w" sizes="(max-width: 375px) 100vw, 375px"></strong></p>
<p><em>List of executables</em></p>
<p>Following the code injection, the malware:</p>
<ul>
<li>Creates a process from the previously selected executable image via COM (Component Object Model), in which access to an objectâs data is received through interfaces, in a suspended state.</li>
<li>Enumerates through the running process via the<em> CreateToolhelp32Snapshot </em>API to find the newly spawned process created in the previous step.</li>
<li>When the process is found, the malware manipulates the token and acquires the <em>SeDebugPrivilege</em> token to perform further memory manipulation.</li>
<li>If token manipulation is successful, the malware injects a shellcode into the process to make it go to sleep.</li>
</ul>
<p><strong><img decoding="async" loading="lazy" width="597" height="484" class="wp-image-20213" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c567d6aa25dab_word-image-20158-55.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c567d6aa25dab_word-image-20158-55.png 597w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-55-300x243.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-55-150x122.png 150w" sizes="(max-width: 597px) 100vw, 597px"></strong></p>
<p><em>Malware creating a process and injecting shellcode into it</em></p>
<p>Function <em>sub_180037A80</em> is responsible for performing the shellcode injection into the spawned process in the suspended state.</p>
<p><strong><img decoding="async" loading="lazy" width="555" height="330" class="wp-image-20214" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c5621cca25dc4_word-image-20158-56.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c5621cca25dc4_word-image-20158-56.png 555w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-56-300x178.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-56-150x89.png 150w" sizes="(max-width: 555px) 100vw, 555px"></strong></p>
<p><em> Function sub_180037A80</em></p>
<p>After injecting the shellcode into the process, the malware resumes the process. It then executes function <em>sub_18003A9BC</em> to finally inject malicious DLL by creating multiple memory sections and views.</p>
<p><strong><img decoding="async" loading="lazy" width="618" height="194" class="wp-image-20215" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c566b94a25da4_word-image-20158-57.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c566b94a25da4_word-image-20158-57.png 618w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-57-300x94.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-57-150x47.png 150w" sizes="(max-width: 618px) 100vw, 618px"></strong></p>
<p><em>Executing sub_18003A9BC function to inject malicious DLL</em></p>
<p>The DLL code is executed via the <em>NtQueueApcThread</em> API, which is dynamically resolved during the execution.</p>
<p><strong><img decoding="async" loading="lazy" width="616" height="207" class="wp-image-20216" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c566e36a25dbe_word-image-20158-58.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c566e36a25dbe_word-image-20158-58.png 616w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-58-300x101.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-58-150x50.png 150w" sizes="(max-width: 616px) 100vw, 616px"></strong></p>
<p><em>DLL code executed via NtQueueApcThread API</em></p>
<h2><a id="post-20158-_13x7uaee4uam"></a>C2 Network</h2>
<p>Command and Control Infrastructure, also known as C2 or C&amp;C, is a collection of tools and techniques used to maintain contact with a compromised system of devices after the initial access has been gained. The IP address of the C2 can be retrieved from the payload code as shown below.</p>
<p><img decoding="async" loading="lazy" width="606" height="482" class="wp-image-20217" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c561ee9a25dc2_word-image-20158-59.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c561ee9a25dc2_word-image-20158-59.png 606w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-59-300x239.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-59-150x119.png 150w" sizes="(max-width: 606px) 100vw, 606px"></p>
<p><em>Retrieving the IP address of C2 </em></p>
<p>The C2 periodically sends out tasks to the agent to be executed on the system. The malware extensively uses WMI (Windows Management Infrastructure) to collect basic victim information like domain name and user name, and sends the compromised information to the C2. The C2 distinguishes active agents based on the client ID assigned to each one.</p>
<p><img decoding="async" loading="lazy" width="580" height="53" class="wp-image-20218" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fca2369305c09ebc6f_word-image-20158-60.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fca2369305c09ebc6f_word-image-20158-60.png 580w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-60-300x27.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-60-150x14.png 150w" sizes="(max-width: 580px) 100vw, 580px"></p>
<p><em>Data transferred in C2 communication</em></p>
<p>Interestingly, the user agent string used by the malware for communication is âbumblebeeâ.</p>
<h3><a id="post-20158-_gkg3vsbbr9cl"></a>Outbound Traffic</h3>
<p><img decoding="async" loading="lazy" width="1104" height="117" class="wp-image-20219" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5630aca25d91_word-image-20158-61.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5630aca25d91_word-image-20158-61.png 1104w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-61-300x32.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-61-1024x109.png 1024w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-61-768x81.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-61-150x16.png 150w" sizes="(max-width: 1104px) 100vw, 1104px"></p>
<p><em>Data transferred out of the compromised system</em></p>
<h4><strong>Client Parameters</strong></h4>
<ul>
<li>client-id</li>
<li>group_name</li>
<li>sys_version</li>
<li>User name</li>
<li>client_version</li>
</ul>
<h3><a id="post-20158-_ikjfm8t7c6ey"></a>Inbound Traffic</h3>
<p><img decoding="async" loading="lazy" width="815" height="145" class="wp-image-20220" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c562c33a25da7_word-image-20158-62.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c562c33a25da7_word-image-20158-62.png 815w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-62-300x53.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-62-768x137.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-62-150x27.png 150w" sizes="(max-width: 815px) 100vw, 815px"></p>
<p><em>Commands received by the compromised system</em></p>
<h4><strong>Client Parameters</strong></h4>
<ul>
<li>response_status</li>
<li>tasks</li>
</ul>
<h3><a id="post-20158-_g01k04n2e47r"></a>Commands Supported</h3>
<p>The task field in the C2 response will contain one of the following commands:</p>
<table>
<thead>
<tr>
<th><strong>Command</strong></th>
<th><strong>Description</strong></th>
</tr>
<tr>
<th>dex</th>
<th>Downloads executable</th>
</tr>
<tr>
<th>sdl</th>
<th>Kill Loader</th>
</tr>
<tr>
<th>ins</th>
<th>Persistence</th>
</tr>
<tr>
<th>dij</th>
<th>DLL inject</th>
</tr>
</thead>
</table>
<h2><a id="post-20158-_wq7abflo1fwb"></a>A Tale of Bundled DLLs and Hooks</h2>
<p>The core payload comes with two DLLs embedded in the binary. The purpose and function of both the DLLs are the same, but one is 32 bit and the other is 64 bit. These are used to perform further hooking and control flow manipulations.</p>
<p><strong>DLL Signatures (SHA256)</strong></p>
<ul>
<li>32 bit: B9534DDEA8B672CF2E4F4ABD373F5730C7A28FE2DD5D56E009F6E5819E9E9615</li>
<li>64 bit: 1333CC4210483E7597B26042B8FF7972FD17C23488A06AD393325FE2E098671B</li>
</ul>
<p>In this section we will look into the inner workings of embedded 32 bit DLL. The module looks for a specific set of functions in <em>ntdll.dll</em>, <em>kernel32.dll</em>, <em>kernelbase.dll, </em>and <em>advapi32.dll</em> to later remove any hooks present in the code. This will also remove any EDR/AV (Endpoint Detection and Response/ Antivirus) implemented hooks used for monitoring.</p>
<p><img decoding="async" loading="lazy" width="626" height="724" class="wp-image-20221" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c563b54a25db0_word-image-20158-63.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c563b54a25db0_word-image-20158-63.png 626w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-63-259x300.png 259w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-63-150x173.png 150w" sizes="(max-width: 626px) 100vw, 626px"></p>
<p><em>Functions in ntdll.dll checked for existing hooks</em></p>
<p><img decoding="async" loading="lazy" width="728" height="283" class="wp-image-20222" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5629fda25da6_word-image-20158-64.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5629fda25da6_word-image-20158-64.png 728w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-64-300x117.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-64-150x58.png 150w" sizes="(max-width: 728px) 100vw, 728px"></p>
<p><em>Functions in kernel32.dll checked for existing hooks</em></p>
<p>In kernelbase32.dll following functions are checked for any already existing hooks:</p>
<p><img decoding="async" loading="lazy" width="637" height="380" class="wp-image-20223" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c563b97a25da5_word-image-20158-65.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c563b97a25da5_word-image-20158-65.png 637w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-65-300x179.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-65-150x89.png 150w" sizes="(max-width: 637px) 100vw, 637px"></p>
<p><em>Functions in kernelbase32.dll checked for existing hooks</em></p>
<p><img decoding="async" loading="lazy" width="618" height="128" class="wp-image-20224" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5622bea25d98_word-image-20158-66.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5622bea25d98_word-image-20158-66.png 618w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-66-300x62.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-66-150x31.png 150w" sizes="(max-width: 618px) 100vw, 618px"></p>
<p><em>Functions in advapi32.dll checked for existing hooks</em></p>
<h3><a id="post-20158-_8b48vgevh5di"></a>The Unhooking Mechanism</h3>
<p>The unhooking process involves the following steps:</p>
<ul>
<li>The module retrieves handles to target DLLs via the<em> GetModuleHandleW API</em>. The handle returned by the API is for the DLL loaded in the memory by the malware process, i.e. the process responsible for executing the bumble loader, which is <em>rundll32.exe</em>.</li>
<li>Then the malware constructs the absolute path for target DLLs via the <em>LetSystemDirectoryA</em> API, to access the system32 directory, where all system DLLs are located.</li>
<li>A pointer to <em>NtProtectVirtualMemory</em> is computed following the DLL path generation.</li>
<li>Function <em>sub_10005B90</em> is called to do the unhooking. Parameters passed to the function are:
<ul>
<li>First Arg: Absolute path to target DLL</li>
<li>Second Arg: Handle to already loaded target DLL</li>
<li>Third Arg: Offset to array holding target functions exported by the target DLL</li>
<li>Fourth Arg: Null</li>
<li>Fifth Arg: Pointer to NtProtectVirtualMemory</li>
</ul>
</li>
</ul>
<p><img decoding="async" loading="lazy" width="712" height="696" class="wp-image-20225" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c566c1ba25daf_word-image-20158-67.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c566c1ba25daf_word-image-20158-67.png 712w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-67-300x293.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-67-150x147.png 150w" sizes="(max-width: 712px) 100vw, 712px"></p>
<p><em>Steps for Unhooking Mechanism</em></p>
<p>Function sub_10005B90 performs the following operations:</p>
<ul>
<li>Maps fresh copy of the target DLL from the hard disk to address space of the malware process via functions <em>CreateFileA</em>, <em>CreateFileMappingA,</em> and <em>MapViewOfFile</em>.</li>
<li>Calls function <em>sub_10005D40</em> to perform unhooking. The following data is passed to the function:
<ul>
<li>First Arg: Mapped Address of fresh copy of DLL</li>
<li>Second Arg: Same as sub_10005B90</li>
<li>Third Arg: Same as sub_10005B90</li>
<li>Fourth Arg: Same as sub_10005B90</li>
<li>Fifth Arg: Same as sub_10005B90</li>
</ul>
</li>
<li>After unhooking, the mapped view is released via the<em> UnMapViewOfFile</em> API.</li>
</ul>
<p><img decoding="async" loading="lazy" width="783" height="454" class="wp-image-20226" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56bc11a25d9f_word-image-20158-68.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56bc11a25d9f_word-image-20158-68.png 783w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-68-300x174.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-68-768x445.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-68-150x87.png 150w" sizes="(max-width: 783px) 100vw, 783px"></p>
<p><em>Operations performed by function sub_10005B90</em></p>
<p>The logic used for unhooking is straightforward. The malware compares the target function in the loaded module in memory against the function defined in the mapped module via <em>MapViewOfFile</em>. If both the codes don&#8217;t match, the content from the mapped module is written to the loaded module, to restore the state to that of the mapped version from the hard disk.</p>
<p>The malware goes through the exports of the loaded DLL and performs a string match against the set of function names stored as an array in a loop. The sub_10005930 is responsible for string matching.</p>
<p><img decoding="async" loading="lazy" width="596" height="218" class="wp-image-20227" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c566c6aa25d9a_word-image-20158-69.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c566c6aa25d9a_word-image-20158-69.png 596w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-69-300x110.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-69-150x55.png 150w" sizes="(max-width: 596px) 100vw, 596px"></p>
<p><em>String match against the set of function names</em></p>
<p>When the function name in the array of the malware matches the exported function from the loaded module, the flag is set to [v8] and breaks from the loop. This occurs in the following steps:</p>
<ul>
<li>The malware stores the addresses of functions from both modules(loaded and mapped).</li>
<li>Then the loaded and mapped function codes are checked for hooks, by identifying dissimilarities in the code. If the loaded code is the same as the mapped one, it breaks from the loop and continues to iterate through the remaining functions.</li>
</ul>
<p><img decoding="async" loading="lazy" width="587" height="597" class="wp-image-20228" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fca2369342ee9ebc36_word-image-20158-70.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fca2369342ee9ebc36_word-image-20158-70.png 587w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-70-295x300.png 295w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-70-150x153.png 150w" sizes="(max-width: 587px) 100vw, 587px"></p>
<p><em>Malware matches the exported function</em></p>
<p>If the loaded code is not the as same as the mapped code, then the following operations are performed by the malware for unhooking:</p>
<ul>
<li><em>VirtualQueryEx</em> API is called to retrieve the base address of the page containing the target function.</li>
<li>Then<em> NtProtectVirtualMemory</em> API is used for changing permissions of the page containing the function code (READ_WRITE_EXECUTE).</li>
<li><em>VirtualQuery</em> is used again to check for permission; whether the page is writable or not.</li>
<li>Function <em>sub_10005890</em> is called to restore the loaded module with the contents of the mapped module. Now the functions in the mapped and loaded modules are in the same state.</li>
</ul>
<p><img decoding="async" loading="lazy" width="682" height="396" class="wp-image-20235" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5614aea25dad_word-image-20158-71.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5614aea25dad_word-image-20158-71.png 682w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-71-300x174.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-71-150x87.png 150w" sizes="(max-width: 682px) 100vw, 682px"></p>
<p><em>Malware does not match the exported function</em></p>
<p>After clearing all the hooks in the selected functions, the malware installs hooks.</p>
<p>Functions <em>RaiseFailFastException</em> from kernel32.dll and <em>api-ms-win-core-errorhandling-l1-1-2.dll </em>are hooked. Then the detour function <em>sub_100057F0</em> hijacks the control flow when the above functions are called by the system after hooking is done by the malware.</p>
<p><img decoding="async" loading="lazy" width="696" height="191" class="wp-image-20236" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5683dfa25dac_word-image-20158-72.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5683dfa25dac_word-image-20158-72.png 696w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-72-300x82.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-72-150x41.png 150w" sizes="(max-width: 696px) 100vw, 696px"></p>
<p><em>Installing hooks</em></p>
<p>Function <em>sub_100057F0</em> simply returns the call.</p>
<p><img decoding="async" loading="lazy" width="430" height="87" class="wp-image-20237" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c562a3ca25dbb_word-image-20158-73.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c562a3ca25dbb_word-image-20158-73.png 430w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-73-300x61.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-73-150x30.png 150w" sizes="(max-width: 430px) 100vw, 430px"></p>
<p><em>Function sub_100057F0</em></p>
<p>The embedded DLL has a hooking strategy similar to that of the Bumblebee loader. Various functions used by the system, while loading a DLL module, are hooked and <em>wups.dll</em> is loaded to trigger the chain.</p>
<p><img decoding="async" loading="lazy" width="793" height="122" class="wp-image-20238" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c561beea25da8_word-image-20158-74.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c561beea25da8_word-image-20158-74.png 793w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-74-300x46.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-74-768x118.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-74-150x23.png 150w" sizes="(max-width: 793px) 100vw, 793px"></p>
<p><em>Hooking of the functions used while loading DLL and loading of wups.dll</em></p>
<table>
<thead>
<tr>
<th><strong>Target API</strong></th>
<th><strong>Detour Function</strong></th>
</tr>
<tr>
<th>ZwMapViewOfSection</th>
<th>sub_10004C50</th>
</tr>
<tr>
<th>ZwOpenSection</th>
<th>sub_10004FF0</th>
</tr>
<tr>
<th>ZwCreateSection</th>
<th>sub_10004BC0</th>
</tr>
<tr>
<th>ZwOpenFile</th>
<th>sub_10004F20</th>
</tr>
</thead>
</table>
<h2><a id="post-20158-_oelgaclamyfp"></a>Code Upgrades In The Wild</h2>
<p>After analyzing many samples in the wild we observed code modifications in the loader.</p>
<p><strong><img decoding="async" loading="lazy" width="1600" height="868" class="wp-image-20239" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fca23693cf7f9ebc38_word-image-20158-75.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fca23693cf7f9ebc38_word-image-20158-75.png 1600w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-75-300x163.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-75-1024x556.png 1024w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-75-768x417.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-75-1536x833.png 1536w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-75-150x81.png 150w" sizes="(max-width: 1600px) 100vw, 1600px"></strong></p>
<p><em>Prominent code modifications done in Bumblebee loader ever since its discovery</em></p>
<p>The extreme left sample in the image above is the one we have covered in this report. As we can see from the logic flow of the loader, the malware developer has modified the loader code in the other two samples. All the samples observed in the wild are 64 bit DLL modules with an exported function that has a randomly generated string as the function name. This can be justified by the fact that code plays a major role in whether the malware is detected by security products. To circumvent this hurdle, malware developers make changes to the code and the malware design.</p>
<p>Newer loader samples in the wild contain various payloads, such as cobaltStrike beacons and Meterpreter shells, unlike the custom bumblebee payload seen in the first generation.</p>
<h2><a id="post-20158-_9rt2aif2xv21"></a>Indicators of Compromise (IoCs)</h2>
<table>
<thead>
<tr>
<th colspan="2"><strong>Binary</strong></th>
</tr>
<tr>
<th colspan="2">f98898df74fb2b2fad3a2ea2907086397b36ae496ef3f4454bf6b7125fc103b8</th>
</tr>
<tr>
<th colspan="2"><strong>IPv4</strong></th>
</tr>
<tr>
<th colspan="2">45.147.229.23:443</th>
</tr>
</thead>
</table>
<h1></h1>
</div><div class="authorbox"><h1 class="heading-12">Author</h1><div class="wrap-v-large author"><img width="Auto" height="Auto" loading="lazy" alt="" src="" class="avatar w-dyn-bind-empty"/></div><div class="wrap-v-tiny"><a href="#" class="author-title w-inline-block"><div class="paragraph-regular-3 text-weight-medium w-dyn-bind-empty"></div></a><p class="paragraph-small-7 text-color-gray-600 w-dyn-bind-empty"></p></div></div></div></div><div class="section-regular-6"><div class="cta-dark"><div class="cta-content"><h2 class="h2-heading-2 text-color-white">Predict Cyber threats against your organization</h2><div class="button-group-l"><a href="/request-a-demo" class="button-secondary w-button">Schedule a Demo</a></div></div><img src="https://cdn.prod.website-files.com/64080e2f7d2a307017bd5ef9/6447b1e7fbda120206a01745_CTA%20Accent%2001.svg" loading="lazy" alt="" class="cta-accent-l"/><img src="https://cdn.prod.website-files.com/64080e2f7d2a307017bd5ef9/6447b1faf354b2155bd93622_CTA%20Accent%2002.svg" loading="lazy" alt="" class="cta-accent-r"/></div></div></div></div></div><header class="rl_section_blogpost1"><div class="rl-padding-global"><div class="rl-container-large"></div><div class="section-13"><div id="w-node-_23fa4c4b-9358-67fd-a1ed-05b26b831b72-d7e506fa" class="uui-heading-medium">Related Posts</div><div class="w-layout-grid grid-16"><div id="w-node-_68b2ce3e-b787-95fc-3108-511aab292764-d7e506fa" class="collection-list-wrapper-9 w-dyn-list"><div role="list" class="collection-list-6 w-dyn-items w-row"><div role="listitem" class="collection-item-13 w-dyn-item w-col w-col-4"><div class="brix---blog-card-wrapper w-container"><a href="/blog/from-discussion-forums-to-malware-mayhem-the-alarming-rise-of-abuse-on-google-groups-and-usenet" class="w-inline-block"><img height="250" alt="Blog Image" width="600" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/65bdd1432dfa0996aced5bb7_usenet%2Bgooglegroups%2Bmalware%2Bblog.webp" sizes="(max-width: 479px) 100vw, (max-width: 767px) 75vw, (max-width: 991px) 25vw, (max-width: 1919px) 26vw, 338.328125px" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/65bdd1432dfa0996aced5bb7_usenet%2Bgooglegroups%2Bmalware%2Bblog-p-500.webp 500w, https://cdn.prod.website-files.com/635e632477408d12d1811a64/65bdd1432dfa0996aced5bb7_usenet%2Bgooglegroups%2Bmalware%2Bblog-p-800.webp 800w, https://cdn.prod.website-files.com/635e632477408d12d1811a64/65bdd1432dfa0996aced5bb7_usenet%2Bgooglegroups%2Bmalware%2Bblog-p-1080.webp 1080w, https://cdn.prod.website-files.com/635e632477408d12d1811a64/65bdd1432dfa0996aced5bb7_usenet%2Bgooglegroups%2Bmalware%2Bblog-p-1600.webp 1600w, https://cdn.prod.website-files.com/635e632477408d12d1811a64/65bdd1432dfa0996aced5bb7_usenet%2Bgooglegroups%2Bmalware%2Bblog-p-2000.webp 2000w, https://cdn.prod.website-files.com/635e632477408d12d1811a64/65bdd1432dfa0996aced5bb7_usenet%2Bgooglegroups%2Bmalware%2Bblog.webp 2048w" class="brix---blog-card-image"/></a><div class="brix---flex-horizontal-start-2"><div class="brix---mg-right-16px"><div class="w-dyn-list"><div role="list" class="w-dyn-items"><div role="listitem" class="w-dyn-item"><a href="/category/adversary-intelligence" class="brix---badge-primary-small-light">Adversary Intelligence</a></div></div></div></div><div class="brix---color-neutral-830"><div class="brix---text-204">February 3, 2024</div></div></div></div><a href="/blog/from-discussion-forums-to-malware-mayhem-the-alarming-rise-of-abuse-on-google-groups-and-usenet" class="w-inline-block"><h2 class="brix---heading-h3-size">From Discussion Forums to Malware Mayhem: The Alarming Rise of Abuse on Google Groups and Usenet</h2></a><p class="brix---paragraph-default-15">Explore the escalating wave of cyber threats on platforms like Google Groups and Usenet, uncovering the pivotal role of cybersecurity in safeguarding online discussion forums.</p></div><div role="listitem" class="collection-item-13 w-dyn-item w-col w-col-4"><div class="brix---blog-card-wrapper w-container"><a href="/blog/redirect-chain-advertisement-services-being-abused-by-threat-actors-to-redirect-users-to-malware-betting-adult-websites" class="w-inline-block"><img height="250" alt="Blog Image" width="600" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/65b0c66ce005f449e8c67dc1_redirect%20chain_cloudsek%20article.webp" sizes="(max-width: 479px) 100vw, (max-width: 767px) 75vw, (max-width: 991px) 25vw, (max-width: 1919px) 26vw, 338.328125px" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/65b0c66ce005f449e8c67dc1_redirect%20chain_cloudsek%20article-p-500.webp 500w, https://cdn.prod.website-files.com/635e632477408d12d1811a64/65b0c66ce005f449e8c67dc1_redirect%20chain_cloudsek%20article-p-800.webp 800w, https://cdn.prod.website-files.com/635e632477408d12d1811a64/65b0c66ce005f449e8c67dc1_redirect%20chain_cloudsek%20article-p-1080.webp 1080w, https://cdn.prod.website-files.com/635e632477408d12d1811a64/65b0c66ce005f449e8c67dc1_redirect%20chain_cloudsek%20article.webp 1456w" class="brix---blog-card-image"/></a><div class="brix---flex-horizontal-start-2"><div class="brix---mg-right-16px"><div class="w-dyn-list"><div role="list" class="w-dyn-items"><div role="listitem" class="w-dyn-item"><a href="/category/adversary-intelligence" class="brix---badge-primary-small-light">Adversary Intelligence</a></div></div></div></div><div class="brix---color-neutral-830"><div class="brix---text-204 w-dyn-bind-empty"></div></div></div></div><a href="/blog/redirect-chain-advertisement-services-being-abused-by-threat-actors-to-redirect-users-to-malware-betting-adult-websites" class="w-inline-block"><h2 class="brix---heading-h3-size">Redirect Chain: Advertisement Services being Abused by Threat Actors to Redirect Users to Malware, Betting, Adult Websites</h2></a><p class="brix---paragraph-default-15">Threat actors have been abusing advertisement services to serve malware to users and redirect traffic to websites purchasing services from them. </p></div><div role="listitem" class="collection-item-13 w-dyn-item w-col w-col-4"><div class="brix---blog-card-wrapper w-container"><a href="/blog/compromising-google-accounts-malwares-exploiting-undocumented-oauth2-functionality-for-session-hijacking" class="w-inline-block"><img height="250" alt="Blog Image" width="600" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/658e6a06e7844e205dae3b77_Auth-google-placeholder.webp" sizes="(max-width: 479px) 100vw, (max-width: 767px) 75vw, (max-width: 991px) 25vw, (max-width: 1919px) 26vw, 338.328125px" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/658e6a06e7844e205dae3b77_Auth-google-placeholder-p-500.webp 500w, https://cdn.prod.website-files.com/635e632477408d12d1811a64/658e6a06e7844e205dae3b77_Auth-google-placeholder-p-800.webp 800w, https://cdn.prod.website-files.com/635e632477408d12d1811a64/658e6a06e7844e205dae3b77_Auth-google-placeholder.webp 1024w" class="brix---blog-card-image"/></a><div class="brix---flex-horizontal-start-2"><div class="brix---mg-right-16px"><div class="w-dyn-list"><div role="list" class="w-dyn-items"><div role="listitem" class="w-dyn-item"><a href="/category/malware" class="brix---badge-primary-small-light">Malware</a></div></div></div></div><div class="brix---color-neutral-830"><div class="brix---text-204">December 29, 2023</div></div></div></div><a href="/blog/compromising-google-accounts-malwares-exploiting-undocumented-oauth2-functionality-for-session-hijacking" class="w-inline-block"><h2 class="brix---heading-h3-size">Compromising Google Accounts: Malwares Exploiting Undocumented OAuth2 Functionality for session hijacking</h2></a><p class="brix---paragraph-default-15">A detailed blog on Analysis of the Global Malware Trend: Exploiting Undocumented OAuth2 Functionality to Regenerate Google Service Cookies Regardless of IP or Password Reset.</p></div></div></div></div></div><div class="uui-cta11_component"><div class="uui-text-align-center"><h3 class="uui-heading-medium">Join 10,000+ subscribers</h3><div class="uui-space-xsmall-3"><div class="uui-text-size-large-5">Keep up with the latest news about strains of Malware, Phishing Lures, <br/>Indicators of Compromise, and Data Leaks.</div></div><div class="w-embed w-iframe"><iframe width="540" height="330" src="https://bc047102.sibforms.com/serve/MUIEAPtEdnFwgNiNf3xW4hk07Y4THowhdDNs_B6MTWneVmcg08tj213Hcxfq-EE7ToLhU3qIL9hwO1IedPcCdOllTbRmUSpvX3hgz_UcmRcqpl4F9nGjodY8JVct_LdIJoIYFLUoDz4tlKzMRDvltQtHpEyFOKrjATMxZi5SNQtRfQZyi8eZmzcN_eOr-BAe51w7SIs360UpxPDp" frameborder="0" scrolling="auto" allowfullscreen style="display: block;margin-left: auto;margin-right: auto;max-width: 100%;"></iframe></div></div></div></div></header><div data-w-id="9b8a45dc-ccee-2fa1-822e-eb12277828b9" style="opacity:0" class="brix---section-6"><div class="brix---container-default-5 w-container"><div data-w-id="9b8a45dc-ccee-2fa1-822e-eb12277828bb" style="opacity:0" class="brix---mg-bottom-48px-3"><div data-w-id="9b8a45dc-ccee-2fa1-822e-eb12277828bc" style="-webkit-transform:translate3d(0, 10%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(0, 10%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(0, 10%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(0, 10%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);opacity:0" class="brix---inner-container-600px---center-3"><div class="brix---text-center-3"><div class="brix---mg-bottom-12px-3"><p class="subtitles-above-titles highlight-centre"><strong class="highlighted-gradient-hero">Take action now</strong></p><div class="brix---color-neutral-807"><h3 class="heading-h2">Secure your organisation with our <span class="text-span">Award winning Products </span></h3></div></div><div class="brix---color-neutral-806"><p class="cloudsek---descr---para---center">CloudSEK Platform is a no-code platform that powers our products with predictive threat analytic capabilities.</p></div></div></div></div><div data-w-id="ad6e106f-fbe8-c977-26ac-7143d92b80a5" style="-webkit-transform:translate3d(0, 10%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(0, 10%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(0, 10%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(0, 10%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);opacity:0" class="w-layout-grid brix---3-columns-1-col-tablet"><a href="/xvigil" class="brix---card-link-content-center w-inline-block"><img src="https://cdn.prod.website-files.com/634fc5026f66af518e897c77/63cfbe7b29c0651a9c7e06fa_xvigil-1.svg" loading="lazy" alt="CloudSEK XVigil"/><div class="brix---mg-bottom-24px-3"><div class="brix---paragraph-default-9"><div class="brix---color-neutral-806"><p>Digital Risk Protection platform which gives Initial Attack Vector Protection for employees and customers.</p></div></div></div><div class="brix---btn-secondary-full-width">Learn more about XVigil</div></a><link rel="prerender" href="/xvigil"/><a href="/svigil" class="brix---card-link-content-center w-inline-block"><div class="brix---mg-bottom-8px-2"><div class="brix---color-neutral-807"><img src="https://cdn.prod.website-files.com/634fc5026f66af518e897c77/63cedeb38938c84ae39d6915_svigil-logo.svg" loading="lazy" alt="CloudSEK SVigil"/></div></div><div class="brix---mg-bottom-24px-3"><div class="brix---paragraph-default-9"><div class="brix---color-neutral-806"><p>Software and Supply chain Monitoring providing Initial Attack Vector Protection for Software Supply Chain risks.</p></div></div></div><div class="brix---btn-secondary-full-width">Learn more about SVigil</div></a><a href="/bevigil-enterprise" class="brix---card-link-content-center w-inline-block"><div class="brix---mg-bottom-8px-2"><div class="brix---color-neutral-807"><img src="https://cdn.prod.website-files.com/634fc5026f66af518e897c77/660b76ab3ebf70d6ce37fc42_Bevigil%20Enterprise-light.svg" loading="lazy" width="175" alt="CloudSEK SVigil"/></div></div><div class="brix---mg-bottom-24px-3"><div class="brix---paragraph-default-9"><div class="brix---color-neutral-806"><p>Creates a blueprint of an organization&#x27;s external attack surface including the core infrastructure and the software components.</p></div></div></div><div class="brix---btn-secondary-full-width">Learn more about BeVigil Ent</div></a><a href="https://bevigil.com/?Ref=Product-tab" class="brix---card-link-content-center w-inline-block"><div class="brix---mg-bottom-8px-2"><div class="brix---color-neutral-807"><img src="https://cdn.prod.website-files.com/634fc5026f66af518e897c77/63cfbde9d193ab55152f7aa4_bevigil-1.svg" loading="lazy" alt="CloudSEK BeVigil"/></div></div><div class="brix---mg-bottom-24px-3"><div class="brix---paragraph-default-9"><div class="brix---color-neutral-806"><p>Instant Security Score for any Android Mobile App on your phone. Search for any app to get an instant risk score.</p></div></div></div><div class="brix---btn-secondary-full-width">Learn more about BeVigil</div></a></div></div></div><footer><footer class="uui-footer05_component"><div class="uui-page-padding-15"><div class="uui-container-large-14"><div class="uui-padding-vertical-xlarge"><div class="uui-footer05_newsletter-wrapper"><div class="uui-footer05_newsletter-text-wrapper"><div class="uui-heading-xxsmall-3">Join our newsletter</div><div class="uui-space-xxsmall-2"></div><div class="uui-text-size-medium-7">Weâll send you a nice letter once per week. No spam.</div></div></div><div class="w-layout-grid uui-footer05_top-wrapper"><a id="w-node-_53d9835d-c979-e555-7dca-3ba0cd6f94f6-b4f9d47e" href="#" class="uui-footer05_logo-link w-inline-block"><div class="uui-logo_component-2"><img src="https://cdn.prod.website-files.com/634fc5026f66af518e897c77/634fc9354ba9486197b82cef_CloudSEK%20Logo.svg" loading="lazy" alt="Untitled UI logotext" class="uui-logo_logotype"/><img src="https://cdn.prod.website-files.com/634fc5026f66af518e897c77/63ccca15993f00c5bb4b42a7_untitled-ui-logo.png" loading="lazy" alt="Logo" class="uui-logo_image-2"/></div></a><div class="uui-footer05_link-list"><div class="uui-footer05_link-list-heading">Product</div><a href="#" class="uui-footer05_link w-inline-block"><div>XVigil</div></a><a href="#" class="uui-footer05_link w-inline-block"><div>BeVigil</div></a><a href="/svigil" class="uui-footer05_link w-inline-block"><div>SVigil</div><div class="uui-badge-small-success-2"><div>New</div></div></a><a href="#" class="uui-footer05_link w-inline-block"><div>Tutorials</div></a><a href="#" class="uui-footer05_link w-inline-block"><div>Pricing</div></a><a href="#" class="uui-footer05_link w-inline-block"><div>Releases</div></a></div><div class="uui-footer05_link-list"><div class="uui-footer05_link-list-heading">Company</div><a href="#" class="uui-footer05_link w-inline-block"><div>About us</div></a><a href="#" class="uui-footer05_link w-inline-block"><div>Careers</div></a><a href="#" class="uui-footer05_link w-inline-block"><div>Press</div></a><a href="#" class="uui-footer05_link w-inline-block"><div>News</div></a><a href="#" class="uui-footer05_link w-inline-block"><div>Media kit</div></a><a href="#" class="uui-footer05_link w-inline-block"><div>Contact</div></a></div><div class="uui-footer05_link-list"><div class="uui-footer05_link-list-heading">Resources</div><a href="#" class="uui-footer05_link w-inline-block"><div>Blog</div></a><a href="#" class="uui-footer05_link w-inline-block"><div>Newsletter</div></a><a href="#" class="uui-footer05_link w-inline-block"><div>Events</div></a><a href="#" class="uui-footer05_link w-inline-block"><div>Help centre</div></a><a href="#" class="uui-footer05_link w-inline-block"><div>Tutorials</div></a><a href="#" class="uui-footer05_link w-inline-block"><div>Support</div></a></div><div class="uui-footer05_link-list"><div class="uui-footer05_link-list-heading">Use Cases</div><a href="#" class="uui-footer05_link w-inline-block"><div>Startups</div></a><a href="#" class="uui-footer05_link w-inline-block"><div>Enterprise</div></a><a href="#" class="uui-footer05_link w-inline-block"><div>Government</div></a><a href="#" class="uui-footer05_link w-inline-block"><div>SaaS</div></a><a href="#" class="uui-footer05_link w-inline-block"><div>Marketplaces</div></a><a href="#" class="uui-footer05_link w-inline-block"><div>Ecommerce</div></a></div><div class="uui-footer05_link-list"><div class="uui-footer05_link-list-heading">Social</div><a href="#" class="uui-footer05_link w-inline-block"><div>Twitter</div></a><a href="#" class="uui-footer05_link w-inline-block"><div>LinkedIn</div></a><a href="#" class="uui-footer05_link w-inline-block"><div>Facebook</div></a><a href="#" class="uui-footer05_link w-inline-block"><div>GitHub</div></a><a href="#" class="uui-footer05_link w-inline-block"><div>AngelList</div></a><a href="#" class="uui-footer05_link w-inline-block"><div>Dribbble</div></a></div></div><div class="uui-footer05_bottom-wrapper"><div class="uui-footer05_legal-list-wrapper"><div class="uui-text-size-small-6 text-color-gray500">Â© 2077 Untitled UI</div><div class="w-layout-grid uui-footer05_legal-list"><a href="#" class="uui-footer05_legal-link">Privacy</a><a href="#" class="uui-footer05_legal-link">GDPR</a><a href="#" class="uui-footer05_legal-link">Disclosure of Vulnerability</a></div></div><div class="w-layout-grid uui-footer05_social-icons"><a href="#" class="uui-footer05_social-link w-inline-block"><div class="uui-footer05_social-icon w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 17.9895 4.3882 22.954 10.125 23.8542V15.4688H7.07812V12H10.125V9.35625C10.125 6.34875 11.9166 4.6875 14.6576 4.6875C15.9701 4.6875 17.3438 4.92188 17.3438 4.92188V7.875H15.8306C14.34 7.875 13.875 8.80008 13.875 9.75V12H17.2031L16.6711 15.4688H13.875V23.8542C19.6118 22.954 24 17.9895 24 12Z" fill="currentColor"/>
</svg></div></a><a href="#" class="uui-footer05_social-link w-inline-block"><div class="uui-footer05_social-icon w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M12 2.16094C15.2063 2.16094 15.5859 2.175 16.8469 2.23125C18.0188 2.28281 18.6516 2.47969 19.0734 2.64375C19.6313 2.85938 20.0344 3.12188 20.4516 3.53906C20.8734 3.96094 21.1313 4.35938 21.3469 4.91719C21.5109 5.33906 21.7078 5.97656 21.7594 7.14375C21.8156 8.40937 21.8297 8.78906 21.8297 11.9906C21.8297 15.1969 21.8156 15.5766 21.7594 16.8375C21.7078 18.0094 21.5109 18.6422 21.3469 19.0641C21.1313 19.6219 20.8688 20.025 20.4516 20.4422C20.0297 20.8641 19.6313 21.1219 19.0734 21.3375C18.6516 21.5016 18.0141 21.6984 16.8469 21.75C15.5813 21.8063 15.2016 21.8203 12 21.8203C8.79375 21.8203 8.41406 21.8063 7.15313 21.75C5.98125 21.6984 5.34844 21.5016 4.92656 21.3375C4.36875 21.1219 3.96563 20.8594 3.54844 20.4422C3.12656 20.0203 2.86875 19.6219 2.65313 19.0641C2.48906 18.6422 2.29219 18.0047 2.24063 16.8375C2.18438 15.5719 2.17031 15.1922 2.17031 11.9906C2.17031 8.78438 2.18438 8.40469 2.24063 7.14375C2.29219 5.97187 2.48906 5.33906 2.65313 4.91719C2.86875 4.35938 3.13125 3.95625 3.54844 3.53906C3.97031 3.11719 4.36875 2.85938 4.92656 2.64375C5.34844 2.47969 5.98594 2.28281 7.15313 2.23125C8.41406 2.175 8.79375 2.16094 12 2.16094ZM12 0C8.74219 0 8.33438 0.0140625 7.05469 0.0703125C5.77969 0.126563 4.90313 0.332812 4.14375 0.628125C3.35156 0.9375 2.68125 1.34531 2.01563 2.01562C1.34531 2.68125 0.9375 3.35156 0.628125 4.13906C0.332812 4.90313 0.126563 5.775 0.0703125 7.05C0.0140625 8.33437 0 8.74219 0 12C0 15.2578 0.0140625 15.6656 0.0703125 16.9453C0.126563 18.2203 0.332812 19.0969 0.628125 19.8563C0.9375 20.6484 1.34531 21.3188 2.01563 21.9844C2.68125 22.65 3.35156 23.0625 4.13906 23.3672C4.90313 23.6625 5.775 23.8687 7.05 23.925C8.32969 23.9812 8.7375 23.9953 11.9953 23.9953C15.2531 23.9953 15.6609 23.9812 16.9406 23.925C18.2156 23.8687 19.0922 23.6625 19.8516 23.3672C20.6391 23.0625 21.3094 22.65 21.975 21.9844C22.6406 21.3188 23.0531 20.6484 23.3578 19.8609C23.6531 19.0969 23.8594 18.225 23.9156 16.95C23.9719 15.6703 23.9859 15.2625 23.9859 12.0047C23.9859 8.74688 23.9719 8.33906 23.9156 7.05938C23.8594 5.78438 23.6531 4.90781 23.3578 4.14844C23.0625 3.35156 22.6547 2.68125 21.9844 2.01562C21.3188 1.35 20.6484 0.9375 19.8609 0.632812C19.0969 0.3375 18.225 0.13125 16.95 0.075C15.6656 0.0140625 15.2578 0 12 0Z" fill="currentColor"/>
<path d="M12 5.83594C8.59688 5.83594 5.83594 8.59688 5.83594 12C5.83594 15.4031 8.59688 18.1641 12 18.1641C15.4031 18.1641 18.1641 15.4031 18.1641 12C18.1641 8.59688 15.4031 5.83594 12 5.83594ZM12 15.9984C9.79219 15.9984 8.00156 14.2078 8.00156 12C8.00156 9.79219 9.79219 8.00156 12 8.00156C14.2078 8.00156 15.9984 9.79219 15.9984 12C15.9984 14.2078 14.2078 15.9984 12 15.9984Z" fill="currentColor"/>
<path d="M19.8469 5.59214C19.8469 6.38902 19.2 7.0312 18.4078 7.0312C17.6109 7.0312 16.9688 6.38433 16.9688 5.59214C16.9688 4.79526 17.6156 4.15308 18.4078 4.15308C19.2 4.15308 19.8469 4.79995 19.8469 5.59214Z" fill="currentColor"/>
</svg></div></a><a href="#" class="uui-footer05_social-link w-inline-block"><div class="uui-footer05_social-icon w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M7.55016 21.75C16.6045 21.75 21.5583 14.2467 21.5583 7.74186C21.5583 7.53092 21.5536 7.3153 21.5442 7.10436C22.5079 6.40746 23.3395 5.54425 24 4.5553C23.1025 4.9546 22.1496 5.21538 21.1739 5.32874C22.2013 4.71291 22.9705 3.74547 23.3391 2.60577C22.3726 3.17856 21.3156 3.58261 20.2134 3.80061C19.4708 3.01156 18.489 2.48912 17.4197 2.31405C16.3504 2.13899 15.2532 2.32105 14.2977 2.8321C13.3423 3.34314 12.5818 4.15471 12.1338 5.14131C11.6859 6.12792 11.5754 7.23462 11.8195 8.2903C9.86249 8.19209 7.94794 7.6837 6.19998 6.7981C4.45203 5.91249 2.90969 4.66944 1.67297 3.14952C1.0444 4.23324 0.852057 5.51565 1.13503 6.73609C1.418 7.95654 2.15506 9.02345 3.19641 9.71999C2.41463 9.69517 1.64998 9.48468 0.965625 9.10592V9.16686C0.964925 10.3041 1.3581 11.4066 2.07831 12.2868C2.79852 13.167 3.80132 13.7706 4.91625 13.995C4.19206 14.1931 3.43198 14.222 2.69484 14.0794C3.00945 15.0574 3.62157 15.9129 4.44577 16.5263C5.26997 17.1398 6.26512 17.4806 7.29234 17.5012C5.54842 18.8711 3.39417 19.6141 1.17656 19.6106C0.783287 19.61 0.390399 19.5859 0 19.5384C2.25286 20.9837 4.87353 21.7514 7.55016 21.75Z" fill="currentColor"/>
</svg></div></a><a href="#" class="uui-footer05_social-link w-inline-block"><div class="uui-footer05_social-icon w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M22.2234 0H1.77187C0.792187 0 0 0.773438 0 1.72969V22.2656C0 23.2219 0.792187 24 1.77187 24H22.2234C23.2031 24 24 23.2219 24 22.2703V1.72969C24 0.773438 23.2031 0 22.2234 0ZM7.12031 20.4516H3.55781V8.99531H7.12031V20.4516ZM5.33906 7.43438C4.19531 7.43438 3.27188 6.51094 3.27188 5.37187C3.27188 4.23281 4.19531 3.30937 5.33906 3.30937C6.47813 3.30937 7.40156 4.23281 7.40156 5.37187C7.40156 6.50625 6.47813 7.43438 5.33906 7.43438ZM20.4516 20.4516H16.8937V14.8828C16.8937 13.5562 16.8703 11.8453 15.0422 11.8453C13.1906 11.8453 12.9094 13.2937 12.9094 14.7891V20.4516H9.35625V8.99531H12.7687V10.5609H12.8156C13.2891 9.66094 14.4516 8.70938 16.1813 8.70938C19.7859 8.70938 20.4516 11.0813 20.4516 14.1656V20.4516Z" fill="currentColor"/>
</svg></div></a></div></div></div></div></div></footer><section class="section-regular-8 bg-brown"><div class="container-large-8"><div class="w-layout-grid footer-grid-c"><div id="w-node-_2ea9d89e-b6c8-5dfa-9484-0f34ae39dde2-b4f9d47e" class="wrap-v-giantic"><div class="wrap-v-large"><div class="footer-title">Products</div><div class="wrap-v-regular-2"><a href="/xvigil" class="footer-link w-inline-block"><div>XVigil</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="/bevigil-enterprise" class="footer-link w-inline-block"><div>BeVigil Enterprise</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="/svigil" class="footer-link w-inline-block"><div>SVigil</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="https://bevigil.com/" target="_blank" class="footer-link w-inline-block"><div>BeVigil</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="https://exposure.cloudsek.com/?ref=footer" target="_blank" class="footer-link w-inline-block"><div>CloudSEKÂ Exposure</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a></div></div><div class="wrap-v-large"><div class="footer-title">Mobile App</div><div class="wrap-v-regular-2"><a href="https://play.google.com/store/apps/details?id=com.cloudsek.bevigil&amp;hl=cloudsekfooter&amp;gl=US&amp;pli=1" target="_blank" class="footer-link w-inline-block"><img src="https://cdn.prod.website-files.com/634fc5026f66af518e897c77/65a397910cdede4ab2583442_en_badge_web_generic.png" loading="lazy" width="157" alt="Google Play button to download App
"/><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a></div></div></div><div id="w-node-_2ea9d89e-b6c8-5dfa-9484-0f34ae39ddff-b4f9d47e" class="wrap-v-giantic"><div class="wrap-v-large"><div class="footer-title">Solutions</div><div class="wrap-v-regular-2"><a href="/cyber-threats" class="footer-link w-inline-block"><div>Cyber Threats Monitoring</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="/cyber-threats/dark-web-monitoring" class="footer-link w-inline-block"><div>Dark Web Monitoring</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="/brand-monitor" class="footer-link w-inline-block"><div>Brand Threat Monitoring</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="/infrastructure-monitor" class="footer-link w-inline-block"><div>Infra Threat Monitoring</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="https://bevigil.com/bevigil-secrets-scanning-partner-program/?Ref=Footer" class="footer-link w-inline-block"><div>Partners Secret Scanning </div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="https://plugins.jenkins.io/bevigil-ci/?Ref=Footer" class="footer-link w-inline-block"><div>BeVigil Jenkins CI</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="https://github.com/Bevigil/BeVigil-OSINT-CLI/?Ref=Footer" class="footer-link w-inline-block"><div>BeVigil OSINT CLI</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="https://bevigil.com/osint-api/?Ref=footer" class="footer-link w-inline-block"><div>BeVigil Asset Explorer</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="/takedowns" class="footer-link w-inline-block"><div>Takedowns</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a></div></div></div><div id="w-node-_2ea9d89e-b6c8-5dfa-9484-0f34ae39de24-b4f9d47e" class="wrap-v-giantic"><div class="wrap-v-large"><div class="footer-title">Resources</div><div class="wrap-v-regular-2"><a href="/blog" class="footer-link w-inline-block"><div>Blogs and Articles</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="/threatintelligence" class="footer-link w-inline-block"><div>Threat Intelligence</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="/whitepapers-reports" class="footer-link w-inline-block"><div>Whitepapers and Reports</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="/knowledgebase" class="footer-link w-inline-block"><div>Knowledge Base</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="/integrations" class="footer-link w-inline-block"><div>Integrations</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a></div></div><div class="wrap-v-large"><div class="footer-title">Community</div><div class="wrap-v-regular-2"><a href="https://discord.gg/h9hgFQC3qz" target="_blank" class="footer-link w-inline-block"><div>Discord Community</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="https://news.cloudsek.com/?Ref=footer" class="footer-link w-inline-block"><div>CloudSEKÂ News</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="/campaigns/cloudsek-in-community" class="footer-link w-inline-block"><div>CloudSEKÂ Community</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a></div></div></div><div id="w-node-_2ea9d89e-b6c8-5dfa-9484-0f34ae39de45-b4f9d47e" class="wrap-v-giantic"><div class="wrap-v-large"><div class="footer-title">Company</div><div class="wrap-v-regular-2"><a href="/about-us" class="footer-link w-inline-block"><div>About us</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="/customers" class="footer-link w-inline-block"><div>Customers</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="/partners" class="footer-link w-inline-block"><div>Partners</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="/work-life" class="footer-link w-inline-block"><div>Life at CloudSEK</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="https://www.cloudsek.com/work-life#securesips" class="footer-link w-inline-block"><div>Secure Sips</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="/openings" class="footer-link w-inline-block"><div>Careers</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="/announcements" class="footer-link w-inline-block"><div>Announcements</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="/press" class="footer-link w-inline-block"><div>Press</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="/contact" class="footer-link w-inline-block"><div>Contact Us</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a></div></div></div></div><div class="footer-newsletter"><div class="newsletter-content"><div class="footer-logo-wrap"><a href="#" class="footer-logo w-inline-block"><img src="https://cdn.prod.website-files.com/634fc5026f66af518e897c77/634fc9354ba9486197b82cef_CloudSEK%20Logo.svg" loading="lazy" width="134" alt="CloudSEK Logo"/></a><div class="footer-line"></div><div class="wrap-h-small"><a href="https://www.youtube.com/channel/UCuueHDbi46tSFrULlCTQakA" class="footer-social-link w-inline-block"><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M19.1572 7.8735C19.5 9.21 19.5 12 19.5 12C19.5 12 19.5 14.79 19.1572 16.1265C18.9667 16.8653 18.4095 17.4465 17.7037 17.643C16.422 18 12 18 12 18C12 18 7.58025 18 6.29625 17.643C5.5875 17.4435 5.031 16.863 4.84275 16.1265C4.5 14.79 4.5 12 4.5 12C4.5 12 4.5 9.21 4.84275 7.8735C5.03325 7.13475 5.5905 6.5535 6.29625 6.357C7.58025 6 12 6 12 6C12 6 16.422 6 17.7037 6.357C18.4125 6.5565 18.969 7.137 19.1572 7.8735ZM10.5 14.625L15 12L10.5 9.375V14.625Z" fill="currentColor"/>
</svg></div></a><a href="https://twitter.com/cloudsek" class="footer-social-link w-inline-block"><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M19.6212 7.242C19.0487 7.49527 18.4415 7.6616 17.8197 7.7355C18.475 7.34357 18.9655 6.72676 19.1997 6C18.5847 6.366 17.9105 6.6225 17.2077 6.76125C16.7357 6.25618 16.11 5.92122 15.428 5.80844C14.7459 5.69565 14.0457 5.81137 13.4362 6.13759C12.8267 6.46381 12.342 6.98226 12.0576 7.61234C11.7731 8.24242 11.7048 8.94883 11.8632 9.62175C10.6161 9.55924 9.39598 9.23514 8.2822 8.6705C7.16842 8.10585 6.18583 7.31328 5.39823 6.34425C5.11945 6.82309 4.97295 7.36742 4.97373 7.9215C4.97373 9.009 5.52723 9.96975 6.36873 10.5322C5.87074 10.5166 5.38371 10.3821 4.94823 10.14V10.179C4.94838 10.9033 5.19901 11.6052 5.65762 12.1658C6.11623 12.7264 6.7546 13.1111 7.46448 13.2547C7.0022 13.38 6.51746 13.3985 6.04698 13.3087C6.24713 13.9322 6.63724 14.4774 7.16268 14.8681C7.68812 15.2588 8.32258 15.4753 8.97723 15.4875C8.32659 15.9985 7.58162 16.3762 6.78489 16.5991C5.98817 16.822 5.15533 16.8857 4.33398 16.7865C5.76776 17.7086 7.43681 18.1981 9.14148 18.1965C14.9112 18.1965 18.0665 13.4167 18.0665 9.2715C18.0665 9.1365 18.0627 9 18.0567 8.8665C18.6709 8.42262 19.2009 7.87276 19.622 7.24275L19.6212 7.242Z" fill="currentColor"/>
</svg></div></a><a href="https://instagram.com/cloudsek" class="footer-social-link w-inline-block"><img src="https://cdn.prod.website-files.com/634fc5026f66af518e897c77/65a3899f4d2aa04c79ea33d0_instagram.png" loading="lazy" alt=""/></a><a href="https://www.linkedin.com/company/cloudsek/" target="_blank" class="footer-social-link w-inline-block"><img src="https://cdn.prod.website-files.com/634fc5026f66af518e897c77/65a6d0069161d4f7729cb2e4_linkedin%20(1).png" loading="lazy" alt="Linkedin Icon
"/></a><a href="https://facebook.com/cloudsek" class="footer-social-link w-inline-block"><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M12 4.5C7.85775 4.5 4.5 7.87819 4.5 12.0457C4.5 15.8117 7.24275 18.9333 10.8285 19.5V14.2263H8.9235V12.0457H10.8285V10.3833C10.8285 8.4924 11.9475 7.44809 13.6613 7.44809C14.4818 7.44809 15.3397 7.59523 15.3397 7.59523V9.45146H14.3947C13.4625 9.45146 13.1722 10.0332 13.1722 10.6301V12.0457H15.252L14.9198 14.2263H13.1722V19.5C16.7572 18.9341 19.5 15.8109 19.5 12.0457C19.5 7.87819 16.1423 4.5 12 4.5Z" fill="currentColor"/>
</svg></div></a></div></div><p class="paragraph-small-7">At CloudSEK, we combine the power of Cyber Intelligence, Brand Monitoring, Attack Surface Monitoring, Infrastructure Monitoring and Supply Chain Intelligence to give context to our customersâ digital risks.</p><div class="newsletter-legal-wrap"><a href="/privacy/gdpr" class="legal-link w-inline-block"><div>GDPR Policy</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="/privacy" class="legal-link w-inline-block"><div>Privacy</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a><a href="/security/vulnerability-disclosure" class="legal-link w-inline-block"><div>Vulnerability Disclosure</div><div class="icon-regular-2 w-embed"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.0021 10.0605L8.54683 16.5157L7.48633 15.4553L13.9408 9H8.25208V7.5H16.5021V15.75H15.0021V10.0605Z" fill="currentColor"/>
</svg></div></a></div></div><div class="footer-form-wrap"><div class="subheading-regular text-weight-normal">Subscribe our newsletter</div><div class="form-block-2 w-form"><form id="email-form" name="email-form" data-name="Email Form" method="get" class="form-v" data-wf-page-id="643d86bee5710968d7e506fa" data-wf-element-id="2ea9d89e-b6c8-5dfa-9484-0f34ae39de82"><div class="form-wrap"><input class="text-field-2 w-input" maxlength="256" name="Email-Form-Career" data-name="Email Form Career" placeholder="Enter your email" type="email" id="Email-Form-Career"/><input type="submit" data-wait="Please wait..." class="button-primary-l-2 w-button" value="Get started"/></div><label class="w-checkbox checkbox-field-2"><div class="w-checkbox-input w-checkbox-input--inputType-custom checkbox-2"></div><input type="checkbox" id="checkbox" name="checkbox" data-name="Checkbox" style="opacity:0;position:absolute;z-index:-1"/><span class="checkbox-label-2 w-form-label" for="checkbox">I agree with <a href="#" class="text-link">Terms and Condition</a></span></label></form><div class="w-form-done"><div>Thank you! Your submission has been received!</div></div><div class="w-form-fail"><div>Oops! Something went wrong while submitting the form.</div></div></div></div></div></div></section></footer><div class="f-section-large-5"><div class="f-container-regular"><div class="w-layout-grid f-blog-grid"><div id="w-node-_8f4949c4-37d4-db34-3b50-5dcd79ecbd59-d7e506fa" class="f-blog-wrapper"><div class="f-blog-category-wrapper"><div class="w-dyn-list"><div role="list" class="w-dyn-items"><div role="listitem" class="w-dyn-item"><div class="blog-category-title-2">Malware Intelligence</div></div></div></div><div class="blog-icon"><div class="icon-standard-small w-embed"><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M8 0L10.1607 5.83927L16 8L10.1607 10.1607L8 16L5.83927 10.1607L0 8L5.83927 5.83927L8 0Z" fill="#642EFF"/>
</svg></div></div><p class="paragraph-normal-normal w-dyn-bind-empty"></p><p class="paragraph-normal-normal">min read</p></div><h1 class="f-h4-heading">Technical Analysis of Bumblebee Malware Loader</h1><p>Technical Analysis of Bumblebee Malware Loader</p><div class="f-blog-line-normal"></div><div class="f-margin-bottom-20"><div class="f-heading-detail-small-2 text-color-gray-900">Authors</div></div><a href="#" class="link-block-5 w-inline-block"><div class="f-blog-avatar-wrapper-small"><div class="f-blog-avatar"><img alt="" loading="lazy" src="" class="f-avatar-image-4 w-dyn-bind-empty"/></div><div class="f-blog-avatar-name"><div class="paragraph-normal-bold w-dyn-bind-empty"></div><div class="f-paragraph-small-3 w-dyn-bind-empty"></div></div></div></a><div class="div-block-322"></div><div class="f-heading-detail-small-2 text-color-gray-900">Co-Authors</div><div class="w-dyn-list"><div class="w-dyn-empty"><div>No items found.</div></div></div><div class="f-blog-line-normal"></div></div><div id="w-node-_8f4949c4-37d4-db34-3b50-5dcd79ecbd95-d7e506fa" class="f-blog-wrapper"><div class="f-margin-bottom-64"><div class="f-blog-thumbnail-xl"><img alt="" loading="lazy" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/64062bd32c1bbdcb6c3db8d4_bumblee-malware-analysis.jpeg" sizes="100vw" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/64062bd32c1bbdcb6c3db8d4_bumblee-malware-analysis-p-500.jpeg 500w, https://cdn.prod.website-files.com/635e632477408d12d1811a64/64062bd32c1bbdcb6c3db8d4_bumblee-malware-analysis.jpeg 1080w" class="f-image-cover"/></div></div><div class="f-blog-content margin-bottom-40"><div class="rich-text-block-7 w-richtext"><h1></h1>
<p>Malware loaders are essentially remote access trojans (RATs) that establish communication between the attacker and the compromised system. Loaders typically represent the first stage of a compromise. Their primary goal is to download and execute additional payloads, from the attacker-controlled server, on the compromised system without detection.</p>
<p>Researchers at ProofPoint have discovered a new malware loader called Bumblebee. The malware loader is named after a unique user agent string used for C2 communication. It has been observed that adversaries have started using Bumblebee to deploy malware such as CobaltStrike beacons and Meterpreter shells. Threat group TA578 has also been using Bumblebee the loader in their campaigns.</p>
<p>This article explores and decodes Bumblebee malware loaderâs:</p>
<ul>
<li>Technical features</li>
<li>Logic flow</li>
<li>Exploitation process</li>
<li>Network maintenance</li>
<li>Unique features</li>
</ul>
<h2><a id="post-20158-_8z79ttd1rn5b"></a>Campaign Delivery</h2>
<p>Adversaries push ISO files through compromised email (reply) chains, known as thread hijacked emails, to deploy the Bumblebee loader. ISO files contain a byte-to-byte copy of low-level data stored on a disk. The malicious ISO files are delivered through Google Cloud links or password protected zip folders.</p>
<figure id="attachment_20159" aria-describedby="caption-attachment-20159" style="width: 671px" class="wp-caption aligncenter"><img decoding="async" loading="lazy" class="wp-image-20159" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5694e8a25d90_word-image-20158-1.png" alt="ISO file retrieved from Google Cloud (âstorage.googleapis.comâ)" width="671" height="143" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5694e8a25d90_word-image-20158-1.png 671w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-1-300x64.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-1-150x32.png 150w" sizes="(max-width: 671px) 100vw, 671px"><figcaption id="caption-attachment-20159" class="wp-caption-text">ISO file retrieved from Google Cloud (âstorage.googleapis.comâ)</figcaption></figure>
<p>&nbsp;</p>
<figure id="attachment_20160" aria-describedby="caption-attachment-20160" style="width: 631px" class="wp-caption aligncenter"><img decoding="async" loading="lazy" class="wp-image-20160" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56bd8aa25d8a_word-image-20158-2.png" alt="ISO file retrieved from password protected zip files" width="631" height="98" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56bd8aa25d8a_word-image-20158-2.png 631w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-2-300x47.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-2-150x23.png 150w" sizes="(max-width: 631px) 100vw, 631px"><figcaption id="caption-attachment-20160" class="wp-caption-text">ISO file retrieved from password protected zip files</figcaption></figure>
<p>&nbsp;</p>
<p>The ISO files contain a hidden DLL with random names and an LNK file. DLL (Dynamic Link Library) is a library that contains codes and data which can be used by more than one program at a time. LNK is a filename extension in Microsoft Windows for shortcuts to local files.</p>
<p>The LNK file often contains a direct link to an executable file or metadata about the executable file, without the need to trace the programâs full path. LNK files are an attractive alternative to opening a file, and thus an effective way for threat actors to create script-based attacks. The target location for the LNK files is set to run <em>rundll32.exe</em>, which will call an exported function in the associated DLL. If the âshow hidden itemsâ option is not enabled on the victimâs system, DLLs may not be visible to the user.</p>
<h2><a id="post-20158-_5dkgwy3l178b"></a>Bumblebee Loader Analysis</h2>
<p>The analyzed sample <code>(f98898df74fb2b2fad3a2ea2907086397b36ae496ef3f4454bf6b7125fc103b8)</code> is a DLL file with exported functions.</p>
<p><img decoding="async" loading="lazy" width="638" height="99" class="wp-image-20161" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c561c68a25da0_word-image-20158-3.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c561c68a25da0_word-image-20158-3.png 638w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-3-300x47.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-3-150x23.png 150w" sizes="(max-width: 638px) 100vw, 638px"></p>
<p><em>Exported functions in the sample DLL file</em></p>
<p>Both the exported functions, <em>IternalJob</em> and <em>SetPath</em>, execute the function <em>sub_180004AA0</em>.</p>
<p><img decoding="async" loading="lazy" width="287" height="100" class="wp-image-20162" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56f9c7a25d8d_word-image-20158-4.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56f9c7a25d8d_word-image-20158-4.png 287w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-4-150x52.png 150w" sizes="(max-width: 287px) 100vw, 287px"> <img decoding="async" loading="lazy" width="305" height="77" class="wp-image-20163" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0faa236935f2b9ebbba_word-image-20158-5.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0faa236935f2b9ebbba_word-image-20158-5.png 305w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-5-300x76.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-5-150x38.png 150w" sizes="(max-width: 305px) 100vw, 305px"></p>
<p><em> InternalJob executing the function sub_180004AA0 SetPath executing the function sub_180004AA0</em></p>
<h3><a id="post-20158-_2xhud5yxzwsd"></a>Entropy of the DLL</h3>
<p>The entropy of a file measures the randomness of the data in the file. Entropy can be used to determine whether there is hidden data or suspicious scripts in the file. The scale of entropy is from 0 (not random) to 8 (totally random). High entropy values indicate that there is encrypted data stored in the file, while lower values indicate the decryption and storage of payload in different sections during runtime.</p>
<figure id="attachment_20164" aria-describedby="caption-attachment-20164" style="width: 1591px" class="wp-caption alignnone"><img decoding="async" loading="lazy" class="wp-image-20164" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0faa236934d3c9ebb8d_word-image-20158-6.jpeg" alt="Entropy of the Malware Sample" width="1591" height="536" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0faa236934d3c9ebb8d_word-image-20158-6.jpeg 1591w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-6-300x101.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-6-1024x345.jpeg 1024w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-6-768x259.jpeg 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-6-1536x517.jpeg 1536w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-6-150x51.jpeg 150w" sizes="(max-width: 1591px) 100vw, 1591px"><figcaption id="caption-attachment-20164" class="wp-caption-text">Entropy of the Malware Sample</figcaption></figure>
<p>&nbsp;</p>
<p>The peak is spread across the data segments of the DLL file. It is highly possible that this peak was caused by the presence of packed data in the data segments of the sample DLL. This indicates that the malware, at some point in runtime, will fetch the data from the data segment and unpack it for later use.</p>
<h3><a id="post-20158-_warrsmfjw6sw"></a>Unpacking and Deploying Payload (Function sub_180004AA0)</h3>
<p>The exported function <em>sub_180004AA0</em> is a critical component in unpacking and deploying the main payload on the target system.</p>
<figure id="attachment_20165" aria-describedby="caption-attachment-20165" style="width: 826px" class="wp-caption aligncenter"><img decoding="async" loading="lazy" class="wp-image-20165" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0faa236931f6e9ebbe3_word-image-20158-7.png" alt="Exported Function sub_180004AA0" width="826" height="426" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0faa236931f6e9ebbe3_word-image-20158-7.png 826w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-7-300x155.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-7-768x396.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-7-150x77.png 150w" sizes="(max-width: 826px) 100vw, 826px"><figcaption id="caption-attachment-20165" class="wp-caption-text">Exported Function sub_180004AA0</figcaption></figure>
<p>&nbsp;</p>
<p>The function <em>sub_180003490 </em>serves as the unpacker for the main payload.</p>
<figure id="attachment_20166" aria-describedby="caption-attachment-20166" style="width: 847px" class="wp-caption alignnone"><img decoding="async" loading="lazy" class="wp-image-20166" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fca2369361a29ebc37_word-image-20158-8.png" alt="Function sub_180003490" width="847" height="603" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fca2369361a29ebc37_word-image-20158-8.png 847w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-8-300x214.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-8-768x547.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-8-150x107.png 150w" sizes="(max-width: 847px) 100vw, 847px"><figcaption id="caption-attachment-20166" class="wp-caption-text">Function sub_180003490</figcaption></figure>
<p>&nbsp;</p>
<h4><a id="post-20158-_oafsnvh8xuuc"></a>Function sub_180003490</h4>
<p>Function <em>sub_180003490 </em>contains 2 functions of interest:</p>
<p><strong><em>sub_1800021D0:</em></strong> This function routine is responsible for allocating heap memory.</p>
<figure id="attachment_20167" aria-describedby="caption-attachment-20167" style="width: 937px" class="wp-caption aligncenter"><img decoding="async" loading="lazy" class="wp-image-20167" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fba2369339fb9ebbe6_word-image-20158-9.png" alt="Function sub_1800021D0" width="937" height="250" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fba2369339fb9ebbe6_word-image-20158-9.png 937w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-9-300x80.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-9-768x205.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-9-150x40.png 150w" sizes="(max-width: 937px) 100vw, 937px"><figcaption id="caption-attachment-20167" class="wp-caption-text">Function sub_1800021D0</figcaption></figure>
<p>&nbsp;</p>
<p><strong><em>sub_1800029BC: </em></strong>This function writes the embedded data, in the data segment of the DLL sample, into the newly allocated heap memory. The packed payload is fetched from the data segment and written into allocated heap memory. The code segment highlighted in the image below is responsible for transferring the data.</p>
<figure id="attachment_20168" aria-describedby="caption-attachment-20168" style="width: 955px" class="wp-caption aligncenter"><img decoding="async" loading="lazy" class="wp-image-20168" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fba23693ff849ebc0c_word-image-20158-10.png" alt="Function sub_1800029BC" width="955" height="513" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fba23693ff849ebc0c_word-image-20158-10.png 955w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-10-300x161.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-10-768x413.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-10-150x81.png 150w" sizes="(max-width: 955px) 100vw, 955px"><figcaption id="caption-attachment-20168" class="wp-caption-text">Function sub_1800029BC</figcaption></figure>
<h3><a id="post-20158-_m8scala40gid"></a>Function sub_1800029BC</h3>
<figure id="attachment_20169" aria-describedby="caption-attachment-20169" style="width: 681px" class="wp-caption aligncenter"><img decoding="async" loading="lazy" class="wp-image-20169" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0faa2369343759ebbb9_word-image-20158-11.jpeg" alt="Assembly code representation of function sub_1800029BC" width="681" height="213" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0faa2369343759ebbb9_word-image-20158-11.jpeg 681w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-11-300x94.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-11-150x47.jpeg 150w" sizes="(max-width: 681px) 100vw, 681px"><figcaption id="caption-attachment-20169" class="wp-caption-text">Assembly code representation of function sub_1800029BC</figcaption></figure>
<p>&nbsp;</p>
<ul>
<li>The assembly code highlighted yellow transfers the embedded data (packed payload) from the data segment of DLL to an intermediate CL register.</li>
<li>The assembly code highlighted red transfers the data from CL to the allocated heap. During runtime, the heap memory continues to get filled with the packed payload embedded within the DLL samples.</li>
</ul>
<figure id="attachment_20170" aria-describedby="caption-attachment-20170" style="width: 715px" class="wp-caption aligncenter"><img decoding="async" loading="lazy" class="wp-image-20170" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fba2369317379ebc07_word-image-20158-12.jpeg" alt="Heap memory during run time" width="715" height="490" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fba2369317379ebc07_word-image-20158-12.jpeg 715w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-12-300x206.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-12-150x103.jpeg 150w" sizes="(max-width: 715px) 100vw, 715px"><figcaption id="caption-attachment-20170" class="wp-caption-text">Heap memory during run time</figcaption></figure>
<p>&nbsp;</p>
<h3><a id="post-20158-_wx1t4y1uxuoj"></a>Function sub_180002FF4</h3>
<p>After dumping the packed payload in the allocated memory, the control goes back to <em>sub_180004AA0</em> and function <em>sub_180002FF4</em> is executed.</p>
<p><img decoding="async" loading="lazy" width="715" height="445" class="wp-image-20171" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c562c1ea25dc9_word-image-20158-13.jpeg" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c562c1ea25dc9_word-image-20158-13.jpeg 715w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-13-300x187.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-13-150x93.jpeg 150w" sizes="(max-width: 715px) 100vw, 715px"></p>
<p><em>Function sub_180002FF4</em></p>
<p>Function <em>sub_180002FF4 </em>performs the following operations:</p>
<ul>
<li>Allocates new heap memory.</li>
<li>Transfers previously dumped packed payload into newly allocated memory.</li>
<li>Deallocates previously allocated memory.</li>
</ul>
<p>After the control returns to <em>sub_180004AA0</em> function <em>sub_180004180</em> is executed.</p>
<p><img decoding="async" loading="lazy" width="715" height="445" class="wp-image-20172" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56225ba25dca_word-image-20158-14.jpeg" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56225ba25dca_word-image-20158-14.jpeg 715w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-14-300x187.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-14-150x93.jpeg 150w" sizes="(max-width: 715px) 100vw, 715px"></p>
<p><em>Function sub_180004180</em></p>
<h3><a id="post-20158-_sopbg231mz0z"></a>Function sub_180004180</h3>
<p><img decoding="async" loading="lazy" width="644" height="132" class="wp-image-20173" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c561fc1a25d92_word-image-20158-15.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c561fc1a25d92_word-image-20158-15.png 644w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-15-300x61.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-15-640x132.png 640w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-15-150x31.png 150w" sizes="(max-width: 644px) 100vw, 644px"></p>
<p><em>Three functions encapsulated in Function sub_180004180</em></p>
<p>Function <em>sub_180004180 </em>has 3 functions:</p>
<ul>
<li><strong><em>sub_180001670: </em></strong>This function is responsible for allocating multiple heap memories to the malware. The malware later dumps the unpacked MZ file into one of the allocated memories.</li>
<li><strong><em>sub_180003CE4: </em></strong>This function is responsible for unpacking previously dumped packed payload in the process heap and dumps it into one of the memories allocated by <em>sub_180001670. </em></li>
<li><strong><em>sub_180001A84: </em></strong>This function is responsible for deallocating memory.</li>
</ul>
<figure id="attachment_20174" aria-describedby="caption-attachment-20174" style="width: 640px" class="wp-caption aligncenter"><img decoding="async" loading="lazy" class="wp-image-20174" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fca2369380ba9ebc1d_word-image-20158-16.jpeg" alt="Unpacked MZ artifact in the memory" width="640" height="473" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fca2369380ba9ebc1d_word-image-20158-16.jpeg 640w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-16-300x222.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-16-150x111.jpeg 150w" sizes="(max-width: 640px) 100vw, 640px"><figcaption id="caption-attachment-20174" class="wp-caption-text">Unpacked MZ artifact in the memory</figcaption></figure>
<p>&nbsp;</p>
<h2><a id="post-20158-_113xic7sp51"></a>Hook Implementation</h2>
<p>Hooking refers to a range of techniques used to modify the behavior of an operating system, software, or software component, by intercepting the function calls, events, or communication between software components. The code which handles such intercepted function calls, events, or communication is called a hook.</p>
<p>Right after the Bumblebee loader unpacks the main payload in the memory, it hooks a few interesting functions exported by ntdll.dll (a file containing NT kernel functions, susceptible to cyberattacks) through an in-line hooking technique. The in-line hooks play a significant role in the execution of the final payload. The trigger mechanism, for the deployment of the payload, shows the creativity of the malware developer. Function <em>sub_180001000 </em>is responsible for implementing the in-line hooks.</p>
<figure id="attachment_20175" aria-describedby="caption-attachment-20175" style="width: 715px" class="wp-caption alignnone"><img decoding="async" loading="lazy" class="wp-image-20175" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fba2369300ea9ebbfd_word-image-20158-17.jpeg" alt="Function sub_180001000" width="715" height="445" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fba2369300ea9ebbfd_word-image-20158-17.jpeg 715w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-17-300x187.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-17-150x93.jpeg 150w" sizes="(max-width: 715px) 100vw, 715px"><figcaption id="caption-attachment-20175" class="wp-caption-text">Function sub_180001000</figcaption></figure>
<p>&nbsp;</p>
<p>Function <em>sub_180001000 </em>initially saves the addresses of 3 detour functions used for hooking. The detour functions are responsible for hijacking control flow in hooked Windows functions. After storing the addresses, <em>sub_1800025EC </em>is executed to resolve the addresses of the target API (Application Programming Interface) functions for hooking.</p>
<p><img decoding="async" loading="lazy" width="819" height="232" class="wp-image-20176" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c561a4aa25dc7_word-image-20158-18.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c561a4aa25dc7_word-image-20158-18.png 819w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-18-300x85.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-18-768x218.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-18-150x42.png 150w" sizes="(max-width: 819px) 100vw, 819px"></p>
<p><em>Detour functions in sub_180001000 function</em></p>
<p><em>sub_1800025EC </em>loads ntdll.dll in the address space of the loader process using function <em>LoadLibraryA</em>. Following the loading of the ntdll, function <em>GetProcAddress</em> is used to resolve the addresses of functions:</p>
<ul>
<li><em>NtOpenFile</em></li>
<li><em>NtCreateSection</em></li>
<li><em>NtMapViewOfSection</em></li>
</ul>
<p><img decoding="async" loading="lazy" width="878" height="550" class="wp-image-20177" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56b9f0a25db1_word-image-20158-19.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56b9f0a25db1_word-image-20158-19.png 878w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-19-300x188.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-19-768x481.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-19-150x94.png 150w" sizes="(max-width: 878px) 100vw, 878px"></p>
<p><em>LoadLibraryA and GetProcAddress functions</em></p>
<p>After obtaining the addresses to memory pages of the detour functions for hooking, the loader uses function <em>VirtualProtect </em>to change the memory permissions of the target pages. After changing the permissions, the loader writes the in-line hooks in <em>sub_180002978</em>. Then<em> VirtualProtect</em> is called again to restore the page permissions.</p>
<p><img decoding="async" loading="lazy" width="540" height="172" class="wp-image-20178" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c562134a25d8f_word-image-20158-20.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c562134a25d8f_word-image-20158-20.png 540w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-20-300x96.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-20-150x48.png 150w" sizes="(max-width: 540px) 100vw, 540px"></p>
<p><em>VirtualProtect and sub_180002978 functions</em></p>
<p>The data passed to<em> VirtualProtect</em> at runtime is shown in the image below. The call to <em>VirtualProtect </em>changes the<em> ntdll.NtOpenFile</em> page permission to 0x40 (<em>PAGE_EXECUTE_READWRITE</em>).</p>
<p><img decoding="async" loading="lazy" width="301" height="78" class="wp-image-20179" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c569400a25d8b_word-image-20158-21.jpeg" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c569400a25d8b_word-image-20158-21.jpeg 301w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-21-150x39.jpeg 150w" sizes="(max-width: 301px) 100vw, 301px"></p>
<p><em>Data passed/call to VirtualProtect function</em></p>
<p>After changing the page permissions of <em>ntdll.NtOpenFile</em>, the loader modifies the initial sequence of bytes in the <em>NtOpenFile</em> API by executing function <em>sub_180002978</em>.</p>
<p><img decoding="async" loading="lazy" width="529" height="385" class="wp-image-20180" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c566c3ca25d9d_word-image-20158-22.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c566c3ca25d9d_word-image-20158-22.png 529w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-22-300x218.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-22-150x109.png 150w" sizes="(max-width: 529px) 100vw, 529px"></p>
<p><em>sub_180002978 function modifying the NtOpenFile API</em></p>
<p>In-line hooking involves the following steps:</p>
<p><img decoding="async" loading="lazy" width="544" height="93" class="wp-image-20181" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c563ba9a25d99_word-image-20158-23.jpeg" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c563ba9a25d99_word-image-20158-23.jpeg 544w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-23-300x51.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-23-150x26.jpeg 150w" sizes="(max-width: 544px) 100vw, 544px"></p>
<p><em>ntdll.NtOpenFile before (hooking) execution of sub_180002978 function</em></p>
<ul>
<li>After <em>sub_180002978 is executed</em>, a call to <em>NtOpenFile</em> makes the malware code jump to location 1800023D4 (detour). This is how malicious in-line hooks change the execution flow of APIs.</li>
</ul>
<p><img decoding="async" loading="lazy" width="566" height="85" class="wp-image-20182" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c566e04a25d8c_word-image-20158-24.jpeg" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c566e04a25d8c_word-image-20158-24.jpeg 566w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-24-300x45.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-24-150x23.jpeg 150w" sizes="(max-width: 566px) 100vw, 566px"></p>
<p><em>Call to NtOpenFile making the malware jump to 1800023D4</em></p>
<ul>
<li>After writing the hook, <em>VirtualProtect </em>is used again to restore the page permission of <em>ntdll.NtOpenFile </em>to 0x20 (PAGE_EXECUTE_READ).</li>
</ul>
<p><img decoding="async" loading="lazy" width="300" height="74" class="wp-image-20183" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c564e7fa25d93_word-image-20158-25.jpeg" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c564e7fa25d93_word-image-20158-25.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-25-150x37.jpeg 150w" sizes="(max-width: 300px) 100vw, 300px"></p>
<p><em>VirtualProtect function </em>used to restore page permission of ntdll.NtOpenFile</p>
<ul>
<li>The process of changing memory permission and writing in-line hooks is repeated in a do-while loop, for the rest of the target functions, <em>NtCreateSection </em>and <em>NtMapViewOfSection.</em></li>
</ul>
<figure id="attachment_20184" aria-describedby="caption-attachment-20184" style="width: 951px" class="wp-caption aligncenter"><img decoding="async" loading="lazy" class="wp-image-20184" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0faa2369366249ebbe2_word-image-20158-26.png" alt="Do-while loop repeating the permission and hooks process for other target functions" width="951" height="262" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0faa2369366249ebbe2_word-image-20158-26.png 951w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-26-300x83.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-26-768x212.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-26-150x41.png 150w" sizes="(max-width: 951px) 100vw, 951px"><figcaption id="caption-attachment-20184" class="wp-caption-text">Do-while loop repeating the permission and hooks process for other target functions</figcaption></figure>
<p>&nbsp;</p>
<h3><a id="post-20158-_up9me939sg7a"></a>Summary of Hooked Functions</h3>
<p>After successful hooking, whenever target functions are called in the address space of the loader process, the control flow is transferred to the in-line the respective hook addresses:</p>
<table>
<thead>
<tr>
<th><strong>Target Function</strong></th>
<th><strong>In-line Hook </strong>(Detours)</th>
</tr>
<tr>
<th><em>ntdll.NtOpenFile</em></th>
<th>1800023D4</th>
</tr>
<tr>
<th><em>ntdll.NtCreateSection</em></th>
<th>1800041EC</th>
</tr>
<tr>
<th><em>ntdll.NtMapViewOfSection</em></th>
<th>180001D4C</th>
</tr>
</thead>
</table>
<h2><a id="post-20158-_893y4c8iz2aq"></a>Loading gdiplus.dll is Unique to Bumblebee</h2>
<p>The final function executed by the loader is <em>sub_1800013A0</em>. The malware uses the function <em>LoadLibraryW</em> to load the DLL module. It then uses the function <em>GetProcAddress</em> to obtain the address of a specific function exported by the library loaded.</p>
<p>This plays a crucial step in deployment of the main payload on the victim system. Unlike TTPs (Tactics, Techniques, and Procedures) of common malware loaders, this is where the Bumblebee loader gets creative.</p>
<p><img decoding="async" loading="lazy" width="812" height="347" class="wp-image-20185" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fba236939ecd9ebbe5_word-image-20158-27.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fba236939ecd9ebbe5_word-image-20158-27.png 812w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-27-300x128.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-27-768x328.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-27-150x64.png 150w" sizes="(max-width: 812px) 100vw, 812px"></p>
<p><em>Function sub_1800013A0 with LoadLibraryW and GetProcAddress functions</em></p>
<p>The module <em>gdiplus.dll </em>is loaded into the process memory address space.<em> Gdiplus.dll</em> is an important module, containing libraries that support the GDI Window Manager, in the Microsoft Windows OS.</p>
<p><img decoding="async" loading="lazy" width="692" height="124" class="wp-image-20186" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c5620fca25db9_word-image-20158-28.jpeg" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c5620fca25db9_word-image-20158-28.jpeg 692w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-28-300x54.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-28-150x27.jpeg 150w" sizes="(max-width: 692px) 100vw, 692px"></p>
<p><em>Runtime execution of function sub_1800013A0</em></p>
<p>The module <em>gdiplus.dll</em> is executed in the last function of the malware loader. This is the first instance in which the unpacked MZ payload is used directly by the loader. Hence, the loading of this module appears suspicious. Also, an unusual base address (<em>0x1d54fd0000</em>) is assigned to the loaded <em>gdiplus.dll</em> module. <img decoding="async" loading="lazy" width="452" height="384" class="wp-image-20187" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5620d1a25dae_word-image-20158-29.jpeg" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5620d1a25dae_word-image-20158-29.jpeg 452w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-29-300x255.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-29-150x127.jpeg 150w" sizes="(max-width: 452px) 100vw, 452px"></p>
<p><em>Unusual base address assigned to gdiplus.dll</em></p>
<p>By further examining the suspicious memory, it was found that the address is a mapped page with RWX permission in the loader address space. This is a classic use case of hollowing where the module content is replaced with unpacked malicious artifacts.</p>
<p><img decoding="async" loading="lazy" width="428" height="180" class="wp-image-20188" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c562cb5a25d94_word-image-20158-30.jpeg" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c562cb5a25d94_word-image-20158-30.jpeg 428w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-30-300x126.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-30-150x63.jpeg 150w" sizes="(max-width: 428px) 100vw, 428px"></p>
<p><em> Address as a mapped page with RWX permission</em></p>
<p>But in our analysis so far we have not come across any code that does the hollowing. Then how did the malware change the contents of the gdiplus.dll? Interestingly this is where the malware developer decided to get creative! The hooking seen earlier is responsible for hollowing the loaded module with the unpacked payload. More details about the same are covered in the following section.</p>
<h2><a id="post-20158-_m0jqpo54214o"></a>Investigating the Hooks and the Trigger</h2>
<p>As seen in the previous section, the malware hooks 3 specific APIs:</p>
<ul>
<li><em>NtOpenFile</em></li>
<li><em>NtCreateSection</em></li>
<li><em>NtMapViewOfSection</em></li>
</ul>
<p>The API selection is not random. The internal working of loading any DLL via<em> LoadLibrary</em> API uses the 3 functions mentioned above. Hooking these functions gives the malware the flexibility to deploy the unpacked payload covertly. This feature makes it difficult for researchers to hunt the main payload.</p>
<p>The detour function at 0x180001D4C is used to hook function <em>NtMapViewOfSection</em>, which lays the groundwork for hollowing the loaded module (in this case, <em>gdiplus.dll</em>) with the unpacked Bumblebee binary. The detour function is capable of the following actions:</p>
<ul>
<li>Section object creation via <em>NtCreateSection</em> API</li>
<li>Mapping of the view of gdiplus.dll to loader address space via <em>NtMapViewOfSection</em></li>
<li>Writing the unpacked payload into the mapped view of gdiplus.dll</li>
<li>Deallocating heap memory that holds unpacked payload from earlier steps</li>
</ul>
<p>The implementation of the detour function at 0x180001D4C, shows the use of a pointer to the <em>NtCreateSection</em> API, for creating a section object to be used later in mapping the <em>gdiplus.dll</em> module.</p>
<p><img decoding="async" loading="lazy" width="547" height="176" class="wp-image-20189" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56872da25db8_word-image-20158-31.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56872da25db8_word-image-20158-31.png 547w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-31-300x97.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-31-150x48.png 150w" sizes="(max-width: 547px) 100vw, 547px"></p>
<p><em>Pointer to NtCreateSection API</em></p>
<p>After creating a section object, the detour function calls <em>NtMapViewOfSection,</em> via a pointer. Now the view for the section is created by the system. The function <em>sub_180002E74</em> is responsible for filling the mapped view with an unpacked payload.</p>
<p><img decoding="async" loading="lazy" width="743" height="398" class="wp-image-20190" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56e48ca25da3_word-image-20158-32.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56e48ca25da3_word-image-20158-32.png 743w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-32-300x161.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-32-150x80.png 150w" sizes="(max-width: 743px) 100vw, 743px"></p>
<p><em>Pointer to NtMapViewOfSection along with sub_180002E74 function</em></p>
<p>The address of the mapped view, returned by <em>NtMapViewOfSection</em> pointer in the loader process, which is 0x1D54F5D0000, is the same address seen while examining the process modules.</p>
<p><img decoding="async" loading="lazy" width="452" height="85" class="wp-image-20191" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c560d00a25dc5_word-image-20158-33.jpeg" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c560d00a25dc5_word-image-20158-33.jpeg 452w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-33-300x56.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-33-150x28.jpeg 150w" sizes="(max-width: 452px) 100vw, 452px"></p>
<p><em>Address of the mapped view returned by NtMapViewOfSection</em></p>
<p><img decoding="async" loading="lazy" width="454" height="90" class="wp-image-20192" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56dca6a25dcb_word-image-20158-34.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56dca6a25dcb_word-image-20158-34.png 454w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-34-300x59.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-34-150x30.png 150w" sizes="(max-width: 454px) 100vw, 454px"></p>
<p><em>Unusual base address assigned to âgdiplus.dllâ as seen earlier</em></p>
<p>The mapped view starts from 0x1D54F5D0000. The loader dumps the unpacked payload here, hollowing<em> gdiplus.dll</em>. Hence, the final Bumblebee payload stays hidden inside the loaded module <em>gdiplus.dll</em>.</p>
<p>Right after mapping the view, the detour function executes <em>sub_180002E74</em> to initiate the writing of the unpacked binary.</p>
<p><img decoding="async" loading="lazy" width="1194" height="289" class="wp-image-20193" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c566202a25d97_word-image-20158-35.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c566202a25d97_word-image-20158-35.png 1194w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-35-300x73.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-35-1024x248.png 1024w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-35-768x186.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-35-150x36.png 150w" sizes="(max-width: 1194px) 100vw, 1194px"></p>
<p><em>Function sub_180002E74 responsible for filling the mapped view with the final payload</em></p>
<p>The hooks get activated as soon as the loader loads the <em>gdiplus.dll</em> module via <em>LoadLibraryW</em> API. Then the payload is covertly loaded into the <em>gdiplus.dll</em> module. The final payload is a DLL, hence the loader has to explicitly call an exported function to trigger the execution.</p>
<p>In this case, the loader obtains the address of exported function<em> SetPath</em> via function <em>GetProcAddress</em>. The control is then transferred to the final payload by the final call to <em>SetPath</em>, by providing the loader program name as argument.</p>
<p><img decoding="async" loading="lazy" width="832" height="353" class="wp-image-20194" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56cb33a25dbf_word-image-20158-36.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56cb33a25dbf_word-image-20158-36.png 832w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-36-300x127.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-36-768x326.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-36-150x64.png 150w" sizes="(max-width: 832px) 100vw, 832px"></p>
<p><em>Loader obtains the address of exported function âSetPathâ via GetProcAddress</em></p>
<p>The image below shows the function <em>SetPath</em> exported by the unpacked Bumblebee payload.</p>
<p><img decoding="async" loading="lazy" width="372" height="322" class="wp-image-20195" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c563780a25dbc_word-image-20158-37.jpeg" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c563780a25dbc_word-image-20158-37.jpeg 372w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-37-300x260.jpeg 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-37-150x130.jpeg 150w" sizes="(max-width: 372px) 100vw, 372px"></p>
<p><em>SetPath Function</em></p>
<h2><a id="post-20158-_gjg44n805xww"></a>Bumblebee Main Payload Analysis</h2>
<p>The core malicious component of the bumblebee is executed in the memory, when the hollowed <em>gdiplus.dll</em> is loaded via the<em> LoadLibrary</em> API. When the module is loaded into memory, the function <em>DllMain</em> creates a new thread and executes <em>sub_180008EC0</em> routine.</p>
<p><strong><img decoding="async" loading="lazy" width="651" height="407" class="wp-image-20196" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56c8fda25daa_word-image-20158-38.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56c8fda25daa_word-image-20158-38.png 651w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-38-300x188.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-38-150x94.png 150w" sizes="(max-width: 651px) 100vw, 651px"></strong></p>
<p><em>The DllMain function of the bumblebee payload</em></p>
<p><em>sub_180008EC0</em> routine is quite a large function that is responsible for all the malicious activities performed by Bumblebee on the compromised system.</p>
<p><strong><img decoding="async" loading="lazy" width="649" height="938" class="wp-image-20197" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c5609e9a25dc8_word-image-20158-39.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c5609e9a25dc8_word-image-20158-39.png 649w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-39-208x300.png 208w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-39-150x217.png 150w" sizes="(max-width: 649px) 100vw, 649px"></strong></p>
<p><em> Function sub_180008EC0 logic flow</em></p>
<h3><a id="post-20158-_x1z4x0m8prka"></a>Anti VM Checks</h3>
<p>The first activity performed by<em> sub_180008EC0</em> is to check for a virtual machine (VM) environment. If the function returns True, then Bumblebee shuts itself down by executing the <em>ExitProcess</em> function.</p>
<p><strong><img decoding="async" loading="lazy" width="591" height="212" class="wp-image-20198" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c568b2ca25dbd_word-image-20158-40.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c568b2ca25dbd_word-image-20158-40.png 591w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-40-300x108.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-40-150x54.png 150w" sizes="(max-width: 591px) 100vw, 591px"></strong></p>
<p><em>sub_18003DA0 performs VM check</em></p>
<p>The VM checking routine is. Rigorous. It employs various techniques to ensure that the malware is not running in a sandbox environment used by security researchers. Some of the interesting features are:</p>
<ul>
<li>Iterating through running processes via functions <em>CreateToolHelp32Snapshot</em>, <em>Process32FirstW,</em> and <em>Process32NextW</em>.</li>
</ul>
<p><img decoding="async" loading="lazy" width="355" height="428" class="wp-image-20199" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c563ac0a25d9b_word-image-20158-41.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c563ac0a25d9b_word-image-20158-41.png 355w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-41-249x300.png 249w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-41-150x181.png 150w" sizes="(max-width: 355px) 100vw, 355px"></p>
<p><em>Malware functions which help in iterating through running processes</em></p>
<ul>
<li>Each running process is compared to a list of program names.</li>
</ul>
<p><img decoding="async" loading="lazy" width="603" height="218" class="wp-image-20200" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56d066a25dc1_word-image-20158-42.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56d066a25dc1_word-image-20158-42.png 603w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-42-300x108.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-42-150x54.png 150w" sizes="(max-width: 603px) 100vw, 603px"></p>
<p><em>Running process being compared to the list of program names</em></p>
<ul>
<li>The malware also checks for specific usernames used in sandboxed environments to confirm the absence of a VM.</li>
</ul>
<p><img decoding="async" loading="lazy" width="625" height="511" class="wp-image-20201" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56f53aa25da1_word-image-20158-43.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56f53aa25da1_word-image-20158-43.png 625w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-43-300x245.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-43-150x123.png 150w" sizes="(max-width: 625px) 100vw, 625px"></p>
<p><em>Malware checking for specific usernames</em></p>
<ul>
<li>The VM check routine also enumerates active system services running via the <em>OpenSCManagerW</em> API. The names of common services used by VM softwares are stored in an array.</li>
</ul>
<p><img decoding="async" loading="lazy" width="414" height="489" class="wp-image-20202" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c5609c2a25dc6_word-image-20158-44.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c5609c2a25dc6_word-image-20158-44.png 414w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-44-254x300.png 254w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-44-150x177.png 150w" sizes="(max-width: 414px) 100vw, 414px"></p>
<p><em>Enumerating active system services running via OpenSCManagerW</em></p>
<ul>
<li>It also scans the system directory for common drivers and library files used by VM applications.</li>
</ul>
<p><img decoding="async" loading="lazy" width="424" height="238" class="wp-image-20203" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56bfcca25d96_word-image-20158-45.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56bfcca25d96_word-image-20158-45.png 424w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-45-300x168.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-45-150x84.png 150w" sizes="(max-width: 424px) 100vw, 424px"></p>
<p><img decoding="async" loading="lazy" width="374" height="325" class="wp-image-20204" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c5656c3a25dc0_word-image-20158-46.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c5656c3a25dc0_word-image-20158-46.png 374w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-46-300x261.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-46-150x130.png 150w" sizes="(max-width: 374px) 100vw, 374px"></p>
<p><em>System check for common drivers and library files used by popular VM applications</em></p>
<ul>
<li>The routine also checks for named pipes to identify the presence of VM.</li>
</ul>
<p><img decoding="async" loading="lazy" width="470" height="310" class="wp-image-20205" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c564b7ea25d8e_word-image-20158-47.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c564b7ea25d8e_word-image-20158-47.png 470w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-47-300x198.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-47-150x99.png 150w" sizes="(max-width: 470px) 100vw, 470px"></p>
<p>Checking for named pipes</p>
<p>These are a few examples of techniques employed by the malware to identify analysis environments. It also has other functionalities built such as the use of WMI and registry functionalities to identify hardware information to check for the presence of VM environments installed on the target system.</p>
<h3><a id="post-20158-_burh1ro4lu22"></a>Event Creation</h3>
<p>After VM checks, if it is secure to continue, the malware creates an event. The event ID is 3C29FEA2-6FE8-4BF9-B98A-0E3442115F67. This is used for thread synchronization.</p>
<p><img decoding="async" loading="lazy" width="695" height="110" class="wp-image-20206" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c562f13a25dba_word-image-20158-48.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c562f13a25dba_word-image-20158-48.png 695w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-48-300x47.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-48-150x24.png 150w" sizes="(max-width: 695px) 100vw, 695px"></p>
<p><em>The event created by the malware</em></p>
<h3><a id="post-20158-_4khjdifzb8lo"></a>Persistence</h3>
<p>The malware uses <em>wsript.exe</em> as a persistence vector to run the malware each time the user logs into the system. The VB instruction is written into a <em>.vbs</em> file. This is performed when the C2 sends the âins&#8221; command as a task to execute on the system.</p>
<p><strong><img decoding="async" loading="lazy" width="569" height="79" class="wp-image-20207" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56bcd2a25dc3_word-image-20158-49.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c56bcd2a25dc3_word-image-20158-49.png 569w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-49-300x42.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-49-150x21.png 150w" sizes="(max-width: 569px) 100vw, 569px"></strong></p>
<p><em>Wsript.exe</em></p>
<p><strong><img decoding="async" loading="lazy" width="541" height="173" class="wp-image-20208" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c565d2ca25d95_word-image-20158-50.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c565d2ca25d95_word-image-20158-50.png 541w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-50-300x96.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-50-150x48.png 150w" sizes="(max-width: 541px) 100vw, 541px"></strong></p>
<p><em>VB instruction written into a .vbs file</em></p>
<h3><a id="post-20158-_6l2f7cup6r53"></a>Token Manipulation</h3>
<p>The malware performs token manipulation to escalate its privilege on the target system by granting the malware process a <em>SeDebugPrivilege</em>. With this privilege the malware can perform arbitrary read/write operations.</p>
<p><strong><img decoding="async" loading="lazy" width="1100" height="336" class="wp-image-20209" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56656ba25da2_word-image-20158-51.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56656ba25da2_word-image-20158-51.png 1100w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-51-300x92.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-51-1024x313.png 1024w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-51-768x235.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-51-150x46.png 150w" sizes="(max-width: 1100px) 100vw, 1100px"></strong></p>
<p><em>Malware is given the âSeDebugPrivilegeâ</em></p>
<p>The malware is capable of performing code injections to deploy malicious code in running processes using various APIs. The malware dynamically retrieves the addresses of the APIs needed for the code injection. The core bumblebee payload comes with embedded files which areinjected into the running process to further attack the victim.</p>
<p><img decoding="async" loading="lazy" width="954" height="374" class="wp-image-20210" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c561cf3a25d9c_word-image-20158-52.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c561cf3a25d9c_word-image-20158-52.png 954w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-52-300x118.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-52-768x301.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-52-150x59.png 150w" sizes="(max-width: 954px) 100vw, 954px"></p>
<p><em>List of APIs used to perform code injections</em></p>
<h3><a id="post-20158-_olv352109gi6"></a>Code Injection Via NtQueueApcThread</h3>
<p>When the malware receives the command along with a DLL buffer, which gets injected, the malware starts scanning for a list of processes on the system. One of the executables in the list is randomly chosen to inject the malicious DLL.</p>
<p><strong><img decoding="async" loading="lazy" width="561" height="144" class="wp-image-20211" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56cb72a25d9e_word-image-20158-53.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56cb72a25d9e_word-image-20158-53.png 561w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-53-300x77.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-53-150x39.png 150w" sizes="(max-width: 561px) 100vw, 561px"></strong></p>
<p><em>Malware looking for the list of processes on the system</em></p>
<p><strong><img decoding="async" loading="lazy" width="375" height="109" class="wp-image-20212" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c562fbca25da9_word-image-20158-54.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c562fbca25da9_word-image-20158-54.png 375w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-54-300x87.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-54-150x44.png 150w" sizes="(max-width: 375px) 100vw, 375px"></strong></p>
<p><em>List of executables</em></p>
<p>Following the code injection, the malware:</p>
<ul>
<li>Creates a process from the previously selected executable image via COM (Component Object Model), in which access to an objectâs data is received through interfaces, in a suspended state.</li>
<li>Enumerates through the running process via the<em> CreateToolhelp32Snapshot </em>API to find the newly spawned process created in the previous step.</li>
<li>When the process is found, the malware manipulates the token and acquires the <em>SeDebugPrivilege</em> token to perform further memory manipulation.</li>
<li>If token manipulation is successful, the malware injects a shellcode into the process to make it go to sleep.</li>
</ul>
<p><strong><img decoding="async" loading="lazy" width="597" height="484" class="wp-image-20213" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c567d6aa25dab_word-image-20158-55.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c567d6aa25dab_word-image-20158-55.png 597w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-55-300x243.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-55-150x122.png 150w" sizes="(max-width: 597px) 100vw, 597px"></strong></p>
<p><em>Malware creating a process and injecting shellcode into it</em></p>
<p>Function <em>sub_180037A80</em> is responsible for performing the shellcode injection into the spawned process in the suspended state.</p>
<p><strong><img decoding="async" loading="lazy" width="555" height="330" class="wp-image-20214" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c5621cca25dc4_word-image-20158-56.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c5621cca25dc4_word-image-20158-56.png 555w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-56-300x178.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-56-150x89.png 150w" sizes="(max-width: 555px) 100vw, 555px"></strong></p>
<p><em> Function sub_180037A80</em></p>
<p>After injecting the shellcode into the process, the malware resumes the process. It then executes function <em>sub_18003A9BC</em> to finally inject malicious DLL by creating multiple memory sections and views.</p>
<p><strong><img decoding="async" loading="lazy" width="618" height="194" class="wp-image-20215" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c566b94a25da4_word-image-20158-57.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c566b94a25da4_word-image-20158-57.png 618w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-57-300x94.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-57-150x47.png 150w" sizes="(max-width: 618px) 100vw, 618px"></strong></p>
<p><em>Executing sub_18003A9BC function to inject malicious DLL</em></p>
<p>The DLL code is executed via the <em>NtQueueApcThread</em> API, which is dynamically resolved during the execution.</p>
<p><strong><img decoding="async" loading="lazy" width="616" height="207" class="wp-image-20216" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c566e36a25dbe_word-image-20158-58.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c566e36a25dbe_word-image-20158-58.png 616w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-58-300x101.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-58-150x50.png 150w" sizes="(max-width: 616px) 100vw, 616px"></strong></p>
<p><em>DLL code executed via NtQueueApcThread API</em></p>
<h2><a id="post-20158-_13x7uaee4uam"></a>C2 Network</h2>
<p>Command and Control Infrastructure, also known as C2 or C&amp;C, is a collection of tools and techniques used to maintain contact with a compromised system of devices after the initial access has been gained. The IP address of the C2 can be retrieved from the payload code as shown below.</p>
<p><img decoding="async" loading="lazy" width="606" height="482" class="wp-image-20217" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c561ee9a25dc2_word-image-20158-59.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c561ee9a25dc2_word-image-20158-59.png 606w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-59-300x239.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-59-150x119.png 150w" sizes="(max-width: 606px) 100vw, 606px"></p>
<p><em>Retrieving the IP address of C2 </em></p>
<p>The C2 periodically sends out tasks to the agent to be executed on the system. The malware extensively uses WMI (Windows Management Infrastructure) to collect basic victim information like domain name and user name, and sends the compromised information to the C2. The C2 distinguishes active agents based on the client ID assigned to each one.</p>
<p><img decoding="async" loading="lazy" width="580" height="53" class="wp-image-20218" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fca2369305c09ebc6f_word-image-20158-60.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fca2369305c09ebc6f_word-image-20158-60.png 580w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-60-300x27.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-60-150x14.png 150w" sizes="(max-width: 580px) 100vw, 580px"></p>
<p><em>Data transferred in C2 communication</em></p>
<p>Interestingly, the user agent string used by the malware for communication is âbumblebeeâ.</p>
<h3><a id="post-20158-_gkg3vsbbr9cl"></a>Outbound Traffic</h3>
<p><img decoding="async" loading="lazy" width="1104" height="117" class="wp-image-20219" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5630aca25d91_word-image-20158-61.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5630aca25d91_word-image-20158-61.png 1104w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-61-300x32.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-61-1024x109.png 1024w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-61-768x81.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-61-150x16.png 150w" sizes="(max-width: 1104px) 100vw, 1104px"></p>
<p><em>Data transferred out of the compromised system</em></p>
<h4><strong>Client Parameters</strong></h4>
<ul>
<li>client-id</li>
<li>group_name</li>
<li>sys_version</li>
<li>User name</li>
<li>client_version</li>
</ul>
<h3><a id="post-20158-_ikjfm8t7c6ey"></a>Inbound Traffic</h3>
<p><img decoding="async" loading="lazy" width="815" height="145" class="wp-image-20220" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c562c33a25da7_word-image-20158-62.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c562c33a25da7_word-image-20158-62.png 815w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-62-300x53.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-62-768x137.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-62-150x27.png 150w" sizes="(max-width: 815px) 100vw, 815px"></p>
<p><em>Commands received by the compromised system</em></p>
<h4><strong>Client Parameters</strong></h4>
<ul>
<li>response_status</li>
<li>tasks</li>
</ul>
<h3><a id="post-20158-_g01k04n2e47r"></a>Commands Supported</h3>
<p>The task field in the C2 response will contain one of the following commands:</p>
<table>
<thead>
<tr>
<th><strong>Command</strong></th>
<th><strong>Description</strong></th>
</tr>
<tr>
<th>dex</th>
<th>Downloads executable</th>
</tr>
<tr>
<th>sdl</th>
<th>Kill Loader</th>
</tr>
<tr>
<th>ins</th>
<th>Persistence</th>
</tr>
<tr>
<th>dij</th>
<th>DLL inject</th>
</tr>
</thead>
</table>
<h2><a id="post-20158-_wq7abflo1fwb"></a>A Tale of Bundled DLLs and Hooks</h2>
<p>The core payload comes with two DLLs embedded in the binary. The purpose and function of both the DLLs are the same, but one is 32 bit and the other is 64 bit. These are used to perform further hooking and control flow manipulations.</p>
<p><strong>DLL Signatures (SHA256)</strong></p>
<ul>
<li>32 bit: B9534DDEA8B672CF2E4F4ABD373F5730C7A28FE2DD5D56E009F6E5819E9E9615</li>
<li>64 bit: 1333CC4210483E7597B26042B8FF7972FD17C23488A06AD393325FE2E098671B</li>
</ul>
<p>In this section we will look into the inner workings of embedded 32 bit DLL. The module looks for a specific set of functions in <em>ntdll.dll</em>, <em>kernel32.dll</em>, <em>kernelbase.dll, </em>and <em>advapi32.dll</em> to later remove any hooks present in the code. This will also remove any EDR/AV (Endpoint Detection and Response/ Antivirus) implemented hooks used for monitoring.</p>
<p><img decoding="async" loading="lazy" width="626" height="724" class="wp-image-20221" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c563b54a25db0_word-image-20158-63.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c563b54a25db0_word-image-20158-63.png 626w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-63-259x300.png 259w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-63-150x173.png 150w" sizes="(max-width: 626px) 100vw, 626px"></p>
<p><em>Functions in ntdll.dll checked for existing hooks</em></p>
<p><img decoding="async" loading="lazy" width="728" height="283" class="wp-image-20222" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5629fda25da6_word-image-20158-64.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5629fda25da6_word-image-20158-64.png 728w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-64-300x117.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-64-150x58.png 150w" sizes="(max-width: 728px) 100vw, 728px"></p>
<p><em>Functions in kernel32.dll checked for existing hooks</em></p>
<p>In kernelbase32.dll following functions are checked for any already existing hooks:</p>
<p><img decoding="async" loading="lazy" width="637" height="380" class="wp-image-20223" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c563b97a25da5_word-image-20158-65.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c563b97a25da5_word-image-20158-65.png 637w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-65-300x179.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-65-150x89.png 150w" sizes="(max-width: 637px) 100vw, 637px"></p>
<p><em>Functions in kernelbase32.dll checked for existing hooks</em></p>
<p><img decoding="async" loading="lazy" width="618" height="128" class="wp-image-20224" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5622bea25d98_word-image-20158-66.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5622bea25d98_word-image-20158-66.png 618w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-66-300x62.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-66-150x31.png 150w" sizes="(max-width: 618px) 100vw, 618px"></p>
<p><em>Functions in advapi32.dll checked for existing hooks</em></p>
<h3><a id="post-20158-_8b48vgevh5di"></a>The Unhooking Mechanism</h3>
<p>The unhooking process involves the following steps:</p>
<ul>
<li>The module retrieves handles to target DLLs via the<em> GetModuleHandleW API</em>. The handle returned by the API is for the DLL loaded in the memory by the malware process, i.e. the process responsible for executing the bumble loader, which is <em>rundll32.exe</em>.</li>
<li>Then the malware constructs the absolute path for target DLLs via the <em>LetSystemDirectoryA</em> API, to access the system32 directory, where all system DLLs are located.</li>
<li>A pointer to <em>NtProtectVirtualMemory</em> is computed following the DLL path generation.</li>
<li>Function <em>sub_10005B90</em> is called to do the unhooking. Parameters passed to the function are:
<ul>
<li>First Arg: Absolute path to target DLL</li>
<li>Second Arg: Handle to already loaded target DLL</li>
<li>Third Arg: Offset to array holding target functions exported by the target DLL</li>
<li>Fourth Arg: Null</li>
<li>Fifth Arg: Pointer to NtProtectVirtualMemory</li>
</ul>
</li>
</ul>
<p><img decoding="async" loading="lazy" width="712" height="696" class="wp-image-20225" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c566c1ba25daf_word-image-20158-67.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c566c1ba25daf_word-image-20158-67.png 712w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-67-300x293.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-67-150x147.png 150w" sizes="(max-width: 712px) 100vw, 712px"></p>
<p><em>Steps for Unhooking Mechanism</em></p>
<p>Function sub_10005B90 performs the following operations:</p>
<ul>
<li>Maps fresh copy of the target DLL from the hard disk to address space of the malware process via functions <em>CreateFileA</em>, <em>CreateFileMappingA,</em> and <em>MapViewOfFile</em>.</li>
<li>Calls function <em>sub_10005D40</em> to perform unhooking. The following data is passed to the function:
<ul>
<li>First Arg: Mapped Address of fresh copy of DLL</li>
<li>Second Arg: Same as sub_10005B90</li>
<li>Third Arg: Same as sub_10005B90</li>
<li>Fourth Arg: Same as sub_10005B90</li>
<li>Fifth Arg: Same as sub_10005B90</li>
</ul>
</li>
<li>After unhooking, the mapped view is released via the<em> UnMapViewOfFile</em> API.</li>
</ul>
<p><img decoding="async" loading="lazy" width="783" height="454" class="wp-image-20226" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56bc11a25d9f_word-image-20158-68.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c56bc11a25d9f_word-image-20158-68.png 783w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-68-300x174.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-68-768x445.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-68-150x87.png 150w" sizes="(max-width: 783px) 100vw, 783px"></p>
<p><em>Operations performed by function sub_10005B90</em></p>
<p>The logic used for unhooking is straightforward. The malware compares the target function in the loaded module in memory against the function defined in the mapped module via <em>MapViewOfFile</em>. If both the codes don&#8217;t match, the content from the mapped module is written to the loaded module, to restore the state to that of the mapped version from the hard disk.</p>
<p>The malware goes through the exports of the loaded DLL and performs a string match against the set of function names stored as an array in a loop. The sub_10005930 is responsible for string matching.</p>
<p><img decoding="async" loading="lazy" width="596" height="218" class="wp-image-20227" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c566c6aa25d9a_word-image-20158-69.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c566c6aa25d9a_word-image-20158-69.png 596w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-69-300x110.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-69-150x55.png 150w" sizes="(max-width: 596px) 100vw, 596px"></p>
<p><em>String match against the set of function names</em></p>
<p>When the function name in the array of the malware matches the exported function from the loaded module, the flag is set to [v8] and breaks from the loop. This occurs in the following steps:</p>
<ul>
<li>The malware stores the addresses of functions from both modules(loaded and mapped).</li>
<li>Then the loaded and mapped function codes are checked for hooks, by identifying dissimilarities in the code. If the loaded code is the same as the mapped one, it breaks from the loop and continues to iterate through the remaining functions.</li>
</ul>
<p><img decoding="async" loading="lazy" width="587" height="597" class="wp-image-20228" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fca2369342ee9ebc36_word-image-20158-70.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fca2369342ee9ebc36_word-image-20158-70.png 587w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-70-295x300.png 295w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-70-150x153.png 150w" sizes="(max-width: 587px) 100vw, 587px"></p>
<p><em>Malware matches the exported function</em></p>
<p>If the loaded code is not the as same as the mapped code, then the following operations are performed by the malware for unhooking:</p>
<ul>
<li><em>VirtualQueryEx</em> API is called to retrieve the base address of the page containing the target function.</li>
<li>Then<em> NtProtectVirtualMemory</em> API is used for changing permissions of the page containing the function code (READ_WRITE_EXECUTE).</li>
<li><em>VirtualQuery</em> is used again to check for permission; whether the page is writable or not.</li>
<li>Function <em>sub_10005890</em> is called to restore the loaded module with the contents of the mapped module. Now the functions in the mapped and loaded modules are in the same state.</li>
</ul>
<p><img decoding="async" loading="lazy" width="682" height="396" class="wp-image-20235" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5614aea25dad_word-image-20158-71.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5614aea25dad_word-image-20158-71.png 682w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-71-300x174.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-71-150x87.png 150w" sizes="(max-width: 682px) 100vw, 682px"></p>
<p><em>Malware does not match the exported function</em></p>
<p>After clearing all the hooks in the selected functions, the malware installs hooks.</p>
<p>Functions <em>RaiseFailFastException</em> from kernel32.dll and <em>api-ms-win-core-errorhandling-l1-1-2.dll </em>are hooked. Then the detour function <em>sub_100057F0</em> hijacks the control flow when the above functions are called by the system after hooking is done by the malware.</p>
<p><img decoding="async" loading="lazy" width="696" height="191" class="wp-image-20236" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5683dfa25dac_word-image-20158-72.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c5683dfa25dac_word-image-20158-72.png 696w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-72-300x82.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-72-150x41.png 150w" sizes="(max-width: 696px) 100vw, 696px"></p>
<p><em>Installing hooks</em></p>
<p>Function <em>sub_100057F0</em> simply returns the call.</p>
<p><img decoding="async" loading="lazy" width="430" height="87" class="wp-image-20237" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c562a3ca25dbb_word-image-20158-73.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d3141c562a3ca25dbb_word-image-20158-73.png 430w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-73-300x61.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-73-150x30.png 150w" sizes="(max-width: 430px) 100vw, 430px"></p>
<p><em>Function sub_100057F0</em></p>
<p>The embedded DLL has a hooking strategy similar to that of the Bumblebee loader. Various functions used by the system, while loading a DLL module, are hooked and <em>wups.dll</em> is loaded to trigger the chain.</p>
<p><img decoding="async" loading="lazy" width="793" height="122" class="wp-image-20238" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c561beea25da8_word-image-20158-74.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f352d2141c561beea25da8_word-image-20158-74.png 793w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-74-300x46.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-74-768x118.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-74-150x23.png 150w" sizes="(max-width: 793px) 100vw, 793px"></p>
<p><em>Hooking of the functions used while loading DLL and loading of wups.dll</em></p>
<table>
<thead>
<tr>
<th><strong>Target API</strong></th>
<th><strong>Detour Function</strong></th>
</tr>
<tr>
<th>ZwMapViewOfSection</th>
<th>sub_10004C50</th>
</tr>
<tr>
<th>ZwOpenSection</th>
<th>sub_10004FF0</th>
</tr>
<tr>
<th>ZwCreateSection</th>
<th>sub_10004BC0</th>
</tr>
<tr>
<th>ZwOpenFile</th>
<th>sub_10004F20</th>
</tr>
</thead>
</table>
<h2><a id="post-20158-_oelgaclamyfp"></a>Code Upgrades In The Wild</h2>
<p>After analyzing many samples in the wild we observed code modifications in the loader.</p>
<p><strong><img decoding="async" loading="lazy" width="1600" height="868" class="wp-image-20239" src="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fca23693cf7f9ebc38_word-image-20158-75.png" srcset="https://cdn.prod.website-files.com/635e632477408d12d1811a64/63f5f0fca23693cf7f9ebc38_word-image-20158-75.png 1600w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-75-300x163.png 300w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-75-1024x556.png 1024w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-75-768x417.png 768w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-75-1536x833.png 1536w, https://cdn.cloudsek.com/wp-content/uploads/2022/08/word-image-20158-75-150x81.png 150w" sizes="(max-width: 1600px) 100vw, 1600px"></strong></p>
<p><em>Prominent code modifications done in Bumblebee loader ever since its discovery</em></p>
<p>The extreme left sample in the image above is the one we have covered in this report. As we can see from the logic flow of the loader, the malware developer has modified the loader code in the other two samples. All the samples observed in the wild are 64 bit DLL modules with an exported function that has a randomly generated string as the function name. This can be justified by the fact that code plays a major role in whether the malware is detected by security products. To circumvent this hurdle, malware developers make changes to the code and the malware design.</p>
<p>Newer loader samples in the wild contain various payloads, such as cobaltStrike beacons and Meterpreter shells, unlike the custom bumblebee payload seen in the first generation.</p>
<h2><a id="post-20158-_9rt2aif2xv21"></a>Indicators of Compromise (IoCs)</h2>
<table>
<thead>
<tr>
<th colspan="2"><strong>Binary</strong></th>
</tr>
<tr>
<th colspan="2">f98898df74fb2b2fad3a2ea2907086397b36ae496ef3f4454bf6b7125fc103b8</th>
</tr>
<tr>
<th colspan="2"><strong>IPv4</strong></th>
</tr>
<tr>
<th colspan="2">45.147.229.23:443</th>
</tr>
</thead>
</table>
<h1></h1>
</div></div><div class="f-blog-thumbnail-xl"></div></div></div></div></div><script src="https://d3e54v103j8qbb.cloudfront.net/js/jquery-3.5.1.min.dc5e7f18c8.js?site=634fc5026f66af518e897c77" type="text/javascript" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script><script src="https://cdn.prod.website-files.com/634fc5026f66af518e897c77/js/webflow.schunk.4a394eb5af8156f2.js" type="text/javascript"></script><script src="https://cdn.prod.website-files.com/634fc5026f66af518e897c77/js/webflow.schunk.64a7cb4b4fd9b8bb.js" type="text/javascript"></script><script src="https://cdn.prod.website-files.com/634fc5026f66af518e897c77/js/webflow.3ed2dcdf.f0a45d32760549a0.js" type="text/javascript"></script><script>
const elements = document.querySelectorAll('[ms-code-truncate]');

elements.forEach((element) => {
  const charLimit = parseInt(element.getAttribute('ms-code-truncate'));

  // Create a helper function that will recursively traverse the DOM tree
  const traverseNodes = (node, count) => {
    for (let child of node.childNodes) {
      // If the node is a text node, truncate if necessary
      if (child.nodeType === Node.TEXT_NODE) {
        if (count + child.textContent.length > charLimit) {
          child.textContent = child.textContent.slice(0, charLimit - count) + '...';
          return count + child.textContent.length;
        }
        count += child.textContent.length;
      }
      // If the node is an element, recurse through its children
      else if (child.nodeType === Node.ELEMENT_NODE) {
        count = traverseNodes(child, count);
      }
    }
    return count;
  }

  // Create a deep clone of the element to work on. This is so that we don't modify the original element
  // until we have completely finished processing.
  const clone = element.cloneNode(true);

  // Traverse and truncate the cloned node
  traverseNodes(clone, 0);

  // Replace the original element with our modified clone
  element.parentNode.replaceChild(clone, element);
});
</script>



<!-- Start of HubSpot Embed Code -->
<script type="text/javascript" id="hs-script-loader" async defer src="//js.hs-scripts.com/7140541.js"></script>
<!-- End of HubSpot Embed Code -->

<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PQDP7HJ"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) --><!-- Go to www.addthis.com/dashboard to customize your tools -->
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-5dfcdbd70364954c"></script>
<script>
document.getElementById("content").querySelectorAll("h2,h3,h4,h5,h6").forEach(function(heading, i) { // runs a function for all headings inside your rich text element
  let str = heading.innerHTML; // adds section titles to slugs
  str = str.replace(/\s+/g, '-').replace(/[Â°&\/\\#,+()$~%.'":;*?<>{}]/g, "").toLowerCase(); // replaces spaces with hyphens, removes special characters and extra spaces from the headings, and applies lowercase in slugs
  heading.setAttribute("id", str); // gives each heading a unique id
  const item = document.createElement("a"); // creates an anchor element called "item" for each heading
  item.innerHTML = heading.innerHTML; // gives each item the text of the corresponding heading
  ("h2,h3,h4,h5,h6").split(",").forEach(function(x) { // runs a function for each item in your headings list
    if (heading.tagName.toLowerCase()==x) {
      item.classList.add("tocitem", "toc-" + x); // gives each item the correct class
    }
  });
  item.setAttribute("href", "#" + str); // gives each item the correct anchor link
  document.querySelector("#toc").appendChild(item); // places each item inside the Table of Contents div
});
</script><script src="https://hubspotonwebflow.com/assets/js/form-124.js" type="text/javascript" integrity="sha384-bjyNIOqAKScdeQ3THsDZLGagNN56B4X2Auu9YZIGu+tA/PlggMk4jbWruG/P6zYj" crossorigin="anonymous"></script></body></html>