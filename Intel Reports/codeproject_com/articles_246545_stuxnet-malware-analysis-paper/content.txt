<!DOCTYPE html><html lang="en"><head><meta charSet="utf-8"/><meta name="viewport" content="width=device-width, initial-scale=1"/><link rel="preload" as="image" imageSrcSet="/_next/image?url=%2Flogo250x135.gif&amp;w=256&amp;q=75 1x, /_next/image?url=%2Flogo250x135.gif&amp;w=640&amp;q=75 2x"/><link rel="stylesheet" href="/_next/static/css/f00fbee724adea66.css" data-precedence="next"/><link rel="preload" as="script" fetchPriority="low" href="/_next/static/chunks/webpack-5ed466aeca77ac7a.js"/><script src="/_next/static/chunks/4bd1b696-4098621b6d81f3cf.js" async=""></script><script src="/_next/static/chunks/684-7067fe44ff85ebe6.js" async=""></script><script src="/_next/static/chunks/main-app-f38f0d9153b95312.js" async=""></script><script src="/_next/static/chunks/869-095b567be01917e3.js" async=""></script><script src="/_next/static/chunks/app/layout-12dfdcc6fc1e5fcf.js" async=""></script><script src="/_next/static/chunks/app/article/%5BarticleType%5D/%5BarticleId%5D/%5BarticleSlug%5D/page-1251365ce5bc4953.js" async=""></script><script async="" src="https://securepubads.g.doubleclick.net/tag/js/gpt.js"></script><link rel="preload" href="https://www.googletagmanager.com/gtag/js?id=G-VW6LK9H6PP" as="script"/><meta name="next-size-adjust" content=""/><link rel="apple-touch-icon" sizes="144x144" href="/favicon/apple-touch-icon.png"/><link rel="icon" type="image/png" sizes="32x32" href="/favicon/favicon-32x32.png"/><link rel="icon" type="image/png" sizes="16x16" href="/favicon/favicon-16x16.png"/><link rel="manifest" href="/favicon/manifest.json"/><link rel="mask-icon" href="/favicon/safari-pinned-tab.svg" color="#ff9900"/><meta property="og:title" content="CodeProject"/><meta property="og:image" content="https://www.codeproject.com/favicon/mstile-150x150.png"/><meta property="og:description" content="For those who code"/><meta property="og:url" content="https://www.codeproject.com"/><title>Stuxnet Malware Analysis Paper - CodeProject</title><link rel="manifest" href="/manifest.json"/><script>document.querySelectorAll('body link[rel="icon"], body link[rel="apple-touch-icon"]').forEach(el => document.head.appendChild(el))</script><script src="/_next/static/chunks/polyfills-42372ed130431b0a.js" noModule=""></script></head><body class="__className_2277ee"><header><div class="custom-container gap-2 py-1 text-gray-light flex justify-between whitespace-nowrap z-10 relative px-1 md:px-0"><div class="flex-1 md:ml-20"><span class="hidden md:block">65.938<!-- --> articles</span><span class="block md:hidden">65.9<!-- -->K</span></div><div class="flex-1">CodeProject is changing.<!-- --> <a class="!text-gray-lightest" href="/info/Changes.aspx">Read more.</a></div><div class="flex-1"></div><div class="flex-1"></div></div><div class="mb-2 mt-2 md:mt-0"><div class="h-[94px] bg-primary"><div class="custom-container relative h-full"><a href="/"><img alt="Home" width="250" height="135" decoding="async" data-nimg="1" class="absolute -top-[31px]" style="color:transparent" srcSet="/_next/image?url=%2Flogo250x135.gif&amp;w=256&amp;q=75 1x, /_next/image?url=%2Flogo250x135.gif&amp;w=640&amp;q=75 2x" src="/_next/image?url=%2Flogo250x135.gif&amp;w=640&amp;q=75"/></a><div class="w-[calc(100%-300px)] translate-x-[300px] translate-y-[2px] h-[90px] relative overflow-hidden"><div id="div-gpt-ad-1738591571151-0" style="min-width:728px;min-height:90px" class="absolute top-0 left-0"></div></div></div></div></div><nav class="custom-container py-1 px-2 whitespace-nowrap"><ul class="flex gap-2 border-b border-border-gray"><li class="relative leading-normal hidden md:block"><a class="block py-0.5 px-2 font-bold cursor-pointer !text-gray-light border border-transparent" href="/">home</a></li><li class="relative leading-normal"><a class="block py-0.5 px-2 font-bold cursor-pointer !text-gray-light border border-transparent" href="/script/Articles/Latest.aspx">articles</a><ul class="absolute border border-border-gray bg-white border-b-4 border-b-primary pb-2 z-10 hidden bottom-0 left-0 translate-y-full translate-x-0"><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/SiteMap.aspx">Browse topics<span class="absolute top-1/2 right-1 -translate-y-1/2">&gt;</span></a><ul class="absolute border border-border-gray bg-white border-b-4 border-b-primary pb-2 z-10 hidden -top-[1px] right-0 translate-x-full"><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=AI">Artificial Intelligence<span class="absolute top-1/2 right-1 -translate-y-1/2">&gt;</span></a><ul class="absolute border border-border-gray bg-white border-b-4 border-b-primary pb-2 z-10 hidden -top-[1px] right-0 translate-x-full"><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Automation">Automation</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=big-data">big-data</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=machine-learning">machine-learning</a></li></ul></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Containers">Containers<span class="absolute top-1/2 right-1 -translate-y-1/2">&gt;</span></a><ul class="absolute border border-border-gray bg-white border-b-4 border-b-primary pb-2 z-10 hidden -top-[1px] right-0 translate-x-full"><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=docker">docker</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=virtual-machine">virtual-machine</a></li></ul></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=database">Database Development<span class="absolute top-1/2 right-1 -translate-y-1/2">&gt;</span></a><ul class="absolute border border-border-gray bg-white border-b-4 border-b-primary pb-2 z-10 hidden -top-[1px] right-0 translate-x-full"><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Elasticsearch">Elasticsearch</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Lucene">Lucene</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=MongoDB">mongodb</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=MySQL">MySQL</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=NoSQL">NoSQL</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=PostgreSQL">PostgreSQL</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Redis">Redis</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=SQL-Server">SQL Server</a></li></ul></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Desktop">Desktop Programming<span class="absolute top-1/2 right-1 -translate-y-1/2">&gt;</span></a><ul class="absolute border border-border-gray bg-white border-b-4 border-b-primary pb-2 z-10 hidden -top-[1px] right-0 translate-x-full"><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=ATL">ATL</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Cocoa">Cocoa</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=MFC">MFC</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=QT">QT</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Swing">Swing</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=system">system</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=UWP">UWP</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Win32">Win32</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=WinForms">WinForms</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=WPF">WPF</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=WTL">WTL</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=X11">X11</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=XAML">XAML</a></li></ul></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=DevOps">DevOps<span class="absolute top-1/2 right-1 -translate-y-1/2">&gt;</span></a><ul class="absolute border border-border-gray bg-white border-b-4 border-b-primary pb-2 z-10 hidden -top-[1px] right-0 translate-x-full"><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Agile">Agile</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Continuous-build">Continuous-build</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Continuous-delivery">Continuous-delivery</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Deployment">Deployment</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Git">Git</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=load-testing">load-testing</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=testing">testing</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=TFS">TFS</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=unit-testing">unit-testing</a></li></ul></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Game">Game Development<span class="absolute top-1/2 right-1 -translate-y-1/2">&gt;</span></a><ul class="absolute border border-border-gray bg-white border-b-4 border-b-primary pb-2 z-10 hidden -top-[1px] right-0 translate-x-full"><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Unity">Unity</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Unreal">Unreal</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=XBox">XBox</a></li></ul></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=performance">High Performance Computing<span class="absolute top-1/2 right-1 -translate-y-1/2">&gt;</span></a><ul class="absolute border border-border-gray bg-white border-b-4 border-b-primary pb-2 z-10 hidden -top-[1px] right-0 translate-x-full"><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=GPU">GPU</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=optimization">optimization</a></li></ul></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=IoT">Internet of Things<span class="absolute top-1/2 right-1 -translate-y-1/2">&gt;</span></a><ul class="absolute border border-border-gray bg-white border-b-4 border-b-primary pb-2 z-10 hidden -top-[1px] right-0 translate-x-full"><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=wearables">wearable</a></li></ul></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Mobile">Mobile Apps<span class="absolute top-1/2 right-1 -translate-y-1/2">&gt;</span></a><ul class="absolute border border-border-gray bg-white border-b-4 border-b-primary pb-2 z-10 hidden -top-[1px] right-0 translate-x-full"><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Android">Android</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=AWS">AWS</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Azure">Azure</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Cordova">Cordova</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=ExtJS">ExtJS</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=google-cloud">google-cloud</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=iOS">iOS</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=nativescript">nativescript</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=PhoneGap">PhoneGap</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=storage">storage</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=WinMobile">Windows Mobile</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Xamarin">Xamarin</a></li></ul></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Multimedia">Multimedia<span class="absolute top-1/2 right-1 -translate-y-1/2">&gt;</span></a><ul class="absolute border border-border-gray bg-white border-b-4 border-b-primary pb-2 z-10 hidden -top-[1px] right-0 translate-x-full"><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=ASM">ASM</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=ASP">ASP</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=audio">audio</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=audio-video">audio video</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Bash">Bash</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Basic">Basic</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Csharp">C#</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Cplusplus">C++</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=COBOL">cobol</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Compression">Compression</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Dart">Dart</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=dbase">dbase</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Design">Design/Graphics</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=DirectX">DirectX</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Emulation">Emulation</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Exceptions">Exceptions</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Fsharp">F#</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=file">file</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=GDI">GDI</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=GDIplus">GDI+</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Image-Processing">Image-Processing</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Internet">Internet</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Java">Java</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Javascript">Javascript</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=localization">localization</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Lua">Lua</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=MSIL">MSIL</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Objective-C">Objective C</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=OpenGL">OpenGL</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Pascal">Pascal</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Perl">Perl</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=PHP">PHP</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=PowerShell">PowerShell</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=printing">printing</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Python">Python</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Razor">Razor</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=regular-expression">regular expression</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Ruby">Ruby</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Scala">scala</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Shell">Shell</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Sorting">Sorting</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=SQL">SQL</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=string">string</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Swift">Swift</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=threads">threads</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=usability">usability</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=VB">VB</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=VB.NET">VB.NET</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=VBScript">VBScript</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Video">Video</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=XML">XML</a></li></ul></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=security">Security<span class="absolute top-1/2 right-1 -translate-y-1/2">&gt;</span></a><ul class="absolute border border-border-gray bg-white border-b-4 border-b-primary pb-2 z-10 hidden -top-[1px] right-0 translate-x-full"><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=blockchain">blockchain</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=cryptography">cryptography</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Encryption">Encryption</a></li></ul></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Web">Web Development<span class="absolute top-1/2 right-1 -translate-y-1/2">&gt;</span></a><ul class="absolute border border-border-gray bg-white border-b-4 border-b-primary pb-2 z-10 hidden -top-[1px] right-0 translate-x-full"><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Apache">Apache</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=ASP.NET">ASP.NET</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=CSS">CSS</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=CSS3">CSS3</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=HTML">HTML</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=HTML5">HTML5</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=IIS">IIS</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Kestrel">Kestrel</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=LESS">LESS</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Node.js">Node.js</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=React">React</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=Spring">Spring</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Content/Tag.aspx?tags=XHTML">XHTML</a></li></ul></li></ul></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Articles/Latest.aspx">Latest articles</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/Articles/TopArticles.aspx">Top articles</a></li></ul></li><li class="relative leading-normal"><a class="block py-0.5 px-2 font-bold cursor-pointer !text-gray-light border border-transparent" href="/Feature">features</a><ul class="absolute border border-border-gray bg-white border-b-4 border-b-primary pb-2 z-10 hidden bottom-0 left-0 translate-y-full translate-x-0"><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/script/News/List.aspx">News</a></li><li class="cursor-pointer block relative leading-normal box-border"><a href="https://sdnews.io/" class="py-0.5 px-5 block !text-inherit relative" rel="nofollow noreferrer">The Insider Newsletter</a></li><li class="cursor-pointer block relative leading-normal box-border"><a href="https://sdnews.io/" class="py-0.5 px-5 block !text-inherit relative" rel="nofollow noreferrer">The Daily Build Newsletter</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/Info/Stuff.aspx">CodeProject Stuff</a></li></ul></li><li class="relative leading-normal"><a class="block py-0.5 px-2 font-bold cursor-pointer !text-gray-light border border-transparent" href="/KB/FAQs">help</a><ul class="absolute border border-border-gray bg-white border-b-4 border-b-primary pb-2 z-10 hidden bottom-0 left-0 translate-y-full translate-x-0"><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/info/guide.aspx">What is &#x27;CodeProject&#x27;?</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/KB/FAQs">General FAQ</a></li><li class="cursor-pointer block relative leading-normal box-border"><a class="py-0.5 px-5 block !text-inherit relative" href="/info/about.aspx">About Us</a></li></ul></li></ul></nav></header><main class="px-2 py-10"><div class="custom-container flex px-2 gap-8 overflow-hidden"><div class="w-[948px] max-w-full"><div class="flex gap-2 mb-2 flex-wrap"><a rel="tag" href="/Tags/Advanced" class="px-2 border border-border-yellow rounded-l-full text-gray-light visited:text-gray-light hover:underline hover:bg-yellow-light">Advanced</a><a rel="tag" href="/Tags/Windows" class="px-2 border border-border-yellow rounded-l-full text-gray-light visited:text-gray-light hover:underline hover:bg-yellow-light">Windows</a></div><h1 class="text-4xl text-text-gray">Stuxnet Malware Analysis Paper</h1><div class="max-w-[600px]"><div class="flex pt-4 justify-between"><div class="text-base hover:underline font-bold"><a class="text-gray-lightest" href="/script/Membership/View.aspx?mid=5879897">AmrThabet</a></div><div class="flex items-center gap-2"><div class="flex"><img alt="starIcon" loading="lazy" width="24" height="24" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2Ficons%2FstarIcon.png&amp;w=32&amp;q=75 1x, /_next/image?url=%2Ficons%2FstarIcon.png&amp;w=48&amp;q=75 2x" src="/_next/image?url=%2Ficons%2FstarIcon.png&amp;w=48&amp;q=75"/><img alt="starIcon" loading="lazy" width="24" height="24" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2Ficons%2FstarIcon.png&amp;w=32&amp;q=75 1x, /_next/image?url=%2Ficons%2FstarIcon.png&amp;w=48&amp;q=75 2x" src="/_next/image?url=%2Ficons%2FstarIcon.png&amp;w=48&amp;q=75"/><img alt="starIcon" loading="lazy" width="24" height="24" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2Ficons%2FstarIcon.png&amp;w=32&amp;q=75 1x, /_next/image?url=%2Ficons%2FstarIcon.png&amp;w=48&amp;q=75 2x" src="/_next/image?url=%2Ficons%2FstarIcon.png&amp;w=48&amp;q=75"/><img alt="starIcon" loading="lazy" width="24" height="24" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2Ficons%2FstarIcon.png&amp;w=32&amp;q=75 1x, /_next/image?url=%2Ficons%2FstarIcon.png&amp;w=48&amp;q=75 2x" src="/_next/image?url=%2Ficons%2FstarIcon.png&amp;w=48&amp;q=75"/><div class="relative"><img alt="emptyStarIcon" loading="lazy" width="24" height="24" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2Ficons%2FemptyStarIcon.png&amp;w=32&amp;q=75 1x, /_next/image?url=%2Ficons%2FemptyStarIcon.png&amp;w=48&amp;q=75 2x" src="/_next/image?url=%2Ficons%2FemptyStarIcon.png&amp;w=48&amp;q=75"/><div class="absolute left-0 top-0 overflow-hidden" style="max-width:94.89793999999998%"><img alt="starIcon" loading="lazy" width="24" height="24" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2Ficons%2FstarIcon.png&amp;w=32&amp;q=75 1x, /_next/image?url=%2Ficons%2FstarIcon.png&amp;w=48&amp;q=75 2x" src="/_next/image?url=%2Ficons%2FstarIcon.png&amp;w=48&amp;q=75"/></div></div></div><p class="text-sm">4.95<!-- -->/5 (<!-- -->50<!-- --> vote<!-- -->s<!-- -->)</p></div></div><div class="flex pt-2 gap-4"><p class="text-gray-lightest text-[13px]">Sep 6, 2011</p><a class="text-[13px] flex" href="http://www.codeproject.com/info/cpol10.aspx">CPOL</a><p class="text-gray-lightest text-[13px]">29<!-- --> min read</p><div class="flex gap-1 items-center"><img alt="viewsIcon" loading="lazy" width="16" height="16" decoding="async" data-nimg="1" class="w-4 h-4" style="color:transparent" srcSet="/_next/image?url=%2Ficons%2FviewsIcon.png&amp;w=16&amp;q=75 1x, /_next/image?url=%2Ficons%2FviewsIcon.png&amp;w=32&amp;q=75 2x" src="/_next/image?url=%2Ficons%2FviewsIcon.png&amp;w=32&amp;q=75"/><p class="text-gray-lightest text-[13px] pl-0.5">247376</p></div><div class="flex gap-1 items-center"><img alt="downloadIcon" loading="lazy" width="16" height="16" decoding="async" data-nimg="1" class="w-4 h-4" style="color:transparent" srcSet="/_next/image?url=%2Ficons%2FdownloadIcon.png&amp;w=16&amp;q=75 1x, /_next/image?url=%2Ficons%2FdownloadIcon.png&amp;w=32&amp;q=75 2x" src="/_next/image?url=%2Ficons%2FdownloadIcon.png&amp;w=32&amp;q=75"/><p class="text-gray-lightest text-[13px] pl-0.5">5844</p></div></div></div><p class="pt-6 pb-4 text-gray-lightest">This article will focus on Stuxnet’s windows infection methods and spreading methods. The tricks were used by stuxnet and the evidences behind the criminals of stuxnet.</p><div class="max-w-full"><div><div class="article"><ul class="download">
	<li><a href="StuxnetMalware/Stuxnet_Malware_Analysis_Paper.pdf">Download the Article in PDF - 2.17 MB </a></li></ul>

<h2>Table Of Contents</h2>

<ul>
	<li><a href="#ch1">1. Introduction:</a>&nbsp;</li>	<li><a href="#ch2">2. Payload:</a>&nbsp;</li>	<li><a href="#ch3">3. Suspects:</a></li>	<li><a href="#ch4">4. Technical Details:</a>
	<ul>
		<li><a href="#ch4.1">4.1.Stuxnet Live Cycle</a></li>		<li><a href="#ch4.2">4.2. Main Dropper (~WTR4132.TMP)</a></li>		<li><a href="#ch4.3">4.3. Main Stuxnet DLL</a>
		<ul>
			<li><a href="#ch4.3.1">4.3.1. Escalating the Privileges and Injecting Into a New Process</a></li>			<li><a href="#ch4.3.2">4.3.2. Main Stuxnet DLL: Installing Stuxnet into the Infected Machine</a></li>		</ul>
		</li>		<li><a href="#ch4.4">4.4. Spreading Mechanism</a>
		<ul>
			<li><a href="#ch4.4.1">4.4.1. The USB Drives Infection</a></li>			<li><a href="#ch4.4.2">4.4.2. Spreading via Network</a></li>		</ul>
		</li>		<li><a href="#ch4.5">4.5. Updating Mechanism</a>
		<ul>
			<li><a href="#ch4.5.1">4.5.1. Updating via Internet</a></li>			<li><a href="#ch4.5.2">4.5.2. Updating via Peer to Peer Connection</a></li>		</ul>
		</li>		<li><a href="#ch4.6">4.6. Rootkits</a>
		<ul>
			<li><a href="#ch4.6.1">4.6.1. User-Mode Rootkit (~WTR4141.TMP)</a></li>			<li><a href="#ch4.6.2">4.6.2. Kernel-Mode Rootkit (MRxNet)</a></li>		</ul>
		</li>		<li><a href="#ch4.7">4.7. Loading Mechanism</a>
		<ul>
			<li><a href="#ch4.7.1">4.7.1. ~WTR4141.TMP</a></li>			<li><a href="#ch4.7.2">4.7.2. MRxCls Loader Driver</a>
			<ul>
				<li><a href="#ch4.7.2.1">4.7.2.1. The Input</a></li>				<li><a href="#ch4.7.2.2">4.7.2.2. Initialization</a></li>				<li><a href="#ch4.7.2.3">4.7.2.3. Stage One : Injecting data in kernel-mode</a></li>				<li><a href="#ch4.7.2.4">4.7.2.4. Stage Two : Creating kernel32 Import and Overwriting the Entrypoint</a></li>				<li><a href="#ch4.7.2.5">4.7.2.5. Stage Three : Loading and Executing Stuxnet in The User-Mode</a></li>			</ul>
			</li>		</ul>
		</li>	</ul>
	</li>	<li><a href="#ch5">5. Conclusion</a></li>	<li><a href="#ch6">6. References:</a></li></ul>

<p><a name="ch1"></a></p>

<h2>1. Introduction</h2>

<p>Stuxnet is not only a new virus or worm but it's a new era of malware. This virus changed the meaning of malware and their goals. You hear about a virus annoying people or stealing banks or credit cards, but that's the first time you hear about virus damages buildings, destroys machines or kills people and that's Stuxnet.<br>
Stuxnet has gained a lot of attention from malware researchers and media in the last year. It's created to sabotage Iran's nuclear program.</p>

<p>This complex threat uses up to four zero-day vulnerabilities in windows OS and includes many tricks to avoid being detected by the behavioral-blocking antivirus programs. It damaged the Iranian nuclear reactor and its machines by infecting the PLCs (Programmable Logic Controller) that control the machines there. That makes it modify the control program which changes the behavior of the machine.</p>

<p>Here we will talk about the technical details about stuxnet and the experience that I got from analyzing this malware. We will talk about how stuxnet works and the stuxnet life cycle. But here we will not talk about the SCADA systems and how stuxnet infects them and we will take a hint on the vulnerabilities that are used by stuxnet.</p>

<p><a name="ch2"></a></p>

<h2>2. Payload</h2>

<p>This worm was created mainly to sabotage the Iranian Nuclear Program. Once installed on a PC, Stuxnet uses Siemens' default passwords to gain access to the systems that run the WinCC and PCS 7 programs which control and modify the code of the PLCs (programmable logic controller) which control the machines themselves</p>

<p>Stuxnet operates in two stages after infection, according to Symantec Security Response Supervisor Liam O'Murchu. First it uploads configuration information about the Siemens system to a command-and-control server. Then the attackers are able to pick a target and actually reprogram the way it works. "They decide how they want the PLCs to work for them, and then they send code to the infected machines that will change how the PLCs work," O'Murchu said.</p>

<p>It managed to infect facilities tied to Iran's controversial nuclear programme before re-programming control systems to spin up high-speed centrifuges and slow them down</p>

<p><a name="ch3"></a></p>

<h2>3. Suspects</h2>

<p>Israel is an obvious suspect. Israel considers a nuclear Iran to be a direct existential threat. But, until now, there's no real evidence says that Israel who really creates this worm. There are some theories said that there are evidences on Israel as the creator depending on some dates and words found inside the malware and also there's an analysis from the industrial control-systems maker "Siemens" reportedly backs speculation that Iran may have been the target of Stuxnet's attack and that Israel may have been involved.</p>

<p>A report by the New York Times suggested Stuxnet was a joint US-Israeli operation that was tested by Israel on industrial control systems at the Dimona nuclear complex during 2008 prior to its release a year later, around June 2009. The worm wasn't detected by anyone until a year later, suggesting that for all its possible shortcomings the worm was effective at escaping detection on compromised systems.</p>

<p>But these evidences aren't real evidences in the court and the wormâ€˜s still a perfect crime.</p>

<p><a name="ch4"></a></p>

<h2>4.Technical Details</h2>

<p><a name="ch4.1"></a></p>

<h3>4.1.Stuxnet Live Cycle</h3>

<p><img border="0" height="480" hspace="0" src="StuxnetMalware/01.jpg" width="497"></p>

<p>This is the live cycle of stuxnet virus on windows OS. We will describe every step in this cycle beginning by WTR4132.TMP File and that's the main dropper of stuxnet worm.</p>

<p><a name="ch4.2"></a></p>

<h3>4.2. Main Dropper (~WTR4132.TMP)</h3>

<p>This File is a dynamic link library file loaded into Explorer.exe (we will describe the loading of it in the booting mechanism). It begins the execution by searching for a section in it named ".stub" section.</p>

<p><img border="0" height="180" hspace="0" src="StuxnetMalware/02_small.jpg" width="640"></p>

<p>This section contains the main stuxnet DLL file. And this DLL contains all stuxnet's functions, mechanisms, files and rootkits.</p>

<p>And that's the MZ File inside .stub section:</p>

<p>&nbsp;<br>
<img border="0" height="156" hspace="0" src="StuxnetMalware/03.jpg" width="640"></p>

<p>This Section (".stub") includes also the configuration data of stuxnet which is so important on the spreading mechanism, updating mechanism and many other things.</p>

<p>After finding this section, it loads stuxnet DLL file in a special way. First, it allocates a memory buffer for the DLL file to be loaded. Then, it patches 6 <em>ntdll.dll</em> APIs with these names:</p>

<ol>
	<li><em>ZwMapViewOfSection</em></li>	<li><em>ZwCreateSection</em></li>	<li><em>ZwOpenFile </em></li>	<li><em>ZwClose </em></li>	<li><em>ZwQueryAttributesFile&nbsp;</em></li>	<li><em>ZwQuerySection</em></li></ol>

<p>To force these APIs to make .stub section like the file which you need to open with ZwOpenFile and to read from this section as it's a file on the harddisk. These patches make LoadLibraryA load a DLL file not from the harddisk (as usual) but from a place in the memory.</p>

<p>It calls LoadLibraryA with the DLLName like KERNEL32.DLL.ASLR.XXXX to load the Main DLL File as I described above and at then end, it calls to Function #15 in the Main Stuxnet DLL.</p>

<p><a name="ch4.3"></a></p>

<h3>4.3. Main Stuxnet DLL</h3>

<p><em><a name="ch4.3.1"></a> </em></p>

<h3><em>4.3.1. Escalating the Privileges and Injecting Into a New Process</em></h3>

<p>When the main DLL begins the execution. It unupx itself (as the DLL is upxed) and then checks the configuration data of this stuxnet sample and checks the environment to choose if it will continue or exit from the beginning.</p>

<p>It checks if the configuration data is correct and recent and then it checks the admin rights. If it's not running on administrator level, it uses one of two zero-day vulnerabilities to escalate the privileges and run in the administrator level.</p>

<p><em>CVE-2010-2743(MS-10-073) "“Win32K.sys Keyboard Layout Vulnerability<br>
CVE-xxxx-xxxx(MS-xx-xxx) "“Windows Task Scheduler Vulnerability</em></p>

<p>These two vulnerabilities allow the worm to escalate the privileges and run in a new process ("csrss.exe" in case of Win32K.sys) or as a new task in the Task Scheduler case. It makes also some other checks like checking on 64bits or 32bits and so on. After everything goes right and the environment is prepared to be infected by stuxnet, it injects itself into another process to install itself from that process. The injection begins by searching for an Antivirus application installed in the machine.</p>

<p>Depending on the antivirus application (AVP or McAfee or what?), stuxnet chooses the process to inject itself into. If there's no antivirus program it chooses "lsass.exe"</p>

<p>You will see the processes that stuxnet could choose in this Figure:</p>

<p><br>
<img border="0" height="320" hspace="0" src="StuxnetMalware/04.jpg" width="382"></p>

<p>It doesn't search for that process in the task manager to inject itself into, but it creates a new process (using CreateProcess) of the chosen application in the suspended form like that:</p>

<pre lang="asm">
ESP ==&gt;  &gt; 0006F4F8  |ModuleFileName = "C:\WINDOWS\\system32\\lsass.exe"
ESP+4    &gt; 00000000  |CommandLine = NULL
ESP+8    &gt; 00000000  |pProcessSecurity = NULL
ESP+C    &gt; 00000000  |pThreadSecurity = NULL
ESP+10   &gt; 00000001  |InheritHandles = TRUE
ESP+14   &gt; 0800000C  |CreationFlags = CREATE_SUSPENDED|DETACHED_PROCESS|CREATE_NO_WINDOW
ESP+18   &gt; 00000000  |pEnvironment = NULL
ESP+1C   &gt; 00000000  |CurrentDir = NULL
ESP+20   &gt; 0006F13C  |pStartupInfo = 0006F13C
ESP+24   &gt; 0006F730  \pProcessInfo = 0006F730.</pre>

<p>After creating this process, it injects itself by a special way. This special way is to unload the program from its memory (ex. unload lsass.exe module from its memory) and load another PE File from stuxnet DLL resources in the same place of the previously unloaded module (lsass.exe for example).</p>

<p>Before loading this new PE File, stuxnet makes some modifications to the file by adding new section (in the beginning) named <strong>".verif"</strong>. This section makes the PE File's size equal to the size of the previously unloaded module. And at the place of the entrypoint of the unloaded module, stuxnet writes a "jmp" instruction to the entrypoint of this PE File.</p>

<p><img border="0" height="133" hspace="0" src="StuxnetMalware/05_small.jpg" width="640"></p>

<p>The last step, stuxnet copies the .stub section and the main DLL to the memory of the infected process and writes on .bin section the pointer to this memory buffer.</p>

<p><img border="0" height="333" hspace="0" src="StuxnetMalware/06_small.jpg" width="640"></p>

<p>At the end, stuxnet resumes the main thread of this infected process. The PE file reloads the main stuxnet DLL and calls to Function #16.</p>

<p><em><a name="ch4.3.2"></a> </em></p>

<h3><em>4.3.2. Main Stuxnet DLL: Installing Stuxnet into the Infected Machine</em></h3>

<p>The Function #16 begins by checking the configuration data and be sure that everything is ready to begin the installation. And also, it checks if the there's a value in the registry with this name "<code>NTVDM TRACE</code>" in</p>

<p><code>SOFTWARE\Microsoft\Windows\CurrentVersion\MS-DOS Emulation</code></p>

<p>And then, it checks if this value equal to "19790509". This special number seems a date "May 9, 1979" and this date has a historical meaning (by Wikipedia) "Habib Elghanian was executed by a firing squad in Tehran sending shock waves through the closely knit Iranian Jewish community"</p>

<p><img border="0" height="123" hspace="0" src="StuxnetMalware/07_small.jpg" width="640"></p>

<p>After this test, Stuxnet installs itself with writing 6 files in the Windows directory 4 encrypted files:</p>

<ul>
	<li><em>C:\WINDOWS\inf\oem7A.PNF</em></li>	<li><em>C:\WINDOWS\inf\oem6C.PNF</em></li>	<li><em>C:\WINDOWS\inf\mdmcpq3.PNF</em></li>	<li><em>C:\WINDOWS\inf\mdmeric3.PNF</em></li></ul>

<p>And 2 device drivers:</p>

<ul>
	<li><em>C:\WINDOWS\system32\Drivers\mrxnet.sys</em></li>	<li><em>C:\WINDOWS\system32\Drivers\mrxcls.sys</em></li></ul>

<p>After that, it installs the device drivers into the registry to be sure that they will run every time the computer boots.<br>
It forces them to be loaded in the beginning before most of windows system applications (and that's will be explained later).</p>

<p><img border="0" height="328" hspace="0" src="StuxnetMalware/08_small.jpg" width="640"> <img border="0" height="329" hspace="0" src="StuxnetMalware/09_small.jpg" width="640"></p>

<p>After the installation, it loads the mrxnet driver by calling <code>ZwLoadDriver</code>. It calls to this function after adjusting its privileges by "<code>AdjustTokenPrivileges</code>" to add the <code>SeLoadDriverPrivilege </code>to its privileges.</p>

<p>At the end, it modifies the Windows Firewall (Windows Defender) setting to avoid being stopped by this firewall. It some values in the key:</p>

<pre lang="text">
SOFTWARE\Microsoft\Windows Defender\Real-Time Protection </pre>

<p>And the values are:</p>

<ul>
	<li><code>EnableUnknownPrompts</code></li>	<li><code>EnableKnownGoodPrompts</code></li>	<li><code>ServicesAndDriversAgent</code></li></ul>

<p>It sets them all to zero and disables the firewall for stuxnet.</p>

<p>Now the installation ends and now we will talk about the spreading mechanisms</p>

<p><a name="ch4.4"></a></p>

<h3>4.4. Spreading Mechanism</h3>

<p><a name="ch4.4.1"></a></p>

<h3><em>4.4.1. The USB Drives Infection</em></h3>

<p>For infecting USB Flash memory, Stuxnet creates a new hidden window "<code>AFX64c313</code>" and get notified of any new USB flash memory inserted to the computer by waiting for "<code>WM_DEVICECHANGE</code>" Windows Message. After getting notified of a new drive added to the computer (USB Flash Memory), stuxnet writes 6 files into the flash memory drive:</p>

<ul>
	<li>Copy of Shortcut to.lnk</li>	<li>Copy of Copy of Shortcut to.lnk</li>	<li>Copy of Copy of Copy of Shortcut to.lnk</li>	<li>Copy of Copy of Copy of Copy of Shortcut to.lnk</li></ul>

<p>And 2 executable files (DLL files):</p>

<ul>
	<li><em>~WTR4141.tmp</em></li>	<li><em>~WTR4132.tmp</em></li></ul>

<p>These malformed shortcut files use vulnerability in Windows Shell named:</p>

<p><em>CVE-2010-2568(MS-10-046) -Windows Shell LNK Vulnerability</em></p>

<p>This vulnerability is not a buffer-overflow vulnerability but it's due to a bad way for windows to load icons for LNK files which creates the vulnerability.</p>

<p>These shortcuts are special shortcuts for an unknown type of files named CPL Files. These files are the Control Panel applications like datetime.cpl in windows directory (you can test it) and many of them in windows directory.</p>

<p>You can create a shortcut similar to these shortcuts by choosing Control Panel then Switch to classical view then right click on any application of them and click "create shortcut" as what you see in the picture:</p>

<p><img border="0" height="158" hspace="0" src="StuxnetMalware/10.jpg" width="203"></p>

<p>If you try to compare this shortcut with the malformed shortcut by stuxnet you will see that:</p>

<p><img border="0" height="200" hspace="0" src="StuxnetMalware/11_small.jpg" width="640"></p>

<p>They are very similar (the white spaces are the similar places). Maybe the differences are in the end of the shortcut.</p>

<p>If we analyze the shortcut, we will see that all shortcuts contain the following sections:</p>


	<table border="1" cellpadding="1" cellspacing="1"><tbody>		<tr>			<td><strong>.LNK File Format</strong></td>		</tr>		<tr>			<td>1. Header</td>		</tr>		<tr>			<td>2. Shell Item Id List</td>		</tr>		<tr>			<td>3. File Location Info</td>		</tr>		<tr>			<td>4. Description</td>		</tr>		<tr>			<td>5. Relative Path</td>		</tr>		<tr>			<td>6. Working Directory</td>		</tr>		<tr>			<td>7. Command Line Arguments</td>		</tr>		<tr>			<td>8. Icon Filename</td>		</tr>		<tr>			<td>9. Additional Info</td>		</tr>	</tbody></table>

<p>In our Malformed Shortcut, it has only the first 2 sections. The first section is like this:</p>


	<table border="1" cellpadding="1" cellspacing="1" width="500"><tbody>		<tr>			<td><strong>Stuxnet's Shortcut Header</strong></td>		</tr>	</tbody></table>


	<table border="1" cellpadding="1" cellspacing="1" width="500"><tbody>		<tr>			<td>Magic</td>			<td>4C 00 00 00</td>		</tr>		<tr>			<td>GUID</td>			<td>01 14 02 00 00 00 00 00 C0 00 00 00 00 00 00 46</td>		</tr>		<tr>			<td>Shortcut flags</td>			<td>0x0000001 : Shell Item ID List present</td>		</tr>		<tr>			<td>Target File flags</td>			<td>00 00 00 00</td>		</tr>		<tr>			<td>Creation Time</td>			<td>00 00 00 00 00 00 00 00</td>		</tr>		<tr>			<td>Last access time:</td>			<td>00 00 00 00 00 00 00 00</td>		</tr>		<tr>			<td>Modified time</td>			<td>00 00 00 00 00 00 00 00</td>		</tr>		<tr>			<td>File length</td>			<td>00 00 00 00 (the target is not a file)</td>		</tr>		<tr>			<td>Icon Number</td>			<td>00 00 00 00</td>		</tr>		<tr>			<td>Show Window</td>			<td>01 00 00 00 == 1 (Normal Window)</td>		</tr>		<tr>			<td>Hot Key</td>			<td>00 00 00 00</td>		</tr>		<tr>			<td>Reserved</td>			<td>00 00 00 00</td>		</tr>		<tr>			<td>Reserved</td>			<td>00 00 00 00</td>		</tr>	</tbody></table>

<p>This header is exactly the same in the CPL Shortcut that you create before. The next Section is the Shell Item ID List.</p>

<p>It's hard to explain this section but every object in windows (like a folder, a file, the control panel and so on) has a PIDL. I don't have any idea PIDLs but it's an ID with reference to this object.</p>

<p>The Shell Item ID List begins by an unsigned short represent the size of the whole Section (in the Original CPL File the size == size_of_whole_file "“ size_of_header).</p>

<p>After that, this unsigned short followed by a size of an ID and then the ID of an item in the list then the next size and item and so on until reach the end of this section. This section ends by an item its size equal to zero.</p>

<p>These IDs could represent a file like that:</p>

<p><img border="0" height="96" hspace="0" src="StuxnetMalware/12.jpg" width="631"></p>

<p>Or represent a virtual object like Control Panel like in this malformed shortcut.</p>

<p>In the malformed shortcut, this section begins with the pid of the Control Panel and then some other pids until reach an item contains the path and the filename of stuxnet DLL (<code>"~WTR4141.TMP"</code>)</p>

<p>The path is like that:</p>

<pre lang="text">
\\.\STORAGE#RemovableMedia#7&amp;364cf31c&amp;0&amp;RM#{53f5630d-b6bf-11d0-94f2-00a0c91efb8b}\~WTR4141.tmp </pre>

<p>You will ask me, so why there are four shortcut files?</p>

<p>Because every file of them contains a different form of the path to wtr4141.tmp file to ensure that stuxnet is compatible with all versions of windows OS that have this vulnerability</p>

<p>The paths are these:</p>

<p><strong>Windows7: </strong></p>

<p><code>\\.\STORAGE#Volume#_??_USBSTOR#Disk&amp;Ven_____USB&amp;Prod_FLASH_DRIVE&amp;Rev_#12345000100000000173&amp;0#{53f56307-b6bf-11d0-94f2-00a0c91efb8b}#{53f5630d-b6bf-11d0-94f2-00a0c91efb8b}\~WTR4141.tmp</code></p>

<p><strong>Windows Vista: </strong></p>

<p><code>\\.\STORAGE#Volume#1&amp;19f7e59c&amp;0&amp;_??_USBSTOR#Disk&amp;Ven_____USB&amp;Prod_FLASH_DRIVE&amp;Rev_#12345000100000000173&amp;0#{53f56307-b6bf-11d0-94f2-00a0c91efb8b}#{53f5630d-b6bf-11d0-94f2-00a0c91efb8b}\~WTR4141.tmp</code></p>

<p><strong>Windows XP, Windows Server 2003 and Windows 2000: </strong></p>

<p><code>\\.\STORAGE#RemovableMedia#8&amp;1c5235dc&amp;0&amp;RM#{53f5630d-b6bf-11d0-94f2-00a0c91efb8b}\~WTR4141.tmp</code></p>

<p>These paths force <em>Explorer.exe</em> to load stuxnet and execute its code.</p>

<p>The Explorer calls to an API named "Shell32.LoadCPLModule" to load the icon for this shortcut which calls to LoadLibraryA API which executes the main function of wtr4141.tmp.</p>

<p>That's the infection mechanism for Stuxnet using this vulnerability.</p>

<p><a name="ch4.4.2"></a></p>

<h3><em>4.4.2. Spreading via Network</em></h3>

<p>Stuxnet spreads via Network using one of vulnerabilities:</p>

<ul>
	<li><em>CVE-2008-4250(MS-08-067) "“Windows Server Service NetPathCanonicalize() Vulnerability</em></li>	<li><em>CVE-2010-2729(MS-10-061) "“Windows Print Spooler Service Vulnerability</em></li></ul>

<p>The first vulnerability is not a zero-day vulnerability, it's already known. This vulnerability was used before by Conficker. In this vulnerability, stuxnet looks for C$ and Admin$ shares on remote systems. Then, it copies itself as a file named "DEFRAGxxxxx.TMP" in the first writable directory found on the share.</p>

<p>And then, it tries to execute a command:</p>

<pre lang="text">
rundll32.exe "DEFRAGxxxxx.TMP",DllGetClassObjectEx</pre>

<p>The second vulnerability is a zero-day vulnerability. This vulnerability was first described by Carsten Kohler in Hackin9 Security Magazine 04-2009 in an article named "<em>Print Your Shell</em>"</p>

<p>This vulnerability wasn't used in the wild until Stuxnet. This vulnerability allows a guest user account to communicate to a machine with a shared printer and writes a file to the system directory in it.</p>

<p>The windows APIs for printing allows to choose the directory that you wish to copy your file to and with an API named "<code>GetSpoolFileHandle</code>" you can get the file handle of the newly created file in the target machine and then you can easily with ReadFile &amp; WriteFile APIs you can copy your file into the target machine.</p>

<p>For stuxnet, it copies 2 files into the target machine:</p>

<ul>
	<li><em>Windows\System32\winsta.exe</em></li>	<li><em>Windows\System32\wbem\mof\sysnullevnt.mof</em></li></ul>

<p>The first file is the stuxnet dropper and the second is a Managed Object Format file. This file (under some conditions) executes winsta.exe the stuxnet dropper.</p>

<p><a name="ch4.5"></a></p>

<h3>4.5. Updating Mechanism</h3>

<p><a name="ch4.5.1"></a></p>

<h3><em>4.5.1. Updating via Internet</em></h3>

<p>Stuxnet updates itself via Internet by establishing a HTTP connection to 2 malformed websites:</p>

<ul>
	<li><em>www.mypremierfutbol.com</em></li>	<li><em>www.todaysfutbol.com </em></li></ul>

<p>It sends an encrypted data like that:</p>

<p><em>http://www.mypremierfutbol.com/index.php?data=data_to_send</em></p>

<p>This data contains the IP, the Adaptor name and description and some other data related to the infected machine and stuxnet. After that it receives the newer version of stuxnet (in an encrypted form) begins by the imagebase then a flag and at the last the Executable Image</p>

<p><a name="ch4.5.2"></a></p>

<h3><em>4.5.2. Updating via Peer to Peer Connection</em></h3>

<p>After Stuxnet infects a machine, it creates a RPC server and listen to any connections comes from the any PC on the Network.</p>

<p>In the other PCs in the network, stuxnet establish a connection with this RPC Server.</p>

<p>This way allows stuxnet to update itself in the isolated PCs (from the Internet) but has in its network a PC has the ability to connect to the internet. This way is to suitable while infecting companies as there are some inside PCs haven't the ability to connect directly to the internet.</p>

<p><a name="ch4.6"></a></p>

<h3>4.6. Rootkits</h3>

<p><em><a name="ch4.6.1"></a> </em></p>

<h3><em>4.6.1. User-Mode Rootkit (~WTR4141.TMP)</em></h3>

<p>This file is a DLL File. It's loaded by the LNK Vulnerability. This file not only loads the Main Stuxnet Dropper (~WTR4132.TMP) but also it works as a user-mode rootkit to hide stuxnet files in the flash memory.</p>

<p>It firstly hooks the File Management APIs: (<code>FindFirstFileW</code>, <code>FindNextFileW</code>, <code>FindFirstFileExW</code>, <code>ntQueryDirectoryFile</code>, <code>zwQueryDirectoryFile</code>)</p>

<p>It hooks them by modifying the import table of the main process (Explorer.exe) and all loaded modules (searches for them in the TEB Thread Environment Block) by changing the address of these functions to the address of another functions inside the rootkit.</p>

<p><img border="0" height="474" hspace="0" src="StuxnetMalware/13.jpg" width="640"></p>

<p>These functions call to the original functions (windows APIs) and then modify their outputs to hide stuxnet files.</p>

<p>They check the output if it contains .LNK files with a specific size (4171 bytes) or contains a file named ~WTRabcd.TMP (as a+b+c+d = 10)</p>

<p><img border="0" height="471" hspace="0" src="StuxnetMalware/14.jpg" width="582"></p>

<p>This rootkit is only used once while infecting a PC but after that stuxnet installs another rootkit named "MRxNet" and it's a kernel-mode rootkit.</p>

<p><em><a name="ch4.6.2"></a> </em></p>

<h3><em>4.6.2. Kernel-Mode Rootkit (MRxNet)</em></h3>

<p><em>MRxNet is a simple filesystem filter created to hide the files that was created in the USB flash memory (.LNK &amp; TMP files) like in the user-mode rootkit. I reversed this driver manually into C++ using IDA Pro. You can download it code from My Blog: <a href="http://www.amrthabet.co.cc/">http://www.amrthabet.co.cc</a><br>
Or from the attachment files with this article</em></p>

<p><img border="0" height="238" hspace="0" src="StuxnetMalware/15_small.jpg" width="640"></p>

<p>But this rootkit doesn't modify the addresses in the import table, but it adds itself to the driver chain of these drivers</p>

<ul>
	<li><em>\\FileSystem\\ntfs</em></li>	<li><em>\\FileSystem\\fastfat</em></li>	<li><em>\\FileSystem\\cdfs</em></li></ul>

<p>These drivers are the main drivers for handling the files and folders in your machine. When MRxNet adds itself to the driver chain, it receives the requests (I/O Request Packets ISPs) to these drivers before these drivers receive them.</p>

<p>Receiving these requests allows MRxNet to modify the input to these drivers. And by using this trick MRxNet hides a directory named:</p>

<pre lang="text">
{58763ECF-8AC3-4a5f-9430-1A310CE4BE0A} </pre>

<p>By deleting its name from the input request (ISP) to these drivers. I don't know what this name represents it seems something like a GUID.</p>

<p>But the main goal of MRxNet is to modify the output of these drivers, so MRxNet adds to the request an IOCompletionRoutine. This routine is executed by the last driver executed in the chain after the result prepared (the reply to the request) and needed to be sent to the user again.</p>

<p>This function was created by Windows to modify the output of any driver and that's what MRxNet does.</p>

<p><img border="0" height="116" hspace="0" src="StuxnetMalware/16.jpg" width="517"></p>

<p>MRxNet modifies the output like the user-mode rootkit and deletes the entries that seem stuxnet files as what you can see in the figure:</p>

<p><img border="0" height="165" hspace="0" src="StuxnetMalware/17.jpg" width="480"></p>

<p>MRxNet contains a strange string in its data (seems a debug message before):<br>
<code>b:\\myrtus\\src\\objfre_w2k_x86\\i386\\guava.pdb</code><br>
This strange string contains a word "myrtus" and this word represents "MyRTUs" or represents a Hebrew word.</p>

<p>It could lead to the criminals behind this attack (Israel) or it could be a false positive "¦ but no one know.</p>

<p><a name="ch4.7"></a></p>

<h3>4.7. Loading Mechanism</h3>

<p><em><a name="ch4.7.1"></a> </em></p>

<h3><em>4.7.1. ~WTR4141.TMP</em></h3>

<p>This file (as we said before) is loaded by LNK Vulnerability. This file loads the Main Stuxnet Dropper by a known way. It calls to LoadLibraryA to load it and LoadLibraryA executes the main Entrypoint for this dropper to load and install stuxnet.</p>

<p><em><a name="ch4.7.2"></a> </em></p>

<h3><em>4.7.2. MRxCls Loader Driver</em></h3>

<p>MrxCls is a very complex project. It includes many features and abilities to load a program secretly without the attention of any Antivirus application specially the behavioral antiviruses.</p>

<p>This virus seems a separate project, wasn't created by the creators of Stuxnet worm. It seems that it was created by another department in the organization that creates Stuxnet.<br>
This driver wasn't modified along with the versions of stuxnet and also it contains many features that are not used by stuxnet worm.</p>

<p>This organization is not only an organization for programming but also it has spies and thieves in other companies that make it steal some certifications from big companies like Realtek Semi-Conductor Co-Op. This driver is signed with Realtek as a product from this company as you can in this image.</p>

<p><img border="0" height="365" hspace="0" src="StuxnetMalware/18_small.jpg" width="640"></p>

<p>That's what makes us sure that this virus is not a game from some virus writers but it's a planned crime.</p>

<p>Here we will talk about the technical details of the driver, how it works and the internal structure of it.</p>

<p>First we will talk about the input of the driver and then we will talk about how this driver deals with it.</p>

<p><a name="ch4.7.2.1"></a></p>

<h3><em>4.7.2.1. The Input</em></h3>

<p>MrxCls takes the parameters from the registry from a key name:</p>

<pre lang="text">
"HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\MRxCls" </pre>

<p>It reads the "<code>Data</code>" value in this key as the parameter of the driver. This data contains an encrypted data. After decrypting it, we found this:</p>

<p><img border="0" height="412" hspace="0" src="StuxnetMalware/19.jpg" width="519"><br>
<img src="StuxnetMalware/20.jpg"></p>

<p>This data contains the name of some system processes and filenames for stuxnet files. This data tells the driver the filename of the stuxnet file and the process that stuxnet needs to inject its file in. This data is organized as follows:<br>
First the Header and its size is dynamic.</p>


	<table border="1" cellpadding="1" cellspacing="1"><tbody>		<tr>			<td><strong>Header</strong></td>		</tr>		<tr>			<td>Signature = 0 (4 bytes)</td>		</tr>		<tr>			<td>Pointer to The body (the end of Header) (4 bytes)</td>		</tr>		<tr>			<td>Reserved (4 bytes)</td>		</tr>		<tr>			<td>Number of Injections (4 bytes)</td>		</tr>	</tbody></table>

<p>After that there's an array of elements defined by the Number of Injections in the header. Every element contains the name of the infected process, the dll file to inject into this process, the flags and the key to decrypt the virus.</p>

<p>All stuxnet files are encrypted but with a key equal zero<br>
The structure of these elements is like that:</p>

<p>First it begins with the details of the infection and then followed with the Unicode strings of the process name and the stuxnet filename.</p>


	<table border="1" cellpadding="1" cellspacing="1"><tbody>		<tr>			<td><strong>The Elements</strong></td>		</tr>		<tr>			<td>Reserved (4 bytes)</td>		</tr>		<tr>			<td>The Exported Function To call in the injected dll (2 bytes)</td>		</tr>		<tr>			<td>Flags (2 bytes)</td>		</tr>		<tr>			<td>Key (4 bytes)</td>		</tr>		<tr>			<td>Reserved (4 bytes)</td>		</tr>	</tbody></table>

<p>Then the Unicode strings like that:</p>


	<table border="1" cellpadding="1" cellspacing="1"><tbody>		<tr>			<td>Size of the process name unicode string (4 bytes)</td>		</tr>		<tr>			<td>Process name (variable size)</td>		</tr>		<tr>			<td>The Size of the stuxnet filename string (4 bytes)</td>		</tr>		<tr>			<td>Unicode string of the stuxnet file (variable size)</td>		</tr>	</tbody></table>

<p>And that's repeated for every element in the array.</p>

<p>The Flags in The Elements Header contain 2 bits. The first bit describes if the file (that needs to be injected) is encrypted or not (and always it's encrypted).<br>
And the second bit describes if the infected process will contain the decrypted stuxnet file ( To be loaded by a built-in PE loader) or will only contain the filename of the stuxnet file to be loaded by LoadLibraryW in the user-mode (and that's never used)</p>

<p>So, Stuxnet worm writes an input data to the driver with this structure contains this information:</p>

<ul>
	<li><strong>services.exe:</strong>&nbsp; <code>\SystemRoot\inf\oem7A.PNF</code> (stuxnet main dll) and call to Export 1</li>	<li><strong>S7tgtopx.exe:</strong> <code>\SystemRoot\inf\oem7A.PNF </code>and call to Export 2 (SCADA infection)</li>	<li><strong>CCProjectMgr.exe:</strong> <code>SystemRoot\inf\oem7A.PNF </code>and call to Export 2</li>	<li><strong>explorer.exe:</strong> \<code>SystemRoot\inf\oem7m.PNF </code>and call to Export 2</li></ul>

<p>Stuxnet also always sets the flags equal "11" or 3 and that means that the stuxnet file is encrypted and needs to be decrypted and that the driver must read and decrypt it and then allocate memory in the infected process equal the size of the file to copy the file in. after that in the user-mode, the file will be loaded by a built-in PE loader that's injected in the process memory beside the injected file.</p>

<p>All the infection process will be described in the next sections but that's a brief.</p>

<p><em><a name="ch4.7.2.2"></a> </em></p>

<h3><em>4.7.2.2. Initialization</em></h3>

<p>First, stuxnet creates a registry key and add some values to it for registering the MrxCls driver to be loaded on every start.<br>
This key is "<code>SYSTEM\CurrentControlSet\Services\MRxCls</code>". It then adds the "<code>Data</code>" value that contains the parameters of the driver and makes it load as a boot driver and that makes it load before many service applications and drivers.</p>

<p>When it loads, it begins by decrypting a part from its data with size 0x278 bytes and gets the following data:</p>

<pre>
..................\REGISTRY\MACHINE\SYSTEM\CurrentControlSet\Ser
vices\MRxCls..........................................Data......
................................................................
.....................................0??\Device\MRxClsDvX.......
................................................................
.............??Â»</pre>

<p>&nbsp;</p>

<p>After that it gets the parameters form "Data" value, decrypts it and saves it as an element in a generic table.</p>

<p>Also it checks the "<code>InitSafeBootMode</code>" and checks for "<code>KdDebuggerEnabled</code>". If the kd debugger is enabled, it will end. And then, it creates a new device by calling "<code>IoCreateDevice</code>" API and creates a new driver named "<code>\Device\MRxClsDvX</code>".</p>

<p>It then gets some functions like "<code>RtlGetVersion</code>" and "<code>KeAreAllApcsDisabled</code>" with a function named "<code>MmGetSystemRoutineAddress</code>" (not <code>GetProcAddress</code>).</p>

<p>And at the end it calls to "<code>PsSetLoadImageNotifyRoutine</code>" to register a function to be called every time a process or a module is loaded in the memory (including <em>services.exe</em> and <em>kernel32.dll</em> that will be used in the driver).</p>

<p>Now we will talk about the <code>NotifyRoutine </code>and the stages of injecting stuxnet files into a system process.</p>

<p><em><a name="ch4.7.2.3"></a> </em></p>

<h3><em>4.7.2.3. Stage One : Injecting data in kernel-mode</em></h3>

<p>Every time a process or a module is loaded in the memory, this process is called given three parameters: The name of the module, the ProcessId and the ImageInfo.</p>

<p>It begins by checking the loaded module with "kernel32.dll" (and we will talk about it later) and if it's not kernel32, it parses the registry data (that's loaded and decrypted before) and loops on the elements of this data searching for the name of the process that needs to inject stuxnet file into and compare it with the loaded process's name.</p>

<p>When it found a process is needed to inject stuxnet file into. It loads the stuxnet file into the process's memory and decrypts it. After that, it copies a junk of data (contains code) into the process's memory and then it writes "MZ" and "PE" and some other data into this junk of data.</p>

<p>This junk of data seems that it's two PE files (was created separately before) and was deleted from them some common marks of a PE file (e.g. MZ, PE, 0x14C, 0xE0 and so on). These bytes prove that this is a PE file so the author of MrxCls deleted them and wrote a code to write them again in their places again (And that's surely a way to disguise them and hide the meaning of these junk data). Not only that but also he deleted the name of all sections.</p>

<p>Then, the driver writes in the process's memory the pointer to this place, pointer to the beginning of the MZ header (there's 0x101C bytes before it, remember that because we'll talk about it again in stage three) and the size of this PE module in specific places in memory inside the MZ module.</p>

<p>After that it jumps on the process PE module. It begins by parsing its PE and gets the entrypoint of the process's module and then, it checks that there's no relocables between the entrypoint and the entrypoint + 0xC (0xC is the size of the overwritten code at the entrypoint so it checks that to be sure there won't any problem on overwriting the entrypoint).</p>

<p>Then, it searches for a snippet of code in the process "<em>Ntoskrnl.exe</em>" or the process "<em>Ntkrnlpa.exe</em>". And this code snippet is:</p>

<p>For Windows 2000 or lower:</p>

<pre lang="asm">
mov eax,77
lea edx,dword ptr [esp+4]
int 2E
retn 14
</pre>

<p>Or in Windows XP or later:</p>

<pre lang="asm">
push 104 
call loc_1
???
loc_1:
	mov eax,0
	lea edx,dword ptr [esp+4]
	pushfd
	push 8
	call ZwAllocateVirtualMemory
	retn 14
</pre>

<p>So, - as you can see - these snippets of code calls to ZwAllocateVirtualMemory. So the driver calls to one of them to call to ZwAllocateVirtualMemory given the parameters that change the memory permissions of the process entrypoint to entrypoint+0x0C from READ_ONLY to COPY_ON_WRITE (it seems a way to disguise the call to ZwAllocateVirtualMemory with these parameters to avoid the antiviruses).</p>

<p>At the end, it creates a buffer with size equal to the size of stuxnet file plus 0x28 bytes and then copy stuxnet file into this buffer (after 0x28 bytes) and writes some important data to the user-mode code (stage 3) in this 0x28 bytes with the following structure:</p>


	<table border="1" cellpadding="1" cellspacing="1"><tbody>		<tr>			<td><strong>Kernel-Mode to User-Mode Parameters </strong></td>		</tr>		<tr>			<td>Reserved (8 bytes)</td>		</tr>		<tr>			<td>Pointer to stuxnet file (buffer +28) (8 bytes)</td>		</tr>		<tr>			<td>Size of the stuxnet file (8 bytes)</td>		</tr>		<tr>			<td>the Exported function (8 bytes)</td>		</tr>		<tr>			<td>2nd bit in the flags in the data (about using a PELoader or LoadLibraryW) (8 bytes)</td>		</tr>	</tbody></table>

<p>Then, it creates a new element in the generic table with the following data (that will be exported to the stage 2):</p>


	<table border="1" cellpadding="1" cellspacing="1"><tbody>		<tr>			<td><strong>The Generic Table Element</strong></td>		</tr>		<tr>			<td>ProcessId</td>		</tr>		<tr>			<td>InjectedMemory at "MZ" + 0x2B8</td>		</tr>		<tr>			<td>InjectedMemory at "MZ" + 0x560 (the Entrypoint of the injected buffer)</td>		</tr>		<tr>			<td>Address of Entrypoint</td>		</tr>	</tbody></table>

<p>At last, it writes the place of this buffer (including stuxnet file) into a specific place in the copied PE module (the junk of data that copied to the process's memory previously).</p>

<p><a name="ch4.7.2.4"></a></p>

<h3><em>4.7.2.4. Stage Two : Creating kernel32 Import and Overwriting the Entrypoint</em></h3>

<p>As we said in the previous stage, the notify routine begins by checking the loaded module with "kernel32.dll". If not equal, it jumps to the stage 1. But if equal kernel32.dll, it jumps to the stage 2.</p>

<p>Because of it's the stage 2. It begins by checking that the stage 1 was passed and gets the results of this stage. It searches in the generic table for an element begins with the processId (the prcoessId that's the kernel32 module was loaded in) to get the generic table element with the structure that's in table 3-3-2.</p>

<p>Then, it creates an import table for the user-mode and writes them in the place that's in the 2nd element in the generic table element (InjectedMemory at "MZ" + 0x2B8). It gets 10 functions ?VirtualAlloc, VirtualFree, GetProcAddress, GetModuleHandle, LoadLibraryA, LoadLibraryW, lstrcmp, lstrcmpi, GetVersionEx, DeviceIoControl). It gets these functions using checksums written inside the driver.</p>

<p><img border="0" height="376" hspace="0" src="StuxnetMalware/21.jpg" width="403"></p>

<p>Then it saves the first 0xC bytes (12 bytes) after the import table by some bytes and then it modifies the entrypoint with the following:</p>

<pre lang="asm">
mov     eax, 0
call    eax
</pre>

<p>And then it modifies the immediate of "mov eax,0" with 3rd element of the generic table buffer (InjectedMemory at "MZ" + 0x560) and that's the entrypoint of the injected code. The InjectedMemory at "MZ" + 0x2B8 becomes like that:</p>


	<table border="1" cellpadding="1" cellspacing="1"><tbody>		<tr>			<td><strong>InjectedMemory at "MZ" + 0x2B8</strong></td>		</tr>		<tr>			<td>00: Imagebase</td>		</tr>		<tr>			<td>08: VirtualAlloc</td>		</tr>		<tr>			<td>10: VirtualFree</td>		</tr>		<tr>			<td>18: GetProcAddress</td>		</tr>		<tr>			<td>20: GetModuleHandle</td>		</tr>		<tr>			<td>28: LoadLibraryA</td>		</tr>		<tr>			<td>30: LoadLibraryW</td>		</tr>		<tr>			<td>38: lstrcmp</td>		</tr>		<tr>			<td>40: lstrcmpi</td>		</tr>		<tr>			<td>48: GetVersionEx</td>		</tr>		<tr>			<td>50: DeviceIoControl</td>		</tr>		<tr>			<td>58: Ptr to the beginning of the memory (before 101C from MZ)</td>		</tr>		<tr>			<td>60: Ptr to the InjectedMemory at MZ</td>		</tr>		<tr>			<td>68: 8A0 Size</td>		</tr>		<tr>			<td>70: Unknown</td>		</tr>		<tr>			<td>78: The EntryPoint of the process</td>		</tr>	</tbody></table>

<p>At the end, it exits the notify routine to begin the stage 3 of injecting stuxnet file in a process in the user-mode.</p>

<p><a name="ch4.7.2.5"></a></p>

<h3><em>4.7.2.5. Stage Three : Loading and Executing Stuxnet in The User-Mode </em></h3>

<p>I begin reversing this part by injecting these data (including the import table) into an application (I choose windbg as the infected process with stuxnet) and begin reversing this part using Ollydbg.</p>

<p>This crafted code begins by creating a new MZ header (or writes the missing data into a modified PE module) by writing the missed bytes like "MZ" or "PE" and so on "¦ in the injected memory at the 0x101C bytes to become the 2nd MZ Header in the injected memory.</p>

<p>And then, it gets the address of some functions and creates an array with these functions like in the figure:</p>

<p><img border="0" height="216" hspace="0" src="StuxnetMalware/22.jpg" width="423"></p>

<p>The 0xF90 is the size of the 2nd MZ Header in the injected code. Then, the crafted code loads both of these injected modules (with these PE headers) into new allocated memories inside the virtual memory of the infected process using a built-in PE Loader.</p>

<p>This PE loader has the ability to fix the relocables and loading the headers and the sections in the correct place (but it's a simple PE loader at last)</p>

<p>After that it calls to the entrypoint of the 1st Module. This module begins by saving SHE and then loads Stuxnet File by using LoadLibraryW or its PEloader by checking the 2nd bit in the flags in the data at the beginning of stuxnet buffer (in table 3-3-1).</p>

<p><img border="0" height="345" hspace="0" src="StuxnetMalware/23.jpg" width="640"></p>

<p>After Loading Stuxnet, it calls the chosen exported function in the stuxnet module (which also written in the first 28 bytes in the stuxnet buffer which described in Table 3-3-1).</p>

<p>At the end, it rewrites the modified entrypoint with the original code which already saved in memory (check the Table 3-4-1).</p>

<p>At last, it calls to DeviceIoControl which sends an Io request packet to mrxcls driver to reset again the permissions of the entrypoint to the entrypoint+0xC to its original state (Read-Only) and then calls to the entrypoint to make the process to run normally.</p>

<p><a name="ch5"></a></p>

<h2>5. Conclusion</h2>

<p>Stuxnet takes the attention of media because of its complexity, its political goals and the criminals behind it.</p>

<p>Stuxnet is the most sophisticated worm ever seen in public until now. It contain 4 zero-day vulnerabilities and one used before, a vulnerability in WinCC OS and not only that but also it has three rootkits and the most interesting feature in it that it infects the PLC</p>

<p>This worm changes the meaning of malware and creates a new era for malware researchers.</p>

<p>I hope you enjoyed from this long article. I'm waiting for your feedback.</p>

<p><a name="ch6"></a></p>

<h2>6. References:</h2>

<ul>
	<li>1."<em>W32.Stuxne Dossier</em>" by Symantec</li>	<li>2."<em>Stuxnet Under the Microscope</em>" by ESET</li>	<li>3."<em>The MRXCLS.SYS Malware Loader</em>" at <a href="http://www.geoffchappell.com/viewer.htm?doc=notes/security/stuxnet/mrxcls.htm">http://www.geoffchappell.com/viewer.htm?doc=notes/security/stuxnet/mrxcls.htm</a></li></ul></div></div></div></div><div><div id="div-gpt-ad-1738591766860-0" style="min-width:300px;min-height:600px" class="mt-40 sticky top-40"></div></div></div><!--$--><!--/$--><!--$--><!--/$--></main><footer class="custom-container flex flex-col gap-3 px-2"><div class="mt-2 py-4 min-h-36 bg-primary"></div><div class="border-t-4 border-primary p-3 flex justify-between"><nav class="flex-1"><ul><li><a href="http://developermedia.com/" rel="nofollow noreferrer">Advertise</a></li><li><a href="/info/privacy.aspx">Privacy</a></li><li><a href="/info/cookie.aspx">Cookies</a></li><li><a href="/info/TermsOfUse.aspx">Terms of Use</a></li></ul></nav><div class="flex-1"></div><div class="flex-1 text-gray text-sm text-right">Copyright © <a href="mailto:webmaster@codeproject.com">CodeProject</a>, 1999-2025<br/>All Rights Reserved.</div></div></footer><script src="/_next/static/chunks/webpack-5ed466aeca77ac7a.js" async=""></script><script>(self.__next_f=self.__next_f||[]).push([0])</script><script>self.__next_f.push([1,"1:\"$Sreact.fragment\"\n2:I[387,[\"869\",\"static/chunks/869-095b567be01917e3.js\",\"177\",\"static/chunks/app/layout-12dfdcc6fc1e5fcf.js\"],\"default\"]\n3:I[6874,[\"869\",\"static/chunks/869-095b567be01917e3.js\",\"394\",\"static/chunks/app/article/%5BarticleType%5D/%5BarticleId%5D/%5BarticleSlug%5D/page-1251365ce5bc4953.js\"],\"\"]\n4:I[3063,[\"869\",\"static/chunks/869-095b567be01917e3.js\",\"394\",\"static/chunks/app/article/%5BarticleType%5D/%5BarticleId%5D/%5BarticleSlug%5D/page-1251365ce5bc4953.js\"],\"Image\"]\n5:I[6932,[\"869\",\"static/chunks/869-095b567be01917e3.js\",\"394\",\"static/chunks/app/article/%5BarticleType%5D/%5BarticleId%5D/%5BarticleSlug%5D/page-1251365ce5bc4953.js\"],\"default\"]\n6:I[7231,[\"869\",\"static/chunks/869-095b567be01917e3.js\",\"177\",\"static/chunks/app/layout-12dfdcc6fc1e5fcf.js\"],\"default\"]\n7:I[7555,[],\"\"]\n8:I[1295,[],\"\"]\na:I[9665,[],\"MetadataBoundary\"]\nc:I[9665,[],\"OutletBoundary\"]\nf:I[4911,[],\"AsyncMetadataOutlet\"]\n11:I[9665,[],\"ViewportBoundary\"]\n13:I[6614,[],\"\"]\n14:\"$Sreact.suspense\"\n15:I[4911,[],\"AsyncMetadata\"]\n:HL[\"/_next/static/media/945b7384c5256ec3-s.p.ttf\",\"font\",{\"crossOrigin\":\"\",\"type\":\"font/ttf\"}]\n:HL[\"/_next/static/media/b55e164a6e7ce445-s.p.ttf\",\"font\",{\"crossOrigin\":\"\",\"type\":\"font/ttf\"}]\n:HL[\"/_next/static/media/e337cf18f0f81cb9-s.p.ttf\",\"font\",{\"crossOrigin\":\"\",\"type\":\"font/ttf\"}]\n:HL[\"/_next/static/media/f7794ce32483498f-s.p.ttf\",\"font\",{\"crossOrigin\":\"\",\"type\":\"font/ttf\"}]\n:HL[\"/_next/static/css/f00fbee724adea66.css\",\"style\"]\n"])</script><script>self.__next_f.push([1,"0:{\"P\":null,\"b\":\"z4wmX8YJoUNy8YcNeHh82\",\"p\":\"\",\"c\":[\"\",\"Articles\",\"246545\",\"Stuxnet-Malware-Analysis-Paper\"],\"i\":false,\"f\":[[[\"\",{\"children\":[\"article\",{\"children\":[[\"articleType\",\"Articles\",\"d\"],{\"children\":[[\"articleId\",\"246545\",\"d\"],{\"children\":[[\"articleSlug\",\"Stuxnet-Malware-Analysis-Paper\",\"d\"],{\"children\":[\"__PAGE__\",{}]}]}]}]}]},\"$undefined\",\"$undefined\",true],[\"\",[\"$\",\"$1\",\"c\",{\"children\":[[[\"$\",\"link\",\"0\",{\"rel\":\"stylesheet\",\"href\":\"/_next/static/css/f00fbee724adea66.css\",\"precedence\":\"next\",\"crossOrigin\":\"$undefined\",\"nonce\":\"$undefined\"}]],[\"$\",\"html\",null,{\"lang\":\"en\",\"children\":[[\"$\",\"head\",null,{\"children\":[[\"$\",\"link\",null,{\"rel\":\"apple-touch-icon\",\"sizes\":\"144x144\",\"href\":\"/favicon/apple-touch-icon.png\"}],[\"$\",\"link\",null,{\"rel\":\"icon\",\"type\":\"image/png\",\"sizes\":\"32x32\",\"href\":\"/favicon/favicon-32x32.png\"}],[\"$\",\"link\",null,{\"rel\":\"icon\",\"type\":\"image/png\",\"sizes\":\"16x16\",\"href\":\"/favicon/favicon-16x16.png\"}],[\"$\",\"link\",null,{\"rel\":\"manifest\",\"href\":\"/favicon/manifest.json\"}],[\"$\",\"link\",null,{\"rel\":\"mask-icon\",\"href\":\"/favicon/safari-pinned-tab.svg\",\"color\":\"#ff9900\"}],[\"$\",\"meta\",null,{\"property\":\"og:title\",\"content\":\"CodeProject\"}],[\"$\",\"meta\",null,{\"property\":\"og:image\",\"content\":\"https://www.codeproject.com/favicon/mstile-150x150.png\"}],[\"$\",\"meta\",null,{\"property\":\"og:description\",\"content\":\"For those who code\"}],[\"$\",\"meta\",null,{\"property\":\"og:url\",\"content\":\"https://www.codeproject.com\"}],[\"$\",\"script\",null,{\"async\":true,\"src\":\"https://securepubads.g.doubleclick.net/tag/js/gpt.js\"}],[\"$\",\"$L2\",null,{}]]}],[\"$\",\"body\",null,{\"className\":\"__className_2277ee\",\"children\":[[\"$\",\"header\",null,{\"children\":[[\"$\",\"div\",null,{\"className\":\"custom-container gap-2 py-1 text-gray-light flex justify-between whitespace-nowrap z-10 relative px-1 md:px-0\",\"children\":[[\"$\",\"div\",null,{\"className\":\"flex-1 md:ml-20\",\"children\":[[\"$\",\"span\",null,{\"className\":\"hidden md:block\",\"children\":[65.938,\" articles\"]}],[\"$\",\"span\",null,{\"className\":\"block md:hidden\",\"children\":[\"65.9\",\"K\"]}]]}],[\"$\",\"div\",null,{\"className\":\"flex-1\",\"children\":[\"CodeProject is changing.\",\" \",[\"$\",\"$L3\",null,{\"href\":\"/info/Changes.aspx\",\"className\":\"!text-gray-lightest\",\"children\":\"Read more.\"}]]}],[\"$\",\"div\",null,{\"className\":\"flex-1\"}],[\"$\",\"div\",null,{\"className\":\"flex-1\"}]]}],[\"$\",\"div\",null,{\"className\":\"mb-2 mt-2 md:mt-0\",\"children\":[\"$\",\"div\",null,{\"className\":\"h-[94px] bg-primary\",\"children\":[\"$\",\"div\",null,{\"className\":\"custom-container relative h-full\",\"children\":[[\"$\",\"$L3\",null,{\"href\":\"/\",\"children\":[\"$\",\"$L4\",null,{\"className\":\"absolute -top-[31px]\",\"src\":\"/logo250x135.gif\",\"priority\":true,\"alt\":\"Home\",\"width\":250,\"height\":135}]}],[\"$\",\"div\",null,{\"className\":\"w-[calc(100%-300px)] translate-x-[300px] translate-y-[2px] h-[90px] relative overflow-hidden\",\"children\":[\"$\",\"$L5\",null,{\"adUnit\":\"/67541884/CPLeader728\",\"adSlotId\":\"div-gpt-ad-1738591571151-0\",\"adSize\":[728,90],\"className\":\"absolute top-0 left-0\"}]}]]}]}]}],[\"$\",\"$L6\",null,{}]]}],[\"$\",\"main\",null,{\"className\":\"px-2 py-10\",\"children\":[\"$\",\"$L7\",null,{\"parallelRouterKey\":\"children\",\"error\":\"$undefined\",\"errorStyles\":\"$undefined\",\"errorScripts\":\"$undefined\",\"template\":[\"$\",\"$L8\",null,{}],\"templateStyles\":\"$undefined\",\"templateScripts\":\"$undefined\",\"notFound\":[[[\"$\",\"title\",null,{\"children\":\"404: This page could not be found.\"}],[\"$\",\"div\",null,{\"style\":{\"fontFamily\":\"system-ui,\\\"Segoe UI\\\",Roboto,Helvetica,Arial,sans-serif,\\\"Apple Color Emoji\\\",\\\"Segoe UI Emoji\\\"\",\"height\":\"100vh\",\"textAlign\":\"center\",\"display\":\"flex\",\"flexDirection\":\"column\",\"alignItems\":\"center\",\"justifyContent\":\"center\"},\"children\":[\"$\",\"div\",null,{\"children\":[[\"$\",\"style\",null,{\"dangerouslySetInnerHTML\":{\"__html\":\"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}\"}}],[\"$\",\"h1\",null,{\"className\":\"next-error-h1\",\"style\":{\"display\":\"inline-block\",\"margin\":\"0 20px 0 0\",\"padding\":\"0 23px 0 0\",\"fontSize\":24,\"fontWeight\":500,\"verticalAlign\":\"top\",\"lineHeight\":\"49px\"},\"children\":404}],[\"$\",\"div\",null,{\"style\":{\"display\":\"inline-block\"},\"children\":[\"$\",\"h2\",null,{\"style\":{\"fontSize\":14,\"fontWeight\":400,\"lineHeight\":\"49px\",\"margin\":0},\"children\":\"This page could not be found.\"}]}]]}]}]],[]],\"forbidden\":\"$undefined\",\"unauthorized\":\"$undefined\"}]}],[\"$\",\"footer\",null,{\"className\":\"custom-container flex flex-col gap-3 px-2\",\"children\":[[\"$\",\"div\",null,{\"className\":\"mt-2 py-4 min-h-36 bg-primary\"}],[\"$\",\"div\",null,{\"className\":\"border-t-4 border-primary p-3 flex justify-between\",\"children\":[[\"$\",\"nav\",null,{\"className\":\"flex-1\",\"children\":[\"$\",\"ul\",null,{\"children\":[[\"$\",\"li\",null,{\"children\":[\"$\",\"a\",null,{\"href\":\"http://developermedia.com/\",\"rel\":\"nofollow noreferrer\",\"children\":\"Advertise\"}]}],[\"$\",\"li\",null,{\"children\":[\"$\",\"$L3\",null,{\"href\":\"/info/privacy.aspx\",\"children\":\"Privacy\"}]}],[\"$\",\"li\",null,{\"children\":[\"$\",\"$L3\",null,{\"href\":\"/info/cookie.aspx\",\"children\":\"Cookies\"}]}],[\"$\",\"li\",null,{\"children\":[\"$\",\"$L3\",null,{\"href\":\"/info/TermsOfUse.aspx\",\"children\":\"Terms of Use\"}]}]]}]}],[\"$\",\"div\",null,{\"className\":\"flex-1\"}],[\"$\",\"div\",null,{\"className\":\"flex-1 text-gray text-sm text-right\",\"children\":[\"Copyright © \",[\"$\",\"a\",null,{\"href\":\"mailto:webmaster@codeproject.com\",\"children\":\"CodeProject\"}],\", 1999-2025\",[\"$\",\"br\",null,{}],\"All Rights Reserved.\"]}]]}]]}]]}]]}]]}],{\"children\":[\"article\",[\"$\",\"$1\",\"c\",{\"children\":[null,[\"$\",\"$L7\",null,{\"parallelRouterKey\":\"children\",\"error\":\"$undefined\",\"errorStyles\":\"$undefined\",\"errorScripts\":\"$undefined\",\"template\":[\"$\",\"$L8\",null,{}],\"templateStyles\":\"$undefined\",\"templateScripts\":\"$undefined\",\"notFound\":\"$undefined\",\"forbidden\":\"$undefined\",\"unauthorized\":\"$undefined\"}]]}],{\"children\":[[\"articleType\",\"Articles\",\"d\"],[\"$\",\"$1\",\"c\",{\"children\":[null,[\"$\",\"$L7\",null,{\"parallelRouterKey\":\"children\",\"error\":\"$undefined\",\"errorStyles\":\"$undefined\",\"errorScripts\":\"$undefined\",\"template\":[\"$\",\"$L8\",null,{}],\"templateStyles\":\"$undefined\",\"templateScripts\":\"$undefined\",\"notFound\":\"$undefined\",\"forbidden\":\"$undefined\",\"unauthorized\":\"$undefined\"}]]}],{\"children\":[[\"articleId\",\"246545\",\"d\"],[\"$\",\"$1\",\"c\",{\"children\":[null,[\"$\",\"$L7\",null,{\"parallelRouterKey\":\"children\",\"error\":\"$undefined\",\"errorStyles\":\"$undefined\",\"errorScripts\":\"$undefined\",\"template\":[\"$\",\"$L8\",null,{}],\"templateStyles\":\"$undefined\",\"templateScripts\":\"$undefined\",\"notFound\":\"$undefined\",\"forbidden\":\"$undefined\",\"unauthorized\":\"$undefined\"}]]}],{\"children\":[[\"articleSlug\",\"Stuxnet-Malware-Analysis-Paper\",\"d\"],[\"$\",\"$1\",\"c\",{\"children\":[null,[\"$\",\"$L7\",null,{\"parallelRouterKey\":\"children\",\"error\":\"$undefined\",\"errorStyles\":\"$undefined\",\"errorScripts\":\"$undefined\",\"template\":[\"$\",\"$L8\",null,{}],\"templateStyles\":\"$undefined\",\"templateScripts\":\"$undefined\",\"notFound\":\"$undefined\",\"forbidden\":\"$undefined\",\"unauthorized\":\"$undefined\"}]]}],{\"children\":[\"__PAGE__\",[\"$\",\"$1\",\"c\",{\"children\":[\"$L9\",[\"$\",\"$La\",null,{\"children\":\"$Lb\"}],null,[\"$\",\"$Lc\",null,{\"children\":[\"$Ld\",\"$Le\",[\"$\",\"$Lf\",null,{\"promise\":\"$@10\"}]]}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false]},null,false],[\"$\",\"$1\",\"h\",{\"children\":[null,[\"$\",\"$1\",\"jloA-djtLdlvjoTVJim7U\",{\"children\":[[\"$\",\"$L11\",null,{\"children\":\"$L12\"}],[\"$\",\"meta\",null,{\"name\":\"next-size-adjust\",\"content\":\"\"}]]}],null]}],false]],\"m\":\"$undefined\",\"G\":[\"$13\",\"$undefined\"],\"s\":false,\"S\":false}\n"])</script><script>self.__next_f.push([1,"b:[\"$\",\"$14\",null,{\"fallback\":null,\"children\":[\"$\",\"$L15\",null,{\"promise\":\"$@16\"}]}]\ne:null\n12:[[\"$\",\"meta\",\"0\",{\"charSet\":\"utf-8\"}],[\"$\",\"meta\",\"1\",{\"name\":\"viewport\",\"content\":\"width=device-width, initial-scale=1\"}]]\nd:null\n"])</script><script>self.__next_f.push([1,"16:{\"metadata\":[[\"$\",\"title\",\"0\",{\"children\":\"Stuxnet Malware Analysis Paper - CodeProject\"}],[\"$\",\"link\",\"1\",{\"rel\":\"manifest\",\"href\":\"/manifest.json\",\"crossOrigin\":\"$undefined\"}]],\"error\":null,\"digest\":\"$undefined\"}\n10:{\"metadata\":\"$16:metadata\",\"error\":null,\"digest\":\"$undefined\"}\n"])</script><script>self.__next_f.push([1,"17:I[9741,[\"869\",\"static/chunks/869-095b567be01917e3.js\",\"394\",\"static/chunks/app/article/%5BarticleType%5D/%5BarticleId%5D/%5BarticleSlug%5D/page-1251365ce5bc4953.js\"],\"default\"]\n19:I[6947,[\"869\",\"static/chunks/869-095b567be01917e3.js\",\"394\",\"static/chunks/app/article/%5BarticleType%5D/%5BarticleId%5D/%5BarticleSlug%5D/page-1251365ce5bc4953.js\"],\"default\"]\n18:T706f,"])</script><script>self.__next_f.push([1,"/*\n  This is the legacy article critical styles\n  They are added in order to reduce mvp development time\n  They should be refactored or completely replaced woth nextjs css modules in future\n*/\n\n::selection {\n  background-color: #f90;\n  color: #fff;\n  text-shadow: none;\n}\n.blank-background {\n  background-color: white;\n}\nhtml,\ndiv,\nspan,\napplet,\nobject,\niframe,\na,\nabbr,\nacronym,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nfont,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nfieldset,\nform,\nlabel,\ntable,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\nli,\nol,\nul {\n  margin: 0;\n  padding: 0;\n  border: 0;\n}\nhtml {\n  font-size: 16px;\n  -webkit-font-smoothing: antialiased;\n  font-smooth: always;\n}\nbody,\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nli,\ntr,\ntd,\nth,\ndd,\ndt {\n  font-size: 16px;\n  line-height: 1.4;\n  color: #111111;\n}\nbody {\n  margin: 0;\n}\nh1,\nh3,\nh4,\nh5,\nth {\n  font-weight: bold;\n}\nh1 {\n  color: #333333;\n  padding: 0px;\n  margin: 0 0 7px;\n  text-align: left;\n}\nh2 {\n  margin: 20px 0 11px;\n  padding: 0;\n  padding-bottom: 10px;\n  color: #333333;\n}\nh3 {\n  color: #ff9900;\n}\nh1 {\n  font-size: 38px;\n  font-weight: 400;\n}\nh2 {\n  font-size: 29px;\n  font-weight: 400;\n}\nh3 {\n  font-size: 19px;\n  font-weight: normal;\n}\nh4 {\n  font-size: 17px;\n}\npre {\n  color: black;\n  background-color: #fbedbb;\n  padding: 6px;\n  font: 14px Consolas, monospace, mono;\n  white-space: pre;\n  overflow: auto;\n  border: solid 1px #fbedbb;\n  -moz-tab-size: 4;\n  -o-tab-size: 4;\n  -webkit-tab-size: 4;\n  tab-size: 4;\n}\ncode {\n  color: #990000;\n  font: 15px Consolas, monospace, mono;\n}\ntable {\n  background-color: Transparent;\n}\nimg {\n  -ms-interpolation-mode: bicubic;\n}\na {\n  text-decoration: none;\n  color: #005782;\n}\na:visited {\n  color: #800080;\n}\na:hover {\n  text-decoration: underline;\n}\na:not([href]) {\n  color: inherit;\n  text-decoration: none;\n}\ninput[type=\"text\"],\ninput[type=\"url\"],\ninput[type=\"search\"],\ninput[type=\"email\"],\ninput[type=\"number\"],\ninput[type=\"password\"],\nselect,\ntextarea {\n  border: 1px solid #d7d7d7;\n  font-size: 16px;\n  padding: 5px;\n}\na.button,\na.button-large,\n.button,\n.button-large {\n  color: white;\n  background-color: #e08900;\n  border: 1px solid #cccccc;\n  text-decoration: none;\n  white-space: nowrap;\n  font-size: 100%;\n  padding: 4px;\n  cursor: pointer;\n  border-radius: 3px;\n  -webkit-border-radius: 3px;\n  -moz-border-radius: 3px;\n}\ntable.small-text td,\nul.small-text li,\nol.small-text li,\n.small-text {\n  font-size: 14px;\n}\n.invisible {\n  display: none;\n}\n.subdue,\n.subdue li,\ntr.subdue td {\n  color: #808080;\n}\n.bold {\n  font-weight: bold;\n}\n.align-left {\n  text-align: left;\n}\n.align-right {\n  text-align: right;\n}\n.align-center {\n  text-align: center;\n}\n.float-right {\n  float: right;\n}\n.float-left {\n  float: left;\n}\n.sticky {\n  position: sticky;\n  top: 0;\n}\n.extended {\n  width: 100%;\n  box-sizing: border-box;\n}\n.padded-top {\n  padding-top: 20px;\n}\n.tight {\n  margin: 0px;\n  padding: 0px;\n}\n.nowrap {\n  white-space: nowrap;\n}\n.fixed-layout {\n  table-layout: fixed;\n}\n.clip-text {\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n}\n.raised {\n  background-color: #fff8df;\n  border: 1px solid #cccccc;\n  -moz-box-shadow: 4px 4px 16px 1px rgba(0, 0, 0, 0.25);\n  -webkit-box-shadow: 4px 4px 16px 1px rgba(0, 0, 0, 0.25);\n  box-shadow: 4px 4px 16px 1px rgba(0, 0, 0, 0.25);\n}\nol,\nul {\n  padding-left: 40px;\n  margin: 10px 0;\n}\nol.compact li,\nul.compact li,\nol li.compact,\nul li.compact {\n  font-size: 14px;\n}\nul.download {\n  margin-top: 25px;\n}\nul.download li,\nul li.download,\nul.Download li,\nul li.Download {\n  background: url(\"/images/download24.png\") no-repeat scroll left center\n    transparent;\n  font-weight: bold;\n  list-style-type: none;\n  margin: 0px 0 6px -40px;\n  padding: 0 0 1px 30px;\n  vertical-align: middle;\n}\n.callout {\n  margin: 20px 0;\n  background-color: #ffffe1;\n  color: #333333;\n  border: 1px solid #cccccc;\n  padding: 15px;\n  border-radius: 3px;\n  -webkit-border-radius: 3px;\n  -moz-border-radius: 3px;\n}\n.trace {\n  padding: 20px;\n  background-color: #eeeeee;\n  color: #333333;\n  border: 1px solid red;\n  font-size: 13px;\n}\ntextarea,\ninput[type=\"text\"],\ninput[type=\"button\"],\ninput[type=\"submit\"] {\n  -webkit-appearance: none;\n  border-radius: 0;\n}\n.container-content {\n  background-color: white;\n  position: relative;\n  zoom: 1;\n  padding: 0 9px;\n  cursor: default;\n}\n.container-content-wrap {\n  margin: auto;\n  max-width: 1270px;\n}\n.container-content pre,\n.container-code pre,\n.answer pre {\n  white-space: pre-wrap;\n  /* css-3 */\n  white-space: -moz-pre-wrap;\n  /* Mozilla, since 1999 */\n  white-space: -pre-wrap;\n  /* Opera 4-6 */\n  white-space: -o-pre-wrap;\n  /* Opera 7 */\n  word-wrap: break-word;\n  /* Internet Explorer 5.5+ */\n  _white-space: pre;\n  /* IE only hack to re-specify in addition to word-wrap  */\n  word-break: break-word;\n  -ms-word-break: break-word;\n}\n.flex-container {\n  display: -webkit-box;\n  /* OLD - iOS 6-, Safari 3.1-6 */\n  display: -moz-box;\n  /* OLD - Firefox 19- (buggy but mostly works) */\n  display: -ms-flexbox;\n  /* TWEENER - IE 10 */\n  display: -webkit-flex;\n  /* NEW - Chrome */\n  display: flex;\n  /* NEW, Spec - Opera 12.1, Firefox 20+ */\n}\n.flex-extend {\n  justify-content: space-between;\n}\n.flex-wrap {\n  flex-wrap: wrap;\n}\n.flex-item {\n  -webkit-box-flex: 1;\n  /* OLD - iOS 6-, Safari 3.1-6 */\n  -moz-box-flex: 1;\n  /* OLD - Firefox 19- */\n  -webkit-flex: 1;\n  /* Chrome */\n  -ms-flex: 1;\n  /* IE 10 */\n  flex: 1;\n}\n.flex-item-tight {\n  flex: 0 1 auto;\n}\n.hover-container {\n  display: block;\n  position: relative;\n}\n.clearfix:after,\n.container:after {\n  display: block;\n  content: \".\";\n  visibility: hidden;\n  height: 0px;\n  clear: both;\n}\n.clearfix,\n.container {\n  display: inline-block;\n  /* Mac IE5 sees this */\n  /* Mac IE5 comment hack \\*/\n  display: block;\n  /* Mac IE5 doesn't see this, but everyone else does */\n}\n.access-link,\n.access-link img {\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  width: 1px;\n  height: 1px;\n  z-index: 101;\n  border-style: none;\n  margin-top: -1px;\n  overflow: hidden;\n}\n.site-top-menu {\n  white-space: nowrap;\n  position: absolute;\n  z-index: 101;\n  width: 100%;\n}\n.site-top-menu .main-content {\n  width: 100%;\n}\n.site-top-menu .main-content .memberbar {\n  margin-left: 90px;\n  margin-right: 10px;\n}\n.site-top-menu.fixed .main-content {\n  margin: auto;\n  max-width: 1270px;\n}\n.site-header {\n  background-image: url(\"/App_Themes/CodeProject/Img/logo135-bg.gif\");\n  white-space: nowrap;\n  overflow: hidden;\n}\n.site-header .main-content {\n  position: relative;\n  overflow: hidden;\n  white-space: nowrap;\n}\n.site-header .logo {\n  display: inline-block;\n}\n.site-header .promo {\n  display: inline-block;\n  position: absolute;\n  top: 33px;\n  right: 0;\n}\n.site-header.fixed .main-content {\n  margin: auto;\n  max-width: 1270px;\n}\n.sub-headerbar {\n  padding-right: 9px;\n  position: relative;\n  margin: auto;\n  max-width: 1270px;\n}\n.sub-headerbar-divider {\n  margin-left: 10px;\n  height: 1px;\n  border-bottom: 1px solid #cccccc;\n  position: absolute;\n  bottom: 2px;\n  left: 0px;\n  right: 9px;\n}\n.memberbar {\n  height: 25px;\n  padding-top: 10px;\n  color: #999999;\n  font-size: 14px;\n}\n.memberbar a {\n  color: #808080;\n  font-size: 14px;\n}\ndiv.navbar {\n  white-space: nowrap;\n}\n.navmenu {\n  background: white;\n  color: #4d4d4d;\n  padding: 0px;\n  margin: 0px;\n  list-style: none;\n  height: 25px;\n}\n.navmenu ul,\n.navmenu li {\n  margin: 0;\n  padding: 0;\n}\n.navmenu .has-submenu {\n  position: absolute;\n  right: 5px;\n  padding-left: 10px;\n}\n.navmenu \u003e li:hover \u003e a,\n.navmenu \u003e li \u003e a:active {\n  border: 1px solid #cccccc;\n}\n.navmenu ul,\n.navmenu \u003e li.open:hover \u003e a,\n.navmenu \u003e li.open \u003e a:active {\n  border: 1px solid #cccccc;\n  border-bottom-color: white;\n}\n.navmenu \u003e li {\n  margin: 0 11px 2px 2px;\n}\n.navmenu \u003e li:active,\n.navmenu \u003e li:active \u003e a,\n.navmenu \u003e li:hover,\n.navmenu \u003e li \u003e a:active {\n  background: white;\n  color: #4d4d4d;\n}\n.navmenu \u003e li.openable \u003e a:active,\n.navmenu \u003e li.openable:hover \u003e a {\n  /*border-bottom: 1px solid @ColourBack-Menu; */\n}\n.navmenu \u003e li \u003e a {\n  padding: 2px 7px 6px 7px;\n  border: 1px solid transparent;\n  font-weight: bold;\n}\n.navmenu a {\n  display: block;\n  float: left;\n  color: #666666;\n  background: white;\n  font-size: 17px;\n  padding: 0px 9px;\n  text-decoration: none;\n  white-space: nowrap;\n}\n.navmenu a.fly {\n  white-space: nowrap;\n}\n.navmenu ul {\n  background: white;\n  position: absolute;\n  left: -9999px;\n  top: -9999px;\n  list-style: none;\n}\n.navmenu li {\n  float: left;\n  color: #4d4d4d;\n}\n.navmenu li.last {\n  height: 9px;\n}\n.navmenu li a:active,\n.navmenu li a:hover {\n  color: white;\n  background-color: #ff9900;\n}\n.navmenu li \u003e a:active,\n.navmenu li:hover,\n.navmenu li:hover \u003e a,\n.navmenu li:hover.heading,\n.navmenu li a.selected {\n  position: relative;\n  color: white;\n  background-color: #ff9900;\n}\n.navmenu li.openable:hover ul {\n  left: 0px;\n  top: 30px;\n  z-index: 500;\n}\n.navmenu li.openable:hover \u003e ul ul {\n  position: absolute;\n  left: -9999px;\n  top: -9999px;\n  width: auto;\n}\n.navmenu li ul {\n  border-bottom: 5px solid #ff9900;\n}\n.navmenu li li {\n  float: none;\n}\n.navmenu li li a {\n  float: none;\n  font-size: 16px;\n  font-weight: normal;\n}\n.navmenu li li a.fly {\n  color: #4d4d4d;\n  background-color: white;\n  padding: 2px 20px;\n}\n.navmenu li li a.break {\n  margin-bottom: 15px;\n}\n.navmenu li li a.highlight1,\n.navmenu li li a.highlight1:active,\n.navmenu li li a.highlight1:hover {\n  background-color: #009900;\n}\n.navmenu li li a.highlight2,\n.navmenu li li a.highlight2:active,\n.navmenu li li a.highlight2:hover {\n  background-color: #ff9900;\n}\n.navmenu li li a.highlight3,\n.navmenu li li a.highlight3:active,\n.navmenu li li a.highlight3:hover {\n  background-color: #000000;\n}\n.navmenu li li a.highlight1,\n.navmenu li li a.highlight2,\n.navmenu li li a.highlight3 {\n  color: white;\n  font-size: 16px;\n  margin: 5px 0;\n  padding: 9px 20px;\n}\n.site-footer {\n  display: -webkit-box;\n  /* OLD - iOS 6-, Safari 3.1-6 */\n  display: -moz-box;\n  /* OLD - Firefox 19- (buggy but mostly works) */\n  display: -ms-flexbox;\n  /* TWEENER - IE 10 */\n  display: -webkit-flex;\n  /* NEW - Chrome */\n  display: flex;\n  /* NEW, Spec - Opera 12.1, Firefox 20+ */\n  padding-top: 5px;\n  width: 100%;\n  font-size: 13px;\n  color: #999999;\n}\n.site-footer .align-left,\n.site-footer .align-center,\n.site-footer .align-right {\n  -webkit-box-flex: 1;\n  /* OLD - iOS 6-, Safari 3.1-6 */\n  -moz-box-flex: 1;\n  /* OLD - Firefox 19- */\n  -webkit-flex: 1;\n  /* Chrome */\n  -ms-flex: 1;\n  /* IE 10 */\n  flex: 1;\n}\n.site-footer .align-left {\n  flex: 1 0 100px;\n}\n.site-footer .align-center {\n  flex: 0 1 0%;\n  white-space: nowrap;\n}\n.site-footer .align-right {\n  flex: 1 0 100px;\n}\n.site-footer .page-width .active {\n  border-bottom: 2px solid #ff9900;\n}\n.searchbar {\n  padding: 0;\n}\n.searchbar .search {\n  margin-bottom: 4px;\n  padding: 2px 5px 0px;\n  border: 1px solid #cccccc;\n}\n.searchbar .search.subdue {\n  color: #cccccc;\n}\n.searchbar input.search {\n  width: 190px;\n  border: none;\n  font-size: 13px;\n  padding: 4px 2px;\n}\n.searchbar .search-advanced {\n  padding: 8px;\n  width: 203px;\n  z-index: 1000;\n  background-color: white;\n  border: solid 1px #cccccc;\n  position: absolute;\n  top: -4px;\n  right: 0px;\n}\n.searchbar .popup {\n  display: none;\n}\n.sub-headerbar .searchbar {\n  /*\n\t.search-advanced\n\t{\n        .transition(width, .1s, linear);\n\n        \u0026.open\n        {\n    \t\twidth: 320px;\n        }\n    }\n    */\n}\n.sub-headerbar .searchbar input.search {\n  /*\n        \u0026:focus,\u0026:active\n        {\n            position     : absolute;\n            top          : 3px;\n            right        : 36px;\n            height       : 19px;\n            border       : 1px solid #ccc;\n            border-right : none;\n            width:         300px;\n\n            .transition(width, .1s, linear);\n        }\n        */\n}\n.search td {\n  background-color: white;\n}\n.article-container-parts {\n  display: -webkit-box;\n  /* OLD - iOS 6-, Safari 3.1-6 */\n  display: -moz-box;\n  /* OLD - Firefox 19- (buggy but mostly works) */\n  display: -ms-flexbox;\n  /* TWEENER - IE 10 */\n  display: -webkit-flex;\n  /* NEW - Chrome */\n  display: flex;\n  /* NEW, Spec - Opera 12.1, Firefox 20+ */\n}\n.article-container {\n  -webkit-box-flex: 1;\n  /* OLD - iOS 6-, Safari 3.1-6 */\n  -moz-box-flex: 1;\n  /* OLD - Firefox 19- */\n  -webkit-flex: 1;\n  /* Chrome */\n  -ms-flex: 1;\n  /* IE 10 */\n  flex: 1;\n  background-color: white;\n  color: #111111;\n  zoom: 1;\n  position: relative;\n  max-width: 100%;\n  min-height: 675px;\n}\n.article-container .article {\n  margin: 0 20px 0 10px;\n  line-height: 143%;\n}\n.article-container span.stats {\n  margin-left: 30px;\n}\n.article-left-sidebar {\n  width: 120px;\n  min-width: 120px;\n  min-height: 400px;\n  font-size: 14px;\n  border-right: 1px solid #f2f2f2;\n  padding: 0;\n  /* Old school style */\n  /*\n    .license {\n        font-weight: bold;\n        display: inline-block;\n        margin-top: 10px;\n    }\n    */\n}\n.article-left-sidebar .article-left-sidebar-inner {\n  width: 120px;\n  min-width: 120px;\n}\n.article-left-sidebar .tabs \u003e div {\n  padding: 5px 0 5px 10px;\n}\n.article-left-sidebar .selected {\n  font-weight: bold;\n  background: transparent url(\"/images/right-selected.gif\") no-repeat scroll\n    right 9px;\n}\n.article-left-sidebar h4 {\n  color: #ff9900;\n  font-size: 14px;\n  font-weight: bold;\n}\n.article-left-sidebar .stats div div div {\n  padding: 0px 0 10px 10px;\n  color: #666666;\n}\n.article-right-sidebar {\n  width: 300px;\n  margin-left: 10px;\n  font-size: 14px;\n}\n.article-right-sidebar .header {\n  font-size: 22px;\n  color: white;\n  background-color: #ff9900;\n  padding: 8px;\n  font-weight: 400;\n  margin: 0;\n}\n.article-right-sidebar .reading-list-toc {\n  max-height: 250px;\n  overflow-y: auto;\n  padding-right: 6px;\n  margin-top: 5px;\n}\n.article-right-sidebar .reading-list-toc .count {\n  font-weight: normal;\n  font-size: 13px;\n}\n.article-right-sidebar .reading-list-toc .title {\n  font-size: 16px;\n}\n.article-right-sidebar .content-list-item {\n  display: -webkit-box;\n  /* OLD - iOS 6-, Safari 3.1-6 */\n  display: -moz-box;\n  /* OLD - Firefox 19- (buggy but mostly works) */\n  display: -ms-flexbox;\n  /* TWEENER - IE 10 */\n  display: -webkit-flex;\n  /* NEW - Chrome */\n  display: flex;\n  /* NEW, Spec - Opera 12.1, Firefox 20+ */\n  justify-content: space-between;\n  font-size: 14px;\n  margin: 4px 0;\n}\n.article-right-sidebar .content-list-item .count {\n  width: 15%;\n  padding: 0px;\n}\n.article-right-sidebar .content-list-item .title {\n  width: 85%;\n  font-weight: normal;\n}\n.article-right-sidebar .gototop {\n  text-align: center;\n  padding: 10px 0;\n  opacity: 0;\n  -webkit-transition: opacity 0.3s linear 0ms;\n  -moz-transition: opacity 0.3s linear 0ms;\n  -o-transition: opacity 0.3s linear 0ms;\n  transition: opacity 0.3s linear 0ms;\n}\n.container-content .edit-links {\n  margin: 21px 0 0 10px;\n}\n.article-summary {\n  padding: 0px 10px 0px 10px;\n  overflow: hidden;\n}\n.article h1 {\n  margin: 0 0 15px 0;\n}\n.article h2 {\n  color: #ff9900;\n}\n.article pre {\n  overflow: auto;\n}\n.article .header .title {\n  color: #808080;\n}\n.article .header .author {\n  font-weight: bold;\n  min-width: 100px;\n}\n.article .header .author a {\n  color: #808080;\n}\n.article .header .avatar {\n  max-width: 48px;\n  max-height: 48px;\n  overflow: unset;\n}\n.article .header .avatar-wrap {\n  width: 48px;\n  height: 48px;\n  margin-right: 10px;\n  text-align: center;\n}\n.article .header .date {\n  white-space: nowrap;\n}\n.article .header .license {\n  margin-left: 15px;\n}\n.article .header .stats {\n  margin-left: 30px;\n}\n.article img.lazyload,\n.article img.lazyloading {\n  opacity: 0;\n}\n.article img {\n  max-width: 700px;\n  height: auto;\n}\n.article img.lazyloaded {\n  opacity: 1;\n  transition: opacity 300ms;\n}\n.article .summary {\n  color: #808080;\n  padding: 40px 0 15px 0;\n}\n.article .text {\n  padding-top: 10px;\n}\n.article .reading-list-nav {\n  border-top: 1px #dedede solid;\n  border-bottom: 1px #dedede solid;\n  padding: 10px 0;\n}\n.article .reading-list-nav .prev {\n  padding-left: 20px;\n}\n.article .reading-list-nav .next {\n  margin-left: 5px;\n  padding-right: 20px;\n  text-align: right;\n}\n.article-nav {\n  text-align: right;\n  margin-top: 21px;\n  vertical-align: middle;\n  line-height: 15px;\n}\n.msg-728x90 {\n  width: 728px;\n  height: 90px;\n  overflow: hidden;\n}\n.msg-300x250 {\n  width: 300px;\n  height: 250px;\n  overflow: hidden;\n}\n.content-list {\n  margin-bottom: 17px;\n}\n.content-list .count {\n  font-weight: bold;\n  font-size: 16px;\n  color: #ff9900;\n  padding: 3px;\n  text-align: center;\n}\n.content-list-item {\n  margin: 10px 0;\n}\n.content-list-item .title {\n  font-size: 14px;\n  font-weight: bold;\n  padding: 0px 0;\n}\n.content-list-item .title a {\n  color: #005782;\n}\n.tags {\n  line-height: 190%;\n}\n.tags .t {\n  background: none repeat scroll 0 0 transparent;\n  border: 1px solid #fbedbb;\n  border-radius: 12px 0 0 12px;\n  line-height: 1.4;\n  padding: 0 2px 2px 3px;\n  position: relative;\n  text-decoration: none;\n  margin: 2px 5px 4px 0;\n  white-space: nowrap;\n}\n.tags .t a {\n  color: #666666;\n  display: inline-block;\n  margin-right: 3px;\n  padding-left: 5px;\n  text-overflow: ellipsis;\n}\n.container-breadcrumb {\n  font-size: 14px;\n  margin-top: 7px;\n  color: #808080;\n  margin: 12px 0 35px;\n}\n.container-breadcrumb a {\n  color: #808080;\n}\n.pre-lang {\n  display: -webkit-box;\n  /* OLD - iOS 6-, Safari 3.1-6 */\n  display: -moz-box;\n  /* OLD - Firefox 19- (buggy but mostly works) */\n  display: -ms-flexbox;\n  /* TWEENER - IE 10 */\n  display: -webkit-flex;\n  /* NEW - Chrome */\n  display: flex;\n  /* NEW, Spec - Opera 12.1, Firefox 20+ */\n  background-color: #fbedbb;\n  justify-content: space-between;\n  padding: 4px 8px;\n  margin-top: 5px;\n  color: #999999;\n  border-bottom: solid 1px #ffd044;\n}\n.code-comment {\n  color: #008000;\n  font-style: italic;\n}\n.code-keyword {\n  color: Blue;\n}\n.code-sdkkeyword {\n  color: #339999;\n}\n.code-string {\n  color: Purple;\n}\n.code-attribute {\n  color: red;\n}\n.code-leadattribute {\n  color: #800000;\n}\n.pre-action-link {\n  font-size: 13px;\n  color: #999999;\n}\n.pre-action-link span {\n  cursor: pointer;\n  margin: 0;\n  -webkit-transition: color 0.1s linear;\n  -moz-transition: color 0.1s linear;\n  -o-transition: color 0.1s linear;\n  transition: color 0.1s linear;\n}\n.speech-bubble-container-down,\n.speech-bubble-container-up,\n.speech-bubble-container-up-right,\n.speech-bubble-container-left,\n.speech-bubble-container-right {\n  position: relative;\n}\n.speech-bubble-up,\n.speech-bubble-down,\n.speech-bubble-left,\n.speech-bubble-right,\n.speech-bubble-up-right {\n  padding: 0.6em;\n  border: 1px solid #cccccc;\n  background-color: white;\n  margin: 15px;\n  text-decoration: none;\n  font-weight: normal;\n  text-align: left;\n  white-space: normal;\n  color: #333333;\n  font-size: 14px;\n  line-height: 1.3;\n}\n.speech-bubble-down {\n  margin-bottom: 0px;\n}\n.tooltip .speech-bubble-up,\n.tooltip .speech-bubble-up-right,\n.tooltip .speech-bubble-down,\n.tooltip .speech-bubble-left,\n.tooltip .speech-bubble-right {\n  -moz-box-shadow: 4px 4px 16px 1px rgba(0, 0, 0, 0.25);\n  -webkit-box-shadow: 4px 4px 16px 1px rgba(0, 0, 0, 0.25);\n  box-shadow: 4px 4px 16px 1px rgba(0, 0, 0, 0.25);\n  border-radius: 5px;\n  -webkit-border-radius: 5px;\n  -moz-border-radius: 5px;\n  min-width: 75px;\n}\n.speech-bubble-pointer-down,\n.speech-bubble-pointer-down-inner {\n  width: 0;\n  height: 0;\n  border-bottom-width: 0;\n  background: none;\n}\n.speech-bubble-pointer-down {\n  border-left: 7px solid transparent;\n  border-right: 7px solid transparent;\n  border-top: 1px solid #cccccc;\n  border-top-width: 14px;\n  margin-left: 35px;\n  margin-bottom: 15px;\n  _display: none;\n}\n.speech-bubble-pointer-up,\n.speech-bubble-pointer-up-right,\n.speech-bubble-pointer-up-inner,\n.speech-bubble-pointer-up-right-inner {\n  width: 0;\n  height: 0;\n  border-top-width: 0;\n  background: none;\n}\n.speech-bubble-pointer-up,\n.speech-bubble-pointer-up-right {\n  border-left: 5px solid transparent;\n  border-right: 5px solid transparent;\n  border-bottom: 1px solid #cccccc;\n  border-bottom-width: 14px;\n  margin-left: 35px;\n  position: absolute;\n  top: -12px;\n  _display: none;\n}\n.speech-bubble-container-up-right .speech-bubble-pointer-up-right {\n  margin-left: 0;\n  margin-right: 0px;\n  right: 35px;\n}\n.tooltip {\n  position: relative;\n  text-decoration: none;\n}\n.tooltip .speech-bubble-container-up,\n.tooltip .speech-bubble-container-down,\n.tooltip .speech-bubble-container-left,\n.tooltip .speech-bubble-container-right,\n.tooltip .speech-bubble-container-up-right,\n.tooltip .tooltip-flyout {\n  display: none;\n  opacity: 0;\n  -webkit-transition: opacity 0.5s linear 0ms;\n  -moz-transition: opacity 0.5s linear 0ms;\n  -o-transition: opacity 0.5s linear 0ms;\n  transition: opacity 0.5s linear 0ms;\n}\n.micromodal {\n  display: none;\n}\n.micromodal .modal__overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.65);\n  z-index: 1000;\n}\n.micromodal .modal__container {\n  box-sizing: border-box;\n  overflow-y: auto;\n  max-width: 500px;\n  max-height: 100vh;\n  padding: 30px;\n  background-color: #fff;\n  border-radius: 4px;\n}\n.micromodal .modal__container,\n.micromodal .modal__overlay {\n  will-change: transform;\n}\n.micromodal .modal_header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n.micromodal .modal_title {\n  margin-top: 0;\n  margin-bottom: 0;\n  color: #ff9900;\n  box-sizing: border-box;\n}\n.bottom-promo {\n  height: 90px;\n  margin-top: 10px;\n  overflow: hidden;\n}\n.bottom-promo .msg-728x90 {\n  width: 728px;\n  margin: 0 auto;\n}\n.msg-728x90 {\n  overflow: hidden;\n  position: relative;\n  height: 90px;\n  min-width: 728px;\n}\ntable.forum {\n  table-layout: fixed;\n  margin: 0 0 20px 0;\n  padding: 0px;\n  width: 100%;\n}\n.forum {\n  /*\n    .indent\n    {\n        padding-left:5px; padding-right: 5px;\n    }\n    */\n}\n.forum table {\n  border-collapse: separate;\n}\n.forum .header1,\n.forum .header1 TD {\n  color: #333333;\n  font-size: 14px;\n  vertical-align: middle;\n}\n.forum .header2,\n.forum .header2 TD {\n  color: white;\n  background-color: #ff9900;\n  font-size: 14px;\n  vertical-align: middle;\n}\n.forum .header2 input,\n.forum .header2 TD input,\n.forum .header2 select,\n.forum .header2 TD select {\n  padding: 2px;\n}\n.forum .button {\n  border: 1px solid #ffcc66;\n  margin: 1px;\n}\n.forum .searchbar {\n  border: 1px solid #cccccc;\n  padding: 4px 0 0 0;\n  margin: 3px 0;\n}\n.forum .searchbar .search {\n  width: 200px;\n}\n.forum .searchbar input[type=\"image\"] {\n  vertical-align: middle;\n}\n.forum .dropdown {\n  background-color: #fffdfa;\n  font-size: 95%;\n  margin-left: 5px;\n}\n.forum .footer,\n.forum .footer td,\n.forum .navbar,\n.forum .navbar td {\n  font-size: 14px;\n  padding: 8px 0;\n  border: 0;\n  border-top: 1px solid #808080;\n}\n.author-wrapper {\n  position: relative;\n}\n.author-wrapper .profile-pic {\n  border: 1px solid #333;\n  margin: 0 13px 0 0;\n  padding: 10px;\n  -moz-box-shadow: 3px 3px 5px 1px rgba(0, 0, 0, 0.2);\n  -webkit-box-shadow: 3px 3px 5px 1px rgba(0, 0, 0, 0.2);\n  box-shadow: 3px 3px 5px 1px rgba(0, 0, 0, 0.2);\n  max-height: 100px;\n}\n.author-wrapper .container-member .author {\n  font-size: 29px;\n  color: #333333;\n  font-weight: 600;\n}\n.member-signin .forgot {\n  padding: 0;\n}\n.member-signin a.forgot {\n  color: #808080;\n}\n.rating-container {\n  /*\n\t.rating-close\n\t{\n\t\tfont-size       : @FontSize-MediumSmall;\n\t\tfont-weight     : bold;\n\t\t// display         : inline-block;\n\t\t// height          : 19px;\n\t\tpadding         : 0px 7px 3px 5px;\n\t\ttext-decoration : none;\n\t\tborder          : 1px solid transparent;\n\t\tposition        : absolute;\n\t\tright           : 1px;\n\t\ttop             : -1px;\n\n\t\t\u0026:hover { border : 1px solid @Colour-Theme1; }\n\t}*/\n}\n.rating-container .rating-prompt {\n  padding-right: 5px;\n  white-space: nowrap;\n  line-height: 25px;\n  margin-right: 2px;\n  font-weight: bold;\n  color: #808080;\n}\n.rating-container .rating-votes {\n  margin-left: 5px;\n}\n.rating-container.large-stars,\n.rating-container.medium-stars,\n.rating-container.small-stars {\n  margin-left: 7px;\n}\n.rating-container.large-stars .rating-votes,\n.rating-container.large-stars .rating-prompt,\n.rating-container.large-stars .rating-poor,\n.rating-container.large-stars .rating-good {\n  line-height: 25px;\n}\n.tablet-only,\n.tablet-block-only {\n  display: none;\n}\n.mobile-only,\n.mobile-block-only {\n  display: none;\n}\n.desktop-only.tablet-only {\n  display: inherit;\n}\n.tablet-only.desktop-only {\n  display: inherit;\n}\n.rrssb-buttons,\n.rrssb-buttons li,\n.rrssb-buttons li a {\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n}\n.clearfix:after {\n  clear: both;\n}\n.clearfix:before,\n.clearfix:after {\n  content: \" \";\n  display: table;\n}\n.rrssb-buttons {\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  height: 40px;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n.rrssb-buttons li {\n  float: left;\n  height: 100%;\n  list-style: none;\n  margin: 0;\n  padding: 0 2.5px;\n  line-height: 13px;\n}\n.rrssb-buttons li.email a {\n  background-color: #0a88ff;\n}\n.rrssb-buttons li.facebook a {\n  background-color: #306199;\n}\n.rrssb-buttons li.linkedin a {\n  background-color: #007bb6;\n}\n.rrssb-buttons li.twitter a {\n  background-color: #26c4f1;\n}\n.rrssb-buttons li.reddit a {\n  background-color: #8bbbe3;\n}\n.rrssb-buttons li.pinterest a {\n  background-color: #b81621;\n}\n.rrssb-buttons li.compact {\n  padding: 0 4.5px;\n}\n.rrssb-buttons li.compact a {\n  border-radius: 50%;\n  padding: 0px 7px 0 32px;\n}\n.rrssb-buttons li.compact a .icon {\n  left: 7px;\n  top: -3px;\n  width: 5%;\n  transform: scale(0.85);\n}\n.rrssb-buttons li.compact a .icon svg {\n  height: auto;\n  width: auto;\n}\n.rrssb-buttons li a {\n  background-color: #ccc;\n  border-radius: 3px;\n  display: block;\n  font-size: 11px;\n  font-weight: bold;\n  height: 100%;\n  padding: 11px 7px 12px 27px;\n  position: relative;\n  text-align: center;\n  text-decoration: none;\n  text-transform: uppercase;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  width: 100%;\n  -webkit-transition: background-color 0.2s ease-in-out;\n  -moz-transition: background-color 0.2s ease-in-out;\n  -o-transition: background-color 0.2s ease-in-out;\n  transition: background-color 0.2s ease-in-out;\n}\n.rrssb-buttons li a .icon {\n  display: block;\n  height: 100%;\n  left: 10px;\n  padding-top: 9px;\n  position: absolute;\n  top: 0;\n  width: 10%;\n}\n.rrssb-buttons li a .icon svg {\n  height: 17px;\n  width: 17px;\n}\n.rrssb-buttons li a .icon svg path,\n.rrssb-buttons li a .icon svg polygon {\n  fill: #fff;\n}\n.cc-window {\n  opacity: 1;\n  background-color: #ff9900;\n  /*\n  -webkit-transition: opacity .25s ease;\n  -moz-transition: opacity .25s ease;\n  -ms-transition: opacity .25s ease;\n  -o-transition: opacity .25s ease;\n  transition: opacity .25s ease;\n  */\n}\n.cc-window.cc-invisible {\n  opacity: 0;\n}\n.cc-animate.cc-revoke {\n  /*\n  -webkit-transition: transform .25s ease;\n  -moz-transition: transform .25s ease;\n  -ms-transition: transform .25s ease;\n  -o-transition: transform .25s ease;\n  transition: transform .25s ease;\n  */\n}\n.cc-animate.cc-revoke.cc-bottom {\n  transform: translateY(2em);\n}\n.cc-window,\n.cc-revoke {\n  position: fixed;\n  overflow: hidden;\n  box-sizing: border-box;\n  /* exclude padding when dealing with width */\n  font-family: \"Segoe UI\", Arial, Sans-Serif;\n  font-size: 13px;\n  /* by setting the base font here, we can size the rest of the popup using CSS `em` */\n  line-height: 1.5em;\n  display: flex;\n  flex-wrap: nowrap;\n  /* the following are random unjustified styles - just because - should probably be removed */\n  z-index: 9999;\n}\n.cc-window.cc-banner {\n  padding: 0.7em 1.8em;\n  width: 100%;\n  flex-direction: row;\n}\n.cc-revoke {\n  padding: 0.5em;\n}\n.cc-btn,\n.cc-link,\n.cc-close,\n.cc-revoke {\n  cursor: pointer;\n}\n.cc-link {\n  opacity: 0.8;\n  display: inline-block;\n  padding: 0.2em;\n  text-decoration: underline;\n}\n.cc-link:active,\n.cc-link:visited {\n  color: initial;\n}\n.cc-btn {\n  display: block;\n  padding: 0.4em 0.8em;\n  font-size: 0.9em;\n  font-weight: bold;\n  border-width: 2px;\n  border-style: solid;\n  text-align: center;\n  white-space: nowrap;\n}\n.cc-banner .cc-btn:last-child {\n  min-width: 110px;\n  margin-left: 10px;\n}\n.cc-highlight .cc-btn:first-child {\n  background-color: transparent;\n  border-color: transparent;\n}\n.cc-revoke.cc-bottom {\n  bottom: 0;\n  left: 3em;\n  border-top-left-radius: 0.5em;\n  border-top-right-radius: 0.5em;\n}\n.cc-bottom {\n  bottom: 1em;\n}\n.cc-window.cc-banner {\n  align-items: center;\n}\n.cc-banner.cc-bottom {\n  left: 0;\n  right: 0;\n  bottom: 0;\n}\n.cc-banner .cc-message {\n  flex: 1;\n}\n.cc-compliance {\n  display: flex;\n  align-items: center;\n  align-content: space-between;\n}\n.cc-compliance \u003e .cc-btn {\n  flex: 1;\n}\n.cc-btn + .cc-btn {\n  margin-left: 0.5em;\n}\n\n@keyframes showcopied {\n  0% {\n    opacity: 0;\n  }\n  70% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n  }\n}\n"])</script><script>self.__next_f.push([1,"1a:Tb558,"])</script><script>self.__next_f.push([1,"\u003cul class=\"download\"\u003e\r\n\t\u003cli\u003e\u003ca href=\"StuxnetMalware/Stuxnet_Malware_Analysis_Paper.pdf\"\u003eDownload the Article in PDF - 2.17 MB \u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\r\n\r\n\u003ch2\u003eTable Of Contents\u003c/h2\u003e\r\n\r\n\u003cul\u003e\r\n\t\u003cli\u003e\u003ca href=\"#ch1\"\u003e1. Introduction:\u003c/a\u003e\u0026nbsp;\u003c/li\u003e\t\u003cli\u003e\u003ca href=\"#ch2\"\u003e2. Payload:\u003c/a\u003e\u0026nbsp;\u003c/li\u003e\t\u003cli\u003e\u003ca href=\"#ch3\"\u003e3. Suspects:\u003c/a\u003e\u003c/li\u003e\t\u003cli\u003e\u003ca href=\"#ch4\"\u003e4. Technical Details:\u003c/a\u003e\r\n\t\u003cul\u003e\r\n\t\t\u003cli\u003e\u003ca href=\"#ch4.1\"\u003e4.1.Stuxnet Live Cycle\u003c/a\u003e\u003c/li\u003e\t\t\u003cli\u003e\u003ca href=\"#ch4.2\"\u003e4.2. Main Dropper (~WTR4132.TMP)\u003c/a\u003e\u003c/li\u003e\t\t\u003cli\u003e\u003ca href=\"#ch4.3\"\u003e4.3. Main Stuxnet DLL\u003c/a\u003e\r\n\t\t\u003cul\u003e\r\n\t\t\t\u003cli\u003e\u003ca href=\"#ch4.3.1\"\u003e4.3.1. Escalating the Privileges and Injecting Into a New Process\u003c/a\u003e\u003c/li\u003e\t\t\t\u003cli\u003e\u003ca href=\"#ch4.3.2\"\u003e4.3.2. Main Stuxnet DLL: Installing Stuxnet into the Infected Machine\u003c/a\u003e\u003c/li\u003e\t\t\u003c/ul\u003e\r\n\t\t\u003c/li\u003e\t\t\u003cli\u003e\u003ca href=\"#ch4.4\"\u003e4.4. Spreading Mechanism\u003c/a\u003e\r\n\t\t\u003cul\u003e\r\n\t\t\t\u003cli\u003e\u003ca href=\"#ch4.4.1\"\u003e4.4.1. The USB Drives Infection\u003c/a\u003e\u003c/li\u003e\t\t\t\u003cli\u003e\u003ca href=\"#ch4.4.2\"\u003e4.4.2. Spreading via Network\u003c/a\u003e\u003c/li\u003e\t\t\u003c/ul\u003e\r\n\t\t\u003c/li\u003e\t\t\u003cli\u003e\u003ca href=\"#ch4.5\"\u003e4.5. Updating Mechanism\u003c/a\u003e\r\n\t\t\u003cul\u003e\r\n\t\t\t\u003cli\u003e\u003ca href=\"#ch4.5.1\"\u003e4.5.1. Updating via Internet\u003c/a\u003e\u003c/li\u003e\t\t\t\u003cli\u003e\u003ca href=\"#ch4.5.2\"\u003e4.5.2. Updating via Peer to Peer Connection\u003c/a\u003e\u003c/li\u003e\t\t\u003c/ul\u003e\r\n\t\t\u003c/li\u003e\t\t\u003cli\u003e\u003ca href=\"#ch4.6\"\u003e4.6. Rootkits\u003c/a\u003e\r\n\t\t\u003cul\u003e\r\n\t\t\t\u003cli\u003e\u003ca href=\"#ch4.6.1\"\u003e4.6.1. User-Mode Rootkit (~WTR4141.TMP)\u003c/a\u003e\u003c/li\u003e\t\t\t\u003cli\u003e\u003ca href=\"#ch4.6.2\"\u003e4.6.2. Kernel-Mode Rootkit (MRxNet)\u003c/a\u003e\u003c/li\u003e\t\t\u003c/ul\u003e\r\n\t\t\u003c/li\u003e\t\t\u003cli\u003e\u003ca href=\"#ch4.7\"\u003e4.7. Loading Mechanism\u003c/a\u003e\r\n\t\t\u003cul\u003e\r\n\t\t\t\u003cli\u003e\u003ca href=\"#ch4.7.1\"\u003e4.7.1. ~WTR4141.TMP\u003c/a\u003e\u003c/li\u003e\t\t\t\u003cli\u003e\u003ca href=\"#ch4.7.2\"\u003e4.7.2. MRxCls Loader Driver\u003c/a\u003e\r\n\t\t\t\u003cul\u003e\r\n\t\t\t\t\u003cli\u003e\u003ca href=\"#ch4.7.2.1\"\u003e4.7.2.1. The Input\u003c/a\u003e\u003c/li\u003e\t\t\t\t\u003cli\u003e\u003ca href=\"#ch4.7.2.2\"\u003e4.7.2.2. Initialization\u003c/a\u003e\u003c/li\u003e\t\t\t\t\u003cli\u003e\u003ca href=\"#ch4.7.2.3\"\u003e4.7.2.3. Stage One : Injecting data in kernel-mode\u003c/a\u003e\u003c/li\u003e\t\t\t\t\u003cli\u003e\u003ca href=\"#ch4.7.2.4\"\u003e4.7.2.4. Stage Two : Creating kernel32 Import and Overwriting the Entrypoint\u003c/a\u003e\u003c/li\u003e\t\t\t\t\u003cli\u003e\u003ca href=\"#ch4.7.2.5\"\u003e4.7.2.5. Stage Three : Loading and Executing Stuxnet in The User-Mode\u003c/a\u003e\u003c/li\u003e\t\t\t\u003c/ul\u003e\r\n\t\t\t\u003c/li\u003e\t\t\u003c/ul\u003e\r\n\t\t\u003c/li\u003e\t\u003c/ul\u003e\r\n\t\u003c/li\u003e\t\u003cli\u003e\u003ca href=\"#ch5\"\u003e5. Conclusion\u003c/a\u003e\u003c/li\u003e\t\u003cli\u003e\u003ca href=\"#ch6\"\u003e6. References:\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\r\n\r\n\u003cp\u003e\u003ca name=\"ch1\"\u003e\u003c/a\u003e\u003c/p\u003e\r\n\r\n\u003ch2\u003e1. Introduction\u003c/h2\u003e\r\n\r\n\u003cp\u003eStuxnet is not only a new virus or worm but it's a new era of malware. This virus changed the meaning of malware and their goals. You hear about a virus annoying people or stealing banks or credit cards, but that's the first time you hear about virus damages buildings, destroys machines or kills people and that's Stuxnet.\u003cbr\u003e\r\nStuxnet has gained a lot of attention from malware researchers and media in the last year. It's created to sabotage Iran's nuclear program.\u003c/p\u003e\r\n\r\n\u003cp\u003eThis complex threat uses up to four zero-day vulnerabilities in windows OS and includes many tricks to avoid being detected by the behavioral-blocking antivirus programs. It damaged the Iranian nuclear reactor and its machines by infecting the PLCs (Programmable Logic Controller) that control the machines there. That makes it modify the control program which changes the behavior of the machine.\u003c/p\u003e\r\n\r\n\u003cp\u003eHere we will talk about the technical details about stuxnet and the experience that I got from analyzing this malware. We will talk about how stuxnet works and the stuxnet life cycle. But here we will not talk about the SCADA systems and how stuxnet infects them and we will take a hint on the vulnerabilities that are used by stuxnet.\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003ca name=\"ch2\"\u003e\u003c/a\u003e\u003c/p\u003e\r\n\r\n\u003ch2\u003e2. Payload\u003c/h2\u003e\r\n\r\n\u003cp\u003eThis worm was created mainly to sabotage the Iranian Nuclear Program. Once installed on a PC, Stuxnet uses Siemens' default passwords to gain access to the systems that run the WinCC and PCS 7 programs which control and modify the code of the PLCs (programmable logic controller) which control the machines themselves\u003c/p\u003e\r\n\r\n\u003cp\u003eStuxnet operates in two stages after infection, according to Symantec Security Response Supervisor Liam O'Murchu. First it uploads configuration information about the Siemens system to a command-and-control server. Then the attackers are able to pick a target and actually reprogram the way it works. \"They decide how they want the PLCs to work for them, and then they send code to the infected machines that will change how the PLCs work,\" O'Murchu said.\u003c/p\u003e\r\n\r\n\u003cp\u003eIt managed to infect facilities tied to Iran's controversial nuclear programme before re-programming control systems to spin up high-speed centrifuges and slow them down\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003ca name=\"ch3\"\u003e\u003c/a\u003e\u003c/p\u003e\r\n\r\n\u003ch2\u003e3. Suspects\u003c/h2\u003e\r\n\r\n\u003cp\u003eIsrael is an obvious suspect. Israel considers a nuclear Iran to be a direct existential threat. But, until now, there's no real evidence says that Israel who really creates this worm. There are some theories said that there are evidences on Israel as the creator depending on some dates and words found inside the malware and also there's an analysis from the industrial control-systems maker \"Siemens\" reportedly backs speculation that Iran may have been the target of Stuxnet's attack and that Israel may have been involved.\u003c/p\u003e\r\n\r\n\u003cp\u003eA report by the New York Times suggested Stuxnet was a joint US-Israeli operation that was tested by Israel on industrial control systems at the Dimona nuclear complex during 2008 prior to its release a year later, around June 2009. The worm wasn't detected by anyone until a year later, suggesting that for all its possible shortcomings the worm was effective at escaping detection on compromised systems.\u003c/p\u003e\r\n\r\n\u003cp\u003eBut these evidences aren't real evidences in the court and the wormâ€˜s still a perfect crime.\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003ca name=\"ch4\"\u003e\u003c/a\u003e\u003c/p\u003e\r\n\r\n\u003ch2\u003e4.Technical Details\u003c/h2\u003e\r\n\r\n\u003cp\u003e\u003ca name=\"ch4.1\"\u003e\u003c/a\u003e\u003c/p\u003e\r\n\r\n\u003ch3\u003e4.1.Stuxnet Live Cycle\u003c/h3\u003e\r\n\r\n\u003cp\u003e\u003cimg border=\"0\" height=\"480\" hspace=\"0\" src=\"StuxnetMalware/01.jpg\" width=\"497\"\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003eThis is the live cycle of stuxnet virus on windows OS. We will describe every step in this cycle beginning by WTR4132.TMP File and that's the main dropper of stuxnet worm.\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003ca name=\"ch4.2\"\u003e\u003c/a\u003e\u003c/p\u003e\r\n\r\n\u003ch3\u003e4.2. Main Dropper (~WTR4132.TMP)\u003c/h3\u003e\r\n\r\n\u003cp\u003eThis File is a dynamic link library file loaded into Explorer.exe (we will describe the loading of it in the booting mechanism). It begins the execution by searching for a section in it named \".stub\" section.\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cimg border=\"0\" height=\"180\" hspace=\"0\" src=\"StuxnetMalware/02_small.jpg\" width=\"640\"\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003eThis section contains the main stuxnet DLL file. And this DLL contains all stuxnet's functions, mechanisms, files and rootkits.\u003c/p\u003e\r\n\r\n\u003cp\u003eAnd that's the MZ File inside .stub section:\u003c/p\u003e\r\n\r\n\u003cp\u003e\u0026nbsp;\u003cbr\u003e\r\n\u003cimg border=\"0\" height=\"156\" hspace=\"0\" src=\"StuxnetMalware/03.jpg\" width=\"640\"\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003eThis Section (\".stub\") includes also the configuration data of stuxnet which is so important on the spreading mechanism, updating mechanism and many other things.\u003c/p\u003e\r\n\r\n\u003cp\u003eAfter finding this section, it loads stuxnet DLL file in a special way. First, it allocates a memory buffer for the DLL file to be loaded. Then, it patches 6 \u003cem\u003entdll.dll\u003c/em\u003e APIs with these names:\u003c/p\u003e\r\n\r\n\u003col\u003e\r\n\t\u003cli\u003e\u003cem\u003eZwMapViewOfSection\u003c/em\u003e\u003c/li\u003e\t\u003cli\u003e\u003cem\u003eZwCreateSection\u003c/em\u003e\u003c/li\u003e\t\u003cli\u003e\u003cem\u003eZwOpenFile \u003c/em\u003e\u003c/li\u003e\t\u003cli\u003e\u003cem\u003eZwClose \u003c/em\u003e\u003c/li\u003e\t\u003cli\u003e\u003cem\u003eZwQueryAttributesFile\u0026nbsp;\u003c/em\u003e\u003c/li\u003e\t\u003cli\u003e\u003cem\u003eZwQuerySection\u003c/em\u003e\u003c/li\u003e\u003c/ol\u003e\r\n\r\n\u003cp\u003eTo force these APIs to make .stub section like the file which you need to open with ZwOpenFile and to read from this section as it's a file on the harddisk. These patches make LoadLibraryA load a DLL file not from the harddisk (as usual) but from a place in the memory.\u003c/p\u003e\r\n\r\n\u003cp\u003eIt calls LoadLibraryA with the DLLName like KERNEL32.DLL.ASLR.XXXX to load the Main DLL File as I described above and at then end, it calls to Function #15 in the Main Stuxnet DLL.\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003ca name=\"ch4.3\"\u003e\u003c/a\u003e\u003c/p\u003e\r\n\r\n\u003ch3\u003e4.3. Main Stuxnet DLL\u003c/h3\u003e\r\n\r\n\u003cp\u003e\u003cem\u003e\u003ca name=\"ch4.3.1\"\u003e\u003c/a\u003e \u003c/em\u003e\u003c/p\u003e\r\n\r\n\u003ch3\u003e\u003cem\u003e4.3.1. Escalating the Privileges and Injecting Into a New Process\u003c/em\u003e\u003c/h3\u003e\r\n\r\n\u003cp\u003eWhen the main DLL begins the execution. It unupx itself (as the DLL is upxed) and then checks the configuration data of this stuxnet sample and checks the environment to choose if it will continue or exit from the beginning.\u003c/p\u003e\r\n\r\n\u003cp\u003eIt checks if the configuration data is correct and recent and then it checks the admin rights. If it's not running on administrator level, it uses one of two zero-day vulnerabilities to escalate the privileges and run in the administrator level.\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cem\u003eCVE-2010-2743(MS-10-073) \"“Win32K.sys Keyboard Layout Vulnerability\u003cbr\u003e\r\nCVE-xxxx-xxxx(MS-xx-xxx) \"“Windows Task Scheduler Vulnerability\u003c/em\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003eThese two vulnerabilities allow the worm to escalate the privileges and run in a new process (\"csrss.exe\" in case of Win32K.sys) or as a new task in the Task Scheduler case. It makes also some other checks like checking on 64bits or 32bits and so on. After everything goes right and the environment is prepared to be infected by stuxnet, it injects itself into another process to install itself from that process. The injection begins by searching for an Antivirus application installed in the machine.\u003c/p\u003e\r\n\r\n\u003cp\u003eDepending on the antivirus application (AVP or McAfee or what?), stuxnet chooses the process to inject itself into. If there's no antivirus program it chooses \"lsass.exe\"\u003c/p\u003e\r\n\r\n\u003cp\u003eYou will see the processes that stuxnet could choose in this Figure:\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cbr\u003e\r\n\u003cimg border=\"0\" height=\"320\" hspace=\"0\" src=\"StuxnetMalware/04.jpg\" width=\"382\"\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003eIt doesn't search for that process in the task manager to inject itself into, but it creates a new process (using CreateProcess) of the chosen application in the suspended form like that:\u003c/p\u003e\r\n\r\n\u003cpre lang=\"asm\"\u003e\r\nESP ==\u0026gt;  \u0026gt; 0006F4F8  |ModuleFileName = \"C:\\WINDOWS\\\\system32\\\\lsass.exe\"\r\nESP+4    \u0026gt; 00000000  |CommandLine = NULL\r\nESP+8    \u0026gt; 00000000  |pProcessSecurity = NULL\r\nESP+C    \u0026gt; 00000000  |pThreadSecurity = NULL\r\nESP+10   \u0026gt; 00000001  |InheritHandles = TRUE\r\nESP+14   \u0026gt; 0800000C  |CreationFlags = CREATE_SUSPENDED|DETACHED_PROCESS|CREATE_NO_WINDOW\r\nESP+18   \u0026gt; 00000000  |pEnvironment = NULL\r\nESP+1C   \u0026gt; 00000000  |CurrentDir = NULL\r\nESP+20   \u0026gt; 0006F13C  |pStartupInfo = 0006F13C\r\nESP+24   \u0026gt; 0006F730  \\pProcessInfo = 0006F730.\u003c/pre\u003e\r\n\r\n\u003cp\u003eAfter creating this process, it injects itself by a special way. This special way is to unload the program from its memory (ex. unload lsass.exe module from its memory) and load another PE File from stuxnet DLL resources in the same place of the previously unloaded module (lsass.exe for example).\u003c/p\u003e\r\n\r\n\u003cp\u003eBefore loading this new PE File, stuxnet makes some modifications to the file by adding new section (in the beginning) named \u003cstrong\u003e\".verif\"\u003c/strong\u003e. This section makes the PE File's size equal to the size of the previously unloaded module. And at the place of the entrypoint of the unloaded module, stuxnet writes a \"jmp\" instruction to the entrypoint of this PE File.\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cimg border=\"0\" height=\"133\" hspace=\"0\" src=\"StuxnetMalware/05_small.jpg\" width=\"640\"\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003eThe last step, stuxnet copies the .stub section and the main DLL to the memory of the infected process and writes on .bin section the pointer to this memory buffer.\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cimg border=\"0\" height=\"333\" hspace=\"0\" src=\"StuxnetMalware/06_small.jpg\" width=\"640\"\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003eAt the end, stuxnet resumes the main thread of this infected process. The PE file reloads the main stuxnet DLL and calls to Function #16.\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cem\u003e\u003ca name=\"ch4.3.2\"\u003e\u003c/a\u003e \u003c/em\u003e\u003c/p\u003e\r\n\r\n\u003ch3\u003e\u003cem\u003e4.3.2. Main Stuxnet DLL: Installing Stuxnet into the Infected Machine\u003c/em\u003e\u003c/h3\u003e\r\n\r\n\u003cp\u003eThe Function #16 begins by checking the configuration data and be sure that everything is ready to begin the installation. And also, it checks if the there's a value in the registry with this name \"\u003ccode\u003eNTVDM TRACE\u003c/code\u003e\" in\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003ccode\u003eSOFTWARE\\Microsoft\\Windows\\CurrentVersion\\MS-DOS Emulation\u003c/code\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003eAnd then, it checks if this value equal to \"19790509\". This special number seems a date \"May 9, 1979\" and this date has a historical meaning (by Wikipedia) \"Habib Elghanian was executed by a firing squad in Tehran sending shock waves through the closely knit Iranian Jewish community\"\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cimg border=\"0\" height=\"123\" hspace=\"0\" src=\"StuxnetMalware/07_small.jpg\" width=\"640\"\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003eAfter this test, Stuxnet installs itself with writing 6 files in the Windows directory 4 encrypted files:\u003c/p\u003e\r\n\r\n\u003cul\u003e\r\n\t\u003cli\u003e\u003cem\u003eC:\\WINDOWS\\inf\\oem7A.PNF\u003c/em\u003e\u003c/li\u003e\t\u003cli\u003e\u003cem\u003eC:\\WINDOWS\\inf\\oem6C.PNF\u003c/em\u003e\u003c/li\u003e\t\u003cli\u003e\u003cem\u003eC:\\WINDOWS\\inf\\mdmcpq3.PNF\u003c/em\u003e\u003c/li\u003e\t\u003cli\u003e\u003cem\u003eC:\\WINDOWS\\inf\\mdmeric3.PNF\u003c/em\u003e\u003c/li\u003e\u003c/ul\u003e\r\n\r\n\u003cp\u003eAnd 2 device drivers:\u003c/p\u003e\r\n\r\n\u003cul\u003e\r\n\t\u003cli\u003e\u003cem\u003eC:\\WINDOWS\\system32\\Drivers\\mrxnet.sys\u003c/em\u003e\u003c/li\u003e\t\u003cli\u003e\u003cem\u003eC:\\WINDOWS\\system32\\Drivers\\mrxcls.sys\u003c/em\u003e\u003c/li\u003e\u003c/ul\u003e\r\n\r\n\u003cp\u003eAfter that, it installs the device drivers into the registry to be sure that they will run every time the computer boots.\u003cbr\u003e\r\nIt forces them to be loaded in the beginning before most of windows system applications (and that's will be explained later).\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cimg border=\"0\" height=\"328\" hspace=\"0\" src=\"StuxnetMalware/08_small.jpg\" width=\"640\"\u003e \u003cimg border=\"0\" height=\"329\" hspace=\"0\" src=\"StuxnetMalware/09_small.jpg\" width=\"640\"\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003eAfter the installation, it loads the mrxnet driver by calling \u003ccode\u003eZwLoadDriver\u003c/code\u003e. It calls to this function after adjusting its privileges by \"\u003ccode\u003eAdjustTokenPrivileges\u003c/code\u003e\" to add the \u003ccode\u003eSeLoadDriverPrivilege \u003c/code\u003eto its privileges.\u003c/p\u003e\r\n\r\n\u003cp\u003eAt the end, it modifies the Windows Firewall (Windows Defender) setting to avoid being stopped by this firewall. It some values in the key:\u003c/p\u003e\r\n\r\n\u003cpre lang=\"text\"\u003e\r\nSOFTWARE\\Microsoft\\Windows Defender\\Real-Time Protection \u003c/pre\u003e\r\n\r\n\u003cp\u003eAnd the values are:\u003c/p\u003e\r\n\r\n\u003cul\u003e\r\n\t\u003cli\u003e\u003ccode\u003eEnableUnknownPrompts\u003c/code\u003e\u003c/li\u003e\t\u003cli\u003e\u003ccode\u003eEnableKnownGoodPrompts\u003c/code\u003e\u003c/li\u003e\t\u003cli\u003e\u003ccode\u003eServicesAndDriversAgent\u003c/code\u003e\u003c/li\u003e\u003c/ul\u003e\r\n\r\n\u003cp\u003eIt sets them all to zero and disables the firewall for stuxnet.\u003c/p\u003e\r\n\r\n\u003cp\u003eNow the installation ends and now we will talk about the spreading mechanisms\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003ca name=\"ch4.4\"\u003e\u003c/a\u003e\u003c/p\u003e\r\n\r\n\u003ch3\u003e4.4. Spreading Mechanism\u003c/h3\u003e\r\n\r\n\u003cp\u003e\u003ca name=\"ch4.4.1\"\u003e\u003c/a\u003e\u003c/p\u003e\r\n\r\n\u003ch3\u003e\u003cem\u003e4.4.1. The USB Drives Infection\u003c/em\u003e\u003c/h3\u003e\r\n\r\n\u003cp\u003eFor infecting USB Flash memory, Stuxnet creates a new hidden window \"\u003ccode\u003eAFX64c313\u003c/code\u003e\" and get notified of any new USB flash memory inserted to the computer by waiting for \"\u003ccode\u003eWM_DEVICECHANGE\u003c/code\u003e\" Windows Message. After getting notified of a new drive added to the computer (USB Flash Memory), stuxnet writes 6 files into the flash memory drive:\u003c/p\u003e\r\n\r\n\u003cul\u003e\r\n\t\u003cli\u003eCopy of Shortcut to.lnk\u003c/li\u003e\t\u003cli\u003eCopy of Copy of Shortcut to.lnk\u003c/li\u003e\t\u003cli\u003eCopy of Copy of Copy of Shortcut to.lnk\u003c/li\u003e\t\u003cli\u003eCopy of Copy of Copy of Copy of Shortcut to.lnk\u003c/li\u003e\u003c/ul\u003e\r\n\r\n\u003cp\u003eAnd 2 executable files (DLL files):\u003c/p\u003e\r\n\r\n\u003cul\u003e\r\n\t\u003cli\u003e\u003cem\u003e~WTR4141.tmp\u003c/em\u003e\u003c/li\u003e\t\u003cli\u003e\u003cem\u003e~WTR4132.tmp\u003c/em\u003e\u003c/li\u003e\u003c/ul\u003e\r\n\r\n\u003cp\u003eThese malformed shortcut files use vulnerability in Windows Shell named:\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cem\u003eCVE-2010-2568(MS-10-046) -Windows Shell LNK Vulnerability\u003c/em\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003eThis vulnerability is not a buffer-overflow vulnerability but it's due to a bad way for windows to load icons for LNK files which creates the vulnerability.\u003c/p\u003e\r\n\r\n\u003cp\u003eThese shortcuts are special shortcuts for an unknown type of files named CPL Files. These files are the Control Panel applications like datetime.cpl in windows directory (you can test it) and many of them in windows directory.\u003c/p\u003e\r\n\r\n\u003cp\u003eYou can create a shortcut similar to these shortcuts by choosing Control Panel then Switch to classical view then right click on any application of them and click \"create shortcut\" as what you see in the picture:\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cimg border=\"0\" height=\"158\" hspace=\"0\" src=\"StuxnetMalware/10.jpg\" width=\"203\"\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003eIf you try to compare this shortcut with the malformed shortcut by stuxnet you will see that:\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cimg border=\"0\" height=\"200\" hspace=\"0\" src=\"StuxnetMalware/11_small.jpg\" width=\"640\"\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003eThey are very similar (the white spaces are the similar places). Maybe the differences are in the end of the shortcut.\u003c/p\u003e\r\n\r\n\u003cp\u003eIf we analyze the shortcut, we will see that all shortcuts contain the following sections:\u003c/p\u003e\r\n\r\n\r\n\t\u003ctable border=\"1\" cellpadding=\"1\" cellspacing=\"1\"\u003e\u003ctbody\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e\u003cstrong\u003e.LNK File Format\u003c/strong\u003e\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e1. Header\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e2. Shell Item Id List\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e3. File Location Info\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e4. Description\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e5. Relative Path\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e6. Working Directory\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e7. Command Line Arguments\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e8. Icon Filename\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e9. Additional Info\u003c/td\u003e\t\t\u003c/tr\u003e\t\u003c/tbody\u003e\u003c/table\u003e\r\n\r\n\u003cp\u003eIn our Malformed Shortcut, it has only the first 2 sections. The first section is like this:\u003c/p\u003e\r\n\r\n\r\n\t\u003ctable border=\"1\" cellpadding=\"1\" cellspacing=\"1\" width=\"500\"\u003e\u003ctbody\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e\u003cstrong\u003eStuxnet's Shortcut Header\u003c/strong\u003e\u003c/td\u003e\t\t\u003c/tr\u003e\t\u003c/tbody\u003e\u003c/table\u003e\r\n\r\n\r\n\t\u003ctable border=\"1\" cellpadding=\"1\" cellspacing=\"1\" width=\"500\"\u003e\u003ctbody\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eMagic\u003c/td\u003e\t\t\t\u003ctd\u003e4C 00 00 00\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eGUID\u003c/td\u003e\t\t\t\u003ctd\u003e01 14 02 00 00 00 00 00 C0 00 00 00 00 00 00 46\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eShortcut flags\u003c/td\u003e\t\t\t\u003ctd\u003e0x0000001 : Shell Item ID List present\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eTarget File flags\u003c/td\u003e\t\t\t\u003ctd\u003e00 00 00 00\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eCreation Time\u003c/td\u003e\t\t\t\u003ctd\u003e00 00 00 00 00 00 00 00\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eLast access time:\u003c/td\u003e\t\t\t\u003ctd\u003e00 00 00 00 00 00 00 00\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eModified time\u003c/td\u003e\t\t\t\u003ctd\u003e00 00 00 00 00 00 00 00\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eFile length\u003c/td\u003e\t\t\t\u003ctd\u003e00 00 00 00 (the target is not a file)\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eIcon Number\u003c/td\u003e\t\t\t\u003ctd\u003e00 00 00 00\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eShow Window\u003c/td\u003e\t\t\t\u003ctd\u003e01 00 00 00 == 1 (Normal Window)\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eHot Key\u003c/td\u003e\t\t\t\u003ctd\u003e00 00 00 00\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eReserved\u003c/td\u003e\t\t\t\u003ctd\u003e00 00 00 00\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eReserved\u003c/td\u003e\t\t\t\u003ctd\u003e00 00 00 00\u003c/td\u003e\t\t\u003c/tr\u003e\t\u003c/tbody\u003e\u003c/table\u003e\r\n\r\n\u003cp\u003eThis header is exactly the same in the CPL Shortcut that you create before. The next Section is the Shell Item ID List.\u003c/p\u003e\r\n\r\n\u003cp\u003eIt's hard to explain this section but every object in windows (like a folder, a file, the control panel and so on) has a PIDL. I don't have any idea PIDLs but it's an ID with reference to this object.\u003c/p\u003e\r\n\r\n\u003cp\u003eThe Shell Item ID List begins by an unsigned short represent the size of the whole Section (in the Original CPL File the size == size_of_whole_file \"“ size_of_header).\u003c/p\u003e\r\n\r\n\u003cp\u003eAfter that, this unsigned short followed by a size of an ID and then the ID of an item in the list then the next size and item and so on until reach the end of this section. This section ends by an item its size equal to zero.\u003c/p\u003e\r\n\r\n\u003cp\u003eThese IDs could represent a file like that:\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cimg border=\"0\" height=\"96\" hspace=\"0\" src=\"StuxnetMalware/12.jpg\" width=\"631\"\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003eOr represent a virtual object like Control Panel like in this malformed shortcut.\u003c/p\u003e\r\n\r\n\u003cp\u003eIn the malformed shortcut, this section begins with the pid of the Control Panel and then some other pids until reach an item contains the path and the filename of stuxnet DLL (\u003ccode\u003e\"~WTR4141.TMP\"\u003c/code\u003e)\u003c/p\u003e\r\n\r\n\u003cp\u003eThe path is like that:\u003c/p\u003e\r\n\r\n\u003cpre lang=\"text\"\u003e\r\n\\\\.\\STORAGE#RemovableMedia#7\u0026amp;364cf31c\u0026amp;0\u0026amp;RM#{53f5630d-b6bf-11d0-94f2-00a0c91efb8b}\\~WTR4141.tmp \u003c/pre\u003e\r\n\r\n\u003cp\u003eYou will ask me, so why there are four shortcut files?\u003c/p\u003e\r\n\r\n\u003cp\u003eBecause every file of them contains a different form of the path to wtr4141.tmp file to ensure that stuxnet is compatible with all versions of windows OS that have this vulnerability\u003c/p\u003e\r\n\r\n\u003cp\u003eThe paths are these:\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cstrong\u003eWindows7: \u003c/strong\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003ccode\u003e\\\\.\\STORAGE#Volume#_??_USBSTOR#Disk\u0026amp;Ven_____USB\u0026amp;Prod_FLASH_DRIVE\u0026amp;Rev_#12345000100000000173\u0026amp;0#{53f56307-b6bf-11d0-94f2-00a0c91efb8b}#{53f5630d-b6bf-11d0-94f2-00a0c91efb8b}\\~WTR4141.tmp\u003c/code\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cstrong\u003eWindows Vista: \u003c/strong\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003ccode\u003e\\\\.\\STORAGE#Volume#1\u0026amp;19f7e59c\u0026amp;0\u0026amp;_??_USBSTOR#Disk\u0026amp;Ven_____USB\u0026amp;Prod_FLASH_DRIVE\u0026amp;Rev_#12345000100000000173\u0026amp;0#{53f56307-b6bf-11d0-94f2-00a0c91efb8b}#{53f5630d-b6bf-11d0-94f2-00a0c91efb8b}\\~WTR4141.tmp\u003c/code\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cstrong\u003eWindows XP, Windows Server 2003 and Windows 2000: \u003c/strong\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003ccode\u003e\\\\.\\STORAGE#RemovableMedia#8\u0026amp;1c5235dc\u0026amp;0\u0026amp;RM#{53f5630d-b6bf-11d0-94f2-00a0c91efb8b}\\~WTR4141.tmp\u003c/code\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003eThese paths force \u003cem\u003eExplorer.exe\u003c/em\u003e to load stuxnet and execute its code.\u003c/p\u003e\r\n\r\n\u003cp\u003eThe Explorer calls to an API named \"Shell32.LoadCPLModule\" to load the icon for this shortcut which calls to LoadLibraryA API which executes the main function of wtr4141.tmp.\u003c/p\u003e\r\n\r\n\u003cp\u003eThat's the infection mechanism for Stuxnet using this vulnerability.\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003ca name=\"ch4.4.2\"\u003e\u003c/a\u003e\u003c/p\u003e\r\n\r\n\u003ch3\u003e\u003cem\u003e4.4.2. Spreading via Network\u003c/em\u003e\u003c/h3\u003e\r\n\r\n\u003cp\u003eStuxnet spreads via Network using one of vulnerabilities:\u003c/p\u003e\r\n\r\n\u003cul\u003e\r\n\t\u003cli\u003e\u003cem\u003eCVE-2008-4250(MS-08-067) \"“Windows Server Service NetPathCanonicalize() Vulnerability\u003c/em\u003e\u003c/li\u003e\t\u003cli\u003e\u003cem\u003eCVE-2010-2729(MS-10-061) \"“Windows Print Spooler Service Vulnerability\u003c/em\u003e\u003c/li\u003e\u003c/ul\u003e\r\n\r\n\u003cp\u003eThe first vulnerability is not a zero-day vulnerability, it's already known. This vulnerability was used before by Conficker. In this vulnerability, stuxnet looks for C$ and Admin$ shares on remote systems. Then, it copies itself as a file named \"DEFRAGxxxxx.TMP\" in the first writable directory found on the share.\u003c/p\u003e\r\n\r\n\u003cp\u003eAnd then, it tries to execute a command:\u003c/p\u003e\r\n\r\n\u003cpre lang=\"text\"\u003e\r\nrundll32.exe \"DEFRAGxxxxx.TMP\",DllGetClassObjectEx\u003c/pre\u003e\r\n\r\n\u003cp\u003eThe second vulnerability is a zero-day vulnerability. This vulnerability was first described by Carsten Kohler in Hackin9 Security Magazine 04-2009 in an article named \"\u003cem\u003ePrint Your Shell\u003c/em\u003e\"\u003c/p\u003e\r\n\r\n\u003cp\u003eThis vulnerability wasn't used in the wild until Stuxnet. This vulnerability allows a guest user account to communicate to a machine with a shared printer and writes a file to the system directory in it.\u003c/p\u003e\r\n\r\n\u003cp\u003eThe windows APIs for printing allows to choose the directory that you wish to copy your file to and with an API named \"\u003ccode\u003eGetSpoolFileHandle\u003c/code\u003e\" you can get the file handle of the newly created file in the target machine and then you can easily with ReadFile \u0026amp; WriteFile APIs you can copy your file into the target machine.\u003c/p\u003e\r\n\r\n\u003cp\u003eFor stuxnet, it copies 2 files into the target machine:\u003c/p\u003e\r\n\r\n\u003cul\u003e\r\n\t\u003cli\u003e\u003cem\u003eWindows\\System32\\winsta.exe\u003c/em\u003e\u003c/li\u003e\t\u003cli\u003e\u003cem\u003eWindows\\System32\\wbem\\mof\\sysnullevnt.mof\u003c/em\u003e\u003c/li\u003e\u003c/ul\u003e\r\n\r\n\u003cp\u003eThe first file is the stuxnet dropper and the second is a Managed Object Format file. This file (under some conditions) executes winsta.exe the stuxnet dropper.\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003ca name=\"ch4.5\"\u003e\u003c/a\u003e\u003c/p\u003e\r\n\r\n\u003ch3\u003e4.5. Updating Mechanism\u003c/h3\u003e\r\n\r\n\u003cp\u003e\u003ca name=\"ch4.5.1\"\u003e\u003c/a\u003e\u003c/p\u003e\r\n\r\n\u003ch3\u003e\u003cem\u003e4.5.1. Updating via Internet\u003c/em\u003e\u003c/h3\u003e\r\n\r\n\u003cp\u003eStuxnet updates itself via Internet by establishing a HTTP connection to 2 malformed websites:\u003c/p\u003e\r\n\r\n\u003cul\u003e\r\n\t\u003cli\u003e\u003cem\u003ewww.mypremierfutbol.com\u003c/em\u003e\u003c/li\u003e\t\u003cli\u003e\u003cem\u003ewww.todaysfutbol.com \u003c/em\u003e\u003c/li\u003e\u003c/ul\u003e\r\n\r\n\u003cp\u003eIt sends an encrypted data like that:\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cem\u003ehttp://www.mypremierfutbol.com/index.php?data=data_to_send\u003c/em\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003eThis data contains the IP, the Adaptor name and description and some other data related to the infected machine and stuxnet. After that it receives the newer version of stuxnet (in an encrypted form) begins by the imagebase then a flag and at the last the Executable Image\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003ca name=\"ch4.5.2\"\u003e\u003c/a\u003e\u003c/p\u003e\r\n\r\n\u003ch3\u003e\u003cem\u003e4.5.2. Updating via Peer to Peer Connection\u003c/em\u003e\u003c/h3\u003e\r\n\r\n\u003cp\u003eAfter Stuxnet infects a machine, it creates a RPC server and listen to any connections comes from the any PC on the Network.\u003c/p\u003e\r\n\r\n\u003cp\u003eIn the other PCs in the network, stuxnet establish a connection with this RPC Server.\u003c/p\u003e\r\n\r\n\u003cp\u003eThis way allows stuxnet to update itself in the isolated PCs (from the Internet) but has in its network a PC has the ability to connect to the internet. This way is to suitable while infecting companies as there are some inside PCs haven't the ability to connect directly to the internet.\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003ca name=\"ch4.6\"\u003e\u003c/a\u003e\u003c/p\u003e\r\n\r\n\u003ch3\u003e4.6. Rootkits\u003c/h3\u003e\r\n\r\n\u003cp\u003e\u003cem\u003e\u003ca name=\"ch4.6.1\"\u003e\u003c/a\u003e \u003c/em\u003e\u003c/p\u003e\r\n\r\n\u003ch3\u003e\u003cem\u003e4.6.1. User-Mode Rootkit (~WTR4141.TMP)\u003c/em\u003e\u003c/h3\u003e\r\n\r\n\u003cp\u003eThis file is a DLL File. It's loaded by the LNK Vulnerability. This file not only loads the Main Stuxnet Dropper (~WTR4132.TMP) but also it works as a user-mode rootkit to hide stuxnet files in the flash memory.\u003c/p\u003e\r\n\r\n\u003cp\u003eIt firstly hooks the File Management APIs: (\u003ccode\u003eFindFirstFileW\u003c/code\u003e, \u003ccode\u003eFindNextFileW\u003c/code\u003e, \u003ccode\u003eFindFirstFileExW\u003c/code\u003e, \u003ccode\u003entQueryDirectoryFile\u003c/code\u003e, \u003ccode\u003ezwQueryDirectoryFile\u003c/code\u003e)\u003c/p\u003e\r\n\r\n\u003cp\u003eIt hooks them by modifying the import table of the main process (Explorer.exe) and all loaded modules (searches for them in the TEB Thread Environment Block) by changing the address of these functions to the address of another functions inside the rootkit.\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cimg border=\"0\" height=\"474\" hspace=\"0\" src=\"StuxnetMalware/13.jpg\" width=\"640\"\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003eThese functions call to the original functions (windows APIs) and then modify their outputs to hide stuxnet files.\u003c/p\u003e\r\n\r\n\u003cp\u003eThey check the output if it contains .LNK files with a specific size (4171 bytes) or contains a file named ~WTRabcd.TMP (as a+b+c+d = 10)\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cimg border=\"0\" height=\"471\" hspace=\"0\" src=\"StuxnetMalware/14.jpg\" width=\"582\"\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003eThis rootkit is only used once while infecting a PC but after that stuxnet installs another rootkit named \"MRxNet\" and it's a kernel-mode rootkit.\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cem\u003e\u003ca name=\"ch4.6.2\"\u003e\u003c/a\u003e \u003c/em\u003e\u003c/p\u003e\r\n\r\n\u003ch3\u003e\u003cem\u003e4.6.2. Kernel-Mode Rootkit (MRxNet)\u003c/em\u003e\u003c/h3\u003e\r\n\r\n\u003cp\u003e\u003cem\u003eMRxNet is a simple filesystem filter created to hide the files that was created in the USB flash memory (.LNK \u0026amp; TMP files) like in the user-mode rootkit. I reversed this driver manually into C++ using IDA Pro. You can download it code from My Blog: \u003ca href=\"http://www.amrthabet.co.cc/\"\u003ehttp://www.amrthabet.co.cc\u003c/a\u003e\u003cbr\u003e\r\nOr from the attachment files with this article\u003c/em\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cimg border=\"0\" height=\"238\" hspace=\"0\" src=\"StuxnetMalware/15_small.jpg\" width=\"640\"\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003eBut this rootkit doesn't modify the addresses in the import table, but it adds itself to the driver chain of these drivers\u003c/p\u003e\r\n\r\n\u003cul\u003e\r\n\t\u003cli\u003e\u003cem\u003e\\\\FileSystem\\\\ntfs\u003c/em\u003e\u003c/li\u003e\t\u003cli\u003e\u003cem\u003e\\\\FileSystem\\\\fastfat\u003c/em\u003e\u003c/li\u003e\t\u003cli\u003e\u003cem\u003e\\\\FileSystem\\\\cdfs\u003c/em\u003e\u003c/li\u003e\u003c/ul\u003e\r\n\r\n\u003cp\u003eThese drivers are the main drivers for handling the files and folders in your machine. When MRxNet adds itself to the driver chain, it receives the requests (I/O Request Packets ISPs) to these drivers before these drivers receive them.\u003c/p\u003e\r\n\r\n\u003cp\u003eReceiving these requests allows MRxNet to modify the input to these drivers. And by using this trick MRxNet hides a directory named:\u003c/p\u003e\r\n\r\n\u003cpre lang=\"text\"\u003e\r\n{58763ECF-8AC3-4a5f-9430-1A310CE4BE0A} \u003c/pre\u003e\r\n\r\n\u003cp\u003eBy deleting its name from the input request (ISP) to these drivers. I don't know what this name represents it seems something like a GUID.\u003c/p\u003e\r\n\r\n\u003cp\u003eBut the main goal of MRxNet is to modify the output of these drivers, so MRxNet adds to the request an IOCompletionRoutine. This routine is executed by the last driver executed in the chain after the result prepared (the reply to the request) and needed to be sent to the user again.\u003c/p\u003e\r\n\r\n\u003cp\u003eThis function was created by Windows to modify the output of any driver and that's what MRxNet does.\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cimg border=\"0\" height=\"116\" hspace=\"0\" src=\"StuxnetMalware/16.jpg\" width=\"517\"\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003eMRxNet modifies the output like the user-mode rootkit and deletes the entries that seem stuxnet files as what you can see in the figure:\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cimg border=\"0\" height=\"165\" hspace=\"0\" src=\"StuxnetMalware/17.jpg\" width=\"480\"\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003eMRxNet contains a strange string in its data (seems a debug message before):\u003cbr\u003e\r\n\u003ccode\u003eb:\\\\myrtus\\\\src\\\\objfre_w2k_x86\\\\i386\\\\guava.pdb\u003c/code\u003e\u003cbr\u003e\r\nThis strange string contains a word \"myrtus\" and this word represents \"MyRTUs\" or represents a Hebrew word.\u003c/p\u003e\r\n\r\n\u003cp\u003eIt could lead to the criminals behind this attack (Israel) or it could be a false positive \"¦ but no one know.\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003ca name=\"ch4.7\"\u003e\u003c/a\u003e\u003c/p\u003e\r\n\r\n\u003ch3\u003e4.7. Loading Mechanism\u003c/h3\u003e\r\n\r\n\u003cp\u003e\u003cem\u003e\u003ca name=\"ch4.7.1\"\u003e\u003c/a\u003e \u003c/em\u003e\u003c/p\u003e\r\n\r\n\u003ch3\u003e\u003cem\u003e4.7.1. ~WTR4141.TMP\u003c/em\u003e\u003c/h3\u003e\r\n\r\n\u003cp\u003eThis file (as we said before) is loaded by LNK Vulnerability. This file loads the Main Stuxnet Dropper by a known way. It calls to LoadLibraryA to load it and LoadLibraryA executes the main Entrypoint for this dropper to load and install stuxnet.\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cem\u003e\u003ca name=\"ch4.7.2\"\u003e\u003c/a\u003e \u003c/em\u003e\u003c/p\u003e\r\n\r\n\u003ch3\u003e\u003cem\u003e4.7.2. MRxCls Loader Driver\u003c/em\u003e\u003c/h3\u003e\r\n\r\n\u003cp\u003eMrxCls is a very complex project. It includes many features and abilities to load a program secretly without the attention of any Antivirus application specially the behavioral antiviruses.\u003c/p\u003e\r\n\r\n\u003cp\u003eThis virus seems a separate project, wasn't created by the creators of Stuxnet worm. It seems that it was created by another department in the organization that creates Stuxnet.\u003cbr\u003e\r\nThis driver wasn't modified along with the versions of stuxnet and also it contains many features that are not used by stuxnet worm.\u003c/p\u003e\r\n\r\n\u003cp\u003eThis organization is not only an organization for programming but also it has spies and thieves in other companies that make it steal some certifications from big companies like Realtek Semi-Conductor Co-Op. This driver is signed with Realtek as a product from this company as you can in this image.\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cimg border=\"0\" height=\"365\" hspace=\"0\" src=\"StuxnetMalware/18_small.jpg\" width=\"640\"\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003eThat's what makes us sure that this virus is not a game from some virus writers but it's a planned crime.\u003c/p\u003e\r\n\r\n\u003cp\u003eHere we will talk about the technical details of the driver, how it works and the internal structure of it.\u003c/p\u003e\r\n\r\n\u003cp\u003eFirst we will talk about the input of the driver and then we will talk about how this driver deals with it.\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003ca name=\"ch4.7.2.1\"\u003e\u003c/a\u003e\u003c/p\u003e\r\n\r\n\u003ch3\u003e\u003cem\u003e4.7.2.1. The Input\u003c/em\u003e\u003c/h3\u003e\r\n\r\n\u003cp\u003eMrxCls takes the parameters from the registry from a key name:\u003c/p\u003e\r\n\r\n\u003cpre lang=\"text\"\u003e\r\n\"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\MRxCls\" \u003c/pre\u003e\r\n\r\n\u003cp\u003eIt reads the \"\u003ccode\u003eData\u003c/code\u003e\" value in this key as the parameter of the driver. This data contains an encrypted data. After decrypting it, we found this:\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cimg border=\"0\" height=\"412\" hspace=\"0\" src=\"StuxnetMalware/19.jpg\" width=\"519\"\u003e\u003cbr\u003e\r\n\u003cimg src=\"StuxnetMalware/20.jpg\"\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003eThis data contains the name of some system processes and filenames for stuxnet files. This data tells the driver the filename of the stuxnet file and the process that stuxnet needs to inject its file in. This data is organized as follows:\u003cbr\u003e\r\nFirst the Header and its size is dynamic.\u003c/p\u003e\r\n\r\n\r\n\t\u003ctable border=\"1\" cellpadding=\"1\" cellspacing=\"1\"\u003e\u003ctbody\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e\u003cstrong\u003eHeader\u003c/strong\u003e\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eSignature = 0 (4 bytes)\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003ePointer to The body (the end of Header) (4 bytes)\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eReserved (4 bytes)\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eNumber of Injections (4 bytes)\u003c/td\u003e\t\t\u003c/tr\u003e\t\u003c/tbody\u003e\u003c/table\u003e\r\n\r\n\u003cp\u003eAfter that there's an array of elements defined by the Number of Injections in the header. Every element contains the name of the infected process, the dll file to inject into this process, the flags and the key to decrypt the virus.\u003c/p\u003e\r\n\r\n\u003cp\u003eAll stuxnet files are encrypted but with a key equal zero\u003cbr\u003e\r\nThe structure of these elements is like that:\u003c/p\u003e\r\n\r\n\u003cp\u003eFirst it begins with the details of the infection and then followed with the Unicode strings of the process name and the stuxnet filename.\u003c/p\u003e\r\n\r\n\r\n\t\u003ctable border=\"1\" cellpadding=\"1\" cellspacing=\"1\"\u003e\u003ctbody\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e\u003cstrong\u003eThe Elements\u003c/strong\u003e\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eReserved (4 bytes)\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eThe Exported Function To call in the injected dll (2 bytes)\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eFlags (2 bytes)\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eKey (4 bytes)\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eReserved (4 bytes)\u003c/td\u003e\t\t\u003c/tr\u003e\t\u003c/tbody\u003e\u003c/table\u003e\r\n\r\n\u003cp\u003eThen the Unicode strings like that:\u003c/p\u003e\r\n\r\n\r\n\t\u003ctable border=\"1\" cellpadding=\"1\" cellspacing=\"1\"\u003e\u003ctbody\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eSize of the process name unicode string (4 bytes)\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eProcess name (variable size)\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eThe Size of the stuxnet filename string (4 bytes)\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eUnicode string of the stuxnet file (variable size)\u003c/td\u003e\t\t\u003c/tr\u003e\t\u003c/tbody\u003e\u003c/table\u003e\r\n\r\n\u003cp\u003eAnd that's repeated for every element in the array.\u003c/p\u003e\r\n\r\n\u003cp\u003eThe Flags in The Elements Header contain 2 bits. The first bit describes if the file (that needs to be injected) is encrypted or not (and always it's encrypted).\u003cbr\u003e\r\nAnd the second bit describes if the infected process will contain the decrypted stuxnet file ( To be loaded by a built-in PE loader) or will only contain the filename of the stuxnet file to be loaded by LoadLibraryW in the user-mode (and that's never used)\u003c/p\u003e\r\n\r\n\u003cp\u003eSo, Stuxnet worm writes an input data to the driver with this structure contains this information:\u003c/p\u003e\r\n\r\n\u003cul\u003e\r\n\t\u003cli\u003e\u003cstrong\u003eservices.exe:\u003c/strong\u003e\u0026nbsp; \u003ccode\u003e\\SystemRoot\\inf\\oem7A.PNF\u003c/code\u003e (stuxnet main dll) and call to Export 1\u003c/li\u003e\t\u003cli\u003e\u003cstrong\u003eS7tgtopx.exe:\u003c/strong\u003e \u003ccode\u003e\\SystemRoot\\inf\\oem7A.PNF \u003c/code\u003eand call to Export 2 (SCADA infection)\u003c/li\u003e\t\u003cli\u003e\u003cstrong\u003eCCProjectMgr.exe:\u003c/strong\u003e \u003ccode\u003eSystemRoot\\inf\\oem7A.PNF \u003c/code\u003eand call to Export 2\u003c/li\u003e\t\u003cli\u003e\u003cstrong\u003eexplorer.exe:\u003c/strong\u003e \\\u003ccode\u003eSystemRoot\\inf\\oem7m.PNF \u003c/code\u003eand call to Export 2\u003c/li\u003e\u003c/ul\u003e\r\n\r\n\u003cp\u003eStuxnet also always sets the flags equal \"11\" or 3 and that means that the stuxnet file is encrypted and needs to be decrypted and that the driver must read and decrypt it and then allocate memory in the infected process equal the size of the file to copy the file in. after that in the user-mode, the file will be loaded by a built-in PE loader that's injected in the process memory beside the injected file.\u003c/p\u003e\r\n\r\n\u003cp\u003eAll the infection process will be described in the next sections but that's a brief.\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cem\u003e\u003ca name=\"ch4.7.2.2\"\u003e\u003c/a\u003e \u003c/em\u003e\u003c/p\u003e\r\n\r\n\u003ch3\u003e\u003cem\u003e4.7.2.2. Initialization\u003c/em\u003e\u003c/h3\u003e\r\n\r\n\u003cp\u003eFirst, stuxnet creates a registry key and add some values to it for registering the MrxCls driver to be loaded on every start.\u003cbr\u003e\r\nThis key is \"\u003ccode\u003eSYSTEM\\CurrentControlSet\\Services\\MRxCls\u003c/code\u003e\". It then adds the \"\u003ccode\u003eData\u003c/code\u003e\" value that contains the parameters of the driver and makes it load as a boot driver and that makes it load before many service applications and drivers.\u003c/p\u003e\r\n\r\n\u003cp\u003eWhen it loads, it begins by decrypting a part from its data with size 0x278 bytes and gets the following data:\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n..................\\REGISTRY\\MACHINE\\SYSTEM\\CurrentControlSet\\Ser\r\nvices\\MRxCls..........................................Data......\r\n................................................................\r\n.....................................0??\\Device\\MRxClsDvX.......\r\n................................................................\r\n.............??Â»\u003c/pre\u003e\r\n\r\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\r\n\r\n\u003cp\u003eAfter that it gets the parameters form \"Data\" value, decrypts it and saves it as an element in a generic table.\u003c/p\u003e\r\n\r\n\u003cp\u003eAlso it checks the \"\u003ccode\u003eInitSafeBootMode\u003c/code\u003e\" and checks for \"\u003ccode\u003eKdDebuggerEnabled\u003c/code\u003e\". If the kd debugger is enabled, it will end. And then, it creates a new device by calling \"\u003ccode\u003eIoCreateDevice\u003c/code\u003e\" API and creates a new driver named \"\u003ccode\u003e\\Device\\MRxClsDvX\u003c/code\u003e\".\u003c/p\u003e\r\n\r\n\u003cp\u003eIt then gets some functions like \"\u003ccode\u003eRtlGetVersion\u003c/code\u003e\" and \"\u003ccode\u003eKeAreAllApcsDisabled\u003c/code\u003e\" with a function named \"\u003ccode\u003eMmGetSystemRoutineAddress\u003c/code\u003e\" (not \u003ccode\u003eGetProcAddress\u003c/code\u003e).\u003c/p\u003e\r\n\r\n\u003cp\u003eAnd at the end it calls to \"\u003ccode\u003ePsSetLoadImageNotifyRoutine\u003c/code\u003e\" to register a function to be called every time a process or a module is loaded in the memory (including \u003cem\u003eservices.exe\u003c/em\u003e and \u003cem\u003ekernel32.dll\u003c/em\u003e that will be used in the driver).\u003c/p\u003e\r\n\r\n\u003cp\u003eNow we will talk about the \u003ccode\u003eNotifyRoutine \u003c/code\u003eand the stages of injecting stuxnet files into a system process.\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cem\u003e\u003ca name=\"ch4.7.2.3\"\u003e\u003c/a\u003e \u003c/em\u003e\u003c/p\u003e\r\n\r\n\u003ch3\u003e\u003cem\u003e4.7.2.3. Stage One : Injecting data in kernel-mode\u003c/em\u003e\u003c/h3\u003e\r\n\r\n\u003cp\u003eEvery time a process or a module is loaded in the memory, this process is called given three parameters: The name of the module, the ProcessId and the ImageInfo.\u003c/p\u003e\r\n\r\n\u003cp\u003eIt begins by checking the loaded module with \"kernel32.dll\" (and we will talk about it later) and if it's not kernel32, it parses the registry data (that's loaded and decrypted before) and loops on the elements of this data searching for the name of the process that needs to inject stuxnet file into and compare it with the loaded process's name.\u003c/p\u003e\r\n\r\n\u003cp\u003eWhen it found a process is needed to inject stuxnet file into. It loads the stuxnet file into the process's memory and decrypts it. After that, it copies a junk of data (contains code) into the process's memory and then it writes \"MZ\" and \"PE\" and some other data into this junk of data.\u003c/p\u003e\r\n\r\n\u003cp\u003eThis junk of data seems that it's two PE files (was created separately before) and was deleted from them some common marks of a PE file (e.g. MZ, PE, 0x14C, 0xE0 and so on). These bytes prove that this is a PE file so the author of MrxCls deleted them and wrote a code to write them again in their places again (And that's surely a way to disguise them and hide the meaning of these junk data). Not only that but also he deleted the name of all sections.\u003c/p\u003e\r\n\r\n\u003cp\u003eThen, the driver writes in the process's memory the pointer to this place, pointer to the beginning of the MZ header (there's 0x101C bytes before it, remember that because we'll talk about it again in stage three) and the size of this PE module in specific places in memory inside the MZ module.\u003c/p\u003e\r\n\r\n\u003cp\u003eAfter that it jumps on the process PE module. It begins by parsing its PE and gets the entrypoint of the process's module and then, it checks that there's no relocables between the entrypoint and the entrypoint + 0xC (0xC is the size of the overwritten code at the entrypoint so it checks that to be sure there won't any problem on overwriting the entrypoint).\u003c/p\u003e\r\n\r\n\u003cp\u003eThen, it searches for a snippet of code in the process \"\u003cem\u003eNtoskrnl.exe\u003c/em\u003e\" or the process \"\u003cem\u003eNtkrnlpa.exe\u003c/em\u003e\". And this code snippet is:\u003c/p\u003e\r\n\r\n\u003cp\u003eFor Windows 2000 or lower:\u003c/p\u003e\r\n\r\n\u003cpre lang=\"asm\"\u003e\r\nmov eax,77\r\nlea edx,dword ptr [esp+4]\r\nint 2E\r\nretn 14\r\n\u003c/pre\u003e\r\n\r\n\u003cp\u003eOr in Windows XP or later:\u003c/p\u003e\r\n\r\n\u003cpre lang=\"asm\"\u003e\r\npush 104 \r\ncall loc_1\r\n???\r\nloc_1:\r\n\tmov eax,0\r\n\tlea edx,dword ptr [esp+4]\r\n\tpushfd\r\n\tpush 8\r\n\tcall ZwAllocateVirtualMemory\r\n\tretn 14\r\n\u003c/pre\u003e\r\n\r\n\u003cp\u003eSo, - as you can see - these snippets of code calls to ZwAllocateVirtualMemory. So the driver calls to one of them to call to ZwAllocateVirtualMemory given the parameters that change the memory permissions of the process entrypoint to entrypoint+0x0C from READ_ONLY to COPY_ON_WRITE (it seems a way to disguise the call to ZwAllocateVirtualMemory with these parameters to avoid the antiviruses).\u003c/p\u003e\r\n\r\n\u003cp\u003eAt the end, it creates a buffer with size equal to the size of stuxnet file plus 0x28 bytes and then copy stuxnet file into this buffer (after 0x28 bytes) and writes some important data to the user-mode code (stage 3) in this 0x28 bytes with the following structure:\u003c/p\u003e\r\n\r\n\r\n\t\u003ctable border=\"1\" cellpadding=\"1\" cellspacing=\"1\"\u003e\u003ctbody\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e\u003cstrong\u003eKernel-Mode to User-Mode Parameters \u003c/strong\u003e\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eReserved (8 bytes)\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003ePointer to stuxnet file (buffer +28) (8 bytes)\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eSize of the stuxnet file (8 bytes)\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003ethe Exported function (8 bytes)\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e2nd bit in the flags in the data (about using a PELoader or LoadLibraryW) (8 bytes)\u003c/td\u003e\t\t\u003c/tr\u003e\t\u003c/tbody\u003e\u003c/table\u003e\r\n\r\n\u003cp\u003eThen, it creates a new element in the generic table with the following data (that will be exported to the stage 2):\u003c/p\u003e\r\n\r\n\r\n\t\u003ctable border=\"1\" cellpadding=\"1\" cellspacing=\"1\"\u003e\u003ctbody\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e\u003cstrong\u003eThe Generic Table Element\u003c/strong\u003e\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eProcessId\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eInjectedMemory at \"MZ\" + 0x2B8\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eInjectedMemory at \"MZ\" + 0x560 (the Entrypoint of the injected buffer)\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003eAddress of Entrypoint\u003c/td\u003e\t\t\u003c/tr\u003e\t\u003c/tbody\u003e\u003c/table\u003e\r\n\r\n\u003cp\u003eAt last, it writes the place of this buffer (including stuxnet file) into a specific place in the copied PE module (the junk of data that copied to the process's memory previously).\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003ca name=\"ch4.7.2.4\"\u003e\u003c/a\u003e\u003c/p\u003e\r\n\r\n\u003ch3\u003e\u003cem\u003e4.7.2.4. Stage Two : Creating kernel32 Import and Overwriting the Entrypoint\u003c/em\u003e\u003c/h3\u003e\r\n\r\n\u003cp\u003eAs we said in the previous stage, the notify routine begins by checking the loaded module with \"kernel32.dll\". If not equal, it jumps to the stage 1. But if equal kernel32.dll, it jumps to the stage 2.\u003c/p\u003e\r\n\r\n\u003cp\u003eBecause of it's the stage 2. It begins by checking that the stage 1 was passed and gets the results of this stage. It searches in the generic table for an element begins with the processId (the prcoessId that's the kernel32 module was loaded in) to get the generic table element with the structure that's in table 3-3-2.\u003c/p\u003e\r\n\r\n\u003cp\u003eThen, it creates an import table for the user-mode and writes them in the place that's in the 2nd element in the generic table element (InjectedMemory at \"MZ\" + 0x2B8). It gets 10 functions ?VirtualAlloc, VirtualFree, GetProcAddress, GetModuleHandle, LoadLibraryA, LoadLibraryW, lstrcmp, lstrcmpi, GetVersionEx, DeviceIoControl). It gets these functions using checksums written inside the driver.\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cimg border=\"0\" height=\"376\" hspace=\"0\" src=\"StuxnetMalware/21.jpg\" width=\"403\"\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003eThen it saves the first 0xC bytes (12 bytes) after the import table by some bytes and then it modifies the entrypoint with the following:\u003c/p\u003e\r\n\r\n\u003cpre lang=\"asm\"\u003e\r\nmov     eax, 0\r\ncall    eax\r\n\u003c/pre\u003e\r\n\r\n\u003cp\u003eAnd then it modifies the immediate of \"mov eax,0\" with 3rd element of the generic table buffer (InjectedMemory at \"MZ\" + 0x560) and that's the entrypoint of the injected code. The InjectedMemory at \"MZ\" + 0x2B8 becomes like that:\u003c/p\u003e\r\n\r\n\r\n\t\u003ctable border=\"1\" cellpadding=\"1\" cellspacing=\"1\"\u003e\u003ctbody\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e\u003cstrong\u003eInjectedMemory at \"MZ\" + 0x2B8\u003c/strong\u003e\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e00: Imagebase\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e08: VirtualAlloc\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e10: VirtualFree\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e18: GetProcAddress\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e20: GetModuleHandle\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e28: LoadLibraryA\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e30: LoadLibraryW\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e38: lstrcmp\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e40: lstrcmpi\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e48: GetVersionEx\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e50: DeviceIoControl\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e58: Ptr to the beginning of the memory (before 101C from MZ)\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e60: Ptr to the InjectedMemory at MZ\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e68: 8A0 Size\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e70: Unknown\u003c/td\u003e\t\t\u003c/tr\u003e\t\t\u003ctr\u003e\t\t\t\u003ctd\u003e78: The EntryPoint of the process\u003c/td\u003e\t\t\u003c/tr\u003e\t\u003c/tbody\u003e\u003c/table\u003e\r\n\r\n\u003cp\u003eAt the end, it exits the notify routine to begin the stage 3 of injecting stuxnet file in a process in the user-mode.\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003ca name=\"ch4.7.2.5\"\u003e\u003c/a\u003e\u003c/p\u003e\r\n\r\n\u003ch3\u003e\u003cem\u003e4.7.2.5. Stage Three : Loading and Executing Stuxnet in The User-Mode \u003c/em\u003e\u003c/h3\u003e\r\n\r\n\u003cp\u003eI begin reversing this part by injecting these data (including the import table) into an application (I choose windbg as the infected process with stuxnet) and begin reversing this part using Ollydbg.\u003c/p\u003e\r\n\r\n\u003cp\u003eThis crafted code begins by creating a new MZ header (or writes the missing data into a modified PE module) by writing the missed bytes like \"MZ\" or \"PE\" and so on \"¦ in the injected memory at the 0x101C bytes to become the 2nd MZ Header in the injected memory.\u003c/p\u003e\r\n\r\n\u003cp\u003eAnd then, it gets the address of some functions and creates an array with these functions like in the figure:\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cimg border=\"0\" height=\"216\" hspace=\"0\" src=\"StuxnetMalware/22.jpg\" width=\"423\"\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003eThe 0xF90 is the size of the 2nd MZ Header in the injected code. Then, the crafted code loads both of these injected modules (with these PE headers) into new allocated memories inside the virtual memory of the infected process using a built-in PE Loader.\u003c/p\u003e\r\n\r\n\u003cp\u003eThis PE loader has the ability to fix the relocables and loading the headers and the sections in the correct place (but it's a simple PE loader at last)\u003c/p\u003e\r\n\r\n\u003cp\u003eAfter that it calls to the entrypoint of the 1st Module. This module begins by saving SHE and then loads Stuxnet File by using LoadLibraryW or its PEloader by checking the 2nd bit in the flags in the data at the beginning of stuxnet buffer (in table 3-3-1).\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cimg border=\"0\" height=\"345\" hspace=\"0\" src=\"StuxnetMalware/23.jpg\" width=\"640\"\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003eAfter Loading Stuxnet, it calls the chosen exported function in the stuxnet module (which also written in the first 28 bytes in the stuxnet buffer which described in Table 3-3-1).\u003c/p\u003e\r\n\r\n\u003cp\u003eAt the end, it rewrites the modified entrypoint with the original code which already saved in memory (check the Table 3-4-1).\u003c/p\u003e\r\n\r\n\u003cp\u003eAt last, it calls to DeviceIoControl which sends an Io request packet to mrxcls driver to reset again the permissions of the entrypoint to the entrypoint+0xC to its original state (Read-Only) and then calls to the entrypoint to make the process to run normally.\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003ca name=\"ch5\"\u003e\u003c/a\u003e\u003c/p\u003e\r\n\r\n\u003ch2\u003e5. Conclusion\u003c/h2\u003e\r\n\r\n\u003cp\u003eStuxnet takes the attention of media because of its complexity, its political goals and the criminals behind it.\u003c/p\u003e\r\n\r\n\u003cp\u003eStuxnet is the most sophisticated worm ever seen in public until now. It contain 4 zero-day vulnerabilities and one used before, a vulnerability in WinCC OS and not only that but also it has three rootkits and the most interesting feature in it that it infects the PLC\u003c/p\u003e\r\n\r\n\u003cp\u003eThis worm changes the meaning of malware and creates a new era for malware researchers.\u003c/p\u003e\r\n\r\n\u003cp\u003eI hope you enjoyed from this long article. I'm waiting for your feedback.\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003ca name=\"ch6\"\u003e\u003c/a\u003e\u003c/p\u003e\r\n\r\n\u003ch2\u003e6. References:\u003c/h2\u003e\r\n\r\n\u003cul\u003e\r\n\t\u003cli\u003e1.\"\u003cem\u003eW32.Stuxne Dossier\u003c/em\u003e\" by Symantec\u003c/li\u003e\t\u003cli\u003e2.\"\u003cem\u003eStuxnet Under the Microscope\u003c/em\u003e\" by ESET\u003c/li\u003e\t\u003cli\u003e3.\"\u003cem\u003eThe MRXCLS.SYS Malware Loader\u003c/em\u003e\" at \u003ca href=\"http://www.geoffchappell.com/viewer.htm?doc=notes/security/stuxnet/mrxcls.htm\"\u003ehttp://www.geoffchappell.com/viewer.htm?doc=notes/security/stuxnet/mrxcls.htm\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e"])</script><script>self.__next_f.push([1,"9:[\"$\",\"div\",null,{\"className\":\"custom-container flex px-2 gap-8 overflow-hidden\",\"children\":[[\"$\",\"div\",null,{\"className\":\"w-[948px] max-w-full\",\"children\":[[\"$\",\"div\",null,{\"className\":\"flex gap-2 mb-2 flex-wrap\",\"children\":[[\"$\",\"a\",\"Advanced\",{\"rel\":\"tag\",\"href\":\"/Tags/Advanced\",\"className\":\"px-2 border border-border-yellow rounded-l-full text-gray-light visited:text-gray-light hover:underline hover:bg-yellow-light\",\"children\":\"Advanced\"}],[\"$\",\"a\",\"Windows\",{\"rel\":\"tag\",\"href\":\"/Tags/Windows\",\"className\":\"px-2 border border-border-yellow rounded-l-full text-gray-light visited:text-gray-light hover:underline hover:bg-yellow-light\",\"children\":\"Windows\"}]]}],[\"$\",\"h1\",null,{\"className\":\"text-4xl text-text-gray\",\"children\":\"Stuxnet Malware Analysis Paper\"}],[\"$\",\"div\",null,{\"className\":\"max-w-[600px]\",\"children\":[[\"$\",\"div\",null,{\"className\":\"flex pt-4 justify-between\",\"children\":[[\"$\",\"div\",null,{\"className\":\"text-base hover:underline font-bold\",\"children\":[\"$\",\"$L3\",null,{\"href\":\"/script/Membership/View.aspx?mid=5879897\",\"className\":\"text-gray-lightest\",\"children\":\"AmrThabet\"}]}],[\"$\",\"div\",null,{\"className\":\"flex items-center gap-2\",\"children\":[[\"$\",\"div\",null,{\"className\":\"flex\",\"children\":[[\"$\",\"$L4\",\"0\",{\"src\":\"/icons/starIcon.png\",\"alt\":\"starIcon\",\"width\":24,\"height\":24}],[\"$\",\"$L4\",\"1\",{\"src\":\"/icons/starIcon.png\",\"alt\":\"starIcon\",\"width\":24,\"height\":24}],[\"$\",\"$L4\",\"2\",{\"src\":\"/icons/starIcon.png\",\"alt\":\"starIcon\",\"width\":24,\"height\":24}],[\"$\",\"$L4\",\"3\",{\"src\":\"/icons/starIcon.png\",\"alt\":\"starIcon\",\"width\":24,\"height\":24}],[\"$\",\"div\",\"4\",{\"className\":\"relative\",\"children\":[[\"$\",\"$L4\",null,{\"src\":\"/icons/emptyStarIcon.png\",\"alt\":\"emptyStarIcon\",\"width\":24,\"height\":24}],[\"$\",\"div\",null,{\"className\":\"absolute left-0 top-0 overflow-hidden\",\"style\":{\"maxWidth\":\"94.89793999999998%\"},\"children\":[\"$\",\"$L4\",null,{\"src\":\"/icons/starIcon.png\",\"alt\":\"starIcon\",\"width\":24,\"height\":24}]}]]}]]}],[\"$\",\"p\",null,{\"className\":\"text-sm\",\"children\":[\"4.95\",\"/5 (\",50,\" vote\",\"s\",\")\"]}]]}]]}],[\"$\",\"div\",null,{\"className\":\"flex pt-2 gap-4\",\"children\":[[\"$\",\"p\",null,{\"className\":\"text-gray-lightest text-[13px]\",\"children\":\"Sep 6, 2011\"}],[\"$\",\"$L3\",null,{\"href\":\"http://www.codeproject.com/info/cpol10.aspx\",\"className\":\"text-[13px] flex\",\"children\":\"CPOL\"}],[\"$\",\"p\",null,{\"className\":\"text-gray-lightest text-[13px]\",\"children\":[29,\" min read\"]}],[\"$\",\"div\",null,{\"className\":\"flex gap-1 items-center\",\"children\":[[\"$\",\"$L4\",null,{\"src\":\"/icons/viewsIcon.png\",\"alt\":\"viewsIcon\",\"width\":16,\"height\":16,\"className\":\"w-4 h-4\"}],[\"$\",\"p\",null,{\"className\":\"text-gray-lightest text-[13px] pl-0.5\",\"children\":247376}]]}],[\"$\",\"div\",null,{\"className\":\"flex gap-1 items-center\",\"children\":[[\"$\",\"$L4\",null,{\"src\":\"/icons/downloadIcon.png\",\"alt\":\"downloadIcon\",\"width\":16,\"height\":16,\"className\":\"w-4 h-4\"}],[\"$\",\"p\",null,{\"className\":\"text-gray-lightest text-[13px] pl-0.5\",\"children\":5844}]]}]]}]]}],[\"$\",\"p\",null,{\"className\":\"pt-6 pb-4 text-gray-lightest\",\"children\":\"This article will focus on Stuxnet’s windows infection methods and spreading methods. The tricks were used by stuxnet and the evidences behind the criminals of stuxnet.\"}],[\"$\",\"$L17\",null,{\"css\":\"$18\",\"children\":[\"$\",\"$L19\",null,{\"children\":[\"$\",\"div\",null,{\"className\":\"article\",\"dangerouslySetInnerHTML\":{\"__html\":\"$1a\"}}]}]}]]}],[\"$\",\"div\",null,{\"children\":[\"$\",\"$L5\",null,{\"adUnit\":\"/67541884/CPLargeSky160600\",\"adSlotId\":\"div-gpt-ad-1738591766860-0\",\"adSize\":[300,600],\"className\":\"mt-40 sticky top-40\"}]}]]}]\n"])</script></body></html>