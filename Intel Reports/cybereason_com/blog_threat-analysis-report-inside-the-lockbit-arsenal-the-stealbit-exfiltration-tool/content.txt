<!doctype html><!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en" > <![endif]--><!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en" >        <![endif]--><!--[if IE 8]>    <html class="no-js lt-ie9" lang="en" >               <![endif]--><!--[if gt IE 8]><!--><html class="no-js" lang="en"><!--<![endif]--><head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="author" content="Cybereason Global SOC Team">
    <meta name="description" content="This report provides analysis on the evolution of configuration and implementation aspects of the StealBit malware developed by the LockBit ransomware group to exfiltrate sensitive data from targets for double extortion purposes…">
    <meta name="generator" content="HubSpot">
    <title>THREAT ANALYSIS REPORT: Inside the LockBit Arsenal - The StealBit Exfiltration Tool</title>
    <link rel="shortcut icon" href="https://www.cybereason.com/hubfs/cr-favicon-1.png">
    
<meta name="viewport" content="width=device-width, initial-scale=1">

    
    <meta property="og:description" content="This report provides analysis on the evolution of configuration and implementation aspects of the StealBit malware developed by the LockBit ransomware group to exfiltrate sensitive data from targets for double extortion purposes…">
    <meta property="og:title" content="THREAT ANALYSIS REPORT: Inside the LockBit Arsenal - The StealBit Exfiltration Tool">
    <meta name="twitter:description" content="This report provides analysis on the evolution of configuration and implementation aspects of the StealBit malware developed by the LockBit ransomware group to exfiltrate sensitive data from targets for double extortion purposes…">
    <meta name="twitter:title" content="THREAT ANALYSIS REPORT: Inside the LockBit Arsenal - The StealBit Exfiltration Tool">

    

    
    <style>
a.cta_button{-moz-box-sizing:content-box !important;-webkit-box-sizing:content-box !important;box-sizing:content-box !important;vertical-align:middle}.hs-breadcrumb-menu{list-style-type:none;margin:0px 0px 0px 0px;padding:0px 0px 0px 0px}.hs-breadcrumb-menu-item{float:left;padding:10px 0px 10px 10px}.hs-breadcrumb-menu-divider:before{content:'›';padding-left:10px}.hs-featured-image-link{border:0}.hs-featured-image{float:right;margin:0 0 20px 20px;max-width:50%}@media (max-width: 568px){.hs-featured-image{float:none;margin:0;width:100%;max-width:100%}}.hs-screen-reader-text{clip:rect(1px, 1px, 1px, 1px);height:1px;overflow:hidden;position:absolute !important;width:1px}
</style>

<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/41681847227/1741488491170/module_CR_-_Malicious_Life_Network_--_Tier_One_Header.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/41682410610/1741488492472/module_CR_-_Malicious_Life_Network_--_Main_Hero.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/43300360745/1741488505140/module_CR_-_Malicious_Life_Network_--_Related_Posts.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/86933076631/1741488758324/module_CR_-_Sticky_CTA_Bar.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/34473990280/1740999337265/module_CR_-_Footer_Full__en_US.min.css">
    

    
<!--  Added by GoogleTagManager integration -->
<script>
var _hsp = window._hsp = window._hsp || [];
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}

var useGoogleConsentModeV2 = true;
var waitForUpdateMillis = 1000;



var hsLoadGtm = function loadGtm() {
    if(window._hsGtmLoadOnce) {
      return;
    }

    if (useGoogleConsentModeV2) {

      gtag('set','developer_id.dZTQ1Zm',true);

      gtag('consent', 'default', {
      'ad_storage': 'denied',
      'analytics_storage': 'denied',
      'ad_user_data': 'denied',
      'ad_personalization': 'denied',
      'wait_for_update': waitForUpdateMillis
      });

      _hsp.push(['useGoogleConsentModeV2'])
    }

    (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
    j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
    'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-TJVVB7C');

    window._hsGtmLoadOnce = true;
};

_hsp.push(['addPrivacyConsentListener', function(consent){
  if(consent.allowed || (consent.categories && consent.categories.analytics)){
    hsLoadGtm();
  }
}]);

</script>

<!-- /Added by GoogleTagManager integration -->


<script src="https://use.typekit.net/vyv2ljd.js"></script>
<script>try{Typekit.load({ async: false });}catch(e){}</script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<link rel="preload" href="/hubfs/__dam/fonts/ionicons.eot" as="font" type="font/otf" crossorigin>
<link rel="preload" href="/hubfs/dam/fonts/criteria/Criteria-CF-Regular.woff2" as="font" type="font/woff2" crossorigin>
<link rel="preload" href="/hubfs/dam/fonts/criteria/Criteria-CF-Medium.woff2" as="font" type="font/woff2" crossorigin>
<link rel="preload" href="/hubfs/dam/fonts/peristyle/Peristyle-Black.woff2" as="font" type="font/woff2" crossorigin>
<link rel="amphtml" href="https://www.cybereason.com/blog/research/threat-analysis-report-inside-the-lockbit-arsenal-the-stealbit-exfiltration-tool?hs_amp=true">

<meta property="og:image" content="https://www.cybereason.com/hubfs/Threat%20Alert%20template%20%285%29.png">
<meta property="og:image:width" content="1200">
<meta property="og:image:height" content="627">

<meta name="twitter:image" content="https://www.cybereason.com/hubfs/Threat%20Alert%20template%20%285%29.png">


<meta property="og:url" content="https://www.cybereason.com/blog/research/threat-analysis-report-inside-the-lockbit-arsenal-the-stealbit-exfiltration-tool">
<meta name="twitter:card" content="summary_large_image">

<link rel="canonical" href="https://www.cybereason.com/blog/research/threat-analysis-report-inside-the-lockbit-arsenal-the-stealbit-exfiltration-tool">

<meta property="og:type" content="article">
<link rel="alternate" type="application/rss+xml" href="https://www.cybereason.com/blog/rss.xml">
<meta name="twitter:domain" content="www.cybereason.com">
<script src="//platform.linkedin.com/in.js" type="text/javascript">
    lang: en_US
</script>

<meta http-equiv="content-language" content="en">
<link rel="stylesheet" href="//7052064.fs1.hubspotusercontent-na1.net/hubfs/7052064/hub_generated/template_assets/DEFAULT_ASSET/1745522724349/template_layout.min.css">


<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/template_assets/1/34470223313/1741528336747/template_cr-master__cta.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/template_assets/1/34470477360/1743626992502/template_cr-master__main.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/template_assets/1/35275979682/1741528339661/template_ionicons.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/template_assets/1/42760289143/1741528346957/template_cr-mln__build.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/template_assets/1/34470224480/1741528337131/template_cr-framework__bulma-columns.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/template_assets/1/35291999472/1741528340159/template_cr-framework__bulma.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/template_assets/1/42363645447/1741528345735/template_hamburger-animation.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/template_assets/1/42507091846/1741528346726/template_animate.min.css">


    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&amp;display=swap" rel="stylesheet">
<script src="/hubfs/dam/plugins/marker-animation.js"></script>
<script>
$(document).ready(function() {
  $('.highlight').markerAnimation({
    "color":'var(--cr-yellow)',
    "font_weight":'normal',
    "background-size": '200% 1.2em'
  });
});
</script>

    <style>
.cr-mln__blog-post .container-is-blog.cr-mln__blog-post--body .column:nth-of-type(2) img {
    background: #FFFFFF;
    border: 1px solid #CCCCCC;
    border-radius: 5px 5px 5px 5px;
    padding: 10px;
} 
</style>

</head>
<body class="   hs-content-id-62011966600 hs-blog-post hs-blog-id-5272851739" style="">
<!--  Added by GoogleTagManager integration -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-TJVVB7C" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>

<!-- /Added by GoogleTagManager integration -->

    <div class="header-container-wrapper">
    <div class="header-container container-fluid">

<div class="row-fluid-wrapper row-depth-1 row-number-1 ">
<div class="row-fluid ">
<div class="span12 widget-span widget-type-custom_widget " style="" data-widget-type="custom_widget" data-x="0" data-w="12">
<div id="hs_cos_wrapper_module_1615433790649568" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module"><section id="cr-malicious-life-network__tier-one-header" class="position-flex">
  <div class="#">
    <div id="logo"><a href="https://www.cybereason.com"><img src="https://www.cybereason.com/hubfs/dam/images/images-web/logos/cr-brand/cr-logo-inline--primary-black.png"></a></div>
    <div id="back-to">
      <a href="https://www.cybereason.com">Back to <span>Cybereason.com</span></a>
    </div>
    <!-- Hamburger Menu -->
    <button class="hamburger hamburger--collapse" type="button">
      <span class="hamburger-box">
        <span class="hamburger-inner"></span>
      </span>
    </button>
    <div class="cr-mln__hamburger-menu--overlay">
      <ul>
        <li><a href="https://www.cybereason.com/blog/all"><span class="underline">All Posts</span></a></li>
        <li><a href="/blog/category/research"><span class="underline">Research</span></a></li>
        <li><a href="/blog/category/podcasts"><span class="underline">Podcasts</span></a></li>
        <li><a href="/blog/category/webinars"><span class="underline">Webinars</span></a></li>
        <li><a href="/blog/category/resources"><span class="underline">Resources</span></a></li>
        <li><a href="/blog/category/videos"><span class="underline">Videos</span></a></li>
        <li><a href="/blog/category/news"><span class="underline">News</span></a></li>
      </ul>
      <div class="subscribe">
        <a href="#blog-subscribe">Subscribe</a>
      </div>
    </div>
    <!-- -->
  </div>
</section></div>

</div><!--end widget-span -->
</div><!--end row-->
</div><!--end row-wrapper -->

<div class="row-fluid-wrapper row-depth-1 row-number-2 ">
<div class="row-fluid ">
<div class="span12 widget-span widget-type-custom_widget mln-homepage" style="" data-widget-type="custom_widget" data-x="0" data-w="12">
<div id="hs_cos_wrapper_module_1615433785464566" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module"><section class="cr-malicious-life-network__hero-main base">
  <div class="container-is-blog columns hero-content page-center">
    <div class="column is-5-fullhd is-5-desktop is-12-touch">
      <a href="/blog"><img class="cr-mln-logo" src="https://www.cybereason.com/hubfs/dam/images/images-web/logos/cr-brand/cr-malicious-life-logo-v2.png"></a>
    </div>
    <div class="column is-7-fullhd is-7-desktop is-hidden-mobile is-hidden-tablet-only">
      <div class="cr-mln__search-subscribe">
        <div class="cr-mln__search">
          <a href="#cr-search-modal" class="search-btn"><img src="https://www.cybereason.com/hubfs/dam/images/images-web/blog-images/template-images/cr-blog-icon--search-dark-gray.png" alt="Search"></a>
        </div>
        <div class="cr-mln__subscribe">
          <a class="btn-subscribe" href="#blog-subscribe">Subscribe</a>
        </div>
      </div>
      <div class="cr-mln__category-nav">
        <ul>
          <li><a href="/blog/category/all"><span class="underline">All</span></a></li>
          <li><a href="/blog/category/research"><span class="underline">Research</span></a></li>
          <li><a href="/blog/category/podcasts"><span class="underline">Podcasts</span></a></li>
          <li><a href="/blog/category/webinars"><span class="underline">Webinars</span></a></li>
          <li><a href="/blog/category/resources"><span class="underline">Resources</span></a></li>
          <li><a href="/blog/category/videos"><span class="underline">Videos</span></a></li>
          <li><a href="/blog/category/news"><span class="underline">News</span></a></li>
        </ul>
      </div>
    </div>
  </div>
      <!-- MOBILE Search and Subscribe -->
      <div class="container-is-blog columns is-gapless is-hidden-desktop cr-mln__search-subscribe--mobile">
        <div class="column">
          <a class="search-btn">Search</a>
        </div>
        <div class="column">
          <a class="#" href="#blog-subscribe">Subscribe</a>
        </div>
      </div>

      <!-- END MOBILE Search and Subscribe -->
  
  <!-- SEARCH Modal Wrap -->

  <div id="cr-search-modal">
        <!--THIS IS IMPORTANT! to close the modal, the class name has to match the name given on the ID -->
        <div id="btn-close-modal" class="close-cr-search-modal"> 
            X
        </div>

        <div class="modal-content">
            <div class="container columns">
              <div class="column">
                <div class="cr-search-modal__search-bar">
                  <h3>Search</h3>
                  <form action="/hs-search-results">
                    <input type="search" class="hs-search-field__input" name="term" autocomplete="on" placeholder="Search...">
                    <input type="hidden" name="type" value="BLOG_POST">
                    <input type="hidden" name="type" value="LISTING_PAGE">
                    <button type="submit" class="arrow"></button>
                  </form>
                  
                </div>

              </div>
          </div>
        </div>
    </div>
  <!-- END Search Modal Wrap -->

</section></div>

</div><!--end widget-span -->
</div><!--end row-->
</div><!--end row-wrapper -->

    </div><!--end header -->
</div><!--end header wrapper -->

<div class="body-container-wrapper">
    <div class="body-container container-fluid">

<div class="row-fluid-wrapper row-depth-1 row-number-1 ">
<div class="row-fluid ">
<div class="span12 widget-span widget-type-blog_content " style="" data-widget-type="blog_content" data-x="0" data-w="12">







<div class="cr-mln__blog-post">
  <div class="container-is-blog columns is-multiline page-center">

    <div class="column is-8-fullhd is-8-desktop is-offset-2-fullhd is-offset-2-desktop is-10-tablet is-offset-1-tablet">
      <div class="featured-image"><img src="https://www.cybereason.com/hubfs/Threat%20Alert%20template%20%285%29.png" alt=""></div>
      <h1><span id="hs_cos_wrapper_name" class="hs_cos_wrapper hs_cos_wrapper_meta_field hs_cos_wrapper_type_text" style="" data-hs-cos-general-type="meta_field" data-hs-cos-type="text">THREAT ANALYSIS REPORT: Inside the LockBit Arsenal - The StealBit Exfiltration Tool</span></h1>
      <div class="cr-mln__post-author-share">
      <div id="hubspot-author_data" class="hubspot-editable cr-mln__post-meta" data-hubspot-form-id="author_data" data-hubspot-name="Blog Author">
        
          <span class="descriptor">Written By</span>
          <p><span class="author">Cybereason Global SOC Team</span></p>
         
      </div>
    </div>
     
    </div>
    
    <!-- Sticky Author and Social Box -->
    
    <!-- END Sticky Author and Social Box -->
      <div class="container-is-blog columns is-multiline page-center cr-mln__blog-post--body">
        
        <div class="column is-7-fullhd is-7-desktop is-10-tablet is-10-mobile is-offset-1-fullhd is-offset-1-desktop is-offset-1-tablet is-offset-1-mobile">
          <span id="hs_cos_wrapper_post_body" class="hs_cos_wrapper hs_cos_wrapper_meta_field hs_cos_wrapper_type_rich_text" style="" data-hs-cos-general-type="meta_field" data-hs-cos-type="rich_text"><p>The Cybereason Global Security Operations Center (GSOC) issues Cybereason Threat Analysis reports to inform on impacting threats. The Threat Analysis reports investigate these threats and provide practical recommendations for protecting against them.&nbsp;</p>
<!--more-->
<p>In this Threat Analysis report, the GSOC investigates the StealBit malware, a data exfiltration tool that the LockBit threat group develops and maintains. The LockBit group provides StealBit to affiliates as part of the group’s ransomware affiliate program. Ransomware operators use StealBit to exfiltrate data from compromised systems for double extortion purposes.&nbsp;</p>
<p>This report provides an in-depth insight into the functionalities and architecture of StealBit as well as the evolution of relevant configuration and implementation aspects of StealBit across different samples. The detailed insight into how StealBit works and evolves is important for the timely detection of ransomware attack operations that involve StealBit at the point when malicious actors exfiltrate data before deploying ransomware.</p>
<h2 style="font-size: 30px;"><strong><span style="color: #666666;">StealBit Malware Key Points</span></strong></h2>
<p><strong>Feature updates and widened target base</strong>: A comparative analysis between relatively older and newer StealBit samples shows that StealBit has been undergoing improvement with new features, especially evasion and hiding features. In addition, although older samples do not execute on systems located in the former Soviet countries Russia, Ukraine, Belarus, Tajikistan, Armenia, Azerbaijan, Georgia, Kazakhstan, Kyrgyzstan, Turkmenistan, Uzbekistan, and Moldova, newer StealBit samples do not implement this restriction and execute on any system.&nbsp;</p>
<p><strong>Developed for maximum data exfiltration efficiency</strong>: StealBit implements the Microsoft input/output (I/O) completion port threading model to maximize the overall efficiency of data exfiltration activities. For example, StealBit parallelizes the exfiltration of the content of multiple files to shorten the overall exfiltration timespan. This is important to ransomware operators, since fast data exfiltration reduces the chances of being discovered in the process.</p>
<p><strong>Developed for maximum usage convenience and scalability</strong>: StealBit implements interprocess communication (IPC) between multiple StealBit processes that run on a single compromised system to designate many files for exfiltration in a scalable manner. In addition, StealBit supports dragging and dropping of files or folders for exfiltration to StealBit windows in scenarios where the StealBit operators have access to the graphical user interface of compromised systems. This feature enables StealBit operators to designate many files for exfiltration in a convenient and scalable manner.</p>
<p><strong>Somewhat incomplete implementation</strong>: The implementation of some StealBit features that we analyzed is not complete. This includes features that the LockBit threat group advertises as advantageous to alternative exfiltration tools on the underground market, such as compression of exfiltrated data and a hidden mode of operation. For example, a recent StealBit sample that we analyzed does not compress exfiltrated data and does not properly hide the windows that StealBit creates, making the malware visible in the graphical user interface of the compromised system.</p>
<p><strong>StealBit Malware Detected and prevented</strong>: <a href="/platform" rel="noopener" target="_blank"><span>The Cybereason XDR Platform</span></a> effectively detects and prevents StealBit when the malware exfiltrates data, and also detects and prevents the execution of the related <a href="/blog/cybereason-vs.-lockbit2.0-ransomware" rel="noopener" target="_blank"><span>LockBit ransomware</span></a>, which LockBit affiliates may execute after they use StealBit to exfiltrate data for double extortion.&nbsp;</p>
<p><strong>Cybereason Managed Detection and Response (MDR)</strong>: The Cybereason GSOC has zero tolerance towards attacks that involve ransomware and data exfiltration tools, such as StealBit, and categorizes such attacks as critical, high-severity incidents. The <a href="/services/managed-detection-response-mdr" rel="noopener" target="_blank"><span>Cybereason GSOC MDR Team</span></a> issues a comprehensive report to customers when such an incident occurs. The report provides an in-depth overview of the incident, which helps to scope the extent of compromise and the impact on the customer’s environment. In addition, the report provides attribution information when possible as well as recommendations for mitigating and isolating the threat.</p>
<h2 style="font-size: 30px;"><strong><span style="color: #666666;">StealBit Malware Introduction</span></strong></h2>
<p>The traditional ransomware extortion tactic, where malicious actors demand payment for decrypting data that the actors have encrypted using ransomware, does not always work as intended. Victims may not pay ransom for several reasons, such as lack of financial resources, concerns that ransomware operators may not decrypt the data, or the availability of backups of the encrypted data.&nbsp;</p>
<p>Therefore, many modern ransomware operators use a double extortion tactic: ransomware operators exfiltrate data from compromised systems before encrypting the data, and if the victim refuses to pay ransom for data decryption, the malicious actors threaten to leak the exfiltrated data online or sell the data for profit.&nbsp;</p>
<p>The proliferation of double extortion on the ransomware scene marks a major turning point in the evolution of the ransomware threat, with ransomware actors massively joining in on the trend. For example, in June 2021, <a href="https://www.trendmicro.com/vinfo/us/security/news/cybercrime-and-digital-threats/ransomware-double-extortion-and-beyond-revil-clop-and-conti" rel="noopener" target="_blank"><span>TrendMicro reported</span></a> that it has observed 35 ransomware families that use double extortion — with a growing tendency.&nbsp;</p>
<p>Since the double extortion tactic relies on exfiltrated data, data exfiltration tools are crucial to ransomware operators that use this tactic. Ransomware operators use publicly available tools for data exfiltration, such as <a href="https://rclone.org/" rel="noopener" target="_blank"><span>Rclone</span></a>, as well as custom data exfiltration tools that are intended specifically for use in ransomware operations. Some custom data exfiltration tools are <a href="https://www.bleepingcomputer.com/news/security/new-ryuk-info-stealer-targets-government-and-military-secrets/" rel="noopener" target="_blank"><span>Ryuk Stealer</span></a>, the recently discovered <a href="https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/blackmatter-data-exfiltration" rel="noopener" target="_blank"><span>Exmatter</span></a>, and StealBit.&nbsp;</p>
<p>The StealBit malware is a data (file content) exfiltration tool that the LockBit threat group develops and maintains. StealBit exfiltrates file content to remote attacker-controlled endpoints for double extortion purposes. In addition to StealBit, the LockBit threat group develops and maintains the <a href="/blog/cybereason-vs.-lockbit2.0-ransomware" rel="noopener" target="_blank"><span>LockBit ransomware</span></a>, which has a <a href="https://www.cybereason.com/blog/rising-threat-from-lockbit-ransomware"><span>strong presence</span></a> on the ransomware threat scene.&nbsp;</p>
<p>As of June 2021, the LockBit group runs a ransomware affiliate program, <a href="https://securityintelligence.com/posts/lockbit-ransomware-attacks-surge-affiliate-recruitment/" rel="noopener" target="_blank"><span>LockBit 2.0</span></a>, which provides access to the LockBit ransomware and the StealBit data exfiltration tool to affiliates. As part of affiliate recruitment efforts, the LockBit group advertises the features of the LockBit ransomware and StealBit by comparing the ransomware and StealBit to alternative solutions. The LockBit group claims that StealBit is superior, especially in terms of data exfiltration speed:</p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/image3-Dec-15-2021-09-46-14-45-PM.png?width=914&amp;name=image3-Dec-15-2021-09-46-14-45-PM.png" alt="image3-Dec-15-2021-09-46-14-45-PM" width="914" loading="lazy" style="width: 914px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/image3-Dec-15-2021-09-46-14-45-PM.png?width=457&amp;name=image3-Dec-15-2021-09-46-14-45-PM.png 457w, https://www.cybereason.com/hs-fs/hubfs/image3-Dec-15-2021-09-46-14-45-PM.png?width=914&amp;name=image3-Dec-15-2021-09-46-14-45-PM.png 914w, https://www.cybereason.com/hs-fs/hubfs/image3-Dec-15-2021-09-46-14-45-PM.png?width=1371&amp;name=image3-Dec-15-2021-09-46-14-45-PM.png 1371w, https://www.cybereason.com/hs-fs/hubfs/image3-Dec-15-2021-09-46-14-45-PM.png?width=1828&amp;name=image3-Dec-15-2021-09-46-14-45-PM.png 1828w, https://www.cybereason.com/hs-fs/hubfs/image3-Dec-15-2021-09-46-14-45-PM.png?width=2285&amp;name=image3-Dec-15-2021-09-46-14-45-PM.png 2285w, https://www.cybereason.com/hs-fs/hubfs/image3-Dec-15-2021-09-46-14-45-PM.png?width=2742&amp;name=image3-Dec-15-2021-09-46-14-45-PM.png 2742w" sizes="(max-width: 914px) 100vw, 914px"></p>
<p style="text-align: center; font-size: 16px;"><em>The LockBit group advertises StealBit (source: </em><a href="https://twitter.com/intel_by_kela/status/1406905385580118017" rel="noopener" target="_blank"><em><span>KELA</span></em></a><em>, Twitter)</em></p>
<p>This report discusses the implementation of StealBit and its internal working principles. In addition, this report provides an overview of the evolution of relevant configuration and implementation aspects of StealBit across different StealBit samples. <a href="https://yoroi.company/research/hunting-the-lockbit-gangs-exfiltration-infrastructures/" rel="noopener" target="_blank"><span>Previous research</span></a> documents some aspects of the implementation of StealBit, with a focus on automating the de-obfuscation of relevant StealBit configuration: the IP addresses of the attacker-controlled endpoints to which StealBit exfiltrates file content.&nbsp;</p>
<p>This report provides an in-depth and comprehensive insight into the functionalities, architecture, and evolution of StealBit. The detailed insight into how StealBit works and evolves is important to build proper detection and protection strategies against the malware. This, in turn, is crucial for the timely detection of ransomware operations that involve StealBit at the point when malicious actors exfiltrate data before deploying ransomware.</p>
<h2 style="font-size: 30px;"><strong><span style="color: #666666;">StealBit Malware Analysis</span></strong></h2>
<p>The <a href="#deep-dive" rel="noopener"><span>Deep Dive Analysis</span> section</a> discusses the implementation of StealBit and its internal working principles. In this section, we focus on a recent StealBit sample with a Secure Hash Algorithm (SHA)-256 hash of <em>6c9a92955402c76ab380aa6927ad96515982a47c05d54f21d67603814d29e4a5</em>. The <a href="#comparative-analysis" rel="noopener"><span>Comparative Analysis</span></a> section compares different StealBit samples to provide an overview of the evolution of relevant configuration and implementation aspects of StealBit across the samples.</p>
<a id="deep-dive" data-hs-anchor="true"></a>
<h3 style="font-size: 24px;"><strong><span style="color: #434343;">StealBit Malware Deep Dive Analysis&nbsp;</span></strong></h3>
<p>StealBit first checks whether the StealBit process runs in the context of a debugger by evaluating the value of the <em>NtGlobalFlag</em> field of the Process Environment Block (PEB). If the value of <em>NtGlobalFlag</em> is 0x70, StealBit executes an empty infinite loop:</p>
<p style="text-align: center;"><img src="https://www.cybereason.com/hs-fs/hubfs/image15-Dec-15-2021-09-47-36-19-PM.png?width=639&amp;name=image15-Dec-15-2021-09-47-36-19-PM.png" alt="image15-Dec-15-2021-09-47-36-19-PM" width="639" loading="lazy" style="width: 639px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/image15-Dec-15-2021-09-47-36-19-PM.png?width=320&amp;name=image15-Dec-15-2021-09-47-36-19-PM.png 320w, https://www.cybereason.com/hs-fs/hubfs/image15-Dec-15-2021-09-47-36-19-PM.png?width=639&amp;name=image15-Dec-15-2021-09-47-36-19-PM.png 639w, https://www.cybereason.com/hs-fs/hubfs/image15-Dec-15-2021-09-47-36-19-PM.png?width=959&amp;name=image15-Dec-15-2021-09-47-36-19-PM.png 959w, https://www.cybereason.com/hs-fs/hubfs/image15-Dec-15-2021-09-47-36-19-PM.png?width=1278&amp;name=image15-Dec-15-2021-09-47-36-19-PM.png 1278w, https://www.cybereason.com/hs-fs/hubfs/image15-Dec-15-2021-09-47-36-19-PM.png?width=1598&amp;name=image15-Dec-15-2021-09-47-36-19-PM.png 1598w, https://www.cybereason.com/hs-fs/hubfs/image15-Dec-15-2021-09-47-36-19-PM.png?width=1917&amp;name=image15-Dec-15-2021-09-47-36-19-PM.png 1917w" sizes="(max-width: 639px) 100vw, 639px"></p>
<p style="text-align: center; font-size: 16px;"><em>StealBit detects the presence of a debugger</em></p>
<p>StealBit then de-obfuscates the filenames of the dynamic-link libraries (DLLs) a<em>dvapi32</em>, <em>gdi32</em>, <em>gdiplus</em>, <em>shell32</em>, <em>ntdll</em>, <em>ole32,</em> <em>user32</em>, <em>shlwapi</em>, <em>kernel32</em>, and <em>ws2_32</em> and loads the libraries by executing the <a href="https://docs.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-loadlibraryexa" rel="noopener" target="_blank"><em><span>LoadLibraryExA</span></em></a> function. StealBit stores the XOR obfuscated filenames of these DLLs in the malware’s executable file:</p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/image18.jpg?width=477&amp;name=image18.jpg" alt="image18" width="477" loading="lazy" style="width: 477px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/image18.jpg?width=239&amp;name=image18.jpg 239w, https://www.cybereason.com/hs-fs/hubfs/image18.jpg?width=477&amp;name=image18.jpg 477w, https://www.cybereason.com/hs-fs/hubfs/image18.jpg?width=716&amp;name=image18.jpg 716w, https://www.cybereason.com/hs-fs/hubfs/image18.jpg?width=954&amp;name=image18.jpg 954w, https://www.cybereason.com/hs-fs/hubfs/image18.jpg?width=1193&amp;name=image18.jpg 1193w, https://www.cybereason.com/hs-fs/hubfs/image18.jpg?width=1431&amp;name=image18.jpg 1431w" sizes="(max-width: 477px) 100vw, 477px"></p>
<p style="text-align: center; font-size: 16px;"><em>StealBit loads DLLs</em></p>
<p>StealBit then decrypts RC4-encrypted strings that the malware stores in the malware’s executable file. StealBit uses these strings for different purposes throughout the malware’s operation. For example, one string specifies a Windows command that StealBit executes, another string specifies the path to a named pipe file that StealBit creates, and StealBit displays some of the strings to the malware operator. We discuss these aspects of the StealBit operation in greater detail later in this section:</p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/image19-Dec-15-2021-09-49-45-35-PM.png?width=825&amp;name=image19-Dec-15-2021-09-49-45-35-PM.png" alt="image19-Dec-15-2021-09-49-45-35-PM" width="825" loading="lazy" style="width: 825px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/image19-Dec-15-2021-09-49-45-35-PM.png?width=413&amp;name=image19-Dec-15-2021-09-49-45-35-PM.png 413w, https://www.cybereason.com/hs-fs/hubfs/image19-Dec-15-2021-09-49-45-35-PM.png?width=825&amp;name=image19-Dec-15-2021-09-49-45-35-PM.png 825w, https://www.cybereason.com/hs-fs/hubfs/image19-Dec-15-2021-09-49-45-35-PM.png?width=1238&amp;name=image19-Dec-15-2021-09-49-45-35-PM.png 1238w, https://www.cybereason.com/hs-fs/hubfs/image19-Dec-15-2021-09-49-45-35-PM.png?width=1650&amp;name=image19-Dec-15-2021-09-49-45-35-PM.png 1650w, https://www.cybereason.com/hs-fs/hubfs/image19-Dec-15-2021-09-49-45-35-PM.png?width=2063&amp;name=image19-Dec-15-2021-09-49-45-35-PM.png 2063w, https://www.cybereason.com/hs-fs/hubfs/image19-Dec-15-2021-09-49-45-35-PM.png?width=2475&amp;name=image19-Dec-15-2021-09-49-45-35-PM.png 2475w" sizes="(max-width: 825px) 100vw, 825px"></p>
<p style="text-align: center; font-size: 16px;"><em>StealBit decrypts RC4-encrypted strings</em></p>
<p>StealBit then configures the process to not display certain Windows error messages by invoking the <em>NtSetInformationProcess</em> function and parses the command line parameters that the StealBit operator may have specified. The table below lists the command line parameters that StealBit supports. We discuss the exact impact of these command line parameters on the execution of StealBit in greater detail later in this section:</p>
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2;">
<tbody>
<tr>
<td style="background-color: #f1c232; border: 1pt solid #000000;">
<p><strong>Command line parameter</strong></p>
</td>
<td style="background-color: #f1c232; border: 1pt solid #000000;">
<p><strong>Description</strong></p>
</td>
<td style="background-color: #f1c232; border: 1pt solid #000000;">
<p><strong>Required / optional</strong></p>
</td>
<td style="background-color: #f1c232; border: 1pt solid #000000;">
<p><strong>Default value</strong></p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p><em>&lt;path to file or folder&gt;</em></p>
</td>
<td style="border: 1pt solid #000000;">
<p>This parameter specifies the filesystem path to the file or the folder whose content StealBit is to exfiltrate. Setting this parameter configures StealBit to read and exfiltrate the content of the file, or the content of the files placed in the folder.&nbsp;</p>
</td>
<td style="border: 1pt solid #000000;">
<p>Required</p>
</td>
<td style="border: 1pt solid #000000;">
<p>none</p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p><em>-hide/-h yes/y | no/n</em></p>
</td>
<td style="border: 1pt solid #000000;">
<p>This parameter controls the visibility of the graphical user interface of StealBit—that is, this parameter hides (<em>yes/y</em>) or displays (<em>no/n</em>) windows that StealBit creates.&nbsp;</p>
</td>
<td style="border: 1pt solid #000000;">
<p>Optional</p>
</td>
<td style="border: 1pt solid #000000;">
<p><em>no/n</em>: StealBit displays windows</p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p><em>-delete/-d yes/y | no/n</em></p>
</td>
<td style="border: 1pt solid #000000;">
<p>This parameter configures StealBit to self-delete (<em>yes/y</em>)—that is, to delete the executable file that implements StealBit from the filesystem of the compromised system when StealBit is finished executing—or not to self-delete (<em>no/n</em>).</p>
</td>
<td style="border: 1pt solid #000000;">
<p>Optional</p>
</td>
<td style="border: 1pt solid #000000;">
<p><em>no/n</em>: StealBit does not self-delete</p>
</td>
</tr>
<tr>
<td style="border-width: 1px; border-style: solid;">
<p><em>-net/-n &lt;transfer rate&gt;</em></p>
<p><em>-once/-o &lt;transfer rate&gt;</em></p>
</td>
<td style="border-width: 1px; border-style: solid;">
<p>This parameter configures StealBit to exfiltrate file content at the specified rate, where rate is an amount of exfiltrated file content in KBs, MBs, or GBs, over 15 seconds.&nbsp;</p>
</td>
<td style="border-width: 1px; border-style: solid;">
<p>Optional</p>
</td>
<td style="border-width: 1px; border-style: solid;">
<p><em>unlim</em>: there is no file content exfiltration rate</p>
</td>
</tr>
<tr>
<td style="border-width: 1px; border-style: solid;">
<p><em>-skipfiles yes/y | no/n</em></p>
</td>
<td style="border-width: 1px; border-style: solid;">
<p>This parameter configures StealBit to not exfiltrate the content of files with specific filename extensions (<em>no/n</em>).&nbsp;</p>
</td>
<td style="border-width: 1px; border-style: solid;">
<p>Optional</p>
</td>
<td style="border-width: 1px; border-style: solid;">
<p><em>yes/y</em>: StealBit does not consider the filename extensions of files as a criterion for file content exfiltration</p>
</td>
</tr>
<tr>
<td style="border-width: 1px; border-style: solid;">
<p><em>-skipfolders yes/y | no/n</em></p>
</td>
<td style="border-width: 1px; border-style: solid;">
<p>This parameter configures StealBit to not exfiltrate the content of files that are placed in specific folders (<em>no/n</em>).&nbsp;</p>
</td>
<td style="border-width: 1px; border-style: solid;">
<p>Optional</p>
</td>
<td style="border-width: 1px; border-style: solid;">
<p><em>yes/y</em>: StealBit does not consider folders as a criterion for file content exfiltration</p>
</td>
</tr>
<tr>
<td style="border-width: 1px; border-style: solid;">
<p><em>-file/-f &lt;file size&gt;</em></p>
</td>
<td style="border-width: 1px; border-style: solid;">
<p>This parameter configures StealBit to exfiltrate the content of only those files of a size equal to, or less than the specified file size in KBs, MBs, or GBs.&nbsp;</p>
</td>
<td style="border-width: 1px; border-style: solid;">
<p>Optional</p>
</td>
<td style="border-width: 1px; border-style: solid;">
<p><em>unlim</em>: there is no maximum file size for file content exfiltration</p>
</td>
</tr>
<tr>
<td style="background-color: #f1c232; border: 1pt solid #171717;" colspan="4">
<p><strong>Examples</strong></p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #171717;" colspan="4" rowspan="2">
<p><em>stealbit.exe C:\Users\user\Desktop\file.db -hide y -skipfiles n</em></p>
<p><em>stealbit.exe C:\Users\user\Desktop\ -net 5MB -delete y -h y -skipfolders n -file 2GB</em></p>
</td>
</tr>
</tbody>
</table>
<p style="text-align: center; font-size: 16px; line-height: 1.75;"><em>The command line parameters that StealBit supports</em></p>
<p>After parsing command line parameters, StealBit creates or opens the named pipe file <em>\??\pipe\STEALBIT-MASTER-PIPE. </em>The path to the named pipe file is one of the strings that StealBit has previously decrypted using the RC4 algorithm.<em>&nbsp;</em></p>
<p>If the current StealBit instance is the first one that the malware’s operator has executed on the compromised system, StealBit creates the named pipe file <em>STEALBIT-MASTER-PIPE</em> by invoking the <em>NtCreateNamedPipeFile</em> function and assumes the role of a named pipe server.&nbsp;</p>
<p>We refer to this StealBit instance as a StealBit named pipe server. If not, StealBit opens the named pipe file <em>STEALBIT-MASTER-PIPE</em> by invoking th<em>e NtCreateFile</em> function and assumes the role of a named pipe client. We refer to this StealBit instance as a StealBit named pipe client.&nbsp;</p>
<p>In summary, StealBit implements named pipe-based IPC between multiple StealBit processes that run on a single compromised system. We show later in this section that this enables StealBit operators to designate many files for exfiltration in a scalable manner by executing StealBit named pipe clients with the <em>&lt;path to file or folder&gt;</em> command line parameter set to the paths to the files. This makes the overall process for exfiltrating the content of multiple files convenient and efficient for StealBit operators:</p>
<p style="text-align: center;"><img src="https://www.cybereason.com/hs-fs/hubfs/image7-1.jpg?width=715&amp;name=image7-1.jpg" alt="image7-1" width="715" loading="lazy" style="width: 715px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/image7-1.jpg?width=358&amp;name=image7-1.jpg 358w, https://www.cybereason.com/hs-fs/hubfs/image7-1.jpg?width=715&amp;name=image7-1.jpg 715w, https://www.cybereason.com/hs-fs/hubfs/image7-1.jpg?width=1073&amp;name=image7-1.jpg 1073w, https://www.cybereason.com/hs-fs/hubfs/image7-1.jpg?width=1430&amp;name=image7-1.jpg 1430w, https://www.cybereason.com/hs-fs/hubfs/image7-1.jpg?width=1788&amp;name=image7-1.jpg 1788w, https://www.cybereason.com/hs-fs/hubfs/image7-1.jpg?width=2145&amp;name=image7-1.jpg 2145w" sizes="(max-width: 715px) 100vw, 715px"></p>
<p style="text-align: center; font-size: 16px;"><em>StealBit creates or opens the named pipe file STEALBIT-MASTER-PIPE</em></p>
<p>At this point in the execution flow of StealBit, the execution of a StealBit instance that assumes the role of a named pipe server diverges from the execution of a StealBit instance that assumes the role of a named pipe client. The <a href="#pipe-server" rel="noopener"><span>StealBit Named Pipe Server</span></a> section discusses the former and the <a href="#pipe-client" rel="noopener"><span>StealBit Named Pipe Client</span></a> section discusses the latter.</p>
<a id="pipe-server" data-hs-anchor="true"></a>
<h4 style="font-size: 20px;"><strong><span style="color: #666666;">StealBit Named Pipe Server</span></strong></h4>
<p>After creating the named pipe file <em>STEALBIT-MASTER-PIPE</em>, the StealBit named pipe server creates and starts two threads: one that creates two windows, and one that shows a message about exfiltration progress.&nbsp;</p>
<p>The first thread creates two windows by invoking the <a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-createwindowexw" rel="noopener" target="_blank"><em><span>CreateWindowExW</span></em></a> function. The first window is a top-level, parent window, with a title of <em>StealBit 1.1</em>. The second window is a <a href="https://docs.microsoft.com/en-us/windows/win32/winmsg/window-features" rel="noopener" target="_blank"><span>child </span></a>window of the top-level window and is therefore confined to the area of the parent window. The child window can display formatted text, and this window displays the output of StealBit to the malware operator.&nbsp;</p>
<p>We emphasize that setting the <em>-hide/-h</em> command line parameter to <em>yes/y</em> hides only the child window, while the parent window is still visible. This indicates that the implementation of the window hiding feature of StealBit—that is, of the <em>-hide/-h</em> command line parameter—is not complete, because it does not make StealBit invisible in the Windows graphical user interface by hiding all windows that StealBit creates. This contradicts the claim of the LockBit group that StealBit hides its presence on compromised systems:</p>
<p style="text-align: center;"><img src="https://www.cybereason.com/hs-fs/hubfs/image2-Dec-15-2021-09-51-52-54-PM.png?width=613&amp;name=image2-Dec-15-2021-09-51-52-54-PM.png" alt="image2-Dec-15-2021-09-51-52-54-PM" width="613" loading="lazy" style="width: 613px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/image2-Dec-15-2021-09-51-52-54-PM.png?width=307&amp;name=image2-Dec-15-2021-09-51-52-54-PM.png 307w, https://www.cybereason.com/hs-fs/hubfs/image2-Dec-15-2021-09-51-52-54-PM.png?width=613&amp;name=image2-Dec-15-2021-09-51-52-54-PM.png 613w, https://www.cybereason.com/hs-fs/hubfs/image2-Dec-15-2021-09-51-52-54-PM.png?width=920&amp;name=image2-Dec-15-2021-09-51-52-54-PM.png 920w, https://www.cybereason.com/hs-fs/hubfs/image2-Dec-15-2021-09-51-52-54-PM.png?width=1226&amp;name=image2-Dec-15-2021-09-51-52-54-PM.png 1226w, https://www.cybereason.com/hs-fs/hubfs/image2-Dec-15-2021-09-51-52-54-PM.png?width=1533&amp;name=image2-Dec-15-2021-09-51-52-54-PM.png 1533w, https://www.cybereason.com/hs-fs/hubfs/image2-Dec-15-2021-09-51-52-54-PM.png?width=1839&amp;name=image2-Dec-15-2021-09-51-52-54-PM.png 1839w" sizes="(max-width: 613px) 100vw, 613px"></p>
<p style="text-align: center; font-size: 16px;"><em>LockBit claims that StealBit hides its presence on compromised systems (source: </em><a href="https://twitter.com/intel_by_kela/status/1406905385580118017" rel="noopener" target="_blank"><em><span>KELA</span></em></a><em>, Twitter)</em></p>
<p style="text-align: center;"><img src="https://www.cybereason.com/hs-fs/hubfs/image16-Dec-15-2021-09-52-41-46-PM.png?width=725&amp;name=image16-Dec-15-2021-09-52-41-46-PM.png" alt="image16-Dec-15-2021-09-52-41-46-PM" width="725" loading="lazy" style="width: 725px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/image16-Dec-15-2021-09-52-41-46-PM.png?width=363&amp;name=image16-Dec-15-2021-09-52-41-46-PM.png 363w, https://www.cybereason.com/hs-fs/hubfs/image16-Dec-15-2021-09-52-41-46-PM.png?width=725&amp;name=image16-Dec-15-2021-09-52-41-46-PM.png 725w, https://www.cybereason.com/hs-fs/hubfs/image16-Dec-15-2021-09-52-41-46-PM.png?width=1088&amp;name=image16-Dec-15-2021-09-52-41-46-PM.png 1088w, https://www.cybereason.com/hs-fs/hubfs/image16-Dec-15-2021-09-52-41-46-PM.png?width=1450&amp;name=image16-Dec-15-2021-09-52-41-46-PM.png 1450w, https://www.cybereason.com/hs-fs/hubfs/image16-Dec-15-2021-09-52-41-46-PM.png?width=1813&amp;name=image16-Dec-15-2021-09-52-41-46-PM.png 1813w, https://www.cybereason.com/hs-fs/hubfs/image16-Dec-15-2021-09-52-41-46-PM.png?width=2175&amp;name=image16-Dec-15-2021-09-52-41-46-PM.png 2175w" sizes="(max-width: 725px) 100vw, 725px"></p>
<p style="text-align: center; font-size: 16px;"><em>StealBit displays windows when the malware operator sets the command line parameter -hide/-h to no/n (upper image) and yes/y (lower image)</em></p>
<p>The parent StealBit window supports dragging and dropping files or folders and the <em>F2</em> and <em>Shift+F2 </em>hotkeys. Pressing the <em>F2</em> key closes the parent and child window without terminating execution, which effectively makes StealBit invisible in the Windows graphical user interface.&nbsp;</p>
<p>Pressing the key combination <em>Shift+F2</em> has no effect. Dragging and dropping a file or folder into the parent StealBit window is equivalent to specifying the <em>&lt;path to file or folder&gt;</em> command line parameter. The drag and drop activity causes StealBit to read and exfiltrate the content of the dropped file, or the content of the files placed in the dropped folder, in a way that we discuss later in this section.&nbsp;</p>
<p>The drag and drop feature enables malicious actors to conveniently provide many file or folder paths to StealBit for file content exfiltration in scenarios where the StealBit operators have access to the graphical user interface of compromised systems, such as through an Remote Desktop Protocol (RDP) session. This makes the overall process for exfiltrating the content of many files practically convenient and scalable for StealBit operators.</p>
<p>The second thread is active during the overall operation of StealBit and displays a message in the StealBit window that informs the operator about the progress of file content exfiltration when exfiltration takes place. In the form of a format string, the message is: <em>Stats: %I64d files (size %S), read speed %S/sec (compression ratio %I64d%%), upload %S/sec</em>. This format string is one of the strings that StealBit has previously decrypted using the RC4 algorithm.</p>
<p>After creating and starting the two threads, StealBit displays the values of the configuration settings that StealBit operators can configure by setting the values of the StealBit command line parameters. In addition, StealBit displays the computer name of the compromised system and the name of the domain to which the system belongs (if any; see the figure above).&nbsp;</p>
<p>StealBit then initializes the Windows Socket networking library, which StealBit uses for communication with the attacker-controlled endpoints to which StealBit may exfiltrate file content. StealBit de-obfuscates five IP addresses of these endpoints, which the malware stores in XOR obfuscated form in the StealBit executable file. StealBit also stores a string that uniquely identifies the set of the endpoint IP addresses across StealBit samples, such as <em>DI0AN</em>. We refer to this string as the <em>StealBit configuration ID</em>:</p>
<p><br><img src="https://www.cybereason.com/hs-fs/hubfs/image4-Dec-15-2021-09-58-27-86-PM.png?width=690&amp;name=image4-Dec-15-2021-09-58-27-86-PM.png" alt="image4-Dec-15-2021-09-58-27-86-PM" width="690" loading="lazy" style="width: 690px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/image4-Dec-15-2021-09-58-27-86-PM.png?width=345&amp;name=image4-Dec-15-2021-09-58-27-86-PM.png 345w, https://www.cybereason.com/hs-fs/hubfs/image4-Dec-15-2021-09-58-27-86-PM.png?width=690&amp;name=image4-Dec-15-2021-09-58-27-86-PM.png 690w, https://www.cybereason.com/hs-fs/hubfs/image4-Dec-15-2021-09-58-27-86-PM.png?width=1035&amp;name=image4-Dec-15-2021-09-58-27-86-PM.png 1035w, https://www.cybereason.com/hs-fs/hubfs/image4-Dec-15-2021-09-58-27-86-PM.png?width=1380&amp;name=image4-Dec-15-2021-09-58-27-86-PM.png 1380w, https://www.cybereason.com/hs-fs/hubfs/image4-Dec-15-2021-09-58-27-86-PM.png?width=1725&amp;name=image4-Dec-15-2021-09-58-27-86-PM.png 1725w, https://www.cybereason.com/hs-fs/hubfs/image4-Dec-15-2021-09-58-27-86-PM.png?width=2070&amp;name=image4-Dec-15-2021-09-58-27-86-PM.png 2070w" sizes="(max-width: 690px) 100vw, 690px"></p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/image14.jpg?width=668&amp;name=image14.jpg" alt="image14" width="668" loading="lazy" style="width: 668px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/image14.jpg?width=334&amp;name=image14.jpg 334w, https://www.cybereason.com/hs-fs/hubfs/image14.jpg?width=668&amp;name=image14.jpg 668w, https://www.cybereason.com/hs-fs/hubfs/image14.jpg?width=1002&amp;name=image14.jpg 1002w, https://www.cybereason.com/hs-fs/hubfs/image14.jpg?width=1336&amp;name=image14.jpg 1336w, https://www.cybereason.com/hs-fs/hubfs/image14.jpg?width=1670&amp;name=image14.jpg 1670w, https://www.cybereason.com/hs-fs/hubfs/image14.jpg?width=2004&amp;name=image14.jpg 2004w" sizes="(max-width: 668px) 100vw, 668px"></p>
<p style="text-align: center; font-size: 16px;"><em>StealBit de-obfuscates IP addresses of attacker-controlled endpoints to which StealBit may exfiltrate file content</em></p>
<p><strong><span style="color: #666666;">StealBit Malware Threading: I/O Completion Port</span></strong></p>
<p>After initializing the Windows Socket library, StealBit establishes its core functionality: the Microsoft I/O completion port threading model for processing multiple asynchronous I/O requests in parallel. StealBit implements the I/O completion port threading model to maximize the overall efficiency of file content exfiltration activities on compromised systems. For example, as we show later in this section, StealBit parallelizes the exfiltration of the content of multiple files to shorten the overall exfiltration timespan. This is important to ransomware operators, since fast data exfiltration reduces the chances of being discovered in the process.</p>
<p>The <a href="https://docs.microsoft.com/en-us/windows/win32/fileio/i-o-completion-ports" rel="noopener" target="_blank"><span>I/O completion port threading model</span></a> works by creating an I/O completion port and associating one or more file handles with that port. When an asynchronous I/O operation on one of these file handles completes, the Windows operating system queues to the port an I/O completion packet:</p>
<p>I/O completion packets carry information about the I/O operation. The application can then process I/O completion packets by removing them from the queue in a first-in-first-out (FIFO) order. In addition to a file handle, an application may associate a handle-specific I/O completion key with an I/O completion port. I/O completion keys can carry arbitrary data, which is typically data related to the handle. The figure below depicts the I/O completion port threading model that StealBit implements:</p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/image8-1.jpg?width=1692&amp;name=image8-1.jpg" alt="image8-1" width="1692" loading="lazy" style="width: 1692px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/image8-1.jpg?width=846&amp;name=image8-1.jpg 846w, https://www.cybereason.com/hs-fs/hubfs/image8-1.jpg?width=1692&amp;name=image8-1.jpg 1692w, https://www.cybereason.com/hs-fs/hubfs/image8-1.jpg?width=2538&amp;name=image8-1.jpg 2538w, https://www.cybereason.com/hs-fs/hubfs/image8-1.jpg?width=3384&amp;name=image8-1.jpg 3384w, https://www.cybereason.com/hs-fs/hubfs/image8-1.jpg?width=4230&amp;name=image8-1.jpg 4230w, https://www.cybereason.com/hs-fs/hubfs/image8-1.jpg?width=5076&amp;name=image8-1.jpg 5076w" sizes="(max-width: 1692px) 100vw, 1692px"></p>
<p style="text-align: center; font-size: 16px;"><em>StealBit implements the I/O completion port threading model</em></p>
<p>StealBit creates an I/O completion port by invoking the <em>ZwCreateIoCompletion</em> function. StealBit also creates threads for processing I/O completion packets that Windows queues to the port, which we refer to as StealBit <em>worker threads</em>. StealBit creates as many worker threads as processors are available on the compromised system. StealBit then associates three file handles (and I/O completion keys) with the I/O completion port by invoking the <em>ZwSetInformationFile</em> function:&nbsp;</p>
<ul>
<li style="list-style-type: none;">
<ul style="font-size: 18px;">
<li aria-level="1">A handle to the socket to an attacker-controlled endpoint to which StealBit exfiltrates file content: This assigns available worker threads to handle the communication with the attacker-controlled endpoint. StealBit attempts to connect to each of the five IP addresses that the malware has de-obfuscated. If StealBit cannot establish a connection to any of these IP addresses, the malware indefinitely attempts to establish a connection. If the connection to one of these IP addresses succeeds, StealBit opens a socket to the attacker-controlled endpoint and associates the socket handle and an I/O completion key with the I/O completion port. In addition, to make static analysis difficult, StealBit obtains an address to the <a href="https://docs.microsoft.com/en-us/windows/win32/api/mswsock/nc-mswsock-lpfn_transmitpackets" rel="noopener" target="_blank"><em><span>TransmitPackets</span></em></a> function at runtime by invoking the <a href="https://docs.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-wsaioctl" rel="noopener" target="_blank"><em><span>WSAIoctl</span></em></a> function. The <em>TransmitPackets</em> function is crucial to StealBit, since the malware uses this function to exfiltrate file content. <em>WSAIoctl</em> returns an address to <em>TransmitPackets</em> if an application provides the globally unique identifier (GUID) of the <em>TransmitPacket</em> function, <em>{0D689DA0-1F90-11D3-9971-00C04F68C876}</em>, as a parameter to <em>WSAIoctl</em>:</li>
</ul>
</li>
</ul>
<p style="text-align: center;"><img src="https://www.cybereason.com/hs-fs/hubfs/image9-Dec-15-2021-10-01-54-90-PM.png?width=781&amp;name=image9-Dec-15-2021-10-01-54-90-PM.png" alt="image9-Dec-15-2021-10-01-54-90-PM" width="781" loading="lazy" style="width: 781px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/image9-Dec-15-2021-10-01-54-90-PM.png?width=391&amp;name=image9-Dec-15-2021-10-01-54-90-PM.png 391w, https://www.cybereason.com/hs-fs/hubfs/image9-Dec-15-2021-10-01-54-90-PM.png?width=781&amp;name=image9-Dec-15-2021-10-01-54-90-PM.png 781w, https://www.cybereason.com/hs-fs/hubfs/image9-Dec-15-2021-10-01-54-90-PM.png?width=1172&amp;name=image9-Dec-15-2021-10-01-54-90-PM.png 1172w, https://www.cybereason.com/hs-fs/hubfs/image9-Dec-15-2021-10-01-54-90-PM.png?width=1562&amp;name=image9-Dec-15-2021-10-01-54-90-PM.png 1562w, https://www.cybereason.com/hs-fs/hubfs/image9-Dec-15-2021-10-01-54-90-PM.png?width=1953&amp;name=image9-Dec-15-2021-10-01-54-90-PM.png 1953w, https://www.cybereason.com/hs-fs/hubfs/image9-Dec-15-2021-10-01-54-90-PM.png?width=2343&amp;name=image9-Dec-15-2021-10-01-54-90-PM.png 2343w" sizes="(max-width: 781px) 100vw, 781px"></p>
<p style="text-align: center; padding-left: 40px; font-size: 16px;"><em>StealBit obtains an address to the TransmitPackets function at runtime</em></p>
<ul>
<li style="list-style-type: none;">
<ul style="font-size: 18px;">
<li aria-level="1">A handle to the named pipe <em>STEALBIT-MASTER-PIPE</em>: This assigns available worker threads to handle the communication with StealBit named pipe clients. The section <span><a href="#pipe-client" rel="noopener">StealBit Named Pipe Client</a></span> discusses the activities that the worker threads conduct when StealBit named pipe clients send data to the StealBit named pipe server.&nbsp;</li>
<li aria-level="1">A handle to a file whose content StealBit is to exfiltrate: This assigns available worker threads to handle file content exfiltration upon successful file read operations on the file. This parallelizes file content exfiltration and shortens the overall timespan of file content exfiltration activities. In addition to exfiltrating read file content, it is the StealBit named pipe server, and not the StealBit named pipe client, that reads file content for exfiltration purposes.&nbsp;</li>
</ul>
</li>
</ul>
<p>&nbsp;</p>
<p><strong><span style="color: #666666;">StealBit Malware File Content Exfiltration</span></strong></p>
<p>The StealBit named pipe server reads and exfiltrates the content of the file or the folder, whose file system path is either provided by a StealBit named pipe client or specified as the value of the <em>&lt;path to file or folder&gt;</em> command line parameter by the StealBit operator. Section <a href="#pipe-client" rel="noopener"><span>StealBit Named Pipe Client</span></a> discusses the communication between the StealBit named pipe server and client in more detail.&nbsp;</p>
<p>If the StealBit operator has specified a file path as the value of the <em>&lt;path to file or folder&gt;</em> command line parameter, the StealBit named pipe server first evaluates whether the path leads to a file or a folder. If the path leads to a file, StealBit reads the content of the file only if the file meets one or more of these requirements:</p>
<ul>
<li style="list-style-type: none;">
<ul style="font-size: 18px;">
<li aria-level="1">The length of the name of the file is less than, or equal to, four characters.</li>
<li aria-level="1">The filename extension of the file is not present in a list of filename extensions, which StealBit stores in hashed format in the malware’s executable file. StealBit enforces this criterion only if the StealBit operator has set the <em>-skipfiles</em> command line parameter to <em>no/n.</em></li>
</ul>
</li>
</ul>
<p>In addition, the size of the file has to be less than or equal to 0.53 GB. The command line parameter <em>-file/-f </em>does not have an impact on the execution of the StealBit sample that we analyzed. This indicates that the implementation of the -file/-f command line parameter is not complete.</p>
<p>If the path leads to a folder, StealBit iterates the folder recursively to enumerate files placed in the folder and sub-folders. If the StealBit operator has set the <em>-skipfolders</em> command line parameter to <em>no/n</em>, StealBit enumerates files only from those folders that are not present in a list of folders, which StealBit stores in hashed format in the malware’s executable file. After enumerating the files in a folder, StealBit reads the content of each file, except the content of system files (<a href="https://docs.microsoft.com/en-us/windows/win32/fileio/file-attribute-constants" rel="noopener" target="_blank"><em><span>FILE_ATTRIBUTE_SYSTEM</span></em></a>), if the above conditions are fulfilled.&nbsp;</p>
<p>Before reading content from a file, StealBit opens the file and then associates the handle to the file and an I/O completion key with the I/O completion port that StealBit has created. StealBit invokes the <a href="https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwreadfile"><em><span>ZwReadFile</span></em></a> function to read the content of the file in equal-sized blocks. StealBit calculates the block size as a function of the total file size—the bigger the file, the bigger the block size.</p>
<p>Each successful file content read operation issues an I/O completion packet to the I/O completion port. The available worker threads process this packet and exfiltrate the file content to an attacker-controlled endpoint using the <em>TransmitPackets</em> function, whose address StealBit has previously obtained.&nbsp;</p>
<p>To evade exfiltration detection mechanisms that monitor the amount of sent data to remote endpoints over time, StealBit operators can configure StealBit to exfiltrate file content at a given rate (amount of exfiltrated file content over 15 seconds) by configuring the -<em>net/-n</em> or <em>-once/-o</em> command line parameters. These parameters control the file content exfiltration rate by controlling the rate at which StealBit reads file content.</p>
<p>As we mentioned earlier, the file read activity issues I/O completion packets to the StealBit I/O completion port and instructs available worker threads to exfiltrate the read content. StealBit controls the file content reading rate by delaying invocations of the <em>ZwReadFile</em> function for continuously adjusted time periods, such that the total amount of read file content over 15 seconds does not exceed the exfiltration rate that the StealBit operator has specified.&nbsp;</p>
<p>Every time StealBit reads file content using the <em>ZwReadFile</em> function, available StealBit worker threads exfiltrate the read file content by issuing the Hypertext Transfer Protocol 1.1 (HTTP 1.1) <em>PUT</em> request to an attacker-controlled endpoint. StealBit stores exfiltrated file content on the attacker-controlled endpoint as a resource that has a random name, which StealBit generates for each file whose content the malware exfiltrates (for example, <em>03E76A538…</em> in the figure below). The data that StealBit sends to the attacker-controlled endpoint includes:</p>
<ul>
<li style="list-style-type: none;">
<ul style="font-size: 18px;">
<li aria-level="1">A Distributed Authoring and Versioning 2 (DAV2<em>)</em> header (<em>DAV2...</em> in the figure below)</li>
<li aria-level="1">The StealBit <em>configuration ID</em> (for example, <em>DI0AN </em>in the figure below)</li>
<li aria-level="1">The computer name of the compromised system and the name of the domain (if any) to which the system belongs (for example, <em>NODOMAIN</em> and <em>DESKTOP-PUK8BTP</em> in the figure below)</li>
<li aria-level="1">The absolute path to the file whose content StealBit exfiltrates (for example, <em>C:\Users\&lt;user&gt;\Desktop\SB_6c9a\testfile.txt</em> in the figure below)</li>
<li aria-level="1">The file content that StealBit exfiltrates (for example, <em>Hello. This is a test file.</em> in the figure below).&nbsp;</li>
</ul>
</li>
</ul>
<p>The file content is not compressed. This contradicts the claim of the LockBit threat group that StealBit compresses exfiltrated file content:</p>
<p style="text-align: center;"><img src="https://www.cybereason.com/hs-fs/hubfs/image1-Dec-15-2021-10-02-37-22-PM.png?width=540&amp;name=image1-Dec-15-2021-10-02-37-22-PM.png" alt="image1-Dec-15-2021-10-02-37-22-PM" width="540" loading="lazy" style="width: 540px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/image1-Dec-15-2021-10-02-37-22-PM.png?width=270&amp;name=image1-Dec-15-2021-10-02-37-22-PM.png 270w, https://www.cybereason.com/hs-fs/hubfs/image1-Dec-15-2021-10-02-37-22-PM.png?width=540&amp;name=image1-Dec-15-2021-10-02-37-22-PM.png 540w, https://www.cybereason.com/hs-fs/hubfs/image1-Dec-15-2021-10-02-37-22-PM.png?width=810&amp;name=image1-Dec-15-2021-10-02-37-22-PM.png 810w, https://www.cybereason.com/hs-fs/hubfs/image1-Dec-15-2021-10-02-37-22-PM.png?width=1080&amp;name=image1-Dec-15-2021-10-02-37-22-PM.png 1080w, https://www.cybereason.com/hs-fs/hubfs/image1-Dec-15-2021-10-02-37-22-PM.png?width=1350&amp;name=image1-Dec-15-2021-10-02-37-22-PM.png 1350w, https://www.cybereason.com/hs-fs/hubfs/image1-Dec-15-2021-10-02-37-22-PM.png?width=1620&amp;name=image1-Dec-15-2021-10-02-37-22-PM.png 1620w" sizes="(max-width: 540px) 100vw, 540px"></p>
<p style="text-align: center; font-size: 16px;"><em>LockBit claims that StealBit compresses exfiltrated file content (source: </em><a href="https://twitter.com/intel_by_kela/status/1406905385580118017" rel="noopener" target="_blank"><em><span>KELA</span></em></a><em>, Twitter)</em></p>
<p style="text-align: center;"><img src="https://www.cybereason.com/hs-fs/hubfs/image10-Dec-15-2021-10-03-44-12-PM.png?width=691&amp;name=image10-Dec-15-2021-10-03-44-12-PM.png" alt="image10-Dec-15-2021-10-03-44-12-PM" width="691" loading="lazy" style="width: 691px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/image10-Dec-15-2021-10-03-44-12-PM.png?width=346&amp;name=image10-Dec-15-2021-10-03-44-12-PM.png 346w, https://www.cybereason.com/hs-fs/hubfs/image10-Dec-15-2021-10-03-44-12-PM.png?width=691&amp;name=image10-Dec-15-2021-10-03-44-12-PM.png 691w, https://www.cybereason.com/hs-fs/hubfs/image10-Dec-15-2021-10-03-44-12-PM.png?width=1037&amp;name=image10-Dec-15-2021-10-03-44-12-PM.png 1037w, https://www.cybereason.com/hs-fs/hubfs/image10-Dec-15-2021-10-03-44-12-PM.png?width=1382&amp;name=image10-Dec-15-2021-10-03-44-12-PM.png 1382w, https://www.cybereason.com/hs-fs/hubfs/image10-Dec-15-2021-10-03-44-12-PM.png?width=1728&amp;name=image10-Dec-15-2021-10-03-44-12-PM.png 1728w, https://www.cybereason.com/hs-fs/hubfs/image10-Dec-15-2021-10-03-44-12-PM.png?width=2073&amp;name=image10-Dec-15-2021-10-03-44-12-PM.png 2073w" sizes="(max-width: 691px) 100vw, 691px"></p>
<p style="text-align: center; font-size: 16px;"><em>StealBit exfiltrates uncompressed file content</em></p>
<p>The StealBit sample that we analyzed does not execute indefinitely in order to keep the StealBit worker threads that handle I/O completion packets active in a typical server fashion. To the contrary, after creating worker threads and establishing the I/O completion port threading model, StealBit processes the <em>&lt;path to file or folder&gt;</em> command line parameter and exfiltrates file content if the StealBit operator has specified a valid parameter value.&nbsp;</p>
<p>StealBit then waits until the worker threads have processed all I/O completion packets, and then closes the named pipe file <em>STEALBIT-MASTER-PIPE</em>. Next, depending on the value of the <em>-delete/-d</em> command line parameter, StealBit empties the content of its executable file and deletes the file. StealBit conducts these activities by invoking the <a href="https://docs.microsoft.com/en-us/windows/win32/api/shellapi/nf-shellapi-shellexecuteexw" rel="noopener" target="_blank"><em><span>ShellExecuteExW</span></em></a> function to execute these commands, where <em>&lt;file size&gt;</em> is the size of the StealBit executable file in bytes and <em>&lt;file path&gt;</em> is the path to the StealBit executable file:&nbsp;</p>
<ul>
<li style="list-style-type: none;">
<ul style="font-size: 18px;">
<li aria-level="1"><em>ping 127.0.0.7 -n 7 &gt; Nul</em></li>
</ul>
</li>
</ul>
<ul>
<li style="list-style-type: none;">
<ul style="font-size: 18px;">
<li aria-level="1"><em>fsutil file setZeroData offset=0 length=&lt;file size&gt; &lt;file path&gt;</em></li>
</ul>
</li>
</ul>
<ul>
<li style="list-style-type: none;">
<ul style="font-size: 18px;">
<li aria-level="1"><em>del /f /q &lt;file path&gt;</em></li>
</ul>
</li>
</ul>
<p>Finally, StealBit terminates its execution:</p>
<p style="text-align: center;"><img src="https://www.cybereason.com/hs-fs/hubfs/image6-Dec-15-2021-10-04-52-43-PM.png?width=681&amp;name=image6-Dec-15-2021-10-04-52-43-PM.png" alt="image6-Dec-15-2021-10-04-52-43-PM" width="681" loading="lazy" style="width: 681px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/image6-Dec-15-2021-10-04-52-43-PM.png?width=341&amp;name=image6-Dec-15-2021-10-04-52-43-PM.png 341w, https://www.cybereason.com/hs-fs/hubfs/image6-Dec-15-2021-10-04-52-43-PM.png?width=681&amp;name=image6-Dec-15-2021-10-04-52-43-PM.png 681w, https://www.cybereason.com/hs-fs/hubfs/image6-Dec-15-2021-10-04-52-43-PM.png?width=1022&amp;name=image6-Dec-15-2021-10-04-52-43-PM.png 1022w, https://www.cybereason.com/hs-fs/hubfs/image6-Dec-15-2021-10-04-52-43-PM.png?width=1362&amp;name=image6-Dec-15-2021-10-04-52-43-PM.png 1362w, https://www.cybereason.com/hs-fs/hubfs/image6-Dec-15-2021-10-04-52-43-PM.png?width=1703&amp;name=image6-Dec-15-2021-10-04-52-43-PM.png 1703w, https://www.cybereason.com/hs-fs/hubfs/image6-Dec-15-2021-10-04-52-43-PM.png?width=2043&amp;name=image6-Dec-15-2021-10-04-52-43-PM.png 2043w" sizes="(max-width: 681px) 100vw, 681px"></p>
<p style="text-align: center; font-weight: bold;"><em>StealBit deletes its executable file</em></p>
<a id="pipe-client" data-hs-anchor="true"></a>
<h4 style="font-size: 20px;"><strong><span style="color: #666666;">StealBit Malware Named Pipe Client</span></strong></h4>
<p>After opening the named pipe file <em>STEALBIT-MASTER-PIPE</em>, the StealBit named pipe client delegates file content reading and exfiltration to the StealBit named pipe server. To do this, the StealBit named pipe client communicates with the StealBit named pipe server by following a communication protocol.&nbsp;</p>
<p>The figure below depicts this protocol. When a StealBit named pipe client sends data to a StealBit named pipe server, this action issues an I/O completion packet to the I/O completion port that the StealBit named pipe server creates (see section <a href="#pipe-server" rel="noopener"><span>StealBit Named Pipe Server</span></a>). The worker threads of the StealBit named pipe server then process this packet. The StealBit named pipe server uses the worker threads that handle the communication with StealBit named pipe clients to conduct the server's activities that are depicted in the figure below:</p>
<p style="text-align: center;"><img src="https://www.cybereason.com/hs-fs/hubfs/image5-Dec-15-2021-10-05-43-14-PM.png?width=702&amp;name=image5-Dec-15-2021-10-05-43-14-PM.png" alt="image5-Dec-15-2021-10-05-43-14-PM" width="702" loading="lazy" style="width: 702px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/image5-Dec-15-2021-10-05-43-14-PM.png?width=351&amp;name=image5-Dec-15-2021-10-05-43-14-PM.png 351w, https://www.cybereason.com/hs-fs/hubfs/image5-Dec-15-2021-10-05-43-14-PM.png?width=702&amp;name=image5-Dec-15-2021-10-05-43-14-PM.png 702w, https://www.cybereason.com/hs-fs/hubfs/image5-Dec-15-2021-10-05-43-14-PM.png?width=1053&amp;name=image5-Dec-15-2021-10-05-43-14-PM.png 1053w, https://www.cybereason.com/hs-fs/hubfs/image5-Dec-15-2021-10-05-43-14-PM.png?width=1404&amp;name=image5-Dec-15-2021-10-05-43-14-PM.png 1404w, https://www.cybereason.com/hs-fs/hubfs/image5-Dec-15-2021-10-05-43-14-PM.png?width=1755&amp;name=image5-Dec-15-2021-10-05-43-14-PM.png 1755w, https://www.cybereason.com/hs-fs/hubfs/image5-Dec-15-2021-10-05-43-14-PM.png?width=2106&amp;name=image5-Dec-15-2021-10-05-43-14-PM.png 2106w" sizes="(max-width: 702px) 100vw, 702px"></p>
<p style="text-align: center; font-size: 16px;"><em>The StealBit named pipe client communicates with the StealBit named pipe server</em></p>
<p>After opening <em>STEALBIT-MASTER-PIPE</em> and therefore connecting to the StealBit named pipe server, the StealBit named pipe client sends the four bytes <em>00 00 00 00</em> to the server to announce the client's presence. The StealBit named pipe server keeps track of the state of the connection. When the StealBit named pipe client announces itself, the server acknowledges the client's presence by updating the state of the connection to indicate successful client connection.</p>
<p>The StealBit named pipe client then processes the value of the <em>&lt;path to file or folder&gt;</em> command line parameter in the same manner as the StealBit named pipe server (see section <a href="#pipe-server" rel="noopener"><span>StealBit Named Pipe Server</span></a>). However, in contrast to the StealBit named pipe server, the StealBit named pipe client does not read and exfiltrate file content, but delegates this task to the server as follows:</p>
<ul>
<li style="list-style-type: none;">
<ul style="font-size: 18px;">
<li>The client sends the four bytes <em>01 00 00 00 </em>to the server to indicate that the client is about to send a file path to the server. This file path is the path to the file whose content the server is to read and exfiltrate. The StealBit named pipe server acknowledges the communication by updating the state of the connection to indicate the incoming file path.</li>
<li>The client sends four bytes to the server such that the bytes specify the length of the file path in a null-terminated Unicode string format. For example, the client sends the bytes <em>3E</em> <em>00 00 00</em> to the server when the client is about to send the file path <em>C:\Users\user\Desktop\file.txt</em> to the server (<em>0x3E</em> in hexadecimal format is <em>62</em> in decimal format). The StealBit named pipe server updates the state of the connection and allocates a virtual memory region of a size that is the same as the file path length that the client has sent.&nbsp;</li>
<li>The client sends the file path to the server. The StealBit named pipe server updates the state of the connection, stores the file path in the previously allocated memory region, and then reads and exfiltrates the content of the file at the file path (see section <a href="#pipe-server" rel="noopener"><span>StealBit Named Pipe Server</span></a>).&nbsp;</li>
<li>Delegating file content reading and exfiltration to the StealBit named pipe server enables malicious actors to designate many files for exfiltration in a scalable manner by executing StealBit named pipe clients with the <em>&lt;path to file or folder&gt;</em> command line parameter set to the paths to the files.</li>
</ul>
</li>
</ul>
<p>The StealBit named pipe client then closes the connection to the server and, depending on the value of the <em>-delete/-d</em> command line parameter, deletes its executable file in the same manner as the StealBit named pipe server. The StealBit named pipe client then terminates its execution. The command line parameters <em>-hide/-h</em>, <em>-net/-n</em>, and <em>-once/-o</em> do not have an impact on the execution of the StealBit named pipe client.&nbsp;</p>
<a id="comparative-analysis" data-hs-anchor="true"></a>
<h3 style="font-size: 24px;"><strong><span style="color: #434343;">StealBit Malware Comparative Analysis&nbsp;</span></strong></h3>
<p>The table below lists selected StealBit samples that represent StealBit samples that the security community has observed at the time of writing of this report, in terms of the&nbsp; configuration and implementation aspects of StealBit that are in the scope of this report. For referencing purposes, each sample has a codename with the prefix <em>SB_</em> and a suffix that is the first four hexadecimal numbers of the sample’s SHA-256 hash:</p>
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2;">
<tbody>
<tr>
<td style="background-color: #f1c232; border: 1pt solid #000000;" colspan="2">
<p><strong>SB_3407</strong></p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p><strong>SHA-256 Hash</strong></p>
</td>
<td style="border: 1pt solid #000000;">
<p><a href="https://www.virustotal.com/gui/file/3407f26b3d69f1dfce76782fee1256274cf92f744c65aa1ff2d3eaaaf61b0b1d/details" rel="noopener" target="_blank"><span>3407f26b3d69f1dfce76782fee1256274cf92f744c65aa1ff2d3eaaaf61b0b1d</span></a></p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p><strong>First submission to VirusTotal</strong></p>
</td>
<td style="border: 1pt solid #000000;">
<p>2021-08-06</p>
</td>
</tr>
<tr>
<td style="background-color: #f1c232; border: 1pt solid #000000;" colspan="2">
<p><strong>SB_107d</strong></p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p><strong>SHA-256 Hash</strong></p>
</td>
<td style="border: 1pt solid #000000;">
<p><a href="https://www.virustotal.com/gui/file/107d9fce05ff8296d0417a5a830d180cd46aa120ced8360df3ebfd15cb550636/detection" rel="noopener" target="_blank"><span>107d9fce05ff8296d0417a5a830d180cd46aa120ced8360df3ebfd15cb550636</span></a></p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p><strong>First submission to VirusTotal</strong></p>
</td>
<td style="border: 1pt solid #000000;">
<p>2021-09-09</p>
</td>
</tr>
<tr>
<td style="background-color: #f1c232; border: 1pt solid #000000;" colspan="2">
<p><strong>SB_6c9a</strong></p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p><strong>SHA-256 Hash</strong></p>
</td>
<td style="border: 1pt solid #000000;">
<p><a href="https://www.virustotal.com/gui/file/6c9a92955402c76ab380aa6927ad96515982a47c05d54f21d67603814d29e4a5/details" rel="noopener" target="_blank"><span>6c9a92955402c76ab380aa6927ad96515982a47c05d54f21d67603814d29e4a5</span></a></p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p><strong>First submission to VirusTotal</strong></p>
</td>
<td style="border: 1pt solid #000000;">
<p>2021-11-08</p>
</td>
</tr>
<tr>
<td style="background-color: #f1c232; border: 1pt solid #000000;" colspan="2">
<p><strong>SB_6b9a</strong></p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p><strong>SHA-256 Hash</strong></p>
</td>
<td style="border: 1pt solid #000000;">
<p><a href="https://www.virustotal.com/gui/file/6b9aa479a5f9c6bfee52046c1afa579977dfcde868fdad3f18fdcd1779535068" rel="noopener" target="_blank"><span>6b9aa479a5f9c6bfee52046c1afa579977dfcde868fdad3f18fdcd1779535068</span></a></p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p><strong>First submission to VirusTotal</strong></p>
</td>
<td style="border: 1pt solid #000000;">
<p>2021-11-26</p>
</td>
</tr>
</tbody>
</table>
<p style="text-align: center; font-size: 16px;"><em>Representative StealBit samples</em></p>
<p>The tables below compare the selected StealBit samples (column ‘Sample’) considering the following configuration and implementation aspects:</p>
<ul>
<li style="list-style-type: none;">
<ul style="font-size: 18px;">
<li aria-level="1">IP addresses and geolocations of attacker-controlled endpoints to which StealBit exfiltrates data (column ‘IP addresses’ and ‘Location’).</li>
<li aria-level="1">The debugger detection method that StealBit implements as an anti-analysis measure (column ‘Debugger detection’).</li>
<li aria-level="1">Command line parameters and the respective malware features (column ‘Command line parameters’).</li>
<li aria-level="1">A named pipe IPC infrastructure that makes exfiltrating the content of multiple files practically convenient and efficient for StealBit operators (column ‘IPC’).</li>
<li aria-level="1">The I/O completion port threading model to maximize the overall efficiency of data exfiltration activities (column ‘I/O completion’).</li>
<li aria-level="1">Conditions for execution and file content exfiltration (column ‘Execution conditions’):<br><br></li>
</ul>
</li>
</ul>
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2; height: 636.738px;">
<thead>
<tr style="height: 54.2773px;">
<th style="background-color: #f1c232; height: 54px; width: 102.617px;">
<p><strong>Sample</strong></p>
</th>
<th style="background-color: #f1c232; height: 54px; width: 180.801px;">
<p><strong>IP addresses</strong></p>
</th>
<th style="background-color: #f1c232; height: 54px; width: 170.82px;">
<p><strong>Location</strong></p>
</th>
</tr>
</thead>
<tbody>
<tr style="height: 241.27px;">
<td style="border: 1pt solid #000000; height: 241px; width: 102.617px;">
<p>SB_3407</p>
</td>
<td style="border: 1pt solid #000000; height: 241px; width: 180.801px;">
<p>88.80.147[.]102</p>
<p>168.100.11[.]72</p>
<p>139.60.160[.]200</p>
<p>193.38.235[.]234</p>
<p>174.138.62[.]35</p>
</td>
<td style="border: 1pt solid #000000; height: 241px; width: 170.82px;">
<p>Bulgaria</p>
<p>The Netherlands</p>
<p>United States</p>
<p>Russia</p>
<p>United States</p>
</td>
</tr>
<tr style="height: 241.27px;">
<td style="border: 1pt solid #000000; height: 241px; width: 102.617px;">
<p>SB_107d</p>
</td>
<td style="border: 1pt solid #000000; height: 241px; width: 180.801px;">
<p>93.190.139[.]223</p>
<p>168.100.11[.]72</p>
<p>139.60.160[.]200</p>
<p>193.38.235[.]234</p>
<p>174.138.62[.]35</p>
</td>
<td style="border: 1pt solid #000000; height: 241px; width: 170.82px;">
<p>The Netherlands</p>
<p>The Netherlands</p>
<p>United States</p>
<p>Russia</p>
<p>United States</p>
</td>
</tr>
<tr style="height: 49.3164px;">
<td style="border: 1pt solid #000000; height: 49px; width: 102.617px;">
<p>SB_6c9a</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 180.801px;">
<p>185.182.193[.]120</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 170.82px;">
<p>The Netherlands</p>
</td>
</tr>
<tr style="height: 49.3164px;">
<td style="border: 1pt solid #000000; height: 49px; width: 102.617px;">
<p>SB_6b9a</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 180.801px;">
<p>185.182.193[.]120</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 170.82px;">
<p>The Netherlands</p>
</td>
</tr>
</tbody>
</table>
<p style="text-align: center; font-size: 16px;"><em>Comparison of StealBit samples: Attacker-controlled endpoints</em></p>
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2; height: 387.852px; width: 1016px;">
<tbody>
<tr style="height: 77.3047px;">
<td style="background-color: #f1c232; border: 1pt solid #000000; width: 105.176px; height: 77px;">
<p><strong>Sample</strong></p>
</td>
<td style="background-color: #f1c232; border: 1pt solid #000000; width: 150.234px; height: 77px;">
<p><strong>Debugger detection</strong></p>
</td>
<td style="background-color: #f1c232; border: 1pt solid #000000; width: 406.66px; height: 77px;">
<p><strong>Command line parameters</strong></p>
</td>
<td style="background-color: #f1c232; border: 1pt solid #000000; width: 71.1133px; height: 77px;">
<p><strong>IPC</strong></p>
</td>
<td style="background-color: #f1c232; border: 1pt solid #000000; width: 134.199px; height: 77px;">
<p><strong>I/O completion</strong></p>
</td>
<td style="background-color: #f1c232; border: 1pt solid #000000; width: 147.285px; height: 77px;">
<p><strong>Execution conditions</strong></p>
</td>
</tr>
<tr style="height: 77.3047px;">
<td style="border: 1pt solid #000000; width: 105.176px; height: 77px;">
<p>SB_3407</p>
</td>
<td style="border: 1pt solid #000000; width: 150.234px; height: 77px;" rowspan="4">
<p style="text-align: center;"><em>NtGlobalFlag</em>&nbsp;</p>
</td>
<td style="border: 1pt solid #000000; width: 406.66px; height: 77px;">
<p><em>&lt;path to file or folder&gt;</em></p>
</td>
<td style="border: 1pt solid #000000; width: 71.1133px; height: 77px;" rowspan="4">
<p>Yes</p>
</td>
<td style="border: 1pt solid #000000; width: 134.199px; height: 77px;" rowspan="4">
<p>Yes</p>
</td>
<td style="border: 1pt solid #000000; width: 147.285px; height: 77px;">
<p>Location</p>
</td>
</tr>
<tr style="height: 77.3047px;">
<td style="border: 1pt solid #000000; width: 105.176px; height: 77px;">
<p>SB_107d</p>
</td>
<td style="border: 1pt solid #000000; width: 406.66px; height: 77px;">
<p><em>&lt;path to file or folder&gt;</em></p>
</td>
<td style="border: 1pt solid #000000; width: 147.285px; height: 77px;">
<p>Location</p>
</td>
</tr>
<tr style="height: 77.3047px;">
<td style="border: 1pt solid #000000; width: 105.176px; height: 77px;">
<p>SB_6c9a</p>
</td>
<td style="border: 1pt solid #000000; width: 406.66px; height: 77px;">
<p><em>&lt;path to file or folder&gt;, -hide/-h, -delete/d, -net/-n, -once/-o, -skipfiles, -skipfolders, -file/-f</em></p>
</td>
<td style="border: 1pt solid #000000; width: 147.285px; height: 77px;">
<p>None</p>
</td>
</tr>
<tr style="height: 77.3047px;">
<td style="border: 1pt solid #000000; width: 105.176px; height: 77px;">
<p>SB_6b9a</p>
</td>
<td style="border: 1pt solid #000000; width: 406.66px; height: 77px;">
<p><em>&lt;path to file or folder&gt;, -hide/-h, -delete/-d, -net/-n, -once/-o, -skipfiles, -skipfolders, -file/-f</em></p>
</td>
<td style="border: 1pt solid #000000; width: 147.285px; height: 77px;">
<p>None</p>
</td>
</tr>
</tbody>
</table>
<p style="text-align: center; font-size: 16px;"><em>Comparison of StealBit samples</em></p>
<p>The majority of the attacker-controlled endpoints to which the StealBit samples that we analyzed exfiltrate data are located in western countries, with the Netherlands and the United States at the top of the list. All StealBit samples implement named pipe-based IPC and the I/O completion port threading model for maximum exfiltration efficiency, usage convenience, and scalability. In addition, all StealBit samples detect the presence of a debugger attached to the StealBit process by evaluating the value of the <em>NtGlobalFlag</em> field of the PEB and execute an empty infinite loop if a debugger is present.</p>
<h4 style="font-size: 20px;"><strong><span style="color: #666666;">Older Versus Newer Versions of StealBit Malware</span></strong></h4>
<p>A major difference between the StealBit samples that we analyzed is the command line parameters and the respective malware features that the samples support. Relatively older StealBit samples do not support the command line parameters <em>-hide/-h</em>, <em>-delete/-d</em>, <em>-net/-n</em>, <em>-once/-o</em>, <em>-skipfiles</em>, <em>-skipfolders, </em>and <em>-file/-f</em> and the features that these parameters configure, such as self-deletion and data exfiltration rate.&nbsp;</p>
<p>This indicates that StealBit has been undergoing improvement with new features, especially evasion and hiding features. Another major difference is that relatively older samples do not execute on systems located in the former Soviet countries of Russia, Ukraine, Belarus, Tajikistan, Armenia, Azerbaijan, Georgia, Kazakhstan, Kyrgyzstan, Turkmenistan, Uzbekistan, and Moldova. StealBit determines the location of a compromised system based on the system’s default language. Relatively newer samples do not implement this restriction and execute on any system.&nbsp;</p>
<h2 style="font-size: 30px;"><strong><span style="color: #666666;">Detection and Prevention of StealBit Malware</span></strong></h2>
<h3 style="font-size: 24px;"><strong><span style="color: #434343;">Cybereason XDR Platform</span></strong></h3>
<p>The <a href="/platform" rel="noopener" target="_blank"><span>Cybereason XDR Platform</span></a> detects and stops StealBit when the malware exfiltrates data, using multi-layer protection that employs threat intelligence, machine learning, and next-gen antivirus (NGAV) capabilities to detect and block malware. The Cybereason platform also detects malicious actors that execute the related <a href="/blog/cybereason-vs.-lockbit2.0-ransomware" rel="noopener" target="_blank"><span>LockBit ransomware</span></a>:</p>
<p style="text-align: center;"><img src="https://www.cybereason.com/hs-fs/hubfs/image17-Dec-15-2021-10-06-56-61-PM.png?width=953&amp;name=image17-Dec-15-2021-10-06-56-61-PM.png" alt="image17-Dec-15-2021-10-06-56-61-PM" width="953" loading="lazy" style="width: 953px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/image17-Dec-15-2021-10-06-56-61-PM.png?width=477&amp;name=image17-Dec-15-2021-10-06-56-61-PM.png 477w, https://www.cybereason.com/hs-fs/hubfs/image17-Dec-15-2021-10-06-56-61-PM.png?width=953&amp;name=image17-Dec-15-2021-10-06-56-61-PM.png 953w, https://www.cybereason.com/hs-fs/hubfs/image17-Dec-15-2021-10-06-56-61-PM.png?width=1430&amp;name=image17-Dec-15-2021-10-06-56-61-PM.png 1430w, https://www.cybereason.com/hs-fs/hubfs/image17-Dec-15-2021-10-06-56-61-PM.png?width=1906&amp;name=image17-Dec-15-2021-10-06-56-61-PM.png 1906w, https://www.cybereason.com/hs-fs/hubfs/image17-Dec-15-2021-10-06-56-61-PM.png?width=2383&amp;name=image17-Dec-15-2021-10-06-56-61-PM.png 2383w, https://www.cybereason.com/hs-fs/hubfs/image17-Dec-15-2021-10-06-56-61-PM.png?width=2859&amp;name=image17-Dec-15-2021-10-06-56-61-PM.png 2859w" sizes="(max-width: 953px) 100vw, 953px"></p>
<p style="text-align: center; font-size: 16px;"><em><span style="color: #666666;">The Cybereason XDR Platform detects StealBit based on threat intelligence</span></em></p>
<h3 style="font-size: 24px;"><strong><span style="color: #434343;">Cybereason GSOC MDR</span></strong></h3>
<p>Cybereason GSOC recommends the following:</p>
<ul>
<li style="list-style-type: none;">
<ul style="font-size: 18px;">
<li aria-level="1">Enable the <strong>Anti-Malware</strong> feature on the Cybereason NGAV, and enable the <a href="https://nest.cybereason.com/documentation/product-documentation/190/anti-malware-settings" rel="noopener" target="_blank"><strong>Detect</strong> and <strong>Prevent</strong> modes</a> of this feature.</li>
<li aria-level="1">Regularly monitor outgoing network traffic for data exfiltration activities.</li>
<li aria-level="1">Threat Hunting with Cybereason: The Cybereason MDR team provides its customers with custom hunting queries for detecting specific threats - to find out more about threat hunting and <a href="/platform/managed-detection-response-mdr" rel="noopener" target="_blank">Managed Detection and Response</a> with the Cybereason Defense Platform, <a href="/services/managed-detection-response-mdr#form" rel="noopener" target="_blank">contact a Cybereason Defender here</a>.
<ul style="font-size: 18px;">
<li aria-level="2">For Cybereason customers: More details <a href="https://nest.cybereason.com/knowledgebase/4580181" rel="noopener" target="_blank"><span>available on the NEST</span></a> including custom threat hunting queries for detecting this threat.</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>Cybereason is dedicated to teaming with Defenders to end cyber attacks from endpoints to the enterprise to everywhere. Learn more about <a href="/platform/xdr" rel="noopener" target="_blank"><em><span>Cybereason XDR powered by Google Chronicle</span></em></a>, check out our <a href="/get-the-xdr-toolkit" rel="noopener" target="_blank"><span>Extended Detection and Response (XDR) Toolkit</span></a>, or <a href="/request-a-demo" rel="noopener" target="_blank"><span>schedule a demo</span></a> today to learn how your organization can benefit from an <a href="/blog/the-cybereason-malop-achieving-operation-centric-security" rel="noopener" target="_blank"><span>operation-centric approach</span></a> to security.</p>
<h2 style="font-size: 30px;"><strong><span style="color: #666666;">Indicators of Compromise for StealBit Malware</span></strong></h2>
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2;">
<tbody>
<tr>
<td style="border: 0.99609pt solid #000000;">
<p><strong>Executables</strong></p>
</td>
<td style="border: 0.99609pt solid #000000;">
<p>SHA-256 hash: <em>3407f26b3d69f1dfce76782fee1256274cf92f744c65aa1ff2d3eaaaf61b0b1d</em></p>
<p>SHA-256 hash: <em>107d9fce05ff8296d0417a5a830d180cd46aa120ced8360df3ebfd15cb550636</em></p>
<p>SHA-256 hash:&nbsp; <em>6c9a92955402c76ab380aa6927ad96515982a47c05d54f21d67603814d29e4a5</em></p>
<p>SHA-256 hash:&nbsp; <em>6b9aa479a5f9c6bfee52046c1afa579977dfcde868fdad3f18fdcd1779535068</em></p>
</td>
</tr>
<tr>
<td style="border: 0.99609pt solid #000000;">
<p><strong>Named pipe files</strong></p>
</td>
<td style="border: 0.99609pt solid #000000;">
<p><em>STEALBIT-MASTER-PIPE</em></p>
</td>
</tr>
<tr>
<td style="border: 0.99609pt solid #000000;">
<p><strong>IP addresses</strong></p>
</td>
<td style="border: 0.99609pt solid #000000;">
<p><em>88.80.147[.]102</em></p>
<p><em>168.100.11[.]72</em></p>
<p><em>139.60.160[.]200</em></p>
<p><em>193.38.235[.]234</em></p>
<p><em>174.138.62[.]35</em></p>
<p><em>93.190.139[.]223</em></p>
<p><em>185.182.193[.]120</em></p>
</td>
</tr>
</tbody>
</table>
<p style="font-size: 30px;">&nbsp;</p>
<h2 style="font-size: 30px;"><strong><span style="color: #666666;">MITRE ATT&amp;CK Techniques for StealBit Malware</span></strong></h2>
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2;">
<tbody>
<tr>
<td style="background-color: #f1c232; border: 0.98958pt solid #000000;">
<p><strong>Execution</strong></p>
</td>
<td style="background-color: #f1c232; border: 0.98958pt solid #000000;">
<p><strong>Privilege Escalation</strong></p>
</td>
<td style="background-color: #f1c232; border: 0.98958pt solid #000000;">
<p><strong>Defense Evasion</strong></p>
</td>
<td style="background-color: #f1c232; border: 0.98958pt solid #000000;">
<p><strong>Discovery</strong></p>
</td>
<td style="background-color: #f1c232; border: 0.98958pt solid #000000;">
<p><strong>Exfiltration</strong></p>
</td>
</tr>
<tr>
<td style="border: 0.98958pt solid #000000;">
<p><a href="https://attack.mitre.org/techniques/T1106/" rel="noopener" target="_blank"><span>Native API</span></a></p>
</td>
<td style="border: 0.98958pt solid #000000;">
<p><a href="https://attack.mitre.org/techniques/T1548/002/" rel="noopener" target="_blank"><span>Abuse Elevation Control Mechanism: Bypass User Account Control</span></a></p>
</td>
<td style="border: 0.98958pt solid #000000;">
<p><a href="https://attack.mitre.org/techniques/T1070/004/" rel="noopener" target="_blank"><span>Indicator Removal on Host: File Deletion</span></a></p>
</td>
<td style="border: 0.98958pt solid #000000;">
<p><a href="https://attack.mitre.org/techniques/T1083/" rel="noopener" target="_blank"><span>File and Directory Discovery</span></a></p>
</td>
<td style="border: 0.98958pt solid #000000;">
<p><a href="https://attack.mitre.org/techniques/T1030/" rel="noopener" target="_blank"><span>Data Transfer Size Limits</span></a></p>
</td>
</tr>
<tr>
<td style="border: 0.98958pt solid #000000;">
<p><a href="https://attack.mitre.org/techniques/T1559/" rel="noopener" target="_blank"><span>Inter-Process Communication</span></a></p>
</td>
<td style="border: 0.98958pt solid #000000;">&nbsp;</td>
<td style="border: 0.98958pt solid #000000;">
<p><a href="https://attack.mitre.org/techniques/T1027/" rel="noopener" target="_blank"><span>Obfuscated Files or Information</span></a></p>
</td>
<td style="border: 0.98958pt solid #000000;">
<p><a href="https://attack.mitre.org/techniques/T1082/" rel="noopener" target="_blank"><span>System Information Discovery</span></a></p>
</td>
<td style="border: 0.98958pt solid #000000;">
<p><a href="https://attack.mitre.org/techniques/T1041/" rel="noopener" target="_blank"><span>Exfiltration Over C2 Channel</span></a></p>
</td>
</tr>
<tr>
<td style="border: 0.98958pt solid #000000;">&nbsp;</td>
<td style="border: 0.98958pt solid #000000;">&nbsp;</td>
<td style="border: 0.98958pt solid #000000;">
<p><a href="https://attack.mitre.org/techniques/T1564/003/" rel="noopener" target="_blank"><span>Hide Artifacts: Hidden Window</span></a></p>
</td>
<td style="border: 0.98958pt solid #000000;">
<p><a href="https://attack.mitre.org/techniques/T1614/" rel="noopener" target="_blank"><span>System Location Discovery</span></a></p>
</td>
<td style="border: 0.98958pt solid #000000;">&nbsp;</td>
</tr>
</tbody>
</table>
<p><br><br></p>
<h2 style="font-size: 30px;"><strong><span style="color: #666666;">About the Researchers:</span></strong></h2>
<p><strong><span style="color: #666666;"><img class="no-border" src="https://www.cybereason.com/hs-fs/hubfs/image11-Dec-15-2021-09-29-25-89-PM.png?width=186&amp;name=image11-Dec-15-2021-09-29-25-89-PM.png" alt="image11-Dec-15-2021-09-29-25-89-PM" width="186" loading="lazy" style="width: 186px; float: left; margin: 0px 7px 1px 0px;" srcset="https://www.cybereason.com/hs-fs/hubfs/image11-Dec-15-2021-09-29-25-89-PM.png?width=93&amp;name=image11-Dec-15-2021-09-29-25-89-PM.png 93w, https://www.cybereason.com/hs-fs/hubfs/image11-Dec-15-2021-09-29-25-89-PM.png?width=186&amp;name=image11-Dec-15-2021-09-29-25-89-PM.png 186w, https://www.cybereason.com/hs-fs/hubfs/image11-Dec-15-2021-09-29-25-89-PM.png?width=279&amp;name=image11-Dec-15-2021-09-29-25-89-PM.png 279w, https://www.cybereason.com/hs-fs/hubfs/image11-Dec-15-2021-09-29-25-89-PM.png?width=372&amp;name=image11-Dec-15-2021-09-29-25-89-PM.png 372w, https://www.cybereason.com/hs-fs/hubfs/image11-Dec-15-2021-09-29-25-89-PM.png?width=465&amp;name=image11-Dec-15-2021-09-29-25-89-PM.png 465w, https://www.cybereason.com/hs-fs/hubfs/image11-Dec-15-2021-09-29-25-89-PM.png?width=558&amp;name=image11-Dec-15-2021-09-29-25-89-PM.png 558w" sizes="(max-width: 186px) 100vw, 186px">Aleksandar Milenkoski, Senior Malware and Threat Analyst, Cybereason Global SOC</span></strong></p>
<p>Aleksandar Milenkoski is a Senior Malware and Threat Analyst with the Cybereason Global SOC team. He is involved primarily in reverse engineering and threat research activities. Aleksandar has a PhD in system security. For his research activities, he has been awarded by SPEC (Standard Performance Evaluation Corporation), the Bavarian Foundation for Science, and the University of Würzburg, Germany. Prior to Cybereason, his work focused on research in intrusion detection and reverse engineering security mechanisms of the Windows 10 operating system.</p>
<p><strong><span style="color: #666666;"><img class="no-border" src="https://www.cybereason.com/hs-fs/hubfs/image12.jpg?width=192&amp;name=image12.jpg" alt="image12" width="192" loading="lazy" style="width: 192px; float: left; margin: 0px 7px 1px 0px;" srcset="https://www.cybereason.com/hs-fs/hubfs/image12.jpg?width=96&amp;name=image12.jpg 96w, https://www.cybereason.com/hs-fs/hubfs/image12.jpg?width=192&amp;name=image12.jpg 192w, https://www.cybereason.com/hs-fs/hubfs/image12.jpg?width=288&amp;name=image12.jpg 288w, https://www.cybereason.com/hs-fs/hubfs/image12.jpg?width=384&amp;name=image12.jpg 384w, https://www.cybereason.com/hs-fs/hubfs/image12.jpg?width=480&amp;name=image12.jpg 480w, https://www.cybereason.com/hs-fs/hubfs/image12.jpg?width=576&amp;name=image12.jpg 576w" sizes="(max-width: 192px) 100vw, 192px">Kotaro Ogino, Security Analyst, Cybereason Global SOC</span></strong></p>
<p>Kotaro Ogino is a Security Analyst with the Cybereason Global SOC team. He is involved in threat hunting, administration of Security Orchestration, Automation, and Response (SOAR) systems, and Extended Detection and Response (XDR). Kotaro has a bachelor of science degree in information and computer science.</p></span>
          
          <!-- IOC PopUp Modal -->
          
          
          
          <!-- -->
          
          <!-- Social Share -->
          <div class="cr-blog-post__social-sharing">
            <span>Share</span>
            <div id="hs_cos_wrapper_module_161724375084957" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module widget-type-social_sharing" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module">






<div class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_social_sharing" data-hs-cos-general-type="widget" data-hs-cos-type="social_sharing">
  
	
  
    
    
    
			
		

    <a href="https://twitter.com/intent/tweet?original_referer=https://www.cybereason.com/blog/research/threat-analysis-report-inside-the-lockbit-arsenal-the-stealbit-exfiltration-tool&amp;utm_medium=social&amp;utm_source=twitter&amp;url=https://www.cybereason.com/blog/research/threat-analysis-report-inside-the-lockbit-arsenal-the-stealbit-exfiltration-tool&amp;utm_medium=social&amp;utm_source=twitter&amp;source=tweetbutton&amp;text=" target="_blank" rel="noopener" style="width:16px;">
      <img src="https://www.cybereason.com/hubfs/dam/images/images-web/blog-images/template-images/twitter-gray.svg" class="hs-image-widget hs-image-social-sharing-24" style="height:16px;width:16px;" width="16" hspace="0" alt="Share on twitter">
    </a>
	

  
	
  
    
    
    
			
		

    <a href="http://www.facebook.com/share.php?u=https://www.cybereason.com/blog/research/threat-analysis-report-inside-the-lockbit-arsenal-the-stealbit-exfiltration-tool&amp;utm_medium=social&amp;utm_source=facebook" target="_blank" rel="noopener" style="width:16px;">
      <img src="https://www.cybereason.com/hubfs/dam/images/images-web/blog-images/template-images/facebook-gray.svg" class="hs-image-widget hs-image-social-sharing-24" style="height:16px;width:16px;" width="16" hspace="0" alt="Share on facebook">
    </a>
	

  
	
  
    
    
    
			
		

    <a href="http://www.linkedin.com/shareArticle?mini=true&amp;url=https://www.cybereason.com/blog/research/threat-analysis-report-inside-the-lockbit-arsenal-the-stealbit-exfiltration-tool&amp;utm_medium=social&amp;utm_source=linkedin" target="_blank" rel="noopener" style="width:16px;">
      <img src="https://www.cybereason.com/hubfs/dam/images/images-web/blog-images/template-images/linkedin-gray.svg" class="hs-image-widget hs-image-social-sharing-24" style="height:16px;width:16px;" width="16" hspace="0" alt="Share on linkedin">
    </a>
	

</div></div>
          </div> 
          
          
          <!-- CONDITIONAL Author Box Display -->
            <div class="container columns cr-mln__author-listing-single">
              
                <div class="column headshot is-3-full-hd is-3-desktop is-3-tablet is-12-mobile">
                  <img class="cr-speaker-headshot" src="https://www.cybereason.com/hubfs/Capture-4.png" alt="Cybereason Global SOC Team">
                </div>
              
              <div class="column is-9-full-hd is-9-desktop is-12-mobile">
                <span class="descriptor">About the Author</span>
                <h4>Cybereason Global SOC Team</h4>
                
                
                
                  <p>The Cybereason Global SOC Team delivers 24/7 Managed Detection and Response services to customers on every continent. Led by cybersecurity experts with experience working for government, the military and multiple industry verticals, the Cybereason Global SOC Team continuously hunts for the most sophisticated and pervasive threats to support our mission to end cyberattacks on the endpoint, across the enterprise, and everywhere the battle moves.</p>
                
                
                  <a class="cr-button cr-button__min" href="https://www.cybereason.com/blog/authors/cybereason-global-soc-team">All Posts by Cybereason Global SOC Team</a>
                
              </div>            
            </div>
          
        <!-- CONDITIONAL Post Type Choices -->
        
        <!-- Malicious Life Post -->
        
        
        <!-- CISO Stories -->
        
        <!-- Webinar -->
        
          
        <!-- CONDITIONAL Transcript -->
          
        
         <!-- Related Posts -->
        <div id="hs_cos_wrapper_module_1649342860525315" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module">
<section class="cr-section related-posts__wrapper">
  <div class="container container-is-blog page-center">
     <h3>Related Posts</h3>
     <div class="columns is-multiline">
       
  
 <div class="column is-6-fullhd is-6-desktop is-full-mobile blog-listing__single-post">
  <div class="text-content-bundle">
    <a href="https://www.cybereason.com/blog/threat-analysis-phorpiex-downloader"><img src="https://www.cybereason.com/hubfs/BLOG_Images_Template_v2%20%282%29.png" alt="Phorpiex - Downloader Delivering Ransomware"></a>
    <h4><a href="https://www.cybereason.com/blog/threat-analysis-phorpiex-downloader"><span class="underline">Phorpiex - Downloader Delivering Ransomware</span></a></h4>
     <p>In this Threat Analysis report, Cybereason investigates the the Phorpiex botnet that delivers LockBit Black Ransomware (aka LockBit 3.0).</p>
   </div>
 </div>


  
 <div class="column is-6-fullhd is-6-desktop is-full-mobile blog-listing__single-post">
  <div class="text-content-bundle">
    <a href="https://www.cybereason.com/blog/research/threat-analysis-report-snake-infostealer-malware"><img src="https://www.cybereason.com/hubfs/Threat%20Alert%20template%20%282%29.png" alt="THREAT ANALYSIS REPORT: Snake Infostealer Malware"></a>
    <h4><a href="https://www.cybereason.com/blog/research/threat-analysis-report-snake-infostealer-malware"><span class="underline">THREAT ANALYSIS REPORT: Snake Infostealer Malware</span></a></h4>
     <p>This report provides an overview of key features of the Snake #malware and similarities discovered in the staging mechanisms with two other information-stealing malware variants, FormBook and Agent Tesla...</p>
   </div>
 </div>



    </div>
  </div>
</section></div>
          
          
      </div>
        
        <!-- Sidebar -->

      <div class="column is-3-fullhd is-3-desktop is-12-mobile cr-malicious-life-network__sidebar">
        <div class="cr-ml-sidebar--group">
        <div class="top-stripe"></div>
        <div class="sidebar-block search-section">
          <form action="/hs-search-results">
            <input type="search" class="hs-search-field__input" name="term" autocomplete="on" placeholder="Search">
            <input type="hidden" name="type" value="BLOG_POST">
            <input type="hidden" name="type" value="LISTING_PAGE">
            <button type="submit" class="arrow"></button>
          </form>
        </div>
        <div class="sidebar-block subscribe">
          <a href="#blog-subscribe">
            <h4>Subscribe</h4>
            <span>Never miss a blog.</span>
          </a>
        </div>

        <div class="sidebar-block recent-posts">
          <h4>Recent Posts</h4>
          
            
                <div class="recent-posts__single-post">
                    <div class="text-content-bundle">
                        <a href="https://www.cybereason.com/blog/rce-vulnerability-erlang-otp" class="post-name"><span class="underline">CVE-2025-32433: Unauthenticated RCE Vulnerability in Erlang/OTP’s SSH Implementation</span></a>
                       
                    </div>
                </div>
            
                <div class="recent-posts__single-post">
                    <div class="text-content-bundle">
                        <a href="https://www.cybereason.com/blog/threat-analysis-lummastealer-2.0" class="post-name"><span class="underline">From Shadow to Spotlight: The Evolution of LummaStealer and Its Hidden Secrets</span></a>
                       
                    </div>
                </div>
            
                <div class="recent-posts__single-post">
                    <div class="text-content-bundle">
                        <a href="https://www.cybereason.com/blog/expert-support-class-action" class="post-name"><span class="underline">A Class Above: Expert Support for Data Breach Class Action Defense</span></a>
                       
                    </div>
                </div>
            
        </div>

        <div class="sidebar-block category-listing">
          <h4>Categories</h4>
          <ul>
            <li><a href="https://www.cybereason.com/blog/category/research">Research</a></li>
            <li><a href="https://www.cybereason.com/blog/category/podcasts">Podcasts</a></li>
            <li><a href="https://www.cybereason.com/blog/category/webinars">Webinars</a></li>
            <li><a href="https://www.cybereason.com/blog/category/resources">Resources</a></li>
            <li><a href="https://www.cybereason.com/blog/category/videos">Videos</a></li>
            <li><a href="https://www.cybereason.com/blog/category/news">News</a></li>
          </ul>

          <a class="rec-category__single--view-all" href="/blog/category/research">All Posts</a>
        </div>

        
      </div><!-- END .rec-categories__all -->
      
      
      
    </div>
       
    </div>
  </div>
</div></div>

</div><!--end row-->
</div><!--end row-wrapper -->

<div class="row-fluid-wrapper row-depth-1 row-number-2 ">
<div class="row-fluid ">
<div class="span12 widget-span widget-type-custom_widget " style="display: none;" data-widget-type="custom_widget" data-x="0" data-w="12">
<div id="hs_cos_wrapper_module_1616011887658867" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module">
<section class="cr-section related-posts__wrapper">
  <div class="container container-is-blog page-center">
     <h3>Related Posts</h3>
     <div class="columns is-multiline">
       
  
 <div class="column is-6-fullhd is-6-desktop is-full-mobile blog-listing__single-post">
  <div class="text-content-bundle">
    <a href="https://www.cybereason.com/blog/threat-analysis-phorpiex-downloader"><img src="https://www.cybereason.com/hubfs/BLOG_Images_Template_v2%20%282%29.png" alt="Phorpiex - Downloader Delivering Ransomware"></a>
    <h4><a href="https://www.cybereason.com/blog/threat-analysis-phorpiex-downloader"><span class="underline">Phorpiex - Downloader Delivering Ransomware</span></a></h4>
     <p>In this Threat Analysis report, Cybereason investigates the the Phorpiex botnet that delivers LockBit Black Ransomware (aka LockBit 3.0).</p>
   </div>
 </div>


  
 <div class="column is-6-fullhd is-6-desktop is-full-mobile blog-listing__single-post">
  <div class="text-content-bundle">
    <a href="https://www.cybereason.com/blog/research/threat-analysis-report-snake-infostealer-malware"><img src="https://www.cybereason.com/hubfs/Threat%20Alert%20template%20%282%29.png" alt="THREAT ANALYSIS REPORT: Snake Infostealer Malware"></a>
    <h4><a href="https://www.cybereason.com/blog/research/threat-analysis-report-snake-infostealer-malware"><span class="underline">THREAT ANALYSIS REPORT: Snake Infostealer Malware</span></a></h4>
     <p>This report provides an overview of key features of the Snake #malware and similarities discovered in the staging mechanisms with two other information-stealing malware variants, FormBook and Agent Tesla...</p>
   </div>
 </div>



    </div>
  </div>
</section></div>

</div><!--end widget-span -->
</div><!--end row-->
</div><!--end row-wrapper -->

<div class="row-fluid-wrapper row-depth-1 row-number-3 ">
<div class="row-fluid ">
<div class="span12 widget-span widget-type-custom_widget " style="" data-widget-type="custom_widget" data-x="0" data-w="12">
<div id="hs_cos_wrapper_module_161767462015235" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module widget-type-blog_subscribe" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module"><div class="cr-mln__blog-listing-page__subscribe-footer">
  <div class="container container-is-blog columns page-center">
    <div class="column is-8-fullhd is-8-desktop is-10-tablet is-12-mobile">
      <span class="tag">NEWSLETTER</span>
      <h3>Never miss a blog</h3>
      <p>Get the latest research, expert insights, and security industry news.</p>
      <a class="cr-button cr-mln__subscribe" href="#blog-subscribe">Subscribe</a>
    </div>
    <!--<div class="column is-5-fullhd is-5-desktop is-half-tablet is-12-mobile is-offset-1-fullhd is-offset-1-desktop">
      <div class="inputs-wrapper">
        
        
      </div>
    </div>-->
  </div>
</div></div>

</div><!--end widget-span -->
</div><!--end row-->
</div><!--end row-wrapper -->

<div class="row-fluid-wrapper row-depth-1 row-number-4 ">
<div class="row-fluid ">
<div class="span12 widget-span widget-type-custom_widget " style="" data-widget-type="custom_widget" data-x="0" data-w="12">
<div id="hs_cos_wrapper_module_166508001252918" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module"><div class="cr-sticky-cta-bar bg-black" id="sticky-bar">
  <div class="content">
    <span>Want to see the Cybereason Defense Platform in action?</span>
    <a class="cr-button cr-button__fill-yellow" href="https://www.cybereason.com/request-a-demo" target="_blank">Schedule a Demo</a>
  </div>
  <div class="close">X</div>
</div></div>

</div><!--end widget-span -->
</div><!--end row-->
</div><!--end row-wrapper -->

    </div><!--end body -->
</div><!--end body wrapper -->

<div class="footer-container-wrapper">
    <div class="footer-container container-fluid">

<div class="row-fluid-wrapper row-depth-1 row-number-1 ">
<div class="row-fluid ">
<div class="span12 widget-span widget-type-custom_widget " style="" data-widget-type="custom_widget" data-x="0" data-w="12">
<div id="hs_cos_wrapper_module_16036762394194314" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module"><!-- FOOTER -->

<footer class="cr-section cr-footer cr-footer__full">
    <div class="container page-center">
      <div class="columns">
          <div class="column is-6-fullhd is-5-desktop cr-footer__col cr-footer__left">
            <div class="cr-footer__Left-logo">
              
                <a href="https://www.cybereason.com">
                  
                <img src="https://www.cybereason.com/hubfs/dam/images/images-web/logos/cr-brand/cr-logo-inline--primary-white.png">
              </a>
            </div>
          </div>
          <div class="columns column is-6-fullhd is-6-desktop cr-footer__col cr-footer__right">
            <div class="cr-footer__links-list column">
              <h4>About</h4>
              <ul>
                <li><a href="https://www.cybereason.com/company/who-we-are">Who We Are</a>
                </li><li><a href="https://www.cybereason.com/company/careers">Careers</a>
          <!-- </li><li><a href="https://www.cybereason.com/company/leadership">Leadership</a> --->
                </li><li><a href="https://www.cybereason.com/company/contact-us">Contact</a>
              </li></ul>
            </div>
            <div class="cr-footer__links-list column">
              <h4>Resources</h4>
              <ul>
                <li><a href="https://www.cybereason.com/blog">Blog</a></li>
                <li><a href="https://www.cybereason.com/resources/tag/case-study">Case Studies</a></li>
                <li><a href="https://www.cybereason.com/resources/tag/webinars">Webinars</a></li>
                <li><a href="https://www.cybereason.com/resources/tag/white-papers">White Papers</a></li>
             </ul>
            </div>
            <div class="cr-footer__links-list column">
              <h4>Platform</h4>
              <ul>
                
                <li><a href="https://www.cybereason.com/platform">Overview</a></li>
                <li><a href="https://www.cybereason.com/platform/endpoint-prevention">Endpoint Protection</a></li>
                <li><a href="https://www.cybereason.com/platform/endpoint-detection-response-edr">EDR</a></li>
                <li><a href="https://www.cybereason.com/platform/managed-detection-response-mdr">MDR</a></li>
              </ul>
            </div>
          </div>
      </div>
    </div>
  
    <div class="container page-center">
      <div class="columns cr-footer__bottom-bar">
        <div class="column">
          <p>©Cybereason 2025. All Rights Reserved.</p>
        </div>
        <div class="column bottom-bar__links">
          <ul>
            <li><a href="https://www.cybereason.com/terms-of-use">Terms of Use</a></li>
            <li><a href="https://www.cybereason.com/privacy-notice">Privacy Notice</a></li>
            <li><a href="https://www.cybereason.com/ccpa-privacy-request">Do Not Sell</a></li>
            <li><a href="https://www.cybereason.com/security">Security</a></li>
            <!--<li><a href="#">Cookie Policy</a></li>-->
          </ul>
        </div>

        <div class="column bottom-bar__social">
          <ul>
            <li><a class="facebook" href="https://www.facebook.com/Cybereason/"></a></li>
            <li><a class="twitter" href="https://twitter.com/cybereason"></a></li>
            <li><a class="youtube" href="https://www.youtube.com/channel/UCOm7AaB0HiNH4Phe66sK0Ew"></a></li>
            <li><a class="linkedin" href="https://www.linkedin.com/company/cybereason"></a></li>
            <li><a class="instagram" href="https://www.instagram.com/cybereason"></a></li>
          </ul>
        </div>
    </div>
  </div>

</footer></div>

</div><!--end widget-span -->
</div><!--end row-->
</div><!--end row-wrapper -->

    </div><!--end footer -->
</div><!--end footer wrapper -->

    
<!-- HubSpot performance collection script -->
<script defer src="/hs/hsstatic/content-cwv-embed/static-1.1293/embed.js"></script>
<script src="https://www.cybereason.com/hs-fs/hubfs/hub_generated/template_assets/1/42507089303/1741528346196/template_animatedModal.min.js"></script>
<script>
var hsVars = hsVars || {}; hsVars['language'] = 'en';
</script>

<script src="/hs/hsstatic/cos-i18n/static-1.53/bundles/project.js"></script>
<script src="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/41681847227/1741488491170/module_CR_-_Malicious_Life_Network_--_Tier_One_Header.min.js"></script>
<script src="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/41682410610/1741488492472/module_CR_-_Malicious_Life_Network_--_Main_Hero.min.js"></script>
<script src="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/43300360745/1741488505140/module_CR_-_Malicious_Life_Network_--_Related_Posts.min.js"></script>
<script src="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/86933076631/1741488758324/module_CR_-_Sticky_CTA_Bar.min.js"></script>

<!-- Start of HubSpot Analytics Code -->
<script type="text/javascript">
var _hsq = _hsq || [];
_hsq.push(["setContentType", "blog-post"]);
_hsq.push(["setCanonicalUrl", "https:\/\/www.cybereason.com\/blog\/research\/threat-analysis-report-inside-the-lockbit-arsenal-the-stealbit-exfiltration-tool"]);
_hsq.push(["setPageId", "62011966600"]);
_hsq.push(["setContentMetadata", {
    "contentPageId": 62011966600,
    "legacyPageId": "62011966600",
    "contentFolderId": null,
    "contentGroupId": 5272851739,
    "abTestId": null,
    "languageVariantId": 62011966600,
    "languageCode": "en",
    
    
}]);
</script>

<script type="text/javascript" id="hs-script-loader" async defer src="/hs/scriptloader/3354902.js"></script>
<!-- End of HubSpot Analytics Code -->


<script type="text/javascript">
var hsVars = {
    render_id: "b66e9b5c-984a-41c3-a5a9-28a450689f35",
    ticks: 1745552585512,
    page_id: 62011966600,
    
    content_group_id: 5272851739,
    portal_id: 3354902,
    app_hs_base_url: "https://app.hubspot.com",
    cp_hs_base_url: "https://cp.hubspot.com",
    language: "en",
    analytics_page_type: "blog-post",
    scp_content_type: "",
    
    analytics_page_id: "62011966600",
    category_id: 3,
    folder_id: 0,
    is_hubspot_user: false
}
</script>


<script defer src="/hs/hsstatic/HubspotToolsMenu/static-1.432/js/index.js"></script>

<script>if ($('[id^="hs_form"]').length > 0) {
  var myInterval = setInterval(
  function() {
    var myFields = document.getElementsByClassName('hs-input');
    if (myFields.length > 0) {
      clearInterval(myInterval);
      for (var i = 0; i < myFields.length; i++) {
        var myField = myFields[i];
		var myTagName = myField.tagName.toLowerCase();
        if (myTagName == 'input' || myTagName == 'textarea') {
          if (myField.placeholder != null) {
            myField.placeholder = myField.placeholder.replace('*', '');
          }
        } else if (myTagName == 'select') {
          myField.options[0].innerHTML = myField.options[0].innerHTML.replace('*', '');
        }
      }
    }
  }, 100);
}
</script>

<div id="fb-root"></div>
  <script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_GB/sdk.js#xfbml=1&version=v3.0";
  fjs.parentNode.insertBefore(js, fjs);
 }(document, 'script', 'facebook-jssdk'));</script> <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="https://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>
 


    <script>
function sticky_relocate() {
  var window_top = $(window).scrollTop();
  var div_top = $('#sticky-anchor').offset().top;
  if (window_top > div_top) {
    $('#sticky').addClass('stick');
  } else {
    $('#sticky').removeClass('stick');
  }
}

$(function() {
  $(window).scroll(sticky_relocate);
  sticky_relocate();
});
</script>
    <!-- Generated by the HubSpot Template Builder - template version 1.03 -->

<script type="text/javascript" src="/_Incapsula_Resource?SWJIYLWA=719d34d31c8e3a6e6fffd425f7e032f3&ns=2&cb=31694395" async></script></body></html>