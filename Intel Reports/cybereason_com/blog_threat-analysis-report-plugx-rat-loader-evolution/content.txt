<!doctype html><!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en" > <![endif]--><!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en" >        <![endif]--><!--[if IE 8]>    <html class="no-js lt-ie9" lang="en" >               <![endif]--><!--[if gt IE 8]><!--><html class="no-js" lang="en"><!--<![endif]--><head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="author" content="Cybereason Global SOC Team">
    <meta name="description" content="PlugX is a post-exploitation modular RAT (Remote Access Trojan), which is known for its multiple functionalities such as data exfiltration, keystroke grabbing, backdoor functionality, and utilizing DLL-Sideloading techniques for evading security solutions...">
    <meta name="generator" content="HubSpot">
    <title>THREAT ANALYSIS REPORT: PlugX RAT Loader Evolution</title>
    <link rel="shortcut icon" href="https://www.cybereason.com/hubfs/cr-favicon-1.png">
    
<meta name="viewport" content="width=device-width, initial-scale=1">

    
    <meta property="og:description" content="PlugX is a post-exploitation modular RAT (Remote Access Trojan), which is known for its multiple functionalities such as data exfiltration, keystroke grabbing, backdoor functionality, and utilizing DLL-Sideloading techniques for evading security solutions...">
    <meta property="og:title" content="THREAT ANALYSIS REPORT: PlugX RAT Loader Evolution">
    <meta name="twitter:description" content="PlugX is a post-exploitation modular RAT (Remote Access Trojan), which is known for its multiple functionalities such as data exfiltration, keystroke grabbing, backdoor functionality, and utilizing DLL-Sideloading techniques for evading security solutions...">
    <meta name="twitter:title" content="THREAT ANALYSIS REPORT: PlugX RAT Loader Evolution">

    

    
    <style>
a.cta_button{-moz-box-sizing:content-box !important;-webkit-box-sizing:content-box !important;box-sizing:content-box !important;vertical-align:middle}.hs-breadcrumb-menu{list-style-type:none;margin:0px 0px 0px 0px;padding:0px 0px 0px 0px}.hs-breadcrumb-menu-item{float:left;padding:10px 0px 10px 10px}.hs-breadcrumb-menu-divider:before{content:'›';padding-left:10px}.hs-featured-image-link{border:0}.hs-featured-image{float:right;margin:0 0 20px 20px;max-width:50%}@media (max-width: 568px){.hs-featured-image{float:none;margin:0;width:100%;max-width:100%}}.hs-screen-reader-text{clip:rect(1px, 1px, 1px, 1px);height:1px;overflow:hidden;position:absolute !important;width:1px}
</style>

<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/41681847227/1741488491170/module_CR_-_Malicious_Life_Network_--_Tier_One_Header.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/41682410610/1741488492472/module_CR_-_Malicious_Life_Network_--_Main_Hero.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/43300360745/1741488505140/module_CR_-_Malicious_Life_Network_--_Related_Posts.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/86933076631/1741488758324/module_CR_-_Sticky_CTA_Bar.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/34473990280/1740999337265/module_CR_-_Footer_Full__en_US.min.css">
    

    
<!--  Added by GoogleTagManager integration -->
<script>
var _hsp = window._hsp = window._hsp || [];
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}

var useGoogleConsentModeV2 = true;
var waitForUpdateMillis = 1000;



var hsLoadGtm = function loadGtm() {
    if(window._hsGtmLoadOnce) {
      return;
    }

    if (useGoogleConsentModeV2) {

      gtag('set','developer_id.dZTQ1Zm',true);

      gtag('consent', 'default', {
      'ad_storage': 'denied',
      'analytics_storage': 'denied',
      'ad_user_data': 'denied',
      'ad_personalization': 'denied',
      'wait_for_update': waitForUpdateMillis
      });

      _hsp.push(['useGoogleConsentModeV2'])
    }

    (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
    j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
    'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-TJVVB7C');

    window._hsGtmLoadOnce = true;
};

_hsp.push(['addPrivacyConsentListener', function(consent){
  if(consent.allowed || (consent.categories && consent.categories.analytics)){
    hsLoadGtm();
  }
}]);

</script>

<!-- /Added by GoogleTagManager integration -->


<script src="https://use.typekit.net/vyv2ljd.js"></script>
<script>try{Typekit.load({ async: false });}catch(e){}</script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<link rel="preload" href="/hubfs/__dam/fonts/ionicons.eot" as="font" type="font/otf" crossorigin>
<link rel="preload" href="/hubfs/dam/fonts/criteria/Criteria-CF-Regular.woff2" as="font" type="font/woff2" crossorigin>
<link rel="preload" href="/hubfs/dam/fonts/criteria/Criteria-CF-Medium.woff2" as="font" type="font/woff2" crossorigin>
<link rel="preload" href="/hubfs/dam/fonts/peristyle/Peristyle-Black.woff2" as="font" type="font/woff2" crossorigin>
<link rel="amphtml" href="https://www.cybereason.com/blog/threat-analysis-report-plugx-rat-loader-evolution?hs_amp=true">

<meta property="og:image" content="https://www.cybereason.com/hubfs/blog-post-text%20-%202022-09-07T090944.782.png">
<meta property="og:image:width" content="1200">
<meta property="og:image:height" content="628">

<meta name="twitter:image" content="https://www.cybereason.com/hubfs/blog-post-text%20-%202022-09-07T090944.782.png">


<meta property="og:url" content="https://www.cybereason.com/blog/threat-analysis-report-plugx-rat-loader-evolution">
<meta name="twitter:card" content="summary_large_image">

<link rel="canonical" href="https://www.cybereason.com/blog/threat-analysis-report-plugx-rat-loader-evolution">

<meta property="og:type" content="article">
<link rel="alternate" type="application/rss+xml" href="https://www.cybereason.com/blog/rss.xml">
<meta name="twitter:domain" content="www.cybereason.com">
<script src="//platform.linkedin.com/in.js" type="text/javascript">
    lang: en_US
</script>

<meta http-equiv="content-language" content="en">
<link rel="stylesheet" href="//7052064.fs1.hubspotusercontent-na1.net/hubfs/7052064/hub_generated/template_assets/DEFAULT_ASSET/1752783280950/template_layout.min.css">


<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/template_assets/1/34470223313/1741528336747/template_cr-master__cta.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/template_assets/1/34470477360/1743626992502/template_cr-master__main.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/template_assets/1/35275979682/1741528339661/template_ionicons.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/template_assets/1/42760289143/1741528346957/template_cr-mln__build.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/template_assets/1/34470224480/1741528337131/template_cr-framework__bulma-columns.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/template_assets/1/35291999472/1741528340159/template_cr-framework__bulma.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/template_assets/1/42363645447/1741528345735/template_hamburger-animation.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/template_assets/1/42507091846/1741528346726/template_animate.min.css">


    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&amp;display=swap" rel="stylesheet">
<script src="/hubfs/dam/plugins/marker-animation.js"></script>
<script>
$(document).ready(function() {
  $('.highlight').markerAnimation({
    "color":'var(--cr-yellow)',
    "font_weight":'normal',
    "background-size": '200% 1.2em'
  });
});
</script>

    

</head>
<body class="   hs-content-id-84230124556 hs-blog-post hs-blog-id-5272851739" style="">
<!--  Added by GoogleTagManager integration -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-TJVVB7C" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>

<!-- /Added by GoogleTagManager integration -->

    <div class="header-container-wrapper">
    <div class="header-container container-fluid">

<div class="row-fluid-wrapper row-depth-1 row-number-1 ">
<div class="row-fluid ">
<div class="span12 widget-span widget-type-custom_widget " style="" data-widget-type="custom_widget" data-x="0" data-w="12">
<div id="hs_cos_wrapper_module_1615433790649568" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module"><section id="cr-malicious-life-network__tier-one-header" class="position-flex">
  <div class="#">
    <div id="logo"><a href="https://www.cybereason.com"><img src="https://www.cybereason.com/hubfs/dam/images/images-web/logos/cr-brand/cr-logo-inline--primary-black.png"></a></div>
    <div id="back-to">
      <a href="https://www.cybereason.com">Back to <span>Cybereason.com</span></a>
    </div>
    <!-- Hamburger Menu -->
    <button class="hamburger hamburger--collapse" type="button">
      <span class="hamburger-box">
        <span class="hamburger-inner"></span>
      </span>
    </button>
    <div class="cr-mln__hamburger-menu--overlay">
      <ul>
        <li><a href="https://www.cybereason.com/blog/all"><span class="underline">All Posts</span></a></li>
        <li><a href="/blog/category/research"><span class="underline">Research</span></a></li>
        <li><a href="/blog/category/podcasts"><span class="underline">Podcasts</span></a></li>
        <li><a href="/blog/category/webinars"><span class="underline">Webinars</span></a></li>
        <li><a href="/blog/category/resources"><span class="underline">Resources</span></a></li>
        <li><a href="/blog/category/videos"><span class="underline">Videos</span></a></li>
        <li><a href="/blog/category/news"><span class="underline">News</span></a></li>
      </ul>
      <div class="subscribe">
        <a href="#blog-subscribe">Subscribe</a>
      </div>
    </div>
    <!-- -->
  </div>
</section></div>

</div><!--end widget-span -->
</div><!--end row-->
</div><!--end row-wrapper -->

<div class="row-fluid-wrapper row-depth-1 row-number-2 ">
<div class="row-fluid ">
<div class="span12 widget-span widget-type-custom_widget mln-homepage" style="" data-widget-type="custom_widget" data-x="0" data-w="12">
<div id="hs_cos_wrapper_module_1615433785464566" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module"><section class="cr-malicious-life-network__hero-main base">
  <div class="container-is-blog columns hero-content page-center">
    <div class="column is-5-fullhd is-5-desktop is-12-touch">
      <a href="/blog"><img class="cr-mln-logo" src="https://www.cybereason.com/hubfs/dam/images/images-web/logos/cr-brand/cr-malicious-life-logo-v2.png"></a>
    </div>
    <div class="column is-7-fullhd is-7-desktop is-hidden-mobile is-hidden-tablet-only">
      <div class="cr-mln__search-subscribe">
        <div class="cr-mln__search">
          <a href="#cr-search-modal" class="search-btn"><img src="https://www.cybereason.com/hubfs/dam/images/images-web/blog-images/template-images/cr-blog-icon--search-dark-gray.png" alt="Search"></a>
        </div>
        <div class="cr-mln__subscribe">
          <a class="btn-subscribe" href="#blog-subscribe">Subscribe</a>
        </div>
      </div>
      <div class="cr-mln__category-nav">
        <ul>
          <li><a href="/blog/category/all"><span class="underline">All</span></a></li>
          <li><a href="/blog/category/research"><span class="underline">Research</span></a></li>
          <li><a href="/blog/category/podcasts"><span class="underline">Podcasts</span></a></li>
          <li><a href="/blog/category/webinars"><span class="underline">Webinars</span></a></li>
          <li><a href="/blog/category/resources"><span class="underline">Resources</span></a></li>
          <li><a href="/blog/category/videos"><span class="underline">Videos</span></a></li>
          <li><a href="/blog/category/news"><span class="underline">News</span></a></li>
        </ul>
      </div>
    </div>
  </div>
      <!-- MOBILE Search and Subscribe -->
      <div class="container-is-blog columns is-gapless is-hidden-desktop cr-mln__search-subscribe--mobile">
        <div class="column">
          <a class="search-btn">Search</a>
        </div>
        <div class="column">
          <a class="#" href="#blog-subscribe">Subscribe</a>
        </div>
      </div>

      <!-- END MOBILE Search and Subscribe -->
  
  <!-- SEARCH Modal Wrap -->

  <div id="cr-search-modal">
        <!--THIS IS IMPORTANT! to close the modal, the class name has to match the name given on the ID -->
        <div id="btn-close-modal" class="close-cr-search-modal"> 
            X
        </div>

        <div class="modal-content">
            <div class="container columns">
              <div class="column">
                <div class="cr-search-modal__search-bar">
                  <h3>Search</h3>
                  <form action="/hs-search-results">
                    <input type="search" class="hs-search-field__input" name="term" autocomplete="on" placeholder="Search...">
                    <input type="hidden" name="type" value="BLOG_POST">
                    <input type="hidden" name="type" value="LISTING_PAGE">
                    <button type="submit" class="arrow"></button>
                  </form>
                  
                </div>

              </div>
          </div>
        </div>
    </div>
  <!-- END Search Modal Wrap -->

</section></div>

</div><!--end widget-span -->
</div><!--end row-->
</div><!--end row-wrapper -->

    </div><!--end header -->
</div><!--end header wrapper -->

<div class="body-container-wrapper">
    <div class="body-container container-fluid">

<div class="row-fluid-wrapper row-depth-1 row-number-1 ">
<div class="row-fluid ">
<div class="span12 widget-span widget-type-blog_content " style="" data-widget-type="blog_content" data-x="0" data-w="12">







<div class="cr-mln__blog-post">
  <div class="container-is-blog columns is-multiline page-center">

    <div class="column is-8-fullhd is-8-desktop is-offset-2-fullhd is-offset-2-desktop is-10-tablet is-offset-1-tablet">
      <div class="featured-image"><img src="https://www.cybereason.com/hubfs/blog-post-text%20-%202022-09-07T090944.782.png" alt=""></div>
      <h1><span id="hs_cos_wrapper_name" class="hs_cos_wrapper hs_cos_wrapper_meta_field hs_cos_wrapper_type_text" style="" data-hs-cos-general-type="meta_field" data-hs-cos-type="text">THREAT ANALYSIS REPORT: PlugX RAT Loader Evolution</span></h1>
      <div class="cr-mln__post-author-share">
      <div id="hubspot-author_data" class="hubspot-editable cr-mln__post-meta" data-hubspot-form-id="author_data" data-hubspot-name="Blog Author">
        
          <span class="descriptor">Written By</span>
          <p><span class="author">Cybereason Global SOC Team</span></p>
         
      </div>
    </div>
     
    </div>
    
    <!-- Sticky Author and Social Box -->
    
    <!-- END Sticky Author and Social Box -->
      <div class="container-is-blog columns is-multiline page-center cr-mln__blog-post--body">
        
        <div class="column is-7-fullhd is-7-desktop is-10-tablet is-10-mobile is-offset-1-fullhd is-offset-1-desktop is-offset-1-tablet is-offset-1-mobile">
          <span id="hs_cos_wrapper_post_body" class="hs_cos_wrapper hs_cos_wrapper_meta_field hs_cos_wrapper_type_rich_text" style="" data-hs-cos-general-type="meta_field" data-hs-cos-type="rich_text"><p>The <a href="/blog/authors/cybereason-global-soc-team" rel="noopener" target="_blank"><span>Cybereason Global Security Operations Center (GSOC) Team</span></a> issues <a href="/blog/category/research" rel="noopener" target="_blank"><span>Threat Analysis Reports</span></a> to inform on impacting threats. The Threat Analysis Reports investigate these threats and provide practical recommendations for protecting against them.</p>
<!--more-->
<p>In this Threat Analysis report, the Cybereason GSOC investigates the <a href="https://attack.mitre.org/software/S0013/" rel="noopener" target="_blank"><span>PlugX</span></a> malware family, a modular Remote Access Tool/Trojan (RAT) often utilized by Asia-based APT groups such as <a href="https://attack.mitre.org/groups/G0027/" rel="noopener" target="_blank"><span>APT27</span></a>. The malware has backdoor capabilities to take full control of the environment with its many malicious “plugins.”</p>
<p>This report provides an overview of the PlugX loader as well as modifications across multiple samples (six in total) starting from the year 2012 to 2022.&nbsp;</p>
<h2 style="font-weight: normal;"><span style="font-size: 30px;">Key Points</span></h2>
<ul>
<li aria-level="1"><strong>The Rule of Three</strong>: The malware may be delivered differently depending on the campaigns such as whether the initial delivering format is self de-archiving or not. However, the PlugX loader always consists of three main components: a legitimate executable, a malicious module, and a malicious payload. The malware has been around for over a decade, but the format of the malware has not changed.</li>
</ul>
<ul>
<li aria-level="1"><strong>Security Evasion-Focused Techniques</strong>: PlugX loader is known for utilizing <a href="https://attack.mitre.org/techniques/T1574/002/" rel="noopener" target="_blank"><span>DLL-Sideloading</span></a> techniques for evasion purposes. However, the malware is packing additional evasion techniques. This increases the chance of deploying the main PlugX payload successfully.</li>
</ul>
<ul>
<li aria-level="1"><strong>Detected and Prevented</strong>: The <a href="/platform#graphic" rel="noopener" target="_blank"><span>Cybereason Defense Platform</span></a> effectively detects and prevents the PlugX malware.&nbsp;</li>
</ul>
<h2><span style="font-size: 30px;">Introduction</span></h2>
<p><a href="https://attack.mitre.org/software/S0013/"><span>PlugX</span></a> is a post-exploitation modular RAT (Remote Access Trojan), which, among other things, is known for its multiple functionalities such as data exfiltration, keystroke grabbing, and backdoor functionality. The malware’s first publications and research papers date back to 2012.&nbsp;</p>
<p>However, according to <a href="https://web.archive.org/web/20121026140131/https://blog.trendmicro.com/trendlabs-security-intelligence/plugx-new-tool-for-a-not-so-new-campaign/" rel="noopener" target="_blank"><span>Trend Micro</span></a>, the malware has actually been around since 2008. PlugX was already making a name for itself back in 2012 due to high activity within Asia.&nbsp;</p>
<p>This may have been due to the fact that the PlugX <a href="https://cybersecurity.att.com/blogs/labs-research/tracking-down-the-author-of-the-plugx-rat" rel="noopener" target="_blank"><span>malware authors</span></a> were tied to China and the operators of this malware at the time were located within Asian countries. Since then, the malware has been active and utilized by many threat actors for over the past decade. The malware had many updates over the years and it does not appear to be going away anytime soon.</p>
<p>From its original version, the PlugX malware has been primarily used against public-sector organizations such as governments and various political organizations. In addition, advanced threat actors utilize the malware heavily to target high profile private organizations.&nbsp;</p>
<p>For example, in June 2016, Japan’s leading <a href="https://www.japantimes.co.jp/news/2016/06/15/business/corporate-business/personal-info-7-93-million-people-may-leaked-japans-biggest-travel-agency/#.V2ESV5MrInU" rel="noopener" target="_blank"><span>tourism agency</span></a> announced the leak of privacy data of 7.93 million users, which was later identified by <a href="https://internet.watch.impress.co.jp/docs/news/1005842.html" rel="noopener" target="_blank"><span>Trellix</span></a> as an attack utilizing PlugX. The malware was also seen utilized outside of Asian countries when it targeted <a href="https://www.proofpoint.com/us/threat-insight/post/APT-targets-russia-belarus-zerot-plugx" rel="noopener" target="_blank"><span>military and aerospace</span></a> interests in Belarus and Russia.&nbsp;</p>
<p>This may be the indicator that the malware operators for PlugX were expanding their markets and targets. Most recently, the malware was utilized to target <a href="https://socprime.com/blog/plugx-malware-used-by-china-aligned-apt-actor-ta416-targets-european-allies-to-cripple-ukrainian-refugee-services/" rel="noopener" target="_blank"><span>European government agencies</span></a> which aided Ukrainian refugees from the recent Russia-Ukraine War.&nbsp;</p>
<p>PlugX loader is commonly delivered via phishing emails and it is also seen delivered by exploiting a vulnerability such as ProxyLogon according to <a href="https://unit42.paloaltonetworks.com/thor-plugx-variant/" rel="noopener" target="_blank"><span>Unit 42 from Palo Alto Networks</span></a>. The malware is often delivered as an archived formatted file such as .zip, .rar or self-extracting RAR (SFX) archive.&nbsp;</p>
<p>Within this archived file format, the malware contains three main files:&nbsp;</p>
<ul>
<li aria-level="1">legitimate executable</li>
<li aria-level="1">malicious module</li>
<li aria-level="1">malicious payload</li>
</ul>
<p>The malware utilizes <a href="https://attack.mitre.org/techniques/T1574/002/" rel="noopener" target="_blank"><span>DLL Side-Loading</span></a> as a main method to load a malicious DLL from a legitimate executable, like Acrobat Reader or a legacy Microsoft binary, for instance. The benefits of using DLL Side-Loading is that the malware can hijack and masquerade the legitimate executable by loading malicious modules. DLL Side-loading not only allows for evasion of security tools, but also allows malware developers to have a variety of options into which legitimate executable to side-load the PlugX payload:</p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/image9-Sep-07-2022-06-31-03-04-PM.png?width=1999&amp;name=image9-Sep-07-2022-06-31-03-04-PM.png" alt="image9-Sep-07-2022-06-31-03-04-PM" width="1999" loading="lazy" style="width: 1999px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/image9-Sep-07-2022-06-31-03-04-PM.png?width=1000&amp;name=image9-Sep-07-2022-06-31-03-04-PM.png 1000w, https://www.cybereason.com/hs-fs/hubfs/image9-Sep-07-2022-06-31-03-04-PM.png?width=1999&amp;name=image9-Sep-07-2022-06-31-03-04-PM.png 1999w, https://www.cybereason.com/hs-fs/hubfs/image9-Sep-07-2022-06-31-03-04-PM.png?width=2999&amp;name=image9-Sep-07-2022-06-31-03-04-PM.png 2999w, https://www.cybereason.com/hs-fs/hubfs/image9-Sep-07-2022-06-31-03-04-PM.png?width=3998&amp;name=image9-Sep-07-2022-06-31-03-04-PM.png 3998w, https://www.cybereason.com/hs-fs/hubfs/image9-Sep-07-2022-06-31-03-04-PM.png?width=4998&amp;name=image9-Sep-07-2022-06-31-03-04-PM.png 4998w, https://www.cybereason.com/hs-fs/hubfs/image9-Sep-07-2022-06-31-03-04-PM.png?width=5997&amp;name=image9-Sep-07-2022-06-31-03-04-PM.png 5997w" sizes="(max-width: 1999px) 100vw, 1999px"></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em>PlugX infection flow. View Loading PlugX Process FlowChart</em></span><span style="font-style: italic;"></span></p>
<p>DLL Side-Loading is one of many evasive aspects that this malware has in its arsenal, and which this analysis describes in depth:</p>
<h2><span style="font-size: 30px;">Technical Analysis</span></h2>
<p>The technical analysis focuses on the PlugX loader’s deployment method and specifically <a href="https://docs.google.com/document/d/1-SUo47KAgSi3A4Rbu-ebnQ_EFb_uLZyRfmYyqXdBgaY/edit#heading=h.pmw32qblsr8g" rel="noopener" target="_blank"><span>PlugX Loader Analysis</span></a> focuses on three files with the following sample Secure Hash Algorithm (SHA)-256. These files were introduced in this <a href="https://cybersecurity.att.com/blogs/labs-research/the-connection-between-the-plugx-chinese-gang-and-the-latest-internet-explo" rel="noopener" target="_blank"><span>article</span></a> from 2012:</p>
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2; height: 234.258px; width: 810px;">
<tbody>
<tr style="height: 49.3164px;">
<td style="background-color: #b7b7b7; border: 1pt solid #000000; width: 152.09px; height: 49px;">
<p style="text-align: center;"><span style="color: #ffffff;">Filename</span></p>
</td>
<td style="background-color: #b7b7b7; border: 1pt solid #000000; width: 656.582px; height: 49px;">
<p style="text-align: center;"><span style="color: #ffffff;">SHA-256</span></p>
</td>
</tr>
<tr style="height: 77.3047px;">
<td style="border: 1pt solid #000000; width: 152.09px; height: 77px;">
<p style="text-align: center;"><span style="font-size: 16px;">Nv.exe (legitimate)</span></p>
</td>
<td style="border: 1pt solid #000000; width: 656.582px; height: 77px;">
<p><span style="font-size: 16px;">523D28DF917F9D265CD2C0D38DF26277BC56A535145100ED82E6F5FDEAAE7256</span></p>
</td>
</tr>
<tr style="height: 56.9922px;">
<td style="border: 1pt solid #000000; width: 152.09px; height: 57px;">
<p style="text-align: center;"><span style="font-size: 16px;">NvSmartMax.dll</span></p>
</td>
<td style="border: 1pt solid #000000; width: 656.582px; height: 57px;">
<p><span style="font-size: 16px;">EAAA7899B37A3B04DCD02AD6D51E83E035BE535F129773621EF0F399A2A98EE3</span></p>
</td>
</tr>
<tr style="height: 49.3164px;">
<td style="border: 1pt solid #000000; width: 152.09px; height: 49px;">
<p style="text-align: center;"><span style="font-size: 16px;">Nv.mp3</span></p>
</td>
<td style="border: 1pt solid #000000; width: 656.582px; height: 49px;">
<p><span style="font-size: 16px;">3D64E638F961B922398E2EFAF75504DA007E41EA979F213F8EB4F83E00EFEEBB</span></p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>The malware utilizes <a href="https://attack.mitre.org/techniques/T1574/002/" rel="noopener" target="_blank"><span>DLL Side-Loading</span></a> technique by leveraging the legitimate executable (<em>Nv.exe</em>) to load a malicious module (<em>NvSmartMax.dll</em>), which loads an additional malicious payload (<em>Nv.mp3</em>) to prepare for an actual PlugX payload.&nbsp;</p>
<p>The <a href="https://docs.google.com/document/d/1-SUo47KAgSi3A4Rbu-ebnQ_EFb_uLZyRfmYyqXdBgaY/edit#heading=h.ctha52c238ob" rel="noopener" target="_blank"><span>Comparative Analysis</span></a> compares different PlugX loader samples to provide the modifications of deployment methods.</p>
<h3 style="font-weight: normal;"><span style="color: #434343; font-size: 24px;">PlugX Loader Analysis</span></h3>
<p>This section describes the deployment of the PlugX loader in the specific case of the use of Nv.exe as the DLL side-loader. The chapter ends with the PlugX payload loaded in memory:</p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/image6-Sep-07-2022-06-31-36-78-PM.png?width=1773&amp;name=image6-Sep-07-2022-06-31-36-78-PM.png" alt="image6-Sep-07-2022-06-31-36-78-PM" width="1773" loading="lazy" style="width: 1773px;" srcset="https://www.cybereason.com/hs-fs/hubfs/image6-Sep-07-2022-06-31-36-78-PM.png?width=887&amp;name=image6-Sep-07-2022-06-31-36-78-PM.png 887w, https://www.cybereason.com/hs-fs/hubfs/image6-Sep-07-2022-06-31-36-78-PM.png?width=1773&amp;name=image6-Sep-07-2022-06-31-36-78-PM.png 1773w, https://www.cybereason.com/hs-fs/hubfs/image6-Sep-07-2022-06-31-36-78-PM.png?width=2660&amp;name=image6-Sep-07-2022-06-31-36-78-PM.png 2660w, https://www.cybereason.com/hs-fs/hubfs/image6-Sep-07-2022-06-31-36-78-PM.png?width=3546&amp;name=image6-Sep-07-2022-06-31-36-78-PM.png 3546w, https://www.cybereason.com/hs-fs/hubfs/image6-Sep-07-2022-06-31-36-78-PM.png?width=4433&amp;name=image6-Sep-07-2022-06-31-36-78-PM.png 4433w, https://www.cybereason.com/hs-fs/hubfs/image6-Sep-07-2022-06-31-36-78-PM.png?width=5319&amp;name=image6-Sep-07-2022-06-31-36-78-PM.png 5319w" sizes="(max-width: 1773px) 100vw, 1773px"><span style="font-size: 16px;"></span></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em>PlugX Loader Summary</em></span></p>
<h4 style="font-weight: normal;">OS Datetime Check</h4>
<p>When the legitimate executable <em>Nv.exe</em> first executes and side-loads the PlugX loader module <em>NvSmartMax.dll</em>, the module first checks the OS date and time with the <a href="https://docs.microsoft.com/en-us/windows/win32/api/sysinfoapi/nf-sysinfoapi-getsystemtime" rel="noopener" target="_blank"><em><span>GetSystemTime</span></em></a> method, which then calculates the output with the following formula.</p>
<p style="padding-left: 40px;">Result = ( (OS_Year * 100) + OS_Month ) * 100 + OS_Date</p>
<p>The result of the equation is expected to be a hex value, which is then compared with the value <em>0x1330225</em>, which is equivalent to the date 2012-01-01. The execution of this method enables the <em>NvSmartMax.dll</em> to check if the OS date and time is later than 2012-01-01.&nbsp;</p>
<p>If the date and time is later than 2012-01-01, the DLL execution exits. This checking mechanism is assumed to be for malware’s release purpose and prohibits its usage before its official release:</p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-27-03-92-PM.png?width=1002&amp;name=Capture-Sep-07-2022-04-27-03-92-PM.png" alt="Capture-Sep-07-2022-04-27-03-92-PM" width="1002" loading="lazy" style="width: 1002px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-27-03-92-PM.png?width=501&amp;name=Capture-Sep-07-2022-04-27-03-92-PM.png 501w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-27-03-92-PM.png?width=1002&amp;name=Capture-Sep-07-2022-04-27-03-92-PM.png 1002w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-27-03-92-PM.png?width=1503&amp;name=Capture-Sep-07-2022-04-27-03-92-PM.png 1503w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-27-03-92-PM.png?width=2004&amp;name=Capture-Sep-07-2022-04-27-03-92-PM.png 2004w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-27-03-92-PM.png?width=2505&amp;name=Capture-Sep-07-2022-04-27-03-92-PM.png 2505w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-27-03-92-PM.png?width=3006&amp;name=Capture-Sep-07-2022-04-27-03-92-PM.png 3006w" sizes="(max-width: 1002px) 100vw, 1002px"></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em>OS datetime check</em></span></p>
<h4 style="font-weight: normal;">Control Flow Manipulation</h4>
<p>After the OS date and time is confirmed to be later than 2012-01-01, the <em>NvSmartMax.dll</em> fetches the address of <em>Nv.exe</em>’s EntryPoint and proceeds to update the page protection of the EntryPoint by calling the <a href="https://docs.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-virtualprotect" rel="noopener" target="_blank"><em><span>VirtualProtect</span></em></a> function. <em>NvSmartMax.dll</em> updates the <em>Nv.exe</em>’s EntryPoint’s page protection to <em>PAGE_EXECUTE_READWRITE</em> to prepare a modification on the EntryPoint:</p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-05-20-17-67-PM.png?width=882&amp;name=Capture-Sep-07-2022-05-20-17-67-PM.png" alt="Capture-Sep-07-2022-05-20-17-67-PM" width="882" loading="lazy" style="width: 882px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-05-20-17-67-PM.png?width=441&amp;name=Capture-Sep-07-2022-05-20-17-67-PM.png 441w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-05-20-17-67-PM.png?width=882&amp;name=Capture-Sep-07-2022-05-20-17-67-PM.png 882w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-05-20-17-67-PM.png?width=1323&amp;name=Capture-Sep-07-2022-05-20-17-67-PM.png 1323w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-05-20-17-67-PM.png?width=1764&amp;name=Capture-Sep-07-2022-05-20-17-67-PM.png 1764w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-05-20-17-67-PM.png?width=2205&amp;name=Capture-Sep-07-2022-05-20-17-67-PM.png 2205w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-05-20-17-67-PM.png?width=2646&amp;name=Capture-Sep-07-2022-05-20-17-67-PM.png 2646w" sizes="(max-width: 882px) 100vw, 882px"></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em>PAGE_EXECUTE_READWRITE</em></span></p>
<p>The <em>NvSmartMax.dll</em> module proceeds to patch the EntryPoint to jump into a function at offset 0x1020 in <em>NvSmartMax.dll</em>. The malware appears to be utilizing control flow manipulation as an obfuscation method against static analysis:</p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-30-46-72-PM.png?width=1007&amp;name=Capture-Sep-07-2022-04-30-46-72-PM.png" alt="Capture-Sep-07-2022-04-30-46-72-PM" width="1007" loading="lazy" style="width: 1007px;" srcset="https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-30-46-72-PM.png?width=504&amp;name=Capture-Sep-07-2022-04-30-46-72-PM.png 504w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-30-46-72-PM.png?width=1007&amp;name=Capture-Sep-07-2022-04-30-46-72-PM.png 1007w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-30-46-72-PM.png?width=1511&amp;name=Capture-Sep-07-2022-04-30-46-72-PM.png 1511w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-30-46-72-PM.png?width=2014&amp;name=Capture-Sep-07-2022-04-30-46-72-PM.png 2014w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-30-46-72-PM.png?width=2518&amp;name=Capture-Sep-07-2022-04-30-46-72-PM.png 2518w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-30-46-72-PM.png?width=3021&amp;name=Capture-Sep-07-2022-04-30-46-72-PM.png 3021w" sizes="(max-width: 1007px) 100vw, 1007px"></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em>Nv.exe’s entry point patched</em></span></p>
<p>Once the control flow enters the EntryPoint of the <em>Nv.exe</em>, execution jumps to the patched address in <em>NvSmartMax.dll</em>. In the target function, the malware prepares to load the <em>Nv.mp3</em> by attempting the following steps:</p>
<ul>
<li aria-level="1">Check the OS date and time again - however, during this check, the verification checks for the year 2012</li>
<li aria-level="1">Prepare the malware file</li>
<li aria-level="1">Allocate memory</li>
<li aria-level="1">Read <em>Nv.mp3</em> into allocated memory</li>
<li aria-level="1">Update page protection to PAGE_EXECUTE_READ</li>
<li aria-level="1">Execute code located at <em>Nv.mp3</em></li>
</ul>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/image10-Sep-07-2022-06-34-01-70-PM.png?width=733&amp;name=image10-Sep-07-2022-06-34-01-70-PM.png" alt="image10-Sep-07-2022-06-34-01-70-PM" width="733" loading="lazy" style="width: 733px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/image10-Sep-07-2022-06-34-01-70-PM.png?width=367&amp;name=image10-Sep-07-2022-06-34-01-70-PM.png 367w, https://www.cybereason.com/hs-fs/hubfs/image10-Sep-07-2022-06-34-01-70-PM.png?width=733&amp;name=image10-Sep-07-2022-06-34-01-70-PM.png 733w, https://www.cybereason.com/hs-fs/hubfs/image10-Sep-07-2022-06-34-01-70-PM.png?width=1100&amp;name=image10-Sep-07-2022-06-34-01-70-PM.png 1100w, https://www.cybereason.com/hs-fs/hubfs/image10-Sep-07-2022-06-34-01-70-PM.png?width=1466&amp;name=image10-Sep-07-2022-06-34-01-70-PM.png 1466w, https://www.cybereason.com/hs-fs/hubfs/image10-Sep-07-2022-06-34-01-70-PM.png?width=1833&amp;name=image10-Sep-07-2022-06-34-01-70-PM.png 1833w, https://www.cybereason.com/hs-fs/hubfs/image10-Sep-07-2022-06-34-01-70-PM.png?width=2199&amp;name=image10-Sep-07-2022-06-34-01-70-PM.png 2199w" sizes="(max-width: 733px) 100vw, 733px"></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em>Prepare payload file name</em></span></p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/image15-Sep-07-2022-06-34-40-21-PM.png?width=733&amp;name=image15-Sep-07-2022-06-34-40-21-PM.png" alt="image15-Sep-07-2022-06-34-40-21-PM" width="733" loading="lazy" style="width: 733px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/image15-Sep-07-2022-06-34-40-21-PM.png?width=367&amp;name=image15-Sep-07-2022-06-34-40-21-PM.png 367w, https://www.cybereason.com/hs-fs/hubfs/image15-Sep-07-2022-06-34-40-21-PM.png?width=733&amp;name=image15-Sep-07-2022-06-34-40-21-PM.png 733w, https://www.cybereason.com/hs-fs/hubfs/image15-Sep-07-2022-06-34-40-21-PM.png?width=1100&amp;name=image15-Sep-07-2022-06-34-40-21-PM.png 1100w, https://www.cybereason.com/hs-fs/hubfs/image15-Sep-07-2022-06-34-40-21-PM.png?width=1466&amp;name=image15-Sep-07-2022-06-34-40-21-PM.png 1466w, https://www.cybereason.com/hs-fs/hubfs/image15-Sep-07-2022-06-34-40-21-PM.png?width=1833&amp;name=image15-Sep-07-2022-06-34-40-21-PM.png 1833w, https://www.cybereason.com/hs-fs/hubfs/image15-Sep-07-2022-06-34-40-21-PM.png?width=2199&amp;name=image15-Sep-07-2022-06-34-40-21-PM.png 2199w" sizes="(max-width: 733px) 100vw, 733px"></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em>Allocate and enter the payload</em></span></p>
<h4 style="font-weight: normal;">InInitialization Order Module List</h4>
<p>Once the control flow accesses the <em>Nv.mp3</em> memory region, it dynamically fetches the loaded module <em>kernel32.dll</em>’s base address from the <em>InInitializationOrderModuleList</em> within the Process Environment Block (PEB).</p>
<p><a href="https://docs.microsoft.com/en-us/windows/win32/api/winternl/ns-winternl-peb" rel="noopener" target="_blank"><span>PEB</span></a> is a data structure, which contains process information which is utilized internally by the operating system (OS). PEB is often utilized for anti-analysis techniques such as <a href="/blog/research/threat-analysis-report-inside-the-lockbit-arsenal-the-stealbit-exfiltration-tool#deep-dive" rel="noopener" target="_blank"><em><span>NtGlobalFlag</span></em></a> check, but it can also be used to fetch necessary module information.&nbsp;</p>
<p>At offset 0x0C within PEB, <a href="https://docs.microsoft.com/en-us/windows/win32/api/winternl/ns-winternl-peb_ldr_data" rel="noopener" target="_blank"><em><span>PEB_LDR_DATA</span></em> </a>structure is located which stores loaded module information. This structure has three members: <em>InLoadOrderModuleList</em>, <em>InMemoryOrderModuleList</em>, and <em>InInitializationOrderModuleList</em>:</p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-33-34-21-PM.png?width=984&amp;name=Capture-Sep-07-2022-04-33-34-21-PM.png" alt="Capture-Sep-07-2022-04-33-34-21-PM" width="984" loading="lazy" style="width: 984px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-33-34-21-PM.png?width=492&amp;name=Capture-Sep-07-2022-04-33-34-21-PM.png 492w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-33-34-21-PM.png?width=984&amp;name=Capture-Sep-07-2022-04-33-34-21-PM.png 984w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-33-34-21-PM.png?width=1476&amp;name=Capture-Sep-07-2022-04-33-34-21-PM.png 1476w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-33-34-21-PM.png?width=1968&amp;name=Capture-Sep-07-2022-04-33-34-21-PM.png 1968w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-33-34-21-PM.png?width=2460&amp;name=Capture-Sep-07-2022-04-33-34-21-PM.png 2460w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-33-34-21-PM.png?width=2952&amp;name=Capture-Sep-07-2022-04-33-34-21-PM.png 2952w" sizes="(max-width: 984px) 100vw, 984px"></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em>Fetching loaded modules from PEB_LDR_DATA</em></span></p>
<p>The code located in <em>Nv.mp3 </em>fetches <em>InInitializationOrderModuleList</em>, which includes all the loaded modules in order of initialization. This list does not include the executable itself, and it only lists the modules:</p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/image13-Sep-07-2022-06-37-42-85-PM.png?width=1999&amp;name=image13-Sep-07-2022-06-37-42-85-PM.png" alt="image13-Sep-07-2022-06-37-42-85-PM" width="1999" loading="lazy" style="width: 1999px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/image13-Sep-07-2022-06-37-42-85-PM.png?width=1000&amp;name=image13-Sep-07-2022-06-37-42-85-PM.png 1000w, https://www.cybereason.com/hs-fs/hubfs/image13-Sep-07-2022-06-37-42-85-PM.png?width=1999&amp;name=image13-Sep-07-2022-06-37-42-85-PM.png 1999w, https://www.cybereason.com/hs-fs/hubfs/image13-Sep-07-2022-06-37-42-85-PM.png?width=2999&amp;name=image13-Sep-07-2022-06-37-42-85-PM.png 2999w, https://www.cybereason.com/hs-fs/hubfs/image13-Sep-07-2022-06-37-42-85-PM.png?width=3998&amp;name=image13-Sep-07-2022-06-37-42-85-PM.png 3998w, https://www.cybereason.com/hs-fs/hubfs/image13-Sep-07-2022-06-37-42-85-PM.png?width=4998&amp;name=image13-Sep-07-2022-06-37-42-85-PM.png 4998w, https://www.cybereason.com/hs-fs/hubfs/image13-Sep-07-2022-06-37-42-85-PM.png?width=5997&amp;name=image13-Sep-07-2022-06-37-42-85-PM.png 5997w" sizes="(max-width: 1999px) 100vw, 1999px"></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em>InitializationOrderModuleList diagram</em></span></p>
<p>The <em>Nv.mp3 </em>searches through each element’s <em>BaseDllName</em>, until it finds kernel32.dll and retrieves the <em>BaseAddress</em> of the module.&nbsp;</p>
<p>Once the base address of kernel32.dll is retrieved, <em>Nv.mp3</em> fetches the function <a href="https://docs.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-getprocaddress" rel="noopener" target="_blank"><em><span>GetProcAddress</span></em></a> address in order to load the functions <em>LoadLibraryA</em>, <em>VirtualAlloc</em>, <em>VirtualFree</em>, and <em>ExitThread</em>, which appears to be loaded via <a href="https://isc.sans.edu/diary/Stackstrings%2C+type+2/26192" rel="noopener" target="_blank"><span>StackString</span></a> method:</p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-35-13-85-PM.png?width=623&amp;name=Capture-Sep-07-2022-04-35-13-85-PM.png" alt="Capture-Sep-07-2022-04-35-13-85-PM" width="623" loading="lazy" style="width: 623px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-35-13-85-PM.png?width=312&amp;name=Capture-Sep-07-2022-04-35-13-85-PM.png 312w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-35-13-85-PM.png?width=623&amp;name=Capture-Sep-07-2022-04-35-13-85-PM.png 623w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-35-13-85-PM.png?width=935&amp;name=Capture-Sep-07-2022-04-35-13-85-PM.png 935w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-35-13-85-PM.png?width=1246&amp;name=Capture-Sep-07-2022-04-35-13-85-PM.png 1246w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-35-13-85-PM.png?width=1558&amp;name=Capture-Sep-07-2022-04-35-13-85-PM.png 1558w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-35-13-85-PM.png?width=1869&amp;name=Capture-Sep-07-2022-04-35-13-85-PM.png 1869w" sizes="(max-width: 623px) 100vw, 623px"></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em>StackString libraries</em></span></p>
<p>Once all the function addresses are loaded from <em>kernel32.dll</em>, <em>Nv.mp3</em> loads the module <em>ntdll.dll</em> by using the <a href="https://docs.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-loadlibrarya" rel="noopener" target="_blank"><em><span>LoadLibraryA</span></em></a> function which was retrieved earlier by the <em>GetProcAddress </em>function. From <em>ntdll.dll</em>, <em>Nv.mp3</em> loads functions <em>RtlDecompressBuffer </em>and <em>memcpy</em>.</p>
<h4 style="font-weight: normal;">Plugx Payload Decompression</h4>
<p>The code located at <em>Nv.mp3</em> level proceeds to decrypt the RC4-encrypted strings which are stored within the payload at offset 0x1529 with size 117KB. The decrypted strings are a compressed version of a PE file, which performs the <a href="https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/ntifs/nf-ntifs-rtldecompressbuffer" rel="noopener" target="_blank"><em><span>RtlDecompressBuffer</span></em></a> function with LZ decompression format:</p>
<p style="padding-left: 40px;"><span style="font-family: 'Courier New', Courier, monospace;">NT_RTL_COMPRESS_API NTSTATUS RtlDecompressBuffer(</span></p>
<p style="padding-left: 40px;"><span style="font-family: 'Courier New', Courier, monospace;">&nbsp;[in] USHORT CompressionFormat,</span></p>
<p style="padding-left: 40px;"><span style="font-family: 'Courier New', Courier, monospace;">&nbsp;[out] PUCHAR UncompressedBuffer,</span></p>
<p style="padding-left: 40px;"><span style="font-family: 'Courier New', Courier, monospace;">&nbsp;[in] ULONG UncompressedBufferSize,</span></p>
<p style="padding-left: 40px;"><span style="font-family: 'Courier New', Courier, monospace;">&nbsp;[in] PUCHAR CompressedBuffer,</span></p>
<p style="padding-left: 40px;"><span style="font-family: 'Courier New', Courier, monospace;">&nbsp;[in] ULONG CompressedBufferSize,</span></p>
<p style="padding-left: 40px;"><span style="font-family: 'Courier New', Courier, monospace;">&nbsp;[out] PULONG FinalUncompressedSize</span></p>
<p style="padding-left: 40px;"><span style="font-family: 'Courier New', Courier, monospace;">);</span></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em>Figure 11: RtlDecompressBuffer Function Parameters</em></span></p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-37-30-53-PM.png?width=1009&amp;name=Capture-Sep-07-2022-04-37-30-53-PM.png" alt="Capture-Sep-07-2022-04-37-30-53-PM" width="1009" loading="lazy" style="width: 1009px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-37-30-53-PM.png?width=505&amp;name=Capture-Sep-07-2022-04-37-30-53-PM.png 505w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-37-30-53-PM.png?width=1009&amp;name=Capture-Sep-07-2022-04-37-30-53-PM.png 1009w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-37-30-53-PM.png?width=1514&amp;name=Capture-Sep-07-2022-04-37-30-53-PM.png 1514w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-37-30-53-PM.png?width=2018&amp;name=Capture-Sep-07-2022-04-37-30-53-PM.png 2018w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-37-30-53-PM.png?width=2523&amp;name=Capture-Sep-07-2022-04-37-30-53-PM.png 2523w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-37-30-53-PM.png?width=3027&amp;name=Capture-Sep-07-2022-04-37-30-53-PM.png 3027w" sizes="(max-width: 1009px) 100vw, 1009px"></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em>Decompressed Buffer</em></span></p>
<p>The decompressed PE file is an actual PlugX itself. However, the control flow does not immediately enter the decompressed payload. <em>Nv.mp3</em> places the “GULP” signature, which is the backward for “PLUG” in newly allocated memory by <a href="https://docs.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-virtualalloc" rel="noopener" target="_blank"><em><span>VirtualAlloc</span></em></a> with <em>PAGE_EXECUTE_READWRITE</em> protection. It proceeds to allocate each section’s .text, .rdata, .data, and .reloc by using the <a href="https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/memcpy-wmemcpy?view=msvc-170" rel="noopener" target="_blank"><em><span>memcpy</span></em></a> function into allocated memory.</p>
<p>Lastly, it loads necessary libraries and functions dynamically by using <em>LoadLibraryA </em>and <em>GetProcAddress </em>from the import table listed in the decompressed PE file. Once this preparation is done, it proceeds to enter the PlugX payload:</p>
<p style="text-align: center;"><img src="https://www.cybereason.com/hs-fs/hubfs/image16-Sep-07-2022-06-38-32-20-PM.png?width=647&amp;name=image16-Sep-07-2022-06-38-32-20-PM.png" alt="image16-Sep-07-2022-06-38-32-20-PM" width="647" loading="lazy" style="width: 647px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/image16-Sep-07-2022-06-38-32-20-PM.png?width=324&amp;name=image16-Sep-07-2022-06-38-32-20-PM.png 324w, https://www.cybereason.com/hs-fs/hubfs/image16-Sep-07-2022-06-38-32-20-PM.png?width=647&amp;name=image16-Sep-07-2022-06-38-32-20-PM.png 647w, https://www.cybereason.com/hs-fs/hubfs/image16-Sep-07-2022-06-38-32-20-PM.png?width=971&amp;name=image16-Sep-07-2022-06-38-32-20-PM.png 971w, https://www.cybereason.com/hs-fs/hubfs/image16-Sep-07-2022-06-38-32-20-PM.png?width=1294&amp;name=image16-Sep-07-2022-06-38-32-20-PM.png 1294w, https://www.cybereason.com/hs-fs/hubfs/image16-Sep-07-2022-06-38-32-20-PM.png?width=1618&amp;name=image16-Sep-07-2022-06-38-32-20-PM.png 1618w, https://www.cybereason.com/hs-fs/hubfs/image16-Sep-07-2022-06-38-32-20-PM.png?width=1941&amp;name=image16-Sep-07-2022-06-38-32-20-PM.png 1941w" sizes="(max-width: 647px) 100vw, 647px"><span style="font-size: 16px;"><em>PlugX payload header</em></span></p>
<h4 style="font-weight: normal;"><span style="font-size: 20px;">PlugX Loader Flowchart</span></h4>
<p>The following flowchart summarizes the flow of the PlugX loader:</p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/image2-Sep-07-2022-06-39-00-35-PM.png?width=1999&amp;name=image2-Sep-07-2022-06-39-00-35-PM.png" alt="image2-Sep-07-2022-06-39-00-35-PM" width="1999" loading="lazy" style="width: 1999px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/image2-Sep-07-2022-06-39-00-35-PM.png?width=1000&amp;name=image2-Sep-07-2022-06-39-00-35-PM.png 1000w, https://www.cybereason.com/hs-fs/hubfs/image2-Sep-07-2022-06-39-00-35-PM.png?width=1999&amp;name=image2-Sep-07-2022-06-39-00-35-PM.png 1999w, https://www.cybereason.com/hs-fs/hubfs/image2-Sep-07-2022-06-39-00-35-PM.png?width=2999&amp;name=image2-Sep-07-2022-06-39-00-35-PM.png 2999w, https://www.cybereason.com/hs-fs/hubfs/image2-Sep-07-2022-06-39-00-35-PM.png?width=3998&amp;name=image2-Sep-07-2022-06-39-00-35-PM.png 3998w, https://www.cybereason.com/hs-fs/hubfs/image2-Sep-07-2022-06-39-00-35-PM.png?width=4998&amp;name=image2-Sep-07-2022-06-39-00-35-PM.png 4998w, https://www.cybereason.com/hs-fs/hubfs/image2-Sep-07-2022-06-39-00-35-PM.png?width=5997&amp;name=image2-Sep-07-2022-06-39-00-35-PM.png 5997w" sizes="(max-width: 1999px) 100vw, 1999px"><span style="font-size: 16px; color: #434343;"></span></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em>Figure 14: PlugX loader flowchart</em></span><span style="font-size: 16px; color: #434343;"></span></p>
<h3 style="font-weight: normal;"><span style="color: #434343; font-size: 24px;">Comparative Analysis</span></h3>
<p>This comparative analysis analyzes the following six samples listed in the table below. The samples are observed in the past from various analyses from different reports. As a reference, the samples (executable, module, payload) are identified with codename with prefix <em>px_</em> followed by the relevant year that the samples were observed according to the external sources:</p>
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2; height: 968.667px;">
<tbody>
<tr style="height: 49.3333px;">
<td style="background-color: #b7b7b7; border: 1pt solid #000000; width: 116.375px; height: 49px;">
<p style="text-align: center;"><span style="font-size: 16px;"><strong><span style="color: #ffffff;">Codename</span></strong></span></p>
</td>
<td style="background-color: #b7b7b7; border: 1pt solid #000000; width: 149.833px; height: 49px;">
<p style="text-align: center;"><span style="font-size: 16px;"><strong><span style="color: #ffffff;">Filename</span></strong></span></p>
</td>
<td style="background-color: #b7b7b7; border: 1pt solid #000000; width: 578.771px; height: 49px;">
<p style="text-align: center;"><span style="font-size: 16px;"><strong><span style="color: #ffffff;">SHA-256</span></strong></span></p>
</td>
</tr>
<tr style="height: 50.6667px;">
<td style="border: 1pt solid #000000; width: 116.375px; height: 51px;" rowspan="3">
<p style="text-align: center;"><span style="font-size: 16px;">px_2012</span></p>
</td>
<td style="border: 1pt solid #000000; width: 149.833px; height: 51px;">
<p style="text-align: center;"><span style="font-size: 16px;">Nv.exe</span></p>
</td>
<td style="border: 1pt solid #000000; width: 578.771px; height: 51px;">
<p><span style="font-size: 14px;">523D28DF917F9D265CD2C0D38DF26277BC56A535145100ED82E6F5FDEAAE7256</span></p>
</td>
</tr>
<tr style="height: 50.6667px;">
<td style="border: 1pt solid #000000; width: 149.833px; height: 51px;">
<p style="text-align: center;"><span style="font-size: 16px;">NvSmartMax.dll</span></p>
</td>
<td style="border: 1pt solid #000000; width: 578.771px; height: 51px;">
<p><span style="font-size: 14px;">EAAA7899B37A3B04DCD02AD6D51E83E035BE535F129773621EF0F399A2A98EE3</span></p>
</td>
</tr>
<tr style="height: 50.6667px;">
<td style="border: 1pt solid #000000; width: 149.833px; height: 51px;">
<p style="text-align: center;"><span style="font-size: 16px;">Nv.mp3</span></p>
</td>
<td style="border: 1pt solid #000000; width: 578.771px; height: 51px;">
<p><span style="font-size: 14px;">3D64E638F961B922398E2EFAF75504DA007E41EA979F213F8EB4F83E00EFEEBB</span></p>
</td>
</tr>
<tr style="height: 50.6667px;">
<td style="border: 1pt solid #000000; width: 116.375px; height: 51px;" rowspan="3">
<p style="text-align: center;"><span style="font-size: 16px;">px_2014</span></p>
</td>
<td style="border: 1pt solid #000000; width: 149.833px; height: 51px;">
<p style="text-align: center;"><span style="font-size: 16px;">Gadget.exe</span></p>
</td>
<td style="border: 1pt solid #000000; width: 578.771px; height: 51px;">
<p><span style="font-size: 14px;">5C859CA16583D660449FB044677C128A9CDEDD603D9598D4670235C52E359BF9</span></p>
</td>
</tr>
<tr style="height: 50.6667px;">
<td style="border: 1pt solid #000000; width: 149.833px; height: 51px;">
<p style="text-align: center;"><span style="font-size: 16px;">Sidebar.dll</span></p>
</td>
<td style="border: 1pt solid #000000; width: 578.771px; height: 51px;">
<p><span style="font-size: 14px;">4B23F8683E184757E8119C8C68063F547F194E1ABD758DCBD4DACF70E3908FC1</span></p>
</td>
</tr>
<tr style="height: 50.6667px;">
<td style="border: 1pt solid #000000; width: 149.833px; height: 51px;">
<p style="text-align: center;"><span style="font-size: 16px;">Sidebar.dll.doc</span></p>
</td>
<td style="border: 1pt solid #000000; width: 578.771px; height: 51px;">
<p><span style="font-size: 14px;">B2B93C7C4AC82623F74B14FE73F2C3F8E58E3306CC903C5AE71BC355CB5BD069</span></p>
</td>
</tr>
<tr style="height: 50.6667px;">
<td style="border: 1pt solid #000000; width: 116.375px; height: 51px;" rowspan="3">
<p style="text-align: center;"><span style="font-size: 16px;">px_2015</span></p>
</td>
<td style="border: 1pt solid #000000; width: 149.833px; height: 51px;">
<p style="text-align: center;"><span style="font-size: 16px;">fsguidll.exe</span></p>
</td>
<td style="border: 1pt solid #000000; width: 578.771px; height: 51px;">
<p><span style="font-size: 14px;">5C5E3201D6343E0536B86CB4AB0831C482A304C62CD09C01AC8BDEEE5755F635</span></p>
</td>
</tr>
<tr style="height: 50.6667px;">
<td style="border: 1pt solid #000000; width: 149.833px; height: 51px;">
<p style="text-align: center;"><span style="font-size: 16px;">fslapi.dll</span></p>
</td>
<td style="border: 1pt solid #000000; width: 578.771px; height: 51px;">
<p><span style="font-size: 14px;">96876D24284FF4E4155A78C043C8802421136AFBC202033BF5E80D1053E3833F</span></p>
</td>
</tr>
<tr style="height: 50.6667px;">
<td style="border: 1pt solid #000000; width: 149.833px; height: 51px;">
<p style="text-align: center;"><span style="font-size: 16px;">fslapi.dll.gui</span></p>
</td>
<td style="border: 1pt solid #000000; width: 578.771px; height: 51px;">
<p><span style="font-size: 14px;">ACDC4987B74FDF7A32DFF87D56C43DF08CCE071B493858E3CE32FCF8D6372837</span></p>
</td>
</tr>
<tr style="height: 50.6667px;">
<td style="border: 1pt solid #000000; width: 116.375px; height: 51px;" rowspan="3">
<p style="text-align: center;"><span style="font-size: 16px;">px_2019</span></p>
</td>
<td style="border: 1pt solid #000000; width: 149.833px; height: 51px;">
<p style="text-align: center;"><span style="font-size: 16px;">mcinsupd.exe</span></p>
</td>
<td style="border: 1pt solid #000000; width: 578.771px; height: 51px;">
<p><span style="font-size: 14px;">507D49186748DD83D808281743A17FCA4B226883C410EC76EB305360CBC8C091</span></p>
</td>
</tr>
<tr style="height: 50.6667px;">
<td style="border: 1pt solid #000000; width: 149.833px; height: 51px;">
<p style="text-align: center;"><span style="font-size: 16px;">mytilus3.dll</span></p>
</td>
<td style="border: 1pt solid #000000; width: 578.771px; height: 51px;">
<p><span style="font-size: 14px;">9FB33E460CA1654FCC555A6F040288617D9E2EFE626F611B77522606C724B59B</span></p>
</td>
</tr>
<tr style="height: 50.6667px;">
<td style="border: 1pt solid #000000; width: 149.833px; height: 51px;">
<p style="text-align: center;"><span style="font-size: 16px;">mytilus3.dump</span></p>
</td>
<td style="border: 1pt solid #000000; width: 578.771px; height: 51px;">
<p><span style="font-size: 14px;">6914E9DE21F5CCE3F5C1457127122C13494ED82E6E2D95A8200A46BDB4CD7075</span></p>
</td>
</tr>
<tr style="height: 50.6667px;">
<td style="border: 1pt solid #000000; width: 116.375px; height: 51px;" rowspan="3">
<p style="text-align: center;"><span style="font-size: 16px;">px_2021</span></p>
</td>
<td style="border: 1pt solid #000000; width: 149.833px; height: 51px;">
<p style="text-align: center;"><span style="font-size: 16px;">aro.exe</span></p>
</td>
<td style="border: 1pt solid #000000; width: 578.771px; height: 51px;">
<p><span style="font-size: 14px;">18A98C2D905A1DA1D9D855E86866921E543F4BF8621FAEA05EB14D8E5B23B60C</span></p>
</td>
</tr>
<tr style="height: 50.6667px;">
<td style="border: 1pt solid #000000; width: 149.833px; height: 51px;">
<p style="text-align: center;"><span style="font-size: 16px;">aross.dll</span></p>
</td>
<td style="border: 1pt solid #000000; width: 578.771px; height: 51px;">
<p><span style="font-size: 14px;">9FFFB3894B008D5A54343CCF8395A47ACFE953394FFFE2C58550E444FF20EC47</span></p>
</td>
</tr>
<tr style="height: 50.6667px;">
<td style="border: 1pt solid #000000; width: 149.833px; height: 51px;">
<p style="text-align: center;"><span style="font-size: 16px;">aro.dat</span></p>
</td>
<td style="border: 1pt solid #000000; width: 578.771px; height: 51px;">
<p><span style="font-size: 14px;">59BA902871E98934C054649CA582E2A01707998ACC78B2570FEF43DBD10F7B6F</span></p>
</td>
</tr>
<tr style="height: 50.6667px;">
<td style="border: 1pt solid #000000; width: 116.375px; height: 51px;" rowspan="3">
<p style="text-align: center;"><span style="font-size: 16px;">px_2022</span></p>
</td>
<td style="border: 1pt solid #000000; width: 149.833px; height: 51px;">
<p style="text-align: center;"><span style="font-size: 16px;">RasTls.exe</span></p>
</td>
<td style="border: 1pt solid #000000; width: 578.771px; height: 51px;">
<p><span style="font-size: 14px;">F9EBF6AEB3F0FB0C29BD8F3D652476CD1FE8BD9A0C11CB15C43DE33BBCE0BF68</span></p>
</td>
</tr>
<tr style="height: 50.6667px;">
<td style="border: 1pt solid #000000; width: 149.833px; height: 51px;">
<p style="text-align: center;"><span style="font-size: 16px;">RasTls.dll</span></p>
</td>
<td style="border: 1pt solid #000000; width: 578.771px; height: 51px;">
<p><span style="font-size: 14px;">6CD5079A69D9A68029E37F2680F44B7BA71C2B1EECF4894C2A8B293D5F768F10</span></p>
</td>
</tr>
<tr style="height: 51px;">
<td style="border: 1pt solid #000000; width: 149.833px; height: 51px;">
<p style="text-align: center;"><span style="font-size: 16px;">RasTls.dll.res</span></p>
</td>
<td style="border: 1pt solid #000000; width: 578.771px; height: 51px;">
<p><span style="font-size: 14px;">37B3FB9AA12277F355BBB334C82B41E4155836CF3A1B83E543CE53DA9D429E2F</span></p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>Each sample is compared based on the configuration and implementation of the PlugX loader:</p>
<ul>
<li aria-level="1">Malware’s release date control with OS datetime check</li>
<li aria-level="1">Manipulation of control flow by patching the instructions within the executable for anti-analysis</li>
<li aria-level="1">Dynamically retrieving module <em>kernel32.dll</em>’s base address within payload by utilizing the <em>PEB_LDR_DATA</em> structure</li>
<li aria-level="1">Code obfuscation within the payload for anti-analysis</li>
<li aria-level="1">Decompression preparation of PlugX payload and the format of the payload</li>
</ul>
<br>
<h4 style="font-weight: normal;">OS Datetime</h4>
<p>As explained in the previous section, PlugX loader does check that the date is later than a specific value. This behavior has been observed on three samples, from this list of six samples:</p>
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2; width: 452px; height: 353.451px;">
<tbody>
<tr style="height: 49.2857px;">
<td style="background-color: #999999; border: 1pt solid #000000; width: 120.161px; height: 49px;">
<p style="text-align: center;"><strong><span style="color: #ffffff;">Sample</span></strong></p>
</td>
<td style="background-color: #999999; border: 1pt solid #000000; width: 146.21px; height: 49px;">
<p style="text-align: center;"><strong><span style="color: #ffffff;">Check count</span></strong></p>
</td>
<td style="background-color: #999999; border: 1pt solid #000000; width: 184.312px; height: 49px;">
<p style="text-align: center;"><strong><span style="color: #ffffff;">Datetime</span></strong></p>
</td>
</tr>
<tr style="height: 51px;">
<td style="border: 1pt solid #000000; width: 120.161px; height: 51px;">
<p style="text-align: center;"><span style="font-size: 18px;">px_2012</span></p>
</td>
<td style="border: 1pt solid #000000; width: 146.21px; height: 51px;">
<p style="text-align: center;"><span style="font-size: 18px;">2</span></p>
</td>
<td style="border: 1pt solid #000000; width: 184.312px; height: 51px;">
<p style="text-align: center;"><span style="font-size: 18px;">2012-01-01, 2012</span></p>
</td>
</tr>
<tr style="height: 49.2857px;">
<td style="border: 1pt solid #000000; width: 120.161px; height: 49px;">
<p style="text-align: center;"><span style="font-size: 18px;">px_2014</span></p>
</td>
<td style="border: 1pt solid #000000; width: 146.21px; height: 49px;">
<p style="text-align: center;"><span style="font-size: 18px;">2</span></p>
</td>
<td style="border: 1pt solid #000000; width: 184.312px; height: 49px;">
<p style="text-align: center;"><span style="font-size: 18px;">2012-01-01, 2012</span></p>
</td>
</tr>
<tr style="height: 49.2857px;">
<td style="border: 1pt solid #000000; width: 120.161px; height: 49px;">
<p style="text-align: center;"><span style="font-size: 18px;">px_2015</span></p>
</td>
<td style="border: 1pt solid #000000; width: 146.21px; height: 49px;">
<p style="text-align: center;"><span style="font-size: 18px;">0</span></p>
</td>
<td style="border: 1pt solid #000000; width: 184.312px; height: 49px;">
<p style="text-align: center;"><span style="font-size: 18px;">N/A</span></p>
</td>
</tr>
<tr style="height: 49.9955px;">
<td style="border: 1pt solid #000000; width: 120.161px; height: 50px;">
<p style="text-align: center;"><span style="font-size: 18px;">px_2019</span></p>
</td>
<td style="border: 1pt solid #000000; width: 146.21px; height: 50px;">
<p style="text-align: center;"><span style="font-size: 18px;">1</span></p>
</td>
<td style="border: 1pt solid #000000; width: 184.312px; height: 50px;">
<p style="text-align: center;"><span style="font-size: 18px;">2018</span></p>
</td>
</tr>
<tr style="height: 49.2857px;">
<td style="border: 1pt solid #000000; width: 120.161px; height: 49px;">
<p style="text-align: center;"><span style="font-size: 18px;">px_2021</span></p>
</td>
<td style="border: 1pt solid #000000; width: 146.21px; height: 49px;">
<p style="text-align: center;"><span style="font-size: 18px;">0</span></p>
</td>
<td style="border: 1pt solid #000000; width: 184.312px; height: 49px;">
<p style="text-align: center;"><span style="font-size: 18px;">N/A</span></p>
</td>
</tr>
<tr style="height: 54px;">
<td style="border: 1pt solid #000000; width: 120.161px; height: 54px;">
<p style="text-align: center;"><span style="font-size: 18px;">px_2022</span></p>
</td>
<td style="border: 1pt solid #000000; width: 146.21px; height: 54px;">
<p style="text-align: center;"><span style="font-size: 18px;">0</span></p>
</td>
<td style="border: 1pt solid #000000; width: 184.312px; height: 54px;">
<p style="text-align: center;"><span style="font-size: 18px;">N/A</span></p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>The date and time check happens twice in samples <em>px_2012</em> and <em>px_2014</em>:&nbsp;</p>
<ul>
<li aria-level="1">Checks the date before executing the instruction patching function</li>
<li aria-level="1">Checks the year before allocating the PlugX loader payload file</li>
</ul>
<p>However, in sample <em>px_2019</em>, it only conducts the date and time check for the year 2018. The versioning of this malware also seems to exist, which is evident from the date and time check of the date of <em>px_2019</em> being 2018.&nbsp;</p>
<h4 style="font-weight: normal;"><span style="font-size: 20px;">Manipulate Control Flow</span></h4>
<p>&nbsp;</p>
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2;">
<tbody>
<tr>
<td style="background-color: #999999; border: 1pt solid #000000;">
<p style="text-align: center;"><strong><span style="color: #ffffff;">Sample</span></strong></p>
</td>
<td style="background-color: #999999; border: 1pt solid #000000;">
<p style="text-align: center;"><strong><span style="color: #ffffff;">Patch Instruction</span></strong></p>
</td>
<td style="background-color: #999999; border: 1pt solid #000000;">
<p style="text-align: center;"><strong><span style="color: #ffffff;">Patched Instruction</span></strong></p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">px_2012</p>
</td>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">Yes</p>
</td>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">JMP</p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">px_2014</p>
</td>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">No</p>
</td>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">N/A</p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">px_2015</p>
</td>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">Yes</p>
</td>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">JMP</p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">px_2019</p>
</td>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">Yes</p>
</td>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">PUSH/RET</p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">px_2021</p>
</td>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">No</p>
</td>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">N/A</p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">px_2022</p>
</td>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">Yes</p>
</td>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;"><span style="font-size: 18px;">PUSH/RET</span></p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>Manipulation of the control flow by patching the instructions with JMP is utilized with the samples, however the samples <em>px_2019</em> and <em>px_2022</em> are patched with PUSH and RET instructions. The PUSH instruction “pushes” the relevant function address onto the stack and the RET instruction moves the control flow into the pushed address.&nbsp;</p>
<p>Samples <em>px_2014 </em>and <em>px_2021 </em>did not patch instructions to manipulate the control flow. It utilized legitimate exported function names of the legitimate DLL which gets called by the legitimate executable.</p>
<h4 style="font-weight: normal;">PEB_LDR_DATA</h4>
<p>&nbsp;</p>
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2;">
<tbody>
<tr>
<td style="background-color: #999999; border: 1pt solid #000000;">
<p style="text-align: center;"><strong><span style="color: #ffffff;">Sample</span></strong></p>
</td>
<td style="background-color: #999999; border: 1pt solid #000000;">
<p style="text-align: center;"><strong><span style="color: #ffffff;">PEB_LDR_DATA</span></strong></p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">px_2012</p>
</td>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">InInitializationOrderModuleList&nbsp;</p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">px_2014</p>
</td>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">InInitializationOrderModuleList&nbsp;</p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">px_2015</p>
</td>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">InInitializationOrderModuleList&nbsp;</p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">px_2019</p>
</td>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">InInitializationOrderModuleList&nbsp;</p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">px_2021</p>
</td>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">InMemoryOrderModuleList&nbsp;</p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">px_2022</p>
</td>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;"><span style="font-size: 18px;">InInitializationOrderModuleList&nbsp;</span></p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>Aside from <em>InitializationOrderModuleList</em>, sample <em>px_2021</em> utilized <em>InMemoryOrderModuleList</em>. <em>InMemoryOrderModuleList </em>lists loaded modules according to the memory placement. The difference from <em>InInitializationOrderModuleList </em>is that <em>InMemoryOrderModuleList </em>includes the executable within the list.&nbsp;</p>
<h4 style="font-weight: normal;">Payload Obfuscation</h4>
<p>&nbsp;</p>
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2; height: 423.991px;">
<tbody>
<tr style="height: 77.2768px;">
<td style="background-color: #999999; border: 1pt solid #000000; height: 77px; width: 100.808px;">
<p style="text-align: center;"><strong><span style="color: #ffffff;">Sample</span></strong></p>
</td>
<td style="background-color: #999999; border: 1pt solid #000000; height: 77px; width: 256.768px;">
<p style="text-align: center;"><strong><span style="color: #ffffff;">Usage of StackString</span></strong></p>
</td>
<td style="background-color: #999999; border: 1pt solid #000000; height: 77px; width: 269.585px;">
<p style="text-align: center;"><strong><span style="color: #ffffff;">Usage of Code Obfuscation</span></strong></p>
</td>
</tr>
<tr style="height: 49.2857px;">
<td style="border: 1pt solid #000000; height: 49px; width: 100.808px;">
<p style="text-align: center;">px_2012</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 256.768px;">
<p style="text-align: center;">Yes</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 269.585px;">
<p style="text-align: center;">N/A</p>
</td>
</tr>
<tr style="height: 52.9955px;">
<td style="border: 1pt solid #000000; height: 53px; width: 100.808px;">
<p style="text-align: center;">px_2014</p>
</td>
<td style="border: 1pt solid #000000; height: 53px; width: 256.768px;">
<p style="text-align: center;">Yes</p>
</td>
<td style="border: 1pt solid #000000; height: 53px; width: 269.585px;">
<p style="text-align: center;">Yes</p>
</td>
</tr>
<tr style="height: 52.9955px;">
<td style="border: 1pt solid #000000; height: 53px; width: 100.808px;">
<p style="text-align: center;">px_2015</p>
</td>
<td style="border: 1pt solid #000000; height: 53px; width: 256.768px;">
<p style="text-align: center;">Yes</p>
</td>
<td style="border: 1pt solid #000000; height: 53px; width: 269.585px;">
<p style="text-align: center;">Yes</p>
</td>
</tr>
<tr style="height: 52.9955px;">
<td style="border: 1pt solid #000000; height: 53px; width: 100.808px;">
<p style="text-align: center;">px_2019</p>
</td>
<td style="border: 1pt solid #000000; height: 53px; width: 256.768px;">
<p style="text-align: center;">Yes; Places one characters at a time</p>
</td>
<td style="border: 1pt solid #000000; height: 53px; width: 269.585px;">
<p style="text-align: center;">N/A</p>
</td>
</tr>
<tr style="height: 52.9955px;">
<td style="border: 1pt solid #000000; height: 53px; width: 100.808px;">
<p style="text-align: center;">px_2021</p>
</td>
<td style="border: 1pt solid #000000; height: 53px; width: 256.768px;">
<p style="text-align: center;">Yes; Places one characters at a time</p>
</td>
<td style="border: 1pt solid #000000; height: 53px; width: 269.585px;">
<p style="text-align: center;">N/A</p>
</td>
</tr>
<tr style="height: 84.1339px;">
<td style="border: 1pt solid #000000; height: 84px; width: 100.808px;">
<p style="text-align: center;">px_2022</p>
</td>
<td style="border: 1pt solid #000000; height: 84px; width: 256.768px;">
<p style="text-align: center;">Yes; Some, one character at a time, some in bulk.</p>
</td>
<td style="border: 1pt solid #000000; height: 84px; width: 269.585px;">
<p style="text-align: center;"><span style="font-size: 18px;">N/A</span></p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>The usage of StackString on the functions which need to be loaded dynamically appears to be consistent throughout the samples. However, a slight update is placed in <em>px_2019</em>, <em>px_2021 </em>and <em>px_2022</em>, which is placing one character at a time onto a Stack:</p>
<p style="text-align: center;"><img src="https://www.cybereason.com/hs-fs/hubfs/image8-Sep-07-2022-06-39-56-99-PM.png?width=452&amp;name=image8-Sep-07-2022-06-39-56-99-PM.png" alt="image8-Sep-07-2022-06-39-56-99-PM" width="452" loading="lazy" style="width: 452px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/image8-Sep-07-2022-06-39-56-99-PM.png?width=226&amp;name=image8-Sep-07-2022-06-39-56-99-PM.png 226w, https://www.cybereason.com/hs-fs/hubfs/image8-Sep-07-2022-06-39-56-99-PM.png?width=452&amp;name=image8-Sep-07-2022-06-39-56-99-PM.png 452w, https://www.cybereason.com/hs-fs/hubfs/image8-Sep-07-2022-06-39-56-99-PM.png?width=678&amp;name=image8-Sep-07-2022-06-39-56-99-PM.png 678w, https://www.cybereason.com/hs-fs/hubfs/image8-Sep-07-2022-06-39-56-99-PM.png?width=904&amp;name=image8-Sep-07-2022-06-39-56-99-PM.png 904w, https://www.cybereason.com/hs-fs/hubfs/image8-Sep-07-2022-06-39-56-99-PM.png?width=1130&amp;name=image8-Sep-07-2022-06-39-56-99-PM.png 1130w, https://www.cybereason.com/hs-fs/hubfs/image8-Sep-07-2022-06-39-56-99-PM.png?width=1356&amp;name=image8-Sep-07-2022-06-39-56-99-PM.png 1356w" sizes="(max-width: 452px) 100vw, 452px"><span style="font-size: 16px;"><em>Fetching VirtualProtect</em></span></p>
<p>Samples <em>px_2014</em> and <em>px_2015</em> also have additional code obfuscation, which is an encryption on the function that prepares the PlugX payload. This function is the main component of this deployment payload and this is an additional layer of anti-analysis:</p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-58-00-00-PM.png?width=981&amp;name=Capture-Sep-07-2022-04-58-00-00-PM.png" alt="Capture-Sep-07-2022-04-58-00-00-PM" width="981" loading="lazy" style="width: 981px;" srcset="https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-58-00-00-PM.png?width=491&amp;name=Capture-Sep-07-2022-04-58-00-00-PM.png 491w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-58-00-00-PM.png?width=981&amp;name=Capture-Sep-07-2022-04-58-00-00-PM.png 981w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-58-00-00-PM.png?width=1472&amp;name=Capture-Sep-07-2022-04-58-00-00-PM.png 1472w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-58-00-00-PM.png?width=1962&amp;name=Capture-Sep-07-2022-04-58-00-00-PM.png 1962w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-58-00-00-PM.png?width=2453&amp;name=Capture-Sep-07-2022-04-58-00-00-PM.png 2453w, https://www.cybereason.com/hs-fs/hubfs/Capture-Sep-07-2022-04-58-00-00-PM.png?width=2943&amp;name=Capture-Sep-07-2022-04-58-00-00-PM.png 2943w" sizes="(max-width: 981px) 100vw, 981px"></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em>Code deobfuscation in px_2015</em></span></p>
<h4 style="font-weight: normal;">Decompression and Payload Deployment</h4>
<p>&nbsp;</p>
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2; height: 611.797px;">
<tbody>
<tr style="height: 133.281px;">
<td style="background-color: #999999; border: 1pt solid #000000; height: 133px; width: 100.82px;">
<p style="text-align: center;"><span style="color: #ffffff;">Sample</span></p>
</td>
<td style="background-color: #999999; border: 1pt solid #000000; height: 133px; width: 162.656px;">
<p style="text-align: center;"><span style="color: #ffffff;">Decompression Format</span></p>
</td>
<td style="background-color: #999999; border: 1pt solid #000000; height: 133px; width: 134.199px;">
<p style="text-align: center;"><span style="color: #ffffff;">Decryption of compressed data</span></p>
</td>
<td style="background-color: #999999; border: 1pt solid #000000; height: 133px; width: 157.363px;">
<p style="text-align: center;"><span style="color: #ffffff;">Decompressed Data Format</span></p>
</td>
<td style="background-color: #999999; border: 1pt solid #000000; height: 133px; width: 97.5781px;">
<p style="text-align: center;"><span style="color: #ffffff;">Payload Header</span></p>
</td>
</tr>
<tr style="height: 77.3047px;">
<td style="border: 1pt solid #000000; height: 77px; width: 100.82px;">
<p style="text-align: center;">px_2012</p>
</td>
<td style="border: 1pt solid #000000; height: 77px; width: 162.656px;">
<p style="text-align: center;">LZ</p>
</td>
<td style="border: 1pt solid #000000; height: 77px; width: 134.199px;">
<p style="text-align: center;">Yes</p>
</td>
<td style="border: 1pt solid #000000; height: 77px; width: 157.363px;">
<p>PE File with PE signatures</p>
</td>
<td style="border: 1pt solid #000000; height: 77px; width: 97.5781px;">
<p style="text-align: center;">GULP</p>
</td>
</tr>
<tr style="height: 77.3047px;">
<td style="border: 1pt solid #000000; height: 77px; width: 100.82px;">
<p style="text-align: center;">px_2014</p>
</td>
<td style="border: 1pt solid #000000; height: 77px; width: 162.656px;">
<p style="text-align: center;">LZ</p>
</td>
<td style="border: 1pt solid #000000; height: 77px; width: 134.199px;">
<p style="text-align: center;">Yes</p>
</td>
<td style="border: 1pt solid #000000; height: 77px; width: 157.363px;">
<p>PE File with PE signatures</p>
</td>
<td style="border: 1pt solid #000000; height: 77px; width: 97.5781px;">
<p style="text-align: center;">GULP</p>
</td>
</tr>
<tr style="height: 83.9844px;">
<td style="border: 1pt solid #000000; height: 84px; width: 100.82px;">
<p style="text-align: center;">px_2015</p>
</td>
<td style="border: 1pt solid #000000; height: 84px; width: 162.656px;">
<p style="text-align: center;">LZ</p>
</td>
<td style="border: 1pt solid #000000; height: 84px; width: 134.199px;">
<p style="text-align: center;">Yes</p>
</td>
<td style="border: 1pt solid #000000; height: 84px; width: 157.363px;">
<p>PE File without PE signatures</p>
</td>
<td style="border: 1pt solid #000000; height: 84px; width: 97.5781px;">
<p style="text-align: center;">XV</p>
</td>
</tr>
<tr style="height: 77.3047px;">
<td style="border: 1pt solid #000000; height: 77px; width: 100.82px;">
<p style="text-align: center;">px_2019</p>
</td>
<td style="border: 1pt solid #000000; height: 77px; width: 162.656px;">
<p style="text-align: center;">LZ</p>
</td>
<td style="border: 1pt solid #000000; height: 77px; width: 134.199px;">
<p style="text-align: center;">Yes</p>
</td>
<td style="border: 1pt solid #000000; height: 77px; width: 157.363px;">
<p>PE File with PE signatures</p>
</td>
<td style="border: 1pt solid #000000; height: 77px; width: 97.5781px;">
<p style="text-align: center;">GULP</p>
</td>
</tr>
<tr style="height: 83.9844px;">
<td style="border: 1pt solid #000000; height: 84px; width: 100.82px;">
<p style="text-align: center;">px_2021</p>
</td>
<td style="border: 1pt solid #000000; height: 84px; width: 162.656px;">
<p style="text-align: center;">LZ</p>
</td>
<td style="border: 1pt solid #000000; height: 84px; width: 134.199px;">
<p style="text-align: center;">Yes</p>
</td>
<td style="border: 1pt solid #000000; height: 84px; width: 157.363px;">
<p>PE File without PE signatures&nbsp;</p>
</td>
<td style="border: 1pt solid #000000; height: 84px; width: 97.5781px;">
<p style="text-align: center;">ROHT</p>
</td>
</tr>
<tr style="height: 77.3047px;">
<td style="border: 1pt solid #000000; height: 77px; width: 100.82px;">
<p style="text-align: center;">px_2022</p>
</td>
<td style="border: 1pt solid #000000; height: 77px; width: 162.656px;">
<p style="text-align: center;">LZ</p>
</td>
<td style="border: 1pt solid #000000; height: 77px; width: 134.199px;">
<p style="text-align: center;">Yes</p>
</td>
<td style="border: 1pt solid #000000; height: 77px; width: 157.363px;">
<p>PE File with PE signatures</p>
</td>
<td style="border: 1pt solid #000000; height: 77px; width: 97.5781px;">
<p style="text-align: center;"><span style="font-size: 18px;">.PE</span></p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>Decompression of PlugX payload is consistent across the samples, which decrypts the LZ compressed data. However, the decompressed payload for the samples <em>px_2015</em> and <em>px_2021</em> was not in complete PE file format. It was missing traditional PE signatures such as “<em>MZ…This program cannot be run in DOS mode</em>”. The relevant section information was still intact, which was needed for the PlugX loader to allocate necessary sections to the new memory region.&nbsp;</p>
<p>This update only removed portions of the PE header. However, it contained necessary information for the code to function. This update prevents analysts from simply dumping the decompressed payload and conducting further analysis, since it is not in proper PE format.&nbsp;</p>
<p>Sample <em>px_2015</em>, <em>px_2021 </em>and <em>px_2022</em> also had different headers once the decompressed payload was allocated into <em>PAGE_EXECUTE_READWRITE</em> memory region:&nbsp;</p>
<ul>
<ul>
<li aria-level="1"><em>px_2015</em>: XV - Roman numeral for 15.</li>
<li aria-level="1"><em>px_2021</em>: ROHT - Backward for “THOR”</li>
<li aria-level="1"><em>px_2022</em>: .PE - Portable Executable</li>
</ul>
</ul>
<p><span style="background-color: transparent; font-weight: 400;">The differences in the header may be evidence of the versioning of PlugX as well.</span></p>
<h4 style="font-weight: normal;">Core Deployment Methods Are Consistent Across Samples</h4>
<p>There are several slight detail differences while comparing samples, however there appears to be no major updates in the past decade regarding the deployment method of this malware.&nbsp;</p>
<p>Although there were no major updates, the malware loader appears to have version management. This is evident from OS date and time check as well as the differences in payload headers while deploying the actual PlugX.</p>
<p>The lack of a major deployment method is also believed to be due to the use of the DLL Side-Loading technique. The DLL Side-Loading technique itself gives the threat actors various options on which legitimate executables to side-load the PlugX with. This evasion technique already creates various combinations and an update on deployment methods deemed unnecessary<span style="font-size: 20px;"><br></span></p>
<h2><span style="font-size: 30px;">Detection and Prevention</span></h2>
<h3 style="font-weight: normal;"><span style="color: #434343; font-size: 24px;">Cybereason Defense Platform</span></h3>
<p>The<a href="/platform" rel="noopener" target="_blank"><span> Cybereason Defense Platform</span></a> is able to detect and prevent infections with the PlugX loader using multi-layer protection that detects and blocks malware with threat intelligence, machine learning, anti-ransomware and Next-Gen Antivirus (NGAV) capabilities:</p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/image5-Sep-07-2022-06-40-39-71-PM.png?width=952&amp;name=image5-Sep-07-2022-06-40-39-71-PM.png" alt="image5-Sep-07-2022-06-40-39-71-PM" width="952" loading="lazy" style="width: 952px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/image5-Sep-07-2022-06-40-39-71-PM.png?width=476&amp;name=image5-Sep-07-2022-06-40-39-71-PM.png 476w, https://www.cybereason.com/hs-fs/hubfs/image5-Sep-07-2022-06-40-39-71-PM.png?width=952&amp;name=image5-Sep-07-2022-06-40-39-71-PM.png 952w, https://www.cybereason.com/hs-fs/hubfs/image5-Sep-07-2022-06-40-39-71-PM.png?width=1428&amp;name=image5-Sep-07-2022-06-40-39-71-PM.png 1428w, https://www.cybereason.com/hs-fs/hubfs/image5-Sep-07-2022-06-40-39-71-PM.png?width=1904&amp;name=image5-Sep-07-2022-06-40-39-71-PM.png 1904w, https://www.cybereason.com/hs-fs/hubfs/image5-Sep-07-2022-06-40-39-71-PM.png?width=2380&amp;name=image5-Sep-07-2022-06-40-39-71-PM.png 2380w, https://www.cybereason.com/hs-fs/hubfs/image5-Sep-07-2022-06-40-39-71-PM.png?width=2856&amp;name=image5-Sep-07-2022-06-40-39-71-PM.png 2856w" sizes="(max-width: 952px) 100vw, 952px"></p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/image4-Sep-07-2022-06-40-57-90-PM.png?width=804&amp;name=image4-Sep-07-2022-06-40-57-90-PM.png" alt="image4-Sep-07-2022-06-40-57-90-PM" width="804" loading="lazy" style="width: 804px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/image4-Sep-07-2022-06-40-57-90-PM.png?width=402&amp;name=image4-Sep-07-2022-06-40-57-90-PM.png 402w, https://www.cybereason.com/hs-fs/hubfs/image4-Sep-07-2022-06-40-57-90-PM.png?width=804&amp;name=image4-Sep-07-2022-06-40-57-90-PM.png 804w, https://www.cybereason.com/hs-fs/hubfs/image4-Sep-07-2022-06-40-57-90-PM.png?width=1206&amp;name=image4-Sep-07-2022-06-40-57-90-PM.png 1206w, https://www.cybereason.com/hs-fs/hubfs/image4-Sep-07-2022-06-40-57-90-PM.png?width=1608&amp;name=image4-Sep-07-2022-06-40-57-90-PM.png 1608w, https://www.cybereason.com/hs-fs/hubfs/image4-Sep-07-2022-06-40-57-90-PM.png?width=2010&amp;name=image4-Sep-07-2022-06-40-57-90-PM.png 2010w, https://www.cybereason.com/hs-fs/hubfs/image4-Sep-07-2022-06-40-57-90-PM.png?width=2412&amp;name=image4-Sep-07-2022-06-40-57-90-PM.png 2412w" sizes="(max-width: 804px) 100vw, 804px"></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em>MalOp generation based from threat intelligence as seen in the Cybereason Defense Platform</em></span></p>
<h2><span style="font-size: 30px;">Cybereason GSOC MDR</span></h2>
<p>The Cybereason GSOC recommends the following:</p>
<ul>
<li style="color: #595955;" aria-level="1"><span style="color: #595955;">Enable both the Signature and Artificial Intelligence modes on the Cybereason NGAV, and enable the Detect and Prevent modes of this feature.</span></li>
<li style="color: #595955;" aria-level="1"><span style="color: #595955;">Handle files originating from external sources (email, web browsing) with caution.</span></li>
<li aria-level="1"><span style="color: #595955;">To hunt proactively, use the Investigation screen in the Cybereason Defense Platform and the queries in the </span><span>Hunting Queries</span><span style="color: #595955;"> section to search for machines that are potentially infected with PlugX. Based on the search results, take further remediation actions, such as isolating the infected machines and deleting the payload file.</span></li>
</ul>
<p>Cybereason is dedicated to teaming with defenders to end cyber attacks from endpoints to the enterprise to everywhere. <a href="/request-a-demo" rel="noopener" target="_blank"><span>Schedule a demo today</span></a> to learn how your organization can benefit from an <a href="/blog/the-cybereason-malop-achieving-operation-centric-security" rel="noopener" target="_blank"><span>operation-centric approach to security</span></a>.</p>
<h3 style="font-weight: normal;"><span style="color: #434343; font-size: 30px;">MITRE ATT&amp;CK MAPPING</span></h3>
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2; height: 1005.35px; width: 830px;">
<tbody>
<tr style="height: 105.333px;">
<td style="background-color: #b7b7b7; border: 1pt solid #000000; height: 105px; width: 122px;">
<p style="text-align: center;"><span style="font-size: 16px;"><strong><span style="color: #ffffff;">Execution</span></strong></span></p>
</td>
<td style="background-color: #b7b7b7; border: 1pt solid #000000; height: 105px; width: 136px;">
<p style="text-align: center;"><span style="font-size: 16px;"><strong><span style="color: #ffffff;">Persistence</span></strong></span></p>
</td>
<td style="background-color: #b7b7b7; border: 1pt solid #000000; height: 105px; width: 200px;">
<p style="text-align: center;"><span style="font-size: 16px;"><strong><span style="color: #ffffff;">Defense Evasion</span></strong></span></p>
</td>
<td style="background-color: #b7b7b7; border: 1pt solid #000000; height: 105px; width: 124px;">
<p style="text-align: center;"><span style="font-size: 16px;"><strong><span style="color: #ffffff;">Discovery</span></strong></span></p>
</td>
<td style="background-color: #b7b7b7; border: 1pt solid #000000; height: 105px; width: 127px;">
<p style="text-align: center;"><span style="font-size: 16px;"><strong><span style="color: #ffffff;">Collection</span></strong></span></p>
</td>
<td style="background-color: #b7b7b7; border: 1pt solid #000000; height: 105px; width: 121px;">
<p style="text-align: center;"><span style="font-size: 16px;"><strong><span style="color: #ffffff;">Command and Control&nbsp;</span></strong></span></p>
</td>
</tr>
<tr style="height: 133.333px;">
<td style="border: 1pt solid #000000; height: 133px; width: 122px;">
<p><span style="font-size: 16px;"><a href="https://attack.mitre.org/techniques/T1059/" rel="noopener" target="_blank">Command and Scripting Interpreter</a></span></p>
</td>
<td style="border: 1pt solid #000000; height: 133px; width: 136px;">
<p><span style="font-size: 16px;"><a href="https://attack.mitre.org/techniques/T1547/" rel="noopener" target="_blank">Boot or logon Autostart Execution</a></span></p>
</td>
<td style="border: 1pt solid #000000; height: 133px; width: 200px;">
<p><span style="font-size: 16px;"><a href="https://attack.mitre.org/techniques/T1140/" rel="noopener" target="_blank">Deobfuscate/Decode Files or Information</a></span></p>
</td>
<td style="border: 1pt solid #000000; height: 133px; width: 124px;">
<p><span style="font-size: 16px;"><a href="https://attack.mitre.org/techniques/T1083/" rel="noopener" target="_blank">File and Directory Discovery</a></span></p>
</td>
<td style="border: 1pt solid #000000; height: 133px; width: 127px;">
<p><span style="font-size: 16px;"><a href="https://attack.mitre.org/techniques/T1056/" rel="noopener" target="_blank">Input Capture</a></span></p>
</td>
<td style="border: 1pt solid #000000; height: 133px; width: 121px;">
<p><span style="font-size: 16px;"><a href="https://attack.mitre.org/techniques/T1071/" rel="noopener" target="_blank">Application Layer Control</a></span></p>
</td>
</tr>
<tr style="height: 133.333px;">
<td style="border: 1pt solid #000000; height: 133px; width: 122px;">
<p><span style="font-size: 16px;"><a href="https://attack.mitre.org/techniques/T1106/" rel="noopener" target="_blank">Native API</a></span></p>
</td>
<td style="border: 1pt solid #000000; height: 133px; width: 136px;">
<p><span style="font-size: 16px;"><a href="https://attack.mitre.org/techniques/T1543/" rel="noopener" target="_blank">Create or Modify System Process</a></span></p>
</td>
<td style="border: 1pt solid #000000; height: 133px; width: 200px;">
<p><span style="font-size: 16px;"><a href="https://attack.mitre.org/techniques/T1564/" rel="noopener" target="_blank">Hide Artifacts</a></span></p>
</td>
<td style="border: 1pt solid #000000; height: 133px; width: 124px;">
<p><span style="font-size: 16px;"><a href="https://attack.mitre.org/techniques/T1135/" rel="noopener" target="_blank">Network Share Discovery</a></span></p>
</td>
<td style="border: 1pt solid #000000; height: 133px; width: 127px;">
<p><span style="font-size: 16px;"><a href="https://attack.mitre.org/techniques/T1113/" rel="noopener" target="_blank">Screen Capture</a></span></p>
</td>
<td style="border: 1pt solid #000000; height: 133px; width: 121px;">
<p><span style="font-size: 16px;"><a href="https://attack.mitre.org/techniques/T1573/" rel="noopener" target="_blank">Encrypted Channel</a></span></p>
</td>
</tr>
<tr style="height: 105.333px;">
<td style="border: 1pt solid #000000; height: 105px; width: 122px;">&nbsp;</td>
<td style="border: 1pt solid #000000; height: 105px; width: 136px;">&nbsp;</td>
<td style="border: 1pt solid #000000; height: 105px; width: 200px;">
<p><span style="font-size: 16px;"><a href="https://attack.mitre.org/techniques/T1574/" rel="noopener" target="_blank">Hijack Execution Flow</a></span></p>
</td>
<td style="border: 1pt solid #000000; height: 105px; width: 124px;">
<p><span style="font-size: 16px;"><a href="https://attack.mitre.org/techniques/T1057/" rel="noopener" target="_blank">Process Discovery</a></span></p>
</td>
<td style="border: 1pt solid #000000; height: 105px; width: 127px;">&nbsp;</td>
<td style="border: 1pt solid #000000; height: 105px; width: 121px;">
<p><span style="font-size: 16px;"><a href="https://attack.mitre.org/techniques/T1105/" rel="noopener" target="_blank">Ingress Tool Transfer</a></span></p>
</td>
</tr>
<tr style="height: 133.333px;">
<td style="border: 1pt solid #000000; height: 133px; width: 122px;">&nbsp;</td>
<td style="border: 1pt solid #000000; height: 133px; width: 136px;">&nbsp;</td>
<td style="border: 1pt solid #000000; height: 133px; width: 200px;">
<p><span style="font-size: 16px;"><a href="https://attack.mitre.org/techniques/T1036/" rel="noopener" target="_blank">Masquerading</a></span></p>
</td>
<td style="border: 1pt solid #000000; height: 133px; width: 124px;">
<p><span style="font-size: 16px;"><a href="https://attack.mitre.org/techniques/T1012/" rel="noopener" target="_blank">Query Registry</a></span></p>
</td>
<td style="border: 1pt solid #000000; height: 133px; width: 127px;">&nbsp;</td>
<td style="border: 1pt solid #000000; height: 133px; width: 121px;">
<p><span style="font-size: 16px;"><a href="https://attack.mitre.org/techniques/T1095/" rel="noopener" target="_blank">Non-Application Layer Protocol</a></span></p>
</td>
</tr>
<tr style="height: 133.333px;">
<td style="border: 1pt solid #000000; height: 133px; width: 122px;">&nbsp;</td>
<td style="border: 1pt solid #000000; height: 133px; width: 136px;">&nbsp;</td>
<td style="border: 1pt solid #000000; height: 133px; width: 200px;">
<p><span style="font-size: 16px;"><a href="https://attack.mitre.org/techniques/T1112/" rel="noopener" target="_blank">Modify Registry</a></span></p>
</td>
<td style="border: 1pt solid #000000; height: 133px; width: 124px;">
<p><span style="font-size: 16px;"><a href="https://attack.mitre.org/techniques/T1049/" rel="noopener" target="_blank">System Network Connections Discovery</a></span></p>
</td>
<td style="border: 1pt solid #000000; height: 133px; width: 127px;">&nbsp;</td>
<td style="border: 1pt solid #000000; height: 133px; width: 121px;">
<p><span style="font-size: 16px;"><a href="https://attack.mitre.org/techniques/T1102/" rel="noopener" target="_blank">Web Service</a></span></p>
</td>
</tr>
<tr style="height: 77.3333px;">
<td style="border: 1pt solid #000000; height: 77px; width: 122px;">&nbsp;</td>
<td style="border: 1pt solid #000000; height: 77px; width: 136px;">&nbsp;</td>
<td style="border: 1pt solid #000000; height: 77px; width: 200px;">
<p><span style="font-size: 16px;"><a href="https://attack.mitre.org/techniques/T1027/" rel="noopener" target="_blank">Obfuscated Files or Information</a></span></p>
</td>
<td style="border: 1pt solid #000000; height: 77px; width: 124px;">&nbsp;</td>
<td style="border: 1pt solid #000000; height: 77px; width: 127px;">&nbsp;</td>
<td style="border: 1pt solid #000000; height: 77px; width: 121px;">&nbsp;</td>
</tr>
<tr style="height: 105.333px;">
<td style="border: 1pt solid #000000; height: 105px; width: 122px;">&nbsp;</td>
<td style="border: 1pt solid #000000; height: 105px; width: 136px;">&nbsp;</td>
<td style="border: 1pt solid #000000; height: 105px; width: 200px;">
<p><span style="font-size: 16px;"><a href="https://attack.mitre.org/techniques/T1127/" rel="noopener" target="_blank">Trusted Developer Utilities Proxy Execution</a></span></p>
</td>
<td style="border: 1pt solid #000000; height: 105px; width: 124px;">&nbsp;</td>
<td style="border: 1pt solid #000000; height: 105px; width: 127px;">&nbsp;</td>
<td style="border: 1pt solid #000000; height: 105px; width: 121px;">&nbsp;</td>
</tr>
<tr style="height: 77.3542px;">
<td style="border: 1pt solid #000000; height: 77px; width: 122px;">&nbsp;</td>
<td style="border: 1pt solid #000000; height: 77px; width: 136px;">&nbsp;</td>
<td style="border: 1pt solid #000000; height: 77px; width: 200px;">
<p><span style="font-size: 16px;"><a href="https://attack.mitre.org/techniques/T1497/" rel="noopener" target="_blank">Virtualization/Sandbox Evasion</a></span></p>
</td>
<td style="border: 1pt solid #000000; height: 77px; width: 124px;">&nbsp;</td>
<td style="border: 1pt solid #000000; height: 77px; width: 127px;">&nbsp;</td>
<td style="border: 1pt solid #000000; height: 77px; width: 121px;">&nbsp;</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<h2 style="font-weight: normal;"><span style="color: #434343; font-size: 30px;">Indicators Of Compromise For PlugX Malware</span></h2>
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2;">
<tbody>
<tr>
<td style="border: 1pt solid #000000;">
<p style="text-align: center;">Executables</p>
</td>
<td style="border: 1pt solid #000000;">
<p>SHA-256 hash:</p>
<p><em>EAAA7899B37A3B04DCD02AD6D51E83E035BE535F129773621EF0F399A2A98EE3</em></p>
<br>
<p>SHA-256 hash:</p>
<p><em>3D64E638F961B922398E2EFAF75504DA007E41EA979F213F8EB4F83E00EFEEBB</em></p>
<br>
<p>SHA-256 hash:</p>
<p><em>4B23F8683E184757E8119C8C68063F547F194E1ABD758DCBD4DACF70E3908FC1</em></p>
<br>
<p>SHA-256 hash:</p>
<p><em>B2B93C7C4AC82623F74B14FE73F2C3F8E58E3306CC903C5AE71BC355CB5BD069</em></p>
<br>
<p>SHA-256 hash:</p>
<p><em>96876D24284FF4E4155A78C043C8802421136AFBC202033BF5E80D1053E3833F</em></p>
<br>
<p>SHA-256 hash:</p>
<p><em>ACDC4987B74FDF7A32DFF87D56C43DF08CCE071B493858E3CE32FCF8D6372837</em></p>
<br>
<p>SHA-256 hash:</p>
<p><em>9FB33E460CA1654FCC555A6F040288617D9E2EFE626F611B77522606C724B59B</em></p>
<br>
<p>SHA-256 hash:</p>
<p><em>6914E9DE21F5CCE3F5C1457127122C13494ED82E6E2D95A8200A46BDB4CD7075</em></p>
<br>
<p>SHA-256 hash:</p>
<p><em>9FFFB3894B008D5A54343CCF8395A47ACFE953394FFFE2C58550E444FF20EC47</em></p>
<br>
<p>SHA-256 hash:</p>
<p><em>59BA902871E98934C054649CA582E2A01707998ACC78B2570FEF43DBD10F7B6F</em></p>
<br>
<p>SHA-256 hash:</p>
<p><em>6CD5079A69D9A68029E37F2680F44B7BA71C2B1EECF4894C2A8B293D5F768F10</em></p>
<br>
<p>SHA-256 hash:</p>
<p><em>37B3FB9AA12277F355BBB334C82B41E4155836CF3A1B83E543CE53DA9D429E2F</em></p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<h2 style="font-weight: normal;"><span style="color: #434343; font-size: 30px;">About The Researchers&nbsp;</span></h2>
<p><strong>Kotaro Ogino, Senior Security Analyst, Cybereason Global SOC</strong></p>
<p>Kotaro Ogino is a Senior Security Analyst with the Cybereason Global SOC team. He is involved in threat hunting, administration of Security Orchestration, Automation, and Response (SOAR) systems, and Extended Detection and Response (XDR). Kotaro has a bachelor of science degree in information and computer science.</p>
<p><strong>Yuki Shibuya, Senior Security Analyst, Cybereason Global SOC</strong></p>
<p>Yuki Shibuya is a Senior Security Analyst with the Cybereason Global SOC team. He is tasked with triaging critical incidents, threat hunting and malware research. He has a master degree of information systems security and is interested in malware research and penetration testing.</p>
<p><em>Big thanks to Aleksandar Milenkoski for advising the research!</em></p></span>
          
          <!-- IOC PopUp Modal -->
          
          
          
          <!-- -->
          
          <!-- Social Share -->
          <div class="cr-blog-post__social-sharing">
            <span>Share</span>
            <div id="hs_cos_wrapper_module_161724375084957" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module widget-type-social_sharing" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module">






<div class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_social_sharing" data-hs-cos-general-type="widget" data-hs-cos-type="social_sharing">
  
	
  
    
    
    
			
		

    <a href="https://twitter.com/intent/tweet?original_referer=https://www.cybereason.com/blog/threat-analysis-report-plugx-rat-loader-evolution&amp;utm_medium=social&amp;utm_source=twitter&amp;url=https://www.cybereason.com/blog/threat-analysis-report-plugx-rat-loader-evolution&amp;utm_medium=social&amp;utm_source=twitter&amp;source=tweetbutton&amp;text=" target="_blank" rel="noopener" style="width:16px;">
      <img src="https://www.cybereason.com/hubfs/dam/images/images-web/blog-images/template-images/twitter-gray.svg" class="hs-image-widget hs-image-social-sharing-24" style="height:16px;width:16px;" width="16" hspace="0" alt="Share on twitter">
    </a>
	

  
	
  
    
    
    
			
		

    <a href="http://www.facebook.com/share.php?u=https://www.cybereason.com/blog/threat-analysis-report-plugx-rat-loader-evolution&amp;utm_medium=social&amp;utm_source=facebook" target="_blank" rel="noopener" style="width:16px;">
      <img src="https://www.cybereason.com/hubfs/dam/images/images-web/blog-images/template-images/facebook-gray.svg" class="hs-image-widget hs-image-social-sharing-24" style="height:16px;width:16px;" width="16" hspace="0" alt="Share on facebook">
    </a>
	

  
	
  
    
    
    
			
		

    <a href="http://www.linkedin.com/shareArticle?mini=true&amp;url=https://www.cybereason.com/blog/threat-analysis-report-plugx-rat-loader-evolution&amp;utm_medium=social&amp;utm_source=linkedin" target="_blank" rel="noopener" style="width:16px;">
      <img src="https://www.cybereason.com/hubfs/dam/images/images-web/blog-images/template-images/linkedin-gray.svg" class="hs-image-widget hs-image-social-sharing-24" style="height:16px;width:16px;" width="16" hspace="0" alt="Share on linkedin">
    </a>
	

</div></div>
          </div> 
          
          
          <!-- CONDITIONAL Author Box Display -->
            <div class="container columns cr-mln__author-listing-single">
              
                <div class="column headshot is-3-full-hd is-3-desktop is-3-tablet is-12-mobile">
                  <img class="cr-speaker-headshot" src="https://www.cybereason.com/hubfs/Capture-4.png" alt="Cybereason Global SOC Team">
                </div>
              
              <div class="column is-9-full-hd is-9-desktop is-12-mobile">
                <span class="descriptor">About the Author</span>
                <h4>Cybereason Global SOC Team</h4>
                
                
                
                  <p>The Cybereason Global SOC Team delivers 24/7 Managed Detection and Response services to customers on every continent. Led by cybersecurity experts with experience working for government, the military and multiple industry verticals, the Cybereason Global SOC Team continuously hunts for the most sophisticated and pervasive threats to support our mission to end cyberattacks on the endpoint, across the enterprise, and everywhere the battle moves.</p>
                
                
                  <a class="cr-button cr-button__min" href="https://www.cybereason.com/blog/authors/cybereason-global-soc-team">All Posts by Cybereason Global SOC Team</a>
                
              </div>            
            </div>
          
        <!-- CONDITIONAL Post Type Choices -->
        
        <!-- Malicious Life Post -->
        
        
        <!-- CISO Stories -->
        
        <!-- Webinar -->
        
          
        <!-- CONDITIONAL Transcript -->
          
        
         <!-- Related Posts -->
        <div id="hs_cos_wrapper_module_1649342860525315" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module">
<section class="cr-section related-posts__wrapper">
  <div class="container container-is-blog page-center">
     <h3>Related Posts</h3>
     <div class="columns is-multiline">
       
  
 <div class="column is-6-fullhd is-6-desktop is-full-mobile blog-listing__single-post">
  <div class="text-content-bundle">
    <a href="https://www.cybereason.com/blog/threat-alert-havanacrypt-ransomware-masquerading-as-google-update"><img src="https://www.cybereason.com/hubfs/blog-post-text%20%28125%29.png" alt="THREAT ALERT: HavanaCrypt Ransomware Masquerading as Google Update"></a>
    <h4><a href="https://www.cybereason.com/blog/threat-alert-havanacrypt-ransomware-masquerading-as-google-update"><span class="underline">THREAT ALERT: HavanaCrypt Ransomware Masquerading as Google Update</span></a></h4>
     <p>First observed in June 2022 in the wild, HavanaCrypt Ransomware masquerades as a legitimate Google Chrome update with sophisticated anti-analysis techniques and other functionality that may be used for data exfiltration and privilege escalation...</p>
   </div>
 </div>


  
 <div class="column is-6-fullhd is-6-desktop is-full-mobile blog-listing__single-post">
  <div class="text-content-bundle">
    <a href="https://www.cybereason.com/blog/threat-analysis-report-bumblebee-loader-the-high-road-to-enterprise-domain-control"><img src="https://www.cybereason.com/hubfs/blog-post-text%20-%202022-08-15T115923.524.png" alt="THREAT ANALYSIS REPORT: Bumblebee Loader – The High Road to Enterprise Domain Control"></a>
    <h4><a href="https://www.cybereason.com/blog/threat-analysis-report-bumblebee-loader-the-high-road-to-enterprise-domain-control"><span class="underline">THREAT ANALYSIS REPORT: Bumblebee Loader – The High Road to Enterprise Domain Control</span></a></h4>
     <p>Cybereason GSOC observed distribution of the Bumblebee Loader and post-exploitation activities including privilege escalation, reconnaissance and credential theft. Bumblebee operators use the Cobalt Strike framework throughout the attack and abuse credentials for privilege escalation to access Active Directory, as well as abusing a domain administrator account to move laterally, create local user accounts and exfiltrate data...</p>
   </div>
 </div>



    </div>
  </div>
</section></div>
          
          
      </div>
        
        <!-- Sidebar -->

      <div class="column is-3-fullhd is-3-desktop is-12-mobile cr-malicious-life-network__sidebar">
        <div class="cr-ml-sidebar--group">
        <div class="top-stripe"></div>
        <div class="sidebar-block search-section">
          <form action="/hs-search-results">
            <input type="search" class="hs-search-field__input" name="term" autocomplete="on" placeholder="Search">
            <input type="hidden" name="type" value="BLOG_POST">
            <input type="hidden" name="type" value="LISTING_PAGE">
            <button type="submit" class="arrow"></button>
          </form>
        </div>
        <div class="sidebar-block subscribe">
          <a href="#blog-subscribe">
            <h4>Subscribe</h4>
            <span>Never miss a blog.</span>
          </a>
        </div>

        <div class="sidebar-block recent-posts">
          <h4>Recent Posts</h4>
          
            
                <div class="recent-posts__single-post">
                    <div class="text-content-bundle">
                        <a href="https://www.cybereason.com/blog/blacksuit-data-exfil" class="post-name"><span class="underline">BlackSuit: A Hybrid Approach with Data Exfiltration and Encryption</span></a>
                       
                    </div>
                </div>
            
                <div class="recent-posts__single-post">
                    <div class="text-content-bundle">
                        <a href="https://www.cybereason.com/blog/net-support-rat-wordpress-clickfix" class="post-name"><span class="underline">Deploying NetSupport RAT via WordPress &amp; ClickFix</span></a>
                       
                    </div>
                </div>
            
                <div class="recent-posts__single-post">
                    <div class="text-content-bundle">
                        <a href="https://www.cybereason.com/blog/ttp-briefing-jan-may-2025" class="post-name"><span class="underline">Introducing the Cybereason TTP Briefing: Frontline Threat Intelligence Insights</span></a>
                       
                    </div>
                </div>
            
        </div>

        <div class="sidebar-block category-listing">
          <h4>Categories</h4>
          <ul>
            <li><a href="https://www.cybereason.com/blog/category/research">Research</a></li>
            <li><a href="https://www.cybereason.com/blog/category/podcasts">Podcasts</a></li>
            <li><a href="https://www.cybereason.com/blog/category/webinars">Webinars</a></li>
            <li><a href="https://www.cybereason.com/blog/category/resources">Resources</a></li>
            <li><a href="https://www.cybereason.com/blog/category/videos">Videos</a></li>
            <li><a href="https://www.cybereason.com/blog/category/news">News</a></li>
          </ul>

          <a class="rec-category__single--view-all" href="/blog/category/research">All Posts</a>
        </div>

        
      </div><!-- END .rec-categories__all -->
      
      
      
    </div>
       
    </div>
  </div>
</div></div>

</div><!--end row-->
</div><!--end row-wrapper -->

<div class="row-fluid-wrapper row-depth-1 row-number-2 ">
<div class="row-fluid ">
<div class="span12 widget-span widget-type-custom_widget " style="display: none;" data-widget-type="custom_widget" data-x="0" data-w="12">
<div id="hs_cos_wrapper_module_1616011887658867" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module">
<section class="cr-section related-posts__wrapper">
  <div class="container container-is-blog page-center">
     <h3>Related Posts</h3>
     <div class="columns is-multiline">
       
  
 <div class="column is-6-fullhd is-6-desktop is-full-mobile blog-listing__single-post">
  <div class="text-content-bundle">
    <a href="https://www.cybereason.com/blog/threat-alert-havanacrypt-ransomware-masquerading-as-google-update"><img src="https://www.cybereason.com/hubfs/blog-post-text%20%28125%29.png" alt="THREAT ALERT: HavanaCrypt Ransomware Masquerading as Google Update"></a>
    <h4><a href="https://www.cybereason.com/blog/threat-alert-havanacrypt-ransomware-masquerading-as-google-update"><span class="underline">THREAT ALERT: HavanaCrypt Ransomware Masquerading as Google Update</span></a></h4>
     <p>First observed in June 2022 in the wild, HavanaCrypt Ransomware masquerades as a legitimate Google Chrome update with sophisticated anti-analysis techniques and other functionality that may be used for data exfiltration and privilege escalation...</p>
   </div>
 </div>


  
 <div class="column is-6-fullhd is-6-desktop is-full-mobile blog-listing__single-post">
  <div class="text-content-bundle">
    <a href="https://www.cybereason.com/blog/threat-analysis-report-bumblebee-loader-the-high-road-to-enterprise-domain-control"><img src="https://www.cybereason.com/hubfs/blog-post-text%20-%202022-08-15T115923.524.png" alt="THREAT ANALYSIS REPORT: Bumblebee Loader – The High Road to Enterprise Domain Control"></a>
    <h4><a href="https://www.cybereason.com/blog/threat-analysis-report-bumblebee-loader-the-high-road-to-enterprise-domain-control"><span class="underline">THREAT ANALYSIS REPORT: Bumblebee Loader – The High Road to Enterprise Domain Control</span></a></h4>
     <p>Cybereason GSOC observed distribution of the Bumblebee Loader and post-exploitation activities including privilege escalation, reconnaissance and credential theft. Bumblebee operators use the Cobalt Strike framework throughout the attack and abuse credentials for privilege escalation to access Active Directory, as well as abusing a domain administrator account to move laterally, create local user accounts and exfiltrate data...</p>
   </div>
 </div>



    </div>
  </div>
</section></div>

</div><!--end widget-span -->
</div><!--end row-->
</div><!--end row-wrapper -->

<div class="row-fluid-wrapper row-depth-1 row-number-3 ">
<div class="row-fluid ">
<div class="span12 widget-span widget-type-custom_widget " style="" data-widget-type="custom_widget" data-x="0" data-w="12">
<div id="hs_cos_wrapper_module_161767462015235" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module widget-type-blog_subscribe" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module"><div class="cr-mln__blog-listing-page__subscribe-footer">
  <div class="container container-is-blog columns page-center">
    <div class="column is-8-fullhd is-8-desktop is-10-tablet is-12-mobile">
      <span class="tag">NEWSLETTER</span>
      <h3>Never miss a blog</h3>
      <p>Get the latest research, expert insights, and security industry news.</p>
      <a class="cr-button cr-mln__subscribe" href="#blog-subscribe">Subscribe</a>
    </div>
    <!--<div class="column is-5-fullhd is-5-desktop is-half-tablet is-12-mobile is-offset-1-fullhd is-offset-1-desktop">
      <div class="inputs-wrapper">
        
        
      </div>
    </div>-->
  </div>
</div></div>

</div><!--end widget-span -->
</div><!--end row-->
</div><!--end row-wrapper -->

<div class="row-fluid-wrapper row-depth-1 row-number-4 ">
<div class="row-fluid ">
<div class="span12 widget-span widget-type-custom_widget " style="" data-widget-type="custom_widget" data-x="0" data-w="12">
<div id="hs_cos_wrapper_module_166508001252918" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module"><div class="cr-sticky-cta-bar bg-black" id="sticky-bar">
  <div class="content">
    <span>Want to see the Cybereason Defense Platform in action?</span>
    <a class="cr-button cr-button__fill-yellow" href="https://www.cybereason.com/request-a-demo" target="_blank">Schedule a Demo</a>
  </div>
  <div class="close">X</div>
</div></div>

</div><!--end widget-span -->
</div><!--end row-->
</div><!--end row-wrapper -->

    </div><!--end body -->
</div><!--end body wrapper -->

<div class="footer-container-wrapper">
    <div class="footer-container container-fluid">

<div class="row-fluid-wrapper row-depth-1 row-number-1 ">
<div class="row-fluid ">
<div class="span12 widget-span widget-type-custom_widget " style="" data-widget-type="custom_widget" data-x="0" data-w="12">
<div id="hs_cos_wrapper_module_16036762394194314" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module"><!-- FOOTER -->

<footer class="cr-section cr-footer cr-footer__full">
    <div class="container page-center">
      <div class="columns">
          <div class="column is-6-fullhd is-5-desktop cr-footer__col cr-footer__left">
            <div class="cr-footer__Left-logo">
              
                <a href="https://www.cybereason.com">
                  
                <img src="https://www.cybereason.com/hubfs/dam/images/images-web/logos/cr-brand/cr-logo-inline--primary-white.png">
              </a>
            </div>
          </div>
          <div class="columns column is-6-fullhd is-6-desktop cr-footer__col cr-footer__right">
            <div class="cr-footer__links-list column">
              <h4>About</h4>
              <ul>
                <li><a href="https://www.cybereason.com/company/who-we-are">Who We Are</a>
                </li><li><a href="https://www.cybereason.com/company/careers">Careers</a>
          <!-- </li><li><a href="https://www.cybereason.com/company/leadership">Leadership</a> --->
                </li><li><a href="https://www.cybereason.com/company/contact-us">Contact</a>
              </li></ul>
            </div>
            <div class="cr-footer__links-list column">
              <h4>Resources</h4>
              <ul>
                <li><a href="https://www.cybereason.com/blog">Blog</a></li>
                <li><a href="https://www.cybereason.com/resources/tag/case-study">Case Studies</a></li>
                <li><a href="https://www.cybereason.com/resources/tag/webinars">Webinars</a></li>
                <li><a href="https://www.cybereason.com/resources/tag/white-papers">White Papers</a></li>
             </ul>
            </div>
            <div class="cr-footer__links-list column">
              <h4>Platform</h4>
              <ul>
                
                <li><a href="https://www.cybereason.com/platform">Overview</a></li>
                <li><a href="https://www.cybereason.com/platform/endpoint-prevention">Endpoint Protection</a></li>
                <li><a href="https://www.cybereason.com/platform/endpoint-detection-response-edr">EDR</a></li>
                <li><a href="https://www.cybereason.com/platform/managed-detection-response-mdr">MDR</a></li>
              </ul>
            </div>
          </div>
      </div>
    </div>
  
    <div class="container page-center">
      <div class="columns cr-footer__bottom-bar">
        <div class="column">
          <p>©Cybereason 2025. All Rights Reserved.</p>
        </div>
        <div class="column bottom-bar__links">
          <ul>
            <li><a href="https://www.cybereason.com/terms-of-use">Terms of Use</a></li>
            <li><a href="https://www.cybereason.com/privacy-notice">Privacy Notice</a></li>
            <li><a href="https://www.cybereason.com/ccpa-privacy-request">Do Not Sell</a></li>
            <li><a href="https://www.cybereason.com/security">Security</a></li>
            <!--<li><a href="#">Cookie Policy</a></li>-->
          </ul>
        </div>

        <div class="column bottom-bar__social">
          <ul>
            <li><a class="facebook" href="https://www.facebook.com/Cybereason/"></a></li>
            <li><a class="twitter" href="https://twitter.com/cybereason"></a></li>
            <li><a class="youtube" href="https://www.youtube.com/channel/UCOm7AaB0HiNH4Phe66sK0Ew"></a></li>
            <li><a class="linkedin" href="https://www.linkedin.com/company/cybereason"></a></li>
            <li><a class="instagram" href="https://www.instagram.com/cybereason"></a></li>
          </ul>
        </div>
    </div>
  </div>

</footer></div>

</div><!--end widget-span -->
</div><!--end row-->
</div><!--end row-wrapper -->

    </div><!--end footer -->
</div><!--end footer wrapper -->

    
<!-- HubSpot performance collection script -->
<script defer src="/hs/hsstatic/content-cwv-embed/static-1.1293/embed.js"></script>
<script src="https://www.cybereason.com/hs-fs/hubfs/hub_generated/template_assets/1/42507089303/1741528346196/template_animatedModal.min.js"></script>
<script>
var hsVars = hsVars || {}; hsVars['language'] = 'en';
</script>

<script src="/hs/hsstatic/cos-i18n/static-1.53/bundles/project.js"></script>
<script src="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/41681847227/1741488491170/module_CR_-_Malicious_Life_Network_--_Tier_One_Header.min.js"></script>
<script src="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/41682410610/1741488492472/module_CR_-_Malicious_Life_Network_--_Main_Hero.min.js"></script>
<script src="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/43300360745/1741488505140/module_CR_-_Malicious_Life_Network_--_Related_Posts.min.js"></script>
<script src="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/86933076631/1741488758324/module_CR_-_Sticky_CTA_Bar.min.js"></script>

<!-- Start of HubSpot Analytics Code -->
<script type="text/javascript">
var _hsq = _hsq || [];
_hsq.push(["setContentType", "blog-post"]);
_hsq.push(["setCanonicalUrl", "https:\/\/www.cybereason.com\/blog\/threat-analysis-report-plugx-rat-loader-evolution"]);
_hsq.push(["setPageId", "84230124556"]);
_hsq.push(["setContentMetadata", {
    "contentPageId": 84230124556,
    "legacyPageId": "84230124556",
    "contentFolderId": null,
    "contentGroupId": 5272851739,
    "abTestId": null,
    "languageVariantId": 84230124556,
    "languageCode": "en",
    
    
}]);
</script>

<script type="text/javascript" id="hs-script-loader" async defer src="/hs/scriptloader/3354902.js"></script>
<!-- End of HubSpot Analytics Code -->


<script type="text/javascript">
var hsVars = {
    render_id: "5e1dd890-2fbe-4eb3-bfc8-7872f7b71189",
    ticks: 1752838227847,
    page_id: 84230124556,
    
    content_group_id: 5272851739,
    portal_id: 3354902,
    app_hs_base_url: "https://app.hubspot.com",
    cp_hs_base_url: "https://cp.hubspot.com",
    language: "en",
    analytics_page_type: "blog-post",
    scp_content_type: "",
    
    analytics_page_id: "84230124556",
    category_id: 3,
    folder_id: 0,
    is_hubspot_user: false
}
</script>


<script defer src="/hs/hsstatic/HubspotToolsMenu/static-1.432/js/index.js"></script>

<script>if ($('[id^="hs_form"]').length > 0) {
  var myInterval = setInterval(
  function() {
    var myFields = document.getElementsByClassName('hs-input');
    if (myFields.length > 0) {
      clearInterval(myInterval);
      for (var i = 0; i < myFields.length; i++) {
        var myField = myFields[i];
		var myTagName = myField.tagName.toLowerCase();
        if (myTagName == 'input' || myTagName == 'textarea') {
          if (myField.placeholder != null) {
            myField.placeholder = myField.placeholder.replace('*', '');
          }
        } else if (myTagName == 'select') {
          myField.options[0].innerHTML = myField.options[0].innerHTML.replace('*', '');
        }
      }
    }
  }, 100);
}
</script>

<div id="fb-root"></div>
  <script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_GB/sdk.js#xfbml=1&version=v3.0";
  fjs.parentNode.insertBefore(js, fjs);
 }(document, 'script', 'facebook-jssdk'));</script> <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="https://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>
 


    <script>
function sticky_relocate() {
  var window_top = $(window).scrollTop();
  var div_top = $('#sticky-anchor').offset().top;
  if (window_top > div_top) {
    $('#sticky').addClass('stick');
  } else {
    $('#sticky').removeClass('stick');
  }
}

$(function() {
  $(window).scroll(sticky_relocate);
  sticky_relocate();
});
</script>
    <!-- Generated by the HubSpot Template Builder - template version 1.03 -->

<script type="text/javascript" src="/_Incapsula_Resource?SWJIYLWA=719d34d31c8e3a6e6fffd425f7e032f3&ns=2&cb=555564287" async></script></body></html>