<!doctype html><!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en" > <![endif]--><!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en" >        <![endif]--><!--[if IE 8]>    <html class="no-js lt-ie9" lang="en" >               <![endif]--><!--[if gt IE 8]><!--><html class="no-js" lang="en"><!--<![endif]--><head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="author" content="Cybereason Global SOC Team">
    <meta name="description" content="This report provides an overview of key features of the Snake #malware and similarities discovered in the staging mechanisms with two other information-stealing malware variants, FormBook and Agent Tesla...">
    <meta name="generator" content="HubSpot">
    <title>THREAT ANALYSIS REPORT: Snake Infostealer Malware</title>
    <link rel="shortcut icon" href="https://www.cybereason.com/hubfs/cr-favicon-1.png">
    
<meta name="viewport" content="width=device-width, initial-scale=1">

    
    <meta property="og:description" content="This report provides an overview of key features of the Snake #malware and similarities discovered in the staging mechanisms with two other information-stealing malware variants, FormBook and Agent Tesla...">
    <meta property="og:title" content="THREAT ANALYSIS REPORT: Snake Infostealer Malware">
    <meta name="twitter:description" content="This report provides an overview of key features of the Snake #malware and similarities discovered in the staging mechanisms with two other information-stealing malware variants, FormBook and Agent Tesla...">
    <meta name="twitter:title" content="THREAT ANALYSIS REPORT: Snake Infostealer Malware">

    

    
    <style>
a.cta_button{-moz-box-sizing:content-box !important;-webkit-box-sizing:content-box !important;box-sizing:content-box !important;vertical-align:middle}.hs-breadcrumb-menu{list-style-type:none;margin:0px 0px 0px 0px;padding:0px 0px 0px 0px}.hs-breadcrumb-menu-item{float:left;padding:10px 0px 10px 10px}.hs-breadcrumb-menu-divider:before{content:'›';padding-left:10px}.hs-featured-image-link{border:0}.hs-featured-image{float:right;margin:0 0 20px 20px;max-width:50%}@media (max-width: 568px){.hs-featured-image{float:none;margin:0;width:100%;max-width:100%}}.hs-screen-reader-text{clip:rect(1px, 1px, 1px, 1px);height:1px;overflow:hidden;position:absolute !important;width:1px}
</style>

<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/41681847227/1741488491170/module_CR_-_Malicious_Life_Network_--_Tier_One_Header.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/41682410610/1741488492472/module_CR_-_Malicious_Life_Network_--_Main_Hero.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/48386556055/1741488537305/module_CR_-_HTML_PopUp_Window_--_IOCs.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/43300360745/1741488505140/module_CR_-_Malicious_Life_Network_--_Related_Posts.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/86933076631/1741488758324/module_CR_-_Sticky_CTA_Bar.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/34473990280/1740999337265/module_CR_-_Footer_Full__en_US.min.css">
    

    
<!--  Added by GoogleTagManager integration -->
<script>
var _hsp = window._hsp = window._hsp || [];
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}

var useGoogleConsentModeV2 = true;
var waitForUpdateMillis = 1000;



var hsLoadGtm = function loadGtm() {
    if(window._hsGtmLoadOnce) {
      return;
    }

    if (useGoogleConsentModeV2) {

      gtag('set','developer_id.dZTQ1Zm',true);

      gtag('consent', 'default', {
      'ad_storage': 'denied',
      'analytics_storage': 'denied',
      'ad_user_data': 'denied',
      'ad_personalization': 'denied',
      'wait_for_update': waitForUpdateMillis
      });

      _hsp.push(['useGoogleConsentModeV2'])
    }

    (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
    j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
    'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-TJVVB7C');

    window._hsGtmLoadOnce = true;
};

_hsp.push(['addPrivacyConsentListener', function(consent){
  if(consent.allowed || (consent.categories && consent.categories.analytics)){
    hsLoadGtm();
  }
}]);

</script>

<!-- /Added by GoogleTagManager integration -->


<script src="https://use.typekit.net/vyv2ljd.js"></script>
<script>try{Typekit.load({ async: false });}catch(e){}</script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<link rel="preload" href="/hubfs/__dam/fonts/ionicons.eot" as="font" type="font/otf" crossorigin>
<link rel="preload" href="/hubfs/dam/fonts/criteria/Criteria-CF-Regular.woff2" as="font" type="font/woff2" crossorigin>
<link rel="preload" href="/hubfs/dam/fonts/criteria/Criteria-CF-Medium.woff2" as="font" type="font/woff2" crossorigin>
<link rel="preload" href="/hubfs/dam/fonts/peristyle/Peristyle-Black.woff2" as="font" type="font/woff2" crossorigin>
<link rel="amphtml" href="https://www.cybereason.com/blog/research/threat-analysis-report-snake-infostealer-malware?hs_amp=true">

<meta property="og:image" content="https://www.cybereason.com/hubfs/Threat%20Alert%20template%20%282%29.png">

<meta name="twitter:image" content="https://www.cybereason.com/hubfs/Threat%20Alert%20template%20%282%29.png">


<meta property="og:url" content="https://www.cybereason.com/blog/research/threat-analysis-report-snake-infostealer-malware">
<meta name="twitter:card" content="summary">

<link rel="canonical" href="https://www.cybereason.com/blog/research/threat-analysis-report-snake-infostealer-malware">

<meta property="og:type" content="article">
<link rel="alternate" type="application/rss+xml" href="https://www.cybereason.com/blog/rss.xml">
<meta name="twitter:domain" content="www.cybereason.com">
<script src="//platform.linkedin.com/in.js" type="text/javascript">
    lang: en_US
</script>

<meta http-equiv="content-language" content="en">
<link rel="stylesheet" href="//7052064.fs1.hubspotusercontent-na1.net/hubfs/7052064/hub_generated/template_assets/DEFAULT_ASSET/1748976738297/template_layout.min.css">


<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/template_assets/1/34470223313/1741528336747/template_cr-master__cta.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/template_assets/1/34470477360/1743626992502/template_cr-master__main.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/template_assets/1/35275979682/1741528339661/template_ionicons.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/template_assets/1/42760289143/1741528346957/template_cr-mln__build.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/template_assets/1/34470224480/1741528337131/template_cr-framework__bulma-columns.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/template_assets/1/35291999472/1741528340159/template_cr-framework__bulma.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/template_assets/1/42363645447/1741528345735/template_hamburger-animation.min.css">
<link rel="stylesheet" href="https://www.cybereason.com/hs-fs/hubfs/hub_generated/template_assets/1/42507091846/1741528346726/template_animate.min.css">


    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&amp;display=swap" rel="stylesheet">
<script src="/hubfs/dam/plugins/marker-animation.js"></script>
<script>
$(document).ready(function() {
  $('.highlight').markerAnimation({
    "color":'var(--cr-yellow)',
    "font_weight":'normal',
    "background-size": '200% 1.2em'
  });
});
</script>

    <style>
.cr-mln__blog-post .container-is-blog.cr-mln__blog-post--body .column:nth-of-type(2) img {
    background: #FFFFFF;
    border: 1px solid #CCCCCC;
    border-radius: 5px 5px 5px 5px;
    padding: 10px;
}
</style>

</head>
<body class="   hs-content-id-58497025810 hs-blog-post hs-blog-id-5272851739" style="">
<!--  Added by GoogleTagManager integration -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-TJVVB7C" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>

<!-- /Added by GoogleTagManager integration -->

    <div class="header-container-wrapper">
    <div class="header-container container-fluid">

<div class="row-fluid-wrapper row-depth-1 row-number-1 ">
<div class="row-fluid ">
<div class="span12 widget-span widget-type-custom_widget " style="" data-widget-type="custom_widget" data-x="0" data-w="12">
<div id="hs_cos_wrapper_module_1615433790649568" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module"><section id="cr-malicious-life-network__tier-one-header" class="position-flex">
  <div class="#">
    <div id="logo"><a href="https://www.cybereason.com"><img src="https://www.cybereason.com/hubfs/dam/images/images-web/logos/cr-brand/cr-logo-inline--primary-black.png"></a></div>
    <div id="back-to">
      <a href="https://www.cybereason.com">Back to <span>Cybereason.com</span></a>
    </div>
    <!-- Hamburger Menu -->
    <button class="hamburger hamburger--collapse" type="button">
      <span class="hamburger-box">
        <span class="hamburger-inner"></span>
      </span>
    </button>
    <div class="cr-mln__hamburger-menu--overlay">
      <ul>
        <li><a href="https://www.cybereason.com/blog/all"><span class="underline">All Posts</span></a></li>
        <li><a href="/blog/category/research"><span class="underline">Research</span></a></li>
        <li><a href="/blog/category/podcasts"><span class="underline">Podcasts</span></a></li>
        <li><a href="/blog/category/webinars"><span class="underline">Webinars</span></a></li>
        <li><a href="/blog/category/resources"><span class="underline">Resources</span></a></li>
        <li><a href="/blog/category/videos"><span class="underline">Videos</span></a></li>
        <li><a href="/blog/category/news"><span class="underline">News</span></a></li>
      </ul>
      <div class="subscribe">
        <a href="#blog-subscribe">Subscribe</a>
      </div>
    </div>
    <!-- -->
  </div>
</section></div>

</div><!--end widget-span -->
</div><!--end row-->
</div><!--end row-wrapper -->

<div class="row-fluid-wrapper row-depth-1 row-number-2 ">
<div class="row-fluid ">
<div class="span12 widget-span widget-type-custom_widget mln-homepage" style="" data-widget-type="custom_widget" data-x="0" data-w="12">
<div id="hs_cos_wrapper_module_1615433785464566" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module"><section class="cr-malicious-life-network__hero-main base">
  <div class="container-is-blog columns hero-content page-center">
    <div class="column is-5-fullhd is-5-desktop is-12-touch">
      <a href="/blog"><img class="cr-mln-logo" src="https://www.cybereason.com/hubfs/dam/images/images-web/logos/cr-brand/cr-malicious-life-logo-v2.png"></a>
    </div>
    <div class="column is-7-fullhd is-7-desktop is-hidden-mobile is-hidden-tablet-only">
      <div class="cr-mln__search-subscribe">
        <div class="cr-mln__search">
          <a href="#cr-search-modal" class="search-btn"><img src="https://www.cybereason.com/hubfs/dam/images/images-web/blog-images/template-images/cr-blog-icon--search-dark-gray.png" alt="Search"></a>
        </div>
        <div class="cr-mln__subscribe">
          <a class="btn-subscribe" href="#blog-subscribe">Subscribe</a>
        </div>
      </div>
      <div class="cr-mln__category-nav">
        <ul>
          <li><a href="/blog/category/all"><span class="underline">All</span></a></li>
          <li><a href="/blog/category/research"><span class="underline">Research</span></a></li>
          <li><a href="/blog/category/podcasts"><span class="underline">Podcasts</span></a></li>
          <li><a href="/blog/category/webinars"><span class="underline">Webinars</span></a></li>
          <li><a href="/blog/category/resources"><span class="underline">Resources</span></a></li>
          <li><a href="/blog/category/videos"><span class="underline">Videos</span></a></li>
          <li><a href="/blog/category/news"><span class="underline">News</span></a></li>
        </ul>
      </div>
    </div>
  </div>
      <!-- MOBILE Search and Subscribe -->
      <div class="container-is-blog columns is-gapless is-hidden-desktop cr-mln__search-subscribe--mobile">
        <div class="column">
          <a class="search-btn">Search</a>
        </div>
        <div class="column">
          <a class="#" href="#blog-subscribe">Subscribe</a>
        </div>
      </div>

      <!-- END MOBILE Search and Subscribe -->
  
  <!-- SEARCH Modal Wrap -->

  <div id="cr-search-modal">
        <!--THIS IS IMPORTANT! to close the modal, the class name has to match the name given on the ID -->
        <div id="btn-close-modal" class="close-cr-search-modal"> 
            X
        </div>

        <div class="modal-content">
            <div class="container columns">
              <div class="column">
                <div class="cr-search-modal__search-bar">
                  <h3>Search</h3>
                  <form action="/hs-search-results">
                    <input type="search" class="hs-search-field__input" name="term" autocomplete="on" placeholder="Search...">
                    <input type="hidden" name="type" value="BLOG_POST">
                    <input type="hidden" name="type" value="LISTING_PAGE">
                    <button type="submit" class="arrow"></button>
                  </form>
                  
                </div>

              </div>
          </div>
        </div>
    </div>
  <!-- END Search Modal Wrap -->

</section></div>

</div><!--end widget-span -->
</div><!--end row-->
</div><!--end row-wrapper -->

    </div><!--end header -->
</div><!--end header wrapper -->

<div class="body-container-wrapper">
    <div class="body-container container-fluid">

<div class="row-fluid-wrapper row-depth-1 row-number-1 ">
<div class="row-fluid ">
<div class="span12 widget-span widget-type-blog_content " style="" data-widget-type="blog_content" data-x="0" data-w="12">







<div class="cr-mln__blog-post">
  <div class="container-is-blog columns is-multiline page-center">

    <div class="column is-8-fullhd is-8-desktop is-offset-2-fullhd is-offset-2-desktop is-10-tablet is-offset-1-tablet">
      <div class="featured-image"><img src="https://www.cybereason.com/hubfs/Threat%20Alert%20template%20%282%29.png" alt=""></div>
      <h1><span id="hs_cos_wrapper_name" class="hs_cos_wrapper hs_cos_wrapper_meta_field hs_cos_wrapper_type_text" style="" data-hs-cos-general-type="meta_field" data-hs-cos-type="text">THREAT ANALYSIS REPORT: Snake Infostealer Malware</span></h1>
      <div class="cr-mln__post-author-share">
      <div id="hubspot-author_data" class="hubspot-editable cr-mln__post-meta" data-hubspot-form-id="author_data" data-hubspot-name="Blog Author">
        
          <span class="descriptor">Written By</span>
          <p><span class="author">Cybereason Global SOC Team</span></p>
         
      </div>
    </div>
     
    </div>
    
    <!-- Sticky Author and Social Box -->
    
    <!-- END Sticky Author and Social Box -->
      <div class="container-is-blog columns is-multiline page-center cr-mln__blog-post--body">
        
        <div class="column is-7-fullhd is-7-desktop is-10-tablet is-10-mobile is-offset-1-fullhd is-offset-1-desktop is-offset-1-tablet is-offset-1-mobile">
          <span id="hs_cos_wrapper_post_body" class="hs_cos_wrapper hs_cos_wrapper_meta_field hs_cos_wrapper_type_rich_text" style="" data-hs-cos-general-type="meta_field" data-hs-cos-type="rich_text"><p>The Cybereason Global Security Operations Center (GSOC) issues Cybereason Threat Analysis reports to inform on impacting threats. The Threat Analysis reports investigate these threats and provide practical recommendations for protecting against them.</p>
<!--more-->
<p>In this Threat Analysis report, the GSOC investigates Snake, a feature-rich information-stealing malware. This report provides an overview of key information-stealing features of the Snake malware and discusses similarities that we discovered in the staging mechanisms of samples from Snake and two common information-stealing malware programs, FormBook and Agent Tesla.</p>
<h2 style="font-size: 24px; font-weight: normal;">Key Findings:</h2>
<ul>
<li style="list-style-type: none;">
<ul style="font-size: 18px;">
<li aria-level="1"><strong>Serious threat to privacy and security</strong>: Snake is a feature-rich information-stealing malware. Snake has keystroke logging as well as clipboard data, screenshot, and credential theft capabilities. Snake can steal credentials from over 50 applications, which include File Transfer Protocol (FTP) clients, email clients, communication platforms, and web browsers. Snake can exfiltrate stolen data through a variety of protocols, such as FTP, Simple Mail Transfer Protocol (SMTP), and Telegram.</li>
<li aria-level="1"><strong>No industry or geographical preferences</strong>: Snake has been present in the threat landscape since November 2020 and has been a constant threat to users’ privacy and security since then. The Cybereason GSOC observed a spike in infections using the Snake malware in late August 2021 with no specific trend in the industry or the geographical locations of the targeted victims.</li>
<li aria-level="1"><strong>Detected and prevented</strong>: The <a href="/platform" rel="noopener" target="_blank"><span>Cybereason Defense Platform</span></a> effectively detects and prevents the Snake malware.</li>
<li aria-level="1"><strong>Cybereason Managed Detection and Response (MDR)</strong>: The Cybereason GSOC has zero tolerance towards attacks that involve information-stealing malware, such as Snake, and categorizes such attacks as critical, high-severity incidents. The <a href="/services/managed-detection-response-mdr" rel="noopener" target="_blank"><span>Cybereason GSOC MDR Team</span></a> issues a comprehensive report to customers when such an incident occurs. The report provides an in-depth overview of the incident, which helps to scope the extent of compromise and the impact on the customer’s environment. In addition, the report provides attribution information when possible as well as recommendations for mitigating and isolating the threat.</li>
</ul>
</li>
</ul>
<h2 style="font-size: 24px; font-weight: normal;"><span style="color: #000000;">Introduction</span></h2>
<p>The Snake malware is an information-stealing malware that is implemented in the .NET programming language. We suspect that the malware authors themselves named the malware Snake, since the malware’s name is present in the data that Snake exfiltrates from compromised systems. Malicious actors distribute Snake as attachments to phishing emails with various themes, such as payment requests.</p>
<p>The attachments are typically archive files with file name extensions such as <em>img</em>, <em>zip</em>, <em>tar</em>, and <em>rar</em>, and store a .NET executable that implements the Snake malware. Users have to first decompress and then start the .NET executable to infect their systems. The executable stages the information-stealing features of the Snake malware on compromised systems and establishes persistence:</p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-1.png?width=401&amp;name=snake-blog-1.png" alt="snake-blog-1" width="401" loading="lazy" style="width: 401px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-1.png?width=201&amp;name=snake-blog-1.png 201w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-1.png?width=401&amp;name=snake-blog-1.png 401w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-1.png?width=602&amp;name=snake-blog-1.png 602w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-1.png?width=802&amp;name=snake-blog-1.png 802w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-1.png?width=1003&amp;name=snake-blog-1.png 1003w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-1.png?width=1203&amp;name=snake-blog-1.png 1203w" sizes="(max-width: 401px) 100vw, 401px"></p>
<p style="font-size: 16px; text-align: center;"><em style="background-color: transparent; text-align: center;">The data that the Snake malware exfiltrates contains the malware’s name</em></p>
<p>Snake first appeared on the threat landscape in late November 2020. The malware is <a href="https://blog.checkpoint.com/2021/08/12/july-2021s-most-wanted-malware-snake-keylogger-enters-top-10-for-first-time/" rel="noopener" target="_blank"><span>currently available for purchase</span></a> in the underground scene for a price range between US $25 and $500. Malicious actors have been distributing Snake continuously through phishing campaigns since November 2020. The Cybereason GSOC observed a spike in infections using the Snake malware in late August 2021 with no specific trend in the industry or the geographical locations of the targeted victims.</p>
<p>Snake is a feature-rich malware and poses a significant threat to users’ privacy and security. Snake has keystroke logging as well as clipboard data, screenshot, and credential theft capabilities. We observed that Snake can steal credentials from over 50 applications, which include FTP clients, mail clients, communication platforms, and web browsers. Snake supports data exfiltration through a variety of protocols, such as FTP, SMTP, and Telegram.</p>
<p><a href="https://threatresearch.ext.hp.com/the-many-skins-of-snake-keylogger/" rel="noopener" target="_blank"><span>Researchers have identified many similarities</span></a> between the code of the information-stealing features of Snake and the code of the Matiex malware. Although the source code of Matiex has been available for purchase in the underground scene since February 2021, the information-stealing features of Snake samples that date earlier than February 2021 have code that is very similar to Matiex code.</p>
<p>In this report, we show that in addition to the information-stealing features of Snake, the staging mechanism of Snake samples is almost identical to that of two common information-stealing malware programs, FormBook and Agent Tesla.</p>
<h2 style="font-size: 24px; font-weight: normal;"><span style="color: #000000;">Analysis</span></h2>
<h3 style="font-size: 20px; font-weight: normal;"><span style="color: #434343;">The Snake Staging Mechanism</span></h3>
<p>Malicious actors distribute the Snake malware as attachments in phishing emails. These attachments are typically archive files that store a .NET Windows executable, which stages the information-stealing features of Snake on compromised systems and establishes persistence.&nbsp;</p>
<p>In this report, we focus on a Snake sample with a secure hash algorithm (SHA)-1 hash <em>392597dabf489b682dd10c20d2d84abc3b49abaa</em> and a filename <em>SeptemberOrderlist.pdf.exe</em>:</p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-2.png?width=805&amp;name=snake-blog-2.png" alt="snake-blog-2" width="805" loading="lazy" style="width: 805px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-2.png?width=403&amp;name=snake-blog-2.png 403w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-2.png?width=805&amp;name=snake-blog-2.png 805w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-2.png?width=1208&amp;name=snake-blog-2.png 1208w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-2.png?width=1610&amp;name=snake-blog-2.png 1610w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-2.png?width=2013&amp;name=snake-blog-2.png 2013w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-2.png?width=2415&amp;name=snake-blog-2.png 2415w" sizes="(max-width: 805px) 100vw, 805px"></p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-3.png?width=573&amp;name=snake-blog-3.png" alt="snake-blog-3" width="573" loading="lazy" style="width: 573px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-3.png?width=287&amp;name=snake-blog-3.png 287w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-3.png?width=573&amp;name=snake-blog-3.png 573w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-3.png?width=860&amp;name=snake-blog-3.png 860w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-3.png?width=1146&amp;name=snake-blog-3.png 1146w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-3.png?width=1433&amp;name=snake-blog-3.png 1433w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-3.png?width=1719&amp;name=snake-blog-3.png 1719w" sizes="(max-width: 573px) 100vw, 573px"></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em style="text-align: center;">Phishing emails that distribute the Snake malware</em></span></p>
<p>When a user runs the compressed .NET Snake executable, <em>SeptemberOrderlist.pdf.exe</em>, the executable unpacks (i.e., decodes and decrypts) a base-64 encoded and encrypted .NET assembly. The Snake executable stores the encoded and encrypted code of this assembly in a string variable. <em>SeptemberOrderlist.pdf.exe</em> decrypts the code of the .NET assembly by using a symmetric encryption key of the ​​Triple Data Encryption Standard (DES) encryption algorithm.&nbsp;</p>
<p>The name of the decrypted .NET assembly is <em>representative</em>. <em>SeptemberOrderlist.pdf.exe</em> then loads and executes the <em>representative</em> assembly by instantiating an <em>Panamera.Porsche</em> object that the assembly implements:&nbsp;</p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-4.png?width=712&amp;name=snake-blog-4.png" alt="snake-blog-4" width="712" loading="lazy" style="width: 712px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-4.png?width=356&amp;name=snake-blog-4.png 356w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-4.png?width=712&amp;name=snake-blog-4.png 712w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-4.png?width=1068&amp;name=snake-blog-4.png 1068w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-4.png?width=1424&amp;name=snake-blog-4.png 1424w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-4.png?width=1780&amp;name=snake-blog-4.png 1780w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-4.png?width=2136&amp;name=snake-blog-4.png 2136w" sizes="(max-width: 712px) 100vw, 712px"></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em style="text-align: center;">Snake decrypts the .NET assembly representative using the Triple DES encryption algorithm</em></span></p>
<p>One of the functionalities of the <em>representative</em> assembly is decoding and loading an image resource of <em>SeptemberOrderlist.pdf.exe</em> called <em>TaskWrapperAsyncResu</em>‎. To avoid detection by sandbox analysis engines, the <em>representative</em> assembly decodes <em>TaskWrapperAsyncResu</em>‎ after a random sleep time of 38–47 seconds. The decoded <em>TaskWrapperAsyncResu</em>‎ image resource is another .NET assembly named <em>CF_Secretaria</em>:</p>
<p><em style="text-align: center;"><img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-5.png?width=698&amp;name=snake-blog-5.png" alt="snake-blog-5" width="698" loading="lazy" style="width: 698px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-5.png?width=349&amp;name=snake-blog-5.png 349w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-5.png?width=698&amp;name=snake-blog-5.png 698w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-5.png?width=1047&amp;name=snake-blog-5.png 1047w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-5.png?width=1396&amp;name=snake-blog-5.png 1396w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-5.png?width=1745&amp;name=snake-blog-5.png 1745w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-5.png?width=2094&amp;name=snake-blog-5.png 2094w" sizes="(max-width: 698px) 100vw, 698px"></em></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em style="text-align: center;">The representative assembly decodes and loads the CF_Secretaria assembly</em></span></p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-6.png?width=290&amp;name=snake-blog-6.png" alt="snake-blog-6" width="290" loading="lazy" style="width: 290px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-6.png?width=145&amp;name=snake-blog-6.png 145w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-6.png?width=290&amp;name=snake-blog-6.png 290w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-6.png?width=435&amp;name=snake-blog-6.png 435w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-6.png?width=580&amp;name=snake-blog-6.png 580w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-6.png?width=725&amp;name=snake-blog-6.png 725w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-6.png?width=870&amp;name=snake-blog-6.png 870w" sizes="(max-width: 290px) 100vw, 290px"></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em style="text-align: center;">The CF_Secretaria assembly is encoded as an image resource</em></span></p>
<p>Among other activities, the ​​<em>CF_Secretaria</em> assembly establishes persistence of the Snake malware on the compromised system as follows:</p>
<ul>
<li style="list-style-type: none;">
<ul style="font-size: 18px;">
<li aria-level="1"><em>CF_Secretaria</em> copies the Snake executable, <em>SeptemberOrderlist.pdf.exe, </em>in the user’s <em>AppData</em> folder under a random name, such as <em>C:\Users\User\AppData\Roaming\vxhnIvyvbHAK.exe</em>. The name <em>vxhnIvyvbHAK</em> may differ for different samples of the Snake malware.</li>
<li aria-level="1"><em>CF_Secretaria</em> creates an Extensible Markup Language (XML)-formatted scheduled task configuration file with the file name extension .<em>tmp</em> in the user’s temporary folder, such as <em>C:\Users\User\AppData\Local\Temp\tmp55AB.tmp</em>.</li>
<li aria-level="1"><em>CF_Secretaria</em> creates a scheduled task named, for example, ​​<em>Updates\vxhnIvyvbHAK</em>. To create this scheduled task, <em>CF_Secretaria</em> issues the following command:</li>
</ul>
</li>
</ul>
<p style="padding-left: 120px;"><em>C:\Windows\System32\schtasks.exe /Create /TN Updates\vxhnIvyvbHAK /XML C:\Users\User\AppData\Local\Temp\tmp55AB.tmp</em>&nbsp;</p>
<p style="padding-left: 120px;">The scheduled task executes the <em>C:\Users\User\AppData\Roaming\vxhnIvyvbHAK.exe</em> executable—that is, the Snake malware—at user logon:</p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-7.png?width=731&amp;name=snake-blog-7.png" alt="snake-blog-7" width="731" loading="lazy" style="width: 731px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-7.png?width=366&amp;name=snake-blog-7.png 366w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-7.png?width=731&amp;name=snake-blog-7.png 731w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-7.png?width=1097&amp;name=snake-blog-7.png 1097w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-7.png?width=1462&amp;name=snake-blog-7.png 1462w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-7.png?width=1828&amp;name=snake-blog-7.png 1828w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-7.png?width=2193&amp;name=snake-blog-7.png 2193w" sizes="(max-width: 731px) 100vw, 731px"></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em style="text-align: center;">CF_Secretaria creates an XML-formatted scheduled task configuration file</em></span></p>
<p>The staging process results in the execution of another instance of <em>SeptemberOrderlist.pdf.exe. </em>This instance of <em>SeptemberOrderlist.pdf.exe</em> maps in its context and executes the final payload, an obfuscated .NET assembly that implements the information-stealing features of Snake, which we discuss in the <em>The Features of Snake </em>section below:</p>
<h3 style="font-size: 20px; font-weight: normal;">Snake Meets FormBook and Agent Tesla</h3>
<p>The staging mechanisms of recent samples of the FormBook and Agent Tesla malware are almost identical to those of Snake samples. FormBook has extensive information-stealing capabilities, such as keystroke logging, credential theft, and screenshot theft. The FormBook malware has been available for sale in the underground scene since early 2016 as a one-time purchase or as malware-as-a-service following a subscription model. Agent Tesla is a common remote access tool (RAT) and information-stealing malware, first discovered in late 2014. Agent Tesla is also available for sale in the underground scene.&nbsp;</p>
<p>The following table presents example Snake, FormBook, and Agent Tesla samples that have similar staging mechanisms. We now provide a detailed overview of the similarities between the staging mechanisms of the Snake and FormBook samples:</p>
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2;">
<tbody>
<tr>
<td style="background-color: #f1c232; border: 1pt solid #000000;" colspan="2">
<p><strong>Snake</strong></p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p><strong>SHA-1 Hash</strong></p>
</td>
<td style="border: 1pt solid #000000;">
<p><a href="https://www.virustotal.com/gui/file/132482335f028ceb6094d9c29442faf900d838fb054eebbbf39208bb39ccf5ae" rel="noopener" target="_blank"><span>392597dabf489b682dd10c20d2d84abc3b49abaa</span></a></p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p><strong>First submission to VirusTotal</strong></p>
</td>
<td style="border: 1pt solid #000000;">
<p>2021-09-09</p>
</td>
</tr>
<tr>
<td style="background-color: #f1c232; border: 1pt solid #000000;" colspan="2">
<p><strong>FormBook</strong></p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p><strong>SHA-1 Hash</strong></p>
</td>
<td style="border: 1pt solid #000000;">
<p><a href="https://www.virustotal.com/gui/file/8c84e97b71aa8d34be8742cd4b6c0b86abdfb92379b099465eb751b0882efb23" rel="noopener" target="_blank"><span>43d8881c9bda6344a352d2744913dda5c64ea843</span></a></p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p><strong>First submission to VirusTotal</strong></p>
</td>
<td style="border: 1pt solid #000000;">
<p>2021-08-26</p>
</td>
</tr>
<tr>
<td style="background-color: #f1c232; border: 1pt solid #000000;" colspan="2">
<p><strong>Agent Tesla</strong></p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p><strong>SHA-1 Hash</strong></p>
</td>
<td style="border: 1pt solid #000000;">
<p><a href="https://www.virustotal.com/gui/file/d82098335a9c8d105f145c404633541be0dc8e2c4749026cd7b29f6ea8044f44" rel="noopener" target="_blank"><span>ae2e277a848421b4be46f1c6ccff727b5a07d90c</span></a></p>
</td>
</tr>
<tr>
<td style="border: 1pt solid #000000;">
<p><strong>First submission to VirusTotal</strong></p>
</td>
<td style="border: 1pt solid #000000;">
<p>2021-08-26</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>The Snake and FormBook samples unpack the same .NET assembly, <em>representative</em>, from a string variable. The way in which the actors behind Snake and FormBook samples pack the <em>representative</em> assembly in the variable may differ across samples. In addition, both samples load and execute the <em>representative</em> assembly by instantiating a <em>Panamera.Porsche</em> object that the assembly implements:</p>
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2;">
<tbody>
<tr>
<td>
<p style="text-align: center;">(a)<img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-8-b.png?width=300&amp;name=snake-blog-8-b.png" alt="snake-blog-8-b" width="300" loading="lazy" style="width: 300px;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-8-b.png?width=150&amp;name=snake-blog-8-b.png 150w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-8-b.png?width=300&amp;name=snake-blog-8-b.png 300w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-8-b.png?width=450&amp;name=snake-blog-8-b.png 450w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-8-b.png?width=600&amp;name=snake-blog-8-b.png 600w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-8-b.png?width=750&amp;name=snake-blog-8-b.png 750w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-8-b.png?width=900&amp;name=snake-blog-8-b.png 900w" sizes="(max-width: 300px) 100vw, 300px"></p>
</td>
<td>
<p style="text-align: center;">(b)<img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-8.png?width=300&amp;name=snake-blog-8.png" alt="snake-blog-8" width="300" loading="lazy" style="width: 300px;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-8.png?width=150&amp;name=snake-blog-8.png 150w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-8.png?width=300&amp;name=snake-blog-8.png 300w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-8.png?width=450&amp;name=snake-blog-8.png 450w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-8.png?width=600&amp;name=snake-blog-8.png 600w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-8.png?width=750&amp;name=snake-blog-8.png 750w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-8.png?width=900&amp;name=snake-blog-8.png 900w" sizes="(max-width: 300px) 100vw, 300px"></p>
<p style="text-align: center; font-size: 8px; line-height: 1;">&nbsp;</p>
</td>
</tr>
<tr>
<td style="text-align: center;" colspan="2"><span style="font-size: 16px;"><em style="text-align: center;">The representative assembly loaded by Snake (a) and FormBook (b)</em></span></td>
</tr>
</tbody>
</table>
<p style="text-align: center;">&nbsp;</p>
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2; width: 789px; height: 897.656px;">
<tbody>
<tr style="height: 430.098px;">
<td style="width: 788.984px; height: 430px;"><br><img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-9.png?width=809&amp;name=snake-blog-9.png" alt="snake-blog-9" width="809" loading="lazy" style="width: 809px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-9.png?width=405&amp;name=snake-blog-9.png 405w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-9.png?width=809&amp;name=snake-blog-9.png 809w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-9.png?width=1214&amp;name=snake-blog-9.png 1214w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-9.png?width=1618&amp;name=snake-blog-9.png 1618w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-9.png?width=2023&amp;name=snake-blog-9.png 2023w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-9.png?width=2427&amp;name=snake-blog-9.png 2427w" sizes="(max-width: 809px) 100vw, 809px">
<p style="text-align: center;">(a)</p>
</td>
</tr>
<tr style="height: 417.324px;">
<td style="width: 788.984px; height: 417px;"><br><img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-10.png?width=547&amp;name=snake-blog-10.png" alt="snake-blog-10" width="547" loading="lazy" style="width: 547px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-10.png?width=274&amp;name=snake-blog-10.png 274w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-10.png?width=547&amp;name=snake-blog-10.png 547w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-10.png?width=821&amp;name=snake-blog-10.png 821w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-10.png?width=1094&amp;name=snake-blog-10.png 1094w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-10.png?width=1368&amp;name=snake-blog-10.png 1368w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-10.png?width=1641&amp;name=snake-blog-10.png 1641w" sizes="(max-width: 547px) 100vw, 547px">
<p style="text-align: center;">(b)</p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="width: 788.984px; height: 49px;">
<p style="text-align: center; font-size: 16px;"><em>Snake (a) and FormBook (b) instantiate a Panamera.Porsche object</em></p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>The <em>representative</em> assemblies unpacked by the Snake and the FormBook sample decode image resources of the respective samples. The decoded image resources are the same .NET assembly, called <em>CF_Secretaria</em>, which the <em>representative</em> assemblies load after decoding:</p>
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2;">
<tbody>
<tr>
<td>
<p style="text-align: center;">(a)<img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-11-b.png?width=300&amp;name=snake-blog-11-b.png" alt="snake-blog-11-b" width="300" loading="lazy" style="width: 300px;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-11-b.png?width=150&amp;name=snake-blog-11-b.png 150w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-11-b.png?width=300&amp;name=snake-blog-11-b.png 300w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-11-b.png?width=450&amp;name=snake-blog-11-b.png 450w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-11-b.png?width=600&amp;name=snake-blog-11-b.png 600w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-11-b.png?width=750&amp;name=snake-blog-11-b.png 750w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-11-b.png?width=900&amp;name=snake-blog-11-b.png 900w" sizes="(max-width: 300px) 100vw, 300px"></p>
</td>
<td>
<p style="text-align: center;">(b)<img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-11.png?width=300&amp;name=snake-blog-11.png" alt="snake-blog-11" width="300" loading="lazy" style="width: 300px;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-11.png?width=150&amp;name=snake-blog-11.png 150w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-11.png?width=300&amp;name=snake-blog-11.png 300w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-11.png?width=450&amp;name=snake-blog-11.png 450w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-11.png?width=600&amp;name=snake-blog-11.png 600w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-11.png?width=750&amp;name=snake-blog-11.png 750w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-11.png?width=900&amp;name=snake-blog-11.png 900w" sizes="(max-width: 300px) 100vw, 300px"></p>
</td>
</tr>
<tr>
<td colspan="2">
<p style="text-align: center; font-size: 16px;"><em>The CF_Secretaria assembly loaded by Snake (a) and FormBook (b)</em></p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>The staging mechanisms of the Snake and FormBook samples significantly diverge at the point of deployment of the final payloads, or the information-stealing features of Snake and FormBook. The final payload of the Snake sample is a .NET assembly that runs in the context of a separate instance of the sample, while the final payload of the FormBook sample is a native Windows executable.&nbsp;</p>
<p>The FormBook sample injects its final payload in legitimate Windows processes, such as <em>explorer.exe</em> and <em>wlanext.exe</em>. <a href="https://www.fortinet.com/blog/threat-research/deep-analysis-formbook-new-variant-delivered-phishing-campaign-part-ii" rel="noopener" target="_blank"><span>Previous research documents the deployment of the final payload</span></a> of the FormBook sample in greater detail:</p>
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2;">
<tbody>
<tr>
<td>
<p style="text-align: center;">(a)<img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-12.png?width=300&amp;name=snake-blog-12.png" alt="snake-blog-12" width="300" loading="lazy" style="width: 300px;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-12.png?width=150&amp;name=snake-blog-12.png 150w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-12.png?width=300&amp;name=snake-blog-12.png 300w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-12.png?width=450&amp;name=snake-blog-12.png 450w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-12.png?width=600&amp;name=snake-blog-12.png 600w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-12.png?width=750&amp;name=snake-blog-12.png 750w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-12.png?width=900&amp;name=snake-blog-12.png 900w" sizes="(max-width: 300px) 100vw, 300px"></p>
</td>
<td>
<p style="text-align: center;">(b)<img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-13.png?width=268&amp;name=snake-blog-13.png" alt="snake-blog-13" width="268" loading="lazy" style="width: 268px;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-13.png?width=134&amp;name=snake-blog-13.png 134w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-13.png?width=268&amp;name=snake-blog-13.png 268w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-13.png?width=402&amp;name=snake-blog-13.png 402w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-13.png?width=536&amp;name=snake-blog-13.png 536w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-13.png?width=670&amp;name=snake-blog-13.png 670w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-13.png?width=804&amp;name=snake-blog-13.png 804w" sizes="(max-width: 268px) 100vw, 268px"></p>
</td>
</tr>
<tr>
<td colspan="2">
<p style="text-align: center;"><span style="font-size: 16px;"><em>Process tree: The deployment of the final payload of the Snake sample (a) and the FormBook sample (b)</em></span></p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>The fact that the staging mechanisms of the Snake and other common information-stealing malware, such as FormBook and Agent Tesla, are almost identical indicates that the actors behind the Snake sample that we analyzed may have purchased or otherwise obtained the staging mechanism from other actors on the malware marketplace. The same actors might also distribute the Snake, FormBook and Agent Tesla samples that share the staging mechanism.&nbsp;</p>
<p>Adding the <a href="https://threatresearch.ext.hp.com/the-many-skins-of-snake-keylogger/" rel="noopener" target="_blank"><span>strong indications that the staged information-stealing features</span></a> of the Snake malware themselves are based on the Matiex malware, the former scenario shows how easy it is for malware developers to create new malware by code reuse. Although this report focuses on samples of the Snake, FormBook, and Agent Tesla malware, other malware could use the same staging mechanism as the samples that we analyzed.</p>
<h2 style="font-size: 24px; font-weight: normal;"><span style="color: #000000;">The Features of Snake</span></h2>
<p>This section provides an overview of key information-stealing features of the Snake sample that we analyzed, <em>SeptemberOrderlist.pdf.exe</em>. We emphasize that different Snake samples do not use all implemented features. <a href="https://threatresearch.ext.hp.com/the-many-skins-of-snake-keylogger/" rel="noopener" target="_blank"><span>Previous research</span></a> indicates that malicious actors build Snake samples by using a builder tool that integrates all Snake features in built samples, but enables only the features selected by the actors.</p>
<p>For persistence, in addition to creating a scheduled task by using its staging mechanism, Snake can also edit the registry key:</p>
<p style="padding-left: 40px;"><em>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run</em> to execute itself at user logon.</p>
<p>To avoid detection, Snake can disable solutions that may detect the malware’s operation by killing associated processes, such as the <em>avastui</em> process, which is related to the Avast antivirus, and the <em>wireshark</em> process, which is related to the Wireshark network traffic analyzer.&nbsp;</p>
<p>The table below lists the names of the processes that Snake stops. In addition, Snake can add itself to the exclusion list of the Windows Defender security mechanism by executing the PowerShell command <em>powershell.exe Add-MpPreference</em> <em>-ExclusionPath </em>and specifying the path to the Snake executable:</p>
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2;">
<tbody>
<tr>
<td style="border: 1pt solid #000000;">
<p>zlclient</p>
<p>egui</p>
<p>bdagent</p>
<p>npfmsg</p>
<p>olydbg</p>
<p>anubis</p>
<p>wireshark</p>
<p>avastui</p>
<p>_Avp32</p>
<p>vsmon</p>
<p>mbam</p>
<p>keyscrambler</p>
<p>_Avpcc</p>
<p>_Avpm</p>
<p>Ackwin32</p>
<p>Outpost</p>
<p>Anti-Trojan</p>
<p>ANTIVIR</p>
<p>Apvxdwin</p>
<p>ATRACK</p>
<p>Autodown</p>
<p>Avconsol</p>
<p>Ave32</p>
<p>Avgctrl</p>
<p>Avkserv</p>
<p>Avnt</p>
<p>Avp</p>
<p>Avp32</p>
<p>Avpcc</p>
<p>Avpdos32</p>
<p>Avpm</p>
<p>Avptc32</p>
<p>Avpupd</p>
<p>Avsched32</p>
<p>AVSYNMGR</p>
<p>Avwin95</p>
<p>Avwupd32</p>
<p>Blackd</p>
<p>Blackice</p>
<p>Cfiadmin</p>
<p>Cfiaudit</p>
<p>Cfinet</p>
<p>Cfinet32</p>
<p>Claw95</p>
<p>Claw95cf</p>
<p>Cleaner</p>
<p>Cleaner3</p>
<p>Defwatch</p>
<p>Dvp95</p>
<p>Dvp95_0</p>
<p>Ecengine</p>
<p>Esafe</p>
<p>Espwatch</p>
<p>F-Agnt95</p>
<p>Findviru</p>
<p>Fprot</p>
<p>F-Prot</p>
<p>F-Prot95</p>
<p>Fp-Win</p>
<p>Frw</p>
<p>F-Stopw</p>
<p>Iamapp</p>
<p>Iamserv</p>
<p>Ibmasn</p>
<p>Ibmavsp</p>
</td>
<td style="border: 1pt solid #000000;">
<p>Icload95</p>
<p>Icloadnt</p>
<p>Icmon</p>
<p>Icsupp95</p>
<p>Icsuppnt</p>
<p>Iface</p>
<p>Iomon98</p>
<p>Jedi</p>
<p>Lockdown2000</p>
<p>Lookout</p>
<p>Luall</p>
<p>MCAFEE</p>
<p>Moolive</p>
<p>Mpftray</p>
<p>N32scanw</p>
<p>NAVAPSVC</p>
<p>NAVAPW32</p>
<p>NAVLU32</p>
<p>Navnt</p>
<p>NAVRUNR</p>
<p>Navw32</p>
<p>Navwnt</p>
<p>NeoWatch</p>
<p>NISSERV</p>
<p>Nisum</p>
<p>Nmain</p>
<p>Normist</p>
<p>NORTON</p>
<p>Nupgrade</p>
<p>Nvc95</p>
<p>Outpost</p>
<p>Padmin</p>
<p>Pavcl</p>
<p>Pavsched</p>
<p>Pavw</p>
<p>PCCIOMON</p>
<p>PCCMAIN</p>
<p>Pccwin98</p>
<p>Pcfwallicon</p>
<p>Persfw</p>
<p>POP3TRAP</p>
<p>PVIEW95</p>
<p>Rav7</p>
<p>Rav7win</p>
<p>Rescue</p>
<p>Safeweb</p>
<p>Scan32</p>
<p>Scan95</p>
<p>Scanpm</p>
<p>Scrscan</p>
<p>Serv95</p>
<p>Smc</p>
<p>SMCSERVICE</p>
<p>Snort</p>
<p>Sphinx</p>
<p>Sweep95</p>
<p>SYMPROXYSVC</p>
<p>Tbscan</p>
<p>Tca</p>
<p>Tds2-98</p>
<p>Tds2-Nt</p>
<p>TermiNET</p>
<p>Vet95</p>
<p>Vettray</p>
<p>Vscan40</p>
</td>
<td style="border: 1pt solid #000000;">
<p>Vsecomr</p>
<p>Vshwin32</p>
<p>Vsstat</p>
<p>Webscanx</p>
<p>WEBTRAP</p>
<p>Wfindv32</p>
<p>Zonealarm</p>
<p>LOCKDOWN2000</p>
<p>RESCUE32</p>
<p>LUCOMSERVER</p>
<p>avgcc</p>
<p>avgcc</p>
<p>avgamsvr</p>
<p>avgupsvc</p>
<p>avgw</p>
<p>avgcc32</p>
<p>avgserv</p>
<p>avgserv9</p>
<p>avgserv9schedapp</p>
<p>avgemc</p>
<p>ashwebsv</p>
<p>ashdisp</p>
<p>ashmaisv</p>
<p>ashserv</p>
<p>aswUpdSv</p>
<p>symwsc</p>
<p>norton</p>
<p>Norton Auto-Protect</p>
<p>norton_av</p>
<p>nortonav</p>
<p>ccsetmgr</p>
<p>ccevtmgr</p>
<p>avadmin</p>
<p>avcenter</p>
<p>avgnt</p>
<p>avguard</p>
<p>avnotify</p>
<p>avscan</p>
<p>guardgui</p>
<p>nod32krn</p>
<p>nod32kui</p>
<p>clamscan</p>
<p>clamTray</p>
<p>clamWin</p>
<p>freshclam</p>
<p>oladdin</p>
<p>sigtool</p>
<p>w9xpopen</p>
<p>Wclose</p>
<p>cmgrdian</p>
<p>alogserv</p>
<p>mcshield</p>
<p>vshwin32</p>
<p>avconsol</p>
<p>vsstat</p>
<p>avsynmgr</p>
<p>avcmd</p>
<p>avconfig</p>
<p>licmgr</p>
<p>sched</p>
<p>preupd</p>
<p>MsMpEng</p>
<p>MSASCui</p>
<p>Avira.Systray</p>
</td>
</tr>
</tbody>
</table>
<p style="font-size: 8px; text-align: center; line-height: 1;">&nbsp;</p>
<p style="font-size: 16px; text-align: center;"><em style="text-align: center; background-color: transparent;">The names of the processes that the Snake malware kills</em></p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-14.png?width=687&amp;name=snake-blog-14.png" alt="snake-blog-14" width="687" loading="lazy" style="width: 687px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-14.png?width=344&amp;name=snake-blog-14.png 344w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-14.png?width=687&amp;name=snake-blog-14.png 687w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-14.png?width=1031&amp;name=snake-blog-14.png 1031w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-14.png?width=1374&amp;name=snake-blog-14.png 1374w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-14.png?width=1718&amp;name=snake-blog-14.png 1718w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-14.png?width=2061&amp;name=snake-blog-14.png 2061w" sizes="(max-width: 687px) 100vw, 687px"></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em style="text-align: center;">The Snake malware kills processes&nbsp;</em></span></p>
<p>Snake has a self-deletion feature such that the malware deletes itself using the <em>del</em> command after a timeout of three seconds once Snake has started the self-deletion process:</p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-15.png?width=567&amp;name=snake-blog-15.png" alt="snake-blog-15" width="567" loading="lazy" style="width: 567px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-15.png?width=284&amp;name=snake-blog-15.png 284w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-15.png?width=567&amp;name=snake-blog-15.png 567w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-15.png?width=851&amp;name=snake-blog-15.png 851w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-15.png?width=1134&amp;name=snake-blog-15.png 1134w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-15.png?width=1418&amp;name=snake-blog-15.png 1418w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-15.png?width=1701&amp;name=snake-blog-15.png 1701w" sizes="(max-width: 567px) 100vw, 567px"></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em style="text-align: center;">The Snake malware can delete itself</em></span></p>
<p>Snake can gather the following type of information about the compromised environment in which the malware runs:</p>
<ul>
<li style="list-style-type: none;">
<ul style="font-size: 18px;">
<li aria-level="1">Operating system and hardware information: Snake obtains the operating system name and version, amount of hard disk and physical memory, and machine name.</li>
<li aria-level="1">Geolocation and date-time information: Snake issues requests to the web services&nbsp; <em>checkip.dyndns.org</em> and <em>freegeoip.app </em>to discover the IP address of the operating system on which Snake runs, and the system’s geolocation based on the IP address.&nbsp;</li>
</ul>
</li>
</ul>
<p><a href="https://threatresearch.ext.hp.com/the-many-skins-of-snake-keylogger/" rel="noopener" target="_blank"><span>Previous research</span></a> states that the Snake malware uses the above information to decide whether to fully execute on a compromised system. The Snake sample that we analyzed does not do this, but only exfiltrates the geolocation and date/time information among other stolen data:</p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-16.png?width=704&amp;name=snake-blog-16.png" alt="snake-blog-16" width="704" loading="lazy" style="width: 704px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-16.png?width=352&amp;name=snake-blog-16.png 352w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-16.png?width=704&amp;name=snake-blog-16.png 704w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-16.png?width=1056&amp;name=snake-blog-16.png 1056w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-16.png?width=1408&amp;name=snake-blog-16.png 1408w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-16.png?width=1760&amp;name=snake-blog-16.png 1760w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-16.png?width=2112&amp;name=snake-blog-16.png 2112w" sizes="(max-width: 704px) 100vw, 704px"></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em style="text-align: center;">The Snake malware gathers operating system, hardware, geolocation, and date-time information</em></span></p>
<p>Snake has many information-stealing features and poses a significant threat to users’ privacy and security. The figure below depicts a systematization of the information-stealing features of the Snake malware:</p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-17.jpg?width=1991&amp;name=snake-blog-17.jpg" alt="snake-blog-17" width="1991" loading="lazy" style="width: 1991px;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-17.jpg?width=996&amp;name=snake-blog-17.jpg 996w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-17.jpg?width=1991&amp;name=snake-blog-17.jpg 1991w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-17.jpg?width=2987&amp;name=snake-blog-17.jpg 2987w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-17.jpg?width=3982&amp;name=snake-blog-17.jpg 3982w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-17.jpg?width=4978&amp;name=snake-blog-17.jpg 4978w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-17.jpg?width=5973&amp;name=snake-blog-17.jpg 5973w" sizes="(max-width: 1991px) 100vw, 1991px"></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em style="text-align: center;">A systematization of the information-stealing features of Snake</em></span></p>
<h3 style="font-size: 20px; font-weight: normal;">Keystroke Logging</h3>
<p>The Snake malware uses the <a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-setwindowshookexa" rel="noopener" target="_blank"><em><span>SetWindowsHookExA</span></em></a><em> and </em><a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-callnexthookex" rel="noopener" target="_blank"><em><span>CallNextHookEx</span></em></a> functions to capture key press events. Snake logs the key when a user presses a system key, that is, a key that a user presses after the F10 key or together with the ALT key. Snake also logs the key when a user presses a non-system key—a key that a user presses without pressing the ALT key at the same time. Snake stores logged keystrokes in a variable:</p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-18.png?width=699&amp;name=snake-blog-18.png" alt="snake-blog-18" width="699" loading="lazy" style="width: 699px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-18.png?width=350&amp;name=snake-blog-18.png 350w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-18.png?width=699&amp;name=snake-blog-18.png 699w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-18.png?width=1049&amp;name=snake-blog-18.png 1049w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-18.png?width=1398&amp;name=snake-blog-18.png 1398w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-18.png?width=1748&amp;name=snake-blog-18.png 1748w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-18.png?width=2097&amp;name=snake-blog-18.png 2097w" sizes="(max-width: 699px) 100vw, 699px"></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em style="text-align: center;">The Snake malware logs keystrokes</em></span></p>
<h3 style="font-size: 20px; font-weight: normal;">Clipboard Data Theft</h3>
<p>Snake invokes the <a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-isclipboardformatavailable" rel="noopener" target="_blank"><em><span>IsClipboardFormatAvailable</span></em></a> function to determine whether clipboard data in Unicode text format (Microsoft Standard Clipboard Format <em>CF_UNICODETEXT</em>) is available. Snake then invokes the <a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-openclipboard" rel="noopener" target="_blank"><em><span>OpenClipboard</span></em></a> function to open and lock the Clipboard data, followed by the <a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getclipboarddata" rel="noopener" target="_blank"><em><span>GetClipboardData</span></em></a> function to retrieve the data in Unicode text format.</p>
<p>In addition, the Snake malware uses the <a href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.visualbasic.myservices.clipboardproxy.gettext?view=windowsdesktop-5.0" rel="noopener" target="_blank"><em><span>ClipboardProxy.GetText</span></em></a> function to retrieve clipboard data in standard American National Standards Institute (ANSI) or Unicode text format. Snake stores clipboard data in a variable:</p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-19.png?width=697&amp;name=snake-blog-19.png" alt="snake-blog-19" width="697" loading="lazy" style="width: 697px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-19.png?width=349&amp;name=snake-blog-19.png 349w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-19.png?width=697&amp;name=snake-blog-19.png 697w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-19.png?width=1046&amp;name=snake-blog-19.png 1046w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-19.png?width=1394&amp;name=snake-blog-19.png 1394w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-19.png?width=1743&amp;name=snake-blog-19.png 1743w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-19.png?width=2091&amp;name=snake-blog-19.png 2091w" sizes="(max-width: 697px) 100vw, 697px"></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em style="text-align: center;">The Snake malware retrieves clipboard data</em></span></p>
<h3 style="font-size: 20px; font-weight: normal;">Screenshot Theft</h3>
<p>The Snake malware uses the <a href="https://docs.microsoft.com/en-us/dotnet/api/system.drawing.graphics.copyfromscreen?view=windowsdesktop-5.0" rel="noopener" target="_blank"><em><span>Graphics.CopyFromScreen</span></em></a> function to take a screenshot of the entire screen. Snake stores the screenshot in the <em>%MyDocuments%\SnakeKeylogger\Screenshot.png</em> file. Snake creates the <em>%MyDocuments%\SnakeKeylogger</em> directory if the directory does not exist. After taking a screenshot, Snake first exfiltrates the <em>Screenshot.png</em> file as we describe in the <span><span style="font-style: italic;">Data Exfiltration</span> section</span>, and then deletes the file:</p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-20.png?width=709&amp;name=snake-blog-20.png" alt="snake-blog-20" width="709" loading="lazy" style="width: 709px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-20.png?width=355&amp;name=snake-blog-20.png 355w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-20.png?width=709&amp;name=snake-blog-20.png 709w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-20.png?width=1064&amp;name=snake-blog-20.png 1064w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-20.png?width=1418&amp;name=snake-blog-20.png 1418w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-20.png?width=1773&amp;name=snake-blog-20.png 1773w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-20.png?width=2127&amp;name=snake-blog-20.png 2127w" sizes="(max-width: 709px) 100vw, 709px"></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em style="text-align: center;">The Snake malware takes and stores screenshots</em></span></p>
<h3 style="font-size: 20px; font-weight: normal;">Credential Theft</h3>
<p>Snake can steal saved credentials from credential databases of communication platforms, FTP clients, email clients, and web browsers. The table below lists the applications (column ‘Application’) from which Snake can steal saved credentials and the locations of the applications’ credential databases (column ‘Credential database’) that Snake accesses to retrieve credentials. The sample of the Snake malware we analyzed can steal credentials from 59 applications, out of which 52 are web browsers. In the table below:</p>
<ul>
<li style="list-style-type: none;">
<ul style="font-size: 18px;">
<li aria-level="1"><em>%AppData%</em> and <em>%LocalAppData%</em> are Windows environment variables that resolve to filesystem paths, such as <em>C:\Users\user\AppData</em> and <em>C:\Users\user\AppData\Local</em></li>
<li aria-level="1"><em>%FoxmailInstallation%</em> refers to an installation directory of the Foxmail email client, such as <em>C:\Program Files\Foxmail 7.2</em>, and <em>$email</em> refers to a configured email address, such as <em><a href="mailto:test@domain.com">test@domain.com</a></em></li>
</ul>
</li>
</ul>
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2; height: 3563.36px;">
<tbody>
<tr style="height: 48.9844px;">
<td style="background-color: #f1c232; border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p><strong>Application</strong></p>
</td>
<td style="background-color: #f1c232; border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p style="text-align: center;"><strong>Credential database (files or Windows Registry values)</strong></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="background-color: #f1c232; border: 1pt solid #000000; height: 49px; width: 1125.23px;" colspan="2">
<p><strong>Communication platforms</strong></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Discord</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%AppData%\discord\Local Storage\leveldb\[*].ldb</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Pidgin</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%AppData%\.purple\accounts.xml</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="background-color: #f1c232; border: 1pt solid #000000; height: 49px; width: 1125.23px;" colspan="2">
<p><strong>FTP clients</strong></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>FileZilla</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%AppData%\FileZilla\FileZilla\recentservers.xml</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="background-color: #f1c232; border: 1pt solid #000000; height: 49px; width: 1125.23px;" colspan="2">
<p><strong>Mail clients</strong></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Foxmail</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>$FoxmailInstallation\Storage\$email\Accounts\Account.rec0</em></p>
</td>
</tr>
<tr style="height: 76.9922px;">
<td style="border: 1pt solid #000000; height: 77px; width: 140.039px;" rowspan="4">
<p>Outlook</p>
</td>
<td style="border: 1pt solid #000000; height: 77px; width: 985.195px;">
<p><span style="font-size: 16px;"><em>HKEY_CURRENT_USER\Software\Microsoft\Office\15.0\Outlook\Profiles\Outlook\9375CFF0413111d3B88A00104B2A6676\[Email\IMAP Password\POP3 Password\HTTP Password\SMTP Password]</em></span></p>
</td>
</tr>
<tr style="height: 105px;">
<td style="border: 1pt solid #000000; height: 105px; width: 985.195px;">
<p><span style="font-size: 16px;"><em>HKEY_CURRENT_USER\Software\Microsoft\Windows NT\CurrentVersion\Windows Messaging Subsystem\Profiles\Outlook\9375CFF0413111d3B88A00104B2A6676\[Email\IMAP Password\POP3 Password\HTTP Password\SMTP Password]</em></span></p>
</td>
</tr>
<tr style="height: 105px;">
<td style="border: 1pt solid #000000; height: 105px; width: 985.195px;">
<p><span style="font-size: 16px;"><em>HKEY_CURRENT_USER\Software\Microsoft\Windows Messaging Subsystem\Profiles\9375CFF0413111d3B88A00104B2A6676\[Email\IMAP Password\POP3 Password\HTTP Password\SMTP Password]</em></span></p>
</td>
</tr>
<tr style="height: 76.9922px;">
<td style="border: 1pt solid #000000; height: 77px; width: 985.195px;">
<p><span style="font-size: 16px;"><em>HKEY_CURRENT_USER\Software\Microsoft\Office\16.0\Outlook\Profiles\Outlook\9375CFF0413111d3B88A00104B2A6676\[Email\IMAP Password\POP3 Password\HTTP Password\SMTP Password]</em></span></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>PostBox</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%AppData%\PostboxApp\Profiles\logins.json</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Thunderbird</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%AppData%\Thunderbird\Profiles\logins.json</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="background-color: #f1c232; border: 1pt solid #000000; height: 49px; width: 1125.23px;" colspan="2">
<p><strong>Web browsers</strong></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>360 Browser</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\360Browser\Browser\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>360Chrome</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\360Chrome\Chrome\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>7 Star</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\7Star\7Star\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Amigo</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\Amigo\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 76.9922px;">
<td style="border: 1pt solid #000000; height: 77px; width: 140.039px;">
<p>Avast Secure Browser</p>
</td>
<td style="border: 1pt solid #000000; height: 77px; width: 985.195px;">
<p><em>%LocalAppData%\AVAST Software\Browser\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>BlackHawk</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\BlackHawk\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Blisk</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\Blisk\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Brave</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\BraveSoftware\Brave-Browser\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>CentBrowser</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\CentBrowser\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Chedot</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\Chedot\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Chrome</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\Google\Chrome\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 76.9922px;">
<td style="border: 1pt solid #000000; height: 77px; width: 140.039px;">
<p>Chrome Canary</p>
</td>
<td style="border: 1pt solid #000000; height: 77px; width: 985.195px;">
<p><em>%LocalAppData%\Google\Chrome SxS\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>ChromePlus</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\MapleStudio\ChromePlus\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Chromium</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\Chromium\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Citrio</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\CatalinaGroup\Citrio\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Coc Coc</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\CocCoc\Browser\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 76.9922px;">
<td style="border: 1pt solid #000000; height: 77px; width: 140.039px;">
<p>Comodo Dragon</p>
</td>
<td style="border: 1pt solid #000000; height: 77px; width: 985.195px;">
<p><em>%LocalAppData%\Comodo\Dragon\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Coowon</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\Coowon\Coowon\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Cyberfox</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%AppData%\8pecxstudios\Cyberfox\Profiles\logins.json</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Edge</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\Microsoft\Edge\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Elements</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\Elements Browser\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Epic</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\Epic Privacy Browser\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Firefox</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%AppData%\Mozilla\Firefox\Profiles\logins.json</em></p>
</td>
</tr>
<tr style="height: 76.9922px;">
<td style="border: 1pt solid #000000; height: 77px; width: 140.039px;">
<p>Ghost Browser</p>
</td>
<td style="border: 1pt solid #000000; height: 77px; width: 985.195px;">
<p><em>%LocalAppData%\GhostBrowser\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>IceCat</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%AppData%\Mozilla\icecat\Profiles\logins.json</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>IceDragon</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%AppData%\Comodo\IceDragon\Profiles\logins.json</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Iridium</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\Iridium\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Kinza</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\Kinza\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Kometa</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\Kometa\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Liebao</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\Liebao7\User Data\Default\EncryptedStorage</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Nichrome</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\Nichrome\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Opera</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%AppData%\Opera Software\Operate Stable\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Opera</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%AppData%\Opera\Opera\profile\wand.dat</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Orbitum</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\Orbitum\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Pale Moon</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%AppData%\Moonchild Productions\Pale Moon\Profiles\logins.json</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>QIP Surf</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\QIP Surf\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>QQBrowser</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\Tencent\QQBrowser\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>SalamWeb</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\SalamWeb\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>SeaMonkey</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%AppData%\Mozilla\SeyMonkey\Profiles\logins.json</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Sleipnir</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%AppData%\Fenrir Inc\Sleipnir5\setting\modules\ChromiumViewer\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>SlimBrowser</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%AppData%\FlashPeak\SlimBrowser\Profiles\logins.json</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Slimjet</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\Slimjet\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Sputnik</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\Sputnik\Sputnik\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>SuperBird</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\SuperBird\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Torch</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\Torch\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>UC Browser</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\UCBrowser\User Data_i18n\Default\UC Login Data.18</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Uran</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\uCozMedia\Uran\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Vivaldi</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\Vivaldi\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Waterfox</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%AppData%\Waterfox\Profiles\logins.json</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Xpom</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\Xpom\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Xvast</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\Xvast\User Data\Default\Login Data</em></p>
</td>
</tr>
<tr style="height: 48.9844px;">
<td style="border: 1pt solid #000000; height: 49px; width: 140.039px;">
<p>Yandex</p>
</td>
<td style="border: 1pt solid #000000; height: 49px; width: 985.195px;">
<p><em>%LocalAppData%\Yandex\YandexBrowser\User Data\Default\Ya Login Data</em></p>
</td>
</tr>
</tbody>
</table>
<p style="text-align: center; font-size: 16px; line-height: 1;">&nbsp;</p>
<p style="text-align: center; font-size: 16px;"><em>Applications and their credential databases from which Snake can steal credentials&nbsp;</em></p>
<p>In addition to communication platforms, FTP clients, email clients, and web browsers, Snake can steal saved credentials of wireless networks. To do this, Snake first invokes the <em>netsh wlan show profile</em> command to list existing wireless network profiles and then retrieves these from the command output.&nbsp;</p>
<p>Wireless network profiles are sets of network settings that include saved credentials. Snake then invokes the <em>netsh wlan show profile name=”%name%” key=clear</em> command for each profile, where <em>%name</em> is the profile name, and retrieves from the command output the unencrypted saved password stored as part of the profile.</p>
<p>The Snake malware can steal the Product Key of the Windows instance on which the malware runs. To do this, Snake retrieves and decodes the registry value <em>HKEY_LOCAL_MACHINE\ Software\Microsoft\Windows NT\CurrentVersion\DigitalProductID</em>.</p>
<p>The credential databases of the communication platforms, FTP clients, email clients, and web browsers that Snake targets typically store credentials in encrypted form. Snake decrypts credentials, stores the decrypted credentials in a variable, and exfiltrates the credentials as we describe in the <em>Data Exfiltration</em> section. Most of the web browsers from which Snake steals credentials store credentials either in <em>Login Data</em> files (primarily used by Chromium-based browsers) or <em>logins.json</em> files (primarily used by Gecko-based browsers).&nbsp;</p>
<p><em>Login Data</em> files are SQLite databases. These databases have a <em>logins</em> table that stores credential-protected Uniform Resource Locators (URLs) in the <em>origin_url</em> field, and the saved usernames and passwords for the URLs in the <em>username_value</em> and <em>password_value</em> fields, respectively. The passwords are encrypted. Recent versions of Chromium-based browsers encrypt saved passwords with a symmetric Advanced Encryption Standard (AES)-256 encryption key.&nbsp;</p>
<p>The browsers store the AES key in an encrypted form on the file system, in a <em>Local State</em> file placed in the <em>%LocalAppData%</em> directory, for example, <em>%LocalAppData%\Google\Chrome\User Data\Local State</em>. Browsers encrypt the AES key using the Microsoft Data Protection Application Programming Interface (DPAPI) encryption mechanism, which supports two data protection (encryption) scopes: i) <em>user</em>, which encrypts data using a user-specific encryption key such that only a specific logged in user can decrypt the data, and ii) <em>machine</em>, which encrypts data using a machine-specific encryption key such that any user logged in a specific machine can decrypt the data. Older versions of Chromium-based browsers do not use AES to encrypt saved passwords, but encrypt saved passwords directly using the DPAPI mechanism in <em>user</em> protection scope.&nbsp;</p>
<p>The Snake malware can decrypt passwords that a Chromium-based browser has encrypted directly using DPAPI or an AES key first:</p>
<ul>
<li style="list-style-type: none;">
<ul style="font-size: 18px;">
<li aria-level="1">Snake decrypts passwords by using DPAPI in <em>user</em> protection scope and invoking the <a href="https://docs.microsoft.com/en-us/windows/win32/api/dpapi/nf-dpapi-cryptunprotectdata" rel="noopener" target="_blank"><em><span>CryptUnprotectData</span></em></a> function.</li>
<li aria-level="1">Snake first decrypts an AES encryption key stored in a <em>Local State</em> file by using DPAPI in <em>user</em> protection mode and invoking the <a href="https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.protecteddata.unprotect?view=windowsdesktop-5.0&amp;viewFallbackFrom=net-5.0" rel="noopener" target="_blank"><em><span>ProtectedData.Unprotect</span></em></a> function, and then decrypts the saved password by using the AES encryption key and invoking the <a href="https://docs.microsoft.com/en-us/windows/win32/api/bcrypt/nf-bcrypt-bcryptdecrypt" rel="noopener" target="_blank"><em><span>BCryptDecrypt</span></em></a> function:<br><br></li>
</ul>
</li>
</ul>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-21.png?width=704&amp;name=snake-blog-21.png" alt="snake-blog-21" width="704" loading="lazy" style="width: 704px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-21.png?width=352&amp;name=snake-blog-21.png 352w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-21.png?width=704&amp;name=snake-blog-21.png 704w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-21.png?width=1056&amp;name=snake-blog-21.png 1056w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-21.png?width=1408&amp;name=snake-blog-21.png 1408w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-21.png?width=1760&amp;name=snake-blog-21.png 1760w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-21.png?width=2112&amp;name=snake-blog-21.png 2112w" sizes="(max-width: 704px) 100vw, 704px"></p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-22.png?width=701&amp;name=snake-blog-22.png" alt="snake-blog-22" width="701" loading="lazy" style="width: 701px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-22.png?width=351&amp;name=snake-blog-22.png 351w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-22.png?width=701&amp;name=snake-blog-22.png 701w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-22.png?width=1052&amp;name=snake-blog-22.png 1052w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-22.png?width=1402&amp;name=snake-blog-22.png 1402w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-22.png?width=1753&amp;name=snake-blog-22.png 1753w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-22.png?width=2103&amp;name=snake-blog-22.png 2103w" sizes="(max-width: 701px) 100vw, 701px"></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em style="text-align: center;">The Snake malware decrypts passwords stored in a Login Data file</em></span></p>
<p>The <em>logins.json</em> files are JavaScript Object Notation(JSON)-formatted files that store encrypted usernames in the <em>encryptedUsername</em> field and encrypted passwords in the <em>encryptedPassword</em> field. Gecko-based browsers encrypt saved usernames and passwords using the Triple-DES algorithm.&nbsp;</p>
<p>Mozilla’s <a href="https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/Introduction_to_Network_Security_Services" rel="noopener" target="_blank"><span>Network Security Services (NSS) library</span></a> implements the <em>PKCS11_Decrypt </em>function that decrypts credentials encrypted by Gecko-based browsers:</p>
<p><img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-23.png?width=707&amp;name=snake-blog-23.png" alt="snake-blog-23" width="707" loading="lazy" style="width: 707px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-23.png?width=354&amp;name=snake-blog-23.png 354w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-23.png?width=707&amp;name=snake-blog-23.png 707w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-23.png?width=1061&amp;name=snake-blog-23.png 1061w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-23.png?width=1414&amp;name=snake-blog-23.png 1414w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-23.png?width=1768&amp;name=snake-blog-23.png 1768w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-23.png?width=2121&amp;name=snake-blog-23.png 2121w" sizes="(max-width: 707px) 100vw, 707px"></p>
<p style="text-align: center;"><span style="font-size: 16px;"><em style="text-align: center;">The Snake malware decrypts credentials stored in a logins.json file</em></span></p>
<p>The Snake malware decrypts credentials that <em>logins.json</em> files store as follows:&nbsp;</p>
<ol>
<li><span style="font-size: 18px;">Snake locates and loads the dynamic-link library (DLL) file that implements the NSS library, nss3.dll, and initializes NSS by invoking the NSS_Init function.&nbsp;</span></li>
<li><span style="font-size: 18px;">Snake searches for nss3.dll in multiple locations in the %ProgramFilesX86% and %ProgramFiles% directories.&nbsp;</span></li>
<li><span style="font-size: 18px;">Snake decrypts encrypted usernames and passwords by invoking the PK11SDR_Decrypt function.</span></li>
<li><span style="font-size: 18px;">Snake shuts down the NSS library by invoking the NSS_Shutdown function.</span></li>
</ol>
<p>&nbsp;</p>
<h3 style="font-size: 20px; font-weight: normal;">Data Exfiltration</h3>
<p>Snake can exfiltrate logged keystrokes and stolen credentials, clipboard data, and screenshots&nbsp; using the following protocols:</p>
<ul>
<li style="list-style-type: none;">
<ul style="font-size: 18px;">
<li aria-level="1">FTP: Snake logs into an attacker-controlled FTP server and issues the <em>STOR</em> command to upload the stolen data to the server. Snake stores the uploaded data on the FTP server in:
<ul>
<li aria-level="2">a file with the file name extension .<em>txt</em> and a name that contains <em>Passwords ID</em>, <em>keystroke Logs ID</em>, or <em>Clipboard Logs ID</em>, when the data is credentials, logged keystrokes, or clipboard data, respectively.</li>
<li aria-level="2">a file with the file name extension .<em>png</em> and a name that contains <em>Screenshot Logs ID</em>, when the data is a screenshot.&nbsp;</li>
</ul>
</li>
<li aria-level="1">SMTP: Snake logs into an attacker-controlled SMTP server, and then composes and sends to a malicious email address an email message that has attachments. The attachments store the stolen data. The attachments are files:
<ul>
<li aria-level="2">with the filename <em>Clipboard.txt</em> or <em>Keystrokes.txt</em>, when the stolen data is clipboard data or logged keystrokes, respectively.</li>
<li aria-level="2">with the file name <em>Passwords.txt</em> and <em>User.txt</em>, when the stolen data is credentials, that is, passwords and usernames, respectively.</li>
<li aria-level="2">with the filename <em>Screenshot.png</em>, when the stolen data is a screenshot.</li>
</ul>
</li>
<li aria-level="1">Telegram/HyperText Transfer Protocol Secure (HTTPS): Snake issues a <em>POST</em> request to the Telegram endpoint <em>api.telegram.org</em> to send a document to an attacker-controlled Telegram chat. The document contains the stolen data. The document has the file name <em>Clipboard.txt</em>, <em>Screenshot.png</em>, <em>SnakeKeylogger.txt</em>, or <em>SnakePW.txt</em>, when the data is clipboard data, screenshot, logged keystrokes, or credentials, respectively.&nbsp;</li>
</ul>
</li>
</ul>
<p>Snake can exfiltrate logged keystrokes, screenshots, clipboard data, and credentials on a regularly timed interval:</p>
<h2 style="font-size: 24px; text-align: center;"><img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-24.png?width=463&amp;name=snake-blog-24.png" alt="snake-blog-24" width="463" loading="lazy" style="width: 463px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-24.png?width=232&amp;name=snake-blog-24.png 232w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-24.png?width=463&amp;name=snake-blog-24.png 463w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-24.png?width=695&amp;name=snake-blog-24.png 695w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-24.png?width=926&amp;name=snake-blog-24.png 926w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-24.png?width=1158&amp;name=snake-blog-24.png 1158w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-24.png?width=1389&amp;name=snake-blog-24.png 1389w" sizes="(max-width: 463px) 100vw, 463px"><span style="font-size: 16px;"><em style="color: #4a4a4a; font-family: 'Open Sans', sans-serif; text-align: center; text-transform: none;">The Snake malware exfiltrates stolen credentials through SMTP</em></span></h2>
<h2 style="font-size: 24px; font-weight: normal;"><span style="color: #000000;">Cybereason Detects and Prevents Snake Malware</span></h2>
<p>The <a href="/platform" rel="noopener" target="_blank"><span>Cybereason Defense Platform</span></a> is able to detect and prevent the execution of the Snake malware using multi-layer protection that detects and blocks malware with threat intelligence, machine learning, and next-gen antivirus (NGAV) capabilities:</p>
<p style="font-size: 24px;"><img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-25.png?width=750&amp;name=snake-blog-25.png" alt="snake-blog-25" width="750" loading="lazy" style="width: 750px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-25.png?width=375&amp;name=snake-blog-25.png 375w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-25.png?width=750&amp;name=snake-blog-25.png 750w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-25.png?width=1125&amp;name=snake-blog-25.png 1125w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-25.png?width=1500&amp;name=snake-blog-25.png 1500w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-25.png?width=1875&amp;name=snake-blog-25.png 1875w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-25.png?width=2250&amp;name=snake-blog-25.png 2250w" sizes="(max-width: 750px) 100vw, 750px"></p>
<p style="font-size: 24px;"><img src="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-26.png?width=413&amp;name=snake-blog-26.png" alt="snake-blog-26" width="413" loading="lazy" style="width: 413px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-26.png?width=207&amp;name=snake-blog-26.png 207w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-26.png?width=413&amp;name=snake-blog-26.png 413w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-26.png?width=620&amp;name=snake-blog-26.png 620w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-26.png?width=826&amp;name=snake-blog-26.png 826w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-26.png?width=1033&amp;name=snake-blog-26.png 1033w, https://www.cybereason.com/hs-fs/hubfs/dam/images/images-web/blog-images/snake-blog-26.png?width=1239&amp;name=snake-blog-26.png 1239w" sizes="(max-width: 413px) 100vw, 413px"></p>
<p style="font-size: 24px; text-align: center;"><span style="font-size: 16px;"><em style="text-align: center;">The Cybereason Defense Platform detects and blocks Snake malware</em></span></p>
<h2 style="font-size: 24px; font-weight: normal;">Cybereason GSOC MDR Recommendations</h2>
<p>The Cybereason GSOC recommends the following:</p>
<ul>
<li style="list-style-type: none;">
<ul style="font-size: 18px;">
<li aria-level="1">Enable the <em>Anti-Malware</em> feature on the Cybereason NGAV and enable the <a href="https://nest.cybereason.com/documentation/product-documentation/190/anti-malware-settings" rel="noopener" target="_blank"><em>Detect and Prevent</em> </a>modes of this feature.&nbsp;</li>
<li aria-level="1">Securely handle email messages that originate from external sources. This includes disabling hyperlinks and investigating the content of email messages to identify phishing attempts.</li>
<li aria-level="1">Use secure passwords, regularly rotate passwords, and use multi-factor authentication where possible.&nbsp;</li>
<li aria-level="1">Regularly monitor outgoing network traffic for data exfiltration activities.</li>
<li style="color: #595955;" aria-level="1"><span style="color: #595955;">Threat Hunting with Cybereason: The Cybereason MDR team provides its customers with custom hunting queries for detecting specific threats - to find out more about threat hunting and </span><a href="/platform/managed-detection-response-mdr" rel="noopener" target="_blank">Managed Detection and Response</a><span style="color: #595955;"> with the Cybereason Defense Platform, </span><a href="/services/managed-detection-response-mdr#form" rel="noopener" target="_blank">contact a Cybereason Defender here</a><span style="color: #595955;">.</span>
<ul style="font-size: 18px;">
<li aria-level="2"><span style="color: #595955;">For Cybereason customers: More det</span>ails <a href="https://nest.cybereason.com/knowledgebase/3502086" rel="noopener" target="_blank"><span>available on the NEST</span></a> includi<span style="color: #595955;">ng custom threat hunting queries for detecting this threat.</span><span style="color: #595955;"></span></li>
</ul>
</li>
</ul>
</li>
</ul>
<p>Cybereason is dedicated to teaming with defenders to end cyber attacks from endpoints to the enterprise to everywhere. <a href="https://www.cybereason.com/request-a-demo"><span>Schedule a demo today</span></a> to learn how your organization can benefit from an <a href="https://www.cybereason.com/blog/the-cybereason-malop-achieving-operation-centric-security"><span>operation-centric approach</span></a> to security.</p>
<h2 style="font-size: 24px;"><span style="color: #000000;">MITRE ATT&amp;CK Techniques</span></h2>
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2; height: 930.703px; width: 1056px;">
<tbody>
<tr style="height: 77.9883px;">
<td style="background-color: #f1c232; border: 1px solid #000000; width: 153.516px; height: 78px;">
<p><strong><span style="color: #595955;">Initial Access</span></strong></p>
</td>
<td style="background-color: #f1c232; border: 1px solid #000000; width: 121.426px; height: 78px;">
<p><strong><span style="color: #595955;">Execution</span></strong></p>
</td>
<td style="background-color: #f1c232; width: 137.461px; height: 78px; border-width: 1px; border-style: solid;">
<p><strong><span style="color: #595955;">Persistence</span></strong></p>
</td>
<td style="background-color: #f1c232; border: 1px solid #000000; width: 114.395px; height: 78px;">
<p><strong><span style="color: #595955;">Defense Evasion</span></strong></p>
</td>
<td style="background-color: #f1c232; border: 1px solid #000000; width: 131.465px; height: 78px;">
<p><strong><span style="color: #595955;">Credential Access</span></strong></p>
</td>
<td style="background-color: #f1c232; border: 1px solid #000000; width: 130.469px; height: 78px;">
<p><strong><span style="color: #595955;">Discovery</span></strong></p>
</td>
<td style="background-color: #f1c232; width: 126.426px; height: 78px; border-width: 1px; border-style: solid;">
<p><strong><span style="color: #595955;">Collection</span></strong></p>
</td>
<td style="background-color: #f1c232; width: 139.59px; height: 78px; border-width: 1px; border-style: solid;">
<p><strong><span style="color: #595955;">Exfiltration</span></strong></p>
</td>
</tr>
<tr style="height: 160.996px;">
<td style="border: 1px solid #000000; width: 153.516px; height: 161px;">
<p><a href="https://attack.mitre.org/techniques/T1566/001/" rel="noopener" target="_blank"><span>Phishing: Spearphishing Attachment</span></a></p>
</td>
<td style="width: 121.426px; height: 161px; border-width: 1px; border-style: solid;">
<p><a href="https://attack.mitre.org/techniques/T1204/002/" rel="noopener" target="_blank"><span>User Execution: Malicious File</span></a></p>
</td>
<td style="border: 1px solid #000000; width: 137.461px; height: 161px;">
<p><a href="https://attack.mitre.org/techniques/T1053/005/" rel="noopener" target="_blank"><span>Scheduled Task/Job: Scheduled Task</span></a></p>
</td>
<td style="width: 114.395px; height: 161px; border-width: 1px; border-style: solid;">
<p><a href="https://attack.mitre.org/techniques/T1070/004/" rel="noopener" target="_blank"><span>Indicator Removal on Host: File Deletion</span></a></p>
</td>
<td style="width: 131.465px; height: 161px; border-width: 1px; border-style: solid;">
<p><a href="https://attack.mitre.org/techniques/T1552/001/" rel="noopener" target="_blank"><span>Unsecured Credentials: Credentials In Files</span></a></p>
</td>
<td style="width: 130.469px; height: 161px; border-width: 1px; border-style: solid;">
<p><a href="https://attack.mitre.org/techniques/T1083/" rel="noopener" target="_blank"><span>File and Directory Discovery</span></a></p>
</td>
<td style="border: 1px solid #000000; width: 126.426px; height: 161px;">
<p><a href="https://attack.mitre.org/techniques/T1115/" rel="noopener" target="_blank"><span>Clipboard Data</span></a></p>
</td>
<td style="border: 1px solid #000000; width: 139.59px; height: 161px;">
<p><a href="https://attack.mitre.org/techniques/T1020/"><span>Automated Exfiltration</span></a></p>
</td>
</tr>
<tr style="height: 241.25px;">
<td style="border: 1px solid #000000; width: 153.516px; height: 241px;">&nbsp;</td>
<td style="width: 121.426px; height: 241px; border-width: 1px; border-style: solid;">&nbsp;</td>
<td style="border: 1px solid #000000; width: 137.461px; height: 241px;">
<p><a href="https://attack.mitre.org/techniques/T1547/001/" rel="noopener" target="_blank"><span>Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder</span></a></p>
</td>
<td style="width: 114.395px; height: 241px; border-width: 1px; border-style: solid;">
<p><a href="https://attack.mitre.org/techniques/T1112/" rel="noopener" target="_blank"><span>Modify registry</span></a></p>
</td>
<td style="width: 131.465px; height: 241px; border-width: 1px; border-style: solid;">
<p><a href="https://attack.mitre.org/techniques/T1552/002/" rel="noopener" target="_blank"><span>Unsecured Credentials: Credentials in Registry</span></a></p>
</td>
<td style="border: 1px solid #000000; width: 130.469px; height: 241px;">
<p><a href="https://attack.mitre.org/techniques/T1082/" rel="noopener" target="_blank"><span>System Information Discovery</span></a></p>
</td>
<td style="border: 1px solid #000000; width: 126.426px; height: 241px;">
<p><a href="https://attack.mitre.org/techniques/T1005/" rel="noopener" target="_blank"><span>Data from Local System</span></a></p>
</td>
<td style="border: 1px solid #000000; width: 139.59px; height: 241px;">
<p><a href="https://attack.mitre.org/techniques/T1048/"><span>Exfiltration Over Alternative Protocol</span></a></p>
</td>
</tr>
<tr style="height: 158.984px;">
<td style="border: 1px solid #000000; width: 153.516px; height: 159px;">&nbsp;</td>
<td style="width: 121.426px; height: 159px; border-width: 1px; border-style: solid;">&nbsp;</td>
<td style="border: 1px solid #000000; width: 137.461px; height: 159px;">&nbsp;</td>
<td style="border: 1px solid #000000; width: 114.395px; height: 159px;">
<p><a href="https://attack.mitre.org/techniques/T1562/001/" rel="noopener" target="_blank"><span>Impair Defenses: Disable or Modify Tools</span></a></p>
</td>
<td style="width: 131.465px; height: 159px; border-width: 1px; border-style: solid;">&nbsp;</td>
<td style="border: 1px solid #000000; width: 130.469px; height: 159px;">
<p><a href="https://attack.mitre.org/techniques/T1614/" rel="noopener" target="_blank"><span>System Location Discovery</span></a></p>
</td>
<td style="border: 1px solid #000000; width: 126.426px; height: 159px;">
<p><a href="https://attack.mitre.org/techniques/T1056/001/" rel="noopener" target="_blank"><span>Input Capture: Keylogging</span></a></p>
</td>
<td style="border: 1px solid #000000; width: 139.59px; height: 159px;">
<p><a href="https://attack.mitre.org/techniques/T1029/"><span>Scheduled Transfer</span></a></p>
</td>
</tr>
<tr style="height: 186.25px;">
<td style="border: 1px solid #000000; width: 153.516px; height: 186px;">&nbsp;</td>
<td style="width: 121.426px; height: 186px; border-width: 1px; border-style: solid;">&nbsp;</td>
<td style="border: 1px solid #000000; width: 137.461px; height: 186px;">&nbsp;</td>
<td style="border: 1px solid #000000; width: 114.395px; height: 186px;">
<p><a href="https://attack.mitre.org/techniques/T1562/004/" rel="noopener" target="_blank"><span>Impair Defenses: Disable or Modify System Firewall</span></a></p>
</td>
<td style="width: 131.465px; height: 186px; border-width: 1px; border-style: solid;">&nbsp;</td>
<td style="border: 1px solid #000000; width: 130.469px; height: 186px;">
<p><a href="https://attack.mitre.org/techniques/T1016/" rel="noopener" target="_blank"><span>System Network Configuration Discovery</span></a></p>
</td>
<td style="border: 1px solid #000000; width: 126.426px; height: 186px;">
<p><a href="https://attack.mitre.org/techniques/T1113/" rel="noopener" target="_blank"><span>Screen Capture</span></a></p>
</td>
<td style="width: 139.59px; height: 186px; border-width: 1px; border-style: solid;">&nbsp;</td>
</tr>
<tr style="height: 103.984px;">
<td style="border: 1px solid #000000; width: 153.516px; height: 104px;">&nbsp;</td>
<td style="width: 121.426px; height: 104px; border-width: 1px; border-style: solid;">&nbsp;</td>
<td style="border: 1px solid #000000; width: 137.461px; height: 104px;">&nbsp;</td>
<td style="border: 1px solid #000000; width: 114.395px; height: 104px;">&nbsp;</td>
<td style="width: 131.465px; height: 104px; border-width: 1px; border-style: solid;">&nbsp;</td>
<td style="border: 1px solid #000000; width: 130.469px; height: 104px;">
<p><a href="https://attack.mitre.org/techniques/T1124/" rel="noopener" target="_blank"><span>System Time Discovery</span></a></p>
</td>
<td style="width: 126.426px; height: 104px; border-width: 1px; border-style: solid;">&nbsp;</td>
<td style="border: 1px solid #000000; width: 139.59px; height: 104px;">&nbsp;</td>
</tr>
</tbody>
</table>
<p style="font-size: 24px;">&nbsp;</p>
<h2 style="font-size: 24px;"><span style="color: #000000;">About the Researchers:</span></h2>
<p><strong><img class="no-border" src="https://www.cybereason.com/hs-fs/hubfs/image2-Oct-27-2021-05-10-24-94-PM.png?width=142&amp;name=image2-Oct-27-2021-05-10-24-94-PM.png" alt="image2-Oct-27-2021-05-10-24-94-PM" width="142" loading="lazy" style="width: 142px; float: left; margin: 0px 7px 1px 0px;" srcset="https://www.cybereason.com/hs-fs/hubfs/image2-Oct-27-2021-05-10-24-94-PM.png?width=71&amp;name=image2-Oct-27-2021-05-10-24-94-PM.png 71w, https://www.cybereason.com/hs-fs/hubfs/image2-Oct-27-2021-05-10-24-94-PM.png?width=142&amp;name=image2-Oct-27-2021-05-10-24-94-PM.png 142w, https://www.cybereason.com/hs-fs/hubfs/image2-Oct-27-2021-05-10-24-94-PM.png?width=213&amp;name=image2-Oct-27-2021-05-10-24-94-PM.png 213w, https://www.cybereason.com/hs-fs/hubfs/image2-Oct-27-2021-05-10-24-94-PM.png?width=284&amp;name=image2-Oct-27-2021-05-10-24-94-PM.png 284w, https://www.cybereason.com/hs-fs/hubfs/image2-Oct-27-2021-05-10-24-94-PM.png?width=355&amp;name=image2-Oct-27-2021-05-10-24-94-PM.png 355w, https://www.cybereason.com/hs-fs/hubfs/image2-Oct-27-2021-05-10-24-94-PM.png?width=426&amp;name=image2-Oct-27-2021-05-10-24-94-PM.png 426w" sizes="(max-width: 142px) 100vw, 142px">Aleksandar Milenkoski,Senior Threat and Malware Analyst, Cybereason Global SOC</strong></p>
<p>Aleksandar Milenkoski is a Senior Threat and Malware Analyst with the Cybereason Global SOC team. He is involved primarily in reverse engineering and threat research activities. Aleksandar has a PhD in system security. Prior to Cybereason, his work focussed on research in intrusion detection and reverse engineering security mechanisms of the Windows 10 operating system.</p>
<p><strong><img class="no-border" src="https://www.cybereason.com/hs-fs/hubfs/image27-Oct-27-2021-07-07-12-15-PM.png?width=141&amp;name=image27-Oct-27-2021-07-07-12-15-PM.png" alt="image27-Oct-27-2021-07-07-12-15-PM" width="141" loading="lazy" style="width: 141px; float: left; margin: 0px 7px 1px 0px;" srcset="https://www.cybereason.com/hs-fs/hubfs/image27-Oct-27-2021-07-07-12-15-PM.png?width=71&amp;name=image27-Oct-27-2021-07-07-12-15-PM.png 71w, https://www.cybereason.com/hs-fs/hubfs/image27-Oct-27-2021-07-07-12-15-PM.png?width=141&amp;name=image27-Oct-27-2021-07-07-12-15-PM.png 141w, https://www.cybereason.com/hs-fs/hubfs/image27-Oct-27-2021-07-07-12-15-PM.png?width=212&amp;name=image27-Oct-27-2021-07-07-12-15-PM.png 212w, https://www.cybereason.com/hs-fs/hubfs/image27-Oct-27-2021-07-07-12-15-PM.png?width=282&amp;name=image27-Oct-27-2021-07-07-12-15-PM.png 282w, https://www.cybereason.com/hs-fs/hubfs/image27-Oct-27-2021-07-07-12-15-PM.png?width=353&amp;name=image27-Oct-27-2021-07-07-12-15-PM.png 353w, https://www.cybereason.com/hs-fs/hubfs/image27-Oct-27-2021-07-07-12-15-PM.png?width=423&amp;name=image27-Oct-27-2021-07-07-12-15-PM.png 423w" sizes="(max-width: 141px) 100vw, 141px">Brian Janower, Security Analyst, Cybereason Global SOC</strong></p>
<p>Brian Janower is a Security Analyst with the Cybereason Global SOC (GSOC) team. He is involved in malware analysis and triages security incidents effectively and precisely. Brian has a deep understanding of the malicious operations prevalent in the current threat landscape. He is in the process of obtaining a Bachelor of Science degree in Systems Information &amp; Cyber.</p></span>
          
          <!-- IOC PopUp Modal -->
          
          
            <div id="hs_cos_wrapper_module_162281712252340" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module"><!-- Button -->



<div class="cr-modal" id="iocs">
  <div class="cr-modal-overlay cr-modal-toggle"></div>
  <div class="cr-modal-wrapper cr-modal-transition">
    <div class="cr-modal-header">
      <button class="cr-modal-close cr-modal-toggle" id="ioc-close">X</button>
    </div>

    <div class="cr-modal-body">
      <div class="cr-modal-content">
        <h3 style="line-height: 1; font-size: 30px;"><span style="color: #000000;">Indicators of Compromise</span></h3>
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2;">
<tbody>
<tr>
<td style="border: 0.99609pt solid #000000; vertical-align: middle;">
<p><strong>Executables</strong></p>
</td>
<td style="border: 0.99609pt solid #000000;">
<p style="line-height: 1.15;">SHA-256 hash: <em>132482335f028ceb6094d9c29442faf900d838fb054eebbbf39208bb39ccf5ae</em></p>
<p style="line-height: 1.15;">File size: 691200 bytes</p>
</td>
</tr>
<tr>
<td style="border: 0.99609pt solid #000000; vertical-align: middle;">
<p><strong>Scheduled tasks</strong></p>
</td>
<td style="border: 0.99609pt solid #000000;">
<p style="line-height: 1.15;"><em>Updates\vxhnIvyvbHAK&nbsp;</em></p>
<p style="line-height: 1.15;">Note: The name <em>vxhnIvyvbHAK</em> may differ for different samples of the Snake malware</p>
</td>
</tr>
<tr>
<td style="border: 0.99609pt solid #000000; vertical-align: middle;">
<p><strong>Domains</strong></p>
</td>
<td style="border: 0.99609pt solid #000000;">
<p style="line-height: 1.15;"><em>checkip.dyndns.org</em></p>
<p style="line-height: 1.15;"><em>freegeoip.app</em></p>
</td>
</tr>
</tbody>
</table>
      </div>
    </div>
  </div>
</div></div>
          
          
          <!-- -->
          
          <!-- Social Share -->
          <div class="cr-blog-post__social-sharing">
            <span>Share</span>
            <div id="hs_cos_wrapper_module_161724375084957" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module widget-type-social_sharing" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module">






<div class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_social_sharing" data-hs-cos-general-type="widget" data-hs-cos-type="social_sharing">
  
	
  
    
    
    
			
		

    <a href="https://twitter.com/intent/tweet?original_referer=https://www.cybereason.com/blog/research/threat-analysis-report-snake-infostealer-malware&amp;utm_medium=social&amp;utm_source=twitter&amp;url=https://www.cybereason.com/blog/research/threat-analysis-report-snake-infostealer-malware&amp;utm_medium=social&amp;utm_source=twitter&amp;source=tweetbutton&amp;text=" target="_blank" rel="noopener" style="width:16px;">
      <img src="https://www.cybereason.com/hubfs/dam/images/images-web/blog-images/template-images/twitter-gray.svg" class="hs-image-widget hs-image-social-sharing-24" style="height:16px;width:16px;" width="16" hspace="0" alt="Share on twitter">
    </a>
	

  
	
  
    
    
    
			
		

    <a href="http://www.facebook.com/share.php?u=https://www.cybereason.com/blog/research/threat-analysis-report-snake-infostealer-malware&amp;utm_medium=social&amp;utm_source=facebook" target="_blank" rel="noopener" style="width:16px;">
      <img src="https://www.cybereason.com/hubfs/dam/images/images-web/blog-images/template-images/facebook-gray.svg" class="hs-image-widget hs-image-social-sharing-24" style="height:16px;width:16px;" width="16" hspace="0" alt="Share on facebook">
    </a>
	

  
	
  
    
    
    
			
		

    <a href="http://www.linkedin.com/shareArticle?mini=true&amp;url=https://www.cybereason.com/blog/research/threat-analysis-report-snake-infostealer-malware&amp;utm_medium=social&amp;utm_source=linkedin" target="_blank" rel="noopener" style="width:16px;">
      <img src="https://www.cybereason.com/hubfs/dam/images/images-web/blog-images/template-images/linkedin-gray.svg" class="hs-image-widget hs-image-social-sharing-24" style="height:16px;width:16px;" width="16" hspace="0" alt="Share on linkedin">
    </a>
	

</div></div>
          </div> 
          
          
          <!-- CONDITIONAL Author Box Display -->
            <div class="container columns cr-mln__author-listing-single">
              
                <div class="column headshot is-3-full-hd is-3-desktop is-3-tablet is-12-mobile">
                  <img class="cr-speaker-headshot" src="https://www.cybereason.com/hubfs/Capture-4.png" alt="Cybereason Global SOC Team">
                </div>
              
              <div class="column is-9-full-hd is-9-desktop is-12-mobile">
                <span class="descriptor">About the Author</span>
                <h4>Cybereason Global SOC Team</h4>
                
                
                
                  <p>The Cybereason Global SOC Team delivers 24/7 Managed Detection and Response services to customers on every continent. Led by cybersecurity experts with experience working for government, the military and multiple industry verticals, the Cybereason Global SOC Team continuously hunts for the most sophisticated and pervasive threats to support our mission to end cyberattacks on the endpoint, across the enterprise, and everywhere the battle moves.</p>
                
                
                  <a class="cr-button cr-button__min" href="https://www.cybereason.com/blog/authors/cybereason-global-soc-team">All Posts by Cybereason Global SOC Team</a>
                
              </div>            
            </div>
          
        <!-- CONDITIONAL Post Type Choices -->
        
        <!-- Malicious Life Post -->
        
        
        <!-- CISO Stories -->
        
        <!-- Webinar -->
        
          
        <!-- CONDITIONAL Transcript -->
          
        
         <!-- Related Posts -->
        <div id="hs_cos_wrapper_module_1649342860525315" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module">
<section class="cr-section related-posts__wrapper">
  <div class="container container-is-blog page-center">
     <h3>Related Posts</h3>
     <div class="columns is-multiline">
       
  
 <div class="column is-6-fullhd is-6-desktop is-full-mobile blog-listing__single-post">
  <div class="text-content-bundle">
    <a href="https://www.cybereason.com/blog/threat-analysis-report-all-paths-lead-to-cobalt-strike-icedid-emotet-and-qbot"><img src="https://www.cybereason.com/hubfs/Threat%20Alert%20template%20%284%29%20%281%29.png" alt="THREAT ANALYSIS: Cobalt Strike - IcedID, Emotet and QBot"></a>
    <h4><a href="https://www.cybereason.com/blog/threat-analysis-report-all-paths-lead-to-cobalt-strike-icedid-emotet-and-qbot"><span class="underline">THREAT ANALYSIS: Cobalt Strike - IcedID, Emotet and QBot</span></a></h4>
     <p>The Cybereason GSOC delivers details on three recently observed attack scenarios where fast-moving malicious actors used the malware loaders IcedID, QBot and Emotet to deploy the Cobalt Strike framework on the compromised systems...</p>
   </div>
 </div>


  
 <div class="column is-6-fullhd is-6-desktop is-full-mobile blog-listing__single-post">
  <div class="text-content-bundle">
    <a href="https://www.cybereason.com/blog/threat-analysis-report-from-shatak-emails-to-the-conti-ransomware"><img src="https://www.cybereason.com/hubfs/Threat%20Alert%20template%20%284%29.png" alt="THREAT ANALYSIS REPORT: From Shathak Emails to the Conti Ransomware"></a>
    <h4><a href="https://www.cybereason.com/blog/threat-analysis-report-from-shatak-emails-to-the-conti-ransomware"><span class="underline">THREAT ANALYSIS REPORT: From Shathak Emails to the Conti Ransomware</span></a></h4>
     <p>The ITG23 group is partnering with the TA551 (Shatak) threat group to distribute ITG23’s TrickBot and BazarBackdoor malware which attackers use to deploy Conti ransomware on compromised systems...</p>
   </div>
 </div>



    </div>
  </div>
</section></div>
          
          
      </div>
        
        <!-- Sidebar -->

      <div class="column is-3-fullhd is-3-desktop is-12-mobile cr-malicious-life-network__sidebar">
        <div class="cr-ml-sidebar--group">
        <div class="top-stripe"></div>
        <div class="sidebar-block search-section">
          <form action="/hs-search-results">
            <input type="search" class="hs-search-field__input" name="term" autocomplete="on" placeholder="Search">
            <input type="hidden" name="type" value="BLOG_POST">
            <input type="hidden" name="type" value="LISTING_PAGE">
            <button type="submit" class="arrow"></button>
          </form>
        </div>
        <div class="sidebar-block subscribe">
          <a href="#blog-subscribe">
            <h4>Subscribe</h4>
            <span>Never miss a blog.</span>
          </a>
        </div>

        <div class="sidebar-block recent-posts">
          <h4>Recent Posts</h4>
          
            
                <div class="recent-posts__single-post">
                    <div class="text-content-bundle">
                        <a href="https://www.cybereason.com/blog/rhadamanthys-stealer-europe" class="post-name"><span class="underline">Copyright Phishing Lures Leading to Rhadamanthys Stealer Now Targeting Europe</span></a>
                       
                    </div>
                </div>
            
                <div class="recent-posts__single-post">
                    <div class="text-content-bundle">
                        <a href="https://www.cybereason.com/blog/threat-alert-genesis-market" class="post-name"><span class="underline">Genesis Market - Malicious Browser Extension</span></a>
                       
                    </div>
                </div>
            
                <div class="recent-posts__single-post">
                    <div class="text-content-bundle">
                        <a href="https://www.cybereason.com/blog/rce-vulnerability-erlang-otp" class="post-name"><span class="underline">CVE-2025-32433: Unauthenticated RCE Vulnerability in Erlang/OTP’s SSH Implementation</span></a>
                       
                    </div>
                </div>
            
        </div>

        <div class="sidebar-block category-listing">
          <h4>Categories</h4>
          <ul>
            <li><a href="https://www.cybereason.com/blog/category/research">Research</a></li>
            <li><a href="https://www.cybereason.com/blog/category/podcasts">Podcasts</a></li>
            <li><a href="https://www.cybereason.com/blog/category/webinars">Webinars</a></li>
            <li><a href="https://www.cybereason.com/blog/category/resources">Resources</a></li>
            <li><a href="https://www.cybereason.com/blog/category/videos">Videos</a></li>
            <li><a href="https://www.cybereason.com/blog/category/news">News</a></li>
          </ul>

          <a class="rec-category__single--view-all" href="/blog/category/research">All Posts</a>
        </div>

        
      </div><!-- END .rec-categories__all -->
      
      
      
    </div>
       
    </div>
  </div>
</div></div>

</div><!--end row-->
</div><!--end row-wrapper -->

<div class="row-fluid-wrapper row-depth-1 row-number-2 ">
<div class="row-fluid ">
<div class="span12 widget-span widget-type-custom_widget " style="display: none;" data-widget-type="custom_widget" data-x="0" data-w="12">
<div id="hs_cos_wrapper_module_1616011887658867" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module">
<section class="cr-section related-posts__wrapper">
  <div class="container container-is-blog page-center">
     <h3>Related Posts</h3>
     <div class="columns is-multiline">
       
  
 <div class="column is-6-fullhd is-6-desktop is-full-mobile blog-listing__single-post">
  <div class="text-content-bundle">
    <a href="https://www.cybereason.com/blog/threat-analysis-report-all-paths-lead-to-cobalt-strike-icedid-emotet-and-qbot"><img src="https://www.cybereason.com/hubfs/Threat%20Alert%20template%20%284%29%20%281%29.png" alt="THREAT ANALYSIS: Cobalt Strike - IcedID, Emotet and QBot"></a>
    <h4><a href="https://www.cybereason.com/blog/threat-analysis-report-all-paths-lead-to-cobalt-strike-icedid-emotet-and-qbot"><span class="underline">THREAT ANALYSIS: Cobalt Strike - IcedID, Emotet and QBot</span></a></h4>
     <p>The Cybereason GSOC delivers details on three recently observed attack scenarios where fast-moving malicious actors used the malware loaders IcedID, QBot and Emotet to deploy the Cobalt Strike framework on the compromised systems...</p>
   </div>
 </div>


  
 <div class="column is-6-fullhd is-6-desktop is-full-mobile blog-listing__single-post">
  <div class="text-content-bundle">
    <a href="https://www.cybereason.com/blog/threat-analysis-report-from-shatak-emails-to-the-conti-ransomware"><img src="https://www.cybereason.com/hubfs/Threat%20Alert%20template%20%284%29.png" alt="THREAT ANALYSIS REPORT: From Shathak Emails to the Conti Ransomware"></a>
    <h4><a href="https://www.cybereason.com/blog/threat-analysis-report-from-shatak-emails-to-the-conti-ransomware"><span class="underline">THREAT ANALYSIS REPORT: From Shathak Emails to the Conti Ransomware</span></a></h4>
     <p>The ITG23 group is partnering with the TA551 (Shatak) threat group to distribute ITG23’s TrickBot and BazarBackdoor malware which attackers use to deploy Conti ransomware on compromised systems...</p>
   </div>
 </div>



    </div>
  </div>
</section></div>

</div><!--end widget-span -->
</div><!--end row-->
</div><!--end row-wrapper -->

<div class="row-fluid-wrapper row-depth-1 row-number-3 ">
<div class="row-fluid ">
<div class="span12 widget-span widget-type-custom_widget " style="" data-widget-type="custom_widget" data-x="0" data-w="12">
<div id="hs_cos_wrapper_module_161767462015235" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module widget-type-blog_subscribe" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module"><div class="cr-mln__blog-listing-page__subscribe-footer">
  <div class="container container-is-blog columns page-center">
    <div class="column is-8-fullhd is-8-desktop is-10-tablet is-12-mobile">
      <span class="tag">NEWSLETTER</span>
      <h3>Never miss a blog</h3>
      <p>Get the latest research, expert insights, and security industry news.</p>
      <a class="cr-button cr-mln__subscribe" href="#blog-subscribe">Subscribe</a>
    </div>
    <!--<div class="column is-5-fullhd is-5-desktop is-half-tablet is-12-mobile is-offset-1-fullhd is-offset-1-desktop">
      <div class="inputs-wrapper">
        
        
      </div>
    </div>-->
  </div>
</div></div>

</div><!--end widget-span -->
</div><!--end row-->
</div><!--end row-wrapper -->

<div class="row-fluid-wrapper row-depth-1 row-number-4 ">
<div class="row-fluid ">
<div class="span12 widget-span widget-type-custom_widget " style="" data-widget-type="custom_widget" data-x="0" data-w="12">
<div id="hs_cos_wrapper_module_166508001252918" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module"><div class="cr-sticky-cta-bar bg-black" id="sticky-bar">
  <div class="content">
    <span>Want to see the Cybereason Defense Platform in action?</span>
    <a class="cr-button cr-button__fill-yellow" href="https://www.cybereason.com/request-a-demo" target="_blank">Schedule a Demo</a>
  </div>
  <div class="close">X</div>
</div></div>

</div><!--end widget-span -->
</div><!--end row-->
</div><!--end row-wrapper -->

    </div><!--end body -->
</div><!--end body wrapper -->

<div class="footer-container-wrapper">
    <div class="footer-container container-fluid">

<div class="row-fluid-wrapper row-depth-1 row-number-1 ">
<div class="row-fluid ">
<div class="span12 widget-span widget-type-custom_widget " style="" data-widget-type="custom_widget" data-x="0" data-w="12">
<div id="hs_cos_wrapper_module_16036762394194314" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module"><!-- FOOTER -->

<footer class="cr-section cr-footer cr-footer__full">
    <div class="container page-center">
      <div class="columns">
          <div class="column is-6-fullhd is-5-desktop cr-footer__col cr-footer__left">
            <div class="cr-footer__Left-logo">
              
                <a href="https://www.cybereason.com">
                  
                <img src="https://www.cybereason.com/hubfs/dam/images/images-web/logos/cr-brand/cr-logo-inline--primary-white.png">
              </a>
            </div>
          </div>
          <div class="columns column is-6-fullhd is-6-desktop cr-footer__col cr-footer__right">
            <div class="cr-footer__links-list column">
              <h4>About</h4>
              <ul>
                <li><a href="https://www.cybereason.com/company/who-we-are">Who We Are</a>
                </li><li><a href="https://www.cybereason.com/company/careers">Careers</a>
          <!-- </li><li><a href="https://www.cybereason.com/company/leadership">Leadership</a> --->
                </li><li><a href="https://www.cybereason.com/company/contact-us">Contact</a>
              </li></ul>
            </div>
            <div class="cr-footer__links-list column">
              <h4>Resources</h4>
              <ul>
                <li><a href="https://www.cybereason.com/blog">Blog</a></li>
                <li><a href="https://www.cybereason.com/resources/tag/case-study">Case Studies</a></li>
                <li><a href="https://www.cybereason.com/resources/tag/webinars">Webinars</a></li>
                <li><a href="https://www.cybereason.com/resources/tag/white-papers">White Papers</a></li>
             </ul>
            </div>
            <div class="cr-footer__links-list column">
              <h4>Platform</h4>
              <ul>
                
                <li><a href="https://www.cybereason.com/platform">Overview</a></li>
                <li><a href="https://www.cybereason.com/platform/endpoint-prevention">Endpoint Protection</a></li>
                <li><a href="https://www.cybereason.com/platform/endpoint-detection-response-edr">EDR</a></li>
                <li><a href="https://www.cybereason.com/platform/managed-detection-response-mdr">MDR</a></li>
              </ul>
            </div>
          </div>
      </div>
    </div>
  
    <div class="container page-center">
      <div class="columns cr-footer__bottom-bar">
        <div class="column">
          <p>©Cybereason 2025. All Rights Reserved.</p>
        </div>
        <div class="column bottom-bar__links">
          <ul>
            <li><a href="https://www.cybereason.com/terms-of-use">Terms of Use</a></li>
            <li><a href="https://www.cybereason.com/privacy-notice">Privacy Notice</a></li>
            <li><a href="https://www.cybereason.com/ccpa-privacy-request">Do Not Sell</a></li>
            <li><a href="https://www.cybereason.com/security">Security</a></li>
            <!--<li><a href="#">Cookie Policy</a></li>-->
          </ul>
        </div>

        <div class="column bottom-bar__social">
          <ul>
            <li><a class="facebook" href="https://www.facebook.com/Cybereason/"></a></li>
            <li><a class="twitter" href="https://twitter.com/cybereason"></a></li>
            <li><a class="youtube" href="https://www.youtube.com/channel/UCOm7AaB0HiNH4Phe66sK0Ew"></a></li>
            <li><a class="linkedin" href="https://www.linkedin.com/company/cybereason"></a></li>
            <li><a class="instagram" href="https://www.instagram.com/cybereason"></a></li>
          </ul>
        </div>
    </div>
  </div>

</footer></div>

</div><!--end widget-span -->
</div><!--end row-->
</div><!--end row-wrapper -->

    </div><!--end footer -->
</div><!--end footer wrapper -->

    
<!-- HubSpot performance collection script -->
<script defer src="/hs/hsstatic/content-cwv-embed/static-1.1293/embed.js"></script>
<script src="https://www.cybereason.com/hs-fs/hubfs/hub_generated/template_assets/1/42507089303/1741528346196/template_animatedModal.min.js"></script>
<script>
var hsVars = hsVars || {}; hsVars['language'] = 'en';
</script>

<script src="/hs/hsstatic/cos-i18n/static-1.53/bundles/project.js"></script>
<script src="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/41681847227/1741488491170/module_CR_-_Malicious_Life_Network_--_Tier_One_Header.min.js"></script>
<script src="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/41682410610/1741488492472/module_CR_-_Malicious_Life_Network_--_Main_Hero.min.js"></script>
<script src="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/48386556055/1741488537305/module_CR_-_HTML_PopUp_Window_--_IOCs.min.js"></script>
<script src="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/43300360745/1741488505140/module_CR_-_Malicious_Life_Network_--_Related_Posts.min.js"></script>
<script src="https://www.cybereason.com/hs-fs/hubfs/hub_generated/module_assets/1/86933076631/1741488758324/module_CR_-_Sticky_CTA_Bar.min.js"></script>

<!-- Start of HubSpot Analytics Code -->
<script type="text/javascript">
var _hsq = _hsq || [];
_hsq.push(["setContentType", "blog-post"]);
_hsq.push(["setCanonicalUrl", "https:\/\/www.cybereason.com\/blog\/research\/threat-analysis-report-snake-infostealer-malware"]);
_hsq.push(["setPageId", "58497025810"]);
_hsq.push(["setContentMetadata", {
    "contentPageId": 58497025810,
    "legacyPageId": "58497025810",
    "contentFolderId": null,
    "contentGroupId": 5272851739,
    "abTestId": null,
    "languageVariantId": 58497025810,
    "languageCode": "en",
    
    
}]);
</script>

<script type="text/javascript" id="hs-script-loader" async defer src="/hs/scriptloader/3354902.js"></script>
<!-- End of HubSpot Analytics Code -->


<script type="text/javascript">
var hsVars = {
    render_id: "d5242358-52eb-4fcb-a06e-928196570d48",
    ticks: 1748997203034,
    page_id: 58497025810,
    
    content_group_id: 5272851739,
    portal_id: 3354902,
    app_hs_base_url: "https://app.hubspot.com",
    cp_hs_base_url: "https://cp.hubspot.com",
    language: "en",
    analytics_page_type: "blog-post",
    scp_content_type: "",
    
    analytics_page_id: "58497025810",
    category_id: 3,
    folder_id: 0,
    is_hubspot_user: false
}
</script>


<script defer src="/hs/hsstatic/HubspotToolsMenu/static-1.432/js/index.js"></script>

<script>if ($('[id^="hs_form"]').length > 0) {
  var myInterval = setInterval(
  function() {
    var myFields = document.getElementsByClassName('hs-input');
    if (myFields.length > 0) {
      clearInterval(myInterval);
      for (var i = 0; i < myFields.length; i++) {
        var myField = myFields[i];
		var myTagName = myField.tagName.toLowerCase();
        if (myTagName == 'input' || myTagName == 'textarea') {
          if (myField.placeholder != null) {
            myField.placeholder = myField.placeholder.replace('*', '');
          }
        } else if (myTagName == 'select') {
          myField.options[0].innerHTML = myField.options[0].innerHTML.replace('*', '');
        }
      }
    }
  }, 100);
}
</script>

<div id="fb-root"></div>
  <script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_GB/sdk.js#xfbml=1&version=v3.0";
  fjs.parentNode.insertBefore(js, fjs);
 }(document, 'script', 'facebook-jssdk'));</script> <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="https://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>
 


    <script>
function sticky_relocate() {
  var window_top = $(window).scrollTop();
  var div_top = $('#sticky-anchor').offset().top;
  if (window_top > div_top) {
    $('#sticky').addClass('stick');
  } else {
    $('#sticky').removeClass('stick');
  }
}

$(function() {
  $(window).scroll(sticky_relocate);
  sticky_relocate();
});
</script>
    <!-- Generated by the HubSpot Template Builder - template version 1.03 -->

<script type="text/javascript" src="/_Incapsula_Resource?SWJIYLWA=719d34d31c8e3a6e6fffd425f7e032f3&ns=4&cb=127320799" async></script></body></html>