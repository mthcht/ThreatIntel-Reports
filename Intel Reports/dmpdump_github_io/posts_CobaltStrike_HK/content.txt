<!doctype html><html lang="en" data-mode="dark"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta name="theme-color" media="(prefers-color-scheme: light)" content="#f7f7f7"><meta name="theme-color" media="(prefers-color-scheme: dark)" content="#1b1b1e"><meta name="apple-mobile-web-app-capable" content="yes"><meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"><meta name="viewport" content="width=device-width, user-scalable=no initial-scale=1, shrink-to-fit=no, viewport-fit=cover" ><meta name="generator" content="Jekyll v4.4.1" /><meta property="og:title" content="SLOW#TEMPEST Cobalt Strike Loader" /><meta property="og:locale" content="en" /><meta name="description" content="On July 18, 2025, an ISO image with moderate detection was updated to VirusTotal from Hong Kong." /><meta property="og:description" content="On July 18, 2025, an ISO image with moderate detection was updated to VirusTotal from Hong Kong." /><link rel="canonical" href="https://dmpdump.github.io/posts/CobaltStrike_HK/" /><meta property="og:url" content="https://dmpdump.github.io/posts/CobaltStrike_HK/" /><meta property="og:site_name" content="dmpdump" /><meta property="og:type" content="article" /><meta property="article:published_time" content="2025-08-02T00:00:00+00:00" /><meta name="twitter:card" content="summary" /><meta property="twitter:title" content="SLOW#TEMPEST Cobalt Strike Loader" /><meta name="twitter:site" content="@G60930953" /> <script type="application/ld+json"> {"@context":"https://schema.org","@type":"BlogPosting","dateModified":"2025-08-04T00:57:53+00:00","datePublished":"2025-08-02T00:00:00+00:00","description":"On July 18, 2025, an ISO image with moderate detection was updated to VirusTotal from Hong Kong.","headline":"SLOW#TEMPEST Cobalt Strike Loader","mainEntityOfPage":{"@type":"WebPage","@id":"https://dmpdump.github.io/posts/CobaltStrike_HK/"},"url":"https://dmpdump.github.io/posts/CobaltStrike_HK/"}</script><title>SLOW#TEMPEST Cobalt Strike Loader | dmpdump</title><link rel="apple-touch-icon" sizes="180x180" href="/assets/img/favicons/apple-touch-icon.png"><link rel="icon" type="image/png" sizes="32x32" href="/assets/img/favicons/favicon-32x32.png"><link rel="icon" type="image/png" sizes="16x16" href="/assets/img/favicons/favicon-16x16.png"><link rel="manifest" href="/assets/img/favicons/site.webmanifest"><link rel="shortcut icon" href="/assets/img/favicons/favicon.ico"><meta name="apple-mobile-web-app-title" content="dmpdump"><meta name="application-name" content="dmpdump"><meta name="msapplication-TileColor" content="#da532c"><meta name="msapplication-config" content="/assets/img/favicons/browserconfig.xml"><meta name="theme-color" content="#ffffff"><link rel="preconnect" href="https://fonts.googleapis.com" ><link rel="dns-prefetch" href="https://fonts.googleapis.com" ><link rel="preconnect" href="https://fonts.gstatic.com" crossorigin><link rel="dns-prefetch" href="https://fonts.gstatic.com" ><link rel="preconnect" href="https://cdn.jsdelivr.net" ><link rel="dns-prefetch" href="https://cdn.jsdelivr.net" ><link rel="stylesheet" href="/assets/css/jekyll-theme-chirpy.css"><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Lato:wght@300;400&family=Source+Sans+Pro:wght@400;600;700;900&display=swap"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.6.0/css/all.min.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tocbot@4.29.0/dist/tocbot.min.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/loading-attribute-polyfill@2.1.1/dist/loading-attribute-polyfill.min.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/glightbox@3.3.0/dist/css/glightbox.min.css"><body><aside aria-label="Sidebar" id="sidebar" class="d-flex flex-column align-items-end"><header class="profile-wrapper"> <a href="/" id="avatar" class="rounded-circle"><img src="/assets/images/avatar.png" width="112" height="112" alt="avatar" onerror="this.style.display='none'"></a><h1 class="site-title"> <a href="/">dmpdump</a></h1><p class="site-subtitle fst-italic mb-0">CTI, RE, Programming</p></header><nav class="flex-column flex-grow-1 w-100 ps-0"><ul class="nav"><li class="nav-item"> <a href="/" class="nav-link"> <i class="fa-fw fas fa-home"></i> <span>HOME</span> </a><li class="nav-item"> <a href="/categories/" class="nav-link"> <i class="fa-fw fas fa-stream"></i> <span>CATEGORIES</span> </a><li class="nav-item"> <a href="/tags/" class="nav-link"> <i class="fa-fw fas fa-tags"></i> <span>TAGS</span> </a><li class="nav-item"> <a href="/archives/" class="nav-link"> <i class="fa-fw fas fa-archive"></i> <span>ARCHIVES</span> </a><li class="nav-item"> <a href="/about/" class="nav-link"> <i class="fa-fw fas fa-info-circle"></i> <span>ABOUT</span> </a></ul></nav><div class="sidebar-bottom d-flex flex-wrap align-items-center w-100"> <a href="https://github.com/dmpdump" aria-label="github" target="_blank" rel="noopener noreferrer" > <i class="fab fa-github"></i> </a> <a href="https://twitter.com/G60930953" aria-label="twitter" target="_blank" rel="noopener noreferrer" > <i class="fa-brands fa-x-twitter"></i> </a> <a href="javascript:location.href = 'mailto:' + ['dmpdump','tuta.io'].join('@')" aria-label="email" > <i class="fas fa-envelope"></i> </a> <a href="/feed.xml" aria-label="rss" > <i class="fas fa-rss"></i> </a></div></aside><div id="main-wrapper" class="d-flex justify-content-center"><div class="container d-flex flex-column px-xxl-5"><header id="topbar-wrapper" aria-label="Top Bar"><div id="topbar" class="d-flex align-items-center justify-content-between px-lg-3 h-100" ><nav id="breadcrumb" aria-label="Breadcrumb"> <span> <a href="/">Home</a> </span> <span>SLOW#TEMPEST Cobalt Strike Loader</span></nav><button type="button" id="sidebar-trigger" class="btn btn-link"> <i class="fas fa-bars fa-fw"></i> </button><div id="topbar-title"> Post</div><button type="button" id="search-trigger" class="btn btn-link"> <i class="fas fa-search fa-fw"></i> </button> <search id="search" class="align-items-center ms-3 ms-lg-0"> <i class="fas fa-search fa-fw"></i> <input class="form-control" id="search-input" type="search" aria-label="search" autocomplete="off" placeholder="Search..." > </search> <button type="button" class="btn btn-link text-decoration-none" id="search-cancel">Cancel</button></div></header><div class="row flex-grow-1"><main aria-label="Main Content" class="col-12 col-lg-11 col-xl-9 px-md-4"><article class="px-1"><header><h1 data-toc-skip>SLOW#TEMPEST Cobalt Strike Loader</h1><div class="post-meta text-muted"> <span> Posted <time data-ts="1754092800" data-df="ll" data-bs-toggle="tooltip" data-bs-placement="bottom" > Aug 2, 2025 </time> </span> <span> Updated <time data-ts="1754269073" data-df="ll" data-bs-toggle="tooltip" data-bs-placement="bottom" > Aug 3, 2025 </time> </span><div class="d-flex justify-content-between"> <span> By <em> <a href="https://github.com/dmpdump">dmpdump</a> </em> </span><div> <span class="readtime" data-bs-toggle="tooltip" data-bs-placement="bottom" title="1645 words" > <em>9 min</em> read</span></div></div></div></header><div class="content"><p>On July 18, 2025, an ISO image with moderate detection was updated to VirusTotal from Hong Kong.</p><p><a href="/assets/images/hkcobaltstrike/vtsubmission.png" class="popup img-link shimmer"><img src="/assets/images/hkcobaltstrike/vtsubmission.png" alt="sshot" loading="lazy"></a></p><p>ISO SHA2: 6573136f9b804ddc637f6be3a4536ed0013da7a5592b2f3a3cd37c0c71926365</p><p>The ISO image has a structure which I have seen multiple times in threat activity targeting Chinese-speaking users. Once the ISO is mounted, the victim sees a shortcut (LNK) file with a deceiving folder icon. Additionally, hidden folders within the ISO lead to a legitimate executable, a malicious DLL, and a decoy PDF.</p><p><a href="/assets/images/hkcobaltstrike/mounted.png" class="popup img-link shimmer"><img src="/assets/images/hkcobaltstrike/mounted.png" alt="sshot" loading="lazy"></a></p><p><a href="/assets/images/hkcobaltstrike/tree.png" class="popup img-link shimmer"><img src="/assets/images/hkcobaltstrike/tree.png" alt="sshot" loading="lazy"></a></p><p>The LNK file that triggers the infection chain is named <code class="language-plaintext highlighter-rouge">郑州商品交易所基础设施运维问题Review.lnk</code>, which translates to <code class="language-plaintext highlighter-rouge">Zhengzhou Commodity Exchange Infrastructure Operation and Maintenance Issues Review.lnk</code>. Zhengzhou Commodity Exchange is a Chinese <a href="https://en.wikipedia.org/wiki/Zhengzhou_Commodity_Exchange">futures exchange</a> based in Zhengzhou, China.</p><p>Inspecting the LNK file we can see that its main objective is to execute <code class="language-plaintext highlighter-rouge">config.exe</code>, an executable within the hidden nested folders.</p><div class="language-text highlighter-rouge"><div class="code-header"> <span data-label-text="Text"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre><td class="rouge-code"><pre>[String Data]
Relative path (UNICODE):                ..\..\..\..\..\..\Windows\SysWOW64\explorer.exe
Arguments (UNICODE):                    ".\__MACOSX\__MACOSX\__MACOSX\__MACOSX\config.exe"
</pre></table></code></div></div><p>Reviewing the LNK’s timestamps and metadata, we can see that the LNK was likely reused to execute <code class="language-plaintext highlighter-rouge">DingTalkSnippingTool.exe</code> in previous activity. Some of the timestamps point to 2024, which supports the hypothesis of LNK reuse. Additionally, we can see paths related to user <code class="language-plaintext highlighter-rouge">rehea</code> and a subfolder named <code class="language-plaintext highlighter-rouge">evil</code>. Finally, we can see that the machine name associated with the creation of this LNK file is <code class="language-plaintext highlighter-rouge">desktop-rl06167</code>.</p><div class="language-text highlighter-rouge"><div class="code-header"> <span data-label-text="Text"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
</pre><td class="rouge-code"><pre>[Header]
Date created:                           08/04/2024 (09:30:30.652) [UTC]
Last accessed:                          11/14/2024 (03:02:09.60) [UTC]
Last modified:                          08/04/2024 (09:30:30.730) [UTC]
File size:                              5052928 bytes

[Metadata Property Store]
Property set GUID:                      dabd30ed-0043-4789-a7f8-d013a4736622
ID:                                     System.ItemFolderPathDisplayNarrow
Value:                                  0x001f (VT_LPWSTR)      __MACOSX (C:\??\rehea\??\x64????????\dingding???\evil\__MACOSX\__MACOSX\__MACOSX)

Property set GUID:                      b725f130-47ef-101a-a5f1-02608c9eebac
ID:                                     System.ItemTypeText
Value:                                  0x001f (VT_LPWSTR)      DingTalkSnippingTool.exe
ID:                                     System.DateCreated
Value:                                  0x0040 (VT_FILETIME)    07/23/2024 (07:29:30.0) [UTC]
ID:                                     System.Size
Value:                                  0x0015 (VT_UI8)         0x0000000000193530 = 1652016
ID:                                     System.ItemTypeText
Value:                                  0x001f (VT_LPWSTR)      ????
ID:                                     System.DateModified
Value:                                  0x0040 (VT_FILETIME)    05/06/2024 (14:50:49.569) [UTC]

Property set GUID:                      28636aa6-953d-11d2-b5d6-00c04fd918d0
ID:                                     System.ParsingPath
Value:                                  0x001f (VT_LPWSTR)      C:\Users\rehea\Desktop\x64????????\dingding???\evil\__MACOSX\__MACOSX\__MACOSX\__MACOSX\DingTalkSnippingTool.exe

[Distributed Link Tracker Properties]
Version:                                0
NetBIOS name:                           desktop-rl06167
Droid volume identifier:                47b41472-5a80-400f-8f27-2b06d2a24a4d
Droid file identifier:                  a025eadc-9fe7-11ef-b2f7-347df6183a61
Birth droid volume identifier:          47b41472-5a80-400f-8f27-2b06d2a24a4d
Birth droid file identifier:            a025eadc-9fe7-11ef-b2f7-347df6183a61
MAC address:                            34:7d:f6:18:3a:61
UUID timestamp:                         11/11/2024 (04:44:24.487) [UTC]
UUID sequence number:                   13047

</pre></table></code></div></div><h1 id="cobalt-strike-loader">Cobalt Strike Loader</h1><p>As observed in the LNK file, its sole objective is to execute <code class="language-plaintext highlighter-rouge">config.exe</code>. This file is a legitimate, signed, Alibaba executable originally named <code class="language-plaintext highlighter-rouge">arphaCrashReport</code>.</p><p><a href="/assets/images/hkcobaltstrike/arpha.png" class="popup img-link shimmer"><img src="/assets/images/hkcobaltstrike/arpha.png" alt="sshot" loading="lazy"></a></p><p>Whenever we see a legitimate executable in such a suspicious execution chain, we immediately think of DLL sideloading, so we need to inspect DLLs within the same folder. Looking at the imports in <code class="language-plaintext highlighter-rouge">config.exe</code>, we can see that it loads <code class="language-plaintext highlighter-rouge">arphadump64.dll</code>.</p><p><a href="/assets/images/hkcobaltstrike/import.png" class="popup img-link shimmer"><img src="/assets/images/hkcobaltstrike/import.png" alt="sshot" loading="lazy"></a></p><p><code class="language-plaintext highlighter-rouge">arphadump64.dll</code>is a malicious loader with significant amount of junk code to confuse analysis and delay execution. The core functionality of the loader is located at offset <code class="language-plaintext highlighter-rouge">0x180002A61</code>. The junk code consists primarily in a great number of string assignment functions which take a dummy string such as <code class="language-plaintext highlighter-rouge">examp564654654654646465465465456465165165465465le4</code> or <code class="language-plaintext highlighter-rouge">param[number]</code> as a parameter.</p><p><a href="/assets/images/hkcobaltstrike/junk.png" class="popup img-link shimmer"><img src="/assets/images/hkcobaltstrike/junk.png" alt="sshot" loading="lazy"></a></p><p>However, if we look closely, anti-analysis controls and loader functionalities can be identified among the junk code. The loader calls the <code class="language-plaintext highlighter-rouge">GlobalMemoryStatusEx</code> API to retrieve the amount of RAM memory from the <code class="language-plaintext highlighter-rouge">ullTotalPhys</code> member of the <code class="language-plaintext highlighter-rouge">MEMORYSTATUSEX</code> structure. It subsequently checks if the infected system has 6GB of RAM memory or more to proceed with the loader functionality.</p><p><a href="/assets/images/hkcobaltstrike/memstat.png" class="popup img-link shimmer"><img src="/assets/images/hkcobaltstrike/memstat.png" alt="sshot" loading="lazy"></a></p><p><a href="/assets/images/hkcobaltstrike/memcheck.png" class="popup img-link shimmer"><img src="/assets/images/hkcobaltstrike/memcheck.png" alt="sshot" loading="lazy"></a></p><p>Further down the execution of the main logic function, we can see that this loader DLL builds a path to <code class="language-plaintext highlighter-rouge">base.dll</code> and implements a function to open the DLL. We subsequently see a file offset (<code class="language-plaintext highlighter-rouge">0x1B9CA8</code>) passed as an argument to a function. Upon review, this ended up being an offset within <code class="language-plaintext highlighter-rouge">base.dll</code>. This code suggests that <code class="language-plaintext highlighter-rouge">base.dll</code> is not loaded as a DLL to execute code. Instead, it simply has embedded content read by the loader DLL.</p><p><a href="/assets/images/hkcobaltstrike/getbase.png" class="popup img-link shimmer"><img src="/assets/images/hkcobaltstrike/getbase.png" alt="sshot" loading="lazy"></a></p><p>Inspecting offset <code class="language-plaintext highlighter-rouge">0x1B9CA8</code> in <code class="language-plaintext highlighter-rouge">base.dll</code> we see content that does not look like valid code. In fact, we can observe a repeating pattern (<code class="language-plaintext highlighter-rouge">jdk</code>), suggesting the possibility of XOR encryption with a short key.</p><p><a href="/assets/images/hkcobaltstrike/base.png" class="popup img-link shimmer"><img src="/assets/images/hkcobaltstrike/base.png" alt="sshot" loading="lazy"></a></p><p>The code that follows confirms our hypothesis. The payload read from <code class="language-plaintext highlighter-rouge">base.dll</code> is XOR decrypted with a 3-byte rolling XOR key (<code class="language-plaintext highlighter-rouge">0x6A646B</code> = <code class="language-plaintext highlighter-rouge">jdk</code>). The decrypted payload is subsequently copied into newly-allocated memory with <code class="language-plaintext highlighter-rouge">PAGE_EXECUTE_READWRITE</code> permissions, and a new thread is created for the payload execution. Additionally, a new thread is also created to execute <code class="language-plaintext highlighter-rouge">4.pdf</code>, which is a decoy PDF.</p><p><a href="/assets/images/hkcobaltstrike/decryptload.png" class="popup img-link shimmer"><img src="/assets/images/hkcobaltstrike/decryptload.png" alt="sshot" loading="lazy"></a></p><p>The decrypted payload is executed in a new thread via a function pointer:</p><p><a href="/assets/images/hkcobaltstrike/fnptr.png" class="popup img-link shimmer"><img src="/assets/images/hkcobaltstrike/fnptr.png" alt="sshot" loading="lazy"></a></p><p>The decoy PDF is opened with the <code class="language-plaintext highlighter-rouge">ShellExecuteA</code> API and it contains a one line string: <code class="language-plaintext highlighter-rouge">文档信息损坏</code> (<code class="language-plaintext highlighter-rouge">Document information is damaged</code>).</p><p><a href="/assets/images/hkcobaltstrike/openpdf.png" class="popup img-link shimmer"><img src="/assets/images/hkcobaltstrike/openpdf.png" alt="sshot" loading="lazy"></a></p><p><a href="/assets/images/hkcobaltstrike/pdf.png" class="popup img-link shimmer"><img src="/assets/images/hkcobaltstrike/pdf.png" alt="sshot" loading="lazy"></a></p><p>Looking at the first bytes of the decrypted payload, the custom <code class="language-plaintext highlighter-rouge">MZARUH</code> header stands out - this is highly indicative of Cobalt Strike.</p><p><a href="/assets/images/hkcobaltstrike/customhead.png" class="popup img-link shimmer"><img src="/assets/images/hkcobaltstrike/customhead.png" alt="sshot" loading="lazy"></a></p><p>With that in mind, we can attempt to parse its configuration, and, indeed, we can confirm that this is an HTTP Cobalt Strike Beacon using <code class="language-plaintext highlighter-rouge">m.123huodong.com.cloud.cdntip.com.s2-web.dogedns[.]com</code> as the C2. Some of the Beacon network attributes, such as POST URI and metadata, have the objective of disguising the traffic as <a href="https://en.wikipedia.org/wiki/Bilibili"><code class="language-plaintext highlighter-rouge">Bilibili</code></a> traffic, a Chinese online video sharing website. The watermark in this beacon is <code class="language-plaintext highlighter-rouge">666666666</code>, likely associated with a cracked version of Cobalt Strike.</p><div class="language-plaintext highlighter-rouge"><div class="code-header"> <span data-label-text="Plaintext"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
</pre><td class="rouge-code"><pre>Beacon configuration:
BeaconType                       - HTTP
Port                             - 80
SleepTime                        - 15000
MaxGetSize                       - 2097210
Jitter                           - 47
MaxDNS                           - Not Found
PublicKey_MD5                    - af1e45058dca830b095da6dd8c15b116
C2Server                         - m.123huodong.com.cloud.cdntip.com.s2-web.dogedns[.]com,/x/space/user/setting/list
UserAgent                        - Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko)
HttpPostUri                      - /x/internal/gaia-gateway/ExClimbWuzhi
Malleable_C2_Instructions        - Remove 18 bytes from the end
                                   Remove 18 bytes from the beginning
                                   Remove 18 bytes from the beginning
                                   XOR mask w/ random key
HttpGet_Metadata                 - ConstHeaders
                                        Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
                                        Host: api.bilibili[.]com
                                        Referer: https://static.microsoft.com/
                                        Accept-Encoding: gzip, deflate
                                   Metadata
                                        base64url
                                        prepend "ANID="
                                        prepend "__Secure-3PAPISID=noskin;"
                                        append ";CONSENT=YES+CN.zh-CN+20210917-09-0"
                                        header "Cookie"
HttpPost_Metadata                - ConstHeaders
                                        Content-Type: application/json;charset=UTF-8
                                        Priority: u=1, i
                                        Accept: */*
                                        Host: api.bilibili[.]com
                                   ConstParams
                                        template_code=zVVNqfra
                                        cash_min=TdLRLMuYIApT
                                   SessionId
                                        base64url
                                        parameter "__formid"
                                   Output
                                        base64url
                                        prepend "aid_=522005705&amp;accver=1&amp;showtype=embed&amp;ua="
                                        print
PipeName                         - Not Found
DNS_Idle                         - Not Found
DNS_Sleep                        - Not Found
SSH_Host                         - Not Found
SSH_Port                         - Not Found
SSH_Username                     - Not Found
SSH_Password_Plaintext           - Not Found
SSH_Password_Pubkey              - Not Found
SSH_Banner                       - Host: m.123huodong.com.cloud.cdntip[.]com

HttpGet_Verb                     - GET
HttpPost_Verb                    - POST
HttpPostChunk                    - 0
Spawnto_x86                      - %windir%\syswow64\gpupdate.exe
Spawnto_x64                      - %windir%\sysnative\gpupdate.exe
CryptoScheme                     - 0
Proxy_Config                     - Not Found
Proxy_User                       - Not Found
Proxy_Password                   - Not Found
Proxy_Behavior                   - Use IE settings
Watermark_Hash                   - Vbi/d5GsmtZldELooLqdHw==
Watermark                        - 666666666
bStageCleanup                    - True
bCFGCaution                      - True
KillDate                         - 0
bProcInject_StartRWX             - False
bProcInject_UseRWX               - False
bProcInject_MinAllocSize         - 17500
ProcInject_PrependAppend_x86     - Empty
ProcInject_PrependAppend_x64     - Empty
ProcInject_Execute               - ntdll:RtlUserThreadStart
                                   CreateThread
                                   NtQueueApcThread-s
                                   CreateRemoteThread
                                   RtlCreateUserThread
ProcInject_AllocationMethod      - NtMapViewOfSection
bUsesCookies                     - True
HostHeader                       - Host: m.123huodong.com.cloud.cdntip[.]com

headersToRemove                  - Not Found
DNS_Beaconing                    - Not Found
DNS_get_TypeA                    - Not Found
DNS_get_TypeAAAA                 - Not Found
DNS_get_TypeTXT                  - Not Found
DNS_put_metadata                 - Not Found
DNS_put_output                   - Not Found
DNS_resolver                     - Not Found
DNS_strategy                     - round-robin
DNS_strategy_rotate_seconds      - -1
DNS_strategy_fail_x              - -1
DNS_strategy_fail_seconds        - -1
Retry_Max_Attempts               - 0
Retry_Increase_Attempts          - 0
Retry_Duration                   - 0
</pre></table></code></div></div><h1 id="entry-point-patching">Entry Point Patching</h1><p>After creating the threads for the Beacon and decoy PDF, the loader implements an infinite loop patch in the entry point of the loading executable (<code class="language-plaintext highlighter-rouge">config.exe</code>). The patch is implemented by calling <code class="language-plaintext highlighter-rouge">K32GetModuleInformation</code> and getting a pointer to the <code class="language-plaintext highlighter-rouge">MODULEINFO</code> structure. A patch with bytes that implement an infinite loop is then written to the entry point of <code class="language-plaintext highlighter-rouge">config.exe</code>, locating it via the <code class="language-plaintext highlighter-rouge">EntryPoint</code> member of <code class="language-plaintext highlighter-rouge">MODULEINFO</code>.</p><p><a href="/assets/images/hkcobaltstrike/entrypatch.png" class="popup img-link shimmer"><img src="/assets/images/hkcobaltstrike/entrypatch.png" alt="sshot" loading="lazy"></a></p><p>The infinite loop patch to the entry point, for better visualization:</p><div class="language-plaintext highlighter-rouge"><div class="code-header"> <span data-label-text="Plaintext"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre><td class="rouge-code"><pre>0:  eb 00                   jmp    0x2
2:  eb fd                   jmp    0x1
4:  50                      push   rax
5:  58                      pop    rax
6:  eb f9                   jmp    0x1 
</pre></table></code></div></div><p>Locking the loader executable with an infinite patch likely serves the purpose of blocking the normal execution flow of <code class="language-plaintext highlighter-rouge">config.exe</code> while maintaining the persistent execution of the malicious Cobalt Strike thread. The infinite patch likely avoids thread synchronization issues or early termination/crashes due to the execution of the malicious DLL. This Cobalt Strike loader was compiled on July 16, 2025 (two days before the sample was uploaded to VirusTotal) and its original name is <code class="language-plaintext highlighter-rouge">ldrunlock.dll</code>. The original DLL name was likely derived from the infinite patch implemented in the loader executable.</p><p><a href="/assets/images/hkcobaltstrike/dllheader.png" class="popup img-link shimmer"><img src="/assets/images/hkcobaltstrike/dllheader.png" alt="sshot" loading="lazy"></a></p><p><a href="/assets/images/hkcobaltstrike/ldrunlock.png" class="popup img-link shimmer"><img src="/assets/images/hkcobaltstrike/ldrunlock.png" alt="sshot" loading="lazy"></a></p><h1 id="similarities-with-previously-reported-slowtempest-activity">Similarities with previously reported SLOW#TEMPEST activity</h1><p>Accurate attribution is hard and requires significant amounts of data and a solid analytical model. While I am not in a position to attempt attribution, I can observe that multiple aspects of this activity overlap with a campaign <a href="https://www.securonix.com/blog/from-cobalt-strike-to-mimikatz-slowtempest/">previously reported</a> as <code class="language-plaintext highlighter-rouge">SLOW#TEMPEST</code> by Securonix in August 2024:</p><ul><li>Targeting of Chinese-speaking users<li>Folder structure similarities (‘__MACOS’ nested folders)<li>The presence of the <code class="language-plaintext highlighter-rouge">evil</code> subfolder in the metadata of one of their reported LNK files (28030E8CF4C9C39665A0552E82DA86781B00F099E240DB83F1D1A3AE0E990AB6)<li>DLL sideloading of Cobalt Strike beacons executed from an LNK file<li>Use of the same Cobalt Strike Watermark (666666666)</ul><p>Another related report was <a href="https://unit42.paloaltonetworks.com/slow-tempest-malware-obfuscation/">published by Palo Alto Unit42</a> in July 2025. In this report they reviewed the obfuscation techniques of a loader sideloaded by <code class="language-plaintext highlighter-rouge">DingTalk.exe</code>. This legitimate executable is similar to the legacy artifact identified in our LNK file (<code class="language-plaintext highlighter-rouge">DingTalkSnippingTool.exe</code>). The loader in question, although not fully analyzed in the report, also seems to check for a minimum of 6GB of memory, just like our loader.</p><h1 id="iocs">IOCs</h1><ul><li>ISO: 6573136f9b804ddc637f6be3a4536ed0013da7a5592b2f3a3cd37c0c71926365<li>郑州商品交易所基础设施运维问题Review.lnk: c28bd1a57e80861fce2597b1f5155a687bef434b0001632c8a53243718f5f287<li>base.dll: 5efbd54a3a51d96fbc8e65815df2f0d95af21a34b99b8dc9a38590fb6d2094f8<li>config.exe: 1cb0560f614cc850422171ffe6b0b9f6b9ceaec4fe3516bc8493f253076470ab<li>4.pdf: 50fbe429848e16f08a6dbf6ce6d5bbff44db1e009f560e8b8c4cde6cff0a768b<li>arphadump64.dll: a41c06ad948f3a21496e4d1f6b622ca84a365dd2087b710ed3e7f057e7a2a3f8<li>C2: m.123huodong.com.cloud.cdntip.com.s2-web.dogedns[.]com</ul></div><div class="post-tail-wrapper text-muted"><div class="post-tags"> <i class="fa fa-tags fa-fw me-1"></i> <a href="/tags/malware/" class="post-tag no-text-decoration" >malware</a> <a href="/tags/hongkong/" class="post-tag no-text-decoration" >hongkong</a> <a href="/tags/cobaltstrike/" class="post-tag no-text-decoration" >cobaltstrike</a></div><div class=" post-tail-bottom d-flex justify-content-between align-items-center mt-5 pb-2 " ><div class="license-wrapper"> This post is licensed under <a href="https://creativecommons.org/licenses/by/4.0/"> CC BY 4.0 </a> by the author.</div><div class="share-wrapper d-flex align-items-center"> <span class="share-label text-muted">Share</span> <span class="share-icons"> <a href="https://twitter.com/intent/tweet?text=SLOW#TEMPEST%20Cobalt%20Strike%20Loader%20-%20dmpdump&url=https%3A%2F%2Fdmpdump.github.io%2Fposts%2FCobaltStrike_HK%2F" target="_blank" rel="noopener" data-bs-toggle="tooltip" data-bs-placement="top" title="Twitter" aria-label="Twitter"> <i class="fa-fw fa-brands fa-square-x-twitter"></i> </a> <a href="https://www.facebook.com/sharer/sharer.php?title=SLOW#TEMPEST%20Cobalt%20Strike%20Loader%20-%20dmpdump&u=https%3A%2F%2Fdmpdump.github.io%2Fposts%2FCobaltStrike_HK%2F" target="_blank" rel="noopener" data-bs-toggle="tooltip" data-bs-placement="top" title="Facebook" aria-label="Facebook"> <i class="fa-fw fab fa-facebook-square"></i> </a> <a href="https://t.me/share/url?url=https%3A%2F%2Fdmpdump.github.io%2Fposts%2FCobaltStrike_HK%2F&text=SLOW#TEMPEST%20Cobalt%20Strike%20Loader%20-%20dmpdump" target="_blank" rel="noopener" data-bs-toggle="tooltip" data-bs-placement="top" title="Telegram" aria-label="Telegram"> <i class="fa-fw fab fa-telegram"></i> </a> <button id="copy-link" aria-label="Copy link" class="btn small" data-bs-toggle="tooltip" data-bs-placement="top" title="Copy link" data-title-succeed="Link copied successfully!" > <i class="fa-fw fas fa-link pe-none fs-6"></i> </button> </span></div></div></div></article></main><aside aria-label="Panel" id="panel-wrapper" class="col-xl-3 ps-2 mb-5 text-muted"><div class="access"><section id="access-lastmod"><h2 class="panel-heading">Recently Updated</h2><ul class="content list-unstyled ps-0 pb-1 ms-1 mt-2"><li class="text-truncate lh-lg"> <a href="/posts/CobaltStrike_HK/">SLOW#TEMPEST Cobalt Strike Loader</a><li class="text-truncate lh-lg"> <a href="/posts/Belarus-nexus_Threat_Actor_Target_Poland/">Likely Belarus-Nexus Threat Actor Delivers Downloader to Poland</a><li class="text-truncate lh-lg"> <a href="/posts/Havoc-Demon-Targeting-Pakistan-International-Airlines/">Havoc Demon Targeting Pakistan International Airlines</a><li class="text-truncate lh-lg"> <a href="/posts/Modified_Xworm_Distribution/">Modified XWORM Distribution by Chinese-Speaking Threat Actor</a><li class="text-truncate lh-lg"> <a href="/posts/Possible-Ocean-LotusInstaller-Abusing-MST-Transforms/">Possible APT32/Ocean Lotus Installer abusing MST Transforms</a></ul></section><section><h2 class="panel-heading">Trending Tags</h2><div class="d-flex flex-wrap mt-3 mb-1 me-3"> <a class="post-tag btn btn-outline-primary" href="/tags/malware/">malware</a> <a class="post-tag btn btn-outline-primary" href="/tags/cti/">cti</a> <a class="post-tag btn btn-outline-primary" href="/tags/apt/">apt</a> <a class="post-tag btn btn-outline-primary" href="/tags/chrome/">chrome</a> <a class="post-tag btn btn-outline-primary" href="/tags/havoc/">havoc</a> <a class="post-tag btn btn-outline-primary" href="/tags/re/">RE</a> <a class="post-tag btn btn-outline-primary" href="/tags/belarus/">belarus</a> <a class="post-tag btn btn-outline-primary" href="/tags/china/">china</a> <a class="post-tag btn btn-outline-primary" href="/tags/chm/">chm</a> <a class="post-tag btn btn-outline-primary" href="/tags/cn/">cn</a></div></section></div></aside></div><div class="row"><div id="tail-wrapper" class="col-12 col-lg-11 col-xl-9 px-md-4"><aside id="related-posts" aria-labelledby="related-label"><h3 class="mb-4" id="related-label">Further Reading</h3><nav class="row row-cols-1 row-cols-md-2 row-cols-xl-3 g-4 mb-4"><article class="col"> <a href="/posts/Low_Detection_backdoor_NHAS_RSSH/" class="post-preview card h-100"><div class="card-body"> <time data-ts="1746057600" data-df="ll" > May 1, 2025 </time><h4 class="pt-0 my-2">Likely Chinese Threat Actor Uses Low Detection Linux Backdoor and NHAS Reverse SSH</h4><div class="text-muted"><p>On April 22, 2025, MalwareHunterTeam shared a hash for a low detection Linux ELF with 2 hard-coded IP addresses: 43.159.18[.]135 and 119.42.148[.]187. Upon review of the executable (ea41b2bf1064efc...</p></div></div></a></article><article class="col"> <a href="/posts/Python_Backdoor_TW/" class="post-preview card h-100"><div class="card-body"> <time data-ts="1744934400" data-df="ll" > Apr 18, 2025 </time><h4 class="pt-0 my-2">Python Backdoor Uploaded from Taiwan</h4><div class="text-muted"><p>On April 18, 2025, I came across an interesting LNK file uploaded from Taiwan (f4bb263eb03240c1d779a00e1e39d3374c93d909d358691ca5386387d06be472), which I subsequently found had been initially disco...</p></div></div></a></article><article class="col"> <a href="/posts/Unattributed_Downloader_Cambodia/" class="post-preview card h-100"><div class="card-body"> <time data-ts="1742688000" data-df="ll" > Mar 23, 2025 </time><h4 class="pt-0 my-2">Unattributed Shellcode Loader Likely Targeting Cambodia</h4><div class="text-muted"><p>On March 20, 2025, MalwareHunterTeam shared a sample of a ZIP file containing an LNK, uploaded from Cambodia: The ZIP file is named CNP_MFA_Meeting_Documents.zip. It contains an LNK file named M...</p></div></div></a></article></nav></aside><nav class="post-navigation d-flex justify-content-between" aria-label="Post Navigation"> <a href="/posts/Belarus-nexus_Threat_Actor_Target_Poland/" class="btn btn-outline-primary" aria-label="Older" ><p>Likely Belarus-Nexus Threat Actor Delivers Downloader to Poland</p></a><div class="btn btn-outline-primary disabled" aria-label="Newer"><p>-</p></div></nav><footer aria-label="Site Info" class=" d-flex flex-column justify-content-center text-muted flex-lg-row justify-content-lg-between align-items-lg-center pb-lg-3 " ><p>© <time>2025</time> <a href="https://github.com/dmpdump">dmpdump</a>. <span data-bs-toggle="tooltip" data-bs-placement="top" title="Except where otherwise noted, the blog posts on this site are licensed under the Creative Commons Attribution 4.0 International (CC BY 4.0) License by the author." >Some rights reserved.</span></p><p>Using the <a data-bs-toggle="tooltip" data-bs-placement="top" title="v7.1.0" href="https://github.com/cotes2020/jekyll-theme-chirpy" target="_blank" rel="noopener" >Chirpy</a> theme for <a href="https://jekyllrb.com" target="_blank" rel="noopener">Jekyll</a>.</p></footer></div></div><div id="search-result-wrapper" class="d-flex justify-content-center d-none"><div class="col-11 content"><div id="search-hints"><section><h2 class="panel-heading">Trending Tags</h2><div class="d-flex flex-wrap mt-3 mb-1 me-3"> <a class="post-tag btn btn-outline-primary" href="/tags/malware/">malware</a> <a class="post-tag btn btn-outline-primary" href="/tags/cti/">cti</a> <a class="post-tag btn btn-outline-primary" href="/tags/apt/">apt</a> <a class="post-tag btn btn-outline-primary" href="/tags/chrome/">chrome</a> <a class="post-tag btn btn-outline-primary" href="/tags/havoc/">havoc</a> <a class="post-tag btn btn-outline-primary" href="/tags/re/">RE</a> <a class="post-tag btn btn-outline-primary" href="/tags/belarus/">belarus</a> <a class="post-tag btn btn-outline-primary" href="/tags/china/">china</a> <a class="post-tag btn btn-outline-primary" href="/tags/chm/">chm</a> <a class="post-tag btn btn-outline-primary" href="/tags/cn/">cn</a></div></section></div><div id="search-results" class="d-flex flex-wrap justify-content-center text-muted mt-3"></div></div></div></div><aside aria-label="Scroll to Top"> <button id="back-to-top" type="button" class="btn btn-lg btn-box-shadow"> <i class="fas fa-angle-up"></i> </button></aside></div><div id="mask"></div><aside id="notification" class="toast" role="alert" aria-live="assertive" aria-atomic="true" data-bs-animation="true" data-bs-autohide="false" ><div class="toast-header"> <button type="button" class="btn-close ms-auto" data-bs-dismiss="toast" aria-label="Close" ></button></div><div class="toast-body text-center pt-0"><p class="px-2 mb-3">A new version of content is available.</p><button type="button" class="btn btn-primary" aria-label="Update"> Update </button></div></aside><script src="https://cdn.jsdelivr.net/combine/npm/simple-jekyll-search@1.10.0/dest/simple-jekyll-search.min.js,npm/loading-attribute-polyfill@2.1.1/dist/loading-attribute-polyfill.umd.min.js,npm/glightbox@3.3.0/dist/js/glightbox.min.js,npm/clipboard@2.0.11/dist/clipboard.min.js,npm/dayjs@1.11.13/dayjs.min.js,npm/dayjs@1.11.13/locale/en.js,npm/dayjs@1.11.13/plugin/relativeTime.js,npm/dayjs@1.11.13/plugin/localizedFormat.js"></script> <script src="/assets/js/dist/post.min.js"></script> <script defer src="/app.min.js"></script> <script>SimpleJekyllSearch({ searchInput: document.getElementById('search-input'), resultsContainer: document.getElementById('search-results'), json: '/assets/js/data/search.json', searchResultTemplate: '<article class="px-1 px-sm-2 px-lg-4 px-xl-0"><header><h2><a href="{url}">{title}</a></h2><div class="post-meta d-flex flex-column flex-sm-row text-muted mt-1 mb-1"> {categories} {tags}</div></header><p>{snippet}</p></article>', noResultsText: '<p class="mt-5">Oops! No results found.</p>', templateMiddleware: function(prop, value, template) { if (prop === 'categories') { if (value === '') { return `${value}`; } else { return `<div class="me-sm-4"><i class="far fa-folder fa-fw"></i>${value}</div>`; } } if (prop === 'tags') { if (value === '') { return `${value}`; } else { return `<div><i class="fa fa-tag fa-fw"></i>${value}</div>`; } } } }); </script>
