<!DOCTYPE html><html lang="en"><head><meta charSet="utf-8"/><meta name="viewport" content="width=device-width"/><title>DarkTortilla Malware Analysis | Secureworks</title><link rel="canonical" href="https://www.secureworks.com/research/darktortilla-malware-analysis"/><meta property="og:title" content="DarkTortilla Malware Analysis"/><meta property="og:description" content="Learn how Secureworks CTU researchers have identified DarkTortilla samples delivering targeted malicious payloads, benign decoy documents, and executables."/><meta property="og:image" content="http://www.secureworks.com/-/media/images/insights/resources/threat-analysis/2022/darktortilla/darktortilla-malware-ta_800x800.png?h=800&amp;iar=0&amp;w=800&amp;hash=F572C79EF036740F86184BECC4377968"/><meta property="og:site_name" content="Secureworks"/><meta name=""/><meta name="next-head-count" content="9"/><link rel="dns-prefetch" href="//ajax.googleapis.com"/><link rel="dns-prefetch" href="//apis.google.com"/><link rel="dns-prefetch" href="//www.google-analytics.com"/><link rel="dns-prefetch" href="//player.vimeo.com"/><link rel="dns-prefetch" href="//munchkin.marketo.net"/><link rel="manifest" href="https://www.secureworks.com/favicon/site.webmanifest"/><link rel="apple-touch-icon" href="https://www.secureworks.com/favicon/apple-touch-icon.png"/><link rel="icon" sizes="32x32" href="https://www.secureworks.com/assets/favicons/favicon-32x32.png"/><link rel="icon" sizes="16x16" href="https://www.secureworks.com/assets/favicons/favicon-16x16.png"/><link rel="mask-icon" href="https://www.secureworks.com/favicon/safari-pinned-tab.svg" color="#5bbad5"/><meta name="msapplication-config" content="https://www.secureworks.com/favicon/browserconfig.xml"/><meta name="msapplication-TileColor" content="#da532c"/><meta name="msapplication-square70x70logo" content="https://www.secureworks.com/favicon/mstile-70x70.png"/><meta name="msapplication-TileImage" content="https://www.secureworks.com/favicon/mstile-144x144.png"/><meta name="msapplication-square150x150logo" content="https://www.secureworks.com/favicon/mstile-150x150.png"/><meta name="msapplication-wide310x150logo" content="https://www.secureworks.com/favicon/mstile-310x150.png"/><meta name="msapplication-square310x310logo" content="https://www.secureworks.com/favicon/mstile-310x310.png"/><link rel="shortcut icon" href="https://www.secureworks.com/assets/favicons/favicon.ico"/><link rel="preconnect" href="https://fonts.googleapis.com" nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj"/><link rel="preconnect" href="https://fonts.gstatic.com/" nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj"/><script nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj" id="gtmScript">(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src='https://www.googletagmanager.com/gtm.js?id='+i+dl;
                j.setAttribute('nonce','MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj');
                f.parentNode.insertBefore(j,f);})(window,document,'script','dataLayer','GTM-P6Z7M2');</script><script type="text/javascript" src="/assets/js/initMunchkin.js" defer="" nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj"></script><script type="text/javascript" src="https://pages.secureworks.com/js/forms2/js/forms2.min.js" defer="" nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj"></script><script type="text/javascript" src="/assets/js/reCaptchaClientSidev1-1-3.js" defer="" nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj"></script><script type="text/javascript" src="/assets/js/marketo-form-custom.js" defer="" nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj"></script><link rel="preconnect" href="https://fonts.gstatic.com" crossorigin /><noscript data-n-css="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj"></noscript><script defer="" nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj" nomodule="" src="https://www.secureworks.com/_next/static/chunks/polyfills-78c92fac7aa8fdd8.js"></script><script defer="" src="https://www.secureworks.com/_next/static/chunks/62.ad53f5869b86e9fd.js" nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj"></script><script src="https://www.secureworks.com/_next/static/chunks/webpack-ba1d9e27f275254b.js" nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj" defer=""></script><script src="https://www.secureworks.com/_next/static/chunks/framework-0365125e11538b64.js" nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj" defer=""></script><script src="https://www.secureworks.com/_next/static/chunks/main-2679873e9bfb727f.js" nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj" defer=""></script><script src="https://www.secureworks.com/_next/static/chunks/pages/_app-ed26eb29ee01a272.js" nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj" defer=""></script><script src="https://www.secureworks.com/_next/static/chunks/25c596ac-7a3f6f09e75c202c.js" nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj" defer=""></script><script src="https://www.secureworks.com/_next/static/chunks/79320533-64dacc0a4e666d63.js" nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj" defer=""></script><script src="https://www.secureworks.com/_next/static/chunks/358-a4832afffcf956db.js" nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj" defer=""></script><script src="https://www.secureworks.com/_next/static/chunks/136-9ae2ff329a3111a2.js" nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj" defer=""></script><script src="https://www.secureworks.com/_next/static/chunks/121-5c9b198d678a7a9d.js" nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj" defer=""></script><script src="https://www.secureworks.com/_next/static/chunks/pages/%5B%5B...path%5D%5D-c40fe26d0d991110.js" nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj" defer=""></script><script src="https://www.secureworks.com/_next/static/cToPZMMvGQcJIfVX2YHg0/_buildManifest.js" nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj" defer=""></script><script src="https://www.secureworks.com/_next/static/cToPZMMvGQcJIfVX2YHg0/_ssgManifest.js" nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj" defer=""></script><style data-href="https://fonts.googleapis.com/css2?family=Figtree:ital,wght@0,400;0,600;1,300&family=Saira+Condensed:wght@300;400;600&display=swap" nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj">@font-face{font-family:'Figtree';font-style:italic;font-weight:300;font-display:swap;src:url(https://fonts.gstatic.com/s/figtree/v6/_Xm9-HUzqDCFdgfMm4GnA4aZFrUvtOK3A-gdyEY.woff) format('woff')}@font-face{font-family:'Figtree';font-style:normal;font-weight:400;font-display:swap;src:url(https://fonts.gstatic.com/s/figtree/v6/_Xmz-HUzqDCFdgfMsYiV_F7wfS-Bs_d_QF5d.woff) format('woff')}@font-face{font-family:'Figtree';font-style:normal;font-weight:600;font-display:swap;src:url(https://fonts.gstatic.com/s/figtree/v6/_Xmz-HUzqDCFdgfMsYiV_F7wfS-Bs_ehR15d.woff) format('woff')}@font-face{font-family:'Saira Condensed';font-style:normal;font-weight:300;font-display:swap;src:url(https://fonts.gstatic.com/s/sairacondensed/v11/EJRLQgErUN8XuHNEtX81i9TmEkrnCclg8w.woff) format('woff')}@font-face{font-family:'Saira Condensed';font-style:normal;font-weight:400;font-display:swap;src:url(https://fonts.gstatic.com/s/sairacondensed/v11/EJROQgErUN8XuHNEtX81i9TmEkrfpg.woff) format('woff')}@font-face{font-family:'Saira Condensed';font-style:normal;font-weight:600;font-display:swap;src:url(https://fonts.gstatic.com/s/sairacondensed/v11/EJRLQgErUN8XuHNEtX81i9TmEkrnfc9g8w.woff) format('woff')}@font-face{font-family:'Figtree';font-style:italic;font-weight:300;font-display:swap;src:url(https://fonts.gstatic.com/s/figtree/v6/_Xm9-HUzqDCFdgfMm4GnA4aZFrUvtOK3A-gd-Ew84kb3fO7mSkIr.woff) format('woff');unicode-range:U+0100-02BA,U+02BD-02C5,U+02C7-02CC,U+02CE-02D7,U+02DD-02FF,U+0304,U+0308,U+0329,U+1D00-1DBF,U+1E00-1E9F,U+1EF2-1EFF,U+2020,U+20A0-20AB,U+20AD-20C0,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'Figtree';font-style:italic;font-weight:300;font-display:swap;src:url(https://fonts.gstatic.com/s/figtree/v6/_Xm9-HUzqDCFdgfMm4GnA4aZFrUvtOK3A-gd-EI84kb3fO7mSg.woff) format('woff');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+0304,U+0308,U+0329,U+2000-206F,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'Figtree';font-style:normal;font-weight:400;font-display:swap;src:url(https://fonts.gstatic.com/s/figtree/v6/_Xms-HUzqDCFdgfMm4q9DaRvziissg.woff2) format('woff2');unicode-range:U+0100-02BA,U+02BD-02C5,U+02C7-02CC,U+02CE-02D7,U+02DD-02FF,U+0304,U+0308,U+0329,U+1D00-1DBF,U+1E00-1E9F,U+1EF2-1EFF,U+2020,U+20A0-20AB,U+20AD-20C0,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'Figtree';font-style:normal;font-weight:400;font-display:swap;src:url(https://fonts.gstatic.com/s/figtree/v6/_Xms-HUzqDCFdgfMm4S9DaRvzig.woff2) format('woff2');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+0304,U+0308,U+0329,U+2000-206F,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'Figtree';font-style:normal;font-weight:600;font-display:swap;src:url(https://fonts.gstatic.com/s/figtree/v6/_Xms-HUzqDCFdgfMm4q9DaRvziissg.woff2) format('woff2');unicode-range:U+0100-02BA,U+02BD-02C5,U+02C7-02CC,U+02CE-02D7,U+02DD-02FF,U+0304,U+0308,U+0329,U+1D00-1DBF,U+1E00-1E9F,U+1EF2-1EFF,U+2020,U+20A0-20AB,U+20AD-20C0,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'Figtree';font-style:normal;font-weight:600;font-display:swap;src:url(https://fonts.gstatic.com/s/figtree/v6/_Xms-HUzqDCFdgfMm4S9DaRvzig.woff2) format('woff2');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+0304,U+0308,U+0329,U+2000-206F,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'Saira Condensed';font-style:normal;font-weight:300;font-display:swap;src:url(https://fonts.gstatic.com/s/sairacondensed/v11/EJRLQgErUN8XuHNEtX81i9TmEkrnCclQ-K2fhC61HpnY.woff2) format('woff2');unicode-range:U+0102-0103,U+0110-0111,U+0128-0129,U+0168-0169,U+01A0-01A1,U+01AF-01B0,U+0300-0301,U+0303-0304,U+0308-0309,U+0323,U+0329,U+1EA0-1EF9,U+20AB}@font-face{font-family:'Saira Condensed';font-style:normal;font-weight:300;font-display:swap;src:url(https://fonts.gstatic.com/s/sairacondensed/v11/EJRLQgErUN8XuHNEtX81i9TmEkrnCclQ-a2fhC61HpnY.woff2) format('woff2');unicode-range:U+0100-02BA,U+02BD-02C5,U+02C7-02CC,U+02CE-02D7,U+02DD-02FF,U+0304,U+0308,U+0329,U+1D00-1DBF,U+1E00-1E9F,U+1EF2-1EFF,U+2020,U+20A0-20AB,U+20AD-20C0,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'Saira Condensed';font-style:normal;font-weight:300;font-display:swap;src:url(https://fonts.gstatic.com/s/sairacondensed/v11/EJRLQgErUN8XuHNEtX81i9TmEkrnCclQ962fhC61Hg.woff2) format('woff2');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+0304,U+0308,U+0329,U+2000-206F,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'Saira Condensed';font-style:normal;font-weight:400;font-display:swap;src:url(https://fonts.gstatic.com/s/sairacondensed/v11/EJROQgErUN8XuHNEtX81i9TmEkrvretF2o-SrhS8.woff2) format('woff2');unicode-range:U+0102-0103,U+0110-0111,U+0128-0129,U+0168-0169,U+01A0-01A1,U+01AF-01B0,U+0300-0301,U+0303-0304,U+0308-0309,U+0323,U+0329,U+1EA0-1EF9,U+20AB}@font-face{font-family:'Saira Condensed';font-style:normal;font-weight:400;font-display:swap;src:url(https://fonts.gstatic.com/s/sairacondensed/v11/EJROQgErUN8XuHNEtX81i9TmEkrvrOtF2o-SrhS8.woff2) format('woff2');unicode-range:U+0100-02BA,U+02BD-02C5,U+02C7-02CC,U+02CE-02D7,U+02DD-02FF,U+0304,U+0308,U+0329,U+1D00-1DBF,U+1E00-1E9F,U+1EF2-1EFF,U+2020,U+20A0-20AB,U+20AD-20C0,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'Saira Condensed';font-style:normal;font-weight:400;font-display:swap;src:url(https://fonts.gstatic.com/s/sairacondensed/v11/EJROQgErUN8XuHNEtX81i9TmEkrvoutF2o-Srg.woff2) format('woff2');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+0304,U+0308,U+0329,U+2000-206F,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'Saira Condensed';font-style:normal;font-weight:600;font-display:swap;src:url(https://fonts.gstatic.com/s/sairacondensed/v11/EJRLQgErUN8XuHNEtX81i9TmEkrnfc9Q-K2fhC61HpnY.woff2) format('woff2');unicode-range:U+0102-0103,U+0110-0111,U+0128-0129,U+0168-0169,U+01A0-01A1,U+01AF-01B0,U+0300-0301,U+0303-0304,U+0308-0309,U+0323,U+0329,U+1EA0-1EF9,U+20AB}@font-face{font-family:'Saira Condensed';font-style:normal;font-weight:600;font-display:swap;src:url(https://fonts.gstatic.com/s/sairacondensed/v11/EJRLQgErUN8XuHNEtX81i9TmEkrnfc9Q-a2fhC61HpnY.woff2) format('woff2');unicode-range:U+0100-02BA,U+02BD-02C5,U+02C7-02CC,U+02CE-02D7,U+02DD-02FF,U+0304,U+0308,U+0329,U+1D00-1DBF,U+1E00-1E9F,U+1EF2-1EFF,U+2020,U+20A0-20AB,U+20AD-20C0,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'Saira Condensed';font-style:normal;font-weight:600;font-display:swap;src:url(https://fonts.gstatic.com/s/sairacondensed/v11/EJRLQgErUN8XuHNEtX81i9TmEkrnfc9Q962fhC61Hg.woff2) format('woff2');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+0304,U+0308,U+0329,U+2000-206F,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}</style></head><body><div id="__next"><style data-emotion="css 1hz3a8q">@font-face{font-family:'Zen Kaku Gothic Antique';src:url('./assets/fonts/Zen_Kaku_Gothic_Antique/ZenKakuGothicAntique-Light.ttf ');font-style:normal;font-weight:300;}@font-face{font-family:'Zen Kaku Gothic Antique';src:url('./assets/fonts/Zen_Kaku_Gothic_Antique/ZenKakuGothicAntique-Regular.ttf ');font-style:normal;font-weight:400;}@font-face{font-family:'Zen Kaku Gothic Antique';src:url('./assets/fonts/Zen_Kaku_Gothic_Antique/ZenKakuGothicAntique-Medium.ttf ');font-style:normal;font-weight:500;}@font-face{font-family:'Zen Kaku Gothic Antique';src:url('./assets/fonts/Zen_Kaku_Gothic_Antique/ZenKakuGothicAntique-Bold.ttf ');font-style:normal;font-weight:700;}@font-face{font-family:'Zen Kaku Gothic Antique';src:url('./assets/fonts/Zen_Kaku_Gothic_Antique/ZenKakuGothicAntique-Black.ttf ');font-style:normal;font-weight:900;}.css-1hz3a8q .slick-slider{position:relative;display:block;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-touch-callout:none;-khtml-user-select:none;-ms-touch-action:pan-y;touch-action:pan-y;-webkit-tap-highlight-color:transparent;}.css-1hz3a8q .slick-list{position:relative;display:block;overflow:hidden;margin:0;padding:0;}.css-1hz3a8q .slick-list:focus{outline:none;}.css-1hz3a8q .slick-list.dragging{cursor:pointer;cursor:hand;}.css-1hz3a8q .slick-slider .slick-track,.css-1hz3a8q .slick-slider .slick-list{-webkit-transform:translate3d(0, 0, 0);-moz-transform:translate3d(0, 0, 0);-ms-transform:translate3d(0, 0, 0);-o-transform:translate3d(0, 0, 0);-webkit-transform:translate3d(0, 0, 0);-moz-transform:translate3d(0, 0, 0);-ms-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);}.css-1hz3a8q .slick-track{position:relative;top:0;left:0;display:block;}.css-1hz3a8q .slick-track:before,.css-1hz3a8q .slick-track:after{display:table;content:'';}.css-1hz3a8q .slick-track:after{clear:both;}.css-1hz3a8q .slick-loading .slick-track{visibility:hidden;}.css-1hz3a8q .slick-slide{display:none;float:left;height:100%;min-height:1px;}.css-1hz3a8q [dir='rtl'] .slick-slide{float:right;}.css-1hz3a8q .slick-slide img{display:block;}.css-1hz3a8q .slick-slide.slick-loading img{display:none;}.css-1hz3a8q .slick-slide.dragging img{pointer-events:none;}.css-1hz3a8q .slick-initialized .slick-slide{display:block;}.css-1hz3a8q .slick-loading .slick-slide{visibility:hidden;}.css-1hz3a8q .slick-vertical .slick-slide{display:block;height:auto;border:1px solid transparent;}.css-1hz3a8q .slick-arrow.slick-hidden{display:none;}.css-1hz3a8q .slick-loading .slick-list{background:#fff url('./ajax-loader.gif') center center no-repeat;}@font-face{font-family:'slick';font-weight:normal;font-style:normal;src:url('./fonts/slick.eot');src:url('./fonts/slick.eot?#iefix') format('embedded-opentype'),url('./fonts/slick.woff') format('woff'),url('./fonts/slick.ttf') format('truetype'),url('./fonts/slick.svg#slick') format('svg');}.css-1hz3a8q .slick-prev,.css-1hz3a8q .slick-next{font-size:0;line-height:0;position:absolute;top:50%;display:block;width:20px;height:20px;padding:0;-webkit-transform:translate(0, -50%);-ms-transform:translate(0, -50%);-webkit-transform:translate(0, -50%);-moz-transform:translate(0, -50%);-ms-transform:translate(0, -50%);transform:translate(0, -50%);cursor:pointer;color:transparent;border:none;outline:none;background:transparent;}.css-1hz3a8q .slick-prev:hover,.css-1hz3a8q .slick-prev:focus,.css-1hz3a8q .slick-next:hover,.css-1hz3a8q .slick-next:focus{color:transparent;outline:none;background:transparent;}.css-1hz3a8q .slick-prev:hover:before,.css-1hz3a8q .slick-prev:focus:before,.css-1hz3a8q .slick-next:hover:before,.css-1hz3a8q .slick-next:focus:before{opacity:1;}.css-1hz3a8q .slick-prev.slick-disabled:before,.css-1hz3a8q .slick-next.slick-disabled:before{opacity:0.25;}.css-1hz3a8q .slick-prev:before,.css-1hz3a8q .slick-next:before{font-family:'slick';font-size:20px;line-height:1;opacity:0.75;color:white;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;}.css-1hz3a8q .slick-prev{left:-25px;}.css-1hz3a8q [dir='rtl'] .slick-prev{right:-25px;left:auto;}.css-1hz3a8q .slick-prev:before{content:'←';}.css-1hz3a8q [dir='rtl'] .slick-prev:before{content:'→';}.css-1hz3a8q .slick-next{right:-25px;}.css-1hz3a8q [dir='rtl'] .slick-next{right:auto;left:-25px;}.css-1hz3a8q .slick-next:before{content:'→';}.css-1hz3a8q [dir='rtl'] .slick-next:before{content:'←';}.css-1hz3a8q .slick-dotted.slick-slider{margin-bottom:30px;}.css-1hz3a8q .slick-dots{position:absolute;bottom:-25px;display:block;width:100%;padding:0;margin:0;list-style:none;text-align:center;}.css-1hz3a8q .slick-dots li{position:relative;display:inline-block;width:20px;height:20px;margin:0 5px;padding:0;cursor:pointer;}.css-1hz3a8q .slick-dots li button{font-size:0;line-height:0;display:block;width:20px;height:20px;padding:5px;cursor:pointer;color:transparent;border:0;outline:none;background:transparent;}.css-1hz3a8q .slick-dots li button:hover,.css-1hz3a8q .slick-dots li button:focus{outline:none;}.css-1hz3a8q .slick-dots li button:hover:before,.css-1hz3a8q .slick-dots li button:focus:before{opacity:1;}.css-1hz3a8q .slick-dots li button:before{font-family:'slick';font-size:6px;line-height:20px;position:absolute;top:0;left:0;width:20px;height:20px;content:'•';text-align:center;opacity:0.25;color:black;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;}.css-1hz3a8q .slick-dots li.slick-active button:before{opacity:0.75;color:black;}.css-1hz3a8q .carousel .control-arrow,.css-1hz3a8q .carousel.carousel-slider .control-arrow{-webkit-transition:all 0.25s ease-in;-moz-transition:all 0.25s ease-in;-ms-transition:all 0.25s ease-in;-o-transition:all 0.25s ease-in;-webkit-transition:all 0.25s ease-in;transition:all 0.25s ease-in;opacity:0.4;-webkit-filter:alpha(opacity=40);filter:alpha(opacity=40);position:absolute;z-index:2;top:20px;background:none;border:0;font-size:32px;cursor:pointer;}.css-1hz3a8q .carousel .control-arrow:focus,.css-1hz3a8q .carousel .control-arrow:hover{opacity:1;-webkit-filter:alpha(opacity=100);filter:alpha(opacity=100);}.css-1hz3a8q .carousel .control-arrow:before,.css-1hz3a8q .carousel.carousel-slider .control-arrow:before{margin:0 5px;display:inline-block;border-top:8px solid transparent;border-bottom:8px solid transparent;content:'';}.css-1hz3a8q .carousel .control-disabled.control-arrow{opacity:0;-webkit-filter:alpha(opacity=0);filter:alpha(opacity=0);cursor:inherit;display:none;}.css-1hz3a8q .carousel .control-prev.control-arrow{left:0;}.css-1hz3a8q .carousel .control-prev.control-arrow:before{border-right:8px solid #fff;}.css-1hz3a8q .carousel .control-next.control-arrow{right:0;}.css-1hz3a8q .carousel .control-next.control-arrow:before{border-left:8px solid #fff;}.css-1hz3a8q .carousel-root{outline:none;}.css-1hz3a8q .carousel{position:relative;width:100%;}.css-1hz3a8q .carousel *{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;}.css-1hz3a8q .carousel img{width:100%;display:inline-block;pointer-events:none;}.css-1hz3a8q .carousel .carousel{position:relative;}.css-1hz3a8q .carousel .control-arrow{outline:0;border:0;background:none;top:50%;margin-top:-13px;font-size:18px;}.css-1hz3a8q .carousel .thumbs-wrapper{margin:20px;overflow:hidden;}.css-1hz3a8q .carousel .thumbs{-webkit-transition:all 0.15s ease-in;-moz-transition:all 0.15s ease-in;-ms-transition:all 0.15s ease-in;-o-transition:all 0.15s ease-in;-webkit-transition:all 0.15s ease-in;transition:all 0.15s ease-in;-webkit-transform:translate3d(0, 0, 0);-moz-transform:translate3d(0, 0, 0);-ms-transform:translate3d(0, 0, 0);-o-transform:translate3d(0, 0, 0);-webkit-transform:translate3d(0, 0, 0);-moz-transform:translate3d(0, 0, 0);-ms-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);position:relative;list-style:none;white-space:nowrap;}.css-1hz3a8q .carousel .thumb{-webkit-transition:border 0.15s ease-in;-moz-transition:border 0.15s ease-in;-ms-transition:border 0.15s ease-in;-o-transition:border 0.15s ease-in;-webkit-transition:border 0.15s ease-in;transition:border 0.15s ease-in;display:inline-block;margin-right:6px;white-space:nowrap;overflow:hidden;border:3px solid #fff;padding:2px;}.css-1hz3a8q .carousel .thumb:focus{border:3px solid #ccc;outline:none;}.css-1hz3a8q .carousel .thumb.selected,.css-1hz3a8q .carousel .thumb:hover{border:3px solid #333;}.css-1hz3a8q .carousel .thumb img{vertical-align:top;}.css-1hz3a8q .carousel.carousel-slider{position:relative;margin:0;overflow:hidden;}.css-1hz3a8q .carousel.carousel-slider .control-arrow{top:0;color:#fff;font-size:26px;bottom:0;margin-top:0;padding:5px;}.css-1hz3a8q .carousel.carousel-slider .control-arrow:hover{background:rgba(0, 0, 0, 0.2);}.css-1hz3a8q .carousel .slider-wrapper{overflow:hidden;margin:auto;width:100%;-webkit-transition:height 0.15s ease-in;-moz-transition:height 0.15s ease-in;-ms-transition:height 0.15s ease-in;-o-transition:height 0.15s ease-in;-webkit-transition:height 0.15s ease-in;transition:height 0.15s ease-in;}.css-1hz3a8q .carousel .slider-wrapper.axis-horizontal .slider{-ms-box-orient:horizontal;display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-box;display:-webkit--moz-flex;display:-ms--moz-flexbox;display:-moz-flex;display:-webkit-box;display:-webkit--webkit-flex;display:-ms--webkit-flexbox;display:-webkit-flex;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}.css-1hz3a8q .carousel .slider-wrapper.axis-horizontal .slider .slide{-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-flex-flow:column;-webkit-flex-flow:column;-ms-flex-flow:column;flex-flow:column;}.css-1hz3a8q .carousel .slider-wrapper.axis-vertical{-ms-box-orient:horizontal;display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-box;display:-webkit--moz-flex;display:-ms--moz-flexbox;display:-moz-flex;display:-webkit-box;display:-webkit--webkit-flex;display:-ms--webkit-flexbox;display:-webkit-flex;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}.css-1hz3a8q .carousel .slider-wrapper.axis-vertical .slider{-webkit-flex-direction:column;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.css-1hz3a8q .carousel .slider{margin:0;padding:0;position:relative;list-style:none;width:100%;}.css-1hz3a8q .carousel .slide{min-width:100%;margin:0;position:relative;text-align:center;}.css-1hz3a8q .carousel .slide img{width:100%;vertical-align:top;border:0;}.css-1hz3a8q .carousel .slide iframe{display:inline-block;width:calc(100% - 80px);margin:0 40px 40px;border:0;}.css-1hz3a8q .carousel .slide .legend{-webkit-transition:all 0.5s ease-in-out;transition:all 0.5s ease-in-out;position:absolute;bottom:40px;left:50%;margin-left:-45%;width:90%;border-radius:10px;background:#000;color:#fff;padding:10px;font-size:12px;text-align:center;opacity:0.25;-webkit-transition:opacity 0.35s ease-in-out;transition:opacity 0.35s ease-in-out;}.css-1hz3a8q .carousel .control-dots{position:absolute;bottom:0;margin:10px 0;padding:0;text-align:center;width:100%;z-index:1;}@media (min-width: 960px){.css-1hz3a8q .carousel .control-dots{bottom:0;}}.css-1hz3a8q .carousel .control-dots .dot{-webkit-transition:opacity 0.25s ease-in;transition:opacity 0.25s ease-in;opacity:0.3;-webkit-filter:alpha(opacity=30);filter:alpha(opacity=30);box-shadow:1px 1px 2px rgba(0, 0, 0, 0.9);background:#fff;border-radius:50%;width:8px;height:8px;cursor:pointer;display:inline-block;margin:0 8px;}.css-1hz3a8q .carousel .control-dots .dot.selected,.css-1hz3a8q .carousel .control-dots .dot:hover{opacity:1;-webkit-filter:alpha(opacity=100);filter:alpha(opacity=100);}.css-1hz3a8q .carousel .carousel-status{position:absolute;top:0;right:0;padding:5px;font-size:10px;text-shadow:1px 1px 1px rgba(0, 0, 0, 0.9);color:#fff;}.css-1hz3a8q .carousel:hover .slide .legend{opacity:1;}.css-1hz3a8q .sc-jss-empty-placeholder{border:5px dashed var(--eyebrow-color, #D9AB14);min-height:100px;min-width:100px;}.css-1hz3a8q .sc-jss-empty-placeholder >.scEnabledChrome{display:none;}.css-1hz3a8q .sc-jss-empty-placeholder >.scEnabledChrome:nth-of-type(1){display:block;}.css-1hz3a8q .sc-jss-empty-placeholder style.scEnabledChrome{display:none!important;}.css-1hz3a8q #footer-content .sw-link-group a svg{min-width:24px;max-height:24px;}.css-1hz3a8q .cmp-search>.sw-pagination>.MuiTablePagination-root{width:10%;}.css-1hz3a8q .secureworks-article{-webkit-column-gap:80px;column-gap:80px;}.css-1hz3a8q .secureworks-article h4{font-family:'Saira Condensed';font-weight:600;font-size:32px;line-height:32px;text-transform:uppercase;color:#181818!important;}.css-1hz3a8q .secureworks-article h5{font-family:'Figtree';font-weight:400;font-size:22px;line-height:28px;color:#181818!important;}.css-1hz3a8q .secureworks-article p{font-family:'Figtree';font-weight:400;font-size:16px;line-height:24px;letter-spacing:0.005em;color:#464646!important;}.css-1hz3a8q .secureworks-article a{color:rgba(71, 62, 255, 1);}.css-1hz3a8q .secureworks-article q,.css-1hz3a8q .secureworks-article blockquote{font-family:'Figtree';font-style:italic;font-weight:300;font-size:21px;line-height:31px;letter-spacing:0.0012em;color:#464646!important;border-left:7px solid #D9AB14;padding-left:calc(32px - 7px);margin-left:0;margin-right:0;}.css-1hz3a8q .secureworks-article ol,.css-1hz3a8q .secureworks-article ul{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;padding:0;gap:16px;}.css-1hz3a8q .secureworks-article ol li,.css-1hz3a8q .secureworks-article ul li{font-family:'Figtree';font-weight:400;font-size:16px;line-height:24px;letter-spacing:0.005em;color:#464646;}.css-1hz3a8q .secureworks-article ol li::marker,.css-1hz3a8q .secureworks-article ul li::marker{color:#D9AB14;}.css-1hz3a8q .secureworks-article ul{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;gap:24px;}.css-1hz3a8q .secureworks-article table,.css-1hz3a8q .headline table{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;height:auto!important;width:100%!important;border-spacing:0;border-collapse:collapse;}@media (min-width:1024px){.css-1hz3a8q .secureworks-article table,.css-1hz3a8q .headline table{display:table;height:inherit;width:inherit;}}.css-1hz3a8q .secureworks-article table thead,.css-1hz3a8q .headline table thead{background:#111013;}.css-1hz3a8q .secureworks-article table thead th,.css-1hz3a8q .headline table thead th{text-align:center;padding:16px 16px;color:#ffffff;}.css-1hz3a8q .secureworks-article table thead th:first-of-type,.css-1hz3a8q .headline table thead th:first-of-type{text-align:left;}.css-1hz3a8q .secureworks-article table tbody tr:nth-of-type(even) td,.css-1hz3a8q .headline table tbody tr:nth-of-type(even) td{background:#EFEFEF;}.css-1hz3a8q .secureworks-article table tbody tr td:first-of-type,.css-1hz3a8q .headline table tbody tr td:first-of-type{text-align:left;}.css-1hz3a8q .secureworks-article table td,.css-1hz3a8q .headline table td{padding:16px;font-family:'Figtree';font-weight:400;text-align:center;font-size:16px;line-height:24px;letter-spacing:0.005em;color:#464646;}.css-1hz3a8q .secureworks-article table .Article_mobile-table div,.css-1hz3a8q .headline table .Article_mobile-table div{font-family:'Figtree';font-weight:400;font-size:16px;line-height:24px;letter-spacing:0.005em;color:#464646;padding:12px 0;}.css-1hz3a8q .secureworks-article table .Article_mobile-table div:nth-of-type(even),.css-1hz3a8q .headline table .Article_mobile-table div:nth-of-type(even){background:#EFEFEF;}.css-1hz3a8q .secureworks-article table .Article_mobile-table div:first-of-type,.css-1hz3a8q .headline table .Article_mobile-table div:first-of-type{background:#111013;color:#ffffff;padding:16px 0;}.css-1hz3a8q .transcript{position:relative;margin-top:64px;margin-bottom:32px;}.css-1hz3a8q .transcript:before{content:'';width:100%;height:1px;background:rgba(0, 0, 0, 0.2);position:absolute;top:-32px;}@media (min-width:1024px){.css-1hz3a8q .transcript:before{top:-44px;}}@media (min-width:1024px){.css-1hz3a8q .transcript{margin-top:116px;margin-bottom:56px;}}.css-1hz3a8q .transcript:has(> label > input:checked) ul>li{display:block;}.css-1hz3a8q .transcript .transcript-title{font-family:'Saira Condensed';font-size:32px;font-weight:600;line-height:32px;letter-spacing:0em;text-align:left;color:#111013;text-transform:uppercase;}.css-1hz3a8q .transcript .transcript-items{list-style:none;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;gap:16px;margin:24px 0 0 0;padding:0;}.css-1hz3a8q .transcript .transcript-items li{display:none;}.css-1hz3a8q .transcript .transcript-items li span{color:#181818;font-family:'Figtree';font-size:18px;font-style:normal;font-weight:700;line-height:26px;letter-spacing:0.022px;}.css-1hz3a8q .transcript .transcript-items li p{color:#111013;font-family:'Figtree';font-size:18px;font-style:normal;font-weight:400;line-height:26px;letter-spacing:0.022px;margin:8px 0 0 0;}.css-1hz3a8q .transcript .transcript-items li:nth-of-type(-n + 2){display:block;}.css-1hz3a8q .transcript label{display:inline-block;position:relative;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:#111013;font-family:'Saira Condensed';font-size:19px;font-style:normal;font-weight:600;line-height:100%;text-transform:uppercase;margin-top:24px;padding-right:16px;}@media (min-width:1024px){.css-1hz3a8q .transcript label{margin-top:40px;}}.css-1hz3a8q .transcript label:after{content:'';width:13px;height:13px;position:absolute;right:0;top:50%;-webkit-transform:translateY(-50%);-moz-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);background-image:url('/assets/background-image/arrow-down.svg');background-repeat:no-repeat;-webkit-background-size:13px auto;background-size:13px auto;-webkit-background-position:right center;background-position:right center;-webkit-transition:all 0.3s;transition:all 0.3s;}.css-1hz3a8q .transcript label:has(> input:checked):after{-webkit-transform:rotateX(180deg);-moz-transform:rotateX(180deg);-ms-transform:rotateX(180deg);transform:rotateX(180deg);top:15%;}.css-1hz3a8q .transcript label input{position:absolute;opacity:0;cursor:pointer;height:0;width:0;}.css-1hz3a8q .media-intro{margin:56px 0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;gap:32px;}@media (min-width:1024px){.css-1hz3a8q .media-intro{gap:48px;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;margin:72px 0;}}.css-1hz3a8q .media-intro .media-intro__description{font-family:'Figtree';font-size:18px;font-weight:400;line-height:26px;letter-spacing:0.0012em;}@media (min-width:1024px){.css-1hz3a8q .media-intro .media-intro__description{-webkit-flex-basis:70%;-ms-flex-preferred-size:70%;flex-basis:70%;}}.css-1hz3a8q .media-intro .media-intro__description p:first-of-type{margin-top:0;}@media (min-width:1024px){.css-1hz3a8q .media-intro .media-intro__list{-webkit-flex-basis:30%;-ms-flex-preferred-size:30%;flex-basis:30%;}}.css-1hz3a8q .media-intro .media-intro__list span{font-family:'Figtree';font-size:16px;font-weight:700;line-height:24px;letter-spacing:0.005em;}.css-1hz3a8q .media-intro .media-intro__list ul{list-style:none;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;gap:8px;margin:8px 0 0 0;}.css-1hz3a8q .media-intro .media-intro__list ul li{font-family:'Figtree';font-size:16px;font-weight:400;line-height:24px;letter-spacing:0.005em;}.css-1hz3a8q .media-intro .media-intro__list ul li:before{content:'\2022';color:#D9AB14;font-weight:bold;display:inline-block;margin-left:-1em;}.css-1hz3a8q .container [id]{scroll-margin-top:120px;}@media (max-width:1023.95px){.css-1hz3a8q .container [id]{scroll-margin-top:200px;}}@media (max-width:1024.95px){.css-1hz3a8q .sw-styled-section,.css-1hz3a8q #footer-content{padding-left:24px;padding-right:24px;}}@media (max-width:1024.95px){.css-1hz3a8q .sw-custom-container{padding-left:0;padding-right:0;}}@media (min-width:1024px){.css-1hz3a8q .secureworks-container-with-aside{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}.css-1hz3a8q .secureworks-container-with-aside >div:nth-of-type(1){-webkit-flex:2;-ms-flex:2;flex:2;}.css-1hz3a8q .secureworks-container-with-aside >div:nth-of-type(2){-webkit-flex:1;-ms-flex:1;flex:1;}}.css-1hz3a8q .dsw-button{background:#D9AB14!important;color:#181818!important;}.css-1hz3a8q .dsw-button,.css-1hz3a8q .sw-btn{display:block;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;color:#181818;background:#D9AB14;font-family:var(--headline-font, 'Saira Condensed');font-weight:600;font-size:19px;line-height:19px;border-radius:0;overflow:hidden;position:relative;padding:16px;cursor:pointer;-webkit-transition:background-color 0.3s;transition:background-color 0.3s;letter-spacing:0;white-space:normal;z-index:1;-webkit-text-decoration:none;text-decoration:none;transition-property:border;transition-duration:400ms;transition-delay:1s;text-transform:uppercase;}.css-1hz3a8q .dsw-button:after,.css-1hz3a8q .sw-btn:after{content:'';position:absolute;top:0;left:-171%;width:170%;height:100%;background:transparent;z-index:-1;border-top:80px solid #ECC134;border-right:90px solid transparent;-webkit-transition:left 0.3s ease-in-out;transition:left 0.3s ease-in-out;}.css-1hz3a8q .dsw-button:hover,.css-1hz3a8q .sw-btn:hover{background:#D9AB14;}.css-1hz3a8q .dsw-button:hover:after,.css-1hz3a8q .sw-btn:hover:after{left:0;}.css-1hz3a8q .dsw-button:before,.css-1hz3a8q .sw-btn:before{content:'';position:absolute;top:6px;left:6px;right:6px;bottom:6px;background:#D9AB14;opacity:0;-webkit-transition:none;transition:none;z-index:-1;}.css-1hz3a8q .dsw-button:disabled,.css-1hz3a8q .sw-btn:disabled,.css-1hz3a8q .dsw-button[disabled],.css-1hz3a8q .sw-btn[disabled]{opacity:0.4!important;pointer-events:none!important;}.css-1hz3a8q .dsw-button:focus,.css-1hz3a8q .sw-btn:focus{outline:none!important;background:transparent!important;box-shadow:0 0 0 3px #D9AB14 inset;overflow:visible!important;}.css-1hz3a8q .dsw-button:focus:before,.css-1hz3a8q .sw-btn:focus:before{opacity:1;}.css-1hz3a8q .dsw-button:focus:after,.css-1hz3a8q .sw-btn:focus:after{display:none;}.css-1hz3a8q .sw-secondary-btn{background:transparent;box-shadow:none;border:3px solid #D9AB14;padding:13px 16px;color:#181818;transition-property:border;transition-duration:400ms;transition-delay:1s;}.css-1hz3a8q .sw-secondary-btn:hover{background:transparent;color:#181818;border-color:#ECC134;}.css-1hz3a8q .sw-secondary-btn:before{background:transparent;border:3px solid #D9AB14;}.css-1hz3a8q .sw-secondary-btn:focus{box-shadow:none;}.css-1hz3a8q .sw-primary-link{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;font-family:var(--headline-font, 'Saira Condensed');font-weight:600;color:var(--title-color, #181818);font-size:19px;text-transform:uppercase;-webkit-text-decoration:none;text-decoration:none;position:relative;transition-property:color;transition-duration:400ms;transition-delay:0.1s!important;padding:8px;}.css-1hz3a8q .sw-primary-link:hover{color:var(--eyebrow-color, #D9AB14);}.css-1hz3a8q .sw-primary-link:hover:after{right:-24px!important;}.css-1hz3a8q .sw-primary-link:focus{outline:3px solid #181818;}.css-1hz3a8q .sw-primary-arrow-link{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;font-family:var(--headline-font, 'Saira Condensed');font-weight:600;color:var(--title-color, #181818);font-size:19px;text-transform:uppercase;-webkit-text-decoration:none;text-decoration:none;position:relative;transition-property:color;transition-duration:400ms;transition-delay:0.1s!important;padding:8px;padding-right:calc(24px);}.css-1hz3a8q .sw-primary-arrow-link:after{content:'';width:13px;height:13px;position:absolute;right:8px;top:50%;-webkit-transform:translateY(-50%);-moz-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);background-image:url('/assets/background-image/arrow-right.svg');background-repeat:no-repeat;-webkit-background-size:13px auto;background-size:13px auto;-webkit-background-position:right center;background-position:right center;-webkit-transition:all 0.3s;transition:all 0.3s;}.css-1hz3a8q .sw-primary-arrow-link:hover{color:var(--eyebrow-color, #D9AB14);}.css-1hz3a8q .sw-primary-arrow-link:hover:after{right:4px!important;}.css-1hz3a8q .sw-primary-arrow-link:focus{outline:3px solid #181818;}.css-1hz3a8q .theme-dark .sw-secondary-btn{color:#ffffff;}.css-1hz3a8q .theme-dark .sw-secondary-btn:focus,.css-1hz3a8q .theme-dark .sw-secondary-btn:hover{color:#181818;}.css-1hz3a8q .theme-dark .sw-primary-link{color:#ffffff;}.css-1hz3a8q .theme-dark .sw-primary-link:focus,.css-1hz3a8q .theme-dark .sw-primary-link:hover{color:var(--eyebrow-color, #D9AB14);}.css-1hz3a8q .theme-dark .sw-primary-link:focus{outline-color:#ffffff;}.css-1hz3a8q .theme-dark .sw-primary-arrow-link{color:#ffffff;}.css-1hz3a8q .theme-dark .sw-primary-arrow-link:focus,.css-1hz3a8q .theme-dark .sw-primary-arrow-link:hover{color:var(--eyebrow-color, #D9AB14);}.css-1hz3a8q .theme-dark .sw-primary-arrow-link:focus{outline-color:#ffffff;}.css-1hz3a8q style{display:none!important;}@media (max-width:1535.95px){.css-1hz3a8q .desktop-only{display:none;}}@media (min-width:1536px){.css-1hz3a8q .mobile-only{display:none;}}@media (min-width:1024px){.css-1hz3a8q .desktop-hide{display:none;}}.css-1hz3a8q .visually-hidden,.css-1hz3a8q .hide-text{text-indent:100%;white-space:nowrap;overflow:hidden;color:transparent;size:0;display:block;height:0;}</style><div class="css-1hz3a8q e6h3kd10"><style data-emotion="css-global o6gwfi">html{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;box-sizing:border-box;-webkit-text-size-adjust:100%;}*,*::before,*::after{box-sizing:inherit;}strong,b{font-weight:700;}body{margin:0;color:rgba(0, 0, 0, 0.87);font-family:"Roboto","Helvetica","Arial",sans-serif;font-weight:400;font-size:1rem;line-height:1.5;letter-spacing:0.00938em;background-color:#fff;}@media print{body{background-color:#fff;}}body::backdrop{background-color:#fff;}</style><style data-emotion="css-global qfp7zq">body{padding-right:0!important;--headline-font:Saira Condensed;margin:0;color:#000000DE;font-family:'Figtree';font-weight:400;font-size:16pxrem;line-height:1.5;letter-spacing:0.00938em;background-color:#ffffff;}</style><style data-emotion="css-global myyrlq">body{--body-font:Figtree;}</style><style data-emotion="css 17p3k7l">.css-17p3k7l{max-width:125.32px;position:fixed;z-index:1;}.css-17p3k7l:focus-within{z-index:99999;}.css-17p3k7l a{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;position:relative;padding:16px;font-family:'Figtree';font-style:normal;font-weight:500;font-size:17px;line-height:22px;letter-spacing:0.0012em;text-decoration-line:underline;color:#111013;border:2px solid #D9AB14;cursor:pointer;outline:0;}.css-17p3k7l a:after{position:absolute;content:'';border:2px solid #111013;width:100%;bottom:0;top:0;left:0;}.css-17p3k7l .SkipTo_message{opacity:0;pointer-events:none;}.css-17p3k7l .SkipTo_message:focus{opacity:1;background:#D9AB14;pointer-events:inherit;}.css-17p3k7l .SkipTo_back-to-top{background:#D9AB14;}</style><div class="css-17p3k7l"><a role="main" aria-label="skiptocontent" href="#main-content" class="SkipTo_message">Skip to Main Content<style data-emotion="css vubbuv">.css-vubbuv{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:1em;height:1em;display:inline-block;fill:currentColor;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;-webkit-transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;font-size:1.5rem;}</style><svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-vubbuv" focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ExpandMoreIcon"><path d="M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z"></path></svg></a><a role="contentinfo" aria-label="skiptomessage" href="#cmp-footer-a1fbb96a" class="SkipTo_message">Skip to Footer<svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-vubbuv" focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ExpandMoreIcon"><path d="M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z"></path></svg></a></div><style nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj">@media (min-width: 1024px) {
.aside {
    position: sticky;
    top: -155px;
    height: 100%;
}
}

.aside .css-0 {
    gap: 24px;
    display: flex;
    flex-direction: column;
}

.aside .cmp-form-standalone {
    padding: 48px 32px;
}

.aside .marketo-form .mktoForm h3{
    text-align: left;
}</style><style nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj">@media (min-width: 1024px){
section[data-form-id="1784"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden){
    margin-bottom: 24px;
}}

section[data-form-id="1784"].marketo-form .mktoPlaceholder,
section[data-form-id="1784"].marketo-form .mktoFormCol {
    width: 100%;
}
@media (min-width: 1024px){
section[data-form-id="1784"].marketo-form .mktoPlaceholder,
section[data-form-id="1784"].marketo-form .mktoFormCol {
    width: 49%;
}
}

section[data-form-id="1784"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).Additional_Information__c,
section[data-form-id="1784"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).Additional_Information__c .mktoFormCol--Additional_Information__c{
    height: 54px;
}


section[data-form-id="1784"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).Additional_Information__c .mktoFormCol--Additional_Information__c .textarea-inside,
section[data-form-id="1784"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).Additional_Information__c .mktoFormCol--Additional_Information__c textarea.mktoField {
height: 64px;
}

section[data-form-id="1784"].marketo-form .mktoFieldWrap:not(.checkbox-list) .mktoField:not(input[type='checkbox']) {
    font-size: 16px;
    line-height: 16px;
}

section[data-form-id="1784"].marketo-form .mktoFieldWrap:not(.checkbox-list) >.mktoLabel {
    /*top: 8px;*/
}

section[data-form-id="1784"].marketo-form .mktoFieldWrap:not(.checkbox-list).date-inside >.mktoLabel, 
section[data-form-id="1784"].marketo-form .mktoFieldWrap:not(.checkbox-list).invalid >.mktoLabel,
section[data-form-id="1784"].marketo-form .mktoFieldWrap:not(.checkbox-list).valid >.mktoLabel {
    margin-top: 4px;
    font-size: 13px;
    line-height: 13px;
}

section[data-form-id="1784"].marketo-form .mktoFieldWrap:not(.checkbox-list) .mktoField:not(input[type='checkbox'], textarea) {
height: 46px;
}

/*
section[data-form-id="1784"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--optin {
    margin-bottom: 8px;
    margin-top: 0;
}*/

section[data-form-id="1784"].marketo-form .mktoFormRow--optin span{
    font-size: 13px;
    line-height: 13px;
    /*font-weight: bold;*/
}

section[data-form-id="1784"].marketo-form .form-title {
    font-size: 38px;
    line-height: 38px;
    text-transform: uppercase;
margin-bottom: 40px;
}
@media (min-width: 1024px) {
section[data-form-id="1784"].marketo-form .form-title {
    font-size: 52px;
    line-height: 52px;
}
}
/* Fix misaligned select icon */
section[data-form-id].marketo-form .mktoFieldWrap:not(.checkbox-list).select-field-wrapper.invalid:before {
    right: 10px; 
}

.form-standalone.css-195a2qt{
padding: 48px;
}

@media (min-width: 1024px){
section[data-form-id="1784"] .mktoFormRow.mktoFormRow--count-2.mktoFormRow--optin.emailOptin.checkbox-inside.number-of-cols-2 .mktoFormCol:nth-child(1) {
    margin-top: 0;
}
section[data-form-id="1784"] .mktoFormRow.mktoFormRow--count-2.mktoFormRow--optin.emailOptin.checkbox-inside.number-of-cols-2 .mktoFormCol:nth-child(2) {
    margin-top: 2px;
}
}
@media (min-width: 840px){
#emailOptin {
    margin: 0;
    padding: 0;
    margin-top: 0 !important;
}
}

@media (max-width: 1023px){
section[data-form-id="1784"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).Additional_Information__c {
    margin-bottom: 30px;
}
}

@media (min-width: 1023px) {
section[data-form-id="1784"].marketo-form .mktoButtonRow button {
    width: unset;
}
}</style><style nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj">/* START - CSS Two column width fix */
.two-column-section-row__media picture {
    display: block;
    height: 100%;
    width: 100%;
}

.two-column-section-row.css-1iut0a8 picture{
    padding-right: 112px;
}
.two-column-section-row.css-1iut0a8 picture img{
    padding-right: 0;
}

.two-column-section-row.css-1br79n6 picture{
    padding-left: 112px;
}
.two-column-section-row.css-1br79n6 picture img{
    padding-left: 0;
}
/* END - CSS Two column width fix */

/*Hide empty Contact dropdown*/
header nav [aria-describedby='undefined dropdown'] {
    display: none;
}

[role="tooltip"] ul li:empty {
display:none;
}

/*Form*/
.form-content .css-vicul9 img {
    aspect-ratio: 16 / 9;
}

/*Form Hero Width Fix*/
.sw-custom-container.css-1bd709e {
    max-width: 1356px;
}

/* Hide Recaptcha badge globally */
.grecaptcha-badge { visibility: hidden; }

/* Nav Overlap util menu dropdown */
.css-3hfhm5.MuiPopper-root {
    z-index:99999;
}
/* Section Row unordered list spacing issue */
.css-1l97qhw .description ul li {
    margin-bottom: 16px;
}

/* Fix dropdowns in forms not being clickable*/
.mktoFormRow label {
pointer-events: none;
}

/* Nav Fix empty mobile items */
.css-vb228m:has(a:empty){
    display: none;
}
.css-qhscje:has(.css-17o5nyn:empty) {
    display: none;
}
ul > li > .css-vubbuv:only-child{
    display: none;
}

/* Press release date fix */
#press-release .article-date {
    max-width: 1356px;
    width: 100%;
    margin-left: auto;
    margin-right: auto;
    box-sizing: border-box;
}

#sec-498bb170-303d-4843-b4e5-4eb51920a02e .article-date {
    max-width: 1356px;
    width: 100%;
    margin-left: auto;
    margin-right: auto;
    box-sizing: border-box;
}

@media (min-width: 1025px){
#press-release .article-date {padding-left: 24px; padding-right: 24px;}
}

@media (min-width: 1025px){
#sec-498bb170-303d-4843-b4e5-4eb51920a02e .article-date {padding-left: 24px; padding-right: 24px;}
}

/* Too much whitespace on article pages */
.article-body .sw-styled-section.css-1rhhb3v {
padding-top: 0;
}

@media (min-width: 1024px) {
.css-1h0k3ki {
    margin-bottom: 0;
}
}

@media (min-width: 1024px) {
.css-11feirs {
    margin-bottom: 88px;
}
}

/* Forms pages with empty secondary content */
.article-gated-content:has(.sw-custom-container:empty) {
    display: none;
}

/* Shrink space between links on section cards */
.two-column-section-row__content .sw-cta-card-small + .sw-cta-card-small {
    margin-top: 20px;
}

/* press release date alignment */
.container .css-0 .cmp-article-date {
    width: 100%;
    margin-left: auto;
    box-sizing: border-box;
    margin-right: auto;
    display: block;
    max-width: 1356px;
    margin-bottom: 0;
    min-height: 0;
}
@media (min-width: 1025px) {
    .container .css-0 .cmp-article-date {
        padding-left: 24px;
        padding-right: 24px;
    }
}

/* Hide extra sidebar on load */
.css-3kuqf7 .SecondFilterAccordion_sidebar {
    display: none;
}

.cmp-form-standalone .marketo-form h1,
.cmp-form-standalone .marketo-form h2,
.cmp-form-standalone .marketo-form h3 {
    text-transform: uppercase;
}

@media (min-width: 769px) {
.cmp-in-page-nav span.title {
    display:none;
}

.cmp-in-page-nav .active .navItems {
    padding-left: 0;
}
}

/* Nav capitalize */
[role='tooltip'] .MuiContainer-root .MuiGrid-root *:not(.banner-main-link, h4, h3,h2,h1){
    text-transform: unset;
}

[role='tooltip'] .MuiContainer-root .MuiGrid-root h1,
[role='tooltip'] .MuiContainer-root .MuiGrid-root h2,
[role='tooltip'] .MuiContainer-root .MuiGrid-root h3,
[role='tooltip'] .MuiContainer-root .MuiGrid-root h4 {
    text-transform: uppercase;
    font-family: 'Saira Condensed';
}

[role='tooltip'] .MuiContainer-root .MuiGrid-root h4 > div > p {
    text-transform: none !important;
    font-family: figtree;
}

.marketo-form *:not(h1,h2,h3,h4,h5, .submit-button-style){
font-family: var(--body-font, "Figtree");
}

body {
font-family: var(--body-font, "Figtree");
}

/* Fix stat card 2 column */
.cmp-cards {
    gap: 24px;
}

.cmp-cards > div {
    margin: 0 !important;
}

.container .article-body ol li::marker,
.container .article-body ul li::marker {
   color: #D9AB14;
}

/* JP Resource sidebar expand slightly */
.cmp-search-filter:lang(ja-JP) > div:first-child {
    width: 230px; 
}

/* Static 'blade' 
.css-c4sutr {
    position: sticky;
    z-index: 200;
    top: 0;
}

#cmp-header-b4592c42.css-nv0hsa{
    top: 40px !important;
}
#cmp-header-b4592c42.css-jkvw9e{
    top: 0;
}*/

/* iphone logo */
@media (max-width: 475px){
    a[aria-label="Secureworks Homepage"] svg {
        max-width: 95%;
    }
}</style><style nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj">/* CSS fixes for tables */
/*
.article-body table td, th{border: 1px solid black; text-align:left;}
.article-body table tbody tr:nth-child(even) td{background:none;}
.article-body table tbody tr td:first-child{text-align:left;}
*/

/* CSS Fixes for headings and CTU spacing */
.article-body h2{font-size: 38px !important; line-height: 38px !important;}
.article-body h3{font-family:'FigTree' !important; font-size: 28px !important; line-height: 28px !important; text-transform: none;}
.article-body h4{font-family:'FigTree' !important; font-size: 20px !important; line-height: 20px !important; text-transform: none;}

/*CSS Fixes for No Image banners*/
@media (min-width: 1024px){
.article-body .sw-styled-section {padding-top: 0px; padding-bottom: 20px;} /* padding-top previously 80px*/
.article-body {margin-bottom: 50px;}
}
.article-body .sw-styled-section {padding-top: 0px; padding-bottom: 40px;} /* padding-top previously 88px*/

/*Firefox Fix for images*/
.article-body .article-content img{height: inherit !important;}

/* Auto-Line-Break For Code*/
pre {
    white-space: pre-wrap !important; 
    white-space: -moz-pre-wrap !important; 
    white-space: -o-pre-wrap !important; 
    white-space: -ms-pre-wrap !important; 
    word-wrap: break-word !important;
}

/*Images scaling */
@media screen and (max-width:768px){
.sw-custom-container.css-1kvlezf .article-content img{width:100% !important;}}
.article-body img{width: inherit !important;}

/* CSS for Blockquotes */
.article-body blockquote{margin: 0px; padding: 15px; font-size: 18px; font-weight: bold;}

/* CSS to reduce top space in first paragraph */
.article-body .article-content p:first-of-type {margin-block-start:0em;}</style><style nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj">@media (min-width: 1024px){
section[data-form-id="1784"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden){
    margin-bottom: 24px;
}}

section[data-form-id="1784"].marketo-form .mktoPlaceholder,
section[data-form-id="1784"].marketo-form .mktoFormCol {
    width: 100%;
}
@media (min-width: 1024px){
section[data-form-id="1784"].marketo-form .mktoPlaceholder,
section[data-form-id="1784"].marketo-form .mktoFormCol {
    width: 49%;
}
}

section[data-form-id="1784"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).Additional_Information__c,
section[data-form-id="1784"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).Additional_Information__c .mktoFormCol--Additional_Information__c{
    height: 54px;
}


section[data-form-id="1784"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).Additional_Information__c .mktoFormCol--Additional_Information__c .textarea-inside,
section[data-form-id="1784"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).Additional_Information__c .mktoFormCol--Additional_Information__c textarea.mktoField {
height: 64px;
}

section[data-form-id="1784"].marketo-form .mktoFieldWrap:not(.checkbox-list) .mktoField:not(input[type='checkbox']) {
    font-size: 16px;
    line-height: 16px;
}

section[data-form-id="1784"].marketo-form .mktoFieldWrap:not(.checkbox-list) >.mktoLabel {
    /*top: 8px;*/
}

section[data-form-id="1784"].marketo-form .mktoFieldWrap:not(.checkbox-list).date-inside >.mktoLabel, 
section[data-form-id="1784"].marketo-form .mktoFieldWrap:not(.checkbox-list).invalid >.mktoLabel,
section[data-form-id="1784"].marketo-form .mktoFieldWrap:not(.checkbox-list).valid >.mktoLabel {
    margin-top: 4px;
    font-size: 13px;
    line-height: 13px;
}

section[data-form-id="1784"].marketo-form .mktoFieldWrap:not(.checkbox-list) .mktoField:not(input[type='checkbox'], textarea) {
height: 46px;
}

/*
section[data-form-id="1784"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--optin {
    margin-bottom: 8px;
    margin-top: 0;
}*/

section[data-form-id="1784"].marketo-form .mktoFormRow--optin span{
    font-size: 13px;
    line-height: 13px;
    /*font-weight: bold;*/
}

section[data-form-id="1784"].marketo-form .form-title {
    font-size: 38px;
    line-height: 38px;
    text-transform: uppercase;
margin-bottom: 40px;
}
@media (min-width: 1024px) {
section[data-form-id="1784"].marketo-form .form-title {
    font-size: 52px;
    line-height: 52px;
}
}
/* Fix misaligned select icon */
section[data-form-id].marketo-form .mktoFieldWrap:not(.checkbox-list).select-field-wrapper.invalid:before {
    right: 10px; 
}

.form-standalone.css-195a2qt{
padding: 48px;
}

@media (min-width: 1024px){
section[data-form-id="1784"] .mktoFormRow.mktoFormRow--count-2.mktoFormRow--optin.emailOptin.checkbox-inside.number-of-cols-2 .mktoFormCol:nth-child(1) {
    margin-top: 0;
}
section[data-form-id="1784"] .mktoFormRow.mktoFormRow--count-2.mktoFormRow--optin.emailOptin.checkbox-inside.number-of-cols-2 .mktoFormCol:nth-child(2) {
    margin-top: 2px;
}
}
@media (min-width: 840px){
#emailOptin {
    margin: 0;
    padding: 0;
    margin-top: 0 !important;
}
}

@media (max-width: 1023px){
section[data-form-id="1784"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).Additional_Information__c {
    margin-bottom: 30px;
}
}

@media (min-width: 1023px) {
section[data-form-id="1784"].marketo-form .mktoButtonRow button {
    width: unset;
}
}</style><style data-emotion="css c4sutr">.css-c4sutr{height:auto;overflow:visible;-webkit-transition:height 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;transition:height 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;}</style><div class="MuiCollapse-root MuiCollapse-vertical MuiCollapse-entered css-c4sutr" style="min-height:0px" hidden=""><style data-emotion="css hboir5">.css-hboir5{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;width:100%;}</style><div class="MuiCollapse-wrapper MuiCollapse-vertical css-hboir5"><style data-emotion="css 8atqhb">.css-8atqhb{width:100%;}</style><div class="MuiCollapse-wrapperInner MuiCollapse-vertical css-8atqhb"><style data-emotion="css fk5cgi">.css-fk5cgi{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;min-height:40px;background:rgb(71, 62, 255);}</style><div id="toaster" class="css-fk5cgi"><style data-emotion="css 1knbux5">.css-1knbux5{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;justify-content:space-between;}</style><style data-emotion="css 1pi9mpy">.css-1pi9mpy{max-width:1356px;margin-bottom:0;min-height:0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;justify-content:space-between;}@media (max-width:767.95px){.css-1pi9mpy.stay-informed{padding-left:0;padding-right:0;}@media (max-width:767.95px){.css-1pi9mpy.stay-informed .article-content{padding:0;}}}@media (max-width:1023.95px){.css-1pi9mpy .threat-profile-article-content{padding-left:10px;}}</style><style data-emotion="css 158dhf5">.css-158dhf5{width:100%;margin-left:auto;box-sizing:border-box;margin-right:auto;display:block;padding-left:16px;padding-right:16px;max-width:1356px;margin-bottom:0;min-height:0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;justify-content:space-between;}@media (min-width:1025px){.css-158dhf5{padding-left:24px;padding-right:24px;}}@media (max-width:767.95px){.css-158dhf5.stay-informed{padding-left:0;padding-right:0;}@media (max-width:767.95px){.css-158dhf5.stay-informed .article-content{padding:0;}}}@media (max-width:1023.95px){.css-158dhf5 .threat-profile-article-content{padding-left:10px;}}</style><div class="MuiContainer-root css-158dhf5"><style data-emotion="css 1sg2lsz">.css-1sg2lsz{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}</style><div class="css-1sg2lsz"><style data-emotion="css 1x5qtj">.css-1x5qtj{font-size:15px;letter-spacing:0.06em;text-transform:uppercase;font-weight:600;font-family:var(--headline-font, 'Saira Condensed');background-color:transparent;color:#ffffff;padding:2px 8px;line-height:17px;padding-left:0;}@media (max-width:1023.95px){.css-1x5qtj{padding-left:8px;}}</style><span tabindex="0" role="navigation" class="css-1x5qtj"></span><style data-emotion="css o7hsx0">.css-o7hsx0 a{display:block;height:100%;font-size:14px;background-color:transparent;color:#ffffff;font-family:var(--body-font, 'Figtree');-webkit-text-decoration:none;text-decoration:none;padding-right:8px;line-height:17px;}.css-o7hsx0 a:hover{color:#ffffff;-webkit-text-decoration:underline;text-decoration:underline;text-underline-offset:4px;}.css-o7hsx0 svg{font-size:14px;position:relative;top:2px;left:4px;}</style><span class="css-o7hsx0"><a href="https://www.sophos.com/en-us/press/press-releases/2025/02/sophos-completes-secureworks-acquisition" target="_blank" rel="noopener noreferrer" type="link" role="navigation" aria-label="Sophos completes Secureworks acquisition">Sophos completes Secureworks acquisition<style data-emotion="css syag5g">.css-syag5g{color:#ffffff;}</style><style data-emotion="css w5o71i">.css-w5o71i{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:1em;height:1em;display:inline-block;fill:currentColor;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;-webkit-transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;font-size:1.5rem;color:#ffffff;}</style><svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-w5o71i" focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ArrowForwardIcon"><path d="m12 4-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z"></path></svg></a></span></div></div></div></div></div></div><style data-emotion="css jkvw9e">.css-jkvw9e{background-color:#111013;border-bottom:1px solid #313131;position:-webkit-sticky;position:sticky;z-index:105;top:0;}@media (min-width:1024px){.css-jkvw9e{top:-40px;}}.css-jkvw9e .sticky-header{color:white;position:-webkit-sticky;position:sticky;top:0;}</style><header class="docked cmp-header css-jkvw9e" id="cmp-header-b4592c42"><style data-emotion="css o89qp4">.css-o89qp4{max-width:1356px;margin-bottom:0;min-height:0;}@media (max-width:767.95px){.css-o89qp4.stay-informed{padding-left:0;padding-right:0;}@media (max-width:767.95px){.css-o89qp4.stay-informed .article-content{padding:0;}}}@media (max-width:1023.95px){.css-o89qp4 .threat-profile-article-content{padding-left:10px;}}</style><style data-emotion="css 11laweg">.css-11laweg{width:100%;margin-left:auto;box-sizing:border-box;margin-right:auto;display:block;padding-left:16px;padding-right:16px;max-width:1356px;margin-bottom:0;min-height:0;}@media (min-width:1025px){.css-11laweg{padding-left:24px;padding-right:24px;}}@media (max-width:767.95px){.css-11laweg.stay-informed{padding-left:0;padding-right:0;}@media (max-width:767.95px){.css-11laweg.stay-informed .article-content{padding:0;}}}@media (max-width:1023.95px){.css-11laweg .threat-profile-article-content{padding-left:10px;}}</style><div class="MuiContainer-root sw-custom-container css-11laweg"><style data-emotion="css 1t9dnk1">.css-1t9dnk1{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;-webkit-justify-content:flex-end;justify-content:flex-end;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;min-height:40px;}@media (max-width:1023.95px){.css-1t9dnk1{display:none;}}.css-1t9dnk1 ul{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;-webkit-justify-content:flex-end;justify-content:flex-end;padding:0;margin:0;}.css-1t9dnk1 ul li{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-family:var(--body-font, 'Figtree');font-weight:600;list-style-type:none;cursor:pointer;}.css-1t9dnk1 ul li:not(:first-of-type){padding-left:16px;}.css-1t9dnk1 ul li:not(:last-child){padding-right:16px;border-right:1px rgb(255 255 255 / 60%) solid;}.css-1t9dnk1 ul li a{-webkit-text-decoration:none;text-decoration:none;color:#DBDBDB;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-size:14px;line-height:20px;letter-spacing:0.02em;font-weight:500;padding-top:4px;}.css-1t9dnk1 ul li a:hover{color:#ffffff;}.css-1t9dnk1 ul li img{max-height:18px;width:auto;margin-right:4px;}.css-1t9dnk1 ul li ul{display:none;}</style><nav class="css-1t9dnk1"><style data-emotion="css 1dhvtib">.css-1dhvtib{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;-webkit-justify-content:flex-end;justify-content:flex-end;padding:0;margin:0;}</style><ul class="css-1dhvtib"><style data-emotion="css 1ny6cip">.css-1ny6cip{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-family:var(--body-font, 'Figtree');font-weight:600;list-style-type:none;cursor:pointer;}.css-1ny6cip svg{color:#ffffff;margin-right:8px;width:16px;height:16px;}.css-1ny6cip:not(:first-of-type){padding-left:16px;}.css-1ny6cip:not(:last-child){padding-right:16px;border-right:1px rgb(255 255 255 / 60%) solid;}.css-1ny6cip a{-webkit-text-decoration:none;text-decoration:none;color:#DBDBDB;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-size:14px;line-height:20px;letter-spacing:0.02em;font-weight:500;padding-top:4px;}.css-1ny6cip a:hover{color:#ffffff;}.css-1ny6cip img{max-height:18px;width:auto;margin-right:4px;}</style><li class="css-1ny6cip"><style data-emotion="css 1pp7t2h">.css-1pp7t2h.warning{color:#FF0000;}</style><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="triangle-exclamation" class="svg-inline--fa fa-triangle-exclamation warning css-1pp7t2h" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M256 32c14.2 0 27.3 7.5 34.5 19.8l216 368c7.3 12.4 7.3 27.7 .2 40.1S486.3 480 472 480H40c-14.3 0-27.6-7.7-34.7-20.1s-7-27.8 .2-40.1l216-368C228.7 39.5 241.8 32 256 32zm0 128c-13.3 0-24 10.7-24 24V296c0 13.3 10.7 24 24 24s24-10.7 24-24V184c0-13.3-10.7-24-24-24zm32 224a32 32 0 1 0 -64 0 32 32 0 1 0 64 0z"></path></svg><a aria-label="Experiencing a Breach?" href="/contact/emergency-response">Experiencing a Breach?</a></li><li aria-describedby="Contact Us dropdown" class="css-1ny6cip"><a tabindex="0" role="button" aria-pressed="false">Contact Us<style data-emotion="css bupq19">.css-bupq19{opacity:0.8;color:#ffffff;width:18px;height:18px;position:relative;bottom:2px;}</style><style data-emotion="css pjycqt">.css-pjycqt{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:1em;height:1em;display:inline-block;fill:currentColor;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;-webkit-transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;font-size:1.5rem;opacity:0.8;color:#ffffff;width:18px;height:18px;position:relative;bottom:2px;}</style><svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-pjycqt" focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="KeyboardArrowDownIcon"><path d="M7.41 8.59 12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"></path></svg></a></li><li aria-describedby="Support dropdown" class="css-1ny6cip"><a tabindex="0" role="button" aria-pressed="false">Support<svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-pjycqt" focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="KeyboardArrowDownIcon"><path d="M7.41 8.59 12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"></path></svg></a></li><li class="css-1ny6cip"><a aria-label="Blog" href="/blog">Blog</a></li><li aria-describedby="English dropdown" class="css-1ny6cip"><svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="globe" class="svg-inline--fa fa-globe world css-1pp7t2h" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M352 256c0 22.2-1.2 43.6-3.3 64H163.3c-2.2-20.4-3.3-41.8-3.3-64s1.2-43.6 3.3-64H348.7c2.2 20.4 3.3 41.8 3.3 64zm28.8-64H503.9c5.3 20.5 8.1 41.9 8.1 64s-2.8 43.5-8.1 64H380.8c2.1-20.6 3.2-42 3.2-64s-1.1-43.4-3.2-64zm112.6-32H376.7c-10-63.9-29.8-117.4-55.3-151.6c78.3 20.7 142 77.5 171.9 151.6zm-149.1 0H167.7c6.1-36.4 15.5-68.6 27-94.7c10.5-23.6 22.2-40.7 33.5-51.5C239.4 3.2 248.7 0 256 0s16.6 3.2 27.8 13.8c11.3 10.8 23 27.9 33.5 51.5c11.6 26 20.9 58.2 27 94.7zm-209 0H18.6C48.6 85.9 112.2 29.1 190.6 8.4C165.1 42.6 145.3 96.1 135.3 160zM8.1 192H131.2c-2.1 20.6-3.2 42-3.2 64s1.1 43.4 3.2 64H8.1C2.8 299.5 0 278.1 0 256s2.8-43.5 8.1-64zM194.7 446.6c-11.6-26-20.9-58.2-27-94.6H344.3c-6.1 36.4-15.5 68.6-27 94.6c-10.5 23.6-22.2 40.7-33.5 51.5C272.6 508.8 263.3 512 256 512s-16.6-3.2-27.8-13.8c-11.3-10.8-23-27.9-33.5-51.5zM135.3 352c10 63.9 29.8 117.4 55.3 151.6C112.2 482.9 48.6 426.1 18.6 352H135.3zm358.1 0c-30 74.1-93.6 130.9-171.9 151.6c25.5-34.2 45.2-87.7 55.3-151.6H493.4z"></path></svg><a tabindex="0" role="button" aria-pressed="false">English<svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-pjycqt" focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="KeyboardArrowDownIcon"><path d="M7.41 8.59 12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"></path></svg></a></li></ul><style data-emotion="css 8spjge">.css-8spjge{margin-left:32px;cursor:pointer;-webkit-align-self:center;-ms-flex-item-align:center;align-self:center;position:relative;height:24px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:transparent;border:0;}.css-8spjge:focus{outline-color:#DBDBDB;outline-offset:6px;outline-width:2px;outline-style:dotted;}</style><button title="Search Secureworks.com" type="button" class="css-8spjge"><style data-emotion="css 1mvbs8y">.css-1mvbs8y{width:13px;height:13px;}.css-1mvbs8y:focus{outline-color:#DBDBDB;outline-offset:6px;outline-width:2px;outline-style:dotted;}</style><svg width="14" height="13" fill="none" xmlns="http://www.w3.org/2000/svg" class="css-1mvbs8y"><path d="M11.037 9.162 11 9.125h-.626l-.102-.097a5.247 5.247 0 0 0 1.197-3.34 5.27 5.27 0 1 0-5.27 5.27 5.246 5.246 0 0 0 3.34-1.196l.097.1v.628l.037.036 1.958 1.95.089.089.088-.088 1.18-1.18.088-.088-.088-.088-1.95-1.959ZM6.2 9.125A3.433 3.433 0 0 1 2.76 5.688 3.433 3.433 0 0 1 6.2 2.25a3.433 3.433 0 0 1 3.437 3.438A3.433 3.433 0 0 1 6.2 9.125Z" fill="#fff" stroke="#fff" stroke-width="0.25"></path></svg></button><style data-emotion="css um19vb">.css-um19vb{position:fixed;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;right:0;bottom:0;top:0;left:0;background-color:rgba(0, 0, 0, 0.5);-webkit-tap-highlight-color:transparent;}</style><div aria-hidden="true" class="MuiBackdrop-root css-um19vb" style="opacity:0;visibility:hidden"><style data-emotion="css 7ghqyy">.css-7ghqyy .MuiPopover-paper{width:100%;top:20%!important;border-radius:0;background-color:transparent;box-shadow:none;outline-width:inherit;max-width:100%;left:0!important;right:0!important;}.css-7ghqyy .MuiBackdrop-root{background-color:rgba(0, 0, 0, 0.7);}</style><style data-emotion="css 2eqmkf">.css-2eqmkf .MuiPopover-paper{width:100%;top:20%!important;border-radius:0;background-color:transparent;box-shadow:none;outline-width:inherit;max-width:100%;left:0!important;right:0!important;}.css-2eqmkf .MuiBackdrop-root{background-color:rgba(0, 0, 0, 0.7);}</style></div></nav></div><style data-emotion="css 18z8yg7">.css-18z8yg7{width:100%;height:1px;background:#313131;}</style><div class="css-18z8yg7"></div><div class="sticky-header"><style data-emotion="css bkxe9g">.css-bkxe9g{position:static;}</style><style data-emotion="css 1ylgz9w">.css-1ylgz9w{max-width:1356px;margin-bottom:0;min-height:0;position:static;}@media (max-width:767.95px){.css-1ylgz9w.stay-informed{padding-left:0;padding-right:0;}@media (max-width:767.95px){.css-1ylgz9w.stay-informed .article-content{padding:0;}}}@media (max-width:1023.95px){.css-1ylgz9w .threat-profile-article-content{padding-left:10px;}}</style><style data-emotion="css 1twx310">.css-1twx310{width:100%;margin-left:auto;box-sizing:border-box;margin-right:auto;display:block;padding-left:16px;padding-right:16px;max-width:1356px;margin-bottom:0;min-height:0;position:static;}@media (min-width:1025px){.css-1twx310{padding-left:24px;padding-right:24px;}}@media (max-width:767.95px){.css-1twx310.stay-informed{padding-left:0;padding-right:0;}@media (max-width:767.95px){.css-1twx310.stay-informed .article-content{padding:0;}}}@media (max-width:1023.95px){.css-1twx310 .threat-profile-article-content{padding-left:10px;}}</style><div class="MuiContainer-root mainNavContainer css-1twx310"><style data-emotion="css ago55l">.css-ago55l{position:static;-webkit-align-self:center;-ms-flex-item-align:center;align-self:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;justify-content:space-between;min-height:67px;}@media (max-width:1023.95px){.css-ago55l{display:none;}}.css-ago55l >*:first-of-type{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}</style><style data-emotion="css 14k3fv7">.css-14k3fv7{box-sizing:border-box;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;width:100%;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;position:static;-webkit-align-self:center;-ms-flex-item-align:center;align-self:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;justify-content:space-between;min-height:67px;}@media (max-width:1023.95px){.css-14k3fv7{display:none;}}.css-14k3fv7 >*:first-of-type{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}</style><div class="MuiGrid-root MuiGrid-container mainNavBar css-14k3fv7"><style data-emotion="css zsymun">.css-zsymun{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:100%;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;height:67px;max-width:195px;}.css-zsymun svg{width:195px;height:auto;}</style><style data-emotion="css 786r70">.css-786r70{color:inherit;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:100%;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;height:67px;max-width:195px;}.css-786r70:hover{color:inherit;}.css-786r70 svg{width:195px;height:auto;}</style><a href="/" aria-label="Secureworks Homepage" title="Secureworks" class=" css-786r70"><svg viewBox="0 0 195 24" fill="none" xmlns="http://www.w3.org/2000/svg" alt="logo" aria-hidden="true"><path d="M16.366 16.523c0 3.483-2.89 6.814-7.582 6.814a10.146 10.146 0 0 1-4.758-1.02c-1.479-.72-2.76-1.789-3.73-3.114l2.98-2.35c1.358 2.143 3.166 3.295 5.475 3.295 2.526 0 4.141-1.62 4.141-3.638 0-2.294-2.493-3.06-5.12-3.9-3.083-1-6.442-2.243-6.442-6.423C1.326 2.76 4.436.007 8.627.007A8.975 8.975 0 0 1 15.99 3.37l-2.76 2.05a5.137 5.137 0 0 0-4.573-2.427c-2.302 0-3.806 1.377-3.806 3.143 0 2.18 2.402 2.89 5.02 3.767 3.096 1.055 6.496 2.395 6.496 6.62ZM34.263 15.098c0-4.588-3.4-7.928-8.014-7.933a8.057 8.057 0 0 0-5.781 2.37 8.013 8.013 0 0 0-2.33 5.783c0 4.51 3.312 8.024 8.24 8.024 3.464 0 5.93-1.679 7.301-4.23l-2.76-1.523a4.88 4.88 0 0 1-1.86 2.076 4.9 4.9 0 0 1-2.695.723c-2.724 0-4.601-1.588-5.034-3.996h12.933v-1.294ZM21.51 13.575a4.831 4.831 0 0 1 1.782-2.537 4.854 4.854 0 0 1 2.961-.937c2.402 0 4.141 1.244 4.601 3.483l-9.344-.01ZM44.399 20.223a4.923 4.923 0 0 1-3.504-1.457 4.895 4.895 0 0 1-1.415-3.512 4.829 4.829 0 0 1 1.377-3.517 4.854 4.854 0 0 1 3.491-1.461 4.661 4.661 0 0 1 2.656.778 4.64 4.64 0 0 1 1.742 2.144l2.996-1.261a7.833 7.833 0 0 0-2.963-3.517 7.865 7.865 0 0 0-4.43-1.255 8.04 8.04 0 0 0-5.785 2.33 7.995 7.995 0 0 0-2.36 5.759 7.996 7.996 0 0 0 2.366 5.753 8.04 8.04 0 0 0 5.778 2.335 7.883 7.883 0 0 0 4.502-1.281 7.85 7.85 0 0 0 2.974-3.605l-3.04-1.284a4.69 4.69 0 0 1-1.716 2.207 4.712 4.712 0 0 1-2.67.844ZM97.322 15.098c0-4.588-3.405-7.933-8.02-7.933a8.048 8.048 0 0 0-5.783 2.367 8.005 8.005 0 0 0-2.328 5.786c0 4.51 3.308 8.024 8.236 8.024 3.469 0 5.93-1.679 7.306-4.23l-2.76-1.523a4.89 4.89 0 0 1-1.863 2.075 4.91 4.91 0 0 1-2.697.724c-2.714 0-4.6-1.588-5.024-3.983H97.3l.023-1.307Zm-12.758-1.523a4.827 4.827 0 0 1 1.78-2.537 4.85 4.85 0 0 1 2.959-.936c2.406 0 4.118 1.243 4.6 3.482l-9.34-.01ZM116.282 18.837l-4.256-11.672h-2.848l-4.32 11.672-3.754-11.672h-3.4l5.378 16.187h3.276l4.214-11.113 4.15 11.113h3.212l5.65-16.187h-3.414l-3.888 11.672ZM176.507 13.685c-2.25-.5-3.681-.808-3.681-1.95 0-.996.92-1.863 2.682-1.863a4.032 4.032 0 0 1 3.497 1.771l2.761-1.51c-1.215-1.867-3.373-3.018-6.258-3.018-3.68-.028-6.017 2.239-6.017 4.684 0 3.212 2.737 4.074 5.396 4.634 1.956.39 3.773.683 3.773 1.931 0 1.088-.966 2.051-2.839 2.051a4.446 4.446 0 0 1-2.314-.577 4.424 4.424 0 0 1-1.679-1.69l-2.977 1.588c1.311 2.294 3.589 3.606 6.832 3.606 4.431.033 6.303-2.862 6.303-5.01 0-3.248-2.898-4.101-5.479-4.647ZM64.757 16.144c0 1.011-.402 1.98-1.12 2.696a3.829 3.829 0 0 1-5.406 0 3.807 3.807 0 0 1-1.12-2.696V7.165h-3.4v8.979c0 1.91.761 3.742 2.116 5.093a7.233 7.233 0 0 0 10.215 0 7.193 7.193 0 0 0 2.116-5.093V7.165h-3.4v8.979ZM70.605 14.088v9.254h3.368v-9.254a3.564 3.564 0 0 1 1.048-2.519 3.585 3.585 0 0 1 2.527-1.045h2.54V7.165h-2.54a6.957 6.957 0 0 0-4.908 2.03 6.918 6.918 0 0 0-2.035 4.893ZM131.768 7.165a8.118 8.118 0 0 0-4.501 1.362 8.085 8.085 0 0 0-2.984 3.626 8.057 8.057 0 0 0 1.756 8.804 8.124 8.124 0 0 0 8.83 1.751 8.098 8.098 0 0 0 3.636-2.975 8.065 8.065 0 0 0-1.008-10.201 8.112 8.112 0 0 0-5.729-2.367Zm0 12.773a4.82 4.82 0 0 1-2.673-.806 4.795 4.795 0 0 1-2.047-4.923 4.785 4.785 0 0 1 1.316-2.455 4.814 4.814 0 0 1 7.399.729 4.784 4.784 0 0 1-.601 6.052 4.816 4.816 0 0 1-3.398 1.403h.004ZM154.004.32V23.33h3.313V.32h-3.313ZM164.825 7.165l-7.508 8.089 7.513 8.098 4.021.04-7.559-8.138 7.508-8.089h-3.975ZM142.194 14.088v9.254h3.368v-9.254a3.566 3.566 0 0 1 1.051-2.52 3.59 3.59 0 0 1 2.528-1.044h2.521V7.165h-2.539a6.957 6.957 0 0 0-4.899 2.034 6.916 6.916 0 0 0-2.03 4.89ZM193.832 3.211c-.254-.596-.636-1.13-1.081-1.6a4.824 4.824 0 0 0-1.655-1.068c-.604-.282-1.272-.408-1.972-.408s-1.368.126-1.973.408a4.82 4.82 0 0 0-1.654 1.067c-.445.471-.827 1.005-1.082 1.601a5.221 5.221 0 0 0-.381 1.977c0 .69.127 1.35.381 1.946a4.78 4.78 0 0 0 1.082 1.6 4.9 4.9 0 0 0 1.654 1.1 5.134 5.134 0 0 0 1.973.376c.7 0 1.368-.126 1.972-.377a4.904 4.904 0 0 0 1.655-1.098c.445-.44.827-.973 1.081-1.6a4.933 4.933 0 0 0 .382-1.947c0-.69-.127-1.35-.382-1.977Zm-1.336 3.892c-.35.596-.827 1.035-1.431 1.38a3.753 3.753 0 0 1-1.941.534c-.7 0-1.368-.188-1.941-.533-.604-.346-1.081-.785-1.431-1.381-.35-.565-.509-1.224-.509-1.915 0-.722.159-1.35.509-1.946a4.004 4.004 0 0 1 1.431-1.38c.573-.346 1.241-.503 1.941-.503s1.368.157 1.941.503a4.004 4.004 0 0 1 1.431 1.38c.318.597.509 1.224.509 1.946 0 .69-.191 1.35-.509 1.915Zm-1.591-1.946c.191-.251.255-.534.255-.879 0-.314-.064-.596-.223-.816-.159-.22-.35-.408-.604-.502-.223-.094-.414-.157-.605-.157h-2.386v4.645h1.018v-1.57h1.05l.796 1.57h1.145l-.955-1.82c.191-.094.382-.251.509-.471Zm-2.545-1.6h.987c.127 0 .286.062.445.156.159.094.223.283.223.565 0 .283-.064.502-.223.628-.159.157-.318.22-.477.22h-.955v-1.57Z" fill="#fff"></path></svg></a><style data-emotion="css ksk9j1">.css-ksk9j1{position:static;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;gap:50px;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}</style><nav class="css-ksk9j1"><style data-emotion="css 13ab45y">.css-13ab45y{position:static;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;gap:24px;padding:0;margin:0;}</style><ul class="css-13ab45y"><style data-emotion="css gi509q">.css-gi509q{position:static;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-family:var(--headline-font, 'Saira Condensed');font-size:19px;font-weight:600;list-style-type:none;letter-spacing:0.0012em;text-transform:uppercase;cursor:pointer;}.css-gi509q:hover,.css-gi509q:focus{box-shadow:0 -3.5px 0 0 #D9AB14 inset;}.css-gi509q a{-webkit-text-decoration:none;text-decoration:none;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;line-height:initial;}</style><li aria-describedby="Platform dropdown" aria-pressed="false" role="button" tabindex="0" class="css-gi509q"><a type="button">Platform</a></li><li aria-describedby="Services dropdown" aria-pressed="false" role="button" tabindex="0" class="css-gi509q"><a type="button">Services</a></li><li aria-describedby="Solutions dropdown" aria-pressed="false" role="button" tabindex="0" class="css-gi509q"><a type="button">Solutions</a></li><li aria-describedby="About dropdown" aria-pressed="false" role="button" tabindex="0" class="css-gi509q"><a type="button">About</a></li><li aria-describedby="Partners dropdown" aria-pressed="false" role="button" tabindex="0" class="css-gi509q"><a type="button">Partners</a></li><li aria-describedby="Resources dropdown" aria-pressed="false" role="button" tabindex="0" class="css-gi509q"><a type="button">Resources</a></li></ul><style data-emotion="css 1x46zy8">.css-1x46zy8{z-index:0;}</style><style data-emotion="css 1nrtq7p">.css-1nrtq7p{color:#181818;background:#D9AB14;font-family:var(--headline-font, 'Saira Condensed');font-weight:600;font-size:19px;line-height:19px;border-radius:0;overflow:hidden;position:relative;padding:16px;cursor:pointer;-webkit-transition:background-color 0.3s;transition:background-color 0.3s;letter-spacing:0;white-space:normal;z-index:1;transition-property:border;transition-duration:400ms;transition-delay:1s;z-index:0;}.css-1nrtq7p:after{content:'';position:absolute;top:0;left:-171%;width:170%;height:100%;background:transparent;z-index:-1;border-top:80px solid #ECC134;border-right:90px solid transparent;-webkit-transition:left 0.3s ease-in-out;transition:left 0.3s ease-in-out;}.css-1nrtq7p:hover{background:#D9AB14;}.css-1nrtq7p:hover:after{left:0;}.css-1nrtq7p:before{content:'';position:absolute;top:6px;left:6px;right:6px;bottom:6px;background:#D9AB14;opacity:0;-webkit-transition:none;transition:none;z-index:-1;}.css-1nrtq7p:disabled,.css-1nrtq7p[disabled]{opacity:0.4!important;pointer-events:none!important;}.css-1nrtq7p:focus{outline:none!important;background:transparent!important;box-shadow:0 0 0 3px #D9AB14 inset;overflow:visible!important;}.css-1nrtq7p:focus:before{opacity:1;}.css-1nrtq7p:focus:after{display:none;}</style><style data-emotion="css a4tx2t">.css-a4tx2t{font-family:"Roboto","Helvetica","Arial",sans-serif;font-weight:500;font-size:0.875rem;line-height:1.75;letter-spacing:0.02857em;text-transform:uppercase;min-width:64px;padding:6px 8px;border-radius:4px;-webkit-transition:background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;transition:background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;color:#D9AB14;color:#181818;background:#D9AB14;font-family:var(--headline-font, 'Saira Condensed');font-weight:600;font-size:19px;line-height:19px;border-radius:0;overflow:hidden;position:relative;padding:16px;cursor:pointer;-webkit-transition:background-color 0.3s;transition:background-color 0.3s;letter-spacing:0;white-space:normal;z-index:1;transition-property:border;transition-duration:400ms;transition-delay:1s;z-index:0;}.css-a4tx2t:hover{-webkit-text-decoration:none;text-decoration:none;background-color:rgba(217, 171, 20, 0.04);}@media (hover: none){.css-a4tx2t:hover{background-color:transparent;}}.css-a4tx2t.Mui-disabled{color:rgba(0, 0, 0, 0.26);}.css-a4tx2t:after{content:'';position:absolute;top:0;left:-171%;width:170%;height:100%;background:transparent;z-index:-1;border-top:80px solid #ECC134;border-right:90px solid transparent;-webkit-transition:left 0.3s ease-in-out;transition:left 0.3s ease-in-out;}.css-a4tx2t:hover{background:#D9AB14;}.css-a4tx2t:hover:after{left:0;}.css-a4tx2t:before{content:'';position:absolute;top:6px;left:6px;right:6px;bottom:6px;background:#D9AB14;opacity:0;-webkit-transition:none;transition:none;z-index:-1;}.css-a4tx2t:disabled,.css-a4tx2t[disabled]{opacity:0.4!important;pointer-events:none!important;}.css-a4tx2t:focus{outline:none!important;background:transparent!important;box-shadow:0 0 0 3px #D9AB14 inset;overflow:visible!important;}.css-a4tx2t:focus:before{opacity:1;}.css-a4tx2t:focus:after{display:none;}</style><style data-emotion="css s3q4ex">.css-s3q4ex{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;background-color:transparent;outline:0;border:0;margin:0;border-radius:0;padding:0;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;vertical-align:middle;-moz-appearance:none;-webkit-appearance:none;-webkit-text-decoration:none;text-decoration:none;color:inherit;font-family:"Roboto","Helvetica","Arial",sans-serif;font-weight:500;font-size:0.875rem;line-height:1.75;letter-spacing:0.02857em;text-transform:uppercase;min-width:64px;padding:6px 8px;border-radius:4px;-webkit-transition:background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;transition:background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;color:#D9AB14;color:#181818;background:#D9AB14;font-family:var(--headline-font, 'Saira Condensed');font-weight:600;font-size:19px;line-height:19px;border-radius:0;overflow:hidden;position:relative;padding:16px;cursor:pointer;-webkit-transition:background-color 0.3s;transition:background-color 0.3s;letter-spacing:0;white-space:normal;z-index:1;transition-property:border;transition-duration:400ms;transition-delay:1s;z-index:0;}.css-s3q4ex::-moz-focus-inner{border-style:none;}.css-s3q4ex.Mui-disabled{pointer-events:none;cursor:default;}@media print{.css-s3q4ex{-webkit-print-color-adjust:exact;color-adjust:exact;}}.css-s3q4ex:hover{-webkit-text-decoration:none;text-decoration:none;background-color:rgba(217, 171, 20, 0.04);}@media (hover: none){.css-s3q4ex:hover{background-color:transparent;}}.css-s3q4ex.Mui-disabled{color:rgba(0, 0, 0, 0.26);}.css-s3q4ex:after{content:'';position:absolute;top:0;left:-171%;width:170%;height:100%;background:transparent;z-index:-1;border-top:80px solid #ECC134;border-right:90px solid transparent;-webkit-transition:left 0.3s ease-in-out;transition:left 0.3s ease-in-out;}.css-s3q4ex:hover{background:#D9AB14;}.css-s3q4ex:hover:after{left:0;}.css-s3q4ex:before{content:'';position:absolute;top:6px;left:6px;right:6px;bottom:6px;background:#D9AB14;opacity:0;-webkit-transition:none;transition:none;z-index:-1;}.css-s3q4ex:disabled,.css-s3q4ex[disabled]{opacity:0.4!important;pointer-events:none!important;}.css-s3q4ex:focus{outline:none!important;background:transparent!important;box-shadow:0 0 0 3px #D9AB14 inset;overflow:visible!important;}.css-s3q4ex:focus:before{opacity:1;}.css-s3q4ex:focus:after{display:none;}</style><a class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium css-s3q4ex" tabindex="0" href="/contact/request-demo-xdr">Request Demo</a></nav></div></div></div></header><div class="container" id="main-content"><style data-emotion="css 1nz7cl5">.css-1nz7cl5{margin-bottom:40px;}@media (min-width:1024px){.css-1nz7cl5{margin-bottom:88px;}}.css-1nz7cl5 .sw-styled-section{padding-top:88px;}@media (min-width:1024px){.css-1nz7cl5 .sw-styled-section{padding-top:168px;}.css-1nz7cl5 .sw-custom-container{padding-right:444px;}.css-1nz7cl5 .headline{max-width:100%;}}</style><div class="cmp-article-hero css-1nz7cl5" id="cmp-article-hero-52871740"><style data-emotion="css 10h1gmz">.css-10h1gmz{position:relative;-webkit-background-size:cover;background-size:cover;background-color:#111013;background-image:url('/-/media/branches/services-page-a/hero.jpg?h=574&iar=0&w=1600&hash=9D9C3B0974B2306F52C52224EB07AE44');}.css-10h1gmz:has(#empty){display:none;}</style><div class="sw-styled-section  css-10h1gmz"><style data-emotion="css nkhozk">.css-nkhozk{z-index:1;}</style><div class="css-nkhozk"><div class="MuiContainer-root sw-custom-container css-11laweg"><style data-emotion="css 152k1ik">.css-152k1ik{max-width:80ch;margin-bottom:40px;margin:0;text-align:left;}@media (min-width:1024px){.css-152k1ik{margin-bottom:40px;}}@media (max-width:1023.95px){.css-152k1ik+.sw-styled-section{padding-left:0;padding-right:0;}}.css-152k1ik h1,.css-152k1ik h2,.css-152k1ik h3,.css-152k1ik h4,.css-152k1ik h5,.css-152k1ik h6{color:var(--title-color, #ffffff);}.css-152k1ik h1,.css-152k1ik h2{text-transform:uppercase;margin-bottom:16px;margin-top:0;}.css-152k1ik h1,.css-152k1ik h2,.css-152k1ik h3{text-transform:uppercase;}.css-152k1ik .description,.css-152k1ik .description p{font-family:var(--body-font, 'Figtree');font-weight:400;font-size:18px;line-height:26px;letter-spacing:0.0012em;color:var(--body-color, #D1D1D1);margin:0;margin-bottom:8px;opacity:var(--body-font-opacity, 1.0);}.css-152k1ik .description ul li,.css-152k1ik .description p ul li{opacity:var(--body-font-opacity, 1);margin-bottom:16px;}.css-152k1ik .description ul li::marker,.css-152k1ik .description p ul li::marker{color:var(--eyebrow-color, #D9AB14);}</style><div class="theme-dark cmp-title-section css-152k1ik" id="cmp-title-section-3dd2bdaf" tabindex="0"><style data-emotion="css 82rf2o">.css-82rf2o{font-family:var(--headline-font, 'Saira Condensed');font-weight:600;font-size:18px;line-height:100%;letter-spacing:0.002em;text-transform:uppercase;color:var(--eyebrow-color, #D9AB14);margin-bottom:8px;margin-top:0;}</style><span class="css-82rf2o">Threat Analysis</span><style data-emotion="css 13eqrp7">.css-13eqrp7{margin:0;font-family:var(--headline-font, 'Saira Condensed');font-size:66px;line-height:64px;font-weight:600;color:#111013;margin-bottom:16px;letter-spacing:-0.01562em;}@media screen and (max-width: 1025px){.css-13eqrp7{font-size:54px;line-height:54px;}}@media screen and (max-width: 767px){.css-13eqrp7{font-size:44px;line-height:44px;}}</style><h1 class="MuiTypography-root MuiTypography-h1 css-13eqrp7"><span>DarkTortilla Malware Analysis</span></h1></div></div></div></div><style data-emotion="css 1ot39lb">.css-1ot39lb .cmp-article-author{margin-top:16px;}</style><div class="css-1ot39lb"><div class="MuiContainer-root sw-custom-container css-11laweg"><div></div><style data-emotion="css 16vtxh7">.css-16vtxh7{color:var(--title-color, #181818);}@media (max-width:1023.95px){.css-16vtxh7{margin:0px 16px;}}.css-16vtxh7 .author-container{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}.css-16vtxh7 .author-container a{color:#111013;-webkit-text-decoration:none;text-decoration:none;font-weight:700;}.css-16vtxh7 .author-container a:hover{-webkit-text-decoration:underline;text-decoration:underline;}.css-16vtxh7 .author-images{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin-bottom:10px;position:relative;}.css-16vtxh7 .author-images.overlap .author-image{margin-left:-10px;}.css-16vtxh7 .author-images.overlap .author-image:first-of-type{margin-left:0;}.css-16vtxh7 .author-image{border-radius:50%;width:50px;height:50px;object-fit:cover;border:3px solid #ffffff;background-color:#EDEDED;}.css-16vtxh7 .author{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}.css-16vtxh7 .author-content{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;padding-left:8px;}.css-16vtxh7 .author-content .author-date .date{font-weight:400;}.css-16vtxh7 .author-content >div span{color:#111013;-webkit-text-decoration:none;text-decoration:none;font-weight:600;}.css-16vtxh7 .content{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;font-family:'Figtree';font-size:0.875rem;line-height:1.25rem;letter-spacing:0.005em;}.css-16vtxh7 .author{font-weight:400;}</style><div class="cmp-article-author css-16vtxh7" id="cmp-article-author-3dd2bdaf"><div class="content"><div class="author-container"><div class="author-images "><style data-emotion="css 1quqj8l">.css-1quqj8l{background-image:url('/-/media/images/author/author-placeholder.svg');-webkit-background-size:cover;background-size:cover;border-radius:50%;overflow:hidden;width:48px;height:48px;}</style><div src="/-/media/images/author/author-placeholder.svg" class="author-image  css-1quqj8l"></div></div><div class="author-content"><div><span><a href="/author/Counter-Threat-Unit-Research-Team">Counter Threat Unit Research Team  </a></span></div><div class="author-date"><style data-emotion="css 12wkvl3">.css-12wkvl3 .date{font-family:'Figtree';font-weight:700;}.css-12wkvl3 span:not(:last-child){margin-right:4px;}.css-12wkvl3 span{color:var(--title-color, #181818);font-size:14px;font-family:'Figtree';font-weight:700;line-height:20px;letter-spacing:0.07px;padding-right:8px;}</style><div class="cmp-article-date css-12wkvl3" id="cmp-article-date-3dd2bdaf"><span class="date">August 17, 2022</span></div></div></div></div></div></div></div></div></div><style data-emotion="css 1m6jz0a">.css-1m6jz0a{position:relative;scroll-margin:96px;padding-bottom:64px;}.css-1m6jz0a:has(#empty){display:none;}@media (min-width:1024px){.css-1m6jz0a{padding-bottom:168px;}}</style><div class="sw-styled-section cmp-page-section css-1m6jz0a" id="cmp-page-section-28e6fe43"><div class="css-nkhozk"><div class="css-0"><div class="MuiContainer-root sw-custom-container css-11laweg"><style data-emotion="css 1fzbvxh">.css-1fzbvxh{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.css-1fzbvxh .aside{margin-top:64px;}.css-1fzbvxh .aside .carousel-slide,.css-1fzbvxh .aside .now-trending{margin-bottom:64px;}.css-1fzbvxh .aside .carousel-slide .title{font-size:26px!important;line-height:26px!important;}@media (min-width:1024px){.css-1fzbvxh{-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;gap:136px;}.css-1fzbvxh .aside{-webkit-flex:0 0 308px;-ms-flex:0 0 308px;flex:0 0 308px;margin-top:0;}}</style><div class="cmp-article-body-with-aside css-1fzbvxh" id="cmp-article-body-with-aside-d8ee9e51"><style data-emotion="css x7ygbi">@media (max-width:1023.95px){.css-x7ygbi .article-content{padding:0px 24px;}}.css-x7ygbi .article-content,.css-x7ygbi .sw-component{margin-bottom:24px;}.css-x7ygbi >.sw-styled-section{padding:0;}.css-x7ygbi figure{margin:0;}.css-x7ygbi figure img{width:100%;height:auto;}.css-x7ygbi figure figcaption{font-style:italic;font-size:small;}.css-x7ygbi h2,.css-x7ygbi h3{margin-top:32px;}@media (min-width:1024px){.css-x7ygbi h2,.css-x7ygbi h3{margin-top:48px;}}.css-x7ygbi h6:first-of-type{margin-top:0;}.css-x7ygbi h1,.css-x7ygbi h2,.css-x7ygbi h3,.css-x7ygbi h4{font-family:'Saira Condensed';font-weight:600;text-transform:uppercase;}.css-x7ygbi h1{font-size:44px;line-height:44px;}@media (min-width:768px){.css-x7ygbi h1{font-size:54px;line-height:54px;}}@media (min-width:1128px){.css-x7ygbi h1{font-size:66px;line-height:64px;}}.css-x7ygbi h2{font-size:38px;line-height:38px;}@media (min-width:768px){.css-x7ygbi h2{font-size:44px;line-height:44px;}}@media (min-width:1128px){.css-x7ygbi h2{font-size:52px;line-height:52px;}}.css-x7ygbi h3{font-size:32px;line-height:32px;}@media (min-width:768px){.css-x7ygbi h3{font-size:38px;line-height:38px;}}@media (min-width:1128px){.css-x7ygbi h3{font-size:44px;line-height:44px;}}.css-x7ygbi h4{font-size:26px;line-height:26px;}@media (min-width:768px){.css-x7ygbi h4{font-size:28px;line-height:28px;}}@media (min-width:1128px){.css-x7ygbi h4{font-size:32px;line-height:32px;}}.css-x7ygbi h5,.css-x7ygbi h6{font-family:'Figtree';font-weight:400;}.css-x7ygbi h5{font-size:22px;line-height:28px;}.css-x7ygbi h6{font-size:20px;line-height:24px;}.css-x7ygbi p{font-family:'Figtree';font-weight:400;font-size:16px;line-height:24px;letter-spacing:0.005em;color:#464646;word-wrap:break-word;}.css-x7ygbi img{max-width:100%;}.css-x7ygbi a{color:rgba(71, 62, 255, 1);}.css-x7ygbi q,.css-x7ygbi blockquote{font-family:'Figtree';font-style:italic;font-weight:300;font-size:21px;line-height:31px;letter-spacing:0.0012em;color:#464646;border-left:7px solid #D9AB14;padding-left:calc(32px - 7px);margin:40px 0px 32px 0px;}@media (min-width:1024px){.css-x7ygbi q,.css-x7ygbi blockquote{margin:40px 0px 56px 0px;}}.css-x7ygbi ol,.css-x7ygbi ul{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;padding:0;padding-left:16px;gap:16px;}.css-x7ygbi ol li,.css-x7ygbi ul li{font-family:'Figtree';font-weight:400;font-size:16px;line-height:24px;letter-spacing:0.005em;color:#464646;max-width:100%;}.css-x7ygbi ol li img,.css-x7ygbi ul li img{padding-right:16px;}.css-x7ygbi ul{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;gap:24px;}.css-x7ygbi table{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;height:auto!important;width:100%!important;border-spacing:0;border-collapse:collapse;}@media (min-width:1024px){.css-x7ygbi table{display:table;height:inherit;width:inherit;}}.css-x7ygbi table thead{background:#111013;}.css-x7ygbi table thead th{text-align:center;padding:8px 16px;color:white;}.css-x7ygbi table thead th:first-of-type{text-align:left;}.css-x7ygbi table tbody tr:nth-of-type(even) td{background:#EFEFEF;}.css-x7ygbi table tbody tr td{word-wrap:break-word;word-break:break-word;}.css-x7ygbi table tbody tr td:first-of-type{text-align:left;}.css-x7ygbi table td{padding:0 16px;font-family:'Figtree';font-weight:400;text-align:center;font-size:16px;line-height:24px;letter-spacing:0.005em;color:#464646;}.css-x7ygbi table .Article_mobile-table div{font-family:'Figtree';font-weight:400;font-size:16px;line-height:24px;letter-spacing:0.005em;color:#464646;padding:12px 0;}.css-x7ygbi table .Article_mobile-table div:nth-of-type(even){background:#EFEFEF;}.css-x7ygbi table .Article_mobile-table div:first-of-type{background:#111013;color:#ffffff;padding:16px 0;}.css-x7ygbi .checkmark,.css-x7ygbi checkmark{display:inline-block;width:22px;height:22px;background:#473EFF;border-radius:50%;-ms-transform:rotate(45deg);-webkit-transform:rotate(45deg);-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg);position:relative;content:''!important;font-size:0;color:transparent;}.css-x7ygbi .checkmark:before,.css-x7ygbi checkmark:before{content:''!important;position:absolute;width:3px;height:9px;background-color:#ffffff;left:11px;top:6px;}.css-x7ygbi .checkmark:after,.css-x7ygbi checkmark:after{content:''!important;position:absolute;width:3px;height:3px;background-color:#ffffff;left:8px;top:12px;}</style><div class="article-body theme-light css-x7ygbi"><style data-emotion="css 1gaognw">.css-1gaognw{position:relative;scroll-margin:96px;}.css-1gaognw:has(#empty){display:none;}</style><div class="sw-styled-section cmp-page-section css-1gaognw" id="cmp-page-section-6afc52fa"><div class="css-nkhozk"><div class="css-0"><div class="article-body theme-light css-x7ygbi"><div class="article-content "><h2>Summary</h2>
<p>DarkTortilla is a complex and highly configurable .NET-based <a href="https://blog.malwarebytes.com/cybercrime/malware/2017/03/explained-packer-crypter-and-protector/">crypter</a> that has <a href="https://blog.malwarebytes.com/threat-analysis/2015/08/rainbows-steganography-and-malware-in-a-new-net-cryptor/">possibly</a> been active since at least August 2015. It typically delivers popular information stealers and remote access trojans (RATs) such as AgentTesla, AsyncRat, NanoCore, and RedLine. While it appears to primarily deliver commodity malware, Secureworks&reg; Counter Threat Unit&trade; (CTU) researchers identified DarkTortilla samples delivering targeted payloads such as Cobalt Strike and Metasploit. It can also deliver "addon packages" such as additional malicious payloads, benign decoy documents, and executables. It features robust anti-analysis and anti-tamper controls that can make detection, analysis, and eradication challenging.</p>
<p>From January 2021 through May 2022, an average of 93 unique DarkTortilla samples per week were uploaded to the VirusTotal analysis service. Code similarities suggest possible links between DarkTortilla and other malware: a <a href="https://github.com/malwares/Crypter/tree/master/%5BC%23%5D%20The%20RATs%20Crew%20Crypter">crypter</a> operated by the <a href="https://wiki.hackforums.net/RATs_Crew">RATs Crew</a> threat group, which was active between 2008 and 2012, and the <a href="https://www.gosecure.net/blog/2021/11/02/new-malware-gameloader-in-discord-malspam-campaign-identified-by-gosecure-titan-labs/">Gameloader</a> malware that emerged in 2021.</p>
<h2>Delivery</h2>
<p>CTU&trade; analysis of VirusTotal samples revealed numerous campaigns delivering DarkTortilla via malicious spam (malspam). The emails typically use a logistics lure and include the malicious payload in an archive attachment with file types such as .iso, .zip, .img, .dmg, and .tar. The language of the email message is customized to the victim, and CTU researchers observed samples in English, German, Romanian, Spanish, Italian, and Bulgarian. Figure 1 shows a German-language malspam <a href="https://www.virustotal.com/gui/file/981aa83b2d33cca994021197237ac5ee3ad3402f7d25f04f4e76985f4ec8744c">sample</a>. The redacted filename of the attached <a href="https://en.wikipedia.org/wiki/Optical_disc_image">ISO image</a> archive file (.iso) includes the name of the organization the email was sent from. It is unclear if that organization was compromised. The archive file contains a single executable with the same filename but the .exe extension. This executable is a DarkTortilla initial loader <a href="https://www.virustotal.com/gui/file/5e03556be992d23088a3c49d24c45b1c21cd275bffb4e536348e8128d50374b6">sample</a>.</p>
<p><img alt="" height="597" width="544" src="/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-01.jpg" /><br />
<em>Figure 1. DarkTortilla malspam containing malicious archive attachment. (The German text translates to "Good morning, Please give us your best price offer for our attached order. Awaiting your kind reply. Kind regards"). (Source: Secureworks)</em></p>
<p>CTU researchers also identified malicious documents (maldocs) delivering DarkTortilla. Most of these maldocs embed the DarkTortilla initial loader executable as a Packager Shell Object. Figure 2 shows a <a href="https://www.virustotal.com/gui/file/4f15b28c91fa0e8d0dd9e86481bad04fa34fcaf564d08de7c4c0c513fc6e122d">sample</a> that prompts the victim to double-click the embedded Packager Shell Object, which executes the payload. Inspection of the Packager Shell Objects properties revealed that it is an executable named <a href="https://www.virustotal.com/gui/file/55d7d9bd9d4a511417033b6c14ce93f962d6a6e6c6414f0cb7e455baee1d3ab7">RFQ-010129H.exe</a>, which is a DarkTortilla initial loader sample. Other analyzed maldocs use different approaches, such as leveraging embedded macros to automatically execute the Packager Shell Object when a victim opens the document and enables macros.</p>
<p><img alt="" height="658" width="800" src="/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-02.jpg" /><br />
<em>Figure 2. Maldoc sample delivering DarkTortilla. (Source: Secureworks)</em></p>
<h2>High-level execution flow</h2>
<p>DarkTortilla consists of two components that rely on each other to successfully detonate payloads: a .NET-based executable (initial loader) and a .NET-based DLL (core processor). The typical high-level execution flow for a DarkTortilla payload starts with execution of the initial loader. The initial loader then retrieves its encoded core processor. While the encoded core processor is typically embedded within the .NET resources of the initial loader, CTU researchers identified initial loaders that retrieved their core processor from <a href="https://cyberhoot.com/cybrary/paste/">public paste sites</a> such as pastebin . pl, textbin . net, and paste . ee.</p>
<p>The initial loader decodes, loads, and executes the core processor. When executed, the core processor extracts, decrypts, and parses its configuration. The encrypted configuration is stored within the .NET resources of the initial loader as bitmap images. Depending on DarkTortilla's configuration, the core processor performs the following actions:</p>
<ul>
    <li>Displays a fake message box</li>
    <li>Performs anti-virtual machine checks</li>
    <li>Performs anti-sandbox checks</li>
    <li>Implements persistence</li>
    <li>Migrates execution to the Windows %TEMP% directory by using the "Melt" configuration element</li>
    <li>Processes addon packages</li>
    <li>Migrates execution to its install directory</li>
</ul>

<p>The core processor then injects and executes its configured main payload within the context of the configured subprocess. Finally, if configured, the core processor implements anti-tamper controls to prevent interference with execution of the initial loader, core processor, injected subprocess, and WatchDog executable.</p>
<p>Figure 3 illustrates this high-level DarkTortilla execution flow.</p>
<p><img alt="" height="775" width="622" src="/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-03.jpg" /><br />
<em>Figure 3. High-level execution flow for DarkTortilla infection. (Source: Secureworks)</em></p>
<h2>Initial loader</h2>
<p>Initial loader samples analyzed by CTU researchers were obfuscated using the <a href="https://marketplace.visualstudio.com/items?itemName=DeepSeaObfuscator.DeepSeaObfuscator">DeepSea .NET code obfuscator</a>. As a result, many aspects of the original code have been altered to thwart analysis. For example, namespace, class, function, and property names were renamed from their original descriptive values to random characters. Figure 4 shows an example of these obfuscated values within the code decompiled by the <a href="https://github.com/dnSpyEx/dnSpy">dnSpy</a> .NET analysis tool.</p>
<p><img alt="" height="384" width="368" src="/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-04.jpg" /><br />
<em>Figure 4. Obfuscated DarkTortilla initial loader sample. (Source: Secureworks)</em></p>
<p>In addition to name obfuscation, DeepSea applies <a href="http://tigress.cs.arizona.edu/transformPage/docs/flatten/index.html">switch dispatch control flow obfuscation</a> to DarkTortilla's initial loader. This technique restructures the original linear code into switch statements that transfer execution in a seemingly unpredictable pattern, making analysis difficult. Figure 5 shows a switch statement at the entry point of a DarkTortilla <a href="https://www.virustotal.com/gui/file/a0b96236bfd79d2ebeadb8e3deb9448af3ec8edd1ea9672b7ad4793934bb4c47">sample</a>. In this example, the value stored in the "num" variable controls which code gets executed next. This value is obfuscated and is often the result of a conditional or mathematical expression calculated at runtime, such as "<a href="https://en.wikipedia.org/wiki/%3F:">((!flag) ? 15 : 9)</a>" or "<a href="https://docs.microsoft.com/en-us/dotnet/api/system.math.abs?view=net-6.0#system-math-abs(system-int32)#system-math-abs(system-int32)">Math.Abs(num2 * 25 * 25)</a>".</p>
<p><img alt="" height="533" width="420" src="/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-05.jpg" /><br />
<em>Figure 5. Switch dispatch control flow obfuscation applied to DarkTortilla initial loader. (Source: Secureworks)</em></p>
<p>The initial loader stores DarkTortilla's encrypted configuration as bitmap images. Figure 6 lists the partial resource section of one <a href="https://www.virustotal.com/gui/file/b3754c6ecc445e9a3b37c5ebe68adb9630ca4aa89a8e8515468f39ae8131f141">sample</a> consisting of over 700 of these images.</p>
<p><img alt="" height="573" width="763" src="/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-06.jpg" /><br />
<em>Figure 6. Encrypted configuration stored as bitmap images within the .NET resources of DarkTortilla initial loader. (Source: Secureworks)</em></p>
<p>The initial loader's execution flow typically starts by checking for internet connectivity by issuing HTTP GET requests. In samples that implement this check, the initial loader attempts to retrieve content from google . com, bing . com, or both. Some <a href="https://www.virustotal.com/gui/file/45ef054bca2ae4d67e6623bf28ff75e5d178924602674c654e1b569aa74601cd">samples</a> store the URLs in the executable as plain text (see Figure 7), but most samples encode them. If the check fails, the initial loader retries the request(s) until all are successful.</p>
<p><img alt="" height="324" width="594" src="/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-07.jpg" /><br />
<em>Figure 7. Internet connectivity check in DarkTortilla initial loader. (Source: Secureworks)</em></p>
<p>The initial loader generates a 16-byte key to decode the core processor. This key is based on an initial hard-coded value multiplied by the index value of its location in the destination array. Because the values are stored as single bytes, the maximum value for an element in the array is 0xFF (255 decimal). For example, the decode key array for an initial hard-coded value of 0x6E (110 decimal) is [0x00,0x6E,0xDC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF].</p>
<p>The initial loader then retrieves the encoded core processor data. This data commonly resides within the .NET resources of the initial loader binary. Figure 8 shows encoded core processor data residing within the "pnj" .NET resource of a DarkTortilla <a href="https://www.virustotal.com/gui/file/45ef054bca2ae4d67e6623bf28ff75e5d178924602674c654e1b569aa74601cd">sample</a>.</p>
<p><img alt="" height="756" width="1017" src="/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-08.jpg" /><br />
<em>Figure 8. Encoded core processor data stored within the .NET resources of DarkTortilla initial loader. (Source: Secureworks)</em></p>
<p>The initial loader decodes the core processor data by applying the following algorithm to each byte:</p>

<pre>	enc_byte ^ (dec_key_arr[idx % len(dec_key_arr)] ^ (idx + (seed_byte % 
	len(dec_key_arr)) &amp; seed_byte)
</pre>

<ul>
    <li>enc_byte: The core processor byte array value being decoded</li>
    <li>idx: The encoded byte index in the core processor byte array</li>
    <li>dec_key_arr: The generated 16-byte decode key byte array</li>
    <li>seed_byte: The fourth byte of the 16-byte decode key byte array</li>
</ul>

<p>The initial loader loads the decoded core processor assembly code and executes its pre-determined entry point function.</p>
<h3>Initial loader variant with externally hosted core processor</h3>
<p>Initial loader variants that retrieve the encoded core processor from public paste sites first decode the URL where the core processor is hosted. The encoding logic applied to the URL varies across analyzed DarkTortilla samples, making analysis and detection difficult. Figure 9 shows a DarkTortilla <a href="https://www.virustotal.com/gui/file/0a5dc3b6669cf31e8536c59fe1315918eb4ecfd87998445e2eeb8fed64bd2f2c">sample</a> that encodes the URL (https: //pastebin . pl/view/raw/60b6b03b) by prepending and appending random text.</p>
<p><img alt="" height="408" width="735" src="/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-09.jpg" /><br />
<em>Figure 9. DarkTortilla initial loader variant that retrieves encoded core processor data from public paste site. (Source: Secureworks)</em></p>
<p>The initial loader retrieves an encoded string hosted at the decoded URL. This string represents the encoded core processor data. The string consists of fake XML tags, integer values encoded with a <a href="https://en.wikipedia.org/wiki/Caesar_cipher">shift cipher</a>, and delimiters comprised of random letters (see Figure 10). The downloaded data is stored in memory and is never saved to the filesystem.</p>
<p><img alt="" height="476" width="750" src="/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-10.jpg" /><br />
<em>Figure 10. Encoded DarkTortilla core processor data hosted on public paste site. (Source: Secureworks)</em></p>
<p>The initial loader decodes the string by first removing the fake XML tags. The string is converted into an array of integers by replacing the random letter character delimiters with a consistent letter and then using that letter to split the string into integers. The last step is to iterate through the integer array and subtract a pre-defined value. This value changes across samples.</p>
<p>In the Figure 10 example (&lt;xml&gt;1002k1015U1069k925E928s925U925E925g929E925&hellip;&lt;/xml&gt;), the consistent letter delimiter is "k" and the pre-defined subtracted value is 925:</p>
<ol>
    <li>Remove XML tags: 1002k1015U1069k925E928s925U925E925g929E925&hellip;</li>
    <li>Replace random letters with consistent character: 1002k1015k1069k925k928k925k925k925k929k925&hellip;</li>
    <li>Split into integer array: [1002, 1015, 1069, 925, 928, 925, 925, 925, 929, 925, &hellip;]</li>
    <li>Subtract pre-defined value from each integer: [77, 90, 144, 0, 3, 0, 0, 0, 4, 0, &hellip;]</li>
</ol>

<p>The hex representation of the final integer array for this example is [4D, 5A, 90, 00, 03, 00, 00, 00, 04, 00, &hellip;]. This decoded data is the core processor DLL (see Figure 11).</p>
<p><img alt="" height="227" width="700" src="/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-11.png" /><br />
<em>Figure 11. Decoded DarkTortilla core processor DLL. (Source: Secureworks)</em></p>
<h2>Core processor</h2>
<p>The core processor contains DarkTortilla's primary functionality. From at least June 2020 to March 2022, the malware author transitioned through a limited number of filenames for this DLL that appeared to relate to a function or purpose (Deserialize.dll, SHCore1.dll, <a href="https://www.virustotal.com/gui/file/93dd1202697dbaed9ef4f4707f2628212bf13aad096de29c14924b1dae1d6d5b">PVCore1.dll</a>, and SHCore2.dll). In March 2022, the names began to change more frequently to seemingly random names (e.g., BRIN.dll, UKRUSAIN.dll, KNIFALL.dll, NullSBAS.dll).</p>
<h3>Configuration processing</h3>
<p>The core processor identifies the following resources in the initial loader that are associated with the encrypted configuration:</p>
<ul>
    <li>The bitmap image resource(s) containing the encrypted configuration data</li>
    <li>The binary resource specifying the total number of images to process</li>
    <li>The resource folder containing these images and binary resources</li>
</ul>

<p>The names of these resources are calculated using the compile timestamp listed in the initial loader (which is not the file's actual compile timestamp) and two hard-coded values that represent an initialization value and the length of the resource name. The hard-coded initialization and name length values were consistent across all DarkTortilla samples analyzed by CTU researchers (see Table 1).</p>
<table>
    <thead>
        <tr>
            <th>Initial loader resource</th>
            <th>Initialization value</th>
            <th>Resource name length value</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>
            Resource folder
            </td>
            <td>
            5
            </td>
            <td>
            12
            </td>
        </tr>
        <tr>
            <td>
            Image count file
            </td>
            <td>
            80
            </td>
            <td>
            8
            </td>
        </tr>
        <tr>
            <td>
            Image file
            </td>
            <td>
            20
            </td>
            <td>
            8
            </td>
        </tr>
    </tbody>
</table>
<p><em>Table 1. Values used to derive initial loader resource names.</em></p>
<p>These names are calculated via the following process:</p>
<ol>
    <li>Divide the compile timestamp by &lt;<em>initialization value</em>&gt;.</li>
    <li>Round the result using the <a href="https://docs.microsoft.com/en-us/dotnet/api/system.math.round?view=net-6.0#system-math-round(system-decimal)#system-math-round(system-decimal)">Math.Round()</a> function.</li>
    <li>Pass the result to the <a href="https://docs.microsoft.com/en-us/dotnet/api/system.random">Random.Random()</a> function as a seed value. By using a precalculated seed value, the malware author can generate a predictable 16-byte value.</li>
    <li>Convert the 16-byte value to a GUID using the <a href="https://docs.microsoft.com/en-us/dotnet/api/system.guid">Guid.Guid()</a> function, which transposes the byte order.</li>
    <li>Remove dash characters (&lsquo;-') added during the GUID conversion.</li>
    <li>Truncate the value to &lt;<em>resource name length</em>&gt; characters.</li>
</ol>

<p>For example, the following calculation generates the resource folder name of a <a href="https://www.virustotal.com/gui/file/b3754c6ecc445e9a3b37c5ebe68adb9630ca4aa89a8e8515468f39ae8131f141">sample</a> with a compile timestamp of "Sun May 26 23:57:08 1985" (integer: 486014228):</p>
<ol>
    <li>486014228 / 5 = 97202845.6</li>
    <li>Math.Round(97202845.6) = 97202846</li>
    <li>Random.Random(97202846) = d00bee25fa9dc9024fdf632727286708</li>
    <li>Guid.Guid(d00bee25fa9dc9024fdf632727286708) = 25ee0bd0-9dfa-02c9-4fdf-632727286708</li>
    <li>Remove dashes = 25ee0bd09dfa02c94fdf632727286708</li>
    <li>Truncate to 12 characters = 25ee0bd09dfa</li>
</ol>

<p>Applying the same calculation to the other components reveals that the image count resource name for this sample is "cd6935eb" and the image base name is "d390ea32". The bitmap-formatted image names follow the pattern &lt;<em>image_base_name</em>&gt;&lt;<em>image_index</em>&gt;, where the &lt;<em>image_index</em>&gt; value ranges from 0 to the value specified in the image count resource. In this sample, the image count resource value is 0x2D4 (integer: 724), which means DarkTortilla attempts to process 725 bitmap-formatted images with the names d390ea32<strong>0</strong>, d390ea32<strong>1</strong>, d390ea32<strong>2</strong>, &hellip;, d390ea32<strong>723</strong>, d390ea32<strong>724</strong>.</p>
<p>To extract the encrypted configuration, the core processor iterates through each of the image resources in order, extracts the pixel data, and concatenates the pixel data into a byte array (see Figure 12).</p>
<p><img alt="" height="378" width="783" src="/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-12.jpg" /><br />
<em>Figure 12. Logic for extracting encrypted configuration from bitmap images. (Source: Secureworks)</em></p>
<p>The resulting byte array is decrypted using the <a href="https://en.wikipedia.org/wiki/Advanced_Encryption_Standard">Rijndael</a> cipher (also known as the Advanced Encryption Standard (AES)) with Electronic Code Book (ECB) block cipher mode and <a href="https://en.wikipedia.org/wiki/Padding_(cryptography)#ISO_10126">ISO10126 padding</a> configured. The ISO10126 <a href="https://www.iso.org/standard/18114.html">standard</a> was withdrawn in 2007, so the use of this padding could indicate that DarkTortilla's origins date back to 2007 or earlier. The key used to decrypt this data is stored as the hard-coded integer array [81, 42, 59, 7, 27, 70, 83, 13, 71, 75, 17, 9, 39, 64, 3, 2] (see Figure 13).</p>
<p><img alt="" height="396" width="800" src="/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-13.jpg" /><br />
<em>Figure 13. Hard-coded key to decrypt DarkTortilla configuration. (Source: Secureworks)</em></p>
<p>DarkTortilla parses the decrypted configuration data into a structure so that its elements can be easily referenced. Table 2 lists the potential configuration elements contained within DarkTortilla's decrypted configuration. Entries in <strong>bold</strong> indicate configuration elements that were consistently present in all samples analyzed by CTU researchers.</p>
<table>
    <thead>
        <tr>
            <th>
            Key</th>
            <th>
            Type</th>
            <th>
            Description</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>
            <strong>%Installation%</strong>
            </td>
            <td>
            <strong>bool</strong>
            </td>
            <td>
            <strong>Install DarkTortilla and implement persistence</strong>
            </td>
        </tr>
        <tr>
            <td>
            %InstallationReg%
            </td>
            <td>
            string
            </td>
            <td>
            Registry key used for persistence
            </td>
        </tr>
        <tr>
            <td>
            %InstallationKey%
            </td>
            <td>
            string
            </td>
            <td>
            Registry value used for persistence
            </td>
        </tr>
        <tr>
            <td>
            %InstallationDirectory%
            </td>
            <td>
            int
            </td>
            <td>
            Root install directory
            </td>
        </tr>
        <tr>
            <td>
            %InstallationFolder%
            </td>
            <td>
            string
            </td>
            <td>
            Subfolder name within the root install directory
            </td>
        </tr>
        <tr>
            <td>
            %InstallationFileName%
            </td>
            <td>
            string
            </td>
            <td>
            Filename for the initial loader executable within the root subfolder
            </td>
        </tr>
        <tr>
            <td>
            %StartupFolder%
            </td>
            <td>
            bool
            </td>
            <td>
            Enable Startup folder persistence
            </td>
        </tr>
        <tr>
            <td>
            %Hidden%
            </td>
            <td>
            bool
            </td>
            <td>
            Enable "Hidden" registry persistence
            </td>
        </tr>
        <tr>
            <td>
            %HiddenReg%
            </td>
            <td>
            string
            </td>
            <td>
            "Hidden" registry key used for persistence
            </td>
        </tr>
        <tr>
            <td>
            %HiddenKey%
            </td>
            <td>
            string
            </td>
            <td>
            "Hidden" registry value used for persistence
            </td>
        </tr>
        <tr>
            <td>
            <strong>%Message%</strong>
            </td>
            <td>
            <strong>bool</strong>
            </td>
            <td>
            <strong>Display fake message box</strong>
            </td>
        </tr>
        <tr>
            <td>
            %MessageIcon%
            </td>
            <td>
            int
            </td>
            <td>
            Fake message box icon ID
            </td>
        </tr>
        <tr>
            <td>
            %MessageButton%
            </td>
            <td>
            int
            </td>
            <td>
            Fake message box button ID
            </td>
        </tr>
        <tr>
            <td>
            %MessageTitle%
            </td>
            <td>
            string
            </td>
            <td>
            Fake message box title
            </td>
        </tr>
        <tr>
            <td>
            %MessageBody%
            </td>
            <td>
            string
            </td>
            <td>
            Fake message box message
            </td>
        </tr>
        <tr>
            <td>
            %MessageRepetition%
            </td>
            <td>
            bool
            </td>
            <td>
            Display fake message box even if installed
            </td>
        </tr>
        <tr>
            <td>
            <strong>%VM%</strong>
            </td>
            <td>
            <strong>bool</strong>
            </td>
            <td>
            <strong>Perform anti-virtual machine checks</strong>
            </td>
        </tr>
        <tr>
            <td>
            <strong>%SB%</strong>
            </td>
            <td>
            <strong>bool</strong>
            </td>
            <td>
            <strong>Perform anti-sandbox checks</strong>
            </td>
        </tr>
        <tr>
            <td>
            <strong>%InjectionPersist%</strong>
            </td>
            <td>
            <strong>bool</strong>
            </td>
            <td>
            <strong>Enable anti-tamper control for running processes</strong>
            </td>
        </tr>
        <tr>
            <td>
            <strong>%StartupPersist%</strong>
            </td>
            <td>
            <strong>bool</strong>
            </td>
            <td>
            <strong>Enable anti-tamper control for startup persistence</strong>
            </td>
        </tr>
        <tr>
            <td>
            <strong>%Melt%</strong>
            </td>
            <td>
            <strong>bool</strong>
            </td>
            <td>
            <strong>Migrate initial loader execution to the Windows %TEMP% directory</strong>
            </td>
        </tr>
        <tr>
            <td>
            %MeltName%
            </td>
            <td>
            string
            </td>
            <td>
            Filename for the initial loader executable within the Windows %TEMP% directory
            </td>
        </tr>
        <tr>
            <td>
            %WatchDogName%
            </td>
            <td>
            string
            </td>
            <td>
            Filename for the anti-tamper WatchDog executable
            </td>
        </tr>
        <tr>
            <td>
            %WatchDogBytes%
            </td>
            <td>
            byte[]
            </td>
            <td>
            WatchDog byte array
            </td>
        </tr>
        <tr>
            <td>
            <strong>%Compress%</strong>
            </td>
            <td>
            <strong>bool</strong>
            </td>
            <td>
            <strong>Indicates if payloads are zlib-compressed</strong>
            </td>
        </tr>
        <tr>
            <td>
            <strong>%Delay%</strong>
            </td>
            <td>
            <strong>int</strong>
            </td>
            <td>
            <strong>Number of seconds to delay execution within the core processor</strong>
            </td>
        </tr>
        <tr>
            <td>
            <strong>%HostIndex%</strong>
            </td>
            <td>
            <strong>int</strong>
            </td>
            <td>
            <strong>ID of the target subprocess name to use for main/addon payload injection</strong>
            </td>
        </tr>
        <tr>
            <td>
            <strong>%MainFile%</strong>
            </td>
            <td>
            <strong>byte[]</strong>
            </td>
            <td>
            <strong>Main payload byte array</strong>
            </td>
        </tr>
        <tr>
            <td>
            <strong>%FilesNum%</strong>
            </td>
            <td>
            <strong>int</strong>
            </td>
            <td>
            <strong>Number of addon packages to process</strong>
            </td>
        </tr>
        <tr>
            <td>
            F.{0}.D
            </td>
            <td>
            byte[]
            </td>
            <td>
            Addon package (data): Payload byte array
            </td>
        </tr>
        <tr>
            <td>
            F.{0}.N
            </td>
            <td>
            string
            </td>
            <td>
            Addon package (name): Filename
            </td>
        </tr>
        <tr>
            <td>
            F.{0}.P
            </td>
            <td>
            int
            </td>
            <td>
            Addon package (path): Target install folder (special folder ID)
            </td>
        </tr>
        <tr>
            <td>
            F.{0}.F
            </td>
            <td>
            string
            </td>
            <td>
            Addon package (folder): Target install subfolder
            </td>
        </tr>
        <tr>
            <td>
            F.{0}.O
            </td>
            <td>
            int
            </td>
            <td>
            Addon package (operation): Execution type (disk, memory, none)
            </td>
        </tr>
        <tr>
            <td>
            F.{0}.T
            </td>
            <td>
            int
            </td>
            <td>
            Addon package (time): Execution delay (seconds)
            </td>
        </tr>
        <tr>
            <td>
            F.{0}.R
            </td>
            <td>
            int
            </td>
            <td>
            Addon package (run): Payload execution criterion
            </td>
        </tr>
    </tbody>
</table>
<p><em>Table 2. DarkTortilla configuration elements. Bold text indicates elements that appear in all analyzed samples.</em></p>
<h3>Fake message display</h3>
<p>DarkTortilla can be configured to display a message box when executed. The threat actor can customize message box characteristics such as the display message, message box title, and the <a href="https://docs.microsoft.com/en-us/office/vba/language/reference/user-interface-help/msgbox-constants">icon and button configuration</a>. Threat actors use fake message boxes to make victims think that execution failed or that a legitimate application is loading and installing. Table 3 lists the configuration elements and values in one DarkTortilla <a href="https://www.virustotal.com/gui/file/083acce46cb8cf35e37c778d1f4aee6814bca72d2874b793a47f9823f51df0fe/">sample</a>.</p>
<table>
    <thead>
        <tr>
            <th>
            Configuration element</th>
            <th>
            Assigned value as it appears in the configuration</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>
            %Message%
            </td>
            <td>
            True
            </td>
        </tr>
        <tr>
            <td>
            %MessageIcon%
            </td>
            <td>
            16
            </td>
        </tr>
        <tr>
            <td>
            %MessageButton%
            </td>
            <td>
            0
            </td>
        </tr>
        <tr>
            <td>
            %MessageTitle%
            </td>
            <td>
            .Net Framework Initialization Error
            </td>
        </tr>
        <tr>
            <td>
            %MessageBody%
            </td>
            <td>
            To run this application, you first must install one of the following version of the .Net Framework:\r\n.Net Framework, Version = 4.8.0
            </td>
        </tr>
        <tr>
            <td>
            %MessageRepetition%
            </td>
            <td>
            True
            </td>
        </tr>
    </tbody>
</table>
<p><em>Table 3. Fake message box-related configuration elements.</em></p>
<p>Figure 14 shows the message box for the DarkTortilla sample configured with the values in Table 3. The %MessageRepetition% configuration element controls whether the message box will continue to be displayed upon execution after DarkTortilla is installed and persistent on the compromised system.</p>
<p><img alt="" height="185" width="464" src="/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-14.jpg" /><br />
<em>Figure 14. Fake message box. (Source: Secureworks)</em></p>
<h3>"Melt" execution migration</h3>
<p>If the %Melt% configuration element is set to true, the core processor moves the initial loader executable to the Window's %TEMP% directory. It uses the %MeltName% configuration element value as the executable filename (e.g., java.exe, PDF.exe, cookies.exe). The core processor runs the new executable and then terminates the original initial loader executable. However, the %TEMP% directory may not be the final destination for the initial loader. The executable could migrate again if the %Installation% configuration element is set to true.</p>
<h3>Installation</h3>
<p>The %Installation% configuration element controls whether DarkTortilla installs itself on a system. If set to true, the core processor moves the current DarkTortilla executable into the directory specified by the configuration. Table 4 lists the values stored in one DarkTortilla <a href="https://www.virustotal.com/gui/file/53b3b37b7d1e40c80fcda2c424cd837379ac2ce93023de6c22ba3e2d94679671">sample</a>.</p>
<table>
    <thead>
        <tr>
            <th>
            Configuration element</th>
            <th>
            Value</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>
            %InstallationDirectory%
            </td>
            <td>
            38
            </td>
        </tr>
        <tr>
            <td>
            %InstallationFolder%
            </td>
            <td>
            WindowsPowerShell
            </td>
        </tr>
        <tr>
            <td>
            %InstallationFileName%
            </td>
            <td>
            PowerShellInfo.exe
            </td>
        </tr>
    </tbody>
</table>
<p><em>Table 4. Installation configuration elements with example values.</em></p>
<p>The integer value assigned to the %InstallationDirectory% configuration element represents a <a href="https://docs.microsoft.com/en-us/windows/win32/shell/csidl">CSIDL</a> value associated with a special folder on the system. In Table 4, the value 38 corresponds to the Windows <a href="https://www.magnumdb.com/search?q=CSIDL_PROGRAM_FILES">Program Files</a> directory. Based on this configuration, the full install path and filename for this DarkTortilla sample is "C:\Program Files\WindowsPowerShell\PowerShellInfo.exe".</p>
<p>To install, the core processor terminates the currently running DarkTortilla executable. It copies the executable to the configured installation path and filename, and then executes the installed executable via <a href="https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.process.start?view=net-6.0">Process.Start()</a>.</p>
<h3>Persistence</h3>
<p>Persistence is controlled by the %Installation% configuration element in combination with the %Hidden% and %StartupFolder% configuration elements. DarkTortilla uses the logic in Table 5 to determine the persistence type.</p>
<table>
    <thead>
        <tr>
            <th>
            %Hidden%</th>
            <th>
            %StartupFolder%</th>
            <th>
            Persistence type</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>
            False
            </td>
            <td>
            False
            </td>
            <td>
            Use registry HKCU Run key
            </td>
        </tr>
        <tr>
            <td>
            True
            </td>
            <td>
            True
            </td>
            <td>
            Windows startup folder
            </td>
        </tr>
        <tr>
            <td>
            False
            </td>
            <td>
            True
            </td>
            <td>
            Windows startup folder
            </td>
        </tr>
        <tr>
            <td>
            True
            </td>
            <td>
            False
            </td>
            <td>
            Use registry HKCU Winlogon key
            </td>
        </tr>
    </tbody>
</table>
<p><em>Table 5. Configuration elements determining the persistence type.</em></p>
<p>A bug in the code causes the %StartupFolder% logic to override the %Hidden% logic if both configuration elements are set to true. The malware author erroneously used an "if" statement instead of "else if" in the logic setting the persistence type (see Figure 15).</p>
<p><img alt="" height="313" width="800" src="/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-15.jpg" /><br />
<em>Figure 15. Error in persistence code. (Source: Secureworks)</em></p>
<p>For Windows startup folder persistence, the core processor uses the <a href="https://docs.microsoft.com/en-us/troubleshoot/windows-client/admin-development/create-desktop-shortcut-with-wsh">WshShortcut</a> COM object to create a .lnk shortcut file in the Windows startup folder. This file points to the configured installation path and filename of DarkTortilla's initial loader executable (see Figure 16).</p>
<p><img alt="" height="196" width="685" src="/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-16.jpg" /><br />
<em>Figure 16. COM object that drops shortcut file in Windows startup folder for persistence. (Source: Secureworks)</em></p>
<p>DarkTortilla features standard and hidden techniques for implementing persistence via the Windows registry. Both options implement persistence in the HKEY_CURRENT_USER (HKCU) hive as a hard-coded value in the core processor code. This persistence results in the installed DarkTortilla initial loader executable being run every time the user logs in.</p>
<ul>
    <li>For standard registry persistence, the core processor uses the %InstallationReg% and %InstallationKey% values to set the target key/value combination. In every sample analyzed by CTU researchers where standard persistence was configured, the %InstallationReg% value was "Software\Microsoft\Windows\CurrentVersion\Run". The value stored in %InstallationKey% varied across samples (e.g., "Updates", "svchost", "Runtime Broker").</li>
    <br />
    <li>For hidden registry persistence, the core processor uses the %HiddenReg% and %HiddenKey% values to set the target key/value combination. In every sample analyzed by CTU researchers where hidden persistence was configured, the %InstallationReg% value was "Software\Microsoft\Windows NT\CurrentVersion\Winlogon" and the value stored in %HiddenKey% was "Shell". Prior to setting the hidden persistence registry value, DarkTortilla's core processor prepends the installed initial loader executable path with the Windows shell value retrieved from the HKEY_LOCAL_MACHINE (HKLM) hive. This value is typically "explorer.exe", resulting in "explorer.exe,&lt;<em>installed_darktortilla_exe_path</em>&gt;". For example, if the configured install path and executable name for a DarkTortilla sample is "C:\Program Files\WindowsPowerShell\PowerShellInfo.exe", then the HKCU Winlogon\Shell registry entry is "explorer.exe,C:\Program Files\WindowsPowerShell\PowerShellInfo.exe". To create these registry values, the core processor executes the following command via Process.Start():<br />
    <br />
    <pre>	cmd.exe /c REG ADD "HKCU\<em>&lt;configured_reg_key&gt;</em>" /f /v "<em>&lt;configured_reg_val&gt;</em>" /t
	REG_SZ /d "<em>&lt;installed_darktortilla_exe_path&gt;</em>"
	</pre>
    </li>
</ul>
<h3>RunPE process injection</h3>
<p>DarkTortilla can execute its payloads using process injection. With this method, the payload resides only in memory and never accesses the filesystem. The %HostIndex% configuration element defines which legitimate process to target for process injection (see Table 6).</p>
<table>
    <thead>
        <tr>
            <th>
            %HostIndex% value</th>
            <th>
            Corresponding target process</th>
            <th>
            Source directory</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>
            0 <em>(or any numeric value that is not 1-6)</em>
            </td>
            <td>
            Initial loader executable's name
            </td>
            <td>
            &nbsp;
            </td>
        </tr>
        <tr>
            <td>
            1
            </td>
            <td>
            AppLaunch.exe
            </td>
            <td>
            Microsoft.NET Framework folder
            </td>
        </tr>
        <tr>
            <td>
            2
            </td>
            <td>
            svchost.exe
            </td>
            <td>
            System32 folder
            </td>
        </tr>
        <tr>
            <td>
            3
            </td>
            <td>
            RegAsm.exe
            </td>
            <td>
            Microsoft.NET Framework folder
            </td>
        </tr>
        <tr>
            <td>
            4
            </td>
            <td>
            InstallUtil.exe
            </td>
            <td>
            Microsoft.NET Framework folder
            </td>
        </tr>
        <tr>
            <td>
            5
            </td>
            <td>
            mscorsvw.exe
            </td>
            <td>
            Microsoft.NET Framework folder
            </td>
        </tr>
        <tr>
            <td>
            6
            </td>
            <td>
            AddInProcess32.exe
            </td>
            <td>
            Microsoft.NET Framework folder
            </td>
        </tr>
    </tbody>
</table>
<p><em>Table 6. %HostIndex% values and corresponding target processes used for payload injection.</em></p>
<p>Prior to setting the target process name, the core processor checks for active processes named "avp". The avp.exe process is part of the Kaspersky Anti-Virus suite. If the core processor detects this process, it overrides the %HostIndex% value and sets the target process name to the name of the initial loader executable. When the %HostIndex% value is 1-6, the core processor attempts to copy the legitimate target executable file to the Windows %TEMP% directory.</p>
<p>DarkTortilla uses a .NET-based DLL named "RunPe6" for process injection. This DLL is embedded within the core processor as an encoded byte array (see Figure 17).</p>
<p><img alt="" height="403" width="519" src="/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-17.jpg" /><br />
<em>Figure 17. Encoded RunPe6 DLL stored as byte array within DarkTortilla core processor. (Source: Secureworks)</em></p>
<p>To decode each byte, the core processor uses the following equation with <em>&lt;xor_key&gt;</em> as the hard-coded integer array [45, 89, 125, 69, 250, 222, 111] and <em>&lt;seed&gt;</em> as the hard-coded integer 99:</p>
<pre>decoded_byte = encoded_byte ^ (<em>&lt;xor_key&gt;</em>[(idx * <em>&lt;seed&gt;)</em> % xor_key.Length])</pre>
<br />
<p>The core processor loads RunPe6 and calls its &lsquo;Runn' function to execute the malicious payload within the context of the configured target subprocess. The core processor does not directly reference this function. Rather, it references the index values for the target class (18) and function (0). Figure 18 displays PowerShell code developed by CTU researchers to replicate the core processor's target function identification logic.</p>
<p><img alt="" height="167" width="561" src="/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-18.jpg" /><br />
<em>Figure 18. Custom PowerShell script to identify RunPe6 function used for payload process injection. (Source: Secureworks)</em></p>
<h3>Addon package processing</h3>
<p>DarkTortilla can be configured with zero or more payloads known as addon packages. These addons are in addition to the main payload that DarkTortilla is tasked with delivering. Observed addons include benign decoy documents, legitimate executables, keyloggers, clipboard stealers, cryptocurrency miners, and additional DarkTortilla payloads. Each addon package possesses a set of configuration elements composed of a static "F" character, an integer "{0}" that represents the index value indicating the position of the addon in the package array, and a character representing a particular property associated with the package.</p>
<p>The %FilesNum% configuration element defines the number of addon packages to process. For example, if the %FilesNum% value is 3, the configuration elements are F.0.<em>&lt;addon property&gt;</em>, F.1.<em>&lt;addon property&gt;</em>, and F.2.<em>&lt;addon property&gt;</em>.</p>
<p>The F.{0}.D (data) configuration element contains the addon package payload binary data. The core processor checks the %Compress% configuration element to determine if the stored data is compressed. If the element is set to true, the core processor decompresses the data before processing it.</p>
<p>The core processor next determines if it should process the addon package by inspecting the initial loader's installation state and the addon package's F.{0}.R (run) value. Table 7 lists the criteria and their result.</p>
<table>
    <thead>
        <tr>
            <th>
            Initial loader running from install directory</th>
            <th>
            F.{0}.R (run) value</th>
            <th>
            Process addon package?</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>
            True
            </td>
            <td>
            True
            </td>
            <td>
            Yes
            </td>
        </tr>
        <tr>
            <td>
            True
            </td>
            <td>
            False
            </td>
            <td>
            No
            </td>
        </tr>
        <tr>
            <td>
            False
            </td>
            <td>
            True
            </td>
            <td>
            No
            </td>
        </tr>
        <tr>
            <td>
            False
            </td>
            <td>
            False
            </td>
            <td>
            Yes
            </td>
        </tr>
    </tbody>
</table>
<p><em>Table 7. Criteria for processing addon package.</em></p>
<p>If configured to process the addon package, the core processor inspects the F.{0}.O (operation) configuration element value to determine how to execute its payload. This value can be any integer but is typically 0, 1, or 2. If the value is set to 0 or any value other than 1 or 2, the core processor saves the payload to disk but does not execute it. If the value is 1, the core processor saves the payload to disk and executes it. If the value is 2, the core processor executes the payload in memory via the same RunPE process injection technique and target process it uses for the main payload.</p>
<p>If the payload is saved to disk, the location is specified by the addon path (F.{0}.P), subfolder (F.{0}.F), and filename (F.{0}.N) configuration elements. The F.{0}.P integer value represents a CSIDL value associated with a special folder on the system. For example, the value 2 corresponds to the Windows Start Menu/Programs folder. The full path of an analyzed <a href="https://www.virustotal.com/gui/file/5be86cfca25e295f88b5aab42a6f604d2f1bb97f3c73b01df664c137908e2ec4">sample</a> containing a F.{0}.P value of 2, an empty string for F.{0}.F, and a value of sertif.exe for F.{0}.N is "C:\Users\<em>&lt;username&gt;</em>\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\sertif.exe".</p>
<h3>Main payload processing</h3>
<p>After processing addon packages and installing the initial loader executable if appropriate, DarkTortilla processes its main payload. This main payload is typically a commodity information stealer or remote access trojan (RAT). DarkTortilla stores the binary data for the main payload in the %MainFile% configuration element. Processing this payload consists of two steps:</p>
<ol>
    <li>The core processor queries the %Compress% configuration element to determine if the binary data in the %MainFile% configuration element is compressed. If set to true, the core processor decompresses the data.</li>
    <br />
    <li>The core processor executes the main payload via RunPE process injection. Unlike the addon payloads, there is no option to save the main payload to the filesystem. Therefore, the main payload resides only in memory. The target process used for injection is the same as the addon packages and is defined by the %HostIndex% configuration element.</li>
</ol>

<h3>Anti-analysis controls</h3>
<p>DarkTortilla core processor samples analyzed by CTU researchers were obfuscated using the <a href="https://yck1509.github.io/ConfuserEx/">ConfuserEx</a> code obfuscator. In addition to the obfuscator altering namespace, class, function, and property names, CTU researchers identified multiple samples where it injected specially crafted code that did not affect execution but inhibited decompilation by tools such as dnSpy (see Figure 19). Bypassing this anti-analysis control requires removing the code that caused the decompiler to break, identifying another sample that does not implement this control, or piecing together analysis from multiple samples to understand the code.</p>
<p><img alt="" height="497" width="800" src="/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-19.jpg" /><br />
<em>Figure 19. Broken dnSpy decompilation of DarkTortilla core processor. (Source: Secureworks)</em></p>
<p>The core processor includes code that that detects profilers and debuggers, but these anti-analysis controls are not called. To detect profiling, the code verifies if the <a href="https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ee471451(v=vs.100)?redirectedfrom=MSDN">COR_ENABLE_PROFILING</a> environment variable is present and sets to the value of 1. To detect debuggers, the code spawns a thread (see Figure 20) that continuously checks the <a href="https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.debugger.isattached?view=net-6.0">Debugger.IsAttached</a> property and the <a href="https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.debugger.islogging?view=net-6.0">Debugger.IsLogging</a> method. If the core processor identifies a debugger or if the thread performing the checks is terminated, the code terminates the initial loader process. It is unclear if this code was added by ConfuserEx or the malware author.</p>
<p><img alt="" height="475" width="585" src="/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-20.jpg" /><br />
<em>Figure 20. Debugger detection performed by DarkTortilla core processor. (Source: Secureworks)</em></p>
<p>The core processor implements string encoding to obscure important strings such as the configuration keys. Figure 21 shows a code excerpt that passes the string length (17), character index array ([26,8,13,18,19,0,11,11,0,19,8,14,13,17,4,6,26]), and capital letter index array ([8,17]) to the decode function.</p>
<p><img alt="" height="79" width="522" src="/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-21.jpg" /><br />
<em>Figure 21. DarkTortilla core processor string obfuscation example. (Source: Secureworks)</em></p>
<p>This function decodes the string by iterating through each value in the character index array and retrieving the corresponding character at the specified index in a hard-coded character array (see Figure 22).</p>
<p><img alt="" height="105" width="385" src="/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-22.jpg" /><br />
<em>Figure 22. Character array used by string decoding logic. (Source: Secureworks)</em></p>
<p>Figure 21 shows that the example's first three values of the character index array passed to the decode function are 26, 8, and 13. These values correspond to the characters "%", "i", and "n" in the hard-coded character array shown in Figure 22. The values passed in the capital letter index array (8, 17) indicate which characters should be capitalized ("I" and "R" in this example). Processing the character index array results in the decoded string "%InstallationReg%".</p>
<p>The %VM% configuration element enables DarkTortilla's anti-virtual machine (anti-VM) controls. If set to true, the core processor obtains information about the system by querying the following Windows Management Instrumentation (WMI) objects:</p>
<ul>
    <li><a href="https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-computersystem">Win32_ComputerSystem</a></li>
    <li><a href="https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-bios">Win32_BIOS</a></li>
    <li><a href="https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-motherboarddevice">Win32_MotherboardDevice</a></li>
    <li><a href="https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-pnpentity">Win32_PnPEntity</a></li>
    <li><a href="https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-diskdrive">Win32_DiskDrive</a></li>
</ul>

<p>The core processor also retrieves information about the system's running processes and services. It then inspects this data for strings associated with Hyper-V, QEMU, Virtual PC, VirtualBox, and VMware. If any of the case-insensitive data matches the criteria in Table 8, the core processor terminates the initial loader process.</p>
<table>
    <thead>
        <tr>
            <th>
            Targeted technology
            </th>
            <th>
            Inspected entity
            </th>
            <th>
            Inspection logic
            </th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>
            Hyper-V
            </td>
            <td>
            Win32_DiskDrive
            </td>
            <td>
            Caption contains "virtual"
            </td>
        </tr>
        <tr>
            <td>
            Hyper-V
            </td>
            <td>
            Win32_ComputerSystem
            </td>
            <td>
            Manufacturer contains "microsoft" and Model contains "virtual"
            </td>
        </tr>
        <tr>
            <td>
            QEMU
            </td>
            <td>
            Win32_DiskDrive
            </td>
            <td>
            Name contains "qemu"
            </td>
        </tr>
        <tr>
            <td>
            Virtual PC
            </td>
            <td>
            Process
            </td>
            <td>
            Process list contains "vmusrvc" or both "vpcmap" and "vmsrvc"
            </td>
        </tr>
        <tr>
            <td>
            VirtualBox
            </td>
            <td>
            Win32_DiskDrive
            </td>
            <td>
            Model contains "vbox"
            </td>
        </tr>
        <tr>
            <td>
            VirtualBox
            </td>
            <td>
            Process
            </td>
            <td>
            ProcessName contains "vboxservice"
            </td>
        </tr>
        <tr>
            <td>
            VMware
            </td>
            <td>
            Win32_DiskDrive
            </td>
            <td>
            Name contains "vmware"
            </td>
        </tr>
        <tr>
            <td>
            VMware
            </td>
            <td>
            Win32_DiskDrive
            </td>
            <td>
            Model contains "vmware"
            </td>
        </tr>
        <tr>
            <td>
            VMware
            </td>
            <td>
            Win32_ComputerSystem
            </td>
            <td>
            Manufacturer contains "vmware" and Model contains "virtual"
            </td>
        </tr>
        <tr>
            <td>
            VMware
            </td>
            <td>
            Win32_BIOS
            </td>
            <td>
            Serial number contains "vmware"
            </td>
        </tr>
        <tr>
            <td>
            VMware
            </td>
            <td>
            Win32_PnPEntity
            </td>
            <td>
            Name equals "vmware pointing device"
            </td>
        </tr>
        <tr>
            <td>
            VMware
            </td>
            <td>
            Win32_PnPEntity
            </td>
            <td>
            Name contains "vmware sata"
            </td>
        </tr>
        <tr>
            <td>
            VMware
            </td>
            <td>
            Win32_PnPEntity
            </td>
            <td>
            Name equals "vmware usb pointing device"
            </td>
        </tr>
        <tr>
            <td>
            VMware
            </td>
            <td>
            Win32_PnPEntity
            </td>
            <td>
            Name equals "vmware vmci bus device"
            </td>
        </tr>
        <tr>
            <td>
            VMware
            </td>
            <td>
            Win32_PnPEntity
            </td>
            <td>
            Name equals "vmware virtual s scsi disk device"
            </td>
        </tr>
        <tr>
            <td>
            VMware
            </td>
            <td>
            Win32_PnPEntity
            </td>
            <td>
            Name starts with "vmware svga"
            </td>
        </tr>
        <tr>
            <td>
            VMware
            </td>
            <td>
            Service
            </td>
            <td>
            ServiceImagePath contains "vmware" and ServiceName equals "vmtools"
            </td>
        </tr>
        <tr>
            <td>
            VMware
            </td>
            <td>
            Service
            </td>
            <td>
            ServiceImagePath contains "vmware" and ServiceName equals "tpvcgateway"
            </td>
        </tr>
        <tr>
            <td>
            VMware
            </td>
            <td>
            Service
            </td>
            <td>
            ServiceImagePath contains "vmware" and ServiceName equals "tpautoconnsvc"
            </td>
        </tr>
    </tbody>
</table>
<p><em>Table 8. DarkTortilla core processor anti-VM detections.</em></p>
<p>The %SB% configuration element enables DarkTortilla's anti-sandbox control. This control only detects the <a href="https://sandboxie-plus.com/Sandboxie/">Sandboxie</a> sandbox. The core processor terminates the initial loader process if it detects a running process named "sandboxierpcss" in the current session.</p>
<h3>Anti-tamper controls</h3>
<p>DarkTortilla's anti-tamper controls are the last step in its execution chain and occur after the main payload is executed. The four controls ensure that nothing interferes with DarkTortilla's execution of its critical components.</p>
<ol>
    <li>
    <p>The first anti-tamper control is employed by the core processor and ensures that the injected subprocess running the main payload is immediately rerun if terminated. The %InjectionPersist% configuration element regulates this control. If set to true, the core processor starts a thread that monitors the state of the injected subprocess. If the subprocess is terminated, this anti-tamper control automatically respawns the configured target subprocess, re-injects the main payload, and executes it within the context of the subprocess.</p>
    </li>
    <li>
    <p>The second anti-tamper control ensures that the initial loader executable is immediately rerun if terminated. DarkTortilla implements this functionality with a secondary .NET-based executable that it refers to as "WatchDog". The %InjectionPersist% configuration element regulates this control. If set to true, the core processor drops the WatchDog executable and its configuration file to the Windows %TEMP% directory. It then executes the WatchDog executable, which monitors the initial loader process.</p>
    <p>The WatchDog executable bytes are stored in the DarkTortilla %WatchDogBytes% configuration element, and the filename is stored in %WatchDogName%. Prior to processing, the core processor decompresses the WatchDog executable's bytes if the %Compress% configuration element is set to true. Every <a href="https://www.virustotal.com/gui/file/2d0dc6216f613ac7551a7e70a798c22aee8eb9819428b1357e2b8c73bef905ad">WatchDog executable</a> dropped by DarkTortilla was identical:</p>
    <ul>
        <li style="list-style: disc;">MD5 hash: 0e362e7005823d0bec3719b902ed6d62</li>
        <li style="list-style: disc;">SHA1 hash: 590d860b909804349e0cdc2f1662b37bd62f7463</li>
        <li style="list-style: disc;">SHA256 hash: 2d0dc6216f613ac7551a7e70a798c22aee8eb9819428b1357e2b8c73bef905ad</li>
    </ul>

    <p>If an executable with the configured WatchDog name already exists in the Windows %TEMP% directory, the core processor removes the existing executable's <a href="https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-fscc/6e3f7352-d11c-4d76-8c39-2516a9df36e8">Zone.Identifier</a> Alternate Data Stream (ADS), which strips the executable of any existing <a href="https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/ms537183(v=vs.85)?redirectedfrom=MSDN">URL security zones</a>. It then overwrites the existing executable with the new WatchDog executable.</p>
    <p>The WatchDog configuration file dropped to the filesystem shares the same name as the WatchDog executable but uses a .txt file extension. For example, the configuration filename for "WatchDog.exe" is "WatchDog.txt". This configuration file contains three lines representing the following values:</p>
    <ul>
        <li style="list-style: disc;">The process ID of the initial loader executable</li>
        <li style="list-style: disc;">The path and filename of the initial loader executable</li>
        <li style="list-style: disc;">The process ID for the WatchDog executable</li>
    </ul>

    <p>If the initial loader process terminates, the WatchDog process reruns it and refreshes the contents of the WatchDog configuration text file with the new process ID information.</p>
    </li>
    <li>
    <p>The third anti-tamper control is employed by the core processor and ensures that the dropped WatchDog executable continues to execute. The core processor retrieves the WatchDog executable process ID from the WatchDog configuration file once per second and verifies that the corresponding process is running. If the WatchDog process terminates, the core processor breaks the loop, drops a new WatchDog configuration file, and reruns the WatchDog executable.</p>
    </li>
    <li>
    <p>The fourth anti-tamper control is employed by the core processor and maintains persistence for the initial loader. The %StartupPersist% configuration element regulates this control. If set to true, the core processor starts a thread that sets persistence every 30 seconds using the persistence type defined in the DarkTortilla configuration. The control does not contain validation logic to check the persistence status, so it repeats the process indefinitely.</p>
    </li>
</ol>
<h3>Delayed execution</h3>
<p>The core processor implements the kernel32.dll Sleep function to delay execution at the following stages of the process. The length of delay is typically controlled by the value in the %Delay% configuration element. CTU researchers observed values ranging from 0 seconds to 300 seconds.</p>
<ul>
    <li>Prior to implementing persistence, the core processor sleeps for the number of seconds specified by the %Delay% configuration element.</li>
    <li>Prior to processing addon packages, the core processor sleeps for the number of seconds specified by the %Delay% configuration element.</li>
    <li>The core processor sleeps for a hard-coded 5 seconds after copying the source executable to the install directory but before running the executable.</li>
</ul>

<p>The number of delays increases if the %Melt% and %Installation% configuration elements are set to true, as the delays are processed each time the executable migrates. These delays can impede detection in sandbox environments if they exceed the maximum wait time.</p>
<h2>Possible malware connections</h2>
<p>DarkTortilla code shares similarities to other malware. For example, payload compression, junk code inclusion, and payload execution via <a href="https://github.com/malwares/Crypter/blob/master/%5BC%23%5D%20The%20RATs%20Crew%20Crypter/Form1.cs#L161-L163">RunPe6</a> are also features of a RATs Crew crypter last updated in 2016. DarkTortilla could represent an evolution of that crypter. Additionally, the Gameloader malware uses similar malspam lures and archive files as DarkTortilla. It also leverages .NET resources to store encoded DLLs and encrypted bitmap images and delivers similar commodity malware payloads. However, there is insufficient evidence as of this publication to definitively link these malware families or threat actors to DarkTortilla.</p>
<h2>Conclusion</h2>
<p>Researchers often overlook DarkTortilla and focus on its main payload. However, DarkTortilla is capable of evading detection, is highly configurable, and delivers a wide range of popular and effective malware. Its capabilities and prevalence make it a formidable threat.</p>
<h2>Threat indicators</h2>
<p>The threat indicators in Table 9 can be used to detect activity related to DarkTortilla. The URL may contain malicious content, so consider the risks before opening it in a browser.</p>
<table>
    <thead>
        <tr>
            <th>
            Indicator
            </th>
            <th>
            Type
            </th>
            <th>
            Context
            </th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>
            59295e810bbdbfd64b8c41316ea13cae
            </td>
            <td>
            MD5 hash
            </td>
            <td>
            Malicious spam delivering DarkTortilla
            </td>
        </tr>
        <tr>
            <td>
            18391a58ee25a5cb8dfbf4d48517b5b0<br />
            c66c5ae6
            </td>
            <td>
            SHA1 hash
            </td>
            <td>
            Malicious spam delivering DarkTortilla
            </td>
        </tr>
        <tr>
            <td>
            981aa83b2d33cca994021197237ac5ee<br />
            3ad3402f7d25f04f4e76985f4ec8744c
            </td>
            <td>
            SHA256 hash
            </td>
            <td>
            Malicious spam delivering DarkTortilla
            </td>
        </tr>
        <tr>
            <td>
            84872b60072011eab8940f3b49bdb582
            </td>
            <td>
            MD5 hash
            </td>
            <td>
            DarkTortilla initial loader
            </td>
        </tr>
        <tr>
            <td>
            3da0f44d45a1d6676d52ce691d2f6d75<br />
            4eb3097e
            </td>
            <td>
            SHA1 hash
            </td>
            <td>
            DarkTortilla initial loader
            </td>
        </tr>
        <tr>
            <td>
            5e03556be992d23088a3c49d24c45b1c<br />
            21cd275bffb4e536348e8128d50374b6
            </td>
            <td>
            SHA256 hash
            </td>
            <td>
            DarkTortilla initial loader
            </td>
        </tr>
        <tr>
            <td>
            2d74df3ce221f6ff48d20bac158a3e78
            </td>
            <td>
            MD5 hash
            </td>
            <td>
            Malicious document delivering DarkTortilla
            </td>
        </tr>
        <tr>
            <td>
            0563e691801251cdfd363eee31858ead<br />
            5ee3928b
            </td>
            <td>
            SHA1 hash
            </td>
            <td>
            Malicious document delivering DarkTortilla
            </td>
        </tr>
        <tr>
            <td>
            4f15b28c91fa0e8d0dd9e86481bad04f<br />
            a34fcaf564d08de7c4c0c513fc6e122d
            </td>
            <td>
            SHA256 hash
            </td>
            <td>
            Malicious document delivering DarkTortilla
            </td>
        </tr>
        <tr>
            <td>
            827258f907c5087f498c413d28e2203e
            </td>
            <td>
            MD5 hash
            </td>
            <td>
            DarkTortilla initial loader
            </td>
        </tr>
        <tr>
            <td>
            5e0cb6076002b11a39636e07a217b493<br />
            835e5bce
            </td>
            <td>
            SHA1 hash
            </td>
            <td>
            DarkTortilla initial loader
            </td>
        </tr>
        <tr>
            <td>
            55d7d9bd9d4a511417033b6c14ce93f9<br />
            62d6a6e6c6414f0cb7e455baee1d3ab7
            </td>
            <td>
            SHA256 hash
            </td>
            <td>
            DarkTortilla initial loader
            </td>
        </tr>
        <tr>
            <td>
            c37aae0ff565a2e44f144f837b750279
            </td>
            <td>
            MD5 hash
            </td>
            <td>
            DarkTortilla initial loader
            </td>
        </tr>
        <tr>
            <td>
            dde386911b091e894746b0f12d88a1fd<br />
            18761fb9
            </td>
            <td>
            SHA1 hash
            </td>
            <td>
            DarkTortilla initial loader
            </td>
        </tr>
        <tr>
            <td>
            a0b96236bfd79d2ebeadb8e3deb9448a<br />
            f3ec8edd1ea9672b7ad4793934bb4c47
            </td>
            <td>
            SHA256 hash
            </td>
            <td>
            DarkTortilla initial loader
            </td>
        </tr>
        <tr>
            <td>
            93fe6600c51014d7d6c2afedf8398f92
            </td>
            <td>
            MD5 hash
            </td>
            <td>
            DarkTortilla initial loader
            </td>
        </tr>
        <tr>
            <td>
            8f7340704745f3d53b284c101e93c42f<br />
            8d4c2adc
            </td>
            <td>
            SHA1 hash
            </td>
            <td>
            DarkTortilla initial loader
            </td>
        </tr>
        <tr>
            <td>
            45ef054bca2ae4d67e6623bf28ff75e5<br />
            d178924602674c654e1b569aa74601cd
            </td>
            <td>
            SHA256 hash
            </td>
            <td>
            DarkTortilla initial loader
            </td>
        </tr>
        <tr>
            <td>
            6e91ad0972e104a277505104abe39d1e
            </td>
            <td>
            MD5 hash
            </td>
            <td>
            DarkTortilla initial loader
            </td>
        </tr>
        <tr>
            <td>
            261d699c3bb1a0042b88a45ed340f2d8<br />
            6149464f
            </td>
            <td>
            SHA1 hash
            </td>
            <td>
            DarkTortilla initial loader
            </td>
        </tr>
        <tr>
            <td>
            b3754c6ecc445e9a3b37c5ebe68adb96<br />
            30ca4aa89a8e8515468f39ae8131f141
            </td>
            <td>
            SHA256 hash
            </td>
            <td>
            DarkTortilla initial loader
            </td>
        </tr>
        <tr>
            <td>
            cd49f7c3c4e82dee128eedea9879bc33
            </td>
            <td>
            MD5 hash
            </td>
            <td>
            DarkTortilla initial loader
            </td>
        </tr>
        <tr>
            <td>
            619bf90a8ea219e34bf57dda1a322914<br />
            b9fa1c81
            </td>
            <td>
            SHA1 hash
            </td>
            <td>
            DarkTortilla initial loader
            </td>
        </tr>
        <tr>
            <td>
            0a5dc3b6669cf31e8536c59fe1315918<br />
            eb4ecfd87998445e2eeb8fed64bd2f2c
            </td>
            <td>
            SHA256 hash
            </td>
            <td>
            DarkTortilla initial loader
            </td>
        </tr>
        <tr>
            <td>
            851816aa8cf45ba769f0d9420acfb3e5
            </td>
            <td>
            MD5 hash
            </td>
            <td>
            DarkTortilla initial loader
            </td>
        </tr>
        <tr>
            <td>
            4178d5efa388caf2d0ffd4539cf285b1<br />
            de5ffab6
            </td>
            <td>
            SHA1 hash
            </td>
            <td>
            DarkTortilla initial loader
            </td>
        </tr>
        <tr>
            <td>
            083acce46cb8cf35e37c778d1f4aee68<br />
            14bca72d2874b793a47f9823f51df0fe
            </td>
            <td>
            SHA256 hash
            </td>
            <td>
            DarkTortilla initial loader
            </td>
        </tr>
        <tr>
            <td>
            f44695a8febb2a35576a59fa984629d2
            </td>
            <td>
            MD5 hash
            </td>
            <td>
            DarkTortilla initial loader
            </td>
        </tr>
        <tr>
            <td>
            37ec57e5da46dc1990941a1bb3ffab9e<br />
            74db346a
            </td>
            <td>
            SHA1 hash
            </td>
            <td>
            DarkTortilla initial loader
            </td>
        </tr>
        <tr>
            <td>
            53b3b37b7d1e40c80fcda2c424cd8373<br />
            79ac2ce93023de6c22ba3e2d94679671
            </td>
            <td>
            SHA256 hash
            </td>
            <td>
            DarkTortilla initial loader
            </td>
        </tr>
        <tr>
            <td>
            8d8c551dd572a1dc158de239b37eaa9a
            </td>
            <td>
            MD5 hash
            </td>
            <td>
            DarkTortilla initial loader
            </td>
        </tr>
        <tr>
            <td>
            6d4b4bcd107b09af37996c73a6448379<br />
            a31aaac4
            </td>
            <td>
            SHA1 hash
            </td>
            <td>
            DarkTortilla initial loader
            </td>
        </tr>
        <tr>
            <td>
            5be86cfca25e295f88b5aab42a6f604d<br />
            2f1bb97f3c73b01df664c137908e2ec4
            </td>
            <td>
            SHA256 hash
            </td>
            <td>
            DarkTortilla initial loader
            </td>
        </tr>
        <tr>
            <td>
            0f89a2015ed9c1be5522e27c00276e52
            </td>
            <td>
            MD5 hash
            </td>
            <td>
            DarkTortilla core processor (PVCore1)
            </td>
        </tr>
        <tr>
            <td>
            5ad5b35f6cc093067c6f219f2d2107f4<br />
            4248c5bb
            </td>
            <td>
            SHA1 hash
            </td>
            <td>
            DarkTortilla core processor (PVCore1)
            </td>
        </tr>
        <tr>
            <td>
            93dd1202697dbaed9ef4f4707f262821<br />
            2bf13aad096de29c14924b1dae1d6d5b
            </td>
            <td>
            SHA256 hash
            </td>
            <td>
            DarkTortilla core processor (PVCore1)
            </td>
        </tr>
        <tr>
            <td>
            0e362e7005823d0bec3719b902ed6d62
            </td>
            <td>
            MD5 hash
            </td>
            <td>
            DarkTortilla watchdog executable
            </td>
        </tr>
        <tr>
            <td>
            590d860b909804349e0cdc2f1662b37b<br />
            d62f7463
            </td>
            <td>
            SHA1 hash
            </td>
            <td>
            DarkTortilla watchdog executable
            </td>
        </tr>
        <tr>
            <td>
            2d0dc6216f613ac7551a7e70a798c22a<br />
            ee8eb9819428b1357e2b8c73bef905ad
            </td>
            <td>
            SHA256 hash
            </td>
            <td>
            DarkTortilla watchdog executable
            </td>
        </tr>
        <tr>
            <td>
            https://pastebin.pl/view/raw/60b6b03b
            </td>
            <td>
            URL
            </td>
            <td>
            DarkTortilla encoded core processor download
            </td>
        </tr>
    </tbody>
</table>
<p><em>Table 9. Indicators for this threat.</em></p>
<h2>References</h2>
<p>Arntz, Pieter. "Explained: Packer, Crypter, and Protector." Malwarebytes Labs. March 27, 2017. <a href="https://blog.malwarebytes.com/cybercrime/malware/2017/03/explained-packer-crypter-and-protector/">https://blog.malwarebytes.com/cybercrime/malware/2017/03/explained-packer-crypter-and-protector/</a></p>
<p>Hasherezade. "Rainbows, Steganography and Malware in a new .NET cryptor." Malwarebytes Labs. March 30, 2016. <a href="https://blog.malwarebytes.com/threat-analysis/2015/08/rainbows-steganography-and-malware-in-a-new-net-cryptor/">https://blog.malwarebytes.com/threat-analysis/2015/08/rainbows-steganography-and-malware-in-a-new-net-cryptor/</a> </p>
<p>"RATs Crew." Hack Forums. June 21, 2021. <a href="https://wiki.hackforums.net/RATs_Crew">https://wiki.hackforums.net/RATs_Crew</a></p>
<p>GoSecure Titan Labs. "New Malware &lsquo;Gameloader' in Discord Malspam Campaign." GoSecure. November 2, 2021. <a href="https://www.gosecure.net/blog/2021/11/02/new-malware-gameloader-in-discord-malspam-campaign-identified-by-gosecure-titan-labs/">https://www.gosecure.net/blog/2021/11/02/new-malware-gameloader-in-discord-malspam-campaign-identified-by-gosecure-titan-labs/</a></p></div></div><style data-emotion="css 9vv8lk">.css-9vv8lk{margin:24px 0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}@media (min-width:1024px){.css-9vv8lk{margin:48px;}}.css-9vv8lk ul{padding-left:0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;width:100%;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;margin:0;gap:16px;}.css-9vv8lk ul li{list-style:none;}.css-9vv8lk ul li a{padding:4px 8px;background-color:#DBDBDB;font-size:14px;line-height:20px;font-wight:600;font-family:'Figtree';color:var(--title-color, #181818);-webkit-text-decoration:none;text-decoration:none;-webkit-transition:background-color 0.3s ease-in-out;transition:background-color 0.3s ease-in-out;}.css-9vv8lk ul li a:hover{background-color:var(--eyebrow-color, #D9AB14);}.css-9vv8lk .title{font-family:'Saira Condensed';text-transform:uppercase;}@media (min-width:1024px){.css-9vv8lk{margin:52px 0;}.css-9vv8lk .title{font-size:1.1875rem;text-transform:uppercase;}}</style><div class="cmp-article-tags css-9vv8lk" id="cmp-article-tags-3dd2bdaf"><ul><li><strong class="title">Tags<!-- -->:</strong></li><li class="tag"><a href="/research?tag=Threat%20Analysis"><span>Threat Analysis</span></a></li><li class="tag"><a href="/research?tag=Threat%20Intelligence"><span>Threat Intelligence</span></a></li><li class="tag"><a href="/research?tag=Threat%20Hunting%20Assessment"><span>Threat Hunting Assessment</span></a></li><li class="tag"><a href="/research?tag=Research"><span>Research</span></a></li></ul></div><style data-emotion="css 14pax4j">.css-14pax4j{color:var(--title-color, #181818);}.css-14pax4j .author-image{width:53px;height:50px;object-fit:cover;border:2px solid #ffffff;margin-right:10px;}.css-14pax4j .content{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;font-family:'Figtree';font-size:0.875rem;line-height:1.25rem;letter-spacing:0.005em;margin-top:20px;}.css-14pax4j .content .author-heading{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-14pax4j .content .author-details{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;}@media (min-width:1024px){.css-14pax4j .content .author-details{margin-left:64px;}}.css-14pax4j .content .author-blog-posts{margin-bottom:40px;}@media (min-width:1024px){.css-14pax4j .content .author-blog-posts{margin-left:64px;}}.css-14pax4j .content .author-blog-posts ul{padding-left:0;}.css-14pax4j .content .author-blog-posts li{list-style-type:none;}.css-14pax4j .content .author-blog-posts a{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;color:#111013;-webkit-text-decoration:none;text-decoration:none;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-14pax4j .content .author-blog-posts a svg{font-size:1.1875rem;color:#D9AB14;margin-right:8px;}.css-14pax4j .content .author-blog-posts .sub-heading{font-size:1rem;color:#747474;font-weight:600;font-family:'Saira Condensed';}.css-14pax4j .content .author-name{font-size:1.1875rem;font-family:'Saira Condensed';font-weight:600;color:#111013;}.css-14pax4j .content .author-designation{font-size:0.875rem;display:block;color:#111013;}.css-14pax4j .content .author-block{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;justify-content:space-between;padding:10px 0;}.css-14pax4j .content .author-bio-link{margin-left:auto;float:right;font-size:1rem;font-family:'Saira Condensed';display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;color:#111013;-webkit-text-decoration:none;text-decoration:none;font-weight:700;}.css-14pax4j .content .author-bio-link svg{font-size:1.1875rem;color:#D9AB14;margin-right:8px;}.css-14pax4j .content .author-divider{border:0;height:1px;background:#CCCCCC;padding:0;}.css-14pax4j .content .author-divider.mb-6{margin-bottom:60px;}.css-14pax4j .content .authors-container{margin-bottom:40px;}.css-14pax4j .content .authors-container a{-webkit-text-decoration:none;text-decoration:none;}.css-14pax4j .content .multiple-author{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:12px 0;}.css-14pax4j .content .single-author-section{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.css-14pax4j .content .author-details a{font-weight:700;text-transform:uppercase;}.css-14pax4j .content .author-link{float:right;font-size:16px;font-weight:600;}.css-14pax4j .content .heading{font-size:1.625rem;font-family:'Saira Condensed';font-weight:600;margin-bottom:36px;}.css-14pax4j .content .author-description{font-size:0.875rem;font-family:'Figtree';margin:22px 0 32px;}.css-14pax4j .author{font-weight:400;}</style><div class="cmp-about-author css-14pax4j" id="cmp-about-author-3dd2bdaf"><div class="content"><div class="authors-container"><div class="single-author"><hr class="author-divider mb-6"/><div class="heading">ABOUT THE AUTHOR</div><div class="single-author-section"><a href="/author/Counter-Threat-Unit-Research-Team"><div class="author-heading"><style data-emotion="css 4uq2c0">.css-4uq2c0{background-image:url('/-/media/images/author/author-placeholder.svg');-webkit-background-size:cover;background-size:cover;border-radius:50%;overflow:hidden;width:48px;height:48px;}</style><div src="/-/media/images/author/author-placeholder.svg" class="author-image css-4uq2c0"></div><div><span class="author-name">COUNTER THREAT UNIT RESEARCH TEAM</span><div class="author-designation"></div> </div><span class="author-bio-link"><svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-vubbuv" focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ArrowForwardIcon"><path d="m12 4-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z"></path></svg></span></div></a><hr class="author-divider"/><div class="author-details"><div class="author-description">Secureworks Counter Threat Unit™ (CTU) researchers frequently serve as expert resources for the media, publish technical analyses for the security community, and speak about emerging threats at security conferences. Leveraging Secureworks’ advanced security technologies and a network of industry contacts, the CTU™ research team tracks threat actors and analyzes anomalous activity, uncovering new attack techniques and threats. This process enables CTU researchers to identify threats as they emerge and develop countermeasures that protect customers before damage can occur.</div><div class="author-company"></div></div></div></div></div></div></div><style data-emotion="css 1rj4jy1">.css-1rj4jy1{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;font-size:19px;text-transform:uppercase;-webkit-text-decoration:none;text-decoration:none;position:relative;transition-property:color;transition-duration:400ms;transition-delay:0.1s!important;font-family:var(--headline-font, 'Saira Condensed');font-weight:600;color:var(--title-color, #181818);color:var(--title-color, #181818);font-family:'Saira Condensed';padding-left:24px;}.css-1rj4jy1:before{content:'';width:13px;height:13px;position:absolute;left:0;top:54%;-webkit-transform:translateY(-50%) rotate(180deg);-moz-transform:translateY(-50%) rotate(180deg);-ms-transform:translateY(-50%) rotate(180deg);transform:translateY(-50%) rotate(180deg);background-image:url('/assets/background-image/arrow-right.svg');background-repeat:no-repeat;-webkit-background-size:13px auto;background-size:13px auto;-webkit-background-position:right center;background-position:right center;-webkit-transition:all 0.3s;transition:all 0.3s;}.css-1rj4jy1:visited{color:var(--title-color, #181818);}.css-1rj4jy1:hover{color:var(--eyebrow-color, #D9AB14);}.css-1rj4jy1:hover:before{left:-8px!important;}</style><a class="cmp-link-cta-button css-1rj4jy1" id="cmp-link-cta-button-05444d4e" type="back-link" href="/research">Back to more Threat Analyses and Advisories </a></div></div></div></div><div class="aside"><div class="sw-styled-section cmp-page-section css-1gaognw" id="cmp-page-section-392e7c07"><div class="css-nkhozk"><div class="css-0"><style data-emotion="css 1vwaj8r">.css-1vwaj8r h4{margin-top:0;font-family:'Saira Condensed';font-weight:600;font-size:32px;line-height:32px;text-transform:uppercase;color:#181818;margin-bottom:24px;}.css-1vwaj8r ul{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;gap:8px;padding-top:32px;border-top:1px solid rgba(0, 0, 0, 0.2);}.css-1vwaj8r ul li{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-1vwaj8r ul li svg{font-size:19px;color:#D9AB14;margin-right:8px;}.css-1vwaj8r ul li a{font-family:'Figtree';font-style:normal;font-weight:400;font-size:16px;line-height:24px;letter-spacing:0.005em;color:#464646;-webkit-text-decoration:none;text-decoration:none;}.css-1vwaj8r ul li a:hover{color:#111013;}</style><div class="cmp-now-trending css-1vwaj8r" id="cmp-now-trending-4e523b1b"><h4>Now Trending...</h4><ul><li><svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-vubbuv" focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ArrowForwardIcon"><path d="m12 4-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z"></path></svg><a title="2024 Global State of the Threat Report" href="/resources/rp-state-of-the-threat-2024">2024 Global State of the Threat Report</a></li><li><svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-vubbuv" focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ArrowForwardIcon"><path d="m12 4-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z"></path></svg><a title="Modernize Your Security Operation Center with XDR" href="/resources/eb-modernize-you-security-operation-center-with-xdr">Modernize Your Security Operation Center with XDR</a></li><li><svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-vubbuv" focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ArrowForwardIcon"><path d="m12 4-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z"></path></svg><a title="MDR Done Right" href="/resources/eb-mdr-done-right">MDR Done Right</a></li></ul></div><style data-emotion="css 1nq6dng">.css-1nq6dng{position:relative;}@media (min-width:1024px){.css-1nq6dng{height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;margin:0;padding-bottom:1px;}}.css-1nq6dng .MediaCarouselItem_cardContent{padding:32px;border-top-left-radius:0;border-top-right-radius:0;}@media (max-width:1023.95px){.css-1nq6dng .MediaCarouselItem_cardContent{height:100%;}}@media (min-width:1024px){.css-1nq6dng .MediaCarouselItem_cardContent{-webkit-align-self:stretch;-ms-flex-item-align:stretch;align-self:stretch;-webkit-flex:1;-ms-flex:1;flex:1;}}.css-1nq6dng .MediaCarouselItem_cardContent .title{font-family:'Saira Condensed';font-weight:600;font-size:32px;line-height:32px;text-transform:uppercase;color:#181818;text-align:left;margin:0;margin-bottom:32px;}.css-1nq6dng .MediaCarouselItem_cardContent .eyebrow{color:#747474;}.css-1nq6dng .MediaCarouselItem_cardContent a{display:inline-block;}.css-1nq6dng .MediaCarouselItem_cardContent .styled-link{-webkit-align-self:end;-ms-flex-item-align:end;align-self:end;position:absolute;bottom:32px;}.css-1nq6dng .MediaCarouselItem_cardContent a#media-link:after{content:'';position:absolute;top:0;left:0;bottom:0;right:0;}</style><div class="cmp-carousel-slide css-1nq6dng" id="cmp-carousel-slide-89310813"><style data-emotion="css 1vq854h">.css-1vq854h{position:relative;}.css-1vq854h:hover .ev8bq9m11{background-color:#D9AB14;}</style><div class="cmp-hero-image sw-component  css-1vq854h ev8bq9m6" id="cmp-hero-image-undefined"><div class="css-1jjjg2j ev8bq9m9"><style data-emotion="css 1xx3izp">.css-1xx3izp{width:100%;height:100%;-webkit-flex:1;-ms-flex:1;flex:1;vertical-align:middle;object-fit:cover;object-fit:cover;aspect-ratio:16/9;}</style><style data-emotion="css tin539">.css-tin539{position:relative;}.css-tin539 img{height:100%;width:100%;z-index:0;}.css-tin539.loading-error::after{content:'';display:block;position:absolute;top:0;background-color:var(--card-background-color, #ffffff);z-index:1;width:100%;height:100%;}</style><picture class=" css-tin539"><source media="(-webkit-min-device-pixel-ratio: 1.25), (min-resolution: 1.25dppx), (min-resolution: 120dpi)" srcSet="https://dam.secureworks.com/transform/6d420e0d-9f7e-46f8-a391-9259d5e71ed9/Threat-Intelligence-Summit-2024?io=transform:fit,width:870,height:490"/><source media="(-webkit-min-device-pixel-ratio: 1.25), (min-resolution: 1.25dppx), (min-resolution: 120dpi), (min-width: 768px)" srcSet="https://dam.secureworks.com/transform/6d420e0d-9f7e-46f8-a391-9259d5e71ed9/Threat-Intelligence-Summit-2024?io=transform:fit,width:1284,height:660"/><source media="(max-width: 768px)" srcSet="https://dam.secureworks.com/transform/6d420e0d-9f7e-46f8-a391-9259d5e71ed9/Threat-Intelligence-Summit-2024?io=transform:fit,width:435,height:245"/><img width="3200" height="2400" alt="Threat Intelligence Summit 2024" asset="[object Object]" loading="lazy" class="css-1xx3izp ev8bq9m8" src="https://dam.secureworks.com/transform/6d420e0d-9f7e-46f8-a391-9259d5e71ed9/Threat-Intelligence-Summit-2024?io=transform:fit,width:642,height:330"/></picture></div></div><style data-emotion="css i6bazn">.css-i6bazn{overflow:hidden;}</style><style data-emotion="css 1okfn8i">.css-1okfn8i{background-color:#fff;color:rgba(0, 0, 0, 0.87);-webkit-transition:box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;transition:box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;border-radius:4px;border:1px solid rgba(0, 0, 0, 0.12);overflow:hidden;}</style><div class="MuiPaper-root MuiPaper-outlined MuiPaper-rounded MuiCard-root MediaCarouselItem_cardContent css-1okfn8i"><style data-emotion="css yi334l">.css-yi334l{font-family:var(--headline-font, 'Saira Condensed');font-weight:600;font-size:18px;line-height:100%;letter-spacing:0.002em;text-transform:uppercase;margin-bottom:8px;margin-top:0;font-size:19px;color:#D9AB14;margin-bottom:8px;display:block;min-height:24px;}</style><span class="eyebrow css-yi334l">Virtual Event</span><h3 class="title">Global Threat Intelligence Summit 2024</h3><style data-emotion="css 1clztqq">.css-1clztqq{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;font-size:19px;text-transform:uppercase;-webkit-text-decoration:none;text-decoration:none;position:relative;transition-property:color;transition-duration:400ms;transition-delay:0.1s!important;font-family:var(--headline-font, 'Saira Condensed');font-weight:600;color:var(--title-color, #181818);}.css-1clztqq:after{content:'';width:13px;height:13px;position:absolute;right:-20px;top:50%;-webkit-transform:translateY(-50%);-moz-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);background-image:url('/assets/background-image/arrow-right.svg');background-repeat:no-repeat;-webkit-background-size:13px auto;background-size:13px auto;-webkit-background-position:right center;background-position:right center;-webkit-transition:all 0.3s;transition:all 0.3s;}.css-1clztqq:hover{color:var(--eyebrow-color, #D9AB14);}.css-1clztqq:hover:after{right:-24px!important;}</style><a href="https://www.secureworks.com/resources/wc-global-threat-intelligence-summit-2024?utm_medium=display-ad&amp;utm_source=secureworks-sidebar&amp;utm_campaign=25q3-gl-webinar-ti-summit&amp;utm_content=webcast" class="styled-link css-1clztqq">Watch Now</a><a id="media-link" href="https://www.secureworks.com/resources/wc-global-threat-intelligence-summit-2024?utm_medium=display-ad&amp;utm_source=secureworks-sidebar&amp;utm_campaign=25q3-gl-webinar-ti-summit&amp;utm_content=webcast"></a></div></div><style data-emotion="css 195a2qt">.css-195a2qt{max-width:900px;background-color:#EFEFEF;padding:24px 24px;margin:0px -24px;}@media (min-width:1024px){.css-195a2qt{padding:48px 168px;margin:0 auto;}}.css-195a2qt .form-title{text-align:center;}</style><div class="cmp-form-standalone css-195a2qt" id="cmp-form-standalone-8f9b41dd"><style data-emotion="css eascc9">.css-eascc9 .marketo-form .confirmation-message{display:none;}.css-eascc9 .marketo-form .confirmation-message.confirmation-message-edit{display:block;}.css-eascc9 .marketo-form #form-temp-button{display:none;}.css-eascc9 .marketo-form button[type='submit'][disabled]{background-color:#969696;color:#fff;cursor:not-allowed;border:solid 1px #969696;}.css-eascc9 .marketo-form .custom-btn{text-transform:uppercase;}.css-eascc9 .marketo-form .custom-btn:hover{-webkit-transition:all 0.25s;transition:all 0.25s;}.css-eascc9 .marketo-form .marketo-progressive-form-download{text-align:center;}.css-eascc9 .marketo-form.marketo-progressive-form{height:100%;max-width:620px;margin:-86px 0 0 30px;padding:40px 40px 60px;width:50%;z-index:2;}.css-eascc9 .marketo-form.marketo-progressive-form.marketo-progressive-form-legacy{margin:0 auto 30px auto;}@media (max-width:1023.95px){.css-eascc9 .marketo-form.marketo-progressive-form{margin:-40px 0 0;max-width:100%;padding:40px 20px 30px;-webkit-order:1;-ms-flex-order:1;order:1;width:100%;}}.css-eascc9 .marketo-form.marketo-progressive-form .form-title{font-size:32px;text-align:center;}.css-eascc9 .marketo-form.marketo-progressive-form .required-text{margin:24px 0 10px;}.css-eascc9 .marketo-form.marketo-progressive-form .marketo-progressive-form-download{display:none;}.css-eascc9 .marketo-form.marketo-progressive-form.submitted .marketo-progressive-form-download{display:block;margin-top:30px;}.css-eascc9 .marketo-form.marketo-progressive-form.submitted .download-message{margin-bottom:20px;}.css-eascc9 .marketo-form.marketo-progressive-form.submitted .marketo-progressive-form-container{display:none;}.css-eascc9 .marketo-form.submitted:not(.marketo-progressive-form){background-color:transparent;padding:0;}.css-eascc9 .marketo-form.submitted:not(.marketo-progressive-form) .steps-container,.css-eascc9 .marketo-form.submitted:not(.marketo-progressive-form) .form-title,.css-eascc9 .marketo-form.submitted:not(.marketo-progressive-form) .required-text,.css-eascc9 .marketo-form.submitted:not(.marketo-progressive-form) .continue-button-row,.css-eascc9 .marketo-form.submitted:not(.marketo-progressive-form) .marketo-form-wrapper{display:none;}.css-eascc9 .marketo-form.submitted:not(.marketo-progressive-form) .confirmation-message{display:block;}.css-eascc9 .marketo-form.submitted:not(.marketo-progressive-form) .confirmation-message .form-title{display:block;}.css-eascc9 .marketo-form .mktoLabel{pointer-events:none;}.css-eascc9 .marketo-form .mktoLabel,.css-eascc9 .marketo-form .mktoField,.css-eascc9 .marketo-form form{width:100%!important;}.css-eascc9 .marketo-form .continue-button-row{text-align:center;}.css-eascc9 .marketo-form .continue-button-row .continue-btn{visibility:hidden;}.css-eascc9 .marketo-form .continue-button-row button,.css-eascc9 .marketo-form .continue-button-row .continue-btn{cursor:pointer;margin:0 auto;text-align:center;text-transform:uppercase;width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.css-eascc9 .marketo-form .continue-button-row button[disabled],.css-eascc9 .marketo-form .continue-button-row .continue-btn[disabled]{opacity:0.5;}.css-eascc9 .marketo-form .continue-button-row button img,.css-eascc9 .marketo-form .continue-button-row .continue-btn img{padding-left:7px;display:none;}.css-eascc9 .marketo-form .steps-container{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;justify-content:space-between;margin:auto;width:112px;margin-bottom:40px;}.css-eascc9 .marketo-form .steps-container .step-1,.css-eascc9 .marketo-form .steps-container .step-2{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:#ffffff;border-radius:32px;color:#ffffff;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;height:32px;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;position:relative;width:32px;}.css-eascc9 .marketo-form .steps-container .step-1::after{background-color:#ffffff;content:'';height:1px;left:42px;position:absolute;width:calc(112px - 64px - 20px);}.css-eascc9 .marketo-form .steps-container .step-1{background-color:#111013;}.css-eascc9 .marketo-form.marketo-form-step-1 .mktoButtonRow{display:none;}.css-eascc9 .marketo-form.marketo-form-step-2 .continue-button-row{display:none;}.css-eascc9 .marketo-form.marketo-form-step-2 .step-1{position:relative;background-color:#473EFF;white-space:nowrap;font-size:0;color:transparent;}.css-eascc9 .marketo-form.marketo-form-step-2 .step-1::before{content:url('/assets/form-images/stepper_complete.svg');position:absolute;height:18px;left:25%;top:30%;width:18px;}.css-eascc9 .marketo-form.marketo-form-step-2 .step-2{background-color:#111013;}.css-eascc9 .marketo-form h3.title,.css-eascc9 .marketo-form .form-title{margin-bottom:32px;text-align:center;font-size:32px;line-height:32px;}.css-eascc9 .marketo-form .required-text{color:#111013;font-size:15px;line-height:23px;margin-bottom:10px;}.css-eascc9 .marketo-form .select-field-wrapper:after{top:1px;right:1px;padding:11px 10px 0 10px;background-color:#ffffff;}.css-eascc9 .marketo-form .mktoButtonRow{text-align:center;}.css-eascc9 .marketo-form .mktoButtonRow button{width:100%;}.css-eascc9 .marketo-form .mktoButton{text-transform:uppercase;min-width:200px;}.css-eascc9 .marketo-form .mktoButton:hover{-webkit-transition:all 0.25s;transition:all 0.25s;}.css-eascc9 .marketo-form .mktoFormCol{margin-bottom:0!important;}.css-eascc9 .marketo-form .step-hidden,.css-eascc9 .marketo-form .row-hidden,.css-eascc9 .marketo-form .mktoFormRow--hidden,.css-eascc9 .marketo-form .mktoInstruction,.css-eascc9 .marketo-form .mktoGutter,.css-eascc9 .marketo-form .mktoClear,.css-eascc9 .marketo-form .mktoOffset,.css-eascc9 .marketo-form .mktoAsterix{display:none;}.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden){display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;justify-content:space-between;margin-bottom:30px;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;}@media (max-width:1023.95px){.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden){-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;margin-bottom:0;}}.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden) .mktoFieldDescriptor.checkbox-inside:not(.mktoFormRow--optin) .checkbox-list{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:start;-webkit-box-align:start;-ms-flex-align:start;align-items:start;}.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden) .mktoFieldDescriptor.checkbox-inside:not(.mktoFormRow--optin) .checkbox-list label{-webkit-order:2;-ms-flex-order:2;order:2;color:#111013;font-size:15px;line-height:23px;padding-left:14px;cursor:pointer;font-weight:bold;}.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden) .mktoFieldDescriptor.checkbox-inside:not(.mktoFormRow--optin) .checkbox-list .mktoCheckboxList{-webkit-order:1;-ms-flex-order:1;order:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden) .mktoFieldDescriptor.checkbox-inside:not(.mktoFormRow--optin) .checkbox-list .mktoCheckboxList input{margin:0;margin-left:2px;margin-right:0;width:24px!important;height:24px!important;margin-top:7px;}.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--optin,.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--captcha{margin-bottom:30px;}@media (max-width:1023.95px){.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--optin,.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--captcha{-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}}.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--optin .mktoFormCol,.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--captcha .mktoFormCol{width:100%;margin-top:4px;}.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--optin .mktoFormCol.checkbox-inside,.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--captcha .mktoFormCol.checkbox-inside{width:30px!important;}.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--optin .mktoFieldDescriptor,.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--captcha .mktoFieldDescriptor{position:static;}.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--optin .mktoFormCol:not(.mktoFieldDescriptor),.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--captcha .mktoFormCol:not(.mktoFieldDescriptor){padding-left:14px;}.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--optin .mktoFieldWrap,.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--captcha .mktoFieldWrap{background-color:transparent;position:static;}.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--optin .mktoFieldWrap:not(.checkbox-list),.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--captcha .mktoFieldWrap:not(.checkbox-list){cursor:pointer;}.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--optin .mktoHtmlText,.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--captcha .mktoHtmlText{color:#111013;font-size:15px;line-height:23px;width:100%!important;}.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--optin .mktoHtmlText a,.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--captcha .mktoHtmlText a{color:#473EFF;}.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--optin .mktoCheckboxList,.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--captcha .mktoCheckboxList{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;padding-top:2px;}.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--optin .mktoCheckboxList input,.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--captcha .mktoCheckboxList input{margin-top:4px!important;width:24px!important;height:24px!important;}.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--captcha{margin-bottom:0;margin-top:15px;}.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--captcha .mktoFieldWrap:not(.checkbox-list){cursor:unset;}.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--captcha span{color:#464646;}.css-eascc9 .marketo-form .mktoPlaceholder,.css-eascc9 .marketo-form .mktoFormCol{width:48%;}@media (max-width:1023.95px){.css-eascc9 .marketo-form .mktoPlaceholder,.css-eascc9 .marketo-form .mktoFormCol{width:100%;}}@media (max-width:1023.95px){.css-eascc9 .marketo-form .mktoFormCol{margin-bottom:30px!important;}}.css-eascc9 .marketo-form .number-of-cols-1 .mktoPlaceholder,.css-eascc9 .marketo-form .number-of-cols-1 .mktoFormCol{width:100%;}.css-eascc9 .marketo-form .mktoFieldDescriptor:not(.checkbox-inside) label{display:block;z-index:1;}.css-eascc9 .marketo-form .mktoFieldDescriptor:not(.checkbox-inside) .select-field-wrapper label{z-index:0;}.css-eascc9 .marketo-form .mktoFieldDescriptor:not(.checkbox-inside) input,.css-eascc9 .marketo-form .mktoFieldDescriptor:not(.checkbox-inside) select,.css-eascc9 .marketo-form .mktoFieldDescriptor:not(.checkbox-inside) textarea{border:solid 1px #d1d1d1;width:100%;}.css-eascc9 .marketo-form .mktoFieldDescriptor:not(.checkbox-inside) select{text-indent:1px;text-overflow:'';width:100%!important;border:1px solid #d1d1d1;border-radius:0;color:#000;-o-appearance:none;-ms-appearance:none;-webkit-appearance:none;-moz-appearance:none;-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;appearance:none;}@media (max-width:1023.95px){.css-eascc9 .marketo-form .mktoFieldDescriptor:not(.checkbox-inside) select{width:100%!important;}}.css-eascc9 .marketo-form .mktoFieldDescriptor:not(.checkbox-inside) select::-ms-expand{display:none;}.css-eascc9 .marketo-form .mktoFieldDescriptor:not(.checkbox-inside) select option{border:0;color:#464646;}.css-eascc9 .marketo-form .mktoError{position:absolute!important;left:0!important;top:inherit!important;bottom:-20px!important;color:#f9463c;font-size:12px;right:inherit!important;white-space:nowrap;overflow:hidden;width:100%;}.css-eascc9 .marketo-form .checkbox-inside .mktoError{left:7px!important;top:inherit!important;bottom:-20px!important;width:220px;}@media (max-width:1023.95px){.css-eascc9 .marketo-form .checkbox-inside .mktoError{bottom:5px!important;}}.css-eascc9 .marketo-form .mktoFieldWrap:not(.checkbox-list){background-color:#fff;position:relative;}.css-eascc9 .marketo-form .mktoFieldWrap:not(.checkbox-list).invalid:before,.css-eascc9 .marketo-form .mktoFieldWrap:not(.checkbox-list).valid:before{content:url('/assets/form-images/check.svg');pointer-events:none;position:absolute;right:10px;top:13px;z-index:12;}.css-eascc9 .marketo-form .mktoFieldWrap:not(.checkbox-list).invalid:before{content:url('/assets/form-images/error-outline.svg');}.css-eascc9 .marketo-form .mktoFieldWrap:not(.checkbox-list).select-field-wrapper.invalid:before,.css-eascc9 .marketo-form .mktoFieldWrap:not(.checkbox-list).select-field-wrapper.valid:before{right:30px;}.css-eascc9 .marketo-form .mktoFieldWrap:not(.checkbox-list).textarea-inside{height:80px;}.css-eascc9 .marketo-form .mktoFieldWrap:not(.checkbox-list) .mktoField:not(input[type='checkbox']){padding:20px 30px 1px 8px;font-size:18px;}.css-eascc9 .marketo-form .mktoFieldWrap:not(.checkbox-list) .mktoField:not(input[type='checkbox'], textarea){height:50px;}.css-eascc9 .marketo-form .mktoFieldWrap:not(.checkbox-list) textarea.mktoField{resize:none;height:80px;width:100%;}.css-eascc9 .marketo-form .mktoFieldWrap:not(.checkbox-list) .mktoField.mktoInvalid{border-color:#f9463c;}.css-eascc9 .marketo-form .mktoFieldWrap:not(.checkbox-list) .mktoField.mktoValid{border-color:#45a55c;}.css-eascc9 .marketo-form .mktoFieldWrap:not(.checkbox-list) >.mktoLabel{-webkit-transition:all 0.1s;transition:all 0.1s;position:absolute;left:0;padding-left:10px;padding-right:10px;overflow:hidden;top:10px;font-size:18px;color:#595959;white-space:nowrap;}@media (max-width:1023.95px){.css-eascc9 .marketo-form .mktoFieldWrap:not(.checkbox-list) >.mktoLabel{font-size:14px;top:14px;}}.css-eascc9 .marketo-form .mktoFieldWrap:not(.checkbox-list).date-inside >.mktoLabel,.css-eascc9 .marketo-form .mktoFieldWrap:not(.checkbox-list).invalid >.mktoLabel,.css-eascc9 .marketo-form .mktoFieldWrap:not(.checkbox-list).valid >.mktoLabel{color:#969696;top:0;font-size:14px;}.css-eascc9 .marketo-form .mktoFormCol--emailOptin .mktoFieldWrap.checkbox-list >.mktoLabel{display:none;}.css-eascc9 .marketo-form .grecaptcha-badge{visibility:hidden;}.css-eascc9 .marketo-form #gtx-trans{display:none!important;}.css-eascc9 .marketo-form select:-webkit-autofill,.css-eascc9 .marketo-form select:-webkit-autofill:hover,.css-eascc9 .marketo-form select:-webkit-autofill:focus,.css-eascc9 .marketo-form select:-webkit-autofill:active,.css-eascc9 .marketo-form input:-webkit-autofill,.css-eascc9 .marketo-form input:-webkit-autofill:hover,.css-eascc9 .marketo-form input:-webkit-autofill:focus,.css-eascc9 .marketo-form input:-webkit-autofill:active{-webkit-transition:background-color 5000s ease-in-out 0s;transition:background-color 5000s ease-in-out 0s;}@media (min-width: 1024px){.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden){margin-bottom:24px;}}.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).Additional_Information__c{height:54px;margin-bottom:30px;}.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).Additional_Information__c .mktoFormCol--Additional_Information__c{height:54px;}.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).Additional_Information__c .mktoFormCol--Additional_Information__c .textarea-inside,.css-eascc9 .marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).Additional_Information__c .mktoFormCol--Additional_Information__c textarea.mktoField{height:64px;}.css-eascc9 .marketo-form .mktoPlaceholder,.css-eascc9 .marketo-form .mktoFormCol{width:100%;}@media (min-width: 1024px){.css-eascc9 .marketo-form .mktoPlaceholder,.css-eascc9 .marketo-form .mktoFormCol{width:49%;}}.css-eascc9 .marketo-form .mktoFieldWrap:not(.checkbox-list) .mktoField:not(input[type='checkbox']){font-size:16px;line-height:16px;height:46px;}.css-eascc9 .marketo-form .mktoFieldWrap:not(.checkbox-list).date-inside>.mktoLabel,.css-eascc9 .marketo-form .mktoFieldWrap:not(.checkbox-list).invalid>.mktoLabel,.css-eascc9 .marketo-form .mktoFieldWrap:not(.checkbox-list).valid>.mktoLabel{margin-top:4px;font-size:13px;line-height:13px;}.css-eascc9 .marketo-form .mktoFormRow--optin span{font-size:13px;line-height:13px;}.css-eascc9 .marketo-form .mktoFieldWrap:not(.checkbox-list).select-field-wrapper.invalid:before{right:10px;}.css-eascc9 .marketo-form .mktoFieldWrap:not(.checkbox-list).select-field-wrapper.valid:before{right:10px;}.css-eascc9 .marketo-form .form-standalone.css-195a2qt{padding:48px;}@media (min-width: 1024px){.css-eascc9 .marketo-form .mktoFormRow.mktoFormRow--count-2.mktoFormRow--optin.emailOptin.checkbox-inside.number-of-cols-2 .mktoFormCol:nth-of-type(1){margin-top:0;}.css-eascc9 .marketo-form .mktoFormRow.mktoFormRow--count-2.mktoFormRow--optin.emailOptin.checkbox-inside.number-of-cols-2 .mktoFormCol:nth-of-type(2){margin-top:2px;}}@media (min-width: 840px){.css-eascc9 .marketo-form #emailOptin{margin:0;padding:0;margin-top:0!important;}}@media (max-width: 1023px){.css-eascc9 .marketo-form .mktoButtonRow button{width:unset;}}</style><div class="form css-eascc9"><section class="marketo-form" data-form-id="1823" data-form-first-step-event="marketo_form_step_1" data-form-submitted-event="marketo_form_submitted_email_signup"><style data-emotion="css 1dupba9">.css-1dupba9{margin:0;font-family:var(--headline-font, 'Saira Condensed');font-size:44px;line-height:44px;font-weight:600;margin-bottom:24px;letter-spacing:0em;}@media screen and (max-width: 1025px){.css-1dupba9{font-size:38px;line-height:38px;}}@media screen and (max-width: 767px){.css-1dupba9{font-size:32px;line-height:32px;}}</style><h3 class="MuiTypography-root MuiTypography-h3 form-title css-1dupba9">GET THE LATEST SECURITY UPDATES</h3><div class="required-text"></div><div></div><form class="marketo-form-wrapper" id="mktoForm_1823" data-marketo-form-id="1823" data-form-type-id="11afaf17-371c-41c0-aa16-67ccfd587fed" data-first-step-number-of-rows="0" data-submit-button-text="Sign Up" data-valid-business-email-only="false"></form><div class="confirmation-message "><div><p>Thank you for your submission.</p></div></div><style data-emotion="css 96sfu1">.css-96sfu1{color:#181818;background:#D9AB14;font-family:var(--headline-font, 'Saira Condensed');font-weight:600;font-size:19px;line-height:19px;border-radius:0;overflow:hidden;position:relative;padding:16px;cursor:pointer;-webkit-transition:background-color 0.3s;transition:background-color 0.3s;letter-spacing:0;white-space:normal;z-index:1;transition-property:border;transition-duration:400ms;transition-delay:1s;}.css-96sfu1:after{content:'';position:absolute;top:0;left:-171%;width:170%;height:100%;background:transparent;z-index:-1;border-top:80px solid #ECC134;border-right:90px solid transparent;-webkit-transition:left 0.3s ease-in-out;transition:left 0.3s ease-in-out;}.css-96sfu1:hover{background:#D9AB14;}.css-96sfu1:hover:after{left:0;}.css-96sfu1:before{content:'';position:absolute;top:6px;left:6px;right:6px;bottom:6px;background:#D9AB14;opacity:0;-webkit-transition:none;transition:none;z-index:-1;}.css-96sfu1:disabled,.css-96sfu1[disabled]{opacity:0.4!important;pointer-events:none!important;}.css-96sfu1:focus{outline:none!important;background:transparent!important;box-shadow:0 0 0 3px #D9AB14 inset;overflow:visible!important;}.css-96sfu1:focus:before{opacity:1;}.css-96sfu1:focus:after{display:none;}</style><style data-emotion="css 180sj42">.css-180sj42{font-family:"Roboto","Helvetica","Arial",sans-serif;font-weight:500;font-size:0.875rem;line-height:1.75;letter-spacing:0.02857em;text-transform:uppercase;min-width:64px;padding:6px 8px;border-radius:4px;-webkit-transition:background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;transition:background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;color:#D9AB14;color:#181818;background:#D9AB14;font-family:var(--headline-font, 'Saira Condensed');font-weight:600;font-size:19px;line-height:19px;border-radius:0;overflow:hidden;position:relative;padding:16px;cursor:pointer;-webkit-transition:background-color 0.3s;transition:background-color 0.3s;letter-spacing:0;white-space:normal;z-index:1;transition-property:border;transition-duration:400ms;transition-delay:1s;}.css-180sj42:hover{-webkit-text-decoration:none;text-decoration:none;background-color:rgba(217, 171, 20, 0.04);}@media (hover: none){.css-180sj42:hover{background-color:transparent;}}.css-180sj42.Mui-disabled{color:rgba(0, 0, 0, 0.26);}.css-180sj42:after{content:'';position:absolute;top:0;left:-171%;width:170%;height:100%;background:transparent;z-index:-1;border-top:80px solid #ECC134;border-right:90px solid transparent;-webkit-transition:left 0.3s ease-in-out;transition:left 0.3s ease-in-out;}.css-180sj42:hover{background:#D9AB14;}.css-180sj42:hover:after{left:0;}.css-180sj42:before{content:'';position:absolute;top:6px;left:6px;right:6px;bottom:6px;background:#D9AB14;opacity:0;-webkit-transition:none;transition:none;z-index:-1;}.css-180sj42:disabled,.css-180sj42[disabled]{opacity:0.4!important;pointer-events:none!important;}.css-180sj42:focus{outline:none!important;background:transparent!important;box-shadow:0 0 0 3px #D9AB14 inset;overflow:visible!important;}.css-180sj42:focus:before{opacity:1;}.css-180sj42:focus:after{display:none;}</style><style data-emotion="css 1a09qby">.css-1a09qby{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;background-color:transparent;outline:0;border:0;margin:0;border-radius:0;padding:0;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;vertical-align:middle;-moz-appearance:none;-webkit-appearance:none;-webkit-text-decoration:none;text-decoration:none;color:inherit;font-family:"Roboto","Helvetica","Arial",sans-serif;font-weight:500;font-size:0.875rem;line-height:1.75;letter-spacing:0.02857em;text-transform:uppercase;min-width:64px;padding:6px 8px;border-radius:4px;-webkit-transition:background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;transition:background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;color:#D9AB14;color:#181818;background:#D9AB14;font-family:var(--headline-font, 'Saira Condensed');font-weight:600;font-size:19px;line-height:19px;border-radius:0;overflow:hidden;position:relative;padding:16px;cursor:pointer;-webkit-transition:background-color 0.3s;transition:background-color 0.3s;letter-spacing:0;white-space:normal;z-index:1;transition-property:border;transition-duration:400ms;transition-delay:1s;}.css-1a09qby::-moz-focus-inner{border-style:none;}.css-1a09qby.Mui-disabled{pointer-events:none;cursor:default;}@media print{.css-1a09qby{-webkit-print-color-adjust:exact;color-adjust:exact;}}.css-1a09qby:hover{-webkit-text-decoration:none;text-decoration:none;background-color:rgba(217, 171, 20, 0.04);}@media (hover: none){.css-1a09qby:hover{background-color:transparent;}}.css-1a09qby.Mui-disabled{color:rgba(0, 0, 0, 0.26);}.css-1a09qby:after{content:'';position:absolute;top:0;left:-171%;width:170%;height:100%;background:transparent;z-index:-1;border-top:80px solid #ECC134;border-right:90px solid transparent;-webkit-transition:left 0.3s ease-in-out;transition:left 0.3s ease-in-out;}.css-1a09qby:hover{background:#D9AB14;}.css-1a09qby:hover:after{left:0;}.css-1a09qby:before{content:'';position:absolute;top:6px;left:6px;right:6px;bottom:6px;background:#D9AB14;opacity:0;-webkit-transition:none;transition:none;z-index:-1;}.css-1a09qby:disabled,.css-1a09qby[disabled]{opacity:0.4!important;pointer-events:none!important;}.css-1a09qby:focus{outline:none!important;background:transparent!important;box-shadow:0 0 0 3px #D9AB14 inset;overflow:visible!important;}.css-1a09qby:focus:before{opacity:1;}.css-1a09qby:focus:after{display:none;}</style><button class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium css-1a09qby" tabindex="0" type="button" id="form-temp-button" aria-hidden="true">Submit</button></section></div></div></div></div></div></div></div></div></div></div></div><style data-emotion="css 1pba88e">.css-1pba88e{position:relative;scroll-margin:96px;padding:64px 0;background:#EFEFEF;}.css-1pba88e:has(#empty){display:none;}.css-1pba88e .headline{margin-bottom:40px;}@media (min-width:1024px){.css-1pba88e .headline{margin-bottom:64px;}}</style><div class="sw-styled-section cmp-page-section css-1pba88e" id="cmp-page-section-ccd8d6ee"><div class="css-nkhozk"><div class="css-0"><div class="cmp-form-standalone css-195a2qt" id="cmp-form-standalone-54e5ef6f"><div class="form css-eascc9"><section class="marketo-form" data-form-id="1784" data-form-first-step-event="marketo_form_step_1" data-form-submitted-event="marketo_form_submitted"><h3 class="MuiTypography-root MuiTypography-h3 form-title css-1dupba9">Talk with an Expert</h3><div class="required-text"></div><div></div><form class="marketo-form-wrapper" id="mktoForm_1784" data-marketo-form-id="1784" data-form-type-id="613d9aac-9a12-4cf5-b2f5-6c7a8128aefd" data-first-step-number-of-rows="0" data-submit-button-text="Talk with an Expert" data-valid-business-email-only="false"></form><div class="confirmation-message "><div><p>Thank you for submitting the form! We have received your request. A Secureworks team member will contact you within one business day.</p></div></div><button class="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium css-1a09qby" tabindex="0" type="button" id="form-temp-button" aria-hidden="true">Submit</button></section></div></div></div></div></div><style data-emotion="css ik0uc5">.css-ik0uc5{position:relative;scroll-margin:96px;padding:88px 0;background:#ffffff;}.css-ik0uc5:has(#empty){display:none;}.css-ik0uc5 .headline{margin-bottom:40px;}@media (min-width:1024px){.css-ik0uc5{padding:168px 0;}.css-ik0uc5 .headline{margin-bottom:40px;}}</style><div class="sw-styled-section cmp-page-section css-ik0uc5" id="cmp-page-section-71237a83"><div class="css-nkhozk"><div class="css-0"><div class="MuiContainer-root sw-custom-container css-11laweg"><style data-emotion="css d1dyqd">@media (max-width:1023.95px){.css-d1dyqd .slick-track{display:-webkit-box!important;display:-webkit-flex!important;display:-ms-flexbox!important;display:flex!important;}.css-d1dyqd .slick-slide{height:inherit!important;}.css-d1dyqd .slick-slide>div{height:100%;}.css-d1dyqd .slick-slide>div .carousel-slide{height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;padding:0 8px;}}.css-d1dyqd .MediaCarousel_title{font-family:'Saira Condensed';font-weight:600;font-size:32px;line-height:32px;text-transform:uppercase;color:#181818;text-align:center;margin:0;}@media (min-width:1024px){.css-d1dyqd .MediaCarousel_title{font-size:44px;line-height:44px;}}.css-d1dyqd .MediaCarousel_title-controller-bar-container{padding-bottom:24px;padding-right:4px;border-bottom:1px solid rgba(80, 80, 80, 1);}@media (min-width:1024px){.css-d1dyqd .MediaCarousel_title-controller-bar-container{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;justify-content:space-between;}}.css-d1dyqd .MediaCarousel_title-controller-bar-container .MediaCarousel_control-bar-container{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}</style><div class="cmp-media-carousel css-d1dyqd" id="cmp-media-carousel-eab0c762"><div class="MediaCarousel_title-controller-bar-container"><h2 class="MediaCarousel_title">Additional Resources</h2></div><style data-emotion="css pwwu8s">.css-pwwu8s{margin-top:48px;}@media (min-width:1024px){.css-pwwu8s{margin-top:72px;}.css-pwwu8s .slick-slider{margin-left:-12px;margin-right:-12px;}.css-pwwu8s .slick-track{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:stretch;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;}.css-pwwu8s .slick-track .slick-slide{padding-left:12px;padding-right:12px;-webkit-align-self:stretch;-ms-flex-item-align:stretch;align-self:stretch;height:auto!important;margin:0;}.css-pwwu8s .slick-track .slick-slide >div{height:100%;}}</style><div class="css-pwwu8s"><div class="slick-slider slick-initialized" dir="ltr"><div class="slick-list"><div class="slick-track" style="width:300%;left:0%"><div data-index="0" class="slick-slide slick-active slick-current" tabindex="-1" aria-hidden="false" style="outline:none;width:33.333333333333336%"><div><div class="cmp-carousel-slide css-1nq6dng" id="cmp-carousel-slide-626bf94b"><div class="cmp-hero-image sw-component  css-1vq854h ev8bq9m6" id="cmp-hero-image-undefined"><div class="css-1jjjg2j ev8bq9m9"><picture class=" css-tin539"><source media="(-webkit-min-device-pixel-ratio: 1.25), (min-resolution: 1.25dppx), (min-resolution: 120dpi)" srcSet="https://dam.secureworks.com/transform/9a08d532-71c6-455c-809f-bdfb03543277/cyberpredictions24_4-3-xl-1?io=transform:fit,width:870,height:490"/><source media="(-webkit-min-device-pixel-ratio: 1.25), (min-resolution: 1.25dppx), (min-resolution: 120dpi), (min-width: 768px)" srcSet="https://dam.secureworks.com/transform/9a08d532-71c6-455c-809f-bdfb03543277/cyberpredictions24_4-3-xl-1?io=transform:fit,width:1284,height:660"/><source media="(max-width: 768px)" srcSet="https://dam.secureworks.com/transform/9a08d532-71c6-455c-809f-bdfb03543277/cyberpredictions24_4-3-xl-1?io=transform:fit,width:435,height:245"/><img width="3200" height="2400" alt="cyberpredictions24_4-3-xl (1)" asset="[object Object]" loading="lazy" class="css-1xx3izp ev8bq9m8" src="https://dam.secureworks.com/transform/9a08d532-71c6-455c-809f-bdfb03543277/cyberpredictions24_4-3-xl-1?io=transform:fit,width:642,height:330"/></picture></div></div><div class="MuiPaper-root MuiPaper-outlined MuiPaper-rounded MuiCard-root MediaCarouselItem_cardContent css-1okfn8i"><span class="eyebrow css-yi334l">Blog</span><h3 class="title">Three Cybersecurity Platform Predictions for 2024</h3><a class="styled-link css-1clztqq" href="/blog/three-cybersecurity-platform-predictions-for-2024">Read Now</a><a id="media-link" href="/blog/three-cybersecurity-platform-predictions-for-2024"></a></div></div></div></div><div data-index="1" class="slick-slide" tabindex="-1" aria-hidden="true" style="outline:none;width:33.333333333333336%"><div><div class="cmp-carousel-slide css-1nq6dng" id="cmp-carousel-slide-6143c953"><div class="cmp-hero-image sw-component  css-1vq854h ev8bq9m6" id="cmp-hero-image-undefined"><div class="css-1jjjg2j ev8bq9m9"><picture class=" css-tin539"><source media="(-webkit-min-device-pixel-ratio: 1.25), (min-resolution: 1.25dppx), (min-resolution: 120dpi)" srcSet="https://dam.secureworks.com/transform/16x9_Image-Standard_1284x722/eac71bd6-462b-496e-aea3-f47a92bb2092/Businesswoman-Using-Laptop-in-Modern-Environment?io=transform:fit,width:870,height:490"/><source media="(-webkit-min-device-pixel-ratio: 1.25), (min-resolution: 1.25dppx), (min-resolution: 120dpi), (min-width: 768px)" srcSet="https://dam.secureworks.com/transform/16x9_Image-Standard_1284x722/eac71bd6-462b-496e-aea3-f47a92bb2092/Businesswoman-Using-Laptop-in-Modern-Environment?io=transform:fit,width:1284,height:660"/><source media="(max-width: 768px)" srcSet="https://dam.secureworks.com/transform/16x9_Image-Standard_1284x722/eac71bd6-462b-496e-aea3-f47a92bb2092/Businesswoman-Using-Laptop-in-Modern-Environment?io=transform:fit,width:435,height:245"/><img width="1284" height="722" alt="Young business woman holding smartphone with a computer generated background. Innovation, metaverse and futuristic concepts." asset="[object Object]" loading="lazy" class="css-1xx3izp ev8bq9m8" src="https://dam.secureworks.com/transform/16x9_Image-Standard_1284x722/eac71bd6-462b-496e-aea3-f47a92bb2092/Businesswoman-Using-Laptop-in-Modern-Environment?io=transform:fit,width:642,height:330"/></picture></div></div><div class="MuiPaper-root MuiPaper-outlined MuiPaper-rounded MuiCard-root MediaCarouselItem_cardContent css-1okfn8i"><span class="eyebrow css-yi334l">Blog</span><h3 class="title">Five Keys to Maximizing MDR Value</h3><a class="styled-link css-1clztqq" href="/blog/five-keys-to-maximizing-mdr-value">Read Now</a><a id="media-link" href="/blog/five-keys-to-maximizing-mdr-value"></a></div></div></div></div><div data-index="2" class="slick-slide" tabindex="-1" aria-hidden="true" style="outline:none;width:33.333333333333336%"><div><div class="cmp-carousel-slide css-1nq6dng" id="cmp-carousel-slide-4dba60d7"><div class="cmp-hero-image sw-component  css-1vq854h ev8bq9m6" id="cmp-hero-image-undefined"><div class="css-1jjjg2j ev8bq9m9"><picture class=" css-tin539"><source media="(-webkit-min-device-pixel-ratio: 1.25), (min-resolution: 1.25dppx), (min-resolution: 120dpi)" srcSet="https://dam.secureworks.com/transform/16x9_Image-Standard_1284x722/a0ee8f5e-c763-43f9-827e-020fa9ced487/Hand-Touching-a-Modern-Graphic-Wall?io=transform:fit,width:870,height:490"/><source media="(-webkit-min-device-pixel-ratio: 1.25), (min-resolution: 1.25dppx), (min-resolution: 120dpi), (min-width: 768px)" srcSet="https://dam.secureworks.com/transform/16x9_Image-Standard_1284x722/a0ee8f5e-c763-43f9-827e-020fa9ced487/Hand-Touching-a-Modern-Graphic-Wall?io=transform:fit,width:1284,height:660"/><source media="(max-width: 768px)" srcSet="https://dam.secureworks.com/transform/16x9_Image-Standard_1284x722/a0ee8f5e-c763-43f9-827e-020fa9ced487/Hand-Touching-a-Modern-Graphic-Wall?io=transform:fit,width:435,height:245"/><img width="1284" height="722" alt="manipulating big data" asset="[object Object]" loading="lazy" class="css-1xx3izp ev8bq9m8" src="https://dam.secureworks.com/transform/16x9_Image-Standard_1284x722/a0ee8f5e-c763-43f9-827e-020fa9ced487/Hand-Touching-a-Modern-Graphic-Wall?io=transform:fit,width:642,height:330"/></picture></div></div><div class="MuiPaper-root MuiPaper-outlined MuiPaper-rounded MuiCard-root MediaCarouselItem_cardContent css-1okfn8i"><span class="eyebrow css-yi334l">Blog</span><h3 class="title">Unravelling the Attack Surface of AI Systems</h3><a class="styled-link css-1clztqq" href="/blog/unravelling-the-attack-surface-of-ai-systems">Read Now</a><a id="media-link" href="/blog/unravelling-the-attack-surface-of-ai-systems"></a></div></div></div></div></div></div></div><style data-emotion="css 1kschpl">.css-1kschpl{margin:auto;margin-top:32px;}</style><style data-emotion="css qs29ns">.css-qs29ns{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;bottom:-40px;width:100%;max-width:278px;-webkit-background-position:bottom left,top left,top right,bottom right;background-position:bottom left,top left,top right,bottom right;-webkit-background-size:50% 50%;background-size:50% 50%;background-repeat:no-repeat;margin:auto;margin-top:32px;}.css-qs29ns .SliderControlBar_item-wrapper{width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;padding-left:25%;padding-right:25%;}.css-qs29ns .SliderControlBar_item-wrapper a{width:100%;max-width:32px;height:18px;padding-top:6px;}.css-qs29ns .SliderControlBar_item-wrapper a:not(:last-of-type){margin-right:8px;}.css-qs29ns .SliderControlBar_item-wrapper a:focus{outline:none;}.css-qs29ns .SliderControlBar_item-wrapper a:focus .e1s86taw1{outline:3px solid #D9AB14;}</style><div class="css-qs29ns e1s86taw0"><div class="SliderControlBar_item-wrapper"><a tabindex="0"><style data-emotion="css 1265yhi">.css-1265yhi{position:relative;top:2px;max-width:38px;height:6px;cursor:pointer;background:#D9AB14;-webkit-flex:1;-ms-flex:1;flex:1;}</style><div class="css-1265yhi e1s86taw1"></div></a><a tabindex="0"><style data-emotion="css 1skmhg1">.css-1skmhg1{position:relative;top:2px;max-width:38px;height:6px;cursor:pointer;background:rgb(196 196 196 / 30%);-webkit-flex:1;-ms-flex:1;flex:1;}</style><div class="css-1skmhg1 e1s86taw1"></div></a><a tabindex="0"><div class="css-1skmhg1 e1s86taw1"></div></a></div></div></div></div></div></div></div></div></div><style data-emotion="css xe111t">.css-xe111t{background:#111013;padding-left:8px;padding-right:8px;}</style><footer id="cmp-footer-a1fbb96a" class="cmp-footer css-xe111t"><style data-emotion="css 1mf9k2v">.css-1mf9k2v{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.css-1mf9k2v h3{margin:0;}.css-1mf9k2v ul{padding:0;margin:0;}.css-1mf9k2v ul li{list-style-type:none;}.css-1mf9k2v ul li a{-webkit-text-decoration:none;text-decoration:none;}</style><style data-emotion="css 1p7bihh">.css-1p7bihh{max-width:1356px;margin-bottom:0;min-height:0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}@media (max-width:767.95px){.css-1p7bihh.stay-informed{padding-left:0;padding-right:0;}@media (max-width:767.95px){.css-1p7bihh.stay-informed .article-content{padding:0;}}}@media (max-width:1023.95px){.css-1p7bihh .threat-profile-article-content{padding-left:10px;}}.css-1p7bihh h3{margin:0;}.css-1p7bihh ul{padding:0;margin:0;}.css-1p7bihh ul li{list-style-type:none;}.css-1p7bihh ul li a{-webkit-text-decoration:none;text-decoration:none;}</style><style data-emotion="css cz5mdy">.css-cz5mdy{width:100%;margin-left:auto;box-sizing:border-box;margin-right:auto;display:block;padding-left:16px;padding-right:16px;max-width:1356px;margin-bottom:0;min-height:0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}@media (min-width:1025px){.css-cz5mdy{padding-left:24px;padding-right:24px;}}@media (max-width:767.95px){.css-cz5mdy.stay-informed{padding-left:0;padding-right:0;}@media (max-width:767.95px){.css-cz5mdy.stay-informed .article-content{padding:0;}}}@media (max-width:1023.95px){.css-cz5mdy .threat-profile-article-content{padding-left:10px;}}.css-cz5mdy h3{margin:0;}.css-cz5mdy ul{padding:0;margin:0;}.css-cz5mdy ul li{list-style-type:none;}.css-cz5mdy ul li a{-webkit-text-decoration:none;text-decoration:none;}</style><nav class="MuiContainer-root css-cz5mdy"><style data-emotion="css h0s7mu">.css-h0s7mu{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;}@media (min-width:1024px){.css-h0s7mu{-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-column-gap:5%;column-gap:5%;padding-top:24px;}}</style><div class="css-h0s7mu"><style data-emotion="css piulf2">.css-piulf2{width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:flex-start;-webkit-box-align:flex-start;-ms-flex-align:flex-start;align-items:flex-start;margin-top:64px;text-align:center;}@media (min-width:1536px){.css-piulf2{width:inherit;}}@media (min-width:1536px){.css-piulf2{margin-top:48px;}}.css-piulf2 .cmp-call-to-action{text-align:left;}.css-piulf2 .cmp-call-to-action p{font-family:var(--body-font, 'Figtree');font-weight:400;font-size:14px;line-height:150%;letter-spacing:0.02em;color:#ffffff;opacity:0.7;max-width:281px;margin-bottom:0;margin-top:32px;}.css-piulf2 .cmp-call-to-action a{margin-top:24px;display:block;color:#ffffff;text-transform:uppercase;-webkit-text-decoration:none;text-decoration:none;}.css-piulf2 .cmp-call-to-action a:hover{color:var(--eyebrow-color, #D9AB14);}</style><div class="css-piulf2"><a title="Secureworks, Inc." class="cmp-image-link" id="cmp-image-link-64549d7d" href="/"><img alt="Secureworks a SOPHOS company" loading="lazy" width="183" height="44" decoding="async" data-nimg="1" style="color:transparent" srcSet="/-/jssmedia/images/logos/secureworks-a-sophos-company-logo-lockup-white-195x44-2.png?h=44&amp;iar=0&amp;w=183&amp;hash=26EE0FC0305D6B1E9E4AF31B13E6F68B&amp;mw=256 1x, /-/jssmedia/images/logos/secureworks-a-sophos-company-logo-lockup-white-195x44-2.png?h=44&amp;iar=0&amp;w=183&amp;hash=26EE0FC0305D6B1E9E4AF31B13E6F68B&amp;mw=384 2x" src="/-/jssmedia/images/logos/secureworks-a-sophos-company-logo-lockup-white-195x44-2.png?h=44&amp;iar=0&amp;w=183&amp;hash=26EE0FC0305D6B1E9E4AF31B13E6F68B&amp;mw=384"/></a><style data-emotion="css bhojy9">.css-bhojy9{text-align:center;margin-top:32px;}.css-bhojy9 ul{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;gap:24px;}.css-bhojy9 ul li a{color:#ffffff;-webkit-transition:all 0.3s;transition:all 0.3s;font-size:24px;}.css-bhojy9 ul li a:hover{opacity:0.7;}.css-bhojy9 ul li a:focus{outline:3px solid #D9AB14;}.css-bhojy9 a:not(:last-of-type){margin-right:30px;}.css-bhojy9 a img{-webkit-transition:all 0.3s;transition:all 0.3s;}.css-bhojy9 a:hover img{opacity:0.7;}.css-bhojy9 a:focus img{outline:3px solid #D9AB14;}@media (min-width:1024px){.css-bhojy9{margin-top:48px;}}</style><div class="cmp-social-network-links css-bhojy9" id="cmp-social-network-links-f7fbbe75"><ul class="cmp-link-group" id="cmp-link-group-f7fbbe75"><li><a href="https://www.linkedin.com/company/secureworks" title="LinkedIn"><svg aria-hidden="true" focusable="false" data-prefix="fab" data-icon="linkedin-in" class="svg-inline--fa fa-linkedin-in  css-1pp7t2h" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M100.28 448H7.4V148.9h92.88zM53.79 108.1C24.09 108.1 0 83.5 0 53.8a53.79 53.79 0 0 1 107.58 0c0 29.7-24.1 54.3-53.79 54.3zM447.9 448h-92.68V302.4c0-34.7-.7-79.2-48.29-79.2-48.29 0-55.69 37.7-55.69 76.7V448h-92.78V148.9h89.08v40.8h1.3c12.4-23.5 42.69-48.3 87.88-48.3 94 0 111.28 61.9 111.28 142.3V448z"></path></svg></a></li><li><a href="https://x.com/secureworks" title="Twitter"><svg aria-hidden="true" focusable="false" data-prefix="fab" data-icon="x-twitter" class="svg-inline--fa fa-x-twitter x-twitter css-1pp7t2h" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="currentColor" d="M389.2 48h70.6L305.6 224.2 487 464H345L233.7 318.6 106.5 464H35.8L200.7 275.5 26.8 48H172.4L272.9 180.9 389.2 48zM364.4 421.8h39.1L151.1 88h-42L364.4 421.8z"></path></svg></a></li><li><a href="https://www.facebook.com/secureworks" title="Facebook"><svg aria-hidden="true" focusable="false" data-prefix="fab" data-icon="facebook-f" class="svg-inline--fa fa-facebook-f facebook css-1pp7t2h" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><path fill="currentColor" d="M80 299.3V512H196V299.3h86.5l18-97.8H196V166.9c0-51.7 20.3-71.5 72.7-71.5c16.3 0 29.4 .4 37 1.2V7.9C291.4 4 256.4 0 236.2 0C129.3 0 80 50.5 80 159.4v42.1H14v97.8H80z"></path></svg></a></li><li><a href="https://github.com/secureworks" title="GitHub"><svg aria-hidden="true" focusable="false" data-prefix="fab" data-icon="github" class="svg-inline--fa fa-github github css-1pp7t2h" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 496 512"><path fill="currentColor" d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"></path></svg></a></li></ul></div><div class="cmp-call-to-action" id="cmp-call-to-action-ce8d16fe"><p>Get the latest updates and news from Secureworks.</p><a class="css-1clztqq" href="/subscribe">Subscribe Now</a></div></div><style data-emotion="css o38lzb">.css-o38lzb{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-flex:1;-ms-flex:1;flex:1;}@media (min-width:1024px){.css-o38lzb{-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-column-gap:5%;column-gap:5%;}}.css-o38lzb h2{font-family:var(--headline-font, 'Saira Condensed');font-weight:600;font-size:19px;text-transform:uppercase;color:#ffffff;line-height:19px;margin-top:0;margin-bottom:0;}@media (min-width:1024px){.css-o38lzb h2{margin-top:48px;}}.css-o38lzb h2:after{content:'';display:block;width:100%;height:2px;background-color:#D1D1D1;margin-top:16px;margin-bottom:16px;}.css-o38lzb h3{font-family:var(--body-font, 'Figtree');font-weight:700;font-size:13px;line-height:130%;letter-spacing:0.01em;color:#ffffff;margin-bottom:8px;}.css-o38lzb ul{padding:0;margin-bottom:24px;}.css-o38lzb ul li{line-height:17px;margin-bottom:10px;}.css-o38lzb ul li>ul{margin-bottom:24px;}.css-o38lzb ul a{font-family:var(--body-font, 'Figtree');font-size:13px;line-height:17px;font-weight:400;letter-spacing:0.01em;color:#ffffff;opacity:0.7;-webkit-transition:opacity 0.3s;transition:opacity 0.3s;}.css-o38lzb ul a:hover{opacity:1;color:#ffffff;}@media (min-width:1024px){.css-o38lzb ul{-webkit-column-count:inherit;column-count:inherit;}}</style><div class="css-o38lzb"><style data-emotion="css djp6ay">.css-djp6ay{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-right:-32px;}@media (min-width:1024px){.css-djp6ay{display:contents;margin-right:inherit;}}.css-djp6ay ul{padding:0;}.css-djp6ay ul li{line-height:17px;margin-bottom:10px;}.css-djp6ay ul a{font-family:var(--body-font, 'Figtree');font-size:13px;line-height:17px;font-weight:400;letter-spacing:0.01em;color:#ffffff;opacity:0.7;-webkit-transition:opacity 0.3s;transition:opacity 0.3s;}.css-djp6ay ul a:hover{opacity:1;color:#ffffff;}@media (min-width:1024px){.css-djp6ay ul{-webkit-column-count:inherit;column-count:inherit;}}</style><div spacing="4" class="css-djp6ay"><div><h2>Platform</h2><div><h3>Detection &amp; Response</h3><ul class="cmp-link-group" id="cmp-link-group-7a6b0a0a"><li><a href="/products/xdr">XDR</a></li><li><a href="/products/log-management">Log Management</a></li><li><a href="/resources/tl-mitre-adversary-software-coverage-tool">MITRE ATT&amp;CK Coverage</a></li></ul></div><div><h3>Network Security</h3><ul class="cmp-link-group" id="cmp-link-group-7a6b0a0a"><li><a href="/products/ndr">NDR</a></li></ul></div><div><h3>Endpoint Security</h3><ul class="cmp-link-group" id="cmp-link-group-7a6b0a0a"><li><a href="/products/edr">EDR</a></li><li><a href="/products/ngav">NGAV</a></li></ul></div><div><h3>Identity Security</h3><ul class="cmp-link-group" id="cmp-link-group-7a6b0a0a"><li><a href="/products/idr">IDR</a></li></ul></div><div><h3>OT Security</h3><ul class="cmp-link-group" id="cmp-link-group-7a6b0a0a"><li><a href="/services/ot">Operational Technology</a></li></ul></div><div><h3>Vulnerability Management</h3><ul class="cmp-link-group" id="cmp-link-group-7a6b0a0a"><li><a href="/products/vdr">Vulnerability Risk Prioritization</a></li></ul></div></div><div><h2>Why Secureworks</h2><ul class="cmp-link-group" id="cmp-link-group-7a6b0a0a"><li><a href="/about/why-secureworks">Why Secureworks</a></li><li><a href="/about/customers">Customer Trust</a></li><li><a href="/about/why-secureworks/competition">Compare Secureworks</a></li><li><a href="/about/why-secureworks/at-your-side">At Your Side</a></li><li><a href="/services/managedxdr/calculator">ROI Calculator</a></li><li><a href="/about/why-secureworks/ai">Artificial Intelligence</a></li><li><a href="/legal/corporate-responsibility">Corporate Responsibility</a></li><li><a href="/about">Corporate Overview</a></li><li><a href="/about/counter-threat-unit">Counter Threat Unit</a></li></ul></div><div><h2>Services</h2><div><h3>Managed Detection &amp; Response</h3><ul class="cmp-link-group" id="cmp-link-group-985bf17d"><li><a href="/services/managedxdr">MDR Overview</a></li><li><a href="/services/threat-hunting">Threat Hunting</a></li><li><a href="/services/ot">MDR for OT</a></li><li><a href="/services/managedxdr/microsoft">MDR for Microsoft</a></li></ul></div><div><h3>Consulting</h3><ul class="cmp-link-group" id="cmp-link-group-985bf17d"><li><a href="/services/consulting">Consulting Services Overview</a></li><li><a href="/services/risk">Risk Assessment</a></li><li><a href="/services/security-preparedness">Security Preparedness</a></li><li><a href="/services/resiliency-testing">Resiliency Testing</a></li></ul></div><div><h3>Professional Services</h3><ul class="cmp-link-group" id="cmp-link-group-985bf17d"><li><a href="/services/professional-services">Professional Services Overview</a></li><li><a href="/services/onboarding">Taegis Onboarding</a></li><li><a href="/services/steady-state">Steady State Services</a></li></ul></div><div><h3>Incident Response</h3><ul class="cmp-link-group" id="cmp-link-group-985bf17d"><li><a href="/services/emergency-incident-response">About Emergency Incident Response</a></li><li><a href="/contact/emergency-response">Emergency Breach Hotline</a></li></ul></div></div><div><h2>Solutions</h2><div><h3>Industries</h3><ul class="cmp-link-group" id="cmp-link-group-985bf17d"><li><a href="/solutions/industries/education">Education Industry</a></li><li><a href="/solutions/industries/financial">Financial Industry</a></li><li><a href="/solutions/industries/manufacturing">Manufacturing Industry</a></li></ul></div><div><h3>Need</h3><ul class="cmp-link-group" id="cmp-link-group-985bf17d"><li><a href="/solutions/need/security-maturity">Accelerate Security Maturity</a></li><li><a href="/solutions/need/tech-consolidation">Consolidate Security Tools</a></li><li><a href="/solutions/need/microsoft">Microsoft Security</a></li><li><a href="/solutions/need/monitor-it-ot">Monitor IT and OT</a></li><li><a href="/solutions/need/reduce-teams-burden">Reduce Teams Burden</a></li></ul></div></div><div><h2>Resources</h2><ul class="cmp-link-group" id="cmp-link-group-10172915"><li><a href="/blog">Blog</a></li><li><a href="/glossary">Cybersecurity Glossary</a></li><li><a href="/resources">Resource Library</a></li><li><a href="/resources?tags=Case+Study">Case Studies</a></li><li><a href="/resources?tags=Data+Sheet">Data Sheets</a></li><li><a href="/resources?tags=Report">Industry Reports</a></li><li><a href="/about/in-the-news">In the News</a></li><li><a href="/centers">Knowledge Center Library</a></li><li><a href="/about/events">Live Events</a></li><li><a href="/research">Threat Resource Library</a></li><li><a href="/research/threat-profiles">Threat Profiles</a></li><li><a href="/resources?tags=White+Paper">White Papers</a></li><li><a href="/resources?tags=Webinar">Webinars</a></li><li><a href="/resources?tags=Podcast">Podcasts</a></li><li><a href="/resources?tags=Video">Videos</a></li></ul></div><div><h2>Get In Touch</h2><ul class="cmp-link-group" id="cmp-link-group-10172915"><li><a href="/contact/emergency-response">Experiencing a Breach</a></li><li><a href="/contact">Contact</a></li><li><a href="/customer-support">Support</a></li><li><a href="https://portal.secureworks.com/portal/loginIDP">Login</a></li></ul></div></div></div></div><style data-emotion="css 1lmbxi1">.css-1lmbxi1{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;border-top:3px solid rgb(196 196 196 / 16%);margin-top:50px;padding-top:20px;padding-bottom:23px;}.css-1lmbxi1 p{-webkit-order:2;-ms-flex-order:2;order:2;width:100%;margin:0;font-size:12px;letter-spacing:0.02em;color:#ffffff;font-family:var(--body-font, 'Figtree');text-align:left;margin-top:40px;}@media (min-width:1024px){.css-1lmbxi1 p{width:inherit;-webkit-order:1;-ms-flex-order:1;order:1;margin-top:0;text-align:center;}}.css-1lmbxi1 ul{text-align:left;margin-top:0;margin-left:0;-webkit-flex:1;-ms-flex:1;flex:1;-webkit-order:1;-ms-flex-order:1;order:1;}@media (min-width:1024px){.css-1lmbxi1 ul{-webkit-order:2;-ms-flex-order:2;order:2;}}@media (max-width:1023.95px){.css-1lmbxi1 ul{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-flex-wrap:wrap;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;}}.css-1lmbxi1 ul li{display:inline-block;margin-top:11px;}@media (max-width:1023.95px){.css-1lmbxi1 ul li{-webkit-flex:50%;-ms-flex:50%;flex:50%;max-width:200px;}}@media (min-width:1024px){.css-1lmbxi1 ul li{padding-left:10px;padding-right:10px;}.css-1lmbxi1 ul li:not(:last-of-type){border-right:1px solid rgb(255 255 255 / 20%);}}.css-1lmbxi1 ul li a{font-family:var(--body-font, 'Figtree');font-size:12px;letter-spacing:0.02em;color:#ffffff;}.css-1lmbxi1 ul li a:hover{color:#ffffff;}@media (min-width:1024px){.css-1lmbxi1 ul{text-align:right;}.css-1lmbxi1 ul li:last-of-type{padding-right:0;}}@media (min-width:1024px){.css-1lmbxi1{-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:baseline;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;margin-top:68px;padding-bottom:34px;}}</style><div class="css-1lmbxi1"><p>©<!-- -->2025 Secureworks, Inc.</p><ul class="cmp-link-group" id="cmp-link-group-717d80a7"><li><a href="/legal/privacy-policy">Privacy Policy</a></li><li><a href="/modern-slavery-and-human-trafficking-statement">Supply Chain Transparency</a></li><li><a href="/legal/terms-conditions">Terms and Conditions</a></li><li><a href="/legal/accessibility-statement">Accessibility Statement</a></li><li><a href="https://pages.secureworks.com/UnsubscribePage.html?mkt_unsubscribe=1">Unsubscribe</a></li><li><a href="javascript:void(0);return false;" class="optanon-toggle-display">Cookie Settings</a></li></ul></div></nav></footer><div><!-- 85974c49b-2 --></div></div></div><script id="__NEXT_DATA__" type="application/json" nonce="MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj">{"props":{"pageProps":{"site":{"name":"swxp-rendering","hostName":"localhost|swxp.rendering.localhost|uat-www.secureworks.com|dev-www.secureworks.com|prod-www.secureworks.com|www.secureworks.com|secureworks.com|dellsecureworks.de|secureworks.co.uk|secureworks.com.au|www.dellsecureworks.de|www.secureworks.co.uk|www.secureworks.com.au","language":"en","jssAppName":"swxp-rendering","jssLayoutServiceConfig":"sxa-jss"},"locale":"en","layoutData":{"sitecore":{"context":{"pageEditing":false,"site":{"name":"swxp-rendering"},"pageState":"normal","language":"en","itemPath":"/research/darktortilla-malware-analysis","node":{"name":"CD-785974C49B-2"},"authorDefaults":{"authorImage":"/-/media/images/author/author-placeholder.svg","authorDetailLink":"/author","landingPageLink":""},"fallbackLanguageCanonicalUrl":{"displayFallbackLanguageCanonicalUrl":false}},"route":{"name":"darktortilla malware analysis","displayName":"darktortilla malware analysis","fields":{"MetaTitle":{"value":"DarkTortilla Malware Analysis"},"NoFollow":{"value":false},"ExcludeFromSearch":{"value":false},"NoIndex":{"value":false},"GatedRequirementText":{"value":""},"GatedSuccessMessage":{"value":""},"GatedTitle":{"value":""},"GatedDownloadButtonText":{"value":""},"GatedDownloadMessage":{"value":""},"GatedPdfFile":{"value":null},"Gated":{"value":false},"GatedLink":{"value":{"href":""}},"GatedVideoId":{"value":""},"GatedVideoMessage":{"value":""},"GatedVideoTitle":{"value":""},"GatedVideoType":{"id":"971f4491-d4a6-42bf-abc8-9d305797ca0c","url":"/sitecore/content/shared/lookups/video-platforms/vimeo","name":"Vimeo","displayName":"Vimeo","fields":{"Value":{"value":"vimeo"}}},"Summary":{"value":""},"Eyebrow":{"value":"Threat Analysis"},"Icon":{"value":{}},"Image":{"value":{"src":"http://www.secureworks.com/-/media/images/thumbnails/blog/thing-keyboard-02.jpg?h=722\u0026iar=0\u0026w=1284\u0026hash=3EB40DA8D7DC106CD65E005A469CF61C","alt":"keyboard","width":"1284","height":"722","asset":null}},"Link":{"value":{"href":"","asset":null}},"ShortTitle":{"value":""},"Subtitle":{"value":""},"Title":{"value":"DarkTortilla Malware Analysis"},"Body":{"value":"\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eDarkTortilla is a complex and highly configurable .NET-based \u003ca href=\"https://blog.malwarebytes.com/cybercrime/malware/2017/03/explained-packer-crypter-and-protector/\"\u003ecrypter\u003c/a\u003e that has \u003ca href=\"https://blog.malwarebytes.com/threat-analysis/2015/08/rainbows-steganography-and-malware-in-a-new-net-cryptor/\"\u003epossibly\u003c/a\u003e been active since at least August 2015. It typically delivers popular information stealers and remote access trojans (RATs) such as AgentTesla, AsyncRat, NanoCore, and RedLine. While it appears to primarily deliver commodity malware, Secureworks\u0026reg; Counter Threat Unit\u0026trade; (CTU) researchers identified DarkTortilla samples delivering targeted payloads such as Cobalt Strike and Metasploit. It can also deliver \"addon packages\" such as additional malicious payloads, benign decoy documents, and executables. It features robust anti-analysis and anti-tamper controls that can make detection, analysis, and eradication challenging.\u003c/p\u003e\n\u003cp\u003eFrom January 2021 through May 2022, an average of 93 unique DarkTortilla samples per week were uploaded to the VirusTotal analysis service. Code similarities suggest possible links between DarkTortilla and other malware: a \u003ca href=\"https://github.com/malwares/Crypter/tree/master/%5BC%23%5D%20The%20RATs%20Crew%20Crypter\"\u003ecrypter\u003c/a\u003e operated by the \u003ca href=\"https://wiki.hackforums.net/RATs_Crew\"\u003eRATs Crew\u003c/a\u003e threat group, which was active between 2008 and 2012, and the \u003ca href=\"https://www.gosecure.net/blog/2021/11/02/new-malware-gameloader-in-discord-malspam-campaign-identified-by-gosecure-titan-labs/\"\u003eGameloader\u003c/a\u003e malware that emerged in 2021.\u003c/p\u003e\n\u003ch2\u003eDelivery\u003c/h2\u003e\n\u003cp\u003eCTU\u0026trade; analysis of VirusTotal samples revealed numerous campaigns delivering DarkTortilla via malicious spam (malspam). The emails typically use a logistics lure and include the malicious payload in an archive attachment with file types such as .iso, .zip, .img, .dmg, and .tar. The language of the email message is customized to the victim, and CTU researchers observed samples in English, German, Romanian, Spanish, Italian, and Bulgarian. Figure 1 shows a German-language malspam \u003ca href=\"https://www.virustotal.com/gui/file/981aa83b2d33cca994021197237ac5ee3ad3402f7d25f04f4e76985f4ec8744c\"\u003esample\u003c/a\u003e. The redacted filename of the attached \u003ca href=\"https://en.wikipedia.org/wiki/Optical_disc_image\"\u003eISO image\u003c/a\u003e archive file (.iso) includes the name of the organization the email was sent from. It is unclear if that organization was compromised. The archive file contains a single executable with the same filename but the .exe extension. This executable is a DarkTortilla initial loader \u003ca href=\"https://www.virustotal.com/gui/file/5e03556be992d23088a3c49d24c45b1c21cd275bffb4e536348e8128d50374b6\"\u003esample\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"597\" width=\"544\" src=\"http://www.secureworks.com/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-01.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 1. DarkTortilla malspam containing malicious archive attachment. (The German text translates to \"Good morning, Please give us your best price offer for our attached order. Awaiting your kind reply. Kind regards\"). (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eCTU researchers also identified malicious documents (maldocs) delivering DarkTortilla. Most of these maldocs embed the DarkTortilla initial loader executable as a Packager Shell Object. Figure 2 shows a \u003ca href=\"https://www.virustotal.com/gui/file/4f15b28c91fa0e8d0dd9e86481bad04fa34fcaf564d08de7c4c0c513fc6e122d\"\u003esample\u003c/a\u003e that prompts the victim to double-click the embedded Packager Shell Object, which executes the payload. Inspection of the Packager Shell Objects properties revealed that it is an executable named \u003ca href=\"https://www.virustotal.com/gui/file/55d7d9bd9d4a511417033b6c14ce93f962d6a6e6c6414f0cb7e455baee1d3ab7\"\u003eRFQ-010129H.exe\u003c/a\u003e, which is a DarkTortilla initial loader sample. Other analyzed maldocs use different approaches, such as leveraging embedded macros to automatically execute the Packager Shell Object when a victim opens the document and enables macros.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"658\" width=\"800\" src=\"http://www.secureworks.com/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-02.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 2. Maldoc sample delivering DarkTortilla. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch2\u003eHigh-level execution flow\u003c/h2\u003e\n\u003cp\u003eDarkTortilla consists of two components that rely on each other to successfully detonate payloads: a .NET-based executable (initial loader) and a .NET-based DLL (core processor). The typical high-level execution flow for a DarkTortilla payload starts with execution of the initial loader. The initial loader then retrieves its encoded core processor. While the encoded core processor is typically embedded within the .NET resources of the initial loader, CTU researchers identified initial loaders that retrieved their core processor from \u003ca href=\"https://cyberhoot.com/cybrary/paste/\"\u003epublic paste sites\u003c/a\u003e such as pastebin . pl, textbin . net, and paste . ee.\u003c/p\u003e\n\u003cp\u003eThe initial loader decodes, loads, and executes the core processor. When executed, the core processor extracts, decrypts, and parses its configuration. The encrypted configuration is stored within the .NET resources of the initial loader as bitmap images. Depending on DarkTortilla's configuration, the core processor performs the following actions:\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003eDisplays a fake message box\u003c/li\u003e\n    \u003cli\u003ePerforms anti-virtual machine checks\u003c/li\u003e\n    \u003cli\u003ePerforms anti-sandbox checks\u003c/li\u003e\n    \u003cli\u003eImplements persistence\u003c/li\u003e\n    \u003cli\u003eMigrates execution to the Windows %TEMP% directory by using the \"Melt\" configuration element\u003c/li\u003e\n    \u003cli\u003eProcesses addon packages\u003c/li\u003e\n    \u003cli\u003eMigrates execution to its install directory\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe core processor then injects and executes its configured main payload within the context of the configured subprocess. Finally, if configured, the core processor implements anti-tamper controls to prevent interference with execution of the initial loader, core processor, injected subprocess, and WatchDog executable.\u003c/p\u003e\n\u003cp\u003eFigure 3 illustrates this high-level DarkTortilla execution flow.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"775\" width=\"622\" src=\"http://www.secureworks.com/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-03.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 3. High-level execution flow for DarkTortilla infection. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch2\u003eInitial loader\u003c/h2\u003e\n\u003cp\u003eInitial loader samples analyzed by CTU researchers were obfuscated using the \u003ca href=\"https://marketplace.visualstudio.com/items?itemName=DeepSeaObfuscator.DeepSeaObfuscator\"\u003eDeepSea .NET code obfuscator\u003c/a\u003e. As a result, many aspects of the original code have been altered to thwart analysis. For example, namespace, class, function, and property names were renamed from their original descriptive values to random characters. Figure 4 shows an example of these obfuscated values within the code decompiled by the \u003ca href=\"https://github.com/dnSpyEx/dnSpy\"\u003ednSpy\u003c/a\u003e .NET analysis tool.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"384\" width=\"368\" src=\"http://www.secureworks.com/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-04.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 4. Obfuscated DarkTortilla initial loader sample. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eIn addition to name obfuscation, DeepSea applies \u003ca href=\"http://tigress.cs.arizona.edu/transformPage/docs/flatten/index.html\"\u003eswitch dispatch control flow obfuscation\u003c/a\u003e to DarkTortilla's initial loader. This technique restructures the original linear code into switch statements that transfer execution in a seemingly unpredictable pattern, making analysis difficult. Figure 5 shows a switch statement at the entry point of a DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/a0b96236bfd79d2ebeadb8e3deb9448af3ec8edd1ea9672b7ad4793934bb4c47\"\u003esample\u003c/a\u003e. In this example, the value stored in the \"num\" variable controls which code gets executed next. This value is obfuscated and is often the result of a conditional or mathematical expression calculated at runtime, such as \"\u003ca href=\"https://en.wikipedia.org/wiki/%3F:\"\u003e((!flag) ? 15 : 9)\u003c/a\u003e\" or \"\u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.math.abs?view=net-6.0#system-math-abs(system-int32)#system-math-abs(system-int32)\"\u003eMath.Abs(num2 * 25 * 25)\u003c/a\u003e\".\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"533\" width=\"420\" src=\"http://www.secureworks.com/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-05.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 5. Switch dispatch control flow obfuscation applied to DarkTortilla initial loader. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader stores DarkTortilla's encrypted configuration as bitmap images. Figure 6 lists the partial resource section of one \u003ca href=\"https://www.virustotal.com/gui/file/b3754c6ecc445e9a3b37c5ebe68adb9630ca4aa89a8e8515468f39ae8131f141\"\u003esample\u003c/a\u003e consisting of over 700 of these images.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"573\" width=\"763\" src=\"http://www.secureworks.com/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-06.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 6. Encrypted configuration stored as bitmap images within the .NET resources of DarkTortilla initial loader. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader's execution flow typically starts by checking for internet connectivity by issuing HTTP GET requests. In samples that implement this check, the initial loader attempts to retrieve content from google . com, bing . com, or both. Some \u003ca href=\"https://www.virustotal.com/gui/file/45ef054bca2ae4d67e6623bf28ff75e5d178924602674c654e1b569aa74601cd\"\u003esamples\u003c/a\u003e store the URLs in the executable as plain text (see Figure 7), but most samples encode them. If the check fails, the initial loader retries the request(s) until all are successful.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"324\" width=\"594\" src=\"http://www.secureworks.com/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-07.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 7. Internet connectivity check in DarkTortilla initial loader. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader generates a 16-byte key to decode the core processor. This key is based on an initial hard-coded value multiplied by the index value of its location in the destination array. Because the values are stored as single bytes, the maximum value for an element in the array is 0xFF (255 decimal). For example, the decode key array for an initial hard-coded value of 0x6E (110 decimal) is [0x00,0x6E,0xDC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF].\u003c/p\u003e\n\u003cp\u003eThe initial loader then retrieves the encoded core processor data. This data commonly resides within the .NET resources of the initial loader binary. Figure 8 shows encoded core processor data residing within the \"pnj\" .NET resource of a DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/45ef054bca2ae4d67e6623bf28ff75e5d178924602674c654e1b569aa74601cd\"\u003esample\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"756\" width=\"1017\" src=\"http://www.secureworks.com/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-08.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 8. Encoded core processor data stored within the .NET resources of DarkTortilla initial loader. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader decodes the core processor data by applying the following algorithm to each byte:\u003c/p\u003e\n\n\u003cpre\u003e\tenc_byte ^ (dec_key_arr[idx % len(dec_key_arr)] ^ (idx + (seed_byte % \n\tlen(dec_key_arr)) \u0026amp; seed_byte)\n\u003c/pre\u003e\n\n\u003cul\u003e\n    \u003cli\u003eenc_byte: The core processor byte array value being decoded\u003c/li\u003e\n    \u003cli\u003eidx: The encoded byte index in the core processor byte array\u003c/li\u003e\n    \u003cli\u003edec_key_arr: The generated 16-byte decode key byte array\u003c/li\u003e\n    \u003cli\u003eseed_byte: The fourth byte of the 16-byte decode key byte array\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe initial loader loads the decoded core processor assembly code and executes its pre-determined entry point function.\u003c/p\u003e\n\u003ch3\u003eInitial loader variant with externally hosted core processor\u003c/h3\u003e\n\u003cp\u003eInitial loader variants that retrieve the encoded core processor from public paste sites first decode the URL where the core processor is hosted. The encoding logic applied to the URL varies across analyzed DarkTortilla samples, making analysis and detection difficult. Figure 9 shows a DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/0a5dc3b6669cf31e8536c59fe1315918eb4ecfd87998445e2eeb8fed64bd2f2c\"\u003esample\u003c/a\u003e that encodes the URL (https: //pastebin . pl/view/raw/60b6b03b) by prepending and appending random text.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"408\" width=\"735\" src=\"http://www.secureworks.com/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-09.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 9. DarkTortilla initial loader variant that retrieves encoded core processor data from public paste site. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader retrieves an encoded string hosted at the decoded URL. This string represents the encoded core processor data. The string consists of fake XML tags, integer values encoded with a \u003ca href=\"https://en.wikipedia.org/wiki/Caesar_cipher\"\u003eshift cipher\u003c/a\u003e, and delimiters comprised of random letters (see Figure 10). The downloaded data is stored in memory and is never saved to the filesystem.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"476\" width=\"750\" src=\"http://www.secureworks.com/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-10.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 10. Encoded DarkTortilla core processor data hosted on public paste site. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader decodes the string by first removing the fake XML tags. The string is converted into an array of integers by replacing the random letter character delimiters with a consistent letter and then using that letter to split the string into integers. The last step is to iterate through the integer array and subtract a pre-defined value. This value changes across samples.\u003c/p\u003e\n\u003cp\u003eIn the Figure 10 example (\u0026lt;xml\u0026gt;1002k1015U1069k925E928s925U925E925g929E925\u0026hellip;\u0026lt;/xml\u0026gt;), the consistent letter delimiter is \"k\" and the pre-defined subtracted value is 925:\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003eRemove XML tags: 1002k1015U1069k925E928s925U925E925g929E925\u0026hellip;\u003c/li\u003e\n    \u003cli\u003eReplace random letters with consistent character: 1002k1015k1069k925k928k925k925k925k929k925\u0026hellip;\u003c/li\u003e\n    \u003cli\u003eSplit into integer array: [1002, 1015, 1069, 925, 928, 925, 925, 925, 929, 925, \u0026hellip;]\u003c/li\u003e\n    \u003cli\u003eSubtract pre-defined value from each integer: [77, 90, 144, 0, 3, 0, 0, 0, 4, 0, \u0026hellip;]\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThe hex representation of the final integer array for this example is [4D, 5A, 90, 00, 03, 00, 00, 00, 04, 00, \u0026hellip;]. This decoded data is the core processor DLL (see Figure 11).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"227\" width=\"700\" src=\"http://www.secureworks.com/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-11.png\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 11. Decoded DarkTortilla core processor DLL. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch2\u003eCore processor\u003c/h2\u003e\n\u003cp\u003eThe core processor contains DarkTortilla's primary functionality. From at least June 2020 to March 2022, the malware author transitioned through a limited number of filenames for this DLL that appeared to relate to a function or purpose (Deserialize.dll, SHCore1.dll, \u003ca href=\"https://www.virustotal.com/gui/file/93dd1202697dbaed9ef4f4707f2628212bf13aad096de29c14924b1dae1d6d5b\"\u003ePVCore1.dll\u003c/a\u003e, and SHCore2.dll). In March 2022, the names began to change more frequently to seemingly random names (e.g., BRIN.dll, UKRUSAIN.dll, KNIFALL.dll, NullSBAS.dll).\u003c/p\u003e\n\u003ch3\u003eConfiguration processing\u003c/h3\u003e\n\u003cp\u003eThe core processor identifies the following resources in the initial loader that are associated with the encrypted configuration:\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003eThe bitmap image resource(s) containing the encrypted configuration data\u003c/li\u003e\n    \u003cli\u003eThe binary resource specifying the total number of images to process\u003c/li\u003e\n    \u003cli\u003eThe resource folder containing these images and binary resources\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe names of these resources are calculated using the compile timestamp listed in the initial loader (which is not the file's actual compile timestamp) and two hard-coded values that represent an initialization value and the length of the resource name. The hard-coded initialization and name length values were consistent across all DarkTortilla samples analyzed by CTU researchers (see Table 1).\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003eInitial loader resource\u003c/th\u003e\n            \u003cth\u003eInitialization value\u003c/th\u003e\n            \u003cth\u003eResource name length value\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Resource folder\n            \u003c/td\u003e\n            \u003ctd\u003e\n            5\n            \u003c/td\u003e\n            \u003ctd\u003e\n            12\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Image count file\n            \u003c/td\u003e\n            \u003ctd\u003e\n            80\n            \u003c/td\u003e\n            \u003ctd\u003e\n            8\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Image file\n            \u003c/td\u003e\n            \u003ctd\u003e\n            20\n            \u003c/td\u003e\n            \u003ctd\u003e\n            8\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 1. Values used to derive initial loader resource names.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThese names are calculated via the following process:\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003eDivide the compile timestamp by \u0026lt;\u003cem\u003einitialization value\u003c/em\u003e\u0026gt;.\u003c/li\u003e\n    \u003cli\u003eRound the result using the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.math.round?view=net-6.0#system-math-round(system-decimal)#system-math-round(system-decimal)\"\u003eMath.Round()\u003c/a\u003e function.\u003c/li\u003e\n    \u003cli\u003ePass the result to the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.random\"\u003eRandom.Random()\u003c/a\u003e function as a seed value. By using a precalculated seed value, the malware author can generate a predictable 16-byte value.\u003c/li\u003e\n    \u003cli\u003eConvert the 16-byte value to a GUID using the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.guid\"\u003eGuid.Guid()\u003c/a\u003e function, which transposes the byte order.\u003c/li\u003e\n    \u003cli\u003eRemove dash characters (\u0026lsquo;-') added during the GUID conversion.\u003c/li\u003e\n    \u003cli\u003eTruncate the value to \u0026lt;\u003cem\u003eresource name length\u003c/em\u003e\u0026gt; characters.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eFor example, the following calculation generates the resource folder name of a \u003ca href=\"https://www.virustotal.com/gui/file/b3754c6ecc445e9a3b37c5ebe68adb9630ca4aa89a8e8515468f39ae8131f141\"\u003esample\u003c/a\u003e with a compile timestamp of \"Sun May 26 23:57:08 1985\" (integer: 486014228):\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003e486014228 / 5 = 97202845.6\u003c/li\u003e\n    \u003cli\u003eMath.Round(97202845.6) = 97202846\u003c/li\u003e\n    \u003cli\u003eRandom.Random(97202846) = d00bee25fa9dc9024fdf632727286708\u003c/li\u003e\n    \u003cli\u003eGuid.Guid(d00bee25fa9dc9024fdf632727286708) = 25ee0bd0-9dfa-02c9-4fdf-632727286708\u003c/li\u003e\n    \u003cli\u003eRemove dashes = 25ee0bd09dfa02c94fdf632727286708\u003c/li\u003e\n    \u003cli\u003eTruncate to 12 characters = 25ee0bd09dfa\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eApplying the same calculation to the other components reveals that the image count resource name for this sample is \"cd6935eb\" and the image base name is \"d390ea32\". The bitmap-formatted image names follow the pattern \u0026lt;\u003cem\u003eimage_base_name\u003c/em\u003e\u0026gt;\u0026lt;\u003cem\u003eimage_index\u003c/em\u003e\u0026gt;, where the \u0026lt;\u003cem\u003eimage_index\u003c/em\u003e\u0026gt; value ranges from 0 to the value specified in the image count resource. In this sample, the image count resource value is 0x2D4 (integer: 724), which means DarkTortilla attempts to process 725 bitmap-formatted images with the names d390ea32\u003cstrong\u003e0\u003c/strong\u003e, d390ea32\u003cstrong\u003e1\u003c/strong\u003e, d390ea32\u003cstrong\u003e2\u003c/strong\u003e, \u0026hellip;, d390ea32\u003cstrong\u003e723\u003c/strong\u003e, d390ea32\u003cstrong\u003e724\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eTo extract the encrypted configuration, the core processor iterates through each of the image resources in order, extracts the pixel data, and concatenates the pixel data into a byte array (see Figure 12).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"378\" width=\"783\" src=\"http://www.secureworks.com/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-12.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 12. Logic for extracting encrypted configuration from bitmap images. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe resulting byte array is decrypted using the \u003ca href=\"https://en.wikipedia.org/wiki/Advanced_Encryption_Standard\"\u003eRijndael\u003c/a\u003e cipher (also known as the Advanced Encryption Standard (AES)) with Electronic Code Book (ECB) block cipher mode and \u003ca href=\"https://en.wikipedia.org/wiki/Padding_(cryptography)#ISO_10126\"\u003eISO10126 padding\u003c/a\u003e configured. The ISO10126 \u003ca href=\"https://www.iso.org/standard/18114.html\"\u003estandard\u003c/a\u003e was withdrawn in 2007, so the use of this padding could indicate that DarkTortilla's origins date back to 2007 or earlier. The key used to decrypt this data is stored as the hard-coded integer array [81, 42, 59, 7, 27, 70, 83, 13, 71, 75, 17, 9, 39, 64, 3, 2] (see Figure 13).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"396\" width=\"800\" src=\"http://www.secureworks.com/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-13.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 13. Hard-coded key to decrypt DarkTortilla configuration. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eDarkTortilla parses the decrypted configuration data into a structure so that its elements can be easily referenced. Table 2 lists the potential configuration elements contained within DarkTortilla's decrypted configuration. Entries in \u003cstrong\u003ebold\u003c/strong\u003e indicate configuration elements that were consistently present in all samples analyzed by CTU researchers.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Key\u003c/th\u003e\n            \u003cth\u003e\n            Type\u003c/th\u003e\n            \u003cth\u003e\n            Description\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Installation%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eInstall DarkTortilla and implement persistence\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationReg%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Registry key used for persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationKey%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Registry value used for persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationDirectory%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Root install directory\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationFolder%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Subfolder name within the root install directory\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationFileName%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Filename for the initial loader executable within the root subfolder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %StartupFolder%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            bool\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Enable Startup folder persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %Hidden%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            bool\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Enable \"Hidden\" registry persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %HiddenReg%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \"Hidden\" registry key used for persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %HiddenKey%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \"Hidden\" registry value used for persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Message%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eDisplay fake message box\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageIcon%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Fake message box icon ID\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageButton%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Fake message box button ID\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageTitle%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Fake message box title\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageBody%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Fake message box message\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageRepetition%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            bool\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Display fake message box even if installed\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%VM%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ePerform anti-virtual machine checks\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%SB%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ePerform anti-sandbox checks\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%InjectionPersist%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eEnable anti-tamper control for running processes\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%StartupPersist%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eEnable anti-tamper control for startup persistence\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Melt%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eMigrate initial loader execution to the Windows %TEMP% directory\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MeltName%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Filename for the initial loader executable within the Windows %TEMP% directory\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %WatchDogName%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Filename for the anti-tamper WatchDog executable\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %WatchDogBytes%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            byte[]\n            \u003c/td\u003e\n            \u003ctd\u003e\n            WatchDog byte array\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Compress%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eIndicates if payloads are zlib-compressed\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Delay%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eint\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eNumber of seconds to delay execution within the core processor\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%HostIndex%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eint\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eID of the target subprocess name to use for main/addon payload injection\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%MainFile%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebyte[]\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eMain payload byte array\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%FilesNum%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eint\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eNumber of addon packages to process\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.D\n            \u003c/td\u003e\n            \u003ctd\u003e\n            byte[]\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (data): Payload byte array\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.N\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (name): Filename\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.P\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (path): Target install folder (special folder ID)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.F\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (folder): Target install subfolder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.O\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (operation): Execution type (disk, memory, none)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.T\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (time): Execution delay (seconds)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.R\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (run): Payload execution criterion\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 2. DarkTortilla configuration elements. Bold text indicates elements that appear in all analyzed samples.\u003c/em\u003e\u003c/p\u003e\n\u003ch3\u003eFake message display\u003c/h3\u003e\n\u003cp\u003eDarkTortilla can be configured to display a message box when executed. The threat actor can customize message box characteristics such as the display message, message box title, and the \u003ca href=\"https://docs.microsoft.com/en-us/office/vba/language/reference/user-interface-help/msgbox-constants\"\u003eicon and button configuration\u003c/a\u003e. Threat actors use fake message boxes to make victims think that execution failed or that a legitimate application is loading and installing. Table 3 lists the configuration elements and values in one DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/083acce46cb8cf35e37c778d1f4aee6814bca72d2874b793a47f9823f51df0fe/\"\u003esample\u003c/a\u003e.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Configuration element\u003c/th\u003e\n            \u003cth\u003e\n            Assigned value as it appears in the configuration\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %Message%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageIcon%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            16\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageButton%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            0\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageTitle%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            .Net Framework Initialization Error\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageBody%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            To run this application, you first must install one of the following version of the .Net Framework:\\r\\n.Net Framework, Version = 4.8.0\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageRepetition%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 3. Fake message box-related configuration elements.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eFigure 14 shows the message box for the DarkTortilla sample configured with the values in Table 3. The %MessageRepetition% configuration element controls whether the message box will continue to be displayed upon execution after DarkTortilla is installed and persistent on the compromised system.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"185\" width=\"464\" src=\"http://www.secureworks.com/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-14.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 14. Fake message box. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch3\u003e\"Melt\" execution migration\u003c/h3\u003e\n\u003cp\u003eIf the %Melt% configuration element is set to true, the core processor moves the initial loader executable to the Window's %TEMP% directory. It uses the %MeltName% configuration element value as the executable filename (e.g., java.exe, PDF.exe, cookies.exe). The core processor runs the new executable and then terminates the original initial loader executable. However, the %TEMP% directory may not be the final destination for the initial loader. The executable could migrate again if the %Installation% configuration element is set to true.\u003c/p\u003e\n\u003ch3\u003eInstallation\u003c/h3\u003e\n\u003cp\u003eThe %Installation% configuration element controls whether DarkTortilla installs itself on a system. If set to true, the core processor moves the current DarkTortilla executable into the directory specified by the configuration. Table 4 lists the values stored in one DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/53b3b37b7d1e40c80fcda2c424cd837379ac2ce93023de6c22ba3e2d94679671\"\u003esample\u003c/a\u003e.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Configuration element\u003c/th\u003e\n            \u003cth\u003e\n            Value\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationDirectory%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            38\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationFolder%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            WindowsPowerShell\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationFileName%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            PowerShellInfo.exe\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 4. Installation configuration elements with example values.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe integer value assigned to the %InstallationDirectory% configuration element represents a \u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/shell/csidl\"\u003eCSIDL\u003c/a\u003e value associated with a special folder on the system. In Table 4, the value 38 corresponds to the Windows \u003ca href=\"https://www.magnumdb.com/search?q=CSIDL_PROGRAM_FILES\"\u003eProgram Files\u003c/a\u003e directory. Based on this configuration, the full install path and filename for this DarkTortilla sample is \"C:\\Program Files\\WindowsPowerShell\\PowerShellInfo.exe\".\u003c/p\u003e\n\u003cp\u003eTo install, the core processor terminates the currently running DarkTortilla executable. It copies the executable to the configured installation path and filename, and then executes the installed executable via \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.process.start?view=net-6.0\"\u003eProcess.Start()\u003c/a\u003e.\u003c/p\u003e\n\u003ch3\u003ePersistence\u003c/h3\u003e\n\u003cp\u003ePersistence is controlled by the %Installation% configuration element in combination with the %Hidden% and %StartupFolder% configuration elements. DarkTortilla uses the logic in Table 5 to determine the persistence type.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            %Hidden%\u003c/th\u003e\n            \u003cth\u003e\n            %StartupFolder%\u003c/th\u003e\n            \u003cth\u003e\n            Persistence type\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Use registry HKCU Run key\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Windows startup folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Windows startup folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Use registry HKCU Winlogon key\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 5. Configuration elements determining the persistence type.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eA bug in the code causes the %StartupFolder% logic to override the %Hidden% logic if both configuration elements are set to true. The malware author erroneously used an \"if\" statement instead of \"else if\" in the logic setting the persistence type (see Figure 15).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"313\" width=\"800\" src=\"http://www.secureworks.com/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-15.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 15. Error in persistence code. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eFor Windows startup folder persistence, the core processor uses the \u003ca href=\"https://docs.microsoft.com/en-us/troubleshoot/windows-client/admin-development/create-desktop-shortcut-with-wsh\"\u003eWshShortcut\u003c/a\u003e COM object to create a .lnk shortcut file in the Windows startup folder. This file points to the configured installation path and filename of DarkTortilla's initial loader executable (see Figure 16).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"196\" width=\"685\" src=\"http://www.secureworks.com/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-16.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 16. COM object that drops shortcut file in Windows startup folder for persistence. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eDarkTortilla features standard and hidden techniques for implementing persistence via the Windows registry. Both options implement persistence in the HKEY_CURRENT_USER (HKCU) hive as a hard-coded value in the core processor code. This persistence results in the installed DarkTortilla initial loader executable being run every time the user logs in.\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003eFor standard registry persistence, the core processor uses the %InstallationReg% and %InstallationKey% values to set the target key/value combination. In every sample analyzed by CTU researchers where standard persistence was configured, the %InstallationReg% value was \"Software\\Microsoft\\Windows\\CurrentVersion\\Run\". The value stored in %InstallationKey% varied across samples (e.g., \"Updates\", \"svchost\", \"Runtime Broker\").\u003c/li\u003e\n    \u003cbr /\u003e\n    \u003cli\u003eFor hidden registry persistence, the core processor uses the %HiddenReg% and %HiddenKey% values to set the target key/value combination. In every sample analyzed by CTU researchers where hidden persistence was configured, the %InstallationReg% value was \"Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" and the value stored in %HiddenKey% was \"Shell\". Prior to setting the hidden persistence registry value, DarkTortilla's core processor prepends the installed initial loader executable path with the Windows shell value retrieved from the HKEY_LOCAL_MACHINE (HKLM) hive. This value is typically \"explorer.exe\", resulting in \"explorer.exe,\u0026lt;\u003cem\u003einstalled_darktortilla_exe_path\u003c/em\u003e\u0026gt;\". For example, if the configured install path and executable name for a DarkTortilla sample is \"C:\\Program Files\\WindowsPowerShell\\PowerShellInfo.exe\", then the HKCU Winlogon\\Shell registry entry is \"explorer.exe,C:\\Program Files\\WindowsPowerShell\\PowerShellInfo.exe\". To create these registry values, the core processor executes the following command via Process.Start():\u003cbr /\u003e\n    \u003cbr /\u003e\n    \u003cpre\u003e\tcmd.exe /c REG ADD \"HKCU\\\u003cem\u003e\u0026lt;configured_reg_key\u0026gt;\u003c/em\u003e\" /f /v \"\u003cem\u003e\u0026lt;configured_reg_val\u0026gt;\u003c/em\u003e\" /t\n\tREG_SZ /d \"\u003cem\u003e\u0026lt;installed_darktortilla_exe_path\u0026gt;\u003c/em\u003e\"\n\t\u003c/pre\u003e\n    \u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eRunPE process injection\u003c/h3\u003e\n\u003cp\u003eDarkTortilla can execute its payloads using process injection. With this method, the payload resides only in memory and never accesses the filesystem. The %HostIndex% configuration element defines which legitimate process to target for process injection (see Table 6).\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            %HostIndex% value\u003c/th\u003e\n            \u003cth\u003e\n            Corresponding target process\u003c/th\u003e\n            \u003cth\u003e\n            Source directory\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0 \u003cem\u003e(or any numeric value that is not 1-6)\u003c/em\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Initial loader executable's name\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u0026nbsp;\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            1\n            \u003c/td\u003e\n            \u003ctd\u003e\n            AppLaunch.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            2\n            \u003c/td\u003e\n            \u003ctd\u003e\n            svchost.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            System32 folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            3\n            \u003c/td\u003e\n            \u003ctd\u003e\n            RegAsm.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            4\n            \u003c/td\u003e\n            \u003ctd\u003e\n            InstallUtil.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5\n            \u003c/td\u003e\n            \u003ctd\u003e\n            mscorsvw.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            6\n            \u003c/td\u003e\n            \u003ctd\u003e\n            AddInProcess32.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 6. %HostIndex% values and corresponding target processes used for payload injection.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003ePrior to setting the target process name, the core processor checks for active processes named \"avp\". The avp.exe process is part of the Kaspersky Anti-Virus suite. If the core processor detects this process, it overrides the %HostIndex% value and sets the target process name to the name of the initial loader executable. When the %HostIndex% value is 1-6, the core processor attempts to copy the legitimate target executable file to the Windows %TEMP% directory.\u003c/p\u003e\n\u003cp\u003eDarkTortilla uses a .NET-based DLL named \"RunPe6\" for process injection. This DLL is embedded within the core processor as an encoded byte array (see Figure 17).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"403\" width=\"519\" src=\"http://www.secureworks.com/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-17.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 17. Encoded RunPe6 DLL stored as byte array within DarkTortilla core processor. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eTo decode each byte, the core processor uses the following equation with \u003cem\u003e\u0026lt;xor_key\u0026gt;\u003c/em\u003e as the hard-coded integer array [45, 89, 125, 69, 250, 222, 111] and \u003cem\u003e\u0026lt;seed\u0026gt;\u003c/em\u003e as the hard-coded integer 99:\u003c/p\u003e\n\u003cpre\u003edecoded_byte = encoded_byte ^ (\u003cem\u003e\u0026lt;xor_key\u0026gt;\u003c/em\u003e[(idx * \u003cem\u003e\u0026lt;seed\u0026gt;)\u003c/em\u003e % xor_key.Length])\u003c/pre\u003e\n\u003cbr /\u003e\n\u003cp\u003eThe core processor loads RunPe6 and calls its \u0026lsquo;Runn' function to execute the malicious payload within the context of the configured target subprocess. The core processor does not directly reference this function. Rather, it references the index values for the target class (18) and function (0). Figure 18 displays PowerShell code developed by CTU researchers to replicate the core processor's target function identification logic.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"167\" width=\"561\" src=\"http://www.secureworks.com/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-18.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 18. Custom PowerShell script to identify RunPe6 function used for payload process injection. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch3\u003eAddon package processing\u003c/h3\u003e\n\u003cp\u003eDarkTortilla can be configured with zero or more payloads known as addon packages. These addons are in addition to the main payload that DarkTortilla is tasked with delivering. Observed addons include benign decoy documents, legitimate executables, keyloggers, clipboard stealers, cryptocurrency miners, and additional DarkTortilla payloads. Each addon package possesses a set of configuration elements composed of a static \"F\" character, an integer \"{0}\" that represents the index value indicating the position of the addon in the package array, and a character representing a particular property associated with the package.\u003c/p\u003e\n\u003cp\u003eThe %FilesNum% configuration element defines the number of addon packages to process. For example, if the %FilesNum% value is 3, the configuration elements are F.0.\u003cem\u003e\u0026lt;addon property\u0026gt;\u003c/em\u003e, F.1.\u003cem\u003e\u0026lt;addon property\u0026gt;\u003c/em\u003e, and F.2.\u003cem\u003e\u0026lt;addon property\u0026gt;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eThe F.{0}.D (data) configuration element contains the addon package payload binary data. The core processor checks the %Compress% configuration element to determine if the stored data is compressed. If the element is set to true, the core processor decompresses the data before processing it.\u003c/p\u003e\n\u003cp\u003eThe core processor next determines if it should process the addon package by inspecting the initial loader's installation state and the addon package's F.{0}.R (run) value. Table 7 lists the criteria and their result.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Initial loader running from install directory\u003c/th\u003e\n            \u003cth\u003e\n            F.{0}.R (run) value\u003c/th\u003e\n            \u003cth\u003e\n            Process addon package?\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Yes\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            No\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            No\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Yes\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 7. Criteria for processing addon package.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eIf configured to process the addon package, the core processor inspects the F.{0}.O (operation) configuration element value to determine how to execute its payload. This value can be any integer but is typically 0, 1, or 2. If the value is set to 0 or any value other than 1 or 2, the core processor saves the payload to disk but does not execute it. If the value is 1, the core processor saves the payload to disk and executes it. If the value is 2, the core processor executes the payload in memory via the same RunPE process injection technique and target process it uses for the main payload.\u003c/p\u003e\n\u003cp\u003eIf the payload is saved to disk, the location is specified by the addon path (F.{0}.P), subfolder (F.{0}.F), and filename (F.{0}.N) configuration elements. The F.{0}.P integer value represents a CSIDL value associated with a special folder on the system. For example, the value 2 corresponds to the Windows Start Menu/Programs folder. The full path of an analyzed \u003ca href=\"https://www.virustotal.com/gui/file/5be86cfca25e295f88b5aab42a6f604d2f1bb97f3c73b01df664c137908e2ec4\"\u003esample\u003c/a\u003e containing a F.{0}.P value of 2, an empty string for F.{0}.F, and a value of sertif.exe for F.{0}.N is \"C:\\Users\\\u003cem\u003e\u0026lt;username\u0026gt;\u003c/em\u003e\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\sertif.exe\".\u003c/p\u003e\n\u003ch3\u003eMain payload processing\u003c/h3\u003e\n\u003cp\u003eAfter processing addon packages and installing the initial loader executable if appropriate, DarkTortilla processes its main payload. This main payload is typically a commodity information stealer or remote access trojan (RAT). DarkTortilla stores the binary data for the main payload in the %MainFile% configuration element. Processing this payload consists of two steps:\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003eThe core processor queries the %Compress% configuration element to determine if the binary data in the %MainFile% configuration element is compressed. If set to true, the core processor decompresses the data.\u003c/li\u003e\n    \u003cbr /\u003e\n    \u003cli\u003eThe core processor executes the main payload via RunPE process injection. Unlike the addon payloads, there is no option to save the main payload to the filesystem. Therefore, the main payload resides only in memory. The target process used for injection is the same as the addon packages and is defined by the %HostIndex% configuration element.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003eAnti-analysis controls\u003c/h3\u003e\n\u003cp\u003eDarkTortilla core processor samples analyzed by CTU researchers were obfuscated using the \u003ca href=\"https://yck1509.github.io/ConfuserEx/\"\u003eConfuserEx\u003c/a\u003e code obfuscator. In addition to the obfuscator altering namespace, class, function, and property names, CTU researchers identified multiple samples where it injected specially crafted code that did not affect execution but inhibited decompilation by tools such as dnSpy (see Figure 19). Bypassing this anti-analysis control requires removing the code that caused the decompiler to break, identifying another sample that does not implement this control, or piecing together analysis from multiple samples to understand the code.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"497\" width=\"800\" src=\"http://www.secureworks.com/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-19.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 19. Broken dnSpy decompilation of DarkTortilla core processor. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe core processor includes code that that detects profilers and debuggers, but these anti-analysis controls are not called. To detect profiling, the code verifies if the \u003ca href=\"https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ee471451(v=vs.100)?redirectedfrom=MSDN\"\u003eCOR_ENABLE_PROFILING\u003c/a\u003e environment variable is present and sets to the value of 1. To detect debuggers, the code spawns a thread (see Figure 20) that continuously checks the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.debugger.isattached?view=net-6.0\"\u003eDebugger.IsAttached\u003c/a\u003e property and the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.debugger.islogging?view=net-6.0\"\u003eDebugger.IsLogging\u003c/a\u003e method. If the core processor identifies a debugger or if the thread performing the checks is terminated, the code terminates the initial loader process. It is unclear if this code was added by ConfuserEx or the malware author.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"475\" width=\"585\" src=\"http://www.secureworks.com/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-20.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 20. Debugger detection performed by DarkTortilla core processor. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe core processor implements string encoding to obscure important strings such as the configuration keys. Figure 21 shows a code excerpt that passes the string length (17), character index array ([26,8,13,18,19,0,11,11,0,19,8,14,13,17,4,6,26]), and capital letter index array ([8,17]) to the decode function.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"79\" width=\"522\" src=\"http://www.secureworks.com/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-21.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 21. DarkTortilla core processor string obfuscation example. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThis function decodes the string by iterating through each value in the character index array and retrieving the corresponding character at the specified index in a hard-coded character array (see Figure 22).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"105\" width=\"385\" src=\"http://www.secureworks.com/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-22.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 22. Character array used by string decoding logic. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eFigure 21 shows that the example's first three values of the character index array passed to the decode function are 26, 8, and 13. These values correspond to the characters \"%\", \"i\", and \"n\" in the hard-coded character array shown in Figure 22. The values passed in the capital letter index array (8, 17) indicate which characters should be capitalized (\"I\" and \"R\" in this example). Processing the character index array results in the decoded string \"%InstallationReg%\".\u003c/p\u003e\n\u003cp\u003eThe %VM% configuration element enables DarkTortilla's anti-virtual machine (anti-VM) controls. If set to true, the core processor obtains information about the system by querying the following Windows Management Instrumentation (WMI) objects:\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-computersystem\"\u003eWin32_ComputerSystem\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-bios\"\u003eWin32_BIOS\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-motherboarddevice\"\u003eWin32_MotherboardDevice\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-pnpentity\"\u003eWin32_PnPEntity\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-diskdrive\"\u003eWin32_DiskDrive\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe core processor also retrieves information about the system's running processes and services. It then inspects this data for strings associated with Hyper-V, QEMU, Virtual PC, VirtualBox, and VMware. If any of the case-insensitive data matches the criteria in Table 8, the core processor terminates the initial loader process.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Targeted technology\n            \u003c/th\u003e\n            \u003cth\u003e\n            Inspected entity\n            \u003c/th\u003e\n            \u003cth\u003e\n            Inspection logic\n            \u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Hyper-V\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Caption contains \"virtual\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Hyper-V\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_ComputerSystem\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Manufacturer contains \"microsoft\" and Model contains \"virtual\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            QEMU\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name contains \"qemu\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Virtual PC\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Process\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Process list contains \"vmusrvc\" or both \"vpcmap\" and \"vmsrvc\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VirtualBox\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Model contains \"vbox\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VirtualBox\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Process\n            \u003c/td\u003e\n            \u003ctd\u003e\n            ProcessName contains \"vboxservice\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name contains \"vmware\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Model contains \"vmware\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_ComputerSystem\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Manufacturer contains \"vmware\" and Model contains \"virtual\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_BIOS\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Serial number contains \"vmware\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name equals \"vmware pointing device\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name contains \"vmware sata\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name equals \"vmware usb pointing device\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name equals \"vmware vmci bus device\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name equals \"vmware virtual s scsi disk device\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name starts with \"vmware svga\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Service\n            \u003c/td\u003e\n            \u003ctd\u003e\n            ServiceImagePath contains \"vmware\" and ServiceName equals \"vmtools\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Service\n            \u003c/td\u003e\n            \u003ctd\u003e\n            ServiceImagePath contains \"vmware\" and ServiceName equals \"tpvcgateway\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Service\n            \u003c/td\u003e\n            \u003ctd\u003e\n            ServiceImagePath contains \"vmware\" and ServiceName equals \"tpautoconnsvc\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 8. DarkTortilla core processor anti-VM detections.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe %SB% configuration element enables DarkTortilla's anti-sandbox control. This control only detects the \u003ca href=\"https://sandboxie-plus.com/Sandboxie/\"\u003eSandboxie\u003c/a\u003e sandbox. The core processor terminates the initial loader process if it detects a running process named \"sandboxierpcss\" in the current session.\u003c/p\u003e\n\u003ch3\u003eAnti-tamper controls\u003c/h3\u003e\n\u003cp\u003eDarkTortilla's anti-tamper controls are the last step in its execution chain and occur after the main payload is executed. The four controls ensure that nothing interferes with DarkTortilla's execution of its critical components.\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003e\n    \u003cp\u003eThe first anti-tamper control is employed by the core processor and ensures that the injected subprocess running the main payload is immediately rerun if terminated. The %InjectionPersist% configuration element regulates this control. If set to true, the core processor starts a thread that monitors the state of the injected subprocess. If the subprocess is terminated, this anti-tamper control automatically respawns the configured target subprocess, re-injects the main payload, and executes it within the context of the subprocess.\u003c/p\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\n    \u003cp\u003eThe second anti-tamper control ensures that the initial loader executable is immediately rerun if terminated. DarkTortilla implements this functionality with a secondary .NET-based executable that it refers to as \"WatchDog\". The %InjectionPersist% configuration element regulates this control. If set to true, the core processor drops the WatchDog executable and its configuration file to the Windows %TEMP% directory. It then executes the WatchDog executable, which monitors the initial loader process.\u003c/p\u003e\n    \u003cp\u003eThe WatchDog executable bytes are stored in the DarkTortilla %WatchDogBytes% configuration element, and the filename is stored in %WatchDogName%. Prior to processing, the core processor decompresses the WatchDog executable's bytes if the %Compress% configuration element is set to true. Every \u003ca href=\"https://www.virustotal.com/gui/file/2d0dc6216f613ac7551a7e70a798c22aee8eb9819428b1357e2b8c73bef905ad\"\u003eWatchDog executable\u003c/a\u003e dropped by DarkTortilla was identical:\u003c/p\u003e\n    \u003cul\u003e\n        \u003cli style=\"list-style: disc;\"\u003eMD5 hash: 0e362e7005823d0bec3719b902ed6d62\u003c/li\u003e\n        \u003cli style=\"list-style: disc;\"\u003eSHA1 hash: 590d860b909804349e0cdc2f1662b37bd62f7463\u003c/li\u003e\n        \u003cli style=\"list-style: disc;\"\u003eSHA256 hash: 2d0dc6216f613ac7551a7e70a798c22aee8eb9819428b1357e2b8c73bef905ad\u003c/li\u003e\n    \u003c/ul\u003e\n\n    \u003cp\u003eIf an executable with the configured WatchDog name already exists in the Windows %TEMP% directory, the core processor removes the existing executable's \u003ca href=\"https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-fscc/6e3f7352-d11c-4d76-8c39-2516a9df36e8\"\u003eZone.Identifier\u003c/a\u003e Alternate Data Stream (ADS), which strips the executable of any existing \u003ca href=\"https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/ms537183(v=vs.85)?redirectedfrom=MSDN\"\u003eURL security zones\u003c/a\u003e. It then overwrites the existing executable with the new WatchDog executable.\u003c/p\u003e\n    \u003cp\u003eThe WatchDog configuration file dropped to the filesystem shares the same name as the WatchDog executable but uses a .txt file extension. For example, the configuration filename for \"WatchDog.exe\" is \"WatchDog.txt\". This configuration file contains three lines representing the following values:\u003c/p\u003e\n    \u003cul\u003e\n        \u003cli style=\"list-style: disc;\"\u003eThe process ID of the initial loader executable\u003c/li\u003e\n        \u003cli style=\"list-style: disc;\"\u003eThe path and filename of the initial loader executable\u003c/li\u003e\n        \u003cli style=\"list-style: disc;\"\u003eThe process ID for the WatchDog executable\u003c/li\u003e\n    \u003c/ul\u003e\n\n    \u003cp\u003eIf the initial loader process terminates, the WatchDog process reruns it and refreshes the contents of the WatchDog configuration text file with the new process ID information.\u003c/p\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\n    \u003cp\u003eThe third anti-tamper control is employed by the core processor and ensures that the dropped WatchDog executable continues to execute. The core processor retrieves the WatchDog executable process ID from the WatchDog configuration file once per second and verifies that the corresponding process is running. If the WatchDog process terminates, the core processor breaks the loop, drops a new WatchDog configuration file, and reruns the WatchDog executable.\u003c/p\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\n    \u003cp\u003eThe fourth anti-tamper control is employed by the core processor and maintains persistence for the initial loader. The %StartupPersist% configuration element regulates this control. If set to true, the core processor starts a thread that sets persistence every 30 seconds using the persistence type defined in the DarkTortilla configuration. The control does not contain validation logic to check the persistence status, so it repeats the process indefinitely.\u003c/p\u003e\n    \u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3\u003eDelayed execution\u003c/h3\u003e\n\u003cp\u003eThe core processor implements the kernel32.dll Sleep function to delay execution at the following stages of the process. The length of delay is typically controlled by the value in the %Delay% configuration element. CTU researchers observed values ranging from 0 seconds to 300 seconds.\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003ePrior to implementing persistence, the core processor sleeps for the number of seconds specified by the %Delay% configuration element.\u003c/li\u003e\n    \u003cli\u003ePrior to processing addon packages, the core processor sleeps for the number of seconds specified by the %Delay% configuration element.\u003c/li\u003e\n    \u003cli\u003eThe core processor sleeps for a hard-coded 5 seconds after copying the source executable to the install directory but before running the executable.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe number of delays increases if the %Melt% and %Installation% configuration elements are set to true, as the delays are processed each time the executable migrates. These delays can impede detection in sandbox environments if they exceed the maximum wait time.\u003c/p\u003e\n\u003ch2\u003ePossible malware connections\u003c/h2\u003e\n\u003cp\u003eDarkTortilla code shares similarities to other malware. For example, payload compression, junk code inclusion, and payload execution via \u003ca href=\"https://github.com/malwares/Crypter/blob/master/%5BC%23%5D%20The%20RATs%20Crew%20Crypter/Form1.cs#L161-L163\"\u003eRunPe6\u003c/a\u003e are also features of a RATs Crew crypter last updated in 2016. DarkTortilla could represent an evolution of that crypter. Additionally, the Gameloader malware uses similar malspam lures and archive files as DarkTortilla. It also leverages .NET resources to store encoded DLLs and encrypted bitmap images and delivers similar commodity malware payloads. However, there is insufficient evidence as of this publication to definitively link these malware families or threat actors to DarkTortilla.\u003c/p\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eResearchers often overlook DarkTortilla and focus on its main payload. However, DarkTortilla is capable of evading detection, is highly configurable, and delivers a wide range of popular and effective malware. Its capabilities and prevalence make it a formidable threat.\u003c/p\u003e\n\u003ch2\u003eThreat indicators\u003c/h2\u003e\n\u003cp\u003eThe threat indicators in Table 9 can be used to detect activity related to DarkTortilla. The URL may contain malicious content, so consider the risks before opening it in a browser.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Indicator\n            \u003c/th\u003e\n            \u003cth\u003e\n            Type\n            \u003c/th\u003e\n            \u003cth\u003e\n            Context\n            \u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            59295e810bbdbfd64b8c41316ea13cae\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious spam delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            18391a58ee25a5cb8dfbf4d48517b5b0\u003cbr /\u003e\n            c66c5ae6\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious spam delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            981aa83b2d33cca994021197237ac5ee\u003cbr /\u003e\n            3ad3402f7d25f04f4e76985f4ec8744c\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious spam delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            84872b60072011eab8940f3b49bdb582\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            3da0f44d45a1d6676d52ce691d2f6d75\u003cbr /\u003e\n            4eb3097e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5e03556be992d23088a3c49d24c45b1c\u003cbr /\u003e\n            21cd275bffb4e536348e8128d50374b6\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            2d74df3ce221f6ff48d20bac158a3e78\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious document delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0563e691801251cdfd363eee31858ead\u003cbr /\u003e\n            5ee3928b\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious document delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            4f15b28c91fa0e8d0dd9e86481bad04f\u003cbr /\u003e\n            a34fcaf564d08de7c4c0c513fc6e122d\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious document delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            827258f907c5087f498c413d28e2203e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5e0cb6076002b11a39636e07a217b493\u003cbr /\u003e\n            835e5bce\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            55d7d9bd9d4a511417033b6c14ce93f9\u003cbr /\u003e\n            62d6a6e6c6414f0cb7e455baee1d3ab7\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            c37aae0ff565a2e44f144f837b750279\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            dde386911b091e894746b0f12d88a1fd\u003cbr /\u003e\n            18761fb9\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            a0b96236bfd79d2ebeadb8e3deb9448a\u003cbr /\u003e\n            f3ec8edd1ea9672b7ad4793934bb4c47\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            93fe6600c51014d7d6c2afedf8398f92\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            8f7340704745f3d53b284c101e93c42f\u003cbr /\u003e\n            8d4c2adc\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            45ef054bca2ae4d67e6623bf28ff75e5\u003cbr /\u003e\n            d178924602674c654e1b569aa74601cd\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            6e91ad0972e104a277505104abe39d1e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            261d699c3bb1a0042b88a45ed340f2d8\u003cbr /\u003e\n            6149464f\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            b3754c6ecc445e9a3b37c5ebe68adb96\u003cbr /\u003e\n            30ca4aa89a8e8515468f39ae8131f141\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            cd49f7c3c4e82dee128eedea9879bc33\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            619bf90a8ea219e34bf57dda1a322914\u003cbr /\u003e\n            b9fa1c81\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0a5dc3b6669cf31e8536c59fe1315918\u003cbr /\u003e\n            eb4ecfd87998445e2eeb8fed64bd2f2c\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            851816aa8cf45ba769f0d9420acfb3e5\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            4178d5efa388caf2d0ffd4539cf285b1\u003cbr /\u003e\n            de5ffab6\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            083acce46cb8cf35e37c778d1f4aee68\u003cbr /\u003e\n            14bca72d2874b793a47f9823f51df0fe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            f44695a8febb2a35576a59fa984629d2\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            37ec57e5da46dc1990941a1bb3ffab9e\u003cbr /\u003e\n            74db346a\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            53b3b37b7d1e40c80fcda2c424cd8373\u003cbr /\u003e\n            79ac2ce93023de6c22ba3e2d94679671\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            8d8c551dd572a1dc158de239b37eaa9a\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            6d4b4bcd107b09af37996c73a6448379\u003cbr /\u003e\n            a31aaac4\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5be86cfca25e295f88b5aab42a6f604d\u003cbr /\u003e\n            2f1bb97f3c73b01df664c137908e2ec4\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0f89a2015ed9c1be5522e27c00276e52\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla core processor (PVCore1)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5ad5b35f6cc093067c6f219f2d2107f4\u003cbr /\u003e\n            4248c5bb\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla core processor (PVCore1)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            93dd1202697dbaed9ef4f4707f262821\u003cbr /\u003e\n            2bf13aad096de29c14924b1dae1d6d5b\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla core processor (PVCore1)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0e362e7005823d0bec3719b902ed6d62\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla watchdog executable\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            590d860b909804349e0cdc2f1662b37b\u003cbr /\u003e\n            d62f7463\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla watchdog executable\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            2d0dc6216f613ac7551a7e70a798c22a\u003cbr /\u003e\n            ee8eb9819428b1357e2b8c73bef905ad\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla watchdog executable\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            https://pastebin.pl/view/raw/60b6b03b\n            \u003c/td\u003e\n            \u003ctd\u003e\n            URL\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla encoded core processor download\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 9. Indicators for this threat.\u003c/em\u003e\u003c/p\u003e\n\u003ch2\u003eReferences\u003c/h2\u003e\n\u003cp\u003eArntz, Pieter. \"Explained: Packer, Crypter, and Protector.\" Malwarebytes Labs. March 27, 2017. \u003ca href=\"https://blog.malwarebytes.com/cybercrime/malware/2017/03/explained-packer-crypter-and-protector/\"\u003ehttps://blog.malwarebytes.com/cybercrime/malware/2017/03/explained-packer-crypter-and-protector/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eHasherezade. \"Rainbows, Steganography and Malware in a new .NET cryptor.\" Malwarebytes Labs. March 30, 2016. \u003ca href=\"https://blog.malwarebytes.com/threat-analysis/2015/08/rainbows-steganography-and-malware-in-a-new-net-cryptor/\"\u003ehttps://blog.malwarebytes.com/threat-analysis/2015/08/rainbows-steganography-and-malware-in-a-new-net-cryptor/\u003c/a\u003e \u003c/p\u003e\n\u003cp\u003e\"RATs Crew.\" Hack Forums. June 21, 2021. \u003ca href=\"https://wiki.hackforums.net/RATs_Crew\"\u003ehttps://wiki.hackforums.net/RATs_Crew\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eGoSecure Titan Labs. \"New Malware \u0026lsquo;Gameloader' in Discord Malspam Campaign.\" GoSecure. November 2, 2021. \u003ca href=\"https://www.gosecure.net/blog/2021/11/02/new-malware-gameloader-in-discord-malspam-campaign-identified-by-gosecure-titan-labs/\"\u003ehttps://www.gosecure.net/blog/2021/11/02/new-malware-gameloader-in-discord-malspam-campaign-identified-by-gosecure-titan-labs/\u003c/a\u003e\u003c/p\u003e"},"VideoId":{"value":""},"VideoType":null,"Content Number Of Pages":{"value":null},"Content Read Time":{"value":null},"Content Watch Time":{"value":null},"Author":[{"id":"d143bf9c-2048-4f78-a59f-64dbcba7f3dc","url":"http://uswest-www.secureworks.com/content/people/counter-threat-unit-research-team","name":"Counter Threat Unit Research Team","displayName":"Counter Threat Unit Research Team","fields":{"LastName":{"value":" "},"Picture":{"value":{"asset":null}},"Bio":{"value":"Secureworks Counter Threat Unit™ (CTU) researchers frequently serve as expert resources for the media, publish technical analyses for the security community, and speak about emerging threats at security conferences. Leveraging Secureworks’ advanced security technologies and a network of industry contacts, the CTU™ research team tracks threat actors and analyzes anomalous activity, uncovering new attack techniques and threats. This process enables CTU researchers to identify threats as they emerge and develop countermeasures that protect customers before damage can occur."},"Email":{"value":""},"FirstName":{"value":"Counter Threat Unit Research Team"},"CompanyName":{"value":""},"Designation":{"value":""},"LinkedIn":{"value":{"href":""}},"Twitter":{"value":{"href":""}},"MetaTitle":{"value":"Counter Threat Unit Research Team | Secureworks"},"NoFollow":{"value":false},"ExcludeFromSearch":{"value":false},"NoIndex":{"value":false},"Page Design":null,"OpenGraphTitle":{"value":"Counter Threat Unit Research Team | Secureworks"},"OpenGraphDescription":{"value":""},"OpenGraphImageUrl":{"value":{"asset":null}},"OpenGraphType":{"value":""},"OpenGraphSiteName":{"value":"Secureworks"},"OpenGraphAdmins":{"value":""},"OpenGraphAppId":{"value":""},"TwitterImage":{"value":{}},"TwitterCardType":{"id":"32f6a4e4-93dd-4a9c-aa60-cdedb0bedabb","url":"/sitecore/system/settings/feature/experience-accelerator/sitemetadata/enums/twitter-card-types/summary-card-with-large-image","name":"Summary Card with Large Image","displayName":"Summary Card with Large Image","fields":{"Value":{"value":"summary_large_image"}}},"TwitterDescription":{"value":""},"TwitterSite":{"value":""},"TwitterTitle":{"value":""},"MetaKeywords":{"value":""},"MetaDescription":{"value":""},"Attributes":{"value":""},"FeaturedResources":[],"CustomTags":[],"GatedRequirementText":{"value":""},"GatedSuccessMessage":{"value":""},"GatedTitle":{"value":""}}}],"PublishedDate":{"value":"2022-08-17T02:00:00Z"},"LastUpdatedDate":{"value":"0001-01-01T00:00:00Z"},"DisplayDate":{"value":"0001-01-01T00:00:00Z"},"BusinessOwner":{"value":""},"Campaign":{"value":""},"CustomTags":[{"id":"36eb03d6-7645-45a6-9715-b8c452d6a6e8","url":"http://cd/sitecore/content/shared/taxonomy/content-type/content-type---threat-analysis","name":"Content Type - Threat Analysis","displayName":"Content Type - Threat Analysis","fields":{"Value":{"value":"Threat Analysis"}}},{"id":"0755cbd4-295d-4f10-8d4f-ce30adb25dba","url":"http://cd/sitecore/content/shared/taxonomy/topic/threat-intelligence","name":"Threat Intelligence","displayName":"Topic - Threat Intelligence","fields":{"Value":{"value":"Threat Intelligence"}}},{"id":"d591aaba-1816-4bec-8a75-7388c3adb175","url":"http://cd/sitecore/content/shared/taxonomy/service/threat-hunting-assessment","name":"Threat Hunting Assessment","displayName":"Service - Secureworks Threat Hunting Assessment","fields":{"Value":{"value":"Threat Hunting Assessment"}}},{"id":"4657b998-5773-410b-84b4-ab8bffb36f49","url":"http://cd/sitecore/content/shared/taxonomy/content-type/content-type---research","name":"Content Type - Research","displayName":"Content Type - Research","fields":{"Value":{"value":"Research"}}}],"PageLocation":{"id":"2e57e396-bd9e-4829-8646-55dd117e548f","url":"/sitecore/content/shared/locations/research","name":"research","displayName":"/research","fields":{"Value":{"value":"research"}}},"Page Design":{"id":"2b9967b1-47cf-4c13-a2ea-6ee507433909","url":"/presentation/page-designs/research-article","name":"Research Article","displayName":"Research Article","fields":{"PartialDesigns":{"value":"{5A1F0357-FC36-46A7-8236-A69E0E353F4A}|{2B412C03-2AF5-4F68-B8A4-4921D29B5DB4}|{ED6F2B34-AF34-4648-A828-ECBF550D950A}"}}},"OpenGraphTitle":{"value":"DarkTortilla Malware Analysis"},"OpenGraphDescription":{"value":"Learn how Secureworks CTU researchers have identified DarkTortilla samples delivering targeted malicious payloads, benign decoy documents, and executables."},"OpenGraphImageUrl":{"value":{"src":"http://www.secureworks.com/-/media/images/insights/resources/threat-analysis/2022/darktortilla/darktortilla-malware-ta_800x800.png?h=800\u0026iar=0\u0026w=800\u0026hash=F572C79EF036740F86184BECC4377968","alt":"DarkTortilla Malware Analysis","width":"800","height":"800","asset":null}},"OpenGraphType":{"value":""},"OpenGraphSiteName":{"value":"Secureworks"},"OpenGraphAdmins":{"value":""},"OpenGraphAppId":{"value":""},"TwitterImage":{"value":{}},"TwitterCardType":{"id":"32f6a4e4-93dd-4a9c-aa60-cdedb0bedabb","url":"/sitecore/system/settings/feature/experience-accelerator/sitemetadata/enums/twitter-card-types/summary-card-with-large-image","name":"Summary Card with Large Image","displayName":"Summary Card with Large Image","fields":{"Value":{"value":"summary_large_image"}}},"TwitterDescription":{"value":""},"TwitterSite":{"value":""},"TwitterTitle":{"value":""},"MetaKeywords":{"value":""},"MetaDescription":{"value":"Learn how Secureworks CTU researchers have identified DarkTortilla samples delivering targeted malicious payloads, benign decoy documents, and executables."},"Attributes":{"value":""},"FeaturedResources":[]},"databaseName":"web","deviceId":"fe5d7fdf-89c0-4d99-9aa3-b5fbd009c9f3","itemId":"8507d2d8-3e50-40a0-860a-1b403dd2bdaf","itemLanguage":"en","itemVersion":2,"layoutId":"d7a67121-8af8-4cf1-ba32-7351d1cd7662","templateId":"9f5e0978-58fb-40a6-8872-3e84b897af67","templateName":"Article Page","placeholders":{"headless-head":[{"uid":"14474d16-5448-4bdf-8e82-eab681f60cdb","componentName":"PartialDesignDynamicPlaceholder","dataSource":"","params":{"sid":"{713080BF-7200-4C6D-B9AE-6E97C295E7B1}","ph":"headless-head","sig":"sxa-research-article-without-hero"},"placeholders":{"sxa-research-article-without-hero":[{"uid":"72beed6c-ee49-4f3e-b057-3ee67bab1ee6","componentName":"CustomCss","dataSource":"{1637B697-8432-459B-842F-1709660E43CF}","fields":{"ScriptType":{"value":"Stylesheet"},"Source":{"value":""},"Attributes":{"value":""},"Content":{"value":"@media (min-width: 1024px) {\r\n.aside {\r\n    position: sticky;\r\n    top: -155px;\r\n    height: 100%;\r\n}\r\n}\r\n\r\n.aside .css-0 {\r\n    gap: 24px;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.aside .cmp-form-standalone {\r\n    padding: 48px 32px;\r\n}\r\n\r\n.aside .marketo-form .mktoForm h3{\r\n    text-align: left;\r\n}"}}},{"uid":"44a2c13c-4f45-49c7-94a4-83ee48aceb28","componentName":"CustomCss","dataSource":"{97676950-EC43-4C88-8221-AB14A40A68A4}","fields":{"ScriptType":{"value":"Stylesheet"},"Source":{"value":""},"Attributes":{"value":""},"Content":{"value":"@media (min-width: 1024px){\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden){\r\n    margin-bottom: 24px;\r\n}}\r\n\r\nsection[data-form-id=\"1784\"].marketo-form .mktoPlaceholder,\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFormCol {\r\n    width: 100%;\r\n}\r\n@media (min-width: 1024px){\r\nsection[data-form-id=\"1784\"].marketo-form .mktoPlaceholder,\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFormCol {\r\n    width: 49%;\r\n}\r\n}\r\n\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).Additional_Information__c,\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).Additional_Information__c .mktoFormCol--Additional_Information__c{\r\n    height: 54px;\r\n}\r\n\r\n\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).Additional_Information__c .mktoFormCol--Additional_Information__c .textarea-inside,\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).Additional_Information__c .mktoFormCol--Additional_Information__c textarea.mktoField {\r\nheight: 64px;\r\n}\r\n\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFieldWrap:not(.checkbox-list) .mktoField:not(input[type='checkbox']) {\r\n    font-size: 16px;\r\n    line-height: 16px;\r\n}\r\n\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFieldWrap:not(.checkbox-list) \u003e.mktoLabel {\r\n    /*top: 8px;*/\r\n}\r\n\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFieldWrap:not(.checkbox-list).date-inside \u003e.mktoLabel, \r\nsection[data-form-id=\"1784\"].marketo-form .mktoFieldWrap:not(.checkbox-list).invalid \u003e.mktoLabel,\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFieldWrap:not(.checkbox-list).valid \u003e.mktoLabel {\r\n    margin-top: 4px;\r\n    font-size: 13px;\r\n    line-height: 13px;\r\n}\r\n\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFieldWrap:not(.checkbox-list) .mktoField:not(input[type='checkbox'], textarea) {\r\nheight: 46px;\r\n}\r\n\r\n/*\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--optin {\r\n    margin-bottom: 8px;\r\n    margin-top: 0;\r\n}*/\r\n\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFormRow--optin span{\r\n    font-size: 13px;\r\n    line-height: 13px;\r\n    /*font-weight: bold;*/\r\n}\r\n\r\nsection[data-form-id=\"1784\"].marketo-form .form-title {\r\n    font-size: 38px;\r\n    line-height: 38px;\r\n    text-transform: uppercase;\r\nmargin-bottom: 40px;\r\n}\r\n@media (min-width: 1024px) {\r\nsection[data-form-id=\"1784\"].marketo-form .form-title {\r\n    font-size: 52px;\r\n    line-height: 52px;\r\n}\r\n}\r\n/* Fix misaligned select icon */\r\nsection[data-form-id].marketo-form .mktoFieldWrap:not(.checkbox-list).select-field-wrapper.invalid:before {\r\n    right: 10px; \r\n}\r\n\r\n.form-standalone.css-195a2qt{\r\npadding: 48px;\r\n}\r\n\r\n@media (min-width: 1024px){\r\nsection[data-form-id=\"1784\"] .mktoFormRow.mktoFormRow--count-2.mktoFormRow--optin.emailOptin.checkbox-inside.number-of-cols-2 .mktoFormCol:nth-child(1) {\r\n    margin-top: 0;\r\n}\r\nsection[data-form-id=\"1784\"] .mktoFormRow.mktoFormRow--count-2.mktoFormRow--optin.emailOptin.checkbox-inside.number-of-cols-2 .mktoFormCol:nth-child(2) {\r\n    margin-top: 2px;\r\n}\r\n}\r\n@media (min-width: 840px){\r\n#emailOptin {\r\n    margin: 0;\r\n    padding: 0;\r\n    margin-top: 0 !important;\r\n}\r\n}\r\n\r\n@media (max-width: 1023px){\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).Additional_Information__c {\r\n    margin-bottom: 30px;\r\n}\r\n}\r\n\r\n@media (min-width: 1023px) {\r\nsection[data-form-id=\"1784\"].marketo-form .mktoButtonRow button {\r\n    width: unset;\r\n}\r\n}"}}}]}},{"uid":"35da2ce7-4da8-4e3b-b9f8-1a0dd6667980","componentName":"PartialDesignDynamicPlaceholder","dataSource":"","params":{"sid":"{5A1F0357-FC36-46A7-8236-A69E0E353F4A}","ph":"headless-head","sig":"sxa-main-header"},"placeholders":{"sxa-main-header":[{"uid":"88d5fb1f-296c-4538-9021-64f8c761551f","componentName":"CustomCss","dataSource":"{281AF780-0E7E-4C81-BD7B-E52FED0DC563}","fields":{"ScriptType":{"value":"Stylesheet"},"Source":{"value":""},"Attributes":{"value":""},"Content":{"value":"/* START - CSS Two column width fix */\r\n.two-column-section-row__media picture {\r\n    display: block;\r\n    height: 100%;\r\n    width: 100%;\r\n}\r\n\r\n.two-column-section-row.css-1iut0a8 picture{\r\n    padding-right: 112px;\r\n}\r\n.two-column-section-row.css-1iut0a8 picture img{\r\n    padding-right: 0;\r\n}\r\n\r\n.two-column-section-row.css-1br79n6 picture{\r\n    padding-left: 112px;\r\n}\r\n.two-column-section-row.css-1br79n6 picture img{\r\n    padding-left: 0;\r\n}\r\n/* END - CSS Two column width fix */\r\n\r\n/*Hide empty Contact dropdown*/\r\nheader nav [aria-describedby='undefined dropdown'] {\r\n    display: none;\r\n}\r\n\r\n[role=\"tooltip\"] ul li:empty {\r\ndisplay:none;\r\n}\r\n\r\n/*Form*/\r\n.form-content .css-vicul9 img {\r\n    aspect-ratio: 16 / 9;\r\n}\r\n\r\n/*Form Hero Width Fix*/\r\n.sw-custom-container.css-1bd709e {\r\n    max-width: 1356px;\r\n}\r\n\r\n/* Hide Recaptcha badge globally */\r\n.grecaptcha-badge { visibility: hidden; }\r\n\r\n/* Nav Overlap util menu dropdown */\r\n.css-3hfhm5.MuiPopper-root {\r\n    z-index:99999;\r\n}\r\n/* Section Row unordered list spacing issue */\r\n.css-1l97qhw .description ul li {\r\n    margin-bottom: 16px;\r\n}\r\n\r\n/* Fix dropdowns in forms not being clickable*/\r\n.mktoFormRow label {\r\npointer-events: none;\r\n}\r\n\r\n/* Nav Fix empty mobile items */\r\n.css-vb228m:has(a:empty){\r\n    display: none;\r\n}\r\n.css-qhscje:has(.css-17o5nyn:empty) {\r\n    display: none;\r\n}\r\nul \u003e li \u003e .css-vubbuv:only-child{\r\n    display: none;\r\n}\r\n\r\n/* Press release date fix */\r\n#press-release .article-date {\r\n    max-width: 1356px;\r\n    width: 100%;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    box-sizing: border-box;\r\n}\r\n\r\n#sec-498bb170-303d-4843-b4e5-4eb51920a02e .article-date {\r\n    max-width: 1356px;\r\n    width: 100%;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    box-sizing: border-box;\r\n}\r\n\r\n@media (min-width: 1025px){\r\n#press-release .article-date {padding-left: 24px; padding-right: 24px;}\r\n}\r\n\r\n@media (min-width: 1025px){\r\n#sec-498bb170-303d-4843-b4e5-4eb51920a02e .article-date {padding-left: 24px; padding-right: 24px;}\r\n}\r\n\r\n/* Too much whitespace on article pages */\r\n.article-body .sw-styled-section.css-1rhhb3v {\r\npadding-top: 0;\r\n}\r\n\r\n@media (min-width: 1024px) {\r\n.css-1h0k3ki {\r\n    margin-bottom: 0;\r\n}\r\n}\r\n\r\n@media (min-width: 1024px) {\r\n.css-11feirs {\r\n    margin-bottom: 88px;\r\n}\r\n}\r\n\r\n/* Forms pages with empty secondary content */\r\n.article-gated-content:has(.sw-custom-container:empty) {\r\n    display: none;\r\n}\r\n\r\n/* Shrink space between links on section cards */\r\n.two-column-section-row__content .sw-cta-card-small + .sw-cta-card-small {\r\n    margin-top: 20px;\r\n}\r\n\r\n/* press release date alignment */\r\n.container .css-0 .cmp-article-date {\r\n    width: 100%;\r\n    margin-left: auto;\r\n    box-sizing: border-box;\r\n    margin-right: auto;\r\n    display: block;\r\n    max-width: 1356px;\r\n    margin-bottom: 0;\r\n    min-height: 0;\r\n}\r\n@media (min-width: 1025px) {\r\n    .container .css-0 .cmp-article-date {\r\n        padding-left: 24px;\r\n        padding-right: 24px;\r\n    }\r\n}\r\n\r\n/* Hide extra sidebar on load */\r\n.css-3kuqf7 .SecondFilterAccordion_sidebar {\r\n    display: none;\r\n}\r\n\r\n.cmp-form-standalone .marketo-form h1,\r\n.cmp-form-standalone .marketo-form h2,\r\n.cmp-form-standalone .marketo-form h3 {\r\n    text-transform: uppercase;\r\n}\r\n\r\n@media (min-width: 769px) {\r\n.cmp-in-page-nav span.title {\r\n    display:none;\r\n}\r\n\r\n.cmp-in-page-nav .active .navItems {\r\n    padding-left: 0;\r\n}\r\n}\r\n\r\n/* Nav capitalize */\r\n[role='tooltip'] .MuiContainer-root .MuiGrid-root *:not(.banner-main-link, h4, h3,h2,h1){\r\n    text-transform: unset;\r\n}\r\n\r\n[role='tooltip'] .MuiContainer-root .MuiGrid-root h1,\r\n[role='tooltip'] .MuiContainer-root .MuiGrid-root h2,\r\n[role='tooltip'] .MuiContainer-root .MuiGrid-root h3,\r\n[role='tooltip'] .MuiContainer-root .MuiGrid-root h4 {\r\n    text-transform: uppercase;\r\n    font-family: 'Saira Condensed';\r\n}\r\n\r\n[role='tooltip'] .MuiContainer-root .MuiGrid-root h4 \u003e div \u003e p {\r\n    text-transform: none !important;\r\n    font-family: figtree;\r\n}\r\n\r\n.marketo-form *:not(h1,h2,h3,h4,h5, .submit-button-style){\r\nfont-family: var(--body-font, \"Figtree\");\r\n}\r\n\r\nbody {\r\nfont-family: var(--body-font, \"Figtree\");\r\n}\r\n\r\n/* Fix stat card 2 column */\r\n.cmp-cards {\r\n    gap: 24px;\r\n}\r\n\r\n.cmp-cards \u003e div {\r\n    margin: 0 !important;\r\n}\r\n\r\n.container .article-body ol li::marker,\r\n.container .article-body ul li::marker {\r\n   color: #D9AB14;\r\n}\r\n\r\n/* JP Resource sidebar expand slightly */\r\n.cmp-search-filter:lang(ja-JP) \u003e div:first-child {\r\n    width: 230px; \r\n}\r\n\r\n/* Static 'blade' \r\n.css-c4sutr {\r\n    position: sticky;\r\n    z-index: 200;\r\n    top: 0;\r\n}\r\n\r\n#cmp-header-b4592c42.css-nv0hsa{\r\n    top: 40px !important;\r\n}\r\n#cmp-header-b4592c42.css-jkvw9e{\r\n    top: 0;\r\n}*/\r\n\r\n/* iphone logo */\r\n@media (max-width: 475px){\r\n    a[aria-label=\"Secureworks Homepage\"] svg {\r\n        max-width: 95%;\r\n    }\r\n}"}}},{"uid":"c32c9993-7601-4b8f-bcc8-1cb69f4d34cf","componentName":"CustomCss","dataSource":"{0877B4C5-7138-44F4-B8A5-4DA0424231F5}","fields":{"ScriptType":{"value":"Stylesheet"},"Source":{"value":""},"Attributes":{"value":""},"Content":{"value":"/* CSS fixes for tables */\r\n/*\r\n.article-body table td, th{border: 1px solid black; text-align:left;}\r\n.article-body table tbody tr:nth-child(even) td{background:none;}\r\n.article-body table tbody tr td:first-child{text-align:left;}\r\n*/\r\n\r\n/* CSS Fixes for headings and CTU spacing */\r\n.article-body h2{font-size: 38px !important; line-height: 38px !important;}\r\n.article-body h3{font-family:'FigTree' !important; font-size: 28px !important; line-height: 28px !important; text-transform: none;}\r\n.article-body h4{font-family:'FigTree' !important; font-size: 20px !important; line-height: 20px !important; text-transform: none;}\r\n\r\n/*CSS Fixes for No Image banners*/\r\n@media (min-width: 1024px){\r\n.article-body .sw-styled-section {padding-top: 0px; padding-bottom: 20px;} /* padding-top previously 80px*/\r\n.article-body {margin-bottom: 50px;}\r\n}\r\n.article-body .sw-styled-section {padding-top: 0px; padding-bottom: 40px;} /* padding-top previously 88px*/\r\n\r\n/*Firefox Fix for images*/\r\n.article-body .article-content img{height: inherit !important;}\r\n\r\n/* Auto-Line-Break For Code*/\r\npre {\r\n    white-space: pre-wrap !important; \r\n    white-space: -moz-pre-wrap !important; \r\n    white-space: -o-pre-wrap !important; \r\n    white-space: -ms-pre-wrap !important; \r\n    word-wrap: break-word !important;\r\n}\r\n\r\n/*Images scaling */\r\n@media screen and (max-width:768px){\r\n.sw-custom-container.css-1kvlezf .article-content img{width:100% !important;}}\r\n.article-body img{width: inherit !important;}\r\n\r\n/* CSS for Blockquotes */\r\n.article-body blockquote{margin: 0px; padding: 15px; font-size: 18px; font-weight: bold;}\r\n\r\n/* CSS to reduce top space in first paragraph */\r\n.article-body .article-content p:first-of-type {margin-block-start:0em;}"}}},{"uid":"8b782e26-8e77-46d4-8185-60f3a0732bb0","componentName":"CustomCss","dataSource":"{97676950-EC43-4C88-8221-AB14A40A68A4}","fields":{"ScriptType":{"value":"Stylesheet"},"Source":{"value":""},"Attributes":{"value":""},"Content":{"value":"@media (min-width: 1024px){\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden){\r\n    margin-bottom: 24px;\r\n}}\r\n\r\nsection[data-form-id=\"1784\"].marketo-form .mktoPlaceholder,\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFormCol {\r\n    width: 100%;\r\n}\r\n@media (min-width: 1024px){\r\nsection[data-form-id=\"1784\"].marketo-form .mktoPlaceholder,\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFormCol {\r\n    width: 49%;\r\n}\r\n}\r\n\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).Additional_Information__c,\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).Additional_Information__c .mktoFormCol--Additional_Information__c{\r\n    height: 54px;\r\n}\r\n\r\n\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).Additional_Information__c .mktoFormCol--Additional_Information__c .textarea-inside,\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).Additional_Information__c .mktoFormCol--Additional_Information__c textarea.mktoField {\r\nheight: 64px;\r\n}\r\n\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFieldWrap:not(.checkbox-list) .mktoField:not(input[type='checkbox']) {\r\n    font-size: 16px;\r\n    line-height: 16px;\r\n}\r\n\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFieldWrap:not(.checkbox-list) \u003e.mktoLabel {\r\n    /*top: 8px;*/\r\n}\r\n\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFieldWrap:not(.checkbox-list).date-inside \u003e.mktoLabel, \r\nsection[data-form-id=\"1784\"].marketo-form .mktoFieldWrap:not(.checkbox-list).invalid \u003e.mktoLabel,\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFieldWrap:not(.checkbox-list).valid \u003e.mktoLabel {\r\n    margin-top: 4px;\r\n    font-size: 13px;\r\n    line-height: 13px;\r\n}\r\n\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFieldWrap:not(.checkbox-list) .mktoField:not(input[type='checkbox'], textarea) {\r\nheight: 46px;\r\n}\r\n\r\n/*\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).mktoFormRow--optin {\r\n    margin-bottom: 8px;\r\n    margin-top: 0;\r\n}*/\r\n\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFormRow--optin span{\r\n    font-size: 13px;\r\n    line-height: 13px;\r\n    /*font-weight: bold;*/\r\n}\r\n\r\nsection[data-form-id=\"1784\"].marketo-form .form-title {\r\n    font-size: 38px;\r\n    line-height: 38px;\r\n    text-transform: uppercase;\r\nmargin-bottom: 40px;\r\n}\r\n@media (min-width: 1024px) {\r\nsection[data-form-id=\"1784\"].marketo-form .form-title {\r\n    font-size: 52px;\r\n    line-height: 52px;\r\n}\r\n}\r\n/* Fix misaligned select icon */\r\nsection[data-form-id].marketo-form .mktoFieldWrap:not(.checkbox-list).select-field-wrapper.invalid:before {\r\n    right: 10px; \r\n}\r\n\r\n.form-standalone.css-195a2qt{\r\npadding: 48px;\r\n}\r\n\r\n@media (min-width: 1024px){\r\nsection[data-form-id=\"1784\"] .mktoFormRow.mktoFormRow--count-2.mktoFormRow--optin.emailOptin.checkbox-inside.number-of-cols-2 .mktoFormCol:nth-child(1) {\r\n    margin-top: 0;\r\n}\r\nsection[data-form-id=\"1784\"] .mktoFormRow.mktoFormRow--count-2.mktoFormRow--optin.emailOptin.checkbox-inside.number-of-cols-2 .mktoFormCol:nth-child(2) {\r\n    margin-top: 2px;\r\n}\r\n}\r\n@media (min-width: 840px){\r\n#emailOptin {\r\n    margin: 0;\r\n    padding: 0;\r\n    margin-top: 0 !important;\r\n}\r\n}\r\n\r\n@media (max-width: 1023px){\r\nsection[data-form-id=\"1784\"].marketo-form .mktoFormRow:not(.mktoFormRow--hidden):not(.row-hidden):not(.step-hidden).Additional_Information__c {\r\n    margin-bottom: 30px;\r\n}\r\n}\r\n\r\n@media (min-width: 1023px) {\r\nsection[data-form-id=\"1784\"].marketo-form .mktoButtonRow button {\r\n    width: unset;\r\n}\r\n}"}}},{"uid":"76143615-d342-4ac7-a3cf-0ea183f7418f","componentName":"CustomJs","dataSource":"{426613AF-DACC-4435-8984-DE33A7CA69B9}","fields":{"ScriptType":{"value":"Script"},"Source":{"value":""},"Attributes":{"value":"id=gtmScript"},"Content":{"value":"console.log(\"GTM Starting\");\r\n(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\r\nnew Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\r\nj=d.createElement(s),dl=l!='dataLayer'?'\u0026l='+l:'';j.async=true;j.src=\r\n'https://www.googletagmanager.com/gtm.js?id='+i+dl;var n=d.querySelector('[nonce]');\r\nn\u0026\u0026j.setAttribute('nonce',n.nonce||n.getAttribute('nonce'));f.parentNode.insertBefore(j,f);\r\n})(window,document,'script','dataLayer','GTM-P6Z7M2');"}}},{"uid":"cbdfcdfe-d360-4a5e-b1a0-3a7382385cf6","componentName":"CustomJs","dataSource":"{21C5BE1B-CDD6-47A6-AD25-ED5F27A10CBE}"}]}}],"headless-header":[{"uid":"c9b6a2a7-934c-4c36-9f2c-d9d7d38a78b2","componentName":"PartialDesignDynamicPlaceholder","dataSource":"","params":{"sid":"{5A1F0357-FC36-46A7-8236-A69E0E353F4A}","ph":"headless-header","sig":"sxa-main-header"},"placeholders":{"sxa-main-header":[{"uid":"8e5dfc98-98ea-4aab-88f2-f1101ce87e0d","componentName":"Toaster","dataSource":"{C0A7067A-E40A-40CE-9D85-26C7D546243C}","params":{"Background Color":"{AB75AE31-0B30-4EB1-BCED-8C2531D85067}"},"fields":{"id":"c0a7067a-e40a-40ce-9d85-26c7d546243c","name":"Notification Bar","displayName":"Notification Bar","templateName":"ContentItem","templateId":"{0251E6E9-AF09-4F1D-9289-66B8150AA997}","url":"/content/navigation/notification-bar","searchPageUrl":"/","fields":{"link":{"value":{"href":"https://www.sophos.com/en-us/press/press-releases/2025/02/sophos-completes-secureworks-acquisition","text":"Sophos completes Secureworks acquisition","linktype":"external","url":"https://www.sophos.com/en-us/press/press-releases/2025/02/sophos-completes-secureworks-acquisition","target":"_blank"}}},"renderingParams":{"backgroundColor":{"id":"ab75ae31-0b30-4eb1-bced-8c2531d85067","name":"Notification Bar","displayName":"Notification Bar","templateName":"Color","templateId":"{F302568E-BBE1-4EBC-9823-3BD13A7D4D95}","url":"/sitecore/content/shared/colors/gradient/notification-bar","searchPageUrl":"/","fields":{"cssValue":{"value":"rgb(71, 62, 255)"}}}}}},{"uid":"2ac1340a-e57e-4238-a756-a734ef80d129","componentName":"Navigation","dataSource":"{FDD8CD09-0EEA-40B1-B7E9-D577B4592C42}","params":{"DynamicPlaceholderId":"1"},"fields":{"id":"fdd8cd09-0eea-40b1-b7e9-d577b4592c42","name":"Header","displayName":"Header","templateName":"Header","templateId":"{3D95A104-4358-44D9-97A2-04C02B4A7457}","url":"/content/navigation/header","searchPageUrl":"/","fields":{"link":{"value":{"text":"Request Demo","linktype":"internal","id":"{8ACA466C-7D14-4118-B3F1-C2EDFE4B9803}","href":"/contact/request-demo-xdr"}},"mainNavigation":{"id":"238df6fe-137c-4522-82f4-fe2142cabf20","url":"/content/navigation/header/menu","name":"Menu","displayName":"Menu"},"utilityNavigation":{"id":"41c5585c-bee1-4550-bd2c-ea6727e8bd12","url":"/content/navigation/header/top-menu","name":"Top Menu","displayName":"Top Menu"},"searchResultsLink":{"value":{"text":"Search Results","linktype":"internal","id":"{2DF29F3A-E591-41AE-88F0-4B47343D7E38}","href":"/search"}}},"children":[{"id":"238df6fe-137c-4522-82f4-fe2142cabf20","name":"Menu","displayName":"Menu","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu","searchPageUrl":"/","children":[{"id":"6b3714e1-5619-45ff-86cc-702c606bec80","name":"Platform","displayName":"Platform","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/platform","searchPageUrl":"/","fields":{"link":{"value":{"href":"javascript:void(0);return false;","text":"Platform","linktype":"javascript","url":"javascript:void(0)"}}},"children":[{"id":"43923ad7-4268-4f5c-a6c2-f1760355888b","name":"Taegis","displayName":"Taegis","templateName":"CTA","templateId":"{1BAA4DE3-FA8D-4719-8CFE-5B80D20D847E}","url":"/content/navigation/header/menu/platform/taegis","searchPageUrl":"/","fields":{"ctaType":{"id":"e6293862-4f5d-4a16-9102-799b219edd28","url":"/sitecore/content/shared/lookups/header-cta-types/image-and-title","name":"Image and Title","displayName":"Image and Title","fields":{"value":{"value":"one"}}},"image":{"value":{"src":"/-/media/images/shared/navigation/logo-taegis.svg?h=40\u0026iar=0\u0026w=141\u0026hash=E5EDFB5850829397C3B4DD4AEF85853C","alt":"Secureworks Taegis","width":"141","height":"40"}},"link":{"value":{"href":"/products","text":"About Taegis™","linktype":"internal","id":"{795B54EE-0089-4DC1-9D0C-204DA8A9ECCD}"}},"summary":{"value":"\u003cp\u003e\r\nThe Taegis cybersecurity platform powers our solutions to provide superior detection and unmatched response.\r\n\u003c/p\u003e"}}},{"id":"4e0af1dc-45a3-4dc9-94c8-8a896bea510d","name":"column 1","displayName":"column 1","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/platform/column-1","searchPageUrl":"/","children":[{"id":"2ec3ed78-4ba9-4977-8db5-2334dc0e43a6","name":"group 1","displayName":"group 1","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/platform/column-1/group-1","searchPageUrl":"/","fields":{"title":{"value":"Detection \u0026 Response"}},"children":[{"id":"2ea296f2-8dc8-467c-a8da-c04cb4024ee8","name":"navigation link 1","displayName":"navigation link 1","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/platform/column-1/group-1/navigation-link-1","searchPageUrl":"/","fields":{"link":{"value":{"href":"/products/xdr","text":"XDR","linktype":"internal","id":"{A58C43A9-F86F-4787-BC39-99BCF87C9E4E}"}}}},{"id":"1afd7b2e-cd39-4ecf-8478-0b458e9267d3","name":"navigation link 2","displayName":"navigation link 2","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/platform/column-1/group-1/navigation-link-2","searchPageUrl":"/","fields":{"link":{"value":{"href":"/products/log-management","text":"Log Management","linktype":"internal","id":"{45A1F15C-C7D7-4C34-A116-1A0B49B9C20E}"}}}},{"id":"3f64e1e5-6bce-4f86-8b24-c3c7fd39f8b4","name":"navigation link 3","displayName":"navigation link 3","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/platform/column-1/group-1/navigation-link-3","searchPageUrl":"/","fields":{"link":{"value":{"href":"/resources/tl-mitre-adversary-software-coverage-tool","text":"MITRE ATT\u0026CK Coverage","linktype":"internal","id":"{74CFC183-9C30-442C-922B-35B149300D54}"}}}}]},{"id":"65763517-2225-4780-82a2-e2a08aca02e8","name":"group 2","displayName":"group 2","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/platform/column-1/group-2","searchPageUrl":"/","fields":{"title":{"value":"Network Security"}},"children":[{"id":"829021ef-8bf1-4fa7-bfdc-6ba24eebc706","name":"navigation link 1","displayName":"navigation link 1","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/platform/column-1/group-2/navigation-link-1","searchPageUrl":"/","fields":{"link":{"value":{"href":"/products/ndr","text":"NDR","linktype":"internal","id":"{85B1B49E-B3AD-4644-946F-E9B3615E906F}"}}}}]}]},{"id":"d05ad209-d23b-4e00-ba05-31aad8bfa405","name":"column 2","displayName":"column 2","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/platform/column-2","searchPageUrl":"/","children":[{"id":"d7bb6ed9-8cca-4845-a2fb-80396c3e024c","name":"group 1","displayName":"group 1","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/platform/column-2/group-1","searchPageUrl":"/","fields":{"title":{"value":"Endpoint Security"}},"children":[{"id":"bc22c11b-5f76-4af0-8ec1-701007a22267","name":"navigation link 1","displayName":"navigation link 1","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/platform/column-2/group-1/navigation-link-1","searchPageUrl":"/","fields":{"link":{"value":{"href":"/products/edr","text":"EDR","linktype":"internal","id":"{4C0772D6-E38B-44E4-903B-F16C56D98398}"}}}},{"id":"ebffa029-34e4-41b8-af6c-3748f807fa28","name":"navigation link 2","displayName":"navigation link 2","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/platform/column-2/group-1/navigation-link-2","searchPageUrl":"/","fields":{"link":{"value":{"href":"/products/ngav","text":"NGAV","linktype":"internal","id":"{23BA2D6F-EA9C-482C-B33D-992A78234631}"}}}}]},{"id":"7415ea56-5e74-4483-9673-fcf06fde54de","name":"group 2","displayName":"group 2","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/platform/column-2/group-2","searchPageUrl":"/","fields":{"title":{"value":"Identity Security"}},"children":[{"id":"e6ad2b50-8012-4941-b834-80f8ff96c6a1","name":"navigation link 1","displayName":"navigation link 1","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/platform/column-2/group-2/navigation-link-1","searchPageUrl":"/","fields":{"link":{"value":{"href":"/products/idr","text":"ITDR","linktype":"internal","id":"{DA08D745-CD6C-43FC-B964-1FEBB9C0AF8B}"}}}}]}]},{"id":"01d8327c-63fe-4af2-bf59-b7ef93811fa5","name":"column 3","displayName":"column 3","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/platform/column-3","searchPageUrl":"/","children":[{"id":"15bf2790-87a6-48fa-9c67-7e40c70306c5","name":"group 1","displayName":"group 1","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/platform/column-3/group-1","searchPageUrl":"/","fields":{"title":{"value":"OT Security"}},"children":[{"id":"5f9a3379-2302-49e5-9453-404476b017f4","name":"navigation link 1","displayName":"navigation link 1","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/platform/column-3/group-1/navigation-link-1","searchPageUrl":"/","fields":{"link":{"value":{"href":"/services/ot","text":"Operational Technology","linktype":"internal","id":"{11A34EFF-9C34-4FA8-993E-9D8D6A609D50}"}}}}]},{"id":"252487cf-fc87-4589-8ed2-2a706813a1bd","name":"group 2","displayName":"group 2","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/platform/column-3/group-2","searchPageUrl":"/","fields":{"title":{"value":"Vulnerability Management"}},"children":[{"id":"66fa6864-7635-4029-836c-7e6e392af48f","name":"navigation link 1","displayName":"navigation link 1","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/platform/column-3/group-2/navigation-link-1","searchPageUrl":"/","fields":{"link":{"value":{"href":"/products/vdr","text":"Vulnerability Risk Prioritization","linktype":"internal","id":"{2F07FFF0-C4A4-4AC3-A16A-789E570F47C3}"}}}}]}]},{"id":"392515f6-5e36-481e-8c0a-ec270ac6ec9c","name":"Explore Managed Detection Response","displayName":"Explore Managed Detection Response","templateName":"CTA Bottom","templateId":"{C448C8C3-1FD4-4A3B-BFB2-F3CF3911285C}","url":"/content/navigation/header/menu/platform/explore-managed-detection-response","searchPageUrl":"/","fields":{"title":{"value":"Secureworks Taegis ManagedXDR™ provides 24x7 MDR services."},"link":{"value":{"href":"/services/managedxdr","text":"EXPLORE MANAGED DETECTION \u0026 RESPONSE OPTIONS","linktype":"internal","id":"{FA6FB773-E5BC-404A-BEE9-76A9B64EFD4D}"}}}}]},{"id":"e2dd63b6-3845-407e-8187-f3faaac03503","name":"Services","displayName":"Services","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/services","searchPageUrl":"/","fields":{"link":{"value":{"href":"javascript:void(0);return false;","text":"Services","linktype":"javascript","url":"javascript:void(0)"}}},"children":[{"id":"289af781-35b9-465b-9c0a-abb80a6d61a7","name":"column 1 cta","displayName":"column 1 cta","templateName":"CTA","templateId":"{1BAA4DE3-FA8D-4719-8CFE-5B80D20D847E}","url":"/content/navigation/header/menu/services/column-1-cta","searchPageUrl":"/","fields":{"ctaType":{"id":"41c723ee-d921-45b4-b728-b34eab28c8f2","url":"/sitecore/content/shared/lookups/header-cta-types/title-and-description","name":"Title and Description","displayName":"Title and Description","fields":{"value":{"value":"three"}}},"title":{"value":"Experiencing a breach?"},"link":{"value":{"href":"/services/incident-management-retainer","text":"Incident Management Retainer","linktype":"internal","id":"{3188F5D5-4EFD-4493-B70D-04E4A5C500D8}"}},"summary":{"value":"\u003cp\u003e1-770-870-6343\u003c/p\u003e\n\u003cp style=\"margin-top: 3em; min-width: 217px;\"\u003e\n\u003ca class=\"banner-main-link css-12yi6p6\" href=\"/services/emergency-incident-response\"\u003eEmergency Incident Response\u003c/a\u003e\n\u003c/p\u003e"}}},{"id":"c4083974-6539-4bdb-8646-dce78f87bef2","name":"column 2","displayName":"column 2","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/services/column-2","searchPageUrl":"/","children":[{"id":"e2b5a630-4854-4585-9526-af159f62f217","name":"group 1","displayName":"group 1","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/services/column-2/group-1","searchPageUrl":"/","fields":{"title":{"value":"Managed Detection \u0026 Response"}},"children":[{"id":"479c603e-0a69-4272-92c6-cafa15a644db","name":"navigation link 1","displayName":"navigation link 1","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/services/column-2/group-1/navigation-link-1","searchPageUrl":"/","fields":{"link":{"value":{"href":"/services/managedxdr","text":"MDR Overview","linktype":"internal","id":"{FA6FB773-E5BC-404A-BEE9-76A9B64EFD4D}"}}}},{"id":"f010ae7e-0d56-4a85-9c75-3f3077875817","name":"navigation link 2","displayName":"navigation link 2","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/services/column-2/group-1/navigation-link-2","searchPageUrl":"/","fields":{"link":{"value":{"href":"/services/threat-hunting","text":"Threat Hunting","linktype":"internal","id":"{82DC3F3F-D07A-45BE-B6B0-B93E6A876717}"}}}},{"id":"6215f873-8239-42db-b8db-9dd86de260f1","name":"navigation link 3","displayName":"navigation link 3","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/services/column-2/group-1/navigation-link-3","searchPageUrl":"/","fields":{"link":{"value":{"href":"/services/ot","text":"MDR for OT","linktype":"internal","id":"{11A34EFF-9C34-4FA8-993E-9D8D6A609D50}"}}}},{"id":"f0a2aa63-7d3a-44e4-a149-785923694078","name":"navigation link 4","displayName":"navigation link 4","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/services/column-2/group-1/navigation-link-4","searchPageUrl":"/","fields":{"link":{"value":{"href":"/services/managedxdr/microsoft","text":"MDR for Microsoft","linktype":"internal","id":"{56E808B7-4C4F-4F17-AACF-41ED2369D537}"}}}}]}]},{"id":"c93c705a-8a2d-4084-b63e-fee0bf80e994","name":"column 3","displayName":"column 3","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/services/column-3","searchPageUrl":"/","children":[{"id":"1ad101ba-b0db-4503-8876-e01351180e04","name":"group 1","displayName":"group 1","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/services/column-3/group-1","searchPageUrl":"/","fields":{"title":{"value":"Consulting"}},"children":[{"id":"67c1b4e4-9a4e-4e95-a294-ba1c0990d357","name":"navigation link 1","displayName":"navigation link 1","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/services/column-3/group-1/navigation-link-1","searchPageUrl":"/","fields":{"link":{"value":{"href":"/services/consulting","text":"Consulting Services Overview","linktype":"internal","id":"{378365AC-43B1-4559-9D4F-F205FA876093}"}}}},{"id":"098536f9-4f8e-4dad-b396-fddfcc163bd5","name":"navigation link 2","displayName":"navigation link 2","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/services/column-3/group-1/navigation-link-2","searchPageUrl":"/","fields":{"link":{"value":{"href":"/services/risk","text":"Risk Assessment","linktype":"internal","id":"{34F6E073-4864-4600-8246-8EE6DBA54DF6}"}}}},{"id":"79eab396-7cd5-41a7-892d-42438ca77d20","name":"navigation link 3","displayName":"navigation link 3","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/services/column-3/group-1/navigation-link-3","searchPageUrl":"/","fields":{"link":{"value":{"href":"/services/security-preparedness","text":"Security Preparedness","linktype":"internal","id":"{DE18C38C-BB4A-46C4-B331-F6A3E3CC58F8}"}}}},{"id":"34e46d0d-daca-492d-b841-5e63057d86ff","name":"navigation link 4","displayName":"navigation link 4","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/services/column-3/group-1/navigation-link-4","searchPageUrl":"/","fields":{"link":{"value":{"href":"/services/resiliency-testing","text":"Resiliency Testing","linktype":"internal","id":"{03D4D2F5-DB10-4CB0-A02E-8F07E987BA70}"}}}}]}]},{"id":"29bb14c8-c4af-43e3-924d-e154ae645742","name":"column 4","displayName":"column 4","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/services/column-4","searchPageUrl":"/","children":[{"id":"0ea4b987-d296-4a10-92a2-4e3081f4abaf","name":"group 1","displayName":"group 1","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/services/column-4/group-1","searchPageUrl":"/","fields":{"title":{"value":"Professional Services"}},"children":[{"id":"d4834e15-b2c1-4560-b076-28decf7e47f5","name":"navigation link 1","displayName":"navigation link 1","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/services/column-4/group-1/navigation-link-1","searchPageUrl":"/","fields":{"link":{"value":{"href":"/services/professional-services","text":"Professional Services Overview","linktype":"internal","id":"{F0850C67-96E5-40B5-9724-092177BFF892}"}}}},{"id":"5d8cc88c-0e54-4a23-9d83-4a5f219dee41","name":"navigation link 2","displayName":"navigation link 2","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/services/column-4/group-1/navigation-link-2","searchPageUrl":"/","fields":{"link":{"value":{"href":"/services/onboarding","text":"Taegis Onboarding","linktype":"internal","id":"{27ACED52-FC48-49AF-A081-E70F89CC3FB8}"}}}},{"id":"6de5a2be-394e-4277-b279-b0f255bbef69","name":"navigation link 3","displayName":"navigation link 3","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/services/column-4/group-1/navigation-link-3","searchPageUrl":"/","fields":{"link":{"value":{"href":"/services/steady-state","text":"Steady State Services","linktype":"internal","id":"{FE201751-8270-4870-9E91-29683338F43A}"}}}}]}]}]},{"id":"47925244-8cdf-4396-a0e5-79b582807615","name":"Solutions","displayName":"Solutions","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/solutions","searchPageUrl":"/","fields":{"link":{"value":{"href":"javascript:void(0);return false;","text":"Solutions","linktype":"javascript","url":"javascript:void(0)"}}},"children":[{"id":"cd1c71c1-37ac-420c-beff-ef0afa593d32","name":"Artificial Intelligence","displayName":"Artificial Intelligence","templateName":"CTA","templateId":"{1BAA4DE3-FA8D-4719-8CFE-5B80D20D847E}","url":"/content/navigation/header/menu/solutions/artificial-intelligence","searchPageUrl":"/","fields":{"ctaType":{"id":"41c723ee-d921-45b4-b728-b34eab28c8f2","url":"/sitecore/content/shared/lookups/header-cta-types/title-and-description","name":"Title and Description","displayName":"Title and Description","fields":{"value":{"value":"three"}}},"title":{"value":"Artificial Intelligence"},"link":{"value":{"href":"/about/why-secureworks/ai","text":"Learn About Secureworks AI","linktype":"internal","id":"{1496DFF3-184E-498D-BA4F-45DE912DB133}"}},"summary":{"value":"\u003cp\u003e Secureworks built-in AI enhances detections, accelerates responses, and improves analyst efficiency.\u003c/p\u003e"}}},{"id":"6a85d44f-240c-4f4d-b058-05141aa35325","name":"Need","displayName":"Need","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/solutions/need","searchPageUrl":"/","children":[{"id":"f9097cc1-c2ab-4bf9-b4ce-be05b171b7b0","name":"Group","displayName":"Group","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/solutions/need/group","searchPageUrl":"/","fields":{"title":{"value":"Need"}},"children":[{"id":"13247fa8-347c-4548-b1e6-287da2bd2d0f","name":"Accelerate Security Maturity","displayName":"Accelerate Security Maturity","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/solutions/need/group/accelerate-security-maturity","searchPageUrl":"/","fields":{"link":{"value":{"href":"/solutions/need/security-maturity","text":"Accelerate Security Maturity","linktype":"internal","id":"{2556D9F4-3025-4CFD-ABD8-6E6D85B0FF74}"}}}},{"id":"573d318b-4f5b-451e-9c20-bc520fe22b2b","name":"Consolidate Security Tools","displayName":"Consolidate Security Tools","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/solutions/need/group/consolidate-security-tools","searchPageUrl":"/","fields":{"link":{"value":{"href":"/solutions/need/tech-consolidation","text":"Consolidate Security Tools","linktype":"internal","id":"{888A91C8-908A-40E0-874A-A033D73C425E}"}}}},{"id":"3dee1e4b-8a05-4c02-b243-b6d3d56b3628","name":"Maximize Microsoft Security","displayName":"Maximize Microsoft Security","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/solutions/need/group/maximize-microsoft-security","searchPageUrl":"/","fields":{"link":{"value":{"href":"/solutions/need/microsoft","text":"Maximize Microsoft Security","linktype":"internal","id":"{35C36EF1-5248-4189-B138-7D859E47B154}"}}}},{"id":"f902ab45-3646-42c1-857d-711f4e6a1af0","name":"Monitor Both IT and OT","displayName":"Monitor Both IT and OT","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/solutions/need/group/monitor-both-it-and-ot","searchPageUrl":"/","fields":{"link":{"value":{"href":"/solutions/need/monitor-it-ot","text":"Monitor Both IT and OT","linktype":"internal","id":"{A071166D-04D9-431E-BEB8-C9153CE1597B}"}}}},{"id":"d6c000db-7dfe-49dd-8c37-5588b4f9cac7","name":"Reduce Teams Burden","displayName":"Reduce Teams Burden","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/solutions/need/group/reduce-teams-burden","searchPageUrl":"/","fields":{"link":{"value":{"href":"/solutions/need/reduce-teams-burden","text":"Reduce Team's Burden","linktype":"internal","id":"{4DF735FD-0433-47E6-9A1D-FCF108F1EFD3}"}}}}]}]},{"id":"e5fccad2-4887-4550-be3d-de3a78361ea1","name":"Industries","displayName":"Industries","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/solutions/industries","searchPageUrl":"/","children":[{"id":"9a8f1f30-925a-4778-98e2-2d6e9fc8e09c","name":"Group","displayName":"Group","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/solutions/industries/group","searchPageUrl":"/","fields":{"title":{"value":"Industries"}},"children":[{"id":"d3ea4044-520b-4caf-8444-db04d4ebff2e","name":"Education","displayName":"Education","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/solutions/industries/group/education","searchPageUrl":"/","fields":{"link":{"value":{"href":"/solutions/industries/education","text":"Education","linktype":"internal","id":"{39248500-A22B-4A0F-9A9E-82BBAECA3BD2}"}}}},{"id":"1d47dca3-f397-4b22-a273-3acffc5f38e8","name":"Financial","displayName":"Financial","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/solutions/industries/group/financial","searchPageUrl":"/","fields":{"link":{"value":{"href":"/solutions/industries/financial","text":"Financial","linktype":"internal","id":"{DC7FF9A4-5768-4A0B-AF02-F71D07BAB85C}"}}}},{"id":"b8bb17f6-6e65-4326-b52d-125c2f725ae4","name":"Government","displayName":"Government","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/solutions/industries/group/government","searchPageUrl":"/","fields":{"link":{"value":{"href":"/solutions/industries/government","text":"Government","linktype":"internal","id":"{6FE97D6A-E772-43CC-BFAD-1BBBB32EF6FA}"}}}},{"id":"a47f34df-ec8e-4ba9-a4a3-ae4677c0bd10","name":"Manufacturing","displayName":"Manufacturing","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/solutions/industries/group/manufacturing","searchPageUrl":"/","fields":{"link":{"value":{"href":"/solutions/industries/manufacturing","text":"Manufacturing","linktype":"internal","id":"{13DCEAC9-C57B-4B05-8EA7-FD2D55CC5F7A}"}}}}]}]}]},{"id":"e52c5014-cecd-439f-ab18-965fcf9ffb6d","name":"Why Secureworks","displayName":"Why Secureworks","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/why-secureworks","searchPageUrl":"/","fields":{"link":{"value":{"href":"javascript:void(0);return false;","text":"About","linktype":"javascript","url":"javascript:void(0)"}}},"children":[{"id":"61cbc306-d119-4a4a-a0d4-1e87f3abbd97","name":"See Customer Stories","displayName":"See Customer Stories","templateName":"CTA","templateId":"{1BAA4DE3-FA8D-4719-8CFE-5B80D20D847E}","url":"/content/navigation/header/menu/why-secureworks/see-customer-stories","searchPageUrl":"/","fields":{"ctaType":{"id":"e4f4acc4-5880-4bf5-9957-81023b3bcc68","url":"/sitecore/content/shared/lookups/header-cta-types/quote","name":"Quote","displayName":"Quote","fields":{"value":{"value":"two"}}},"link":{"value":{"href":"/about/customers","text":"See Customer Stories","linktype":"internal","id":"{18952EE1-784D-430F-8FFD-B28DF2B4B4F3}"}},"summary":{"value":"\u003cp\u003e\u003cstrong\u003e\"Investing in Secureworks Taegis is more cost effective for us than building out an internal SOC, I gain immediate access to a deep bench of very skilled, cross-disciplinary cybersecurity team members, and I lower my overall risk profile.\"\u003c/strong\u003e\n\u003c/p\u003e\n\u003cp\u003e\n\u003cstrong\u003eBrian Grime\u003c/strong\u003e\u003cbr /\u003e\nCIO, Superior Credit Union\n\u003c/p\u003e"}}},{"id":"eca2e44a-9f14-4b9e-af10-b78f2163787f","name":"About","displayName":"About","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/why-secureworks/about","searchPageUrl":"/","children":[{"id":"7b25f48e-49c9-4247-b76d-53eaf0ab160c","name":"Group","displayName":"Group","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/why-secureworks/about/group","searchPageUrl":"/","fields":{"title":{"value":"Why Secureworks?"}},"children":[{"id":"1e88e752-35d7-4e3a-9723-b48135b3fc8a","name":"Why Secureworks","displayName":"Why Secureworks","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/why-secureworks/about/group/why-secureworks","searchPageUrl":"/","fields":{"link":{"value":{"href":"/about/why-secureworks","text":"Why Secureworks","linktype":"internal","id":"{4B603C28-D78D-40B3-8FD7-04F1BC20D5F9}"}}}},{"id":"51d97f40-7a8c-443b-80a7-2b15b65d1184","name":"Who We Serve","displayName":"Who We Serve","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/why-secureworks/about/group/who-we-serve","searchPageUrl":"/","fields":{"link":{"value":{"href":"/about/who-we-serve","text":"Who We Serve","linktype":"internal","id":"{0DE18916-5FC2-4F72-A851-A4D946E72D99}"}}}},{"id":"ae3e4b05-208b-460c-9fa4-80eac40d479c","name":"Our Customers","displayName":"Our Customers","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/why-secureworks/about/group/our-customers","searchPageUrl":"/","fields":{"link":{"value":{"href":"/about/customers","text":"Customer Trust","linktype":"internal","id":"{18952EE1-784D-430F-8FFD-B28DF2B4B4F3}"}}}},{"id":"169204d4-16b2-41ef-beaf-31dea58ce391","name":"Compare Secureworks","displayName":"Compare Secureworks","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/why-secureworks/about/group/compare-secureworks","searchPageUrl":"/","fields":{"link":{"value":{"href":"/about/why-secureworks/competition","text":"Compare Secureworks","linktype":"internal","id":"{D9B649DE-8CE5-4DED-A706-AD76319F97B4}"}}}},{"id":"5747a9a4-5045-4a31-a338-ed0b2dafa183","name":"At Your Side","displayName":"At Your Side","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/why-secureworks/about/group/at-your-side","searchPageUrl":"/","fields":{"link":{"value":{"href":"/about/why-secureworks/at-your-side","text":"At Your Side","linktype":"internal","id":"{A8D8DE19-9900-48F9-B866-890A7737FF68}"}}}},{"id":"303a9ecb-fa39-4f1f-85e4-5500f20a7183","name":"ROI Calculator","displayName":"ROI Calculator","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/why-secureworks/about/group/roi-calculator","searchPageUrl":"/","fields":{"link":{"value":{"href":"/services/managedxdr/calculator","text":"ROI Calculator","linktype":"internal","id":"{EEC8FEE0-5EE9-41A2-ADA9-D5D665A0B6C9}"}}}},{"id":"3688cdf3-c8c1-4d83-a01c-750c25cd87dd","name":"Secureworks AI","displayName":"Secureworks AI","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/why-secureworks/about/group/secureworks-ai","searchPageUrl":"/","fields":{"link":{"value":{"href":"/about/why-secureworks/ai","text":"Secureworks AI","linktype":"internal","id":"{1496DFF3-184E-498D-BA4F-45DE912DB133}"}}}},{"id":"442298a8-5d88-43ab-80d2-7751713b77d2","name":"Awards and Recognition","displayName":"Awards and Recognition","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/why-secureworks/about/group/awards-and-recognition","searchPageUrl":"/","fields":{"link":{"value":{"href":"/about/why-secureworks/awards","text":"Awards \u0026 Recognition","linktype":"internal","id":"{B03341F5-DCF9-4457-923A-02253A309600}"}}}}]}]},{"id":"ba14d28d-1865-4e4a-aa81-ac636b3e3425","name":"Company","displayName":"Company","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/why-secureworks/company","searchPageUrl":"/","children":[{"id":"341a3828-59d2-483b-84d9-2c1e3f3125c5","name":"Group","displayName":"Group","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/why-secureworks/company/group","searchPageUrl":"/","fields":{"title":{"value":"About Us"}},"children":[{"id":"6cd11cb0-d42c-4fc6-b56a-70237593b27b","name":"Corporate Overview","displayName":"Corporate Overview","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/why-secureworks/company/group/corporate-overview","searchPageUrl":"/","fields":{"link":{"value":{"href":"/about","text":"Corporate Overview","linktype":"internal","id":"{951B65EB-D21D-4F3E-BC34-BE6AF4725856}"}}}},{"id":"d2f52f00-8c52-460f-9728-aaa1fea5725b","name":"Counter Threat Unit","displayName":"Counter Threat Unit","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/why-secureworks/company/group/counter-threat-unit","searchPageUrl":"/","fields":{"link":{"value":{"href":"/about/counter-threat-unit","text":"Counter Threat Unit","linktype":"internal","id":"{9B8D664E-54FE-4B16-ACC7-1107CA4FF463}"}}}},{"id":"0cf42336-0e58-4e52-b60a-faf575007ce8","name":"Office Locations","displayName":"Office Locations","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/why-secureworks/company/group/office-locations","searchPageUrl":"/","fields":{"link":{"value":{"href":"/about/offices","text":"Office Locations","linktype":"internal","id":"{65168145-C8E6-4820-92D1-B803A0A718E1}"}}}}]}]},{"id":"85b3a010-a304-4f65-9ad2-5caa047e839a","name":"Careers","displayName":"Careers","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/why-secureworks/careers","searchPageUrl":"/","children":[{"id":"83ba46c4-4cce-4a43-931b-de6b146d9768","name":"Group","displayName":"Group","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/why-secureworks/careers/group","searchPageUrl":"/","fields":{"title":{"value":"Careers"}},"children":[{"id":"c6e18fa2-accf-41c3-b5fd-e97579e39aa4","name":"Careers","displayName":"Careers","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/why-secureworks/careers/group/careers","searchPageUrl":"/","fields":{"link":{"value":{"href":"https://www.sophos.com/en-us/careers","text":"Careers","linktype":"external","url":"https://www.sophos.com/en-us/careers","target":"_blank"}}}}]}]}]},{"id":"83a276b8-ef79-449b-a9b1-44d80fa36034","name":"Partners","displayName":"Partners","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/partners","searchPageUrl":"/","fields":{"link":{"value":{"href":"javascript:void(0);return false;","text":"Partners","linktype":"javascript","url":"javascript:void(0)"}}},"children":[{"id":"cbe80d15-83a4-4220-a2ee-0e77b6712c7b","name":"Become a Partner","displayName":"Become a Partner","templateName":"CTA","templateId":"{1BAA4DE3-FA8D-4719-8CFE-5B80D20D847E}","url":"/content/navigation/header/menu/partners/become-a-partner","searchPageUrl":"/","fields":{"ctaType":{"id":"41c723ee-d921-45b4-b728-b34eab28c8f2","url":"/sitecore/content/shared/lookups/header-cta-types/title-and-description","name":"Title and Description","displayName":"Title and Description","fields":{"value":{"value":"three"}}},"title":{"value":"Global Partner Program"},"link":{"value":{"href":"/partners","text":"Partners Overview","linktype":"internal","id":"{C17CB81F-05DC-4E62-A38F-3FFBDA98D881}"}},"summary":{"value":"\u003cp\u003e\nSecuring our customers' mission together.\n\u003c/p\u003e"}}},{"id":"8c5dbc8c-6496-4b6d-b496-dfa701539c6d","name":"Partner Program","displayName":"Partner Program","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/partners/partner-program","searchPageUrl":"/","children":[{"id":"0b1f85ca-fe5d-483e-8edb-dfbd8d5ec69c","name":"Group","displayName":"Group","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/partners/partner-program/group","searchPageUrl":"/","fields":{"title":{"value":"Partner Program"}},"children":[{"id":"2f2b0481-e164-4567-824e-f94a5e415edf","name":"Solution Providers","displayName":"Solution Providers","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/partners/partner-program/group/solution-providers","searchPageUrl":"/","fields":{"link":{"value":{"href":"/partners/solution-providers","text":"Solution Providers","linktype":"internal","id":"{7A17BF90-2C1F-44FD-B8C0-942DCC34E9D2}"}}}},{"id":"67d7ba86-6cab-4c43-be73-98df909468ac","name":"Managed Service Providers","displayName":"Managed Service Providers","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/partners/partner-program/group/managed-service-providers","searchPageUrl":"/","fields":{"link":{"value":{"href":"/partners/mssp","text":"Managed Service Providers","linktype":"internal","id":"{B12E8631-975F-462C-A2C6-10F6C1318EBA}"}}}},{"id":"7a73333c-838b-4dda-883d-4682fad5d303","name":"Technology Alliances","displayName":"Technology Alliances","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/partners/partner-program/group/technology-alliances","searchPageUrl":"/","fields":{"link":{"value":{"href":"/partners/technology","text":"Technology Alliances","linktype":"internal","id":"{A7F21FDD-A26A-487E-93AF-313BBBDC7ED3}"}}}},{"id":"8b2ab51c-88e4-496f-9ad0-e44b732caecb","name":"Cyber Risk","displayName":"Cyber Risk","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/partners/partner-program/group/cyber-risk","searchPageUrl":"/","fields":{"link":{"value":{"href":"/partners/cyber-risk-program","text":"Cyber Risk","linktype":"internal","id":"{32C0CDED-3E3B-40FF-9505-12A842706293}"}}}}]}]},{"id":"af269b30-5f28-4e32-893b-a037131ec270","name":"Get Started","displayName":"Get Started","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/partners/get-started","searchPageUrl":"/","children":[{"id":"238b6f52-335e-4b57-8145-a18454445a32","name":"Group","displayName":"Group","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/partners/get-started/group","searchPageUrl":"/","fields":{"title":{"value":"Get Started"}},"children":[{"id":"9be1d641-093d-424e-93f9-d5da75b18ad0","name":"Request More Information","displayName":"Request More Information","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/partners/get-started/group/request-more-information","searchPageUrl":"/","fields":{"link":{"value":{"href":"/contact/partners","text":"Request More Information","linktype":"internal","id":"{89EC5524-72CA-48AE-86E4-F31C70030D27}"}}}},{"id":"28388f94-2b01-42f7-86c5-f9ca0b32d89e","name":"Partner Portal Login","displayName":"Partner Portal Login","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/partners/get-started/group/partner-portal-login","searchPageUrl":"/","fields":{"link":{"value":{"href":"https://secureworks.my.site.com/partners/s/","text":"Partner Portal Login","linktype":"external","url":"https://secureworks.my.site.com/partners/s/"}}}},{"id":"62eb053e-0a26-418a-b0c8-3a8184f3c203","name":"Submit a Deal Registration","displayName":"Submit a Deal Registration","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/partners/get-started/group/submit-a-deal-registration","searchPageUrl":"/","fields":{"link":{"value":{"href":"https://secureworks.my.site.com/partners/s/register-a-deal","text":"Submit a Deal Registration","linktype":"external","url":"https://secureworks.my.site.com/partners/s/register-a-deal"}}}}]}]},{"id":"c242b8ac-c6b6-47ad-a25b-6de39858c65e","name":"Integrations","displayName":"Integrations","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/partners/integrations","searchPageUrl":"/","children":[{"id":"6ba1da3d-6eb5-4f1d-a806-828232532335","name":"Group 1","displayName":"Group 1","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/partners/integrations/group-1","searchPageUrl":"/","fields":{"title":{"value":"Integrations"}},"children":[{"id":"f3004c8d-2405-47f1-b730-b2e3310b25ec","name":"Strategic Partner Integrations","displayName":"Strategic Partner Integrations","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/partners/integrations/group-1/strategic-partner-integrations","searchPageUrl":"/","fields":{"link":{"value":{"href":"/partners/integrations","text":"Strategic Partner Integrations","linktype":"internal","id":"{AB69FD1C-3CD2-404A-AE7A-FE6EAE84D8C9}"}}}}]},{"id":"6dea877f-dd99-45e2-8cf1-35f59cdf7684","name":"Group 2","displayName":"Group 2","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/partners/integrations/group-2","searchPageUrl":"/","fields":{"title":{"value":"$name"}},"children":[{"id":"90c9d37d-2dc3-4703-9723-0fc7779d9bcf","name":"Companies","displayName":"Companies","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/partners/integrations/group-2/companies","searchPageUrl":"/","fields":{"link":{"value":{"href":"##","text":"Click me","linktype":"anchor","url":"#","anchor":"#","title":"Click me"}}}}]}]}]},{"id":"00746b8f-92aa-4e06-b041-bd424f3ffce1","name":"Resources","displayName":"Resources","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/resources","searchPageUrl":"/","fields":{"link":{"value":{"href":"javascript:void(0);return false;","text":"Resources","linktype":"javascript","url":"javascript:void(0)"}}},"children":[{"id":"56cfe3d2-7d60-4d36-bbf0-b1f7002d489f","name":"ad","displayName":"ad","templateName":"CTA","templateId":"{1BAA4DE3-FA8D-4719-8CFE-5B80D20D847E}","url":"/content/navigation/header/menu/resources/ad","searchPageUrl":"/","fields":{"ctaType":{"id":"41c723ee-d921-45b4-b728-b34eab28c8f2","url":"/sitecore/content/shared/lookups/header-cta-types/title-and-description","name":"Title and Description","displayName":"Title and Description","fields":{"value":{"value":"three"}}},"title":{"value":"Global Threat Intelligence Summit 2024"},"link":{"value":{"href":"https://www.secureworks.com/resources/wc-global-threat-intelligence-summit-2024?utm_medium=display-ad\u0026utm_source=secureworks-nav-bar\u0026utm_campaign=25q3-gl-webinar-ti-summit\u0026utm_content=webcast","text":"Watch Now","linktype":"external","url":"https://www.secureworks.com/resources/wc-global-threat-intelligence-summit-2024?utm_medium=display-ad\u0026utm_source=secureworks-nav-bar\u0026utm_campaign=25q3-gl-webinar-ti-summit\u0026utm_content=webcast"}},"summary":{"value":"\u003cp\u003eFrom ransomware to deepfakes and state-sponsored activities, learn about the biggest cybersecurity trends from Secureworks CTU™ experts.\u003c/p\u003e"}}},{"id":"aa804225-3ab1-4d54-9296-efd14727307d","name":"Resources","displayName":"Resources","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/resources/resources","searchPageUrl":"/","children":[{"id":"3ca39666-d631-4601-ae82-b348380cc0fd","name":"Group","displayName":"Group","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/resources/resources/group","searchPageUrl":"/","fields":{"title":{"value":"Resource Library"}},"children":[{"id":"9ea6174f-6558-4274-b222-86147f967b66","name":"Resource Library","displayName":"Resource Library","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/resources/resources/group/resource-library","searchPageUrl":"/","fields":{"link":{"value":{"href":"/resources","text":"All Resources","linktype":"internal","querystring":"sortBy=MostRecent","id":"{16BCBC39-2631-4162-B194-7524B8AE586E}"}}}},{"id":"37b87769-a918-4ff9-85b7-565b7629d979","name":"Case Studies","displayName":"Case Studies","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/resources/resources/group/case-studies","searchPageUrl":"/","fields":{"link":{"value":{"href":"/resources","text":"Case Studies","linktype":"internal","querystring":"tags=Case+Study\u0026sortBy=MostRecent","id":"{16BCBC39-2631-4162-B194-7524B8AE586E}"}}}},{"id":"efdb69e4-716a-492b-b99f-99ed7b9181b6","name":"Data Sheets","displayName":"Data Sheets","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/resources/resources/group/data-sheets","searchPageUrl":"/","fields":{"link":{"value":{"href":"/resources","text":"Data Sheets","linktype":"internal","querystring":"tags=Data+Sheet\u0026sortBy=MostRecent","id":"{16BCBC39-2631-4162-B194-7524B8AE586E}"}}}},{"id":"aac3a279-d817-47bc-824c-fb91390f1c2e","name":"Reports","displayName":"Reports","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/resources/resources/group/reports","searchPageUrl":"/","fields":{"link":{"value":{"href":"/resources","text":"Reports","linktype":"internal","querystring":"tags=Report\u0026sortBy=MostRecent","id":"{16BCBC39-2631-4162-B194-7524B8AE586E}"}}}},{"id":"e797986a-b39e-4657-9a5d-6a809045a601","name":"White Papers","displayName":"White Papers","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/resources/resources/group/white-papers","searchPageUrl":"/","fields":{"link":{"value":{"href":"/resources","text":"White Papers","linktype":"internal","querystring":"tags=White+Paper\u0026sortBy=MostRecent","id":"{16BCBC39-2631-4162-B194-7524B8AE586E}"}}}},{"id":"31a7545d-74d1-4956-8d5e-e5c8fc5f4e97","name":"Webinars","displayName":"Webinars","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/resources/resources/group/webinars","searchPageUrl":"/","fields":{"link":{"value":{"href":"/resources","text":"Webinars","linktype":"internal","querystring":"tags=Webinar\u0026sortBy=MostRecent","id":"{16BCBC39-2631-4162-B194-7524B8AE586E}"}}}},{"id":"b661c8ce-abf9-400a-a004-1b5673e01fcd","name":"Podcasts","displayName":"Podcasts","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/resources/resources/group/podcasts","searchPageUrl":"/","fields":{"link":{"value":{"href":"/resources","text":"Podcasts","linktype":"internal","querystring":"tags=Podcast\u0026sortBy=MostRecent","id":"{16BCBC39-2631-4162-B194-7524B8AE586E}"}}}},{"id":"cfed377b-0a9b-40ce-abec-80e27f913c6d","name":"Videos","displayName":"Videos","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/resources/resources/group/videos","searchPageUrl":"/","fields":{"link":{"value":{"href":"/resources","text":"Videos","linktype":"internal","querystring":"tags=Video\u0026sortBy=MostRecent","id":"{16BCBC39-2631-4162-B194-7524B8AE586E}"}}}}]}]},{"id":"08c31a51-6dfd-4cbb-b35b-332d6b6055d7","name":"Trending Topics and Knowledge Centers","displayName":"Trending Topics and Knowledge Centers","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/resources/trending-topics-and-knowledge-centers","searchPageUrl":"/","children":[{"id":"ae800c58-083d-4fd3-bc63-7443a0bafa56","name":"Trending Topics","displayName":"Trending Topics","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/resources/trending-topics-and-knowledge-centers/trending-topics","searchPageUrl":"/","fields":{"title":{"value":"Trending Topics"}},"children":[{"id":"1bffd139-4f2e-4d23-8529-dba89d269858","name":"What Is XDR","displayName":"What Is XDR","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/resources/trending-topics-and-knowledge-centers/trending-topics/what-is-xdr","searchPageUrl":"/","fields":{"link":{"value":{"href":"/centers/what-is-xdr","text":"What is XDR","linktype":"internal","id":"{34EA6CBA-AC13-42C3-948A-A5978A921327}"}}}},{"id":"a9e89d03-d8ac-418b-aa84-0918f8600214","name":"What Is SOAR","displayName":"What Is SOAR","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/resources/trending-topics-and-knowledge-centers/trending-topics/what-is-soar","searchPageUrl":"/","fields":{"link":{"value":{"href":"/centers/soar","text":"What is SOAR","linktype":"internal","id":"{D511CA52-274B-4996-9269-8341C2061E59}"}}}},{"id":"30a4623b-f549-458c-a1c5-fbb883babcdb","name":"What is Open XDR","displayName":"What is Open XDR","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/resources/trending-topics-and-knowledge-centers/trending-topics/what-is-open-xdr","searchPageUrl":"/","fields":{"link":{"value":{"href":"/centers/what-is-open-xdr","text":"What is Open XDR","linktype":"internal","id":"{5A9A77F7-5246-4E81-BC62-3F03419E2DF9}"}}}}]},{"id":"fc7fce8b-9dcc-4f93-9c59-af673525b81a","name":"Knowledge Centers","displayName":"Knowledge Centers","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/resources/trending-topics-and-knowledge-centers/knowledge-centers","searchPageUrl":"/","fields":{"title":{"value":"Knowledge Centers"}},"children":[{"id":"3b8529eb-b427-4049-aedc-1d40f3045164","name":"Knowledge Center Library","displayName":"Knowledge Center Library","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/resources/trending-topics-and-knowledge-centers/knowledge-centers/knowledge-center-library","searchPageUrl":"/","fields":{"link":{"value":{"href":"/centers","text":"Knowledge Center Library","linktype":"internal","id":"{96E4B26B-375E-4EB6-80F7-AFCBC4D6BFAE}"}}}},{"id":"04be7466-ead1-409c-a1f0-71e45d939451","name":"Demos and Tours","displayName":"Demos and Tours","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/resources/trending-topics-and-knowledge-centers/knowledge-centers/demos-and-tours","searchPageUrl":"/","fields":{"link":{"value":{"href":"/centers/demos-and-tours","text":"Demos and Tours","linktype":"internal","id":"{3C984F84-3A39-4E45-A53F-9AC8D7535D1A}"}}}},{"id":"a647393f-5577-4433-ac16-f62a65083ff6","name":"Blog","displayName":"Blog","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/resources/trending-topics-and-knowledge-centers/knowledge-centers/blog","searchPageUrl":"/","fields":{"link":{"value":{"href":"/blog","text":"Blog","linktype":"internal","id":"{10919727-36B6-4D26-804B-57383B20DE71}"}}}},{"id":"da38edc7-c77f-4a41-8ab8-ebf30027168d","name":"Cybersecurity Glossary","displayName":"Cybersecurity Glossary","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/resources/trending-topics-and-knowledge-centers/knowledge-centers/cybersecurity-glossary","searchPageUrl":"/","fields":{"link":{"value":{"href":"/glossary","text":"Cybersecurity Glossary","linktype":"external","url":"/glossary","title":"Click me"}}}}]}]},{"id":"be5a7e03-a4ac-4b6a-a219-a0b0d57a6803","name":"News Events and Threat Resources","displayName":"News Events and Threat Resources","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/resources/news-events-and-threat-resources","searchPageUrl":"/","children":[{"id":"1cb4003b-c91a-4ef2-bec4-bfdd37f2fc7c","name":"News Events","displayName":"News Events","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/resources/news-events-and-threat-resources/news-events","searchPageUrl":"/","fields":{"title":{"value":"News Events"}},"children":[{"id":"9c39d92f-71e2-48a3-bcc8-52fb0e4b6a59","name":"Press Releases","displayName":"Press Releases","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/resources/news-events-and-threat-resources/news-events/press-releases","searchPageUrl":"/","fields":{"link":{"value":{"href":"/about/press","text":"Press Releases","linktype":"internal","id":"{08B8F62C-F9F5-40B6-AB43-1CC688D16EEE}"}}}},{"id":"1d64381d-dfc2-47b6-b9db-997d5015c2f6","name":"Events","displayName":"Events","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/resources/news-events-and-threat-resources/news-events/events","searchPageUrl":"/","fields":{"link":{"value":{"href":"/about/events","text":"Events","linktype":"internal","id":"{39738E13-0AF3-4483-8B5B-46D201FB8926}"}}}}]},{"id":"6e012935-21ec-4c95-96c2-e3dcd027dffe","name":"Threat Resources","displayName":"Threat Resources","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/menu/resources/news-events-and-threat-resources/threat-resources","searchPageUrl":"/","fields":{"title":{"value":"Threat Resources"}},"children":[{"id":"8586458b-856b-490c-8dba-ccae07b2472c","name":"Threat Analysis","displayName":"Threat Analysis","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/resources/news-events-and-threat-resources/threat-resources/threat-analysis","searchPageUrl":"/","fields":{"link":{"value":{"href":"/research","text":"Threat Analysis","linktype":"internal","querystring":"sortBy=MostRecent","id":"{E4D09D08-466F-4397-BBF7-3F04FCCA7C5D}"}}}},{"id":"3e7adc2a-6c21-48bf-a158-f76c678aa7ea","name":"Threat Profiles","displayName":"Threat Profiles","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/menu/resources/news-events-and-threat-resources/threat-resources/threat-profiles","searchPageUrl":"/","fields":{"link":{"value":{"href":"/research/threat-profiles","text":"Threat Profiles","linktype":"internal","id":"{5C8A3FD7-45F7-4F04-8DEA-8CD22524F619}"}}}}]}]}]}]},{"id":"41c5585c-bee1-4550-bd2c-ea6727e8bd12","name":"Top Menu","displayName":"Top Menu","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/header/top-menu","searchPageUrl":"/","children":[{"id":"6912ea62-1a9d-436e-919a-55b6a2ef19ce","name":"Experiencing a Breach","displayName":"Experiencing a Breach","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/top-menu/experiencing-a-breach","searchPageUrl":"/","fields":{"link":{"value":{"href":"/contact/emergency-response","text":"Experiencing a Breach?","linktype":"internal","id":"{A47150CB-F354-43AF-8D78-C9228CD7D6CA}"}},"cssIcon":{"id":"e50aca7d-949c-469f-a5da-b19f747021b9","url":"/sitecore/content/shared/icons/warning","name":"Warning","displayName":"Warning","fields":{"cssClasses":{"value":"warning"},"iconName":{"value":"triangle-exclamation"},"iconStyle":{"value":"solid"}}}}},{"id":"a8c6229c-fa2e-4ed6-a19f-06ad3eaeaa9e","name":"Contact us","displayName":"Contact us","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/top-menu/contact-us","searchPageUrl":"/","fields":{"link":{"value":{"href":"javascript:void(0);return false;","text":"Contact Us","linktype":"javascript","url":"javascript:void(0)"}}},"children":[{"id":"99b0a831-815b-4aac-989a-277e2dace88b","name":"Talk with a Security Expert","displayName":"Talk with a Security Expert","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/top-menu/contact-us/talk-with-a-security-expert","searchPageUrl":"/","fields":{"link":{"value":{"href":"/contact/talk-with-an-expert","text":"Talk with a Security Expert","linktype":"internal","id":"{6504EE2B-D180-4897-AB8D-179DA74AEF1E}"}}}},{"id":"9c550edc-6fdb-40d9-8c51-c1a34afa80ac","name":"Start an RFP","displayName":"Start an RFP","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/top-menu/contact-us/start-an-rfp","searchPageUrl":"/","fields":{"link":{"value":{"href":"/contact/rfp","text":"Start an RFP","linktype":"internal","id":"{EE778E1F-5D7D-4FEB-A5F6-914606AFEF6A}"}}}},{"id":"b8c52f30-c87b-4918-ab94-dde22d5b0618","name":"Get a Quote","displayName":"Get a Quote","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/top-menu/contact-us/get-a-quote","searchPageUrl":"/","fields":{"link":{"value":{"href":"/contact/request-a-quote","text":"Get a Quote","linktype":"internal","id":"{773A8FA3-1C0E-4C6B-AE8B-C1A33CA17E5E}"}}}}]},{"id":"17b8ec92-b6ad-4388-b055-d7bb27eec192","name":"Support","displayName":"Support","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/top-menu/support","searchPageUrl":"/","fields":{"link":{"value":{"href":"javascript:void(0);return false;","text":"Support","linktype":"javascript","url":"javascript:void(0)"}}},"children":[{"id":"bee46bb0-b07e-4a72-a5f3-8ac0847e22cf","name":"customers","displayName":"customers","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/top-menu/support/customers","searchPageUrl":"/","fields":{"link":{"value":{"href":"/customer-support","text":"Customers","linktype":"internal","id":"{769978B9-F1A8-4DB1-BA28-567725A2418A}"}}}},{"id":"cfd4d92a-fe62-4ddd-8711-1c7f5bf0d2cd","name":"partners","displayName":"partners","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/top-menu/support/partners","searchPageUrl":"/","fields":{"link":{"value":{"href":"/partner-support","text":"Partners","linktype":"internal","id":"{C005C8A1-7110-4023-A9DB-C7001B7E07AE}"}}}}]},{"id":"e53acdef-fb13-47b0-9ba8-2c4ebd17fc10","name":"Blog","displayName":"Blog","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/top-menu/blog","searchPageUrl":"/","fields":{"link":{"value":{"href":"/blog","text":"Blog","linktype":"external","url":"/blog"}}}},{"id":"9b4abe7a-f0cb-4414-8377-134d3b01e935","name":"Language","displayName":"Language","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/top-menu/language","searchPageUrl":"/","fields":{"link":{"value":{"href":"javascript:void(0);return false;","text":"English","linktype":"javascript","url":"javascript:void(0)"}},"cssIcon":{"id":"3e1dbe97-5c75-4be5-84bf-eb74dd0438bd","url":"/sitecore/content/shared/icons/world","name":"World","displayName":"World","fields":{"cssClasses":{"value":"world"},"iconName":{"value":"globe"},"iconStyle":{"value":"solid"}}}},"children":[{"id":"2132985b-df24-495b-ad67-e0c7d8187b1a","name":"Japan","displayName":"Japan","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/top-menu/language/japan","searchPageUrl":"/","fields":{"link":{"value":{"href":"https://www.secureworks.jp","text":"日本語","linktype":"external","url":"https://www.secureworks.jp"}}}},{"id":"664e0ddf-34f4-4eb4-ba3e-665c5268fdd3","name":"French","displayName":"French","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/header/top-menu/language/french","searchPageUrl":"/","fields":{"link":{"value":{"href":"https://www.secureworks.fr","text":"Français ","linktype":"external","url":"https://www.secureworks.fr"}}}}]}]}],"renderingParams":{"dynamicPlaceholderId":"1"}},"placeholders":{"header-cta":[]}}]}}],"headless-main":[{"uid":"6a94cd34-cd70-4f5e-9aa1-1b66353fecb1","componentName":"PartialDesignDynamicPlaceholder","dataSource":"","params":{"sid":"{713080BF-7200-4C6D-B9AE-6E97C295E7B1}","ph":"headless-main","sig":"sxa-research-article-without-hero"},"placeholders":{"sxa-research-article-without-hero":[{"uid":"955413c0-9e85-4971-85bf-285f9b890eb0","componentName":"PageDesignSection","dataSource":"","params":{"CacheClearingBehavior":"Clear on publish","DynamicPlaceholderId":"11"},"fields":{"renderingParams":{"cacheClearingBehavior":"Clear on publish","dynamicPlaceholderId":"11"}},"placeholders":{"page-design-section":[{"uid":"6c8cb1f8-6d01-47d4-83e0-043052871740","componentName":"ArticleHero","dataSource":"","params":{"Styles":"","Theme":"{952DB8CF-DD08-4762-A5C4-A29E019A4D30}","DynamicPlaceholderId":"1"},"fields":{"renderingParams":{"styles":{"id":"50071648-20a1-4e46-930b-59ae2c023841","name":"bg-dk-007-squared-vertical-lines","displayName":"bg-dk-007-squared-vertical-lines","templateName":"ComplexStyle","templateId":"{203B5721-B56C-4334-8DFA-46B742A39C61}","url":"/sitecore/content/shared/complex-styles/backgrounds/section-dark/bg-dk-007-squared-vertical-lines","searchPageUrl":"/","fields":{"stylesXs":{"value":"background-size: cover;\r\nbackground-color: #111013;"},"imageXs":{"value":{"src":"/-/media/branches/services-page-a/hero.jpg?h=574\u0026iar=0\u0026w=1600\u0026hash=9D9C3B0974B2306F52C52224EB07AE44","width":"1600","height":"574"}},"isMouseHoverOnly":{"value":false}}},"theme":{"id":"952db8cf-dd08-4762-a5c4-a29e019a4d30","name":"Dark","displayName":"Dark","templateName":"LookUpItem","templateId":"{EFB889F4-78B6-4030-99DF-B47C6A0FAB7B}","url":"/sitecore/content/shared/lookups/themes/dark","searchPageUrl":"/","fields":{"value":{"value":"dark"}}},"dynamicPlaceholderId":"1"}},"placeholders":{"article-hero":[{"uid":"957a3821-df0e-4e3f-ba8f-005a44756c38","componentName":"TitleSection","dataSource":"/sitecore/content/SW/swxp-rendering/Content/Articles/research/2022/darktortilla malware analysis","params":{"Alignment":"{BE0724C4-68E1-4160-8670-E64024356853}","Title Tag":"{08086E23-1EC1-4E8C-A963-C603A773917E}","DynamicPlaceholderId":"2"},"fields":{"id":"8507d2d8-3e50-40a0-860a-1b403dd2bdaf","name":"darktortilla malware analysis","displayName":"darktortilla malware analysis","templateName":"Article Page","templateId":"{9F5E0978-58FB-40A6-8872-3E84B897AF67}","url":"/research/darktortilla-malware-analysis","searchPageUrl":"/research","fields":{"metaTitle":{"value":"DarkTortilla Malware Analysis"},"noFollow":{"value":false},"excludeFromSearch":{"value":false},"noIndex":{"value":false},"gated":{"value":false},"gatedVideoType":{"id":"971f4491-d4a6-42bf-abc8-9d305797ca0c","url":"/sitecore/content/shared/lookups/video-platforms/vimeo","name":"Vimeo","displayName":"Vimeo","fields":{"value":{"value":"vimeo"}}},"eyebrow":{"value":"Threat Analysis"},"image":{"value":{"src":"/-/media/images/thumbnails/blog/thing-keyboard-02.jpg?h=722\u0026iar=0\u0026w=1284\u0026hash=3EB40DA8D7DC106CD65E005A469CF61C","alt":"keyboard","width":"1284","height":"722"}},"title":{"value":"DarkTortilla Malware Analysis"},"body":{"value":"\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eDarkTortilla is a complex and highly configurable .NET-based \u003ca href=\"https://blog.malwarebytes.com/cybercrime/malware/2017/03/explained-packer-crypter-and-protector/\"\u003ecrypter\u003c/a\u003e that has \u003ca href=\"https://blog.malwarebytes.com/threat-analysis/2015/08/rainbows-steganography-and-malware-in-a-new-net-cryptor/\"\u003epossibly\u003c/a\u003e been active since at least August 2015. It typically delivers popular information stealers and remote access trojans (RATs) such as AgentTesla, AsyncRat, NanoCore, and RedLine. While it appears to primarily deliver commodity malware, Secureworks\u0026reg; Counter Threat Unit\u0026trade; (CTU) researchers identified DarkTortilla samples delivering targeted payloads such as Cobalt Strike and Metasploit. It can also deliver \"addon packages\" such as additional malicious payloads, benign decoy documents, and executables. It features robust anti-analysis and anti-tamper controls that can make detection, analysis, and eradication challenging.\u003c/p\u003e\n\u003cp\u003eFrom January 2021 through May 2022, an average of 93 unique DarkTortilla samples per week were uploaded to the VirusTotal analysis service. Code similarities suggest possible links between DarkTortilla and other malware: a \u003ca href=\"https://github.com/malwares/Crypter/tree/master/%5BC%23%5D%20The%20RATs%20Crew%20Crypter\"\u003ecrypter\u003c/a\u003e operated by the \u003ca href=\"https://wiki.hackforums.net/RATs_Crew\"\u003eRATs Crew\u003c/a\u003e threat group, which was active between 2008 and 2012, and the \u003ca href=\"https://www.gosecure.net/blog/2021/11/02/new-malware-gameloader-in-discord-malspam-campaign-identified-by-gosecure-titan-labs/\"\u003eGameloader\u003c/a\u003e malware that emerged in 2021.\u003c/p\u003e\n\u003ch2\u003eDelivery\u003c/h2\u003e\n\u003cp\u003eCTU\u0026trade; analysis of VirusTotal samples revealed numerous campaigns delivering DarkTortilla via malicious spam (malspam). The emails typically use a logistics lure and include the malicious payload in an archive attachment with file types such as .iso, .zip, .img, .dmg, and .tar. The language of the email message is customized to the victim, and CTU researchers observed samples in English, German, Romanian, Spanish, Italian, and Bulgarian. Figure 1 shows a German-language malspam \u003ca href=\"https://www.virustotal.com/gui/file/981aa83b2d33cca994021197237ac5ee3ad3402f7d25f04f4e76985f4ec8744c\"\u003esample\u003c/a\u003e. The redacted filename of the attached \u003ca href=\"https://en.wikipedia.org/wiki/Optical_disc_image\"\u003eISO image\u003c/a\u003e archive file (.iso) includes the name of the organization the email was sent from. It is unclear if that organization was compromised. The archive file contains a single executable with the same filename but the .exe extension. This executable is a DarkTortilla initial loader \u003ca href=\"https://www.virustotal.com/gui/file/5e03556be992d23088a3c49d24c45b1c21cd275bffb4e536348e8128d50374b6\"\u003esample\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"597\" width=\"544\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-01.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 1. DarkTortilla malspam containing malicious archive attachment. (The German text translates to \"Good morning, Please give us your best price offer for our attached order. Awaiting your kind reply. Kind regards\"). (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eCTU researchers also identified malicious documents (maldocs) delivering DarkTortilla. Most of these maldocs embed the DarkTortilla initial loader executable as a Packager Shell Object. Figure 2 shows a \u003ca href=\"https://www.virustotal.com/gui/file/4f15b28c91fa0e8d0dd9e86481bad04fa34fcaf564d08de7c4c0c513fc6e122d\"\u003esample\u003c/a\u003e that prompts the victim to double-click the embedded Packager Shell Object, which executes the payload. Inspection of the Packager Shell Objects properties revealed that it is an executable named \u003ca href=\"https://www.virustotal.com/gui/file/55d7d9bd9d4a511417033b6c14ce93f962d6a6e6c6414f0cb7e455baee1d3ab7\"\u003eRFQ-010129H.exe\u003c/a\u003e, which is a DarkTortilla initial loader sample. Other analyzed maldocs use different approaches, such as leveraging embedded macros to automatically execute the Packager Shell Object when a victim opens the document and enables macros.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"658\" width=\"800\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-02.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 2. Maldoc sample delivering DarkTortilla. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch2\u003eHigh-level execution flow\u003c/h2\u003e\n\u003cp\u003eDarkTortilla consists of two components that rely on each other to successfully detonate payloads: a .NET-based executable (initial loader) and a .NET-based DLL (core processor). The typical high-level execution flow for a DarkTortilla payload starts with execution of the initial loader. The initial loader then retrieves its encoded core processor. While the encoded core processor is typically embedded within the .NET resources of the initial loader, CTU researchers identified initial loaders that retrieved their core processor from \u003ca href=\"https://cyberhoot.com/cybrary/paste/\"\u003epublic paste sites\u003c/a\u003e such as pastebin . pl, textbin . net, and paste . ee.\u003c/p\u003e\n\u003cp\u003eThe initial loader decodes, loads, and executes the core processor. When executed, the core processor extracts, decrypts, and parses its configuration. The encrypted configuration is stored within the .NET resources of the initial loader as bitmap images. Depending on DarkTortilla's configuration, the core processor performs the following actions:\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003eDisplays a fake message box\u003c/li\u003e\n    \u003cli\u003ePerforms anti-virtual machine checks\u003c/li\u003e\n    \u003cli\u003ePerforms anti-sandbox checks\u003c/li\u003e\n    \u003cli\u003eImplements persistence\u003c/li\u003e\n    \u003cli\u003eMigrates execution to the Windows %TEMP% directory by using the \"Melt\" configuration element\u003c/li\u003e\n    \u003cli\u003eProcesses addon packages\u003c/li\u003e\n    \u003cli\u003eMigrates execution to its install directory\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe core processor then injects and executes its configured main payload within the context of the configured subprocess. Finally, if configured, the core processor implements anti-tamper controls to prevent interference with execution of the initial loader, core processor, injected subprocess, and WatchDog executable.\u003c/p\u003e\n\u003cp\u003eFigure 3 illustrates this high-level DarkTortilla execution flow.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"775\" width=\"622\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-03.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 3. High-level execution flow for DarkTortilla infection. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch2\u003eInitial loader\u003c/h2\u003e\n\u003cp\u003eInitial loader samples analyzed by CTU researchers were obfuscated using the \u003ca href=\"https://marketplace.visualstudio.com/items?itemName=DeepSeaObfuscator.DeepSeaObfuscator\"\u003eDeepSea .NET code obfuscator\u003c/a\u003e. As a result, many aspects of the original code have been altered to thwart analysis. For example, namespace, class, function, and property names were renamed from their original descriptive values to random characters. Figure 4 shows an example of these obfuscated values within the code decompiled by the \u003ca href=\"https://github.com/dnSpyEx/dnSpy\"\u003ednSpy\u003c/a\u003e .NET analysis tool.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"384\" width=\"368\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-04.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 4. Obfuscated DarkTortilla initial loader sample. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eIn addition to name obfuscation, DeepSea applies \u003ca href=\"http://tigress.cs.arizona.edu/transformPage/docs/flatten/index.html\"\u003eswitch dispatch control flow obfuscation\u003c/a\u003e to DarkTortilla's initial loader. This technique restructures the original linear code into switch statements that transfer execution in a seemingly unpredictable pattern, making analysis difficult. Figure 5 shows a switch statement at the entry point of a DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/a0b96236bfd79d2ebeadb8e3deb9448af3ec8edd1ea9672b7ad4793934bb4c47\"\u003esample\u003c/a\u003e. In this example, the value stored in the \"num\" variable controls which code gets executed next. This value is obfuscated and is often the result of a conditional or mathematical expression calculated at runtime, such as \"\u003ca href=\"https://en.wikipedia.org/wiki/%3F:\"\u003e((!flag) ? 15 : 9)\u003c/a\u003e\" or \"\u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.math.abs?view=net-6.0#system-math-abs(system-int32)#system-math-abs(system-int32)\"\u003eMath.Abs(num2 * 25 * 25)\u003c/a\u003e\".\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"533\" width=\"420\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-05.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 5. Switch dispatch control flow obfuscation applied to DarkTortilla initial loader. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader stores DarkTortilla's encrypted configuration as bitmap images. Figure 6 lists the partial resource section of one \u003ca href=\"https://www.virustotal.com/gui/file/b3754c6ecc445e9a3b37c5ebe68adb9630ca4aa89a8e8515468f39ae8131f141\"\u003esample\u003c/a\u003e consisting of over 700 of these images.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"573\" width=\"763\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-06.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 6. Encrypted configuration stored as bitmap images within the .NET resources of DarkTortilla initial loader. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader's execution flow typically starts by checking for internet connectivity by issuing HTTP GET requests. In samples that implement this check, the initial loader attempts to retrieve content from google . com, bing . com, or both. Some \u003ca href=\"https://www.virustotal.com/gui/file/45ef054bca2ae4d67e6623bf28ff75e5d178924602674c654e1b569aa74601cd\"\u003esamples\u003c/a\u003e store the URLs in the executable as plain text (see Figure 7), but most samples encode them. If the check fails, the initial loader retries the request(s) until all are successful.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"324\" width=\"594\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-07.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 7. Internet connectivity check in DarkTortilla initial loader. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader generates a 16-byte key to decode the core processor. This key is based on an initial hard-coded value multiplied by the index value of its location in the destination array. Because the values are stored as single bytes, the maximum value for an element in the array is 0xFF (255 decimal). For example, the decode key array for an initial hard-coded value of 0x6E (110 decimal) is [0x00,0x6E,0xDC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF].\u003c/p\u003e\n\u003cp\u003eThe initial loader then retrieves the encoded core processor data. This data commonly resides within the .NET resources of the initial loader binary. Figure 8 shows encoded core processor data residing within the \"pnj\" .NET resource of a DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/45ef054bca2ae4d67e6623bf28ff75e5d178924602674c654e1b569aa74601cd\"\u003esample\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"756\" width=\"1017\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-08.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 8. Encoded core processor data stored within the .NET resources of DarkTortilla initial loader. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader decodes the core processor data by applying the following algorithm to each byte:\u003c/p\u003e\n\n\u003cpre\u003e\tenc_byte ^ (dec_key_arr[idx % len(dec_key_arr)] ^ (idx + (seed_byte % \n\tlen(dec_key_arr)) \u0026amp; seed_byte)\n\u003c/pre\u003e\n\n\u003cul\u003e\n    \u003cli\u003eenc_byte: The core processor byte array value being decoded\u003c/li\u003e\n    \u003cli\u003eidx: The encoded byte index in the core processor byte array\u003c/li\u003e\n    \u003cli\u003edec_key_arr: The generated 16-byte decode key byte array\u003c/li\u003e\n    \u003cli\u003eseed_byte: The fourth byte of the 16-byte decode key byte array\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe initial loader loads the decoded core processor assembly code and executes its pre-determined entry point function.\u003c/p\u003e\n\u003ch3\u003eInitial loader variant with externally hosted core processor\u003c/h3\u003e\n\u003cp\u003eInitial loader variants that retrieve the encoded core processor from public paste sites first decode the URL where the core processor is hosted. The encoding logic applied to the URL varies across analyzed DarkTortilla samples, making analysis and detection difficult. Figure 9 shows a DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/0a5dc3b6669cf31e8536c59fe1315918eb4ecfd87998445e2eeb8fed64bd2f2c\"\u003esample\u003c/a\u003e that encodes the URL (https: //pastebin . pl/view/raw/60b6b03b) by prepending and appending random text.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"408\" width=\"735\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-09.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 9. DarkTortilla initial loader variant that retrieves encoded core processor data from public paste site. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader retrieves an encoded string hosted at the decoded URL. This string represents the encoded core processor data. The string consists of fake XML tags, integer values encoded with a \u003ca href=\"https://en.wikipedia.org/wiki/Caesar_cipher\"\u003eshift cipher\u003c/a\u003e, and delimiters comprised of random letters (see Figure 10). The downloaded data is stored in memory and is never saved to the filesystem.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"476\" width=\"750\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-10.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 10. Encoded DarkTortilla core processor data hosted on public paste site. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader decodes the string by first removing the fake XML tags. The string is converted into an array of integers by replacing the random letter character delimiters with a consistent letter and then using that letter to split the string into integers. The last step is to iterate through the integer array and subtract a pre-defined value. This value changes across samples.\u003c/p\u003e\n\u003cp\u003eIn the Figure 10 example (\u0026lt;xml\u0026gt;1002k1015U1069k925E928s925U925E925g929E925\u0026hellip;\u0026lt;/xml\u0026gt;), the consistent letter delimiter is \"k\" and the pre-defined subtracted value is 925:\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003eRemove XML tags: 1002k1015U1069k925E928s925U925E925g929E925\u0026hellip;\u003c/li\u003e\n    \u003cli\u003eReplace random letters with consistent character: 1002k1015k1069k925k928k925k925k925k929k925\u0026hellip;\u003c/li\u003e\n    \u003cli\u003eSplit into integer array: [1002, 1015, 1069, 925, 928, 925, 925, 925, 929, 925, \u0026hellip;]\u003c/li\u003e\n    \u003cli\u003eSubtract pre-defined value from each integer: [77, 90, 144, 0, 3, 0, 0, 0, 4, 0, \u0026hellip;]\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThe hex representation of the final integer array for this example is [4D, 5A, 90, 00, 03, 00, 00, 00, 04, 00, \u0026hellip;]. This decoded data is the core processor DLL (see Figure 11).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"227\" width=\"700\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-11.png\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 11. Decoded DarkTortilla core processor DLL. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch2\u003eCore processor\u003c/h2\u003e\n\u003cp\u003eThe core processor contains DarkTortilla's primary functionality. From at least June 2020 to March 2022, the malware author transitioned through a limited number of filenames for this DLL that appeared to relate to a function or purpose (Deserialize.dll, SHCore1.dll, \u003ca href=\"https://www.virustotal.com/gui/file/93dd1202697dbaed9ef4f4707f2628212bf13aad096de29c14924b1dae1d6d5b\"\u003ePVCore1.dll\u003c/a\u003e, and SHCore2.dll). In March 2022, the names began to change more frequently to seemingly random names (e.g., BRIN.dll, UKRUSAIN.dll, KNIFALL.dll, NullSBAS.dll).\u003c/p\u003e\n\u003ch3\u003eConfiguration processing\u003c/h3\u003e\n\u003cp\u003eThe core processor identifies the following resources in the initial loader that are associated with the encrypted configuration:\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003eThe bitmap image resource(s) containing the encrypted configuration data\u003c/li\u003e\n    \u003cli\u003eThe binary resource specifying the total number of images to process\u003c/li\u003e\n    \u003cli\u003eThe resource folder containing these images and binary resources\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe names of these resources are calculated using the compile timestamp listed in the initial loader (which is not the file's actual compile timestamp) and two hard-coded values that represent an initialization value and the length of the resource name. The hard-coded initialization and name length values were consistent across all DarkTortilla samples analyzed by CTU researchers (see Table 1).\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003eInitial loader resource\u003c/th\u003e\n            \u003cth\u003eInitialization value\u003c/th\u003e\n            \u003cth\u003eResource name length value\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Resource folder\n            \u003c/td\u003e\n            \u003ctd\u003e\n            5\n            \u003c/td\u003e\n            \u003ctd\u003e\n            12\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Image count file\n            \u003c/td\u003e\n            \u003ctd\u003e\n            80\n            \u003c/td\u003e\n            \u003ctd\u003e\n            8\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Image file\n            \u003c/td\u003e\n            \u003ctd\u003e\n            20\n            \u003c/td\u003e\n            \u003ctd\u003e\n            8\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 1. Values used to derive initial loader resource names.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThese names are calculated via the following process:\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003eDivide the compile timestamp by \u0026lt;\u003cem\u003einitialization value\u003c/em\u003e\u0026gt;.\u003c/li\u003e\n    \u003cli\u003eRound the result using the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.math.round?view=net-6.0#system-math-round(system-decimal)#system-math-round(system-decimal)\"\u003eMath.Round()\u003c/a\u003e function.\u003c/li\u003e\n    \u003cli\u003ePass the result to the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.random\"\u003eRandom.Random()\u003c/a\u003e function as a seed value. By using a precalculated seed value, the malware author can generate a predictable 16-byte value.\u003c/li\u003e\n    \u003cli\u003eConvert the 16-byte value to a GUID using the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.guid\"\u003eGuid.Guid()\u003c/a\u003e function, which transposes the byte order.\u003c/li\u003e\n    \u003cli\u003eRemove dash characters (\u0026lsquo;-') added during the GUID conversion.\u003c/li\u003e\n    \u003cli\u003eTruncate the value to \u0026lt;\u003cem\u003eresource name length\u003c/em\u003e\u0026gt; characters.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eFor example, the following calculation generates the resource folder name of a \u003ca href=\"https://www.virustotal.com/gui/file/b3754c6ecc445e9a3b37c5ebe68adb9630ca4aa89a8e8515468f39ae8131f141\"\u003esample\u003c/a\u003e with a compile timestamp of \"Sun May 26 23:57:08 1985\" (integer: 486014228):\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003e486014228 / 5 = 97202845.6\u003c/li\u003e\n    \u003cli\u003eMath.Round(97202845.6) = 97202846\u003c/li\u003e\n    \u003cli\u003eRandom.Random(97202846) = d00bee25fa9dc9024fdf632727286708\u003c/li\u003e\n    \u003cli\u003eGuid.Guid(d00bee25fa9dc9024fdf632727286708) = 25ee0bd0-9dfa-02c9-4fdf-632727286708\u003c/li\u003e\n    \u003cli\u003eRemove dashes = 25ee0bd09dfa02c94fdf632727286708\u003c/li\u003e\n    \u003cli\u003eTruncate to 12 characters = 25ee0bd09dfa\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eApplying the same calculation to the other components reveals that the image count resource name for this sample is \"cd6935eb\" and the image base name is \"d390ea32\". The bitmap-formatted image names follow the pattern \u0026lt;\u003cem\u003eimage_base_name\u003c/em\u003e\u0026gt;\u0026lt;\u003cem\u003eimage_index\u003c/em\u003e\u0026gt;, where the \u0026lt;\u003cem\u003eimage_index\u003c/em\u003e\u0026gt; value ranges from 0 to the value specified in the image count resource. In this sample, the image count resource value is 0x2D4 (integer: 724), which means DarkTortilla attempts to process 725 bitmap-formatted images with the names d390ea32\u003cstrong\u003e0\u003c/strong\u003e, d390ea32\u003cstrong\u003e1\u003c/strong\u003e, d390ea32\u003cstrong\u003e2\u003c/strong\u003e, \u0026hellip;, d390ea32\u003cstrong\u003e723\u003c/strong\u003e, d390ea32\u003cstrong\u003e724\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eTo extract the encrypted configuration, the core processor iterates through each of the image resources in order, extracts the pixel data, and concatenates the pixel data into a byte array (see Figure 12).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"378\" width=\"783\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-12.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 12. Logic for extracting encrypted configuration from bitmap images. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe resulting byte array is decrypted using the \u003ca href=\"https://en.wikipedia.org/wiki/Advanced_Encryption_Standard\"\u003eRijndael\u003c/a\u003e cipher (also known as the Advanced Encryption Standard (AES)) with Electronic Code Book (ECB) block cipher mode and \u003ca href=\"https://en.wikipedia.org/wiki/Padding_(cryptography)#ISO_10126\"\u003eISO10126 padding\u003c/a\u003e configured. The ISO10126 \u003ca href=\"https://www.iso.org/standard/18114.html\"\u003estandard\u003c/a\u003e was withdrawn in 2007, so the use of this padding could indicate that DarkTortilla's origins date back to 2007 or earlier. The key used to decrypt this data is stored as the hard-coded integer array [81, 42, 59, 7, 27, 70, 83, 13, 71, 75, 17, 9, 39, 64, 3, 2] (see Figure 13).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"396\" width=\"800\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-13.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 13. Hard-coded key to decrypt DarkTortilla configuration. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eDarkTortilla parses the decrypted configuration data into a structure so that its elements can be easily referenced. Table 2 lists the potential configuration elements contained within DarkTortilla's decrypted configuration. Entries in \u003cstrong\u003ebold\u003c/strong\u003e indicate configuration elements that were consistently present in all samples analyzed by CTU researchers.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Key\u003c/th\u003e\n            \u003cth\u003e\n            Type\u003c/th\u003e\n            \u003cth\u003e\n            Description\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Installation%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eInstall DarkTortilla and implement persistence\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationReg%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Registry key used for persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationKey%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Registry value used for persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationDirectory%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Root install directory\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationFolder%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Subfolder name within the root install directory\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationFileName%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Filename for the initial loader executable within the root subfolder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %StartupFolder%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            bool\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Enable Startup folder persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %Hidden%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            bool\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Enable \"Hidden\" registry persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %HiddenReg%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \"Hidden\" registry key used for persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %HiddenKey%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \"Hidden\" registry value used for persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Message%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eDisplay fake message box\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageIcon%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Fake message box icon ID\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageButton%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Fake message box button ID\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageTitle%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Fake message box title\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageBody%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Fake message box message\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageRepetition%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            bool\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Display fake message box even if installed\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%VM%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ePerform anti-virtual machine checks\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%SB%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ePerform anti-sandbox checks\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%InjectionPersist%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eEnable anti-tamper control for running processes\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%StartupPersist%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eEnable anti-tamper control for startup persistence\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Melt%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eMigrate initial loader execution to the Windows %TEMP% directory\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MeltName%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Filename for the initial loader executable within the Windows %TEMP% directory\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %WatchDogName%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Filename for the anti-tamper WatchDog executable\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %WatchDogBytes%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            byte[]\n            \u003c/td\u003e\n            \u003ctd\u003e\n            WatchDog byte array\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Compress%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eIndicates if payloads are zlib-compressed\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Delay%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eint\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eNumber of seconds to delay execution within the core processor\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%HostIndex%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eint\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eID of the target subprocess name to use for main/addon payload injection\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%MainFile%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebyte[]\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eMain payload byte array\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%FilesNum%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eint\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eNumber of addon packages to process\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.D\n            \u003c/td\u003e\n            \u003ctd\u003e\n            byte[]\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (data): Payload byte array\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.N\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (name): Filename\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.P\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (path): Target install folder (special folder ID)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.F\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (folder): Target install subfolder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.O\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (operation): Execution type (disk, memory, none)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.T\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (time): Execution delay (seconds)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.R\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (run): Payload execution criterion\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 2. DarkTortilla configuration elements. Bold text indicates elements that appear in all analyzed samples.\u003c/em\u003e\u003c/p\u003e\n\u003ch3\u003eFake message display\u003c/h3\u003e\n\u003cp\u003eDarkTortilla can be configured to display a message box when executed. The threat actor can customize message box characteristics such as the display message, message box title, and the \u003ca href=\"https://docs.microsoft.com/en-us/office/vba/language/reference/user-interface-help/msgbox-constants\"\u003eicon and button configuration\u003c/a\u003e. Threat actors use fake message boxes to make victims think that execution failed or that a legitimate application is loading and installing. Table 3 lists the configuration elements and values in one DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/083acce46cb8cf35e37c778d1f4aee6814bca72d2874b793a47f9823f51df0fe/\"\u003esample\u003c/a\u003e.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Configuration element\u003c/th\u003e\n            \u003cth\u003e\n            Assigned value as it appears in the configuration\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %Message%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageIcon%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            16\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageButton%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            0\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageTitle%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            .Net Framework Initialization Error\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageBody%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            To run this application, you first must install one of the following version of the .Net Framework:\\r\\n.Net Framework, Version = 4.8.0\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageRepetition%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 3. Fake message box-related configuration elements.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eFigure 14 shows the message box for the DarkTortilla sample configured with the values in Table 3. The %MessageRepetition% configuration element controls whether the message box will continue to be displayed upon execution after DarkTortilla is installed and persistent on the compromised system.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"185\" width=\"464\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-14.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 14. Fake message box. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch3\u003e\"Melt\" execution migration\u003c/h3\u003e\n\u003cp\u003eIf the %Melt% configuration element is set to true, the core processor moves the initial loader executable to the Window's %TEMP% directory. It uses the %MeltName% configuration element value as the executable filename (e.g., java.exe, PDF.exe, cookies.exe). The core processor runs the new executable and then terminates the original initial loader executable. However, the %TEMP% directory may not be the final destination for the initial loader. The executable could migrate again if the %Installation% configuration element is set to true.\u003c/p\u003e\n\u003ch3\u003eInstallation\u003c/h3\u003e\n\u003cp\u003eThe %Installation% configuration element controls whether DarkTortilla installs itself on a system. If set to true, the core processor moves the current DarkTortilla executable into the directory specified by the configuration. Table 4 lists the values stored in one DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/53b3b37b7d1e40c80fcda2c424cd837379ac2ce93023de6c22ba3e2d94679671\"\u003esample\u003c/a\u003e.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Configuration element\u003c/th\u003e\n            \u003cth\u003e\n            Value\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationDirectory%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            38\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationFolder%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            WindowsPowerShell\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationFileName%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            PowerShellInfo.exe\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 4. Installation configuration elements with example values.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe integer value assigned to the %InstallationDirectory% configuration element represents a \u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/shell/csidl\"\u003eCSIDL\u003c/a\u003e value associated with a special folder on the system. In Table 4, the value 38 corresponds to the Windows \u003ca href=\"https://www.magnumdb.com/search?q=CSIDL_PROGRAM_FILES\"\u003eProgram Files\u003c/a\u003e directory. Based on this configuration, the full install path and filename for this DarkTortilla sample is \"C:\\Program Files\\WindowsPowerShell\\PowerShellInfo.exe\".\u003c/p\u003e\n\u003cp\u003eTo install, the core processor terminates the currently running DarkTortilla executable. It copies the executable to the configured installation path and filename, and then executes the installed executable via \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.process.start?view=net-6.0\"\u003eProcess.Start()\u003c/a\u003e.\u003c/p\u003e\n\u003ch3\u003ePersistence\u003c/h3\u003e\n\u003cp\u003ePersistence is controlled by the %Installation% configuration element in combination with the %Hidden% and %StartupFolder% configuration elements. DarkTortilla uses the logic in Table 5 to determine the persistence type.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            %Hidden%\u003c/th\u003e\n            \u003cth\u003e\n            %StartupFolder%\u003c/th\u003e\n            \u003cth\u003e\n            Persistence type\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Use registry HKCU Run key\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Windows startup folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Windows startup folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Use registry HKCU Winlogon key\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 5. Configuration elements determining the persistence type.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eA bug in the code causes the %StartupFolder% logic to override the %Hidden% logic if both configuration elements are set to true. The malware author erroneously used an \"if\" statement instead of \"else if\" in the logic setting the persistence type (see Figure 15).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"313\" width=\"800\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-15.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 15. Error in persistence code. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eFor Windows startup folder persistence, the core processor uses the \u003ca href=\"https://docs.microsoft.com/en-us/troubleshoot/windows-client/admin-development/create-desktop-shortcut-with-wsh\"\u003eWshShortcut\u003c/a\u003e COM object to create a .lnk shortcut file in the Windows startup folder. This file points to the configured installation path and filename of DarkTortilla's initial loader executable (see Figure 16).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"196\" width=\"685\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-16.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 16. COM object that drops shortcut file in Windows startup folder for persistence. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eDarkTortilla features standard and hidden techniques for implementing persistence via the Windows registry. Both options implement persistence in the HKEY_CURRENT_USER (HKCU) hive as a hard-coded value in the core processor code. This persistence results in the installed DarkTortilla initial loader executable being run every time the user logs in.\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003eFor standard registry persistence, the core processor uses the %InstallationReg% and %InstallationKey% values to set the target key/value combination. In every sample analyzed by CTU researchers where standard persistence was configured, the %InstallationReg% value was \"Software\\Microsoft\\Windows\\CurrentVersion\\Run\". The value stored in %InstallationKey% varied across samples (e.g., \"Updates\", \"svchost\", \"Runtime Broker\").\u003c/li\u003e\n    \u003cbr /\u003e\n    \u003cli\u003eFor hidden registry persistence, the core processor uses the %HiddenReg% and %HiddenKey% values to set the target key/value combination. In every sample analyzed by CTU researchers where hidden persistence was configured, the %InstallationReg% value was \"Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" and the value stored in %HiddenKey% was \"Shell\". Prior to setting the hidden persistence registry value, DarkTortilla's core processor prepends the installed initial loader executable path with the Windows shell value retrieved from the HKEY_LOCAL_MACHINE (HKLM) hive. This value is typically \"explorer.exe\", resulting in \"explorer.exe,\u0026lt;\u003cem\u003einstalled_darktortilla_exe_path\u003c/em\u003e\u0026gt;\". For example, if the configured install path and executable name for a DarkTortilla sample is \"C:\\Program Files\\WindowsPowerShell\\PowerShellInfo.exe\", then the HKCU Winlogon\\Shell registry entry is \"explorer.exe,C:\\Program Files\\WindowsPowerShell\\PowerShellInfo.exe\". To create these registry values, the core processor executes the following command via Process.Start():\u003cbr /\u003e\n    \u003cbr /\u003e\n    \u003cpre\u003e\tcmd.exe /c REG ADD \"HKCU\\\u003cem\u003e\u0026lt;configured_reg_key\u0026gt;\u003c/em\u003e\" /f /v \"\u003cem\u003e\u0026lt;configured_reg_val\u0026gt;\u003c/em\u003e\" /t\n\tREG_SZ /d \"\u003cem\u003e\u0026lt;installed_darktortilla_exe_path\u0026gt;\u003c/em\u003e\"\n\t\u003c/pre\u003e\n    \u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eRunPE process injection\u003c/h3\u003e\n\u003cp\u003eDarkTortilla can execute its payloads using process injection. With this method, the payload resides only in memory and never accesses the filesystem. The %HostIndex% configuration element defines which legitimate process to target for process injection (see Table 6).\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            %HostIndex% value\u003c/th\u003e\n            \u003cth\u003e\n            Corresponding target process\u003c/th\u003e\n            \u003cth\u003e\n            Source directory\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0 \u003cem\u003e(or any numeric value that is not 1-6)\u003c/em\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Initial loader executable's name\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u0026nbsp;\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            1\n            \u003c/td\u003e\n            \u003ctd\u003e\n            AppLaunch.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            2\n            \u003c/td\u003e\n            \u003ctd\u003e\n            svchost.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            System32 folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            3\n            \u003c/td\u003e\n            \u003ctd\u003e\n            RegAsm.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            4\n            \u003c/td\u003e\n            \u003ctd\u003e\n            InstallUtil.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5\n            \u003c/td\u003e\n            \u003ctd\u003e\n            mscorsvw.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            6\n            \u003c/td\u003e\n            \u003ctd\u003e\n            AddInProcess32.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 6. %HostIndex% values and corresponding target processes used for payload injection.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003ePrior to setting the target process name, the core processor checks for active processes named \"avp\". The avp.exe process is part of the Kaspersky Anti-Virus suite. If the core processor detects this process, it overrides the %HostIndex% value and sets the target process name to the name of the initial loader executable. When the %HostIndex% value is 1-6, the core processor attempts to copy the legitimate target executable file to the Windows %TEMP% directory.\u003c/p\u003e\n\u003cp\u003eDarkTortilla uses a .NET-based DLL named \"RunPe6\" for process injection. This DLL is embedded within the core processor as an encoded byte array (see Figure 17).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"403\" width=\"519\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-17.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 17. Encoded RunPe6 DLL stored as byte array within DarkTortilla core processor. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eTo decode each byte, the core processor uses the following equation with \u003cem\u003e\u0026lt;xor_key\u0026gt;\u003c/em\u003e as the hard-coded integer array [45, 89, 125, 69, 250, 222, 111] and \u003cem\u003e\u0026lt;seed\u0026gt;\u003c/em\u003e as the hard-coded integer 99:\u003c/p\u003e\n\u003cpre\u003edecoded_byte = encoded_byte ^ (\u003cem\u003e\u0026lt;xor_key\u0026gt;\u003c/em\u003e[(idx * \u003cem\u003e\u0026lt;seed\u0026gt;)\u003c/em\u003e % xor_key.Length])\u003c/pre\u003e\n\u003cbr /\u003e\n\u003cp\u003eThe core processor loads RunPe6 and calls its \u0026lsquo;Runn' function to execute the malicious payload within the context of the configured target subprocess. The core processor does not directly reference this function. Rather, it references the index values for the target class (18) and function (0). Figure 18 displays PowerShell code developed by CTU researchers to replicate the core processor's target function identification logic.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"167\" width=\"561\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-18.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 18. Custom PowerShell script to identify RunPe6 function used for payload process injection. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch3\u003eAddon package processing\u003c/h3\u003e\n\u003cp\u003eDarkTortilla can be configured with zero or more payloads known as addon packages. These addons are in addition to the main payload that DarkTortilla is tasked with delivering. Observed addons include benign decoy documents, legitimate executables, keyloggers, clipboard stealers, cryptocurrency miners, and additional DarkTortilla payloads. Each addon package possesses a set of configuration elements composed of a static \"F\" character, an integer \"{0}\" that represents the index value indicating the position of the addon in the package array, and a character representing a particular property associated with the package.\u003c/p\u003e\n\u003cp\u003eThe %FilesNum% configuration element defines the number of addon packages to process. For example, if the %FilesNum% value is 3, the configuration elements are F.0.\u003cem\u003e\u0026lt;addon property\u0026gt;\u003c/em\u003e, F.1.\u003cem\u003e\u0026lt;addon property\u0026gt;\u003c/em\u003e, and F.2.\u003cem\u003e\u0026lt;addon property\u0026gt;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eThe F.{0}.D (data) configuration element contains the addon package payload binary data. The core processor checks the %Compress% configuration element to determine if the stored data is compressed. If the element is set to true, the core processor decompresses the data before processing it.\u003c/p\u003e\n\u003cp\u003eThe core processor next determines if it should process the addon package by inspecting the initial loader's installation state and the addon package's F.{0}.R (run) value. Table 7 lists the criteria and their result.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Initial loader running from install directory\u003c/th\u003e\n            \u003cth\u003e\n            F.{0}.R (run) value\u003c/th\u003e\n            \u003cth\u003e\n            Process addon package?\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Yes\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            No\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            No\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Yes\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 7. Criteria for processing addon package.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eIf configured to process the addon package, the core processor inspects the F.{0}.O (operation) configuration element value to determine how to execute its payload. This value can be any integer but is typically 0, 1, or 2. If the value is set to 0 or any value other than 1 or 2, the core processor saves the payload to disk but does not execute it. If the value is 1, the core processor saves the payload to disk and executes it. If the value is 2, the core processor executes the payload in memory via the same RunPE process injection technique and target process it uses for the main payload.\u003c/p\u003e\n\u003cp\u003eIf the payload is saved to disk, the location is specified by the addon path (F.{0}.P), subfolder (F.{0}.F), and filename (F.{0}.N) configuration elements. The F.{0}.P integer value represents a CSIDL value associated with a special folder on the system. For example, the value 2 corresponds to the Windows Start Menu/Programs folder. The full path of an analyzed \u003ca href=\"https://www.virustotal.com/gui/file/5be86cfca25e295f88b5aab42a6f604d2f1bb97f3c73b01df664c137908e2ec4\"\u003esample\u003c/a\u003e containing a F.{0}.P value of 2, an empty string for F.{0}.F, and a value of sertif.exe for F.{0}.N is \"C:\\Users\\\u003cem\u003e\u0026lt;username\u0026gt;\u003c/em\u003e\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\sertif.exe\".\u003c/p\u003e\n\u003ch3\u003eMain payload processing\u003c/h3\u003e\n\u003cp\u003eAfter processing addon packages and installing the initial loader executable if appropriate, DarkTortilla processes its main payload. This main payload is typically a commodity information stealer or remote access trojan (RAT). DarkTortilla stores the binary data for the main payload in the %MainFile% configuration element. Processing this payload consists of two steps:\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003eThe core processor queries the %Compress% configuration element to determine if the binary data in the %MainFile% configuration element is compressed. If set to true, the core processor decompresses the data.\u003c/li\u003e\n    \u003cbr /\u003e\n    \u003cli\u003eThe core processor executes the main payload via RunPE process injection. Unlike the addon payloads, there is no option to save the main payload to the filesystem. Therefore, the main payload resides only in memory. The target process used for injection is the same as the addon packages and is defined by the %HostIndex% configuration element.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003eAnti-analysis controls\u003c/h3\u003e\n\u003cp\u003eDarkTortilla core processor samples analyzed by CTU researchers were obfuscated using the \u003ca href=\"https://yck1509.github.io/ConfuserEx/\"\u003eConfuserEx\u003c/a\u003e code obfuscator. In addition to the obfuscator altering namespace, class, function, and property names, CTU researchers identified multiple samples where it injected specially crafted code that did not affect execution but inhibited decompilation by tools such as dnSpy (see Figure 19). Bypassing this anti-analysis control requires removing the code that caused the decompiler to break, identifying another sample that does not implement this control, or piecing together analysis from multiple samples to understand the code.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"497\" width=\"800\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-19.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 19. Broken dnSpy decompilation of DarkTortilla core processor. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe core processor includes code that that detects profilers and debuggers, but these anti-analysis controls are not called. To detect profiling, the code verifies if the \u003ca href=\"https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ee471451(v=vs.100)?redirectedfrom=MSDN\"\u003eCOR_ENABLE_PROFILING\u003c/a\u003e environment variable is present and sets to the value of 1. To detect debuggers, the code spawns a thread (see Figure 20) that continuously checks the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.debugger.isattached?view=net-6.0\"\u003eDebugger.IsAttached\u003c/a\u003e property and the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.debugger.islogging?view=net-6.0\"\u003eDebugger.IsLogging\u003c/a\u003e method. If the core processor identifies a debugger or if the thread performing the checks is terminated, the code terminates the initial loader process. It is unclear if this code was added by ConfuserEx or the malware author.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"475\" width=\"585\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-20.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 20. Debugger detection performed by DarkTortilla core processor. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe core processor implements string encoding to obscure important strings such as the configuration keys. Figure 21 shows a code excerpt that passes the string length (17), character index array ([26,8,13,18,19,0,11,11,0,19,8,14,13,17,4,6,26]), and capital letter index array ([8,17]) to the decode function.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"79\" width=\"522\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-21.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 21. DarkTortilla core processor string obfuscation example. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThis function decodes the string by iterating through each value in the character index array and retrieving the corresponding character at the specified index in a hard-coded character array (see Figure 22).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"105\" width=\"385\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-22.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 22. Character array used by string decoding logic. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eFigure 21 shows that the example's first three values of the character index array passed to the decode function are 26, 8, and 13. These values correspond to the characters \"%\", \"i\", and \"n\" in the hard-coded character array shown in Figure 22. The values passed in the capital letter index array (8, 17) indicate which characters should be capitalized (\"I\" and \"R\" in this example). Processing the character index array results in the decoded string \"%InstallationReg%\".\u003c/p\u003e\n\u003cp\u003eThe %VM% configuration element enables DarkTortilla's anti-virtual machine (anti-VM) controls. If set to true, the core processor obtains information about the system by querying the following Windows Management Instrumentation (WMI) objects:\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-computersystem\"\u003eWin32_ComputerSystem\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-bios\"\u003eWin32_BIOS\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-motherboarddevice\"\u003eWin32_MotherboardDevice\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-pnpentity\"\u003eWin32_PnPEntity\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-diskdrive\"\u003eWin32_DiskDrive\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe core processor also retrieves information about the system's running processes and services. It then inspects this data for strings associated with Hyper-V, QEMU, Virtual PC, VirtualBox, and VMware. If any of the case-insensitive data matches the criteria in Table 8, the core processor terminates the initial loader process.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Targeted technology\n            \u003c/th\u003e\n            \u003cth\u003e\n            Inspected entity\n            \u003c/th\u003e\n            \u003cth\u003e\n            Inspection logic\n            \u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Hyper-V\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Caption contains \"virtual\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Hyper-V\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_ComputerSystem\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Manufacturer contains \"microsoft\" and Model contains \"virtual\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            QEMU\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name contains \"qemu\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Virtual PC\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Process\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Process list contains \"vmusrvc\" or both \"vpcmap\" and \"vmsrvc\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VirtualBox\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Model contains \"vbox\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VirtualBox\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Process\n            \u003c/td\u003e\n            \u003ctd\u003e\n            ProcessName contains \"vboxservice\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name contains \"vmware\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Model contains \"vmware\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_ComputerSystem\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Manufacturer contains \"vmware\" and Model contains \"virtual\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_BIOS\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Serial number contains \"vmware\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name equals \"vmware pointing device\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name contains \"vmware sata\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name equals \"vmware usb pointing device\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name equals \"vmware vmci bus device\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name equals \"vmware virtual s scsi disk device\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name starts with \"vmware svga\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Service\n            \u003c/td\u003e\n            \u003ctd\u003e\n            ServiceImagePath contains \"vmware\" and ServiceName equals \"vmtools\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Service\n            \u003c/td\u003e\n            \u003ctd\u003e\n            ServiceImagePath contains \"vmware\" and ServiceName equals \"tpvcgateway\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Service\n            \u003c/td\u003e\n            \u003ctd\u003e\n            ServiceImagePath contains \"vmware\" and ServiceName equals \"tpautoconnsvc\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 8. DarkTortilla core processor anti-VM detections.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe %SB% configuration element enables DarkTortilla's anti-sandbox control. This control only detects the \u003ca href=\"https://sandboxie-plus.com/Sandboxie/\"\u003eSandboxie\u003c/a\u003e sandbox. The core processor terminates the initial loader process if it detects a running process named \"sandboxierpcss\" in the current session.\u003c/p\u003e\n\u003ch3\u003eAnti-tamper controls\u003c/h3\u003e\n\u003cp\u003eDarkTortilla's anti-tamper controls are the last step in its execution chain and occur after the main payload is executed. The four controls ensure that nothing interferes with DarkTortilla's execution of its critical components.\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003e\n    \u003cp\u003eThe first anti-tamper control is employed by the core processor and ensures that the injected subprocess running the main payload is immediately rerun if terminated. The %InjectionPersist% configuration element regulates this control. If set to true, the core processor starts a thread that monitors the state of the injected subprocess. If the subprocess is terminated, this anti-tamper control automatically respawns the configured target subprocess, re-injects the main payload, and executes it within the context of the subprocess.\u003c/p\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\n    \u003cp\u003eThe second anti-tamper control ensures that the initial loader executable is immediately rerun if terminated. DarkTortilla implements this functionality with a secondary .NET-based executable that it refers to as \"WatchDog\". The %InjectionPersist% configuration element regulates this control. If set to true, the core processor drops the WatchDog executable and its configuration file to the Windows %TEMP% directory. It then executes the WatchDog executable, which monitors the initial loader process.\u003c/p\u003e\n    \u003cp\u003eThe WatchDog executable bytes are stored in the DarkTortilla %WatchDogBytes% configuration element, and the filename is stored in %WatchDogName%. Prior to processing, the core processor decompresses the WatchDog executable's bytes if the %Compress% configuration element is set to true. Every \u003ca href=\"https://www.virustotal.com/gui/file/2d0dc6216f613ac7551a7e70a798c22aee8eb9819428b1357e2b8c73bef905ad\"\u003eWatchDog executable\u003c/a\u003e dropped by DarkTortilla was identical:\u003c/p\u003e\n    \u003cul\u003e\n        \u003cli style=\"list-style: disc;\"\u003eMD5 hash: 0e362e7005823d0bec3719b902ed6d62\u003c/li\u003e\n        \u003cli style=\"list-style: disc;\"\u003eSHA1 hash: 590d860b909804349e0cdc2f1662b37bd62f7463\u003c/li\u003e\n        \u003cli style=\"list-style: disc;\"\u003eSHA256 hash: 2d0dc6216f613ac7551a7e70a798c22aee8eb9819428b1357e2b8c73bef905ad\u003c/li\u003e\n    \u003c/ul\u003e\n\n    \u003cp\u003eIf an executable with the configured WatchDog name already exists in the Windows %TEMP% directory, the core processor removes the existing executable's \u003ca href=\"https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-fscc/6e3f7352-d11c-4d76-8c39-2516a9df36e8\"\u003eZone.Identifier\u003c/a\u003e Alternate Data Stream (ADS), which strips the executable of any existing \u003ca href=\"https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/ms537183(v=vs.85)?redirectedfrom=MSDN\"\u003eURL security zones\u003c/a\u003e. It then overwrites the existing executable with the new WatchDog executable.\u003c/p\u003e\n    \u003cp\u003eThe WatchDog configuration file dropped to the filesystem shares the same name as the WatchDog executable but uses a .txt file extension. For example, the configuration filename for \"WatchDog.exe\" is \"WatchDog.txt\". This configuration file contains three lines representing the following values:\u003c/p\u003e\n    \u003cul\u003e\n        \u003cli style=\"list-style: disc;\"\u003eThe process ID of the initial loader executable\u003c/li\u003e\n        \u003cli style=\"list-style: disc;\"\u003eThe path and filename of the initial loader executable\u003c/li\u003e\n        \u003cli style=\"list-style: disc;\"\u003eThe process ID for the WatchDog executable\u003c/li\u003e\n    \u003c/ul\u003e\n\n    \u003cp\u003eIf the initial loader process terminates, the WatchDog process reruns it and refreshes the contents of the WatchDog configuration text file with the new process ID information.\u003c/p\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\n    \u003cp\u003eThe third anti-tamper control is employed by the core processor and ensures that the dropped WatchDog executable continues to execute. The core processor retrieves the WatchDog executable process ID from the WatchDog configuration file once per second and verifies that the corresponding process is running. If the WatchDog process terminates, the core processor breaks the loop, drops a new WatchDog configuration file, and reruns the WatchDog executable.\u003c/p\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\n    \u003cp\u003eThe fourth anti-tamper control is employed by the core processor and maintains persistence for the initial loader. The %StartupPersist% configuration element regulates this control. If set to true, the core processor starts a thread that sets persistence every 30 seconds using the persistence type defined in the DarkTortilla configuration. The control does not contain validation logic to check the persistence status, so it repeats the process indefinitely.\u003c/p\u003e\n    \u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3\u003eDelayed execution\u003c/h3\u003e\n\u003cp\u003eThe core processor implements the kernel32.dll Sleep function to delay execution at the following stages of the process. The length of delay is typically controlled by the value in the %Delay% configuration element. CTU researchers observed values ranging from 0 seconds to 300 seconds.\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003ePrior to implementing persistence, the core processor sleeps for the number of seconds specified by the %Delay% configuration element.\u003c/li\u003e\n    \u003cli\u003ePrior to processing addon packages, the core processor sleeps for the number of seconds specified by the %Delay% configuration element.\u003c/li\u003e\n    \u003cli\u003eThe core processor sleeps for a hard-coded 5 seconds after copying the source executable to the install directory but before running the executable.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe number of delays increases if the %Melt% and %Installation% configuration elements are set to true, as the delays are processed each time the executable migrates. These delays can impede detection in sandbox environments if they exceed the maximum wait time.\u003c/p\u003e\n\u003ch2\u003ePossible malware connections\u003c/h2\u003e\n\u003cp\u003eDarkTortilla code shares similarities to other malware. For example, payload compression, junk code inclusion, and payload execution via \u003ca href=\"https://github.com/malwares/Crypter/blob/master/%5BC%23%5D%20The%20RATs%20Crew%20Crypter/Form1.cs#L161-L163\"\u003eRunPe6\u003c/a\u003e are also features of a RATs Crew crypter last updated in 2016. DarkTortilla could represent an evolution of that crypter. Additionally, the Gameloader malware uses similar malspam lures and archive files as DarkTortilla. It also leverages .NET resources to store encoded DLLs and encrypted bitmap images and delivers similar commodity malware payloads. However, there is insufficient evidence as of this publication to definitively link these malware families or threat actors to DarkTortilla.\u003c/p\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eResearchers often overlook DarkTortilla and focus on its main payload. However, DarkTortilla is capable of evading detection, is highly configurable, and delivers a wide range of popular and effective malware. Its capabilities and prevalence make it a formidable threat.\u003c/p\u003e\n\u003ch2\u003eThreat indicators\u003c/h2\u003e\n\u003cp\u003eThe threat indicators in Table 9 can be used to detect activity related to DarkTortilla. The URL may contain malicious content, so consider the risks before opening it in a browser.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Indicator\n            \u003c/th\u003e\n            \u003cth\u003e\n            Type\n            \u003c/th\u003e\n            \u003cth\u003e\n            Context\n            \u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            59295e810bbdbfd64b8c41316ea13cae\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious spam delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            18391a58ee25a5cb8dfbf4d48517b5b0\u003cbr /\u003e\n            c66c5ae6\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious spam delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            981aa83b2d33cca994021197237ac5ee\u003cbr /\u003e\n            3ad3402f7d25f04f4e76985f4ec8744c\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious spam delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            84872b60072011eab8940f3b49bdb582\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            3da0f44d45a1d6676d52ce691d2f6d75\u003cbr /\u003e\n            4eb3097e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5e03556be992d23088a3c49d24c45b1c\u003cbr /\u003e\n            21cd275bffb4e536348e8128d50374b6\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            2d74df3ce221f6ff48d20bac158a3e78\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious document delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0563e691801251cdfd363eee31858ead\u003cbr /\u003e\n            5ee3928b\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious document delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            4f15b28c91fa0e8d0dd9e86481bad04f\u003cbr /\u003e\n            a34fcaf564d08de7c4c0c513fc6e122d\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious document delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            827258f907c5087f498c413d28e2203e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5e0cb6076002b11a39636e07a217b493\u003cbr /\u003e\n            835e5bce\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            55d7d9bd9d4a511417033b6c14ce93f9\u003cbr /\u003e\n            62d6a6e6c6414f0cb7e455baee1d3ab7\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            c37aae0ff565a2e44f144f837b750279\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            dde386911b091e894746b0f12d88a1fd\u003cbr /\u003e\n            18761fb9\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            a0b96236bfd79d2ebeadb8e3deb9448a\u003cbr /\u003e\n            f3ec8edd1ea9672b7ad4793934bb4c47\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            93fe6600c51014d7d6c2afedf8398f92\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            8f7340704745f3d53b284c101e93c42f\u003cbr /\u003e\n            8d4c2adc\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            45ef054bca2ae4d67e6623bf28ff75e5\u003cbr /\u003e\n            d178924602674c654e1b569aa74601cd\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            6e91ad0972e104a277505104abe39d1e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            261d699c3bb1a0042b88a45ed340f2d8\u003cbr /\u003e\n            6149464f\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            b3754c6ecc445e9a3b37c5ebe68adb96\u003cbr /\u003e\n            30ca4aa89a8e8515468f39ae8131f141\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            cd49f7c3c4e82dee128eedea9879bc33\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            619bf90a8ea219e34bf57dda1a322914\u003cbr /\u003e\n            b9fa1c81\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0a5dc3b6669cf31e8536c59fe1315918\u003cbr /\u003e\n            eb4ecfd87998445e2eeb8fed64bd2f2c\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            851816aa8cf45ba769f0d9420acfb3e5\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            4178d5efa388caf2d0ffd4539cf285b1\u003cbr /\u003e\n            de5ffab6\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            083acce46cb8cf35e37c778d1f4aee68\u003cbr /\u003e\n            14bca72d2874b793a47f9823f51df0fe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            f44695a8febb2a35576a59fa984629d2\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            37ec57e5da46dc1990941a1bb3ffab9e\u003cbr /\u003e\n            74db346a\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            53b3b37b7d1e40c80fcda2c424cd8373\u003cbr /\u003e\n            79ac2ce93023de6c22ba3e2d94679671\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            8d8c551dd572a1dc158de239b37eaa9a\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            6d4b4bcd107b09af37996c73a6448379\u003cbr /\u003e\n            a31aaac4\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5be86cfca25e295f88b5aab42a6f604d\u003cbr /\u003e\n            2f1bb97f3c73b01df664c137908e2ec4\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0f89a2015ed9c1be5522e27c00276e52\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla core processor (PVCore1)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5ad5b35f6cc093067c6f219f2d2107f4\u003cbr /\u003e\n            4248c5bb\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla core processor (PVCore1)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            93dd1202697dbaed9ef4f4707f262821\u003cbr /\u003e\n            2bf13aad096de29c14924b1dae1d6d5b\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla core processor (PVCore1)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0e362e7005823d0bec3719b902ed6d62\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla watchdog executable\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            590d860b909804349e0cdc2f1662b37b\u003cbr /\u003e\n            d62f7463\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla watchdog executable\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            2d0dc6216f613ac7551a7e70a798c22a\u003cbr /\u003e\n            ee8eb9819428b1357e2b8c73bef905ad\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla watchdog executable\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            https://pastebin.pl/view/raw/60b6b03b\n            \u003c/td\u003e\n            \u003ctd\u003e\n            URL\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla encoded core processor download\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 9. Indicators for this threat.\u003c/em\u003e\u003c/p\u003e\n\u003ch2\u003eReferences\u003c/h2\u003e\n\u003cp\u003eArntz, Pieter. \"Explained: Packer, Crypter, and Protector.\" Malwarebytes Labs. March 27, 2017. \u003ca href=\"https://blog.malwarebytes.com/cybercrime/malware/2017/03/explained-packer-crypter-and-protector/\"\u003ehttps://blog.malwarebytes.com/cybercrime/malware/2017/03/explained-packer-crypter-and-protector/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eHasherezade. \"Rainbows, Steganography and Malware in a new .NET cryptor.\" Malwarebytes Labs. March 30, 2016. \u003ca href=\"https://blog.malwarebytes.com/threat-analysis/2015/08/rainbows-steganography-and-malware-in-a-new-net-cryptor/\"\u003ehttps://blog.malwarebytes.com/threat-analysis/2015/08/rainbows-steganography-and-malware-in-a-new-net-cryptor/\u003c/a\u003e \u003c/p\u003e\n\u003cp\u003e\"RATs Crew.\" Hack Forums. June 21, 2021. \u003ca href=\"https://wiki.hackforums.net/RATs_Crew\"\u003ehttps://wiki.hackforums.net/RATs_Crew\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eGoSecure Titan Labs. \"New Malware \u0026lsquo;Gameloader' in Discord Malspam Campaign.\" GoSecure. November 2, 2021. \u003ca href=\"https://www.gosecure.net/blog/2021/11/02/new-malware-gameloader-in-discord-malspam-campaign-identified-by-gosecure-titan-labs/\"\u003ehttps://www.gosecure.net/blog/2021/11/02/new-malware-gameloader-in-discord-malspam-campaign-identified-by-gosecure-titan-labs/\u003c/a\u003e\u003c/p\u003e"},"author":[{"id":"d143bf9c-2048-4f78-a59f-64dbcba7f3dc","url":"http://uswest-www.secureworks.com/content/people/counter-threat-unit-research-team","name":"Counter Threat Unit Research Team","displayName":"Counter Threat Unit Research Team","fields":{"lastName":{"value":" "},"bio":{"value":"Secureworks Counter Threat Unit™ (CTU) researchers frequently serve as expert resources for the media, publish technical analyses for the security community, and speak about emerging threats at security conferences. Leveraging Secureworks’ advanced security technologies and a network of industry contacts, the CTU™ research team tracks threat actors and analyzes anomalous activity, uncovering new attack techniques and threats. This process enables CTU researchers to identify threats as they emerge and develop countermeasures that protect customers before damage can occur."},"firstName":{"value":"Counter Threat Unit Research Team"},"metaTitle":{"value":"Counter Threat Unit Research Team | Secureworks"},"noFollow":{"value":false},"excludeFromSearch":{"value":false},"noIndex":{"value":false},"openGraphTitle":{"value":"Counter Threat Unit Research Team | Secureworks"},"openGraphSiteName":{"value":"Secureworks"},"twitterCardType":{"id":"32f6a4e4-93dd-4a9c-aa60-cdedb0bedabb","url":"/sitecore/system/settings/feature/experience-accelerator/sitemetadata/enums/twitter-card-types/summary-card-with-large-image","name":"Summary Card with Large Image","displayName":"Summary Card with Large Image","fields":{"value":{"value":"summary_large_image"}}}}}],"publishedDate":{"value":"2022-08-17T02:00:00Z"},"lastUpdatedDate":{"value":"0001-01-01T00:00:00Z"},"displayDate":{"value":"0001-01-01T00:00:00Z"},"customTags":[{"id":"36eb03d6-7645-45a6-9715-b8c452d6a6e8","url":"http://cd/sitecore/content/shared/taxonomy/content-type/content-type---threat-analysis","name":"Content Type - Threat Analysis","displayName":"Content Type - Threat Analysis","fields":{"value":{"value":"Threat Analysis"}}},{"id":"0755cbd4-295d-4f10-8d4f-ce30adb25dba","url":"http://cd/sitecore/content/shared/taxonomy/topic/threat-intelligence","name":"Threat Intelligence","displayName":"Topic - Threat Intelligence","fields":{"value":{"value":"Threat Intelligence"}}},{"id":"d591aaba-1816-4bec-8a75-7388c3adb175","url":"http://cd/sitecore/content/shared/taxonomy/service/threat-hunting-assessment","name":"Threat Hunting Assessment","displayName":"Service - Secureworks Threat Hunting Assessment","fields":{"value":{"value":"Threat Hunting Assessment"}}},{"id":"4657b998-5773-410b-84b4-ab8bffb36f49","url":"http://cd/sitecore/content/shared/taxonomy/content-type/content-type---research","name":"Content Type - Research","displayName":"Content Type - Research","fields":{"value":{"value":"Research"}}}],"pageLocation":{"id":"2e57e396-bd9e-4829-8646-55dd117e548f","url":"/sitecore/content/shared/locations/research","name":"research","displayName":"/research","fields":{"value":{"value":"research"}}},"pageDesign":{"id":"2b9967b1-47cf-4c13-a2ea-6ee507433909","url":"/presentation/page-designs/research-article","name":"Research Article","displayName":"Research Article","fields":{"partialDesigns":{"value":"{5A1F0357-FC36-46A7-8236-A69E0E353F4A}|{2B412C03-2AF5-4F68-B8A4-4921D29B5DB4}|{ED6F2B34-AF34-4648-A828-ECBF550D950A}"}}},"openGraphTitle":{"value":"DarkTortilla Malware Analysis"},"openGraphDescription":{"value":"Learn how Secureworks CTU researchers have identified DarkTortilla samples delivering targeted malicious payloads, benign decoy documents, and executables."},"openGraphImageUrl":{"value":{"src":"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/darktortilla-malware-ta_800x800.png?h=800\u0026iar=0\u0026w=800\u0026hash=F572C79EF036740F86184BECC4377968","alt":"DarkTortilla Malware Analysis","width":"800","height":"800"}},"openGraphSiteName":{"value":"Secureworks"},"twitterCardType":{"id":"32f6a4e4-93dd-4a9c-aa60-cdedb0bedabb","url":"/sitecore/system/settings/feature/experience-accelerator/sitemetadata/enums/twitter-card-types/summary-card-with-large-image","name":"Summary Card with Large Image","displayName":"Summary Card with Large Image","fields":{"value":{"value":"summary_large_image"}}},"metaDescription":{"value":"Learn how Secureworks CTU researchers have identified DarkTortilla samples delivering targeted malicious payloads, benign decoy documents, and executables."}},"renderingParams":{"alignment":{"id":"be0724c4-68e1-4160-8670-e64024356853","name":"Left","displayName":"Left","templateName":"LookUpItem","templateId":"{EFB889F4-78B6-4030-99DF-B47C6A0FAB7B}","url":"/sitecore/content/shared/lookups/alignment-options/left","searchPageUrl":"/","fields":{"value":{"value":"left"}}},"titleTag":{"id":"08086e23-1ec1-4e8c-a963-c603a773917e","name":"h1","displayName":"h1","templateName":"LookUpItem","templateId":"{EFB889F4-78B6-4030-99DF-B47C6A0FAB7B}","url":"/sitecore/content/shared/lookups/headline-tags/h1","searchPageUrl":"/","fields":{"value":{"value":"h1"}}},"dynamicPlaceholderId":"2"}},"placeholders":{"cta-buttons-{*}":[]}}],"article-hero-author":[{"uid":"45b4ce03-5d5b-4740-a6ba-a060a50c70eb","componentName":"ArticleAuthor","dataSource":"/sitecore/content/SW/swxp-rendering/Content/Articles/research/2022/darktortilla malware analysis","fields":{"id":"8507d2d8-3e50-40a0-860a-1b403dd2bdaf","name":"darktortilla malware analysis","displayName":"darktortilla malware analysis","templateName":"Article Page","templateId":"{9F5E0978-58FB-40A6-8872-3E84B897AF67}","url":"/research/darktortilla-malware-analysis","searchPageUrl":"/research","fields":{"metaTitle":{"value":"DarkTortilla Malware Analysis"},"noFollow":{"value":false},"excludeFromSearch":{"value":false},"noIndex":{"value":false},"gated":{"value":false},"gatedVideoType":{"id":"971f4491-d4a6-42bf-abc8-9d305797ca0c","url":"/sitecore/content/shared/lookups/video-platforms/vimeo","name":"Vimeo","displayName":"Vimeo","fields":{"value":{"value":"vimeo"}}},"eyebrow":{"value":"Threat Analysis"},"image":{"value":{"src":"/-/media/images/thumbnails/blog/thing-keyboard-02.jpg?h=722\u0026iar=0\u0026w=1284\u0026hash=3EB40DA8D7DC106CD65E005A469CF61C","alt":"keyboard","width":"1284","height":"722"}},"title":{"value":"DarkTortilla Malware Analysis"},"body":{"value":"\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eDarkTortilla is a complex and highly configurable .NET-based \u003ca href=\"https://blog.malwarebytes.com/cybercrime/malware/2017/03/explained-packer-crypter-and-protector/\"\u003ecrypter\u003c/a\u003e that has \u003ca href=\"https://blog.malwarebytes.com/threat-analysis/2015/08/rainbows-steganography-and-malware-in-a-new-net-cryptor/\"\u003epossibly\u003c/a\u003e been active since at least August 2015. It typically delivers popular information stealers and remote access trojans (RATs) such as AgentTesla, AsyncRat, NanoCore, and RedLine. While it appears to primarily deliver commodity malware, Secureworks\u0026reg; Counter Threat Unit\u0026trade; (CTU) researchers identified DarkTortilla samples delivering targeted payloads such as Cobalt Strike and Metasploit. It can also deliver \"addon packages\" such as additional malicious payloads, benign decoy documents, and executables. It features robust anti-analysis and anti-tamper controls that can make detection, analysis, and eradication challenging.\u003c/p\u003e\n\u003cp\u003eFrom January 2021 through May 2022, an average of 93 unique DarkTortilla samples per week were uploaded to the VirusTotal analysis service. Code similarities suggest possible links between DarkTortilla and other malware: a \u003ca href=\"https://github.com/malwares/Crypter/tree/master/%5BC%23%5D%20The%20RATs%20Crew%20Crypter\"\u003ecrypter\u003c/a\u003e operated by the \u003ca href=\"https://wiki.hackforums.net/RATs_Crew\"\u003eRATs Crew\u003c/a\u003e threat group, which was active between 2008 and 2012, and the \u003ca href=\"https://www.gosecure.net/blog/2021/11/02/new-malware-gameloader-in-discord-malspam-campaign-identified-by-gosecure-titan-labs/\"\u003eGameloader\u003c/a\u003e malware that emerged in 2021.\u003c/p\u003e\n\u003ch2\u003eDelivery\u003c/h2\u003e\n\u003cp\u003eCTU\u0026trade; analysis of VirusTotal samples revealed numerous campaigns delivering DarkTortilla via malicious spam (malspam). The emails typically use a logistics lure and include the malicious payload in an archive attachment with file types such as .iso, .zip, .img, .dmg, and .tar. The language of the email message is customized to the victim, and CTU researchers observed samples in English, German, Romanian, Spanish, Italian, and Bulgarian. Figure 1 shows a German-language malspam \u003ca href=\"https://www.virustotal.com/gui/file/981aa83b2d33cca994021197237ac5ee3ad3402f7d25f04f4e76985f4ec8744c\"\u003esample\u003c/a\u003e. The redacted filename of the attached \u003ca href=\"https://en.wikipedia.org/wiki/Optical_disc_image\"\u003eISO image\u003c/a\u003e archive file (.iso) includes the name of the organization the email was sent from. It is unclear if that organization was compromised. The archive file contains a single executable with the same filename but the .exe extension. This executable is a DarkTortilla initial loader \u003ca href=\"https://www.virustotal.com/gui/file/5e03556be992d23088a3c49d24c45b1c21cd275bffb4e536348e8128d50374b6\"\u003esample\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"597\" width=\"544\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-01.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 1. DarkTortilla malspam containing malicious archive attachment. (The German text translates to \"Good morning, Please give us your best price offer for our attached order. Awaiting your kind reply. Kind regards\"). (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eCTU researchers also identified malicious documents (maldocs) delivering DarkTortilla. Most of these maldocs embed the DarkTortilla initial loader executable as a Packager Shell Object. Figure 2 shows a \u003ca href=\"https://www.virustotal.com/gui/file/4f15b28c91fa0e8d0dd9e86481bad04fa34fcaf564d08de7c4c0c513fc6e122d\"\u003esample\u003c/a\u003e that prompts the victim to double-click the embedded Packager Shell Object, which executes the payload. Inspection of the Packager Shell Objects properties revealed that it is an executable named \u003ca href=\"https://www.virustotal.com/gui/file/55d7d9bd9d4a511417033b6c14ce93f962d6a6e6c6414f0cb7e455baee1d3ab7\"\u003eRFQ-010129H.exe\u003c/a\u003e, which is a DarkTortilla initial loader sample. Other analyzed maldocs use different approaches, such as leveraging embedded macros to automatically execute the Packager Shell Object when a victim opens the document and enables macros.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"658\" width=\"800\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-02.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 2. Maldoc sample delivering DarkTortilla. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch2\u003eHigh-level execution flow\u003c/h2\u003e\n\u003cp\u003eDarkTortilla consists of two components that rely on each other to successfully detonate payloads: a .NET-based executable (initial loader) and a .NET-based DLL (core processor). The typical high-level execution flow for a DarkTortilla payload starts with execution of the initial loader. The initial loader then retrieves its encoded core processor. While the encoded core processor is typically embedded within the .NET resources of the initial loader, CTU researchers identified initial loaders that retrieved their core processor from \u003ca href=\"https://cyberhoot.com/cybrary/paste/\"\u003epublic paste sites\u003c/a\u003e such as pastebin . pl, textbin . net, and paste . ee.\u003c/p\u003e\n\u003cp\u003eThe initial loader decodes, loads, and executes the core processor. When executed, the core processor extracts, decrypts, and parses its configuration. The encrypted configuration is stored within the .NET resources of the initial loader as bitmap images. Depending on DarkTortilla's configuration, the core processor performs the following actions:\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003eDisplays a fake message box\u003c/li\u003e\n    \u003cli\u003ePerforms anti-virtual machine checks\u003c/li\u003e\n    \u003cli\u003ePerforms anti-sandbox checks\u003c/li\u003e\n    \u003cli\u003eImplements persistence\u003c/li\u003e\n    \u003cli\u003eMigrates execution to the Windows %TEMP% directory by using the \"Melt\" configuration element\u003c/li\u003e\n    \u003cli\u003eProcesses addon packages\u003c/li\u003e\n    \u003cli\u003eMigrates execution to its install directory\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe core processor then injects and executes its configured main payload within the context of the configured subprocess. Finally, if configured, the core processor implements anti-tamper controls to prevent interference with execution of the initial loader, core processor, injected subprocess, and WatchDog executable.\u003c/p\u003e\n\u003cp\u003eFigure 3 illustrates this high-level DarkTortilla execution flow.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"775\" width=\"622\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-03.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 3. High-level execution flow for DarkTortilla infection. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch2\u003eInitial loader\u003c/h2\u003e\n\u003cp\u003eInitial loader samples analyzed by CTU researchers were obfuscated using the \u003ca href=\"https://marketplace.visualstudio.com/items?itemName=DeepSeaObfuscator.DeepSeaObfuscator\"\u003eDeepSea .NET code obfuscator\u003c/a\u003e. As a result, many aspects of the original code have been altered to thwart analysis. For example, namespace, class, function, and property names were renamed from their original descriptive values to random characters. Figure 4 shows an example of these obfuscated values within the code decompiled by the \u003ca href=\"https://github.com/dnSpyEx/dnSpy\"\u003ednSpy\u003c/a\u003e .NET analysis tool.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"384\" width=\"368\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-04.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 4. Obfuscated DarkTortilla initial loader sample. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eIn addition to name obfuscation, DeepSea applies \u003ca href=\"http://tigress.cs.arizona.edu/transformPage/docs/flatten/index.html\"\u003eswitch dispatch control flow obfuscation\u003c/a\u003e to DarkTortilla's initial loader. This technique restructures the original linear code into switch statements that transfer execution in a seemingly unpredictable pattern, making analysis difficult. Figure 5 shows a switch statement at the entry point of a DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/a0b96236bfd79d2ebeadb8e3deb9448af3ec8edd1ea9672b7ad4793934bb4c47\"\u003esample\u003c/a\u003e. In this example, the value stored in the \"num\" variable controls which code gets executed next. This value is obfuscated and is often the result of a conditional or mathematical expression calculated at runtime, such as \"\u003ca href=\"https://en.wikipedia.org/wiki/%3F:\"\u003e((!flag) ? 15 : 9)\u003c/a\u003e\" or \"\u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.math.abs?view=net-6.0#system-math-abs(system-int32)#system-math-abs(system-int32)\"\u003eMath.Abs(num2 * 25 * 25)\u003c/a\u003e\".\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"533\" width=\"420\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-05.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 5. Switch dispatch control flow obfuscation applied to DarkTortilla initial loader. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader stores DarkTortilla's encrypted configuration as bitmap images. Figure 6 lists the partial resource section of one \u003ca href=\"https://www.virustotal.com/gui/file/b3754c6ecc445e9a3b37c5ebe68adb9630ca4aa89a8e8515468f39ae8131f141\"\u003esample\u003c/a\u003e consisting of over 700 of these images.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"573\" width=\"763\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-06.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 6. Encrypted configuration stored as bitmap images within the .NET resources of DarkTortilla initial loader. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader's execution flow typically starts by checking for internet connectivity by issuing HTTP GET requests. In samples that implement this check, the initial loader attempts to retrieve content from google . com, bing . com, or both. Some \u003ca href=\"https://www.virustotal.com/gui/file/45ef054bca2ae4d67e6623bf28ff75e5d178924602674c654e1b569aa74601cd\"\u003esamples\u003c/a\u003e store the URLs in the executable as plain text (see Figure 7), but most samples encode them. If the check fails, the initial loader retries the request(s) until all are successful.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"324\" width=\"594\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-07.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 7. Internet connectivity check in DarkTortilla initial loader. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader generates a 16-byte key to decode the core processor. This key is based on an initial hard-coded value multiplied by the index value of its location in the destination array. Because the values are stored as single bytes, the maximum value for an element in the array is 0xFF (255 decimal). For example, the decode key array for an initial hard-coded value of 0x6E (110 decimal) is [0x00,0x6E,0xDC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF].\u003c/p\u003e\n\u003cp\u003eThe initial loader then retrieves the encoded core processor data. This data commonly resides within the .NET resources of the initial loader binary. Figure 8 shows encoded core processor data residing within the \"pnj\" .NET resource of a DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/45ef054bca2ae4d67e6623bf28ff75e5d178924602674c654e1b569aa74601cd\"\u003esample\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"756\" width=\"1017\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-08.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 8. Encoded core processor data stored within the .NET resources of DarkTortilla initial loader. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader decodes the core processor data by applying the following algorithm to each byte:\u003c/p\u003e\n\n\u003cpre\u003e\tenc_byte ^ (dec_key_arr[idx % len(dec_key_arr)] ^ (idx + (seed_byte % \n\tlen(dec_key_arr)) \u0026amp; seed_byte)\n\u003c/pre\u003e\n\n\u003cul\u003e\n    \u003cli\u003eenc_byte: The core processor byte array value being decoded\u003c/li\u003e\n    \u003cli\u003eidx: The encoded byte index in the core processor byte array\u003c/li\u003e\n    \u003cli\u003edec_key_arr: The generated 16-byte decode key byte array\u003c/li\u003e\n    \u003cli\u003eseed_byte: The fourth byte of the 16-byte decode key byte array\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe initial loader loads the decoded core processor assembly code and executes its pre-determined entry point function.\u003c/p\u003e\n\u003ch3\u003eInitial loader variant with externally hosted core processor\u003c/h3\u003e\n\u003cp\u003eInitial loader variants that retrieve the encoded core processor from public paste sites first decode the URL where the core processor is hosted. The encoding logic applied to the URL varies across analyzed DarkTortilla samples, making analysis and detection difficult. Figure 9 shows a DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/0a5dc3b6669cf31e8536c59fe1315918eb4ecfd87998445e2eeb8fed64bd2f2c\"\u003esample\u003c/a\u003e that encodes the URL (https: //pastebin . pl/view/raw/60b6b03b) by prepending and appending random text.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"408\" width=\"735\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-09.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 9. DarkTortilla initial loader variant that retrieves encoded core processor data from public paste site. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader retrieves an encoded string hosted at the decoded URL. This string represents the encoded core processor data. The string consists of fake XML tags, integer values encoded with a \u003ca href=\"https://en.wikipedia.org/wiki/Caesar_cipher\"\u003eshift cipher\u003c/a\u003e, and delimiters comprised of random letters (see Figure 10). The downloaded data is stored in memory and is never saved to the filesystem.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"476\" width=\"750\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-10.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 10. Encoded DarkTortilla core processor data hosted on public paste site. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader decodes the string by first removing the fake XML tags. The string is converted into an array of integers by replacing the random letter character delimiters with a consistent letter and then using that letter to split the string into integers. The last step is to iterate through the integer array and subtract a pre-defined value. This value changes across samples.\u003c/p\u003e\n\u003cp\u003eIn the Figure 10 example (\u0026lt;xml\u0026gt;1002k1015U1069k925E928s925U925E925g929E925\u0026hellip;\u0026lt;/xml\u0026gt;), the consistent letter delimiter is \"k\" and the pre-defined subtracted value is 925:\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003eRemove XML tags: 1002k1015U1069k925E928s925U925E925g929E925\u0026hellip;\u003c/li\u003e\n    \u003cli\u003eReplace random letters with consistent character: 1002k1015k1069k925k928k925k925k925k929k925\u0026hellip;\u003c/li\u003e\n    \u003cli\u003eSplit into integer array: [1002, 1015, 1069, 925, 928, 925, 925, 925, 929, 925, \u0026hellip;]\u003c/li\u003e\n    \u003cli\u003eSubtract pre-defined value from each integer: [77, 90, 144, 0, 3, 0, 0, 0, 4, 0, \u0026hellip;]\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThe hex representation of the final integer array for this example is [4D, 5A, 90, 00, 03, 00, 00, 00, 04, 00, \u0026hellip;]. This decoded data is the core processor DLL (see Figure 11).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"227\" width=\"700\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-11.png\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 11. Decoded DarkTortilla core processor DLL. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch2\u003eCore processor\u003c/h2\u003e\n\u003cp\u003eThe core processor contains DarkTortilla's primary functionality. From at least June 2020 to March 2022, the malware author transitioned through a limited number of filenames for this DLL that appeared to relate to a function or purpose (Deserialize.dll, SHCore1.dll, \u003ca href=\"https://www.virustotal.com/gui/file/93dd1202697dbaed9ef4f4707f2628212bf13aad096de29c14924b1dae1d6d5b\"\u003ePVCore1.dll\u003c/a\u003e, and SHCore2.dll). In March 2022, the names began to change more frequently to seemingly random names (e.g., BRIN.dll, UKRUSAIN.dll, KNIFALL.dll, NullSBAS.dll).\u003c/p\u003e\n\u003ch3\u003eConfiguration processing\u003c/h3\u003e\n\u003cp\u003eThe core processor identifies the following resources in the initial loader that are associated with the encrypted configuration:\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003eThe bitmap image resource(s) containing the encrypted configuration data\u003c/li\u003e\n    \u003cli\u003eThe binary resource specifying the total number of images to process\u003c/li\u003e\n    \u003cli\u003eThe resource folder containing these images and binary resources\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe names of these resources are calculated using the compile timestamp listed in the initial loader (which is not the file's actual compile timestamp) and two hard-coded values that represent an initialization value and the length of the resource name. The hard-coded initialization and name length values were consistent across all DarkTortilla samples analyzed by CTU researchers (see Table 1).\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003eInitial loader resource\u003c/th\u003e\n            \u003cth\u003eInitialization value\u003c/th\u003e\n            \u003cth\u003eResource name length value\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Resource folder\n            \u003c/td\u003e\n            \u003ctd\u003e\n            5\n            \u003c/td\u003e\n            \u003ctd\u003e\n            12\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Image count file\n            \u003c/td\u003e\n            \u003ctd\u003e\n            80\n            \u003c/td\u003e\n            \u003ctd\u003e\n            8\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Image file\n            \u003c/td\u003e\n            \u003ctd\u003e\n            20\n            \u003c/td\u003e\n            \u003ctd\u003e\n            8\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 1. Values used to derive initial loader resource names.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThese names are calculated via the following process:\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003eDivide the compile timestamp by \u0026lt;\u003cem\u003einitialization value\u003c/em\u003e\u0026gt;.\u003c/li\u003e\n    \u003cli\u003eRound the result using the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.math.round?view=net-6.0#system-math-round(system-decimal)#system-math-round(system-decimal)\"\u003eMath.Round()\u003c/a\u003e function.\u003c/li\u003e\n    \u003cli\u003ePass the result to the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.random\"\u003eRandom.Random()\u003c/a\u003e function as a seed value. By using a precalculated seed value, the malware author can generate a predictable 16-byte value.\u003c/li\u003e\n    \u003cli\u003eConvert the 16-byte value to a GUID using the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.guid\"\u003eGuid.Guid()\u003c/a\u003e function, which transposes the byte order.\u003c/li\u003e\n    \u003cli\u003eRemove dash characters (\u0026lsquo;-') added during the GUID conversion.\u003c/li\u003e\n    \u003cli\u003eTruncate the value to \u0026lt;\u003cem\u003eresource name length\u003c/em\u003e\u0026gt; characters.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eFor example, the following calculation generates the resource folder name of a \u003ca href=\"https://www.virustotal.com/gui/file/b3754c6ecc445e9a3b37c5ebe68adb9630ca4aa89a8e8515468f39ae8131f141\"\u003esample\u003c/a\u003e with a compile timestamp of \"Sun May 26 23:57:08 1985\" (integer: 486014228):\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003e486014228 / 5 = 97202845.6\u003c/li\u003e\n    \u003cli\u003eMath.Round(97202845.6) = 97202846\u003c/li\u003e\n    \u003cli\u003eRandom.Random(97202846) = d00bee25fa9dc9024fdf632727286708\u003c/li\u003e\n    \u003cli\u003eGuid.Guid(d00bee25fa9dc9024fdf632727286708) = 25ee0bd0-9dfa-02c9-4fdf-632727286708\u003c/li\u003e\n    \u003cli\u003eRemove dashes = 25ee0bd09dfa02c94fdf632727286708\u003c/li\u003e\n    \u003cli\u003eTruncate to 12 characters = 25ee0bd09dfa\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eApplying the same calculation to the other components reveals that the image count resource name for this sample is \"cd6935eb\" and the image base name is \"d390ea32\". The bitmap-formatted image names follow the pattern \u0026lt;\u003cem\u003eimage_base_name\u003c/em\u003e\u0026gt;\u0026lt;\u003cem\u003eimage_index\u003c/em\u003e\u0026gt;, where the \u0026lt;\u003cem\u003eimage_index\u003c/em\u003e\u0026gt; value ranges from 0 to the value specified in the image count resource. In this sample, the image count resource value is 0x2D4 (integer: 724), which means DarkTortilla attempts to process 725 bitmap-formatted images with the names d390ea32\u003cstrong\u003e0\u003c/strong\u003e, d390ea32\u003cstrong\u003e1\u003c/strong\u003e, d390ea32\u003cstrong\u003e2\u003c/strong\u003e, \u0026hellip;, d390ea32\u003cstrong\u003e723\u003c/strong\u003e, d390ea32\u003cstrong\u003e724\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eTo extract the encrypted configuration, the core processor iterates through each of the image resources in order, extracts the pixel data, and concatenates the pixel data into a byte array (see Figure 12).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"378\" width=\"783\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-12.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 12. Logic for extracting encrypted configuration from bitmap images. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe resulting byte array is decrypted using the \u003ca href=\"https://en.wikipedia.org/wiki/Advanced_Encryption_Standard\"\u003eRijndael\u003c/a\u003e cipher (also known as the Advanced Encryption Standard (AES)) with Electronic Code Book (ECB) block cipher mode and \u003ca href=\"https://en.wikipedia.org/wiki/Padding_(cryptography)#ISO_10126\"\u003eISO10126 padding\u003c/a\u003e configured. The ISO10126 \u003ca href=\"https://www.iso.org/standard/18114.html\"\u003estandard\u003c/a\u003e was withdrawn in 2007, so the use of this padding could indicate that DarkTortilla's origins date back to 2007 or earlier. The key used to decrypt this data is stored as the hard-coded integer array [81, 42, 59, 7, 27, 70, 83, 13, 71, 75, 17, 9, 39, 64, 3, 2] (see Figure 13).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"396\" width=\"800\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-13.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 13. Hard-coded key to decrypt DarkTortilla configuration. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eDarkTortilla parses the decrypted configuration data into a structure so that its elements can be easily referenced. Table 2 lists the potential configuration elements contained within DarkTortilla's decrypted configuration. Entries in \u003cstrong\u003ebold\u003c/strong\u003e indicate configuration elements that were consistently present in all samples analyzed by CTU researchers.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Key\u003c/th\u003e\n            \u003cth\u003e\n            Type\u003c/th\u003e\n            \u003cth\u003e\n            Description\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Installation%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eInstall DarkTortilla and implement persistence\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationReg%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Registry key used for persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationKey%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Registry value used for persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationDirectory%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Root install directory\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationFolder%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Subfolder name within the root install directory\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationFileName%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Filename for the initial loader executable within the root subfolder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %StartupFolder%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            bool\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Enable Startup folder persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %Hidden%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            bool\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Enable \"Hidden\" registry persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %HiddenReg%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \"Hidden\" registry key used for persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %HiddenKey%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \"Hidden\" registry value used for persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Message%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eDisplay fake message box\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageIcon%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Fake message box icon ID\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageButton%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Fake message box button ID\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageTitle%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Fake message box title\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageBody%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Fake message box message\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageRepetition%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            bool\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Display fake message box even if installed\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%VM%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ePerform anti-virtual machine checks\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%SB%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ePerform anti-sandbox checks\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%InjectionPersist%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eEnable anti-tamper control for running processes\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%StartupPersist%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eEnable anti-tamper control for startup persistence\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Melt%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eMigrate initial loader execution to the Windows %TEMP% directory\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MeltName%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Filename for the initial loader executable within the Windows %TEMP% directory\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %WatchDogName%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Filename for the anti-tamper WatchDog executable\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %WatchDogBytes%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            byte[]\n            \u003c/td\u003e\n            \u003ctd\u003e\n            WatchDog byte array\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Compress%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eIndicates if payloads are zlib-compressed\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Delay%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eint\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eNumber of seconds to delay execution within the core processor\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%HostIndex%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eint\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eID of the target subprocess name to use for main/addon payload injection\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%MainFile%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebyte[]\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eMain payload byte array\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%FilesNum%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eint\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eNumber of addon packages to process\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.D\n            \u003c/td\u003e\n            \u003ctd\u003e\n            byte[]\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (data): Payload byte array\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.N\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (name): Filename\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.P\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (path): Target install folder (special folder ID)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.F\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (folder): Target install subfolder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.O\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (operation): Execution type (disk, memory, none)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.T\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (time): Execution delay (seconds)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.R\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (run): Payload execution criterion\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 2. DarkTortilla configuration elements. Bold text indicates elements that appear in all analyzed samples.\u003c/em\u003e\u003c/p\u003e\n\u003ch3\u003eFake message display\u003c/h3\u003e\n\u003cp\u003eDarkTortilla can be configured to display a message box when executed. The threat actor can customize message box characteristics such as the display message, message box title, and the \u003ca href=\"https://docs.microsoft.com/en-us/office/vba/language/reference/user-interface-help/msgbox-constants\"\u003eicon and button configuration\u003c/a\u003e. Threat actors use fake message boxes to make victims think that execution failed or that a legitimate application is loading and installing. Table 3 lists the configuration elements and values in one DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/083acce46cb8cf35e37c778d1f4aee6814bca72d2874b793a47f9823f51df0fe/\"\u003esample\u003c/a\u003e.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Configuration element\u003c/th\u003e\n            \u003cth\u003e\n            Assigned value as it appears in the configuration\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %Message%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageIcon%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            16\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageButton%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            0\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageTitle%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            .Net Framework Initialization Error\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageBody%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            To run this application, you first must install one of the following version of the .Net Framework:\\r\\n.Net Framework, Version = 4.8.0\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageRepetition%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 3. Fake message box-related configuration elements.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eFigure 14 shows the message box for the DarkTortilla sample configured with the values in Table 3. The %MessageRepetition% configuration element controls whether the message box will continue to be displayed upon execution after DarkTortilla is installed and persistent on the compromised system.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"185\" width=\"464\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-14.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 14. Fake message box. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch3\u003e\"Melt\" execution migration\u003c/h3\u003e\n\u003cp\u003eIf the %Melt% configuration element is set to true, the core processor moves the initial loader executable to the Window's %TEMP% directory. It uses the %MeltName% configuration element value as the executable filename (e.g., java.exe, PDF.exe, cookies.exe). The core processor runs the new executable and then terminates the original initial loader executable. However, the %TEMP% directory may not be the final destination for the initial loader. The executable could migrate again if the %Installation% configuration element is set to true.\u003c/p\u003e\n\u003ch3\u003eInstallation\u003c/h3\u003e\n\u003cp\u003eThe %Installation% configuration element controls whether DarkTortilla installs itself on a system. If set to true, the core processor moves the current DarkTortilla executable into the directory specified by the configuration. Table 4 lists the values stored in one DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/53b3b37b7d1e40c80fcda2c424cd837379ac2ce93023de6c22ba3e2d94679671\"\u003esample\u003c/a\u003e.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Configuration element\u003c/th\u003e\n            \u003cth\u003e\n            Value\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationDirectory%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            38\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationFolder%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            WindowsPowerShell\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationFileName%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            PowerShellInfo.exe\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 4. Installation configuration elements with example values.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe integer value assigned to the %InstallationDirectory% configuration element represents a \u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/shell/csidl\"\u003eCSIDL\u003c/a\u003e value associated with a special folder on the system. In Table 4, the value 38 corresponds to the Windows \u003ca href=\"https://www.magnumdb.com/search?q=CSIDL_PROGRAM_FILES\"\u003eProgram Files\u003c/a\u003e directory. Based on this configuration, the full install path and filename for this DarkTortilla sample is \"C:\\Program Files\\WindowsPowerShell\\PowerShellInfo.exe\".\u003c/p\u003e\n\u003cp\u003eTo install, the core processor terminates the currently running DarkTortilla executable. It copies the executable to the configured installation path and filename, and then executes the installed executable via \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.process.start?view=net-6.0\"\u003eProcess.Start()\u003c/a\u003e.\u003c/p\u003e\n\u003ch3\u003ePersistence\u003c/h3\u003e\n\u003cp\u003ePersistence is controlled by the %Installation% configuration element in combination with the %Hidden% and %StartupFolder% configuration elements. DarkTortilla uses the logic in Table 5 to determine the persistence type.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            %Hidden%\u003c/th\u003e\n            \u003cth\u003e\n            %StartupFolder%\u003c/th\u003e\n            \u003cth\u003e\n            Persistence type\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Use registry HKCU Run key\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Windows startup folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Windows startup folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Use registry HKCU Winlogon key\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 5. Configuration elements determining the persistence type.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eA bug in the code causes the %StartupFolder% logic to override the %Hidden% logic if both configuration elements are set to true. The malware author erroneously used an \"if\" statement instead of \"else if\" in the logic setting the persistence type (see Figure 15).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"313\" width=\"800\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-15.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 15. Error in persistence code. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eFor Windows startup folder persistence, the core processor uses the \u003ca href=\"https://docs.microsoft.com/en-us/troubleshoot/windows-client/admin-development/create-desktop-shortcut-with-wsh\"\u003eWshShortcut\u003c/a\u003e COM object to create a .lnk shortcut file in the Windows startup folder. This file points to the configured installation path and filename of DarkTortilla's initial loader executable (see Figure 16).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"196\" width=\"685\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-16.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 16. COM object that drops shortcut file in Windows startup folder for persistence. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eDarkTortilla features standard and hidden techniques for implementing persistence via the Windows registry. Both options implement persistence in the HKEY_CURRENT_USER (HKCU) hive as a hard-coded value in the core processor code. This persistence results in the installed DarkTortilla initial loader executable being run every time the user logs in.\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003eFor standard registry persistence, the core processor uses the %InstallationReg% and %InstallationKey% values to set the target key/value combination. In every sample analyzed by CTU researchers where standard persistence was configured, the %InstallationReg% value was \"Software\\Microsoft\\Windows\\CurrentVersion\\Run\". The value stored in %InstallationKey% varied across samples (e.g., \"Updates\", \"svchost\", \"Runtime Broker\").\u003c/li\u003e\n    \u003cbr /\u003e\n    \u003cli\u003eFor hidden registry persistence, the core processor uses the %HiddenReg% and %HiddenKey% values to set the target key/value combination. In every sample analyzed by CTU researchers where hidden persistence was configured, the %InstallationReg% value was \"Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" and the value stored in %HiddenKey% was \"Shell\". Prior to setting the hidden persistence registry value, DarkTortilla's core processor prepends the installed initial loader executable path with the Windows shell value retrieved from the HKEY_LOCAL_MACHINE (HKLM) hive. This value is typically \"explorer.exe\", resulting in \"explorer.exe,\u0026lt;\u003cem\u003einstalled_darktortilla_exe_path\u003c/em\u003e\u0026gt;\". For example, if the configured install path and executable name for a DarkTortilla sample is \"C:\\Program Files\\WindowsPowerShell\\PowerShellInfo.exe\", then the HKCU Winlogon\\Shell registry entry is \"explorer.exe,C:\\Program Files\\WindowsPowerShell\\PowerShellInfo.exe\". To create these registry values, the core processor executes the following command via Process.Start():\u003cbr /\u003e\n    \u003cbr /\u003e\n    \u003cpre\u003e\tcmd.exe /c REG ADD \"HKCU\\\u003cem\u003e\u0026lt;configured_reg_key\u0026gt;\u003c/em\u003e\" /f /v \"\u003cem\u003e\u0026lt;configured_reg_val\u0026gt;\u003c/em\u003e\" /t\n\tREG_SZ /d \"\u003cem\u003e\u0026lt;installed_darktortilla_exe_path\u0026gt;\u003c/em\u003e\"\n\t\u003c/pre\u003e\n    \u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eRunPE process injection\u003c/h3\u003e\n\u003cp\u003eDarkTortilla can execute its payloads using process injection. With this method, the payload resides only in memory and never accesses the filesystem. The %HostIndex% configuration element defines which legitimate process to target for process injection (see Table 6).\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            %HostIndex% value\u003c/th\u003e\n            \u003cth\u003e\n            Corresponding target process\u003c/th\u003e\n            \u003cth\u003e\n            Source directory\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0 \u003cem\u003e(or any numeric value that is not 1-6)\u003c/em\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Initial loader executable's name\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u0026nbsp;\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            1\n            \u003c/td\u003e\n            \u003ctd\u003e\n            AppLaunch.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            2\n            \u003c/td\u003e\n            \u003ctd\u003e\n            svchost.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            System32 folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            3\n            \u003c/td\u003e\n            \u003ctd\u003e\n            RegAsm.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            4\n            \u003c/td\u003e\n            \u003ctd\u003e\n            InstallUtil.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5\n            \u003c/td\u003e\n            \u003ctd\u003e\n            mscorsvw.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            6\n            \u003c/td\u003e\n            \u003ctd\u003e\n            AddInProcess32.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 6. %HostIndex% values and corresponding target processes used for payload injection.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003ePrior to setting the target process name, the core processor checks for active processes named \"avp\". The avp.exe process is part of the Kaspersky Anti-Virus suite. If the core processor detects this process, it overrides the %HostIndex% value and sets the target process name to the name of the initial loader executable. When the %HostIndex% value is 1-6, the core processor attempts to copy the legitimate target executable file to the Windows %TEMP% directory.\u003c/p\u003e\n\u003cp\u003eDarkTortilla uses a .NET-based DLL named \"RunPe6\" for process injection. This DLL is embedded within the core processor as an encoded byte array (see Figure 17).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"403\" width=\"519\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-17.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 17. Encoded RunPe6 DLL stored as byte array within DarkTortilla core processor. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eTo decode each byte, the core processor uses the following equation with \u003cem\u003e\u0026lt;xor_key\u0026gt;\u003c/em\u003e as the hard-coded integer array [45, 89, 125, 69, 250, 222, 111] and \u003cem\u003e\u0026lt;seed\u0026gt;\u003c/em\u003e as the hard-coded integer 99:\u003c/p\u003e\n\u003cpre\u003edecoded_byte = encoded_byte ^ (\u003cem\u003e\u0026lt;xor_key\u0026gt;\u003c/em\u003e[(idx * \u003cem\u003e\u0026lt;seed\u0026gt;)\u003c/em\u003e % xor_key.Length])\u003c/pre\u003e\n\u003cbr /\u003e\n\u003cp\u003eThe core processor loads RunPe6 and calls its \u0026lsquo;Runn' function to execute the malicious payload within the context of the configured target subprocess. The core processor does not directly reference this function. Rather, it references the index values for the target class (18) and function (0). Figure 18 displays PowerShell code developed by CTU researchers to replicate the core processor's target function identification logic.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"167\" width=\"561\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-18.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 18. Custom PowerShell script to identify RunPe6 function used for payload process injection. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch3\u003eAddon package processing\u003c/h3\u003e\n\u003cp\u003eDarkTortilla can be configured with zero or more payloads known as addon packages. These addons are in addition to the main payload that DarkTortilla is tasked with delivering. Observed addons include benign decoy documents, legitimate executables, keyloggers, clipboard stealers, cryptocurrency miners, and additional DarkTortilla payloads. Each addon package possesses a set of configuration elements composed of a static \"F\" character, an integer \"{0}\" that represents the index value indicating the position of the addon in the package array, and a character representing a particular property associated with the package.\u003c/p\u003e\n\u003cp\u003eThe %FilesNum% configuration element defines the number of addon packages to process. For example, if the %FilesNum% value is 3, the configuration elements are F.0.\u003cem\u003e\u0026lt;addon property\u0026gt;\u003c/em\u003e, F.1.\u003cem\u003e\u0026lt;addon property\u0026gt;\u003c/em\u003e, and F.2.\u003cem\u003e\u0026lt;addon property\u0026gt;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eThe F.{0}.D (data) configuration element contains the addon package payload binary data. The core processor checks the %Compress% configuration element to determine if the stored data is compressed. If the element is set to true, the core processor decompresses the data before processing it.\u003c/p\u003e\n\u003cp\u003eThe core processor next determines if it should process the addon package by inspecting the initial loader's installation state and the addon package's F.{0}.R (run) value. Table 7 lists the criteria and their result.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Initial loader running from install directory\u003c/th\u003e\n            \u003cth\u003e\n            F.{0}.R (run) value\u003c/th\u003e\n            \u003cth\u003e\n            Process addon package?\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Yes\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            No\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            No\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Yes\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 7. Criteria for processing addon package.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eIf configured to process the addon package, the core processor inspects the F.{0}.O (operation) configuration element value to determine how to execute its payload. This value can be any integer but is typically 0, 1, or 2. If the value is set to 0 or any value other than 1 or 2, the core processor saves the payload to disk but does not execute it. If the value is 1, the core processor saves the payload to disk and executes it. If the value is 2, the core processor executes the payload in memory via the same RunPE process injection technique and target process it uses for the main payload.\u003c/p\u003e\n\u003cp\u003eIf the payload is saved to disk, the location is specified by the addon path (F.{0}.P), subfolder (F.{0}.F), and filename (F.{0}.N) configuration elements. The F.{0}.P integer value represents a CSIDL value associated with a special folder on the system. For example, the value 2 corresponds to the Windows Start Menu/Programs folder. The full path of an analyzed \u003ca href=\"https://www.virustotal.com/gui/file/5be86cfca25e295f88b5aab42a6f604d2f1bb97f3c73b01df664c137908e2ec4\"\u003esample\u003c/a\u003e containing a F.{0}.P value of 2, an empty string for F.{0}.F, and a value of sertif.exe for F.{0}.N is \"C:\\Users\\\u003cem\u003e\u0026lt;username\u0026gt;\u003c/em\u003e\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\sertif.exe\".\u003c/p\u003e\n\u003ch3\u003eMain payload processing\u003c/h3\u003e\n\u003cp\u003eAfter processing addon packages and installing the initial loader executable if appropriate, DarkTortilla processes its main payload. This main payload is typically a commodity information stealer or remote access trojan (RAT). DarkTortilla stores the binary data for the main payload in the %MainFile% configuration element. Processing this payload consists of two steps:\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003eThe core processor queries the %Compress% configuration element to determine if the binary data in the %MainFile% configuration element is compressed. If set to true, the core processor decompresses the data.\u003c/li\u003e\n    \u003cbr /\u003e\n    \u003cli\u003eThe core processor executes the main payload via RunPE process injection. Unlike the addon payloads, there is no option to save the main payload to the filesystem. Therefore, the main payload resides only in memory. The target process used for injection is the same as the addon packages and is defined by the %HostIndex% configuration element.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003eAnti-analysis controls\u003c/h3\u003e\n\u003cp\u003eDarkTortilla core processor samples analyzed by CTU researchers were obfuscated using the \u003ca href=\"https://yck1509.github.io/ConfuserEx/\"\u003eConfuserEx\u003c/a\u003e code obfuscator. In addition to the obfuscator altering namespace, class, function, and property names, CTU researchers identified multiple samples where it injected specially crafted code that did not affect execution but inhibited decompilation by tools such as dnSpy (see Figure 19). Bypassing this anti-analysis control requires removing the code that caused the decompiler to break, identifying another sample that does not implement this control, or piecing together analysis from multiple samples to understand the code.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"497\" width=\"800\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-19.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 19. Broken dnSpy decompilation of DarkTortilla core processor. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe core processor includes code that that detects profilers and debuggers, but these anti-analysis controls are not called. To detect profiling, the code verifies if the \u003ca href=\"https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ee471451(v=vs.100)?redirectedfrom=MSDN\"\u003eCOR_ENABLE_PROFILING\u003c/a\u003e environment variable is present and sets to the value of 1. To detect debuggers, the code spawns a thread (see Figure 20) that continuously checks the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.debugger.isattached?view=net-6.0\"\u003eDebugger.IsAttached\u003c/a\u003e property and the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.debugger.islogging?view=net-6.0\"\u003eDebugger.IsLogging\u003c/a\u003e method. If the core processor identifies a debugger or if the thread performing the checks is terminated, the code terminates the initial loader process. It is unclear if this code was added by ConfuserEx or the malware author.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"475\" width=\"585\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-20.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 20. Debugger detection performed by DarkTortilla core processor. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe core processor implements string encoding to obscure important strings such as the configuration keys. Figure 21 shows a code excerpt that passes the string length (17), character index array ([26,8,13,18,19,0,11,11,0,19,8,14,13,17,4,6,26]), and capital letter index array ([8,17]) to the decode function.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"79\" width=\"522\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-21.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 21. DarkTortilla core processor string obfuscation example. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThis function decodes the string by iterating through each value in the character index array and retrieving the corresponding character at the specified index in a hard-coded character array (see Figure 22).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"105\" width=\"385\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-22.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 22. Character array used by string decoding logic. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eFigure 21 shows that the example's first three values of the character index array passed to the decode function are 26, 8, and 13. These values correspond to the characters \"%\", \"i\", and \"n\" in the hard-coded character array shown in Figure 22. The values passed in the capital letter index array (8, 17) indicate which characters should be capitalized (\"I\" and \"R\" in this example). Processing the character index array results in the decoded string \"%InstallationReg%\".\u003c/p\u003e\n\u003cp\u003eThe %VM% configuration element enables DarkTortilla's anti-virtual machine (anti-VM) controls. If set to true, the core processor obtains information about the system by querying the following Windows Management Instrumentation (WMI) objects:\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-computersystem\"\u003eWin32_ComputerSystem\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-bios\"\u003eWin32_BIOS\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-motherboarddevice\"\u003eWin32_MotherboardDevice\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-pnpentity\"\u003eWin32_PnPEntity\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-diskdrive\"\u003eWin32_DiskDrive\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe core processor also retrieves information about the system's running processes and services. It then inspects this data for strings associated with Hyper-V, QEMU, Virtual PC, VirtualBox, and VMware. If any of the case-insensitive data matches the criteria in Table 8, the core processor terminates the initial loader process.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Targeted technology\n            \u003c/th\u003e\n            \u003cth\u003e\n            Inspected entity\n            \u003c/th\u003e\n            \u003cth\u003e\n            Inspection logic\n            \u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Hyper-V\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Caption contains \"virtual\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Hyper-V\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_ComputerSystem\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Manufacturer contains \"microsoft\" and Model contains \"virtual\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            QEMU\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name contains \"qemu\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Virtual PC\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Process\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Process list contains \"vmusrvc\" or both \"vpcmap\" and \"vmsrvc\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VirtualBox\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Model contains \"vbox\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VirtualBox\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Process\n            \u003c/td\u003e\n            \u003ctd\u003e\n            ProcessName contains \"vboxservice\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name contains \"vmware\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Model contains \"vmware\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_ComputerSystem\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Manufacturer contains \"vmware\" and Model contains \"virtual\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_BIOS\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Serial number contains \"vmware\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name equals \"vmware pointing device\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name contains \"vmware sata\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name equals \"vmware usb pointing device\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name equals \"vmware vmci bus device\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name equals \"vmware virtual s scsi disk device\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name starts with \"vmware svga\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Service\n            \u003c/td\u003e\n            \u003ctd\u003e\n            ServiceImagePath contains \"vmware\" and ServiceName equals \"vmtools\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Service\n            \u003c/td\u003e\n            \u003ctd\u003e\n            ServiceImagePath contains \"vmware\" and ServiceName equals \"tpvcgateway\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Service\n            \u003c/td\u003e\n            \u003ctd\u003e\n            ServiceImagePath contains \"vmware\" and ServiceName equals \"tpautoconnsvc\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 8. DarkTortilla core processor anti-VM detections.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe %SB% configuration element enables DarkTortilla's anti-sandbox control. This control only detects the \u003ca href=\"https://sandboxie-plus.com/Sandboxie/\"\u003eSandboxie\u003c/a\u003e sandbox. The core processor terminates the initial loader process if it detects a running process named \"sandboxierpcss\" in the current session.\u003c/p\u003e\n\u003ch3\u003eAnti-tamper controls\u003c/h3\u003e\n\u003cp\u003eDarkTortilla's anti-tamper controls are the last step in its execution chain and occur after the main payload is executed. The four controls ensure that nothing interferes with DarkTortilla's execution of its critical components.\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003e\n    \u003cp\u003eThe first anti-tamper control is employed by the core processor and ensures that the injected subprocess running the main payload is immediately rerun if terminated. The %InjectionPersist% configuration element regulates this control. If set to true, the core processor starts a thread that monitors the state of the injected subprocess. If the subprocess is terminated, this anti-tamper control automatically respawns the configured target subprocess, re-injects the main payload, and executes it within the context of the subprocess.\u003c/p\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\n    \u003cp\u003eThe second anti-tamper control ensures that the initial loader executable is immediately rerun if terminated. DarkTortilla implements this functionality with a secondary .NET-based executable that it refers to as \"WatchDog\". The %InjectionPersist% configuration element regulates this control. If set to true, the core processor drops the WatchDog executable and its configuration file to the Windows %TEMP% directory. It then executes the WatchDog executable, which monitors the initial loader process.\u003c/p\u003e\n    \u003cp\u003eThe WatchDog executable bytes are stored in the DarkTortilla %WatchDogBytes% configuration element, and the filename is stored in %WatchDogName%. Prior to processing, the core processor decompresses the WatchDog executable's bytes if the %Compress% configuration element is set to true. Every \u003ca href=\"https://www.virustotal.com/gui/file/2d0dc6216f613ac7551a7e70a798c22aee8eb9819428b1357e2b8c73bef905ad\"\u003eWatchDog executable\u003c/a\u003e dropped by DarkTortilla was identical:\u003c/p\u003e\n    \u003cul\u003e\n        \u003cli style=\"list-style: disc;\"\u003eMD5 hash: 0e362e7005823d0bec3719b902ed6d62\u003c/li\u003e\n        \u003cli style=\"list-style: disc;\"\u003eSHA1 hash: 590d860b909804349e0cdc2f1662b37bd62f7463\u003c/li\u003e\n        \u003cli style=\"list-style: disc;\"\u003eSHA256 hash: 2d0dc6216f613ac7551a7e70a798c22aee8eb9819428b1357e2b8c73bef905ad\u003c/li\u003e\n    \u003c/ul\u003e\n\n    \u003cp\u003eIf an executable with the configured WatchDog name already exists in the Windows %TEMP% directory, the core processor removes the existing executable's \u003ca href=\"https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-fscc/6e3f7352-d11c-4d76-8c39-2516a9df36e8\"\u003eZone.Identifier\u003c/a\u003e Alternate Data Stream (ADS), which strips the executable of any existing \u003ca href=\"https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/ms537183(v=vs.85)?redirectedfrom=MSDN\"\u003eURL security zones\u003c/a\u003e. It then overwrites the existing executable with the new WatchDog executable.\u003c/p\u003e\n    \u003cp\u003eThe WatchDog configuration file dropped to the filesystem shares the same name as the WatchDog executable but uses a .txt file extension. For example, the configuration filename for \"WatchDog.exe\" is \"WatchDog.txt\". This configuration file contains three lines representing the following values:\u003c/p\u003e\n    \u003cul\u003e\n        \u003cli style=\"list-style: disc;\"\u003eThe process ID of the initial loader executable\u003c/li\u003e\n        \u003cli style=\"list-style: disc;\"\u003eThe path and filename of the initial loader executable\u003c/li\u003e\n        \u003cli style=\"list-style: disc;\"\u003eThe process ID for the WatchDog executable\u003c/li\u003e\n    \u003c/ul\u003e\n\n    \u003cp\u003eIf the initial loader process terminates, the WatchDog process reruns it and refreshes the contents of the WatchDog configuration text file with the new process ID information.\u003c/p\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\n    \u003cp\u003eThe third anti-tamper control is employed by the core processor and ensures that the dropped WatchDog executable continues to execute. The core processor retrieves the WatchDog executable process ID from the WatchDog configuration file once per second and verifies that the corresponding process is running. If the WatchDog process terminates, the core processor breaks the loop, drops a new WatchDog configuration file, and reruns the WatchDog executable.\u003c/p\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\n    \u003cp\u003eThe fourth anti-tamper control is employed by the core processor and maintains persistence for the initial loader. The %StartupPersist% configuration element regulates this control. If set to true, the core processor starts a thread that sets persistence every 30 seconds using the persistence type defined in the DarkTortilla configuration. The control does not contain validation logic to check the persistence status, so it repeats the process indefinitely.\u003c/p\u003e\n    \u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3\u003eDelayed execution\u003c/h3\u003e\n\u003cp\u003eThe core processor implements the kernel32.dll Sleep function to delay execution at the following stages of the process. The length of delay is typically controlled by the value in the %Delay% configuration element. CTU researchers observed values ranging from 0 seconds to 300 seconds.\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003ePrior to implementing persistence, the core processor sleeps for the number of seconds specified by the %Delay% configuration element.\u003c/li\u003e\n    \u003cli\u003ePrior to processing addon packages, the core processor sleeps for the number of seconds specified by the %Delay% configuration element.\u003c/li\u003e\n    \u003cli\u003eThe core processor sleeps for a hard-coded 5 seconds after copying the source executable to the install directory but before running the executable.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe number of delays increases if the %Melt% and %Installation% configuration elements are set to true, as the delays are processed each time the executable migrates. These delays can impede detection in sandbox environments if they exceed the maximum wait time.\u003c/p\u003e\n\u003ch2\u003ePossible malware connections\u003c/h2\u003e\n\u003cp\u003eDarkTortilla code shares similarities to other malware. For example, payload compression, junk code inclusion, and payload execution via \u003ca href=\"https://github.com/malwares/Crypter/blob/master/%5BC%23%5D%20The%20RATs%20Crew%20Crypter/Form1.cs#L161-L163\"\u003eRunPe6\u003c/a\u003e are also features of a RATs Crew crypter last updated in 2016. DarkTortilla could represent an evolution of that crypter. Additionally, the Gameloader malware uses similar malspam lures and archive files as DarkTortilla. It also leverages .NET resources to store encoded DLLs and encrypted bitmap images and delivers similar commodity malware payloads. However, there is insufficient evidence as of this publication to definitively link these malware families or threat actors to DarkTortilla.\u003c/p\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eResearchers often overlook DarkTortilla and focus on its main payload. However, DarkTortilla is capable of evading detection, is highly configurable, and delivers a wide range of popular and effective malware. Its capabilities and prevalence make it a formidable threat.\u003c/p\u003e\n\u003ch2\u003eThreat indicators\u003c/h2\u003e\n\u003cp\u003eThe threat indicators in Table 9 can be used to detect activity related to DarkTortilla. The URL may contain malicious content, so consider the risks before opening it in a browser.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Indicator\n            \u003c/th\u003e\n            \u003cth\u003e\n            Type\n            \u003c/th\u003e\n            \u003cth\u003e\n            Context\n            \u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            59295e810bbdbfd64b8c41316ea13cae\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious spam delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            18391a58ee25a5cb8dfbf4d48517b5b0\u003cbr /\u003e\n            c66c5ae6\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious spam delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            981aa83b2d33cca994021197237ac5ee\u003cbr /\u003e\n            3ad3402f7d25f04f4e76985f4ec8744c\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious spam delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            84872b60072011eab8940f3b49bdb582\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            3da0f44d45a1d6676d52ce691d2f6d75\u003cbr /\u003e\n            4eb3097e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5e03556be992d23088a3c49d24c45b1c\u003cbr /\u003e\n            21cd275bffb4e536348e8128d50374b6\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            2d74df3ce221f6ff48d20bac158a3e78\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious document delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0563e691801251cdfd363eee31858ead\u003cbr /\u003e\n            5ee3928b\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious document delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            4f15b28c91fa0e8d0dd9e86481bad04f\u003cbr /\u003e\n            a34fcaf564d08de7c4c0c513fc6e122d\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious document delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            827258f907c5087f498c413d28e2203e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5e0cb6076002b11a39636e07a217b493\u003cbr /\u003e\n            835e5bce\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            55d7d9bd9d4a511417033b6c14ce93f9\u003cbr /\u003e\n            62d6a6e6c6414f0cb7e455baee1d3ab7\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            c37aae0ff565a2e44f144f837b750279\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            dde386911b091e894746b0f12d88a1fd\u003cbr /\u003e\n            18761fb9\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            a0b96236bfd79d2ebeadb8e3deb9448a\u003cbr /\u003e\n            f3ec8edd1ea9672b7ad4793934bb4c47\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            93fe6600c51014d7d6c2afedf8398f92\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            8f7340704745f3d53b284c101e93c42f\u003cbr /\u003e\n            8d4c2adc\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            45ef054bca2ae4d67e6623bf28ff75e5\u003cbr /\u003e\n            d178924602674c654e1b569aa74601cd\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            6e91ad0972e104a277505104abe39d1e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            261d699c3bb1a0042b88a45ed340f2d8\u003cbr /\u003e\n            6149464f\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            b3754c6ecc445e9a3b37c5ebe68adb96\u003cbr /\u003e\n            30ca4aa89a8e8515468f39ae8131f141\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            cd49f7c3c4e82dee128eedea9879bc33\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            619bf90a8ea219e34bf57dda1a322914\u003cbr /\u003e\n            b9fa1c81\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0a5dc3b6669cf31e8536c59fe1315918\u003cbr /\u003e\n            eb4ecfd87998445e2eeb8fed64bd2f2c\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            851816aa8cf45ba769f0d9420acfb3e5\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            4178d5efa388caf2d0ffd4539cf285b1\u003cbr /\u003e\n            de5ffab6\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            083acce46cb8cf35e37c778d1f4aee68\u003cbr /\u003e\n            14bca72d2874b793a47f9823f51df0fe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            f44695a8febb2a35576a59fa984629d2\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            37ec57e5da46dc1990941a1bb3ffab9e\u003cbr /\u003e\n            74db346a\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            53b3b37b7d1e40c80fcda2c424cd8373\u003cbr /\u003e\n            79ac2ce93023de6c22ba3e2d94679671\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            8d8c551dd572a1dc158de239b37eaa9a\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            6d4b4bcd107b09af37996c73a6448379\u003cbr /\u003e\n            a31aaac4\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5be86cfca25e295f88b5aab42a6f604d\u003cbr /\u003e\n            2f1bb97f3c73b01df664c137908e2ec4\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0f89a2015ed9c1be5522e27c00276e52\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla core processor (PVCore1)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5ad5b35f6cc093067c6f219f2d2107f4\u003cbr /\u003e\n            4248c5bb\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla core processor (PVCore1)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            93dd1202697dbaed9ef4f4707f262821\u003cbr /\u003e\n            2bf13aad096de29c14924b1dae1d6d5b\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla core processor (PVCore1)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0e362e7005823d0bec3719b902ed6d62\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla watchdog executable\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            590d860b909804349e0cdc2f1662b37b\u003cbr /\u003e\n            d62f7463\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla watchdog executable\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            2d0dc6216f613ac7551a7e70a798c22a\u003cbr /\u003e\n            ee8eb9819428b1357e2b8c73bef905ad\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla watchdog executable\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            https://pastebin.pl/view/raw/60b6b03b\n            \u003c/td\u003e\n            \u003ctd\u003e\n            URL\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla encoded core processor download\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 9. Indicators for this threat.\u003c/em\u003e\u003c/p\u003e\n\u003ch2\u003eReferences\u003c/h2\u003e\n\u003cp\u003eArntz, Pieter. \"Explained: Packer, Crypter, and Protector.\" Malwarebytes Labs. March 27, 2017. \u003ca href=\"https://blog.malwarebytes.com/cybercrime/malware/2017/03/explained-packer-crypter-and-protector/\"\u003ehttps://blog.malwarebytes.com/cybercrime/malware/2017/03/explained-packer-crypter-and-protector/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eHasherezade. \"Rainbows, Steganography and Malware in a new .NET cryptor.\" Malwarebytes Labs. March 30, 2016. \u003ca href=\"https://blog.malwarebytes.com/threat-analysis/2015/08/rainbows-steganography-and-malware-in-a-new-net-cryptor/\"\u003ehttps://blog.malwarebytes.com/threat-analysis/2015/08/rainbows-steganography-and-malware-in-a-new-net-cryptor/\u003c/a\u003e \u003c/p\u003e\n\u003cp\u003e\"RATs Crew.\" Hack Forums. June 21, 2021. \u003ca href=\"https://wiki.hackforums.net/RATs_Crew\"\u003ehttps://wiki.hackforums.net/RATs_Crew\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eGoSecure Titan Labs. \"New Malware \u0026lsquo;Gameloader' in Discord Malspam Campaign.\" GoSecure. November 2, 2021. \u003ca href=\"https://www.gosecure.net/blog/2021/11/02/new-malware-gameloader-in-discord-malspam-campaign-identified-by-gosecure-titan-labs/\"\u003ehttps://www.gosecure.net/blog/2021/11/02/new-malware-gameloader-in-discord-malspam-campaign-identified-by-gosecure-titan-labs/\u003c/a\u003e\u003c/p\u003e"},"author":[{"id":"d143bf9c-2048-4f78-a59f-64dbcba7f3dc","url":"http://uswest-www.secureworks.com/content/people/counter-threat-unit-research-team","name":"Counter Threat Unit Research Team","displayName":"Counter Threat Unit Research Team","fields":{"lastName":{"value":" "},"bio":{"value":"Secureworks Counter Threat Unit™ (CTU) researchers frequently serve as expert resources for the media, publish technical analyses for the security community, and speak about emerging threats at security conferences. Leveraging Secureworks’ advanced security technologies and a network of industry contacts, the CTU™ research team tracks threat actors and analyzes anomalous activity, uncovering new attack techniques and threats. This process enables CTU researchers to identify threats as they emerge and develop countermeasures that protect customers before damage can occur."},"firstName":{"value":"Counter Threat Unit Research Team"},"metaTitle":{"value":"Counter Threat Unit Research Team | Secureworks"},"noFollow":{"value":false},"excludeFromSearch":{"value":false},"noIndex":{"value":false},"openGraphTitle":{"value":"Counter Threat Unit Research Team | Secureworks"},"openGraphSiteName":{"value":"Secureworks"},"twitterCardType":{"id":"32f6a4e4-93dd-4a9c-aa60-cdedb0bedabb","url":"/sitecore/system/settings/feature/experience-accelerator/sitemetadata/enums/twitter-card-types/summary-card-with-large-image","name":"Summary Card with Large Image","displayName":"Summary Card with Large Image","fields":{"value":{"value":"summary_large_image"}}}}}],"publishedDate":{"value":"2022-08-17T02:00:00Z"},"lastUpdatedDate":{"value":"0001-01-01T00:00:00Z"},"displayDate":{"value":"0001-01-01T00:00:00Z"},"customTags":[{"id":"36eb03d6-7645-45a6-9715-b8c452d6a6e8","url":"http://cd/sitecore/content/shared/taxonomy/content-type/content-type---threat-analysis","name":"Content Type - Threat Analysis","displayName":"Content Type - Threat Analysis","fields":{"value":{"value":"Threat Analysis"}}},{"id":"0755cbd4-295d-4f10-8d4f-ce30adb25dba","url":"http://cd/sitecore/content/shared/taxonomy/topic/threat-intelligence","name":"Threat Intelligence","displayName":"Topic - Threat Intelligence","fields":{"value":{"value":"Threat Intelligence"}}},{"id":"d591aaba-1816-4bec-8a75-7388c3adb175","url":"http://cd/sitecore/content/shared/taxonomy/service/threat-hunting-assessment","name":"Threat Hunting Assessment","displayName":"Service - Secureworks Threat Hunting Assessment","fields":{"value":{"value":"Threat Hunting Assessment"}}},{"id":"4657b998-5773-410b-84b4-ab8bffb36f49","url":"http://cd/sitecore/content/shared/taxonomy/content-type/content-type---research","name":"Content Type - Research","displayName":"Content Type - Research","fields":{"value":{"value":"Research"}}}],"pageLocation":{"id":"2e57e396-bd9e-4829-8646-55dd117e548f","url":"/sitecore/content/shared/locations/research","name":"research","displayName":"/research","fields":{"value":{"value":"research"}}},"pageDesign":{"id":"2b9967b1-47cf-4c13-a2ea-6ee507433909","url":"/presentation/page-designs/research-article","name":"Research Article","displayName":"Research Article","fields":{"partialDesigns":{"value":"{5A1F0357-FC36-46A7-8236-A69E0E353F4A}|{2B412C03-2AF5-4F68-B8A4-4921D29B5DB4}|{ED6F2B34-AF34-4648-A828-ECBF550D950A}"}}},"openGraphTitle":{"value":"DarkTortilla Malware Analysis"},"openGraphDescription":{"value":"Learn how Secureworks CTU researchers have identified DarkTortilla samples delivering targeted malicious payloads, benign decoy documents, and executables."},"openGraphImageUrl":{"value":{"src":"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/darktortilla-malware-ta_800x800.png?h=800\u0026iar=0\u0026w=800\u0026hash=F572C79EF036740F86184BECC4377968","alt":"DarkTortilla Malware Analysis","width":"800","height":"800"}},"openGraphSiteName":{"value":"Secureworks"},"twitterCardType":{"id":"32f6a4e4-93dd-4a9c-aa60-cdedb0bedabb","url":"/sitecore/system/settings/feature/experience-accelerator/sitemetadata/enums/twitter-card-types/summary-card-with-large-image","name":"Summary Card with Large Image","displayName":"Summary Card with Large Image","fields":{"value":{"value":"summary_large_image"}}},"metaDescription":{"value":"Learn how Secureworks CTU researchers have identified DarkTortilla samples delivering targeted malicious payloads, benign decoy documents, and executables."}},"renderingParams":{}}}],"article-hero-media":[]}}]}},{"uid":"dba00f92-724a-40dc-96f6-0ea728e6fe43","componentName":"PageSection","dataSource":"","params":{"Styles":"","Theme":"{8EF51010-1608-476E-9F7E-6452D41D8A65}","DynamicPlaceholderId":"6"},"fields":{"renderingParams":{"styles":{"id":"864e8aea-1f0b-4258-acad-127da8feb7db","name":"Body Section","displayName":"Body Section","templateName":"ComplexStyle","templateId":"{203B5721-B56C-4334-8DFA-46B742A39C61}","url":"/sitecore/content/shared/complex-styles/pages/blog-article/body-section","searchPageUrl":"/","fields":{"stylesDesktop":{"value":"padding-bottom: 168px;"},"stylesXs":{"value":"padding-bottom: 64px;"},"isMouseHoverOnly":{"value":false}}},"theme":{"id":"8ef51010-1608-476e-9f7e-6452d41d8a65","name":"Light","displayName":"Light","templateName":"LookUpItem","templateId":"{EFB889F4-78B6-4030-99DF-B47C6A0FAB7B}","url":"/sitecore/content/shared/lookups/themes/light","searchPageUrl":"/","fields":{"value":{"value":"light"}}},"dynamicPlaceholderId":"6"}},"placeholders":{"page-section-6":[{"uid":"5060cc0f-dd25-41cf-b4a3-45add8ee9e51","componentName":"ArticleBodyWithAside","dataSource":"","params":{"CacheClearingBehavior":"Clear on publish","DynamicPlaceholderId":"7"},"fields":{"renderingParams":{"cacheClearingBehavior":"Clear on publish","dynamicPlaceholderId":"7"}},"placeholders":{"blog-aside":[{"uid":"b1e3d5c4-d055-4c77-ac97-1f62392e7c07","componentName":"PageSection","dataSource":"","params":{"Theme":"{8EF51010-1608-476E-9F7E-6452D41D8A65}","CacheClearingBehavior":"Clear on publish","DynamicPlaceholderId":"9"},"fields":{"renderingParams":{"theme":{"id":"8ef51010-1608-476e-9f7e-6452d41d8a65","name":"Light","displayName":"Light","templateName":"LookUpItem","templateId":"{EFB889F4-78B6-4030-99DF-B47C6A0FAB7B}","url":"/sitecore/content/shared/lookups/themes/light","searchPageUrl":"/","fields":{"value":{"value":"light"}}},"cacheClearingBehavior":"Clear on publish","dynamicPlaceholderId":"9"}},"placeholders":{"page-section-9":[{"uid":"989b751b-9cb1-4014-81fd-99c85c85acc0","componentName":"NowTrending","dataSource":"/sitecore/content/SW/swxp-rendering/Presentation/Partial Designs/Pages/Base - Research Article Without Hero/Content/TrendingNow","fields":{"id":"2f15517f-7cea-4201-b05f-f8ff4e523b1b","name":"TrendingNow","displayName":"TrendingNow","templateName":"Now Trending","templateId":"{A7E2886C-5AC3-493D-BEC1-8B822F1236D9}","url":"/presentation/partial-designs/pages/base---research-article-without-hero/content/trendingnow","searchPageUrl":"/","fields":{"title":{"value":"TrendingNow"}},"children":[{"id":"17c3a33e-011e-476e-878c-2b57e97dc778","name":"Link 1","displayName":"Link 1","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/presentation/partial-designs/pages/base---research-article-without-hero/content/trendingnow/link-1","searchPageUrl":"/","fields":{"link":{"value":{"href":"/resources/rp-state-of-the-threat-2024","text":"2024 Global State of the Threat Report","linktype":"internal","title":"2024 Global State of the Threat Report","id":"{E02DB95D-BF33-46D7-85E6-A4ADD3367C88}"}}}},{"id":"ea6e07b6-e875-4bf3-960a-7f621147c2b0","name":"Link 2","displayName":"Link 2","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/presentation/partial-designs/pages/base---research-article-without-hero/content/trendingnow/link-2","searchPageUrl":"/","fields":{"link":{"value":{"href":"/resources/eb-modernize-you-security-operation-center-with-xdr","text":"Modernize Your Security Operation Center with XDR","linktype":"internal","title":"Modernize Your Security Operation Center with XDR","id":"{75F23240-F037-407A-A6B1-445407229690}"}}}},{"id":"6531e410-d81b-4cb4-b484-a3e6953910b9","name":"Link 3","displayName":"Link 3","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/presentation/partial-designs/pages/base---research-article-without-hero/content/trendingnow/link-3","searchPageUrl":"/","fields":{"link":{"value":{"href":"/resources/eb-mdr-done-right","text":"MDR Done Right","linktype":"internal","title":"MDR Done Right","id":"{313B9B2F-CDE2-4F6E-B6F8-D97BF94007F6}"}}}}],"renderingParams":{}}},{"uid":"4e46b7a3-ca66-4276-b7df-dd77a259e644","componentName":"MediaCarouselItem","dataSource":"/sitecore/content/SW/swxp-rendering/Presentation/Partial Designs/Pages/Base - Research Article Without Hero/Content/Featured Resource","params":{"Title Tag":"{B800F7D9-370C-410A-B418-2A2E722FC8D2}","CacheClearingBehavior":"Clear on publish"},"fields":{"id":"71a7f3bf-05eb-4fc8-a139-c72989310813","name":"Featured Resource","displayName":"Featured Resource","templateName":"ContentItem","templateId":"{0251E6E9-AF09-4F1D-9289-66B8150AA997}","url":"/presentation/partial-designs/pages/base---research-article-without-hero/content/featured-resource","searchPageUrl":"/","fields":{"summary":{"value":"\u003cp\u003eIntel unleashed this October\u003c/p\u003e"},"eyebrow":{"value":"Virtual Event"},"image":{"value":{"src":"https://dam.secureworks.com/transform/6d420e0d-9f7e-46f8-a391-9259d5e71ed9/Threat-Intelligence-Summit-2024","width":"3200","height":"2400","alt":"Threat Intelligence Summit 2024","asset":{"id":"6D420E0D-9F7E-46F8-A3919259D5E71ED9","name":"Threat Intelligence Summit 2024","assetType":"Image","files":[{"name":"transformBaseUrl","url":"https://dam.secureworks.com/transform/6d420e0d-9f7e-46f8-a391-9259d5e71ed9/Threat-Intelligence-Summit-2024","width":0,"height":0,"fileSize":0},{"name":"1x1_Badge_320x320","url":"https://dam.secureworks.com/transform/1x1_Badge_320x320/6d420e0d-9f7e-46f8-a391-9259d5e71ed9/Threat-Intelligence-Summit-2024","width":0,"height":0,"fileSize":0},{"name":"16x9_Image-Standard_1284x722","url":"https://dam.secureworks.com/transform/16x9_Image-Standard_1284x722/6d420e0d-9f7e-46f8-a391-9259d5e71ed9/Threat-Intelligence-Summit-2024","width":0,"height":0,"fileSize":0},{"name":"5x3_Logo_400x240","url":"https://dam.secureworks.com/transform/5x3_Logo_400x240/6d420e0d-9f7e-46f8-a391-9259d5e71ed9/Threat-Intelligence-Summit-2024","width":0,"height":0,"fileSize":0},{"name":"1x1_Image-Square_642x642","url":"https://dam.secureworks.com/transform/1x1_Image-Square_642x642/6d420e0d-9f7e-46f8-a391-9259d5e71ed9/Threat-Intelligence-Summit-2024","width":0,"height":0,"fileSize":0},{"name":"1x1_Icon_120x120","url":"https://dam.secureworks.com/transform/1x1_Icon_120x120/6d420e0d-9f7e-46f8-a391-9259d5e71ed9/Threat-Intelligence-Summit-2024","width":0,"height":0,"fileSize":0},{"name":"4x3_Image-Tall_1284x963","url":"https://dam.secureworks.com/transform/4x3_Image-Tall_1284x963/6d420e0d-9f7e-46f8-a391-9259d5e71ed9/Threat-Intelligence-Summit-2024","width":0,"height":0,"fileSize":0},{"name":"1x1_Image-Square_1284x1284","url":"https://dam.secureworks.com/transform/1x1_Image-Square_1284x1284/6d420e0d-9f7e-46f8-a391-9259d5e71ed9/Threat-Intelligence-Summit-2024","width":0,"height":0,"fileSize":0},{"name":"1-91x1_Social_1200x627","url":"https://dam.secureworks.com/transform/1-91x1_Social_1200x627/6d420e0d-9f7e-46f8-a391-9259d5e71ed9/Threat-Intelligence-Summit-2024","width":0,"height":0,"fileSize":0},{"name":"webImage","url":"https://dam.secureworks.com/transform/6d420e0d-9f7e-46f8-a391-9259d5e71ed9/Threat-Intelligence-Summit-2024?io=transform:scale,width:800","width":800,"height":600,"fileSize":0},{"name":"thumbnail","url":"https://dam.secureworks.com/transform/6d420e0d-9f7e-46f8-a391-9259d5e71ed9/Threat-Intelligence-Summit-2024?io=transform:scale,width:250","width":250,"height":188,"fileSize":0},{"name":"mini","url":"https://dam.secureworks.com/transform/6d420e0d-9f7e-46f8-a391-9259d5e71ed9/Threat-Intelligence-Summit-2024?io=transform:scale,width:80","width":80,"height":80,"fileSize":0}]}}},"link":{"value":{"href":"https://www.secureworks.com/resources/wc-global-threat-intelligence-summit-2024?utm_medium=display-ad\u0026utm_source=secureworks-sidebar\u0026utm_campaign=25q3-gl-webinar-ti-summit\u0026utm_content=webcast","text":"Watch Now","linktype":"external","url":"https://www.secureworks.com/resources/wc-global-threat-intelligence-summit-2024?utm_medium=display-ad\u0026utm_source=secureworks-sidebar\u0026utm_campaign=25q3-gl-webinar-ti-summit\u0026utm_content=webcast"}},"title":{"value":"Global Threat Intelligence Summit 2024"}},"renderingParams":{"titleTag":{"id":"b800f7d9-370c-410a-b418-2a2e722fc8d2","name":"h3","displayName":"h3","templateName":"LookUpItem","templateId":"{EFB889F4-78B6-4030-99DF-B47C6A0FAB7B}","url":"/sitecore/content/shared/lookups/headline-tags/h3","searchPageUrl":"/","fields":{"value":{"value":"h3"}}},"cacheClearingBehavior":"Clear on publish"}}},{"uid":"4e8f59af-63ee-4fb6-9ad8-4b9a8f9b41dd","componentName":"FormStandalone","dataSource":"","params":{"Form":"{11AFAF17-371C-41C0-AA16-67CCFD587FED}"},"fields":{"renderingParams":{"form":{"id":"11afaf17-371c-41c0-aa16-67ccfd587fed","name":"Sign Up","displayName":"Sign Up","templateName":"Form","templateId":"{626F26B5-F773-41D1-899B-C32DBA114AB6}","url":"/sitecore/content/shared/forms/sign-up","searchPageUrl":"/","fields":{"gaFormFirstStepEvent":{"value":"marketo_form_step_1"},"gaFormSubmittedEvent":{"value":"marketo_form_submitted_email_signup"},"formTitle":{"value":"GET THE LATEST SECURITY UPDATES"},"submitButtonText":{"value":"Sign Up"},"successMessage":{"value":"\u003cp\u003eThank you for your submission.\u003c/p\u003e"},"continueButtonText":{"value":"Continue"},"mustBeValidBusinessEmail":{"value":false},"formId":{"value":"1823"}}}}}}]}}],"blog-body":[{"uid":"bfdba158-9560-4c7c-9000-1adc06089a80","componentName":"PageDesignSection","dataSource":"","params":{"CacheClearingBehavior":"Clear on publish","DynamicPlaceholderId":"12"},"fields":{"renderingParams":{"cacheClearingBehavior":"Clear on publish","dynamicPlaceholderId":"12"}},"placeholders":{"page-design-section":[]}},{"uid":"04603ef1-f95d-434d-8801-30ee6afc52fa","componentName":"PageSection","dataSource":"","params":{"Theme":"{8EF51010-1608-476E-9F7E-6452D41D8A65}","CacheClearingBehavior":"Clear on publish","DynamicPlaceholderId":"8"},"fields":{"renderingParams":{"theme":{"id":"8ef51010-1608-476e-9f7e-6452d41d8a65","name":"Light","displayName":"Light","templateName":"LookUpItem","templateId":"{EFB889F4-78B6-4030-99DF-B47C6A0FAB7B}","url":"/sitecore/content/shared/lookups/themes/light","searchPageUrl":"/","fields":{"value":{"value":"light"}}},"cacheClearingBehavior":"Clear on publish","dynamicPlaceholderId":"8"}},"placeholders":{"page-section-8":[{"uid":"ee62e3b1-d222-4ac5-aee5-e7dbd8d571dd","componentName":"CtaButtonsSection","dataSource":"","params":{"CacheClearingBehavior":"Clear on publish","DynamicPlaceholderId":"10"},"fields":{"renderingParams":{"cacheClearingBehavior":"Clear on publish","dynamicPlaceholderId":"10"}},"placeholders":{"cta-actions":[]}},{"uid":"ce1d1c96-3fe4-4402-ba91-97250096cf84","componentName":"RichTextContent","dataSource":"/sitecore/content/SW/swxp-rendering/Content/Articles/research/2022/darktortilla malware analysis","params":{"CacheClearingBehavior":"Clear on publish"},"fields":{"id":"8507d2d8-3e50-40a0-860a-1b403dd2bdaf","name":"darktortilla malware analysis","displayName":"darktortilla malware analysis","templateName":"Article Page","templateId":"{9F5E0978-58FB-40A6-8872-3E84B897AF67}","url":"/research/darktortilla-malware-analysis","searchPageUrl":"/research","fields":{"metaTitle":{"value":"DarkTortilla Malware Analysis"},"noFollow":{"value":false},"excludeFromSearch":{"value":false},"noIndex":{"value":false},"gated":{"value":false},"gatedVideoType":{"id":"971f4491-d4a6-42bf-abc8-9d305797ca0c","url":"/sitecore/content/shared/lookups/video-platforms/vimeo","name":"Vimeo","displayName":"Vimeo","fields":{"value":{"value":"vimeo"}}},"eyebrow":{"value":"Threat Analysis"},"image":{"value":{"src":"/-/media/images/thumbnails/blog/thing-keyboard-02.jpg?h=722\u0026iar=0\u0026w=1284\u0026hash=3EB40DA8D7DC106CD65E005A469CF61C","alt":"keyboard","width":"1284","height":"722"}},"title":{"value":"DarkTortilla Malware Analysis"},"body":{"value":"\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eDarkTortilla is a complex and highly configurable .NET-based \u003ca href=\"https://blog.malwarebytes.com/cybercrime/malware/2017/03/explained-packer-crypter-and-protector/\"\u003ecrypter\u003c/a\u003e that has \u003ca href=\"https://blog.malwarebytes.com/threat-analysis/2015/08/rainbows-steganography-and-malware-in-a-new-net-cryptor/\"\u003epossibly\u003c/a\u003e been active since at least August 2015. It typically delivers popular information stealers and remote access trojans (RATs) such as AgentTesla, AsyncRat, NanoCore, and RedLine. While it appears to primarily deliver commodity malware, Secureworks\u0026reg; Counter Threat Unit\u0026trade; (CTU) researchers identified DarkTortilla samples delivering targeted payloads such as Cobalt Strike and Metasploit. It can also deliver \"addon packages\" such as additional malicious payloads, benign decoy documents, and executables. It features robust anti-analysis and anti-tamper controls that can make detection, analysis, and eradication challenging.\u003c/p\u003e\n\u003cp\u003eFrom January 2021 through May 2022, an average of 93 unique DarkTortilla samples per week were uploaded to the VirusTotal analysis service. Code similarities suggest possible links between DarkTortilla and other malware: a \u003ca href=\"https://github.com/malwares/Crypter/tree/master/%5BC%23%5D%20The%20RATs%20Crew%20Crypter\"\u003ecrypter\u003c/a\u003e operated by the \u003ca href=\"https://wiki.hackforums.net/RATs_Crew\"\u003eRATs Crew\u003c/a\u003e threat group, which was active between 2008 and 2012, and the \u003ca href=\"https://www.gosecure.net/blog/2021/11/02/new-malware-gameloader-in-discord-malspam-campaign-identified-by-gosecure-titan-labs/\"\u003eGameloader\u003c/a\u003e malware that emerged in 2021.\u003c/p\u003e\n\u003ch2\u003eDelivery\u003c/h2\u003e\n\u003cp\u003eCTU\u0026trade; analysis of VirusTotal samples revealed numerous campaigns delivering DarkTortilla via malicious spam (malspam). The emails typically use a logistics lure and include the malicious payload in an archive attachment with file types such as .iso, .zip, .img, .dmg, and .tar. The language of the email message is customized to the victim, and CTU researchers observed samples in English, German, Romanian, Spanish, Italian, and Bulgarian. Figure 1 shows a German-language malspam \u003ca href=\"https://www.virustotal.com/gui/file/981aa83b2d33cca994021197237ac5ee3ad3402f7d25f04f4e76985f4ec8744c\"\u003esample\u003c/a\u003e. The redacted filename of the attached \u003ca href=\"https://en.wikipedia.org/wiki/Optical_disc_image\"\u003eISO image\u003c/a\u003e archive file (.iso) includes the name of the organization the email was sent from. It is unclear if that organization was compromised. The archive file contains a single executable with the same filename but the .exe extension. This executable is a DarkTortilla initial loader \u003ca href=\"https://www.virustotal.com/gui/file/5e03556be992d23088a3c49d24c45b1c21cd275bffb4e536348e8128d50374b6\"\u003esample\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"597\" width=\"544\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-01.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 1. DarkTortilla malspam containing malicious archive attachment. (The German text translates to \"Good morning, Please give us your best price offer for our attached order. Awaiting your kind reply. Kind regards\"). (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eCTU researchers also identified malicious documents (maldocs) delivering DarkTortilla. Most of these maldocs embed the DarkTortilla initial loader executable as a Packager Shell Object. Figure 2 shows a \u003ca href=\"https://www.virustotal.com/gui/file/4f15b28c91fa0e8d0dd9e86481bad04fa34fcaf564d08de7c4c0c513fc6e122d\"\u003esample\u003c/a\u003e that prompts the victim to double-click the embedded Packager Shell Object, which executes the payload. Inspection of the Packager Shell Objects properties revealed that it is an executable named \u003ca href=\"https://www.virustotal.com/gui/file/55d7d9bd9d4a511417033b6c14ce93f962d6a6e6c6414f0cb7e455baee1d3ab7\"\u003eRFQ-010129H.exe\u003c/a\u003e, which is a DarkTortilla initial loader sample. Other analyzed maldocs use different approaches, such as leveraging embedded macros to automatically execute the Packager Shell Object when a victim opens the document and enables macros.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"658\" width=\"800\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-02.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 2. Maldoc sample delivering DarkTortilla. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch2\u003eHigh-level execution flow\u003c/h2\u003e\n\u003cp\u003eDarkTortilla consists of two components that rely on each other to successfully detonate payloads: a .NET-based executable (initial loader) and a .NET-based DLL (core processor). The typical high-level execution flow for a DarkTortilla payload starts with execution of the initial loader. The initial loader then retrieves its encoded core processor. While the encoded core processor is typically embedded within the .NET resources of the initial loader, CTU researchers identified initial loaders that retrieved their core processor from \u003ca href=\"https://cyberhoot.com/cybrary/paste/\"\u003epublic paste sites\u003c/a\u003e such as pastebin . pl, textbin . net, and paste . ee.\u003c/p\u003e\n\u003cp\u003eThe initial loader decodes, loads, and executes the core processor. When executed, the core processor extracts, decrypts, and parses its configuration. The encrypted configuration is stored within the .NET resources of the initial loader as bitmap images. Depending on DarkTortilla's configuration, the core processor performs the following actions:\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003eDisplays a fake message box\u003c/li\u003e\n    \u003cli\u003ePerforms anti-virtual machine checks\u003c/li\u003e\n    \u003cli\u003ePerforms anti-sandbox checks\u003c/li\u003e\n    \u003cli\u003eImplements persistence\u003c/li\u003e\n    \u003cli\u003eMigrates execution to the Windows %TEMP% directory by using the \"Melt\" configuration element\u003c/li\u003e\n    \u003cli\u003eProcesses addon packages\u003c/li\u003e\n    \u003cli\u003eMigrates execution to its install directory\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe core processor then injects and executes its configured main payload within the context of the configured subprocess. Finally, if configured, the core processor implements anti-tamper controls to prevent interference with execution of the initial loader, core processor, injected subprocess, and WatchDog executable.\u003c/p\u003e\n\u003cp\u003eFigure 3 illustrates this high-level DarkTortilla execution flow.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"775\" width=\"622\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-03.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 3. High-level execution flow for DarkTortilla infection. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch2\u003eInitial loader\u003c/h2\u003e\n\u003cp\u003eInitial loader samples analyzed by CTU researchers were obfuscated using the \u003ca href=\"https://marketplace.visualstudio.com/items?itemName=DeepSeaObfuscator.DeepSeaObfuscator\"\u003eDeepSea .NET code obfuscator\u003c/a\u003e. As a result, many aspects of the original code have been altered to thwart analysis. For example, namespace, class, function, and property names were renamed from their original descriptive values to random characters. Figure 4 shows an example of these obfuscated values within the code decompiled by the \u003ca href=\"https://github.com/dnSpyEx/dnSpy\"\u003ednSpy\u003c/a\u003e .NET analysis tool.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"384\" width=\"368\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-04.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 4. Obfuscated DarkTortilla initial loader sample. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eIn addition to name obfuscation, DeepSea applies \u003ca href=\"http://tigress.cs.arizona.edu/transformPage/docs/flatten/index.html\"\u003eswitch dispatch control flow obfuscation\u003c/a\u003e to DarkTortilla's initial loader. This technique restructures the original linear code into switch statements that transfer execution in a seemingly unpredictable pattern, making analysis difficult. Figure 5 shows a switch statement at the entry point of a DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/a0b96236bfd79d2ebeadb8e3deb9448af3ec8edd1ea9672b7ad4793934bb4c47\"\u003esample\u003c/a\u003e. In this example, the value stored in the \"num\" variable controls which code gets executed next. This value is obfuscated and is often the result of a conditional or mathematical expression calculated at runtime, such as \"\u003ca href=\"https://en.wikipedia.org/wiki/%3F:\"\u003e((!flag) ? 15 : 9)\u003c/a\u003e\" or \"\u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.math.abs?view=net-6.0#system-math-abs(system-int32)#system-math-abs(system-int32)\"\u003eMath.Abs(num2 * 25 * 25)\u003c/a\u003e\".\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"533\" width=\"420\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-05.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 5. Switch dispatch control flow obfuscation applied to DarkTortilla initial loader. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader stores DarkTortilla's encrypted configuration as bitmap images. Figure 6 lists the partial resource section of one \u003ca href=\"https://www.virustotal.com/gui/file/b3754c6ecc445e9a3b37c5ebe68adb9630ca4aa89a8e8515468f39ae8131f141\"\u003esample\u003c/a\u003e consisting of over 700 of these images.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"573\" width=\"763\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-06.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 6. Encrypted configuration stored as bitmap images within the .NET resources of DarkTortilla initial loader. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader's execution flow typically starts by checking for internet connectivity by issuing HTTP GET requests. In samples that implement this check, the initial loader attempts to retrieve content from google . com, bing . com, or both. Some \u003ca href=\"https://www.virustotal.com/gui/file/45ef054bca2ae4d67e6623bf28ff75e5d178924602674c654e1b569aa74601cd\"\u003esamples\u003c/a\u003e store the URLs in the executable as plain text (see Figure 7), but most samples encode them. If the check fails, the initial loader retries the request(s) until all are successful.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"324\" width=\"594\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-07.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 7. Internet connectivity check in DarkTortilla initial loader. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader generates a 16-byte key to decode the core processor. This key is based on an initial hard-coded value multiplied by the index value of its location in the destination array. Because the values are stored as single bytes, the maximum value for an element in the array is 0xFF (255 decimal). For example, the decode key array for an initial hard-coded value of 0x6E (110 decimal) is [0x00,0x6E,0xDC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF].\u003c/p\u003e\n\u003cp\u003eThe initial loader then retrieves the encoded core processor data. This data commonly resides within the .NET resources of the initial loader binary. Figure 8 shows encoded core processor data residing within the \"pnj\" .NET resource of a DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/45ef054bca2ae4d67e6623bf28ff75e5d178924602674c654e1b569aa74601cd\"\u003esample\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"756\" width=\"1017\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-08.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 8. Encoded core processor data stored within the .NET resources of DarkTortilla initial loader. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader decodes the core processor data by applying the following algorithm to each byte:\u003c/p\u003e\n\n\u003cpre\u003e\tenc_byte ^ (dec_key_arr[idx % len(dec_key_arr)] ^ (idx + (seed_byte % \n\tlen(dec_key_arr)) \u0026amp; seed_byte)\n\u003c/pre\u003e\n\n\u003cul\u003e\n    \u003cli\u003eenc_byte: The core processor byte array value being decoded\u003c/li\u003e\n    \u003cli\u003eidx: The encoded byte index in the core processor byte array\u003c/li\u003e\n    \u003cli\u003edec_key_arr: The generated 16-byte decode key byte array\u003c/li\u003e\n    \u003cli\u003eseed_byte: The fourth byte of the 16-byte decode key byte array\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe initial loader loads the decoded core processor assembly code and executes its pre-determined entry point function.\u003c/p\u003e\n\u003ch3\u003eInitial loader variant with externally hosted core processor\u003c/h3\u003e\n\u003cp\u003eInitial loader variants that retrieve the encoded core processor from public paste sites first decode the URL where the core processor is hosted. The encoding logic applied to the URL varies across analyzed DarkTortilla samples, making analysis and detection difficult. Figure 9 shows a DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/0a5dc3b6669cf31e8536c59fe1315918eb4ecfd87998445e2eeb8fed64bd2f2c\"\u003esample\u003c/a\u003e that encodes the URL (https: //pastebin . pl/view/raw/60b6b03b) by prepending and appending random text.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"408\" width=\"735\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-09.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 9. DarkTortilla initial loader variant that retrieves encoded core processor data from public paste site. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader retrieves an encoded string hosted at the decoded URL. This string represents the encoded core processor data. The string consists of fake XML tags, integer values encoded with a \u003ca href=\"https://en.wikipedia.org/wiki/Caesar_cipher\"\u003eshift cipher\u003c/a\u003e, and delimiters comprised of random letters (see Figure 10). The downloaded data is stored in memory and is never saved to the filesystem.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"476\" width=\"750\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-10.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 10. Encoded DarkTortilla core processor data hosted on public paste site. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader decodes the string by first removing the fake XML tags. The string is converted into an array of integers by replacing the random letter character delimiters with a consistent letter and then using that letter to split the string into integers. The last step is to iterate through the integer array and subtract a pre-defined value. This value changes across samples.\u003c/p\u003e\n\u003cp\u003eIn the Figure 10 example (\u0026lt;xml\u0026gt;1002k1015U1069k925E928s925U925E925g929E925\u0026hellip;\u0026lt;/xml\u0026gt;), the consistent letter delimiter is \"k\" and the pre-defined subtracted value is 925:\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003eRemove XML tags: 1002k1015U1069k925E928s925U925E925g929E925\u0026hellip;\u003c/li\u003e\n    \u003cli\u003eReplace random letters with consistent character: 1002k1015k1069k925k928k925k925k925k929k925\u0026hellip;\u003c/li\u003e\n    \u003cli\u003eSplit into integer array: [1002, 1015, 1069, 925, 928, 925, 925, 925, 929, 925, \u0026hellip;]\u003c/li\u003e\n    \u003cli\u003eSubtract pre-defined value from each integer: [77, 90, 144, 0, 3, 0, 0, 0, 4, 0, \u0026hellip;]\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThe hex representation of the final integer array for this example is [4D, 5A, 90, 00, 03, 00, 00, 00, 04, 00, \u0026hellip;]. This decoded data is the core processor DLL (see Figure 11).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"227\" width=\"700\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-11.png\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 11. Decoded DarkTortilla core processor DLL. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch2\u003eCore processor\u003c/h2\u003e\n\u003cp\u003eThe core processor contains DarkTortilla's primary functionality. From at least June 2020 to March 2022, the malware author transitioned through a limited number of filenames for this DLL that appeared to relate to a function or purpose (Deserialize.dll, SHCore1.dll, \u003ca href=\"https://www.virustotal.com/gui/file/93dd1202697dbaed9ef4f4707f2628212bf13aad096de29c14924b1dae1d6d5b\"\u003ePVCore1.dll\u003c/a\u003e, and SHCore2.dll). In March 2022, the names began to change more frequently to seemingly random names (e.g., BRIN.dll, UKRUSAIN.dll, KNIFALL.dll, NullSBAS.dll).\u003c/p\u003e\n\u003ch3\u003eConfiguration processing\u003c/h3\u003e\n\u003cp\u003eThe core processor identifies the following resources in the initial loader that are associated with the encrypted configuration:\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003eThe bitmap image resource(s) containing the encrypted configuration data\u003c/li\u003e\n    \u003cli\u003eThe binary resource specifying the total number of images to process\u003c/li\u003e\n    \u003cli\u003eThe resource folder containing these images and binary resources\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe names of these resources are calculated using the compile timestamp listed in the initial loader (which is not the file's actual compile timestamp) and two hard-coded values that represent an initialization value and the length of the resource name. The hard-coded initialization and name length values were consistent across all DarkTortilla samples analyzed by CTU researchers (see Table 1).\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003eInitial loader resource\u003c/th\u003e\n            \u003cth\u003eInitialization value\u003c/th\u003e\n            \u003cth\u003eResource name length value\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Resource folder\n            \u003c/td\u003e\n            \u003ctd\u003e\n            5\n            \u003c/td\u003e\n            \u003ctd\u003e\n            12\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Image count file\n            \u003c/td\u003e\n            \u003ctd\u003e\n            80\n            \u003c/td\u003e\n            \u003ctd\u003e\n            8\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Image file\n            \u003c/td\u003e\n            \u003ctd\u003e\n            20\n            \u003c/td\u003e\n            \u003ctd\u003e\n            8\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 1. Values used to derive initial loader resource names.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThese names are calculated via the following process:\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003eDivide the compile timestamp by \u0026lt;\u003cem\u003einitialization value\u003c/em\u003e\u0026gt;.\u003c/li\u003e\n    \u003cli\u003eRound the result using the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.math.round?view=net-6.0#system-math-round(system-decimal)#system-math-round(system-decimal)\"\u003eMath.Round()\u003c/a\u003e function.\u003c/li\u003e\n    \u003cli\u003ePass the result to the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.random\"\u003eRandom.Random()\u003c/a\u003e function as a seed value. By using a precalculated seed value, the malware author can generate a predictable 16-byte value.\u003c/li\u003e\n    \u003cli\u003eConvert the 16-byte value to a GUID using the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.guid\"\u003eGuid.Guid()\u003c/a\u003e function, which transposes the byte order.\u003c/li\u003e\n    \u003cli\u003eRemove dash characters (\u0026lsquo;-') added during the GUID conversion.\u003c/li\u003e\n    \u003cli\u003eTruncate the value to \u0026lt;\u003cem\u003eresource name length\u003c/em\u003e\u0026gt; characters.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eFor example, the following calculation generates the resource folder name of a \u003ca href=\"https://www.virustotal.com/gui/file/b3754c6ecc445e9a3b37c5ebe68adb9630ca4aa89a8e8515468f39ae8131f141\"\u003esample\u003c/a\u003e with a compile timestamp of \"Sun May 26 23:57:08 1985\" (integer: 486014228):\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003e486014228 / 5 = 97202845.6\u003c/li\u003e\n    \u003cli\u003eMath.Round(97202845.6) = 97202846\u003c/li\u003e\n    \u003cli\u003eRandom.Random(97202846) = d00bee25fa9dc9024fdf632727286708\u003c/li\u003e\n    \u003cli\u003eGuid.Guid(d00bee25fa9dc9024fdf632727286708) = 25ee0bd0-9dfa-02c9-4fdf-632727286708\u003c/li\u003e\n    \u003cli\u003eRemove dashes = 25ee0bd09dfa02c94fdf632727286708\u003c/li\u003e\n    \u003cli\u003eTruncate to 12 characters = 25ee0bd09dfa\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eApplying the same calculation to the other components reveals that the image count resource name for this sample is \"cd6935eb\" and the image base name is \"d390ea32\". The bitmap-formatted image names follow the pattern \u0026lt;\u003cem\u003eimage_base_name\u003c/em\u003e\u0026gt;\u0026lt;\u003cem\u003eimage_index\u003c/em\u003e\u0026gt;, where the \u0026lt;\u003cem\u003eimage_index\u003c/em\u003e\u0026gt; value ranges from 0 to the value specified in the image count resource. In this sample, the image count resource value is 0x2D4 (integer: 724), which means DarkTortilla attempts to process 725 bitmap-formatted images with the names d390ea32\u003cstrong\u003e0\u003c/strong\u003e, d390ea32\u003cstrong\u003e1\u003c/strong\u003e, d390ea32\u003cstrong\u003e2\u003c/strong\u003e, \u0026hellip;, d390ea32\u003cstrong\u003e723\u003c/strong\u003e, d390ea32\u003cstrong\u003e724\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eTo extract the encrypted configuration, the core processor iterates through each of the image resources in order, extracts the pixel data, and concatenates the pixel data into a byte array (see Figure 12).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"378\" width=\"783\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-12.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 12. Logic for extracting encrypted configuration from bitmap images. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe resulting byte array is decrypted using the \u003ca href=\"https://en.wikipedia.org/wiki/Advanced_Encryption_Standard\"\u003eRijndael\u003c/a\u003e cipher (also known as the Advanced Encryption Standard (AES)) with Electronic Code Book (ECB) block cipher mode and \u003ca href=\"https://en.wikipedia.org/wiki/Padding_(cryptography)#ISO_10126\"\u003eISO10126 padding\u003c/a\u003e configured. The ISO10126 \u003ca href=\"https://www.iso.org/standard/18114.html\"\u003estandard\u003c/a\u003e was withdrawn in 2007, so the use of this padding could indicate that DarkTortilla's origins date back to 2007 or earlier. The key used to decrypt this data is stored as the hard-coded integer array [81, 42, 59, 7, 27, 70, 83, 13, 71, 75, 17, 9, 39, 64, 3, 2] (see Figure 13).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"396\" width=\"800\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-13.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 13. Hard-coded key to decrypt DarkTortilla configuration. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eDarkTortilla parses the decrypted configuration data into a structure so that its elements can be easily referenced. Table 2 lists the potential configuration elements contained within DarkTortilla's decrypted configuration. Entries in \u003cstrong\u003ebold\u003c/strong\u003e indicate configuration elements that were consistently present in all samples analyzed by CTU researchers.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Key\u003c/th\u003e\n            \u003cth\u003e\n            Type\u003c/th\u003e\n            \u003cth\u003e\n            Description\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Installation%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eInstall DarkTortilla and implement persistence\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationReg%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Registry key used for persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationKey%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Registry value used for persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationDirectory%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Root install directory\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationFolder%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Subfolder name within the root install directory\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationFileName%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Filename for the initial loader executable within the root subfolder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %StartupFolder%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            bool\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Enable Startup folder persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %Hidden%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            bool\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Enable \"Hidden\" registry persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %HiddenReg%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \"Hidden\" registry key used for persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %HiddenKey%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \"Hidden\" registry value used for persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Message%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eDisplay fake message box\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageIcon%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Fake message box icon ID\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageButton%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Fake message box button ID\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageTitle%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Fake message box title\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageBody%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Fake message box message\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageRepetition%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            bool\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Display fake message box even if installed\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%VM%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ePerform anti-virtual machine checks\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%SB%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ePerform anti-sandbox checks\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%InjectionPersist%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eEnable anti-tamper control for running processes\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%StartupPersist%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eEnable anti-tamper control for startup persistence\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Melt%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eMigrate initial loader execution to the Windows %TEMP% directory\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MeltName%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Filename for the initial loader executable within the Windows %TEMP% directory\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %WatchDogName%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Filename for the anti-tamper WatchDog executable\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %WatchDogBytes%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            byte[]\n            \u003c/td\u003e\n            \u003ctd\u003e\n            WatchDog byte array\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Compress%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eIndicates if payloads are zlib-compressed\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Delay%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eint\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eNumber of seconds to delay execution within the core processor\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%HostIndex%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eint\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eID of the target subprocess name to use for main/addon payload injection\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%MainFile%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebyte[]\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eMain payload byte array\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%FilesNum%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eint\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eNumber of addon packages to process\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.D\n            \u003c/td\u003e\n            \u003ctd\u003e\n            byte[]\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (data): Payload byte array\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.N\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (name): Filename\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.P\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (path): Target install folder (special folder ID)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.F\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (folder): Target install subfolder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.O\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (operation): Execution type (disk, memory, none)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.T\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (time): Execution delay (seconds)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.R\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (run): Payload execution criterion\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 2. DarkTortilla configuration elements. Bold text indicates elements that appear in all analyzed samples.\u003c/em\u003e\u003c/p\u003e\n\u003ch3\u003eFake message display\u003c/h3\u003e\n\u003cp\u003eDarkTortilla can be configured to display a message box when executed. The threat actor can customize message box characteristics such as the display message, message box title, and the \u003ca href=\"https://docs.microsoft.com/en-us/office/vba/language/reference/user-interface-help/msgbox-constants\"\u003eicon and button configuration\u003c/a\u003e. Threat actors use fake message boxes to make victims think that execution failed or that a legitimate application is loading and installing. Table 3 lists the configuration elements and values in one DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/083acce46cb8cf35e37c778d1f4aee6814bca72d2874b793a47f9823f51df0fe/\"\u003esample\u003c/a\u003e.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Configuration element\u003c/th\u003e\n            \u003cth\u003e\n            Assigned value as it appears in the configuration\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %Message%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageIcon%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            16\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageButton%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            0\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageTitle%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            .Net Framework Initialization Error\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageBody%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            To run this application, you first must install one of the following version of the .Net Framework:\\r\\n.Net Framework, Version = 4.8.0\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageRepetition%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 3. Fake message box-related configuration elements.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eFigure 14 shows the message box for the DarkTortilla sample configured with the values in Table 3. The %MessageRepetition% configuration element controls whether the message box will continue to be displayed upon execution after DarkTortilla is installed and persistent on the compromised system.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"185\" width=\"464\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-14.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 14. Fake message box. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch3\u003e\"Melt\" execution migration\u003c/h3\u003e\n\u003cp\u003eIf the %Melt% configuration element is set to true, the core processor moves the initial loader executable to the Window's %TEMP% directory. It uses the %MeltName% configuration element value as the executable filename (e.g., java.exe, PDF.exe, cookies.exe). The core processor runs the new executable and then terminates the original initial loader executable. However, the %TEMP% directory may not be the final destination for the initial loader. The executable could migrate again if the %Installation% configuration element is set to true.\u003c/p\u003e\n\u003ch3\u003eInstallation\u003c/h3\u003e\n\u003cp\u003eThe %Installation% configuration element controls whether DarkTortilla installs itself on a system. If set to true, the core processor moves the current DarkTortilla executable into the directory specified by the configuration. Table 4 lists the values stored in one DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/53b3b37b7d1e40c80fcda2c424cd837379ac2ce93023de6c22ba3e2d94679671\"\u003esample\u003c/a\u003e.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Configuration element\u003c/th\u003e\n            \u003cth\u003e\n            Value\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationDirectory%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            38\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationFolder%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            WindowsPowerShell\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationFileName%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            PowerShellInfo.exe\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 4. Installation configuration elements with example values.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe integer value assigned to the %InstallationDirectory% configuration element represents a \u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/shell/csidl\"\u003eCSIDL\u003c/a\u003e value associated with a special folder on the system. In Table 4, the value 38 corresponds to the Windows \u003ca href=\"https://www.magnumdb.com/search?q=CSIDL_PROGRAM_FILES\"\u003eProgram Files\u003c/a\u003e directory. Based on this configuration, the full install path and filename for this DarkTortilla sample is \"C:\\Program Files\\WindowsPowerShell\\PowerShellInfo.exe\".\u003c/p\u003e\n\u003cp\u003eTo install, the core processor terminates the currently running DarkTortilla executable. It copies the executable to the configured installation path and filename, and then executes the installed executable via \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.process.start?view=net-6.0\"\u003eProcess.Start()\u003c/a\u003e.\u003c/p\u003e\n\u003ch3\u003ePersistence\u003c/h3\u003e\n\u003cp\u003ePersistence is controlled by the %Installation% configuration element in combination with the %Hidden% and %StartupFolder% configuration elements. DarkTortilla uses the logic in Table 5 to determine the persistence type.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            %Hidden%\u003c/th\u003e\n            \u003cth\u003e\n            %StartupFolder%\u003c/th\u003e\n            \u003cth\u003e\n            Persistence type\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Use registry HKCU Run key\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Windows startup folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Windows startup folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Use registry HKCU Winlogon key\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 5. Configuration elements determining the persistence type.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eA bug in the code causes the %StartupFolder% logic to override the %Hidden% logic if both configuration elements are set to true. The malware author erroneously used an \"if\" statement instead of \"else if\" in the logic setting the persistence type (see Figure 15).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"313\" width=\"800\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-15.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 15. Error in persistence code. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eFor Windows startup folder persistence, the core processor uses the \u003ca href=\"https://docs.microsoft.com/en-us/troubleshoot/windows-client/admin-development/create-desktop-shortcut-with-wsh\"\u003eWshShortcut\u003c/a\u003e COM object to create a .lnk shortcut file in the Windows startup folder. This file points to the configured installation path and filename of DarkTortilla's initial loader executable (see Figure 16).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"196\" width=\"685\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-16.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 16. COM object that drops shortcut file in Windows startup folder for persistence. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eDarkTortilla features standard and hidden techniques for implementing persistence via the Windows registry. Both options implement persistence in the HKEY_CURRENT_USER (HKCU) hive as a hard-coded value in the core processor code. This persistence results in the installed DarkTortilla initial loader executable being run every time the user logs in.\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003eFor standard registry persistence, the core processor uses the %InstallationReg% and %InstallationKey% values to set the target key/value combination. In every sample analyzed by CTU researchers where standard persistence was configured, the %InstallationReg% value was \"Software\\Microsoft\\Windows\\CurrentVersion\\Run\". The value stored in %InstallationKey% varied across samples (e.g., \"Updates\", \"svchost\", \"Runtime Broker\").\u003c/li\u003e\n    \u003cbr /\u003e\n    \u003cli\u003eFor hidden registry persistence, the core processor uses the %HiddenReg% and %HiddenKey% values to set the target key/value combination. In every sample analyzed by CTU researchers where hidden persistence was configured, the %InstallationReg% value was \"Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" and the value stored in %HiddenKey% was \"Shell\". Prior to setting the hidden persistence registry value, DarkTortilla's core processor prepends the installed initial loader executable path with the Windows shell value retrieved from the HKEY_LOCAL_MACHINE (HKLM) hive. This value is typically \"explorer.exe\", resulting in \"explorer.exe,\u0026lt;\u003cem\u003einstalled_darktortilla_exe_path\u003c/em\u003e\u0026gt;\". For example, if the configured install path and executable name for a DarkTortilla sample is \"C:\\Program Files\\WindowsPowerShell\\PowerShellInfo.exe\", then the HKCU Winlogon\\Shell registry entry is \"explorer.exe,C:\\Program Files\\WindowsPowerShell\\PowerShellInfo.exe\". To create these registry values, the core processor executes the following command via Process.Start():\u003cbr /\u003e\n    \u003cbr /\u003e\n    \u003cpre\u003e\tcmd.exe /c REG ADD \"HKCU\\\u003cem\u003e\u0026lt;configured_reg_key\u0026gt;\u003c/em\u003e\" /f /v \"\u003cem\u003e\u0026lt;configured_reg_val\u0026gt;\u003c/em\u003e\" /t\n\tREG_SZ /d \"\u003cem\u003e\u0026lt;installed_darktortilla_exe_path\u0026gt;\u003c/em\u003e\"\n\t\u003c/pre\u003e\n    \u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eRunPE process injection\u003c/h3\u003e\n\u003cp\u003eDarkTortilla can execute its payloads using process injection. With this method, the payload resides only in memory and never accesses the filesystem. The %HostIndex% configuration element defines which legitimate process to target for process injection (see Table 6).\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            %HostIndex% value\u003c/th\u003e\n            \u003cth\u003e\n            Corresponding target process\u003c/th\u003e\n            \u003cth\u003e\n            Source directory\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0 \u003cem\u003e(or any numeric value that is not 1-6)\u003c/em\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Initial loader executable's name\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u0026nbsp;\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            1\n            \u003c/td\u003e\n            \u003ctd\u003e\n            AppLaunch.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            2\n            \u003c/td\u003e\n            \u003ctd\u003e\n            svchost.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            System32 folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            3\n            \u003c/td\u003e\n            \u003ctd\u003e\n            RegAsm.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            4\n            \u003c/td\u003e\n            \u003ctd\u003e\n            InstallUtil.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5\n            \u003c/td\u003e\n            \u003ctd\u003e\n            mscorsvw.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            6\n            \u003c/td\u003e\n            \u003ctd\u003e\n            AddInProcess32.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 6. %HostIndex% values and corresponding target processes used for payload injection.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003ePrior to setting the target process name, the core processor checks for active processes named \"avp\". The avp.exe process is part of the Kaspersky Anti-Virus suite. If the core processor detects this process, it overrides the %HostIndex% value and sets the target process name to the name of the initial loader executable. When the %HostIndex% value is 1-6, the core processor attempts to copy the legitimate target executable file to the Windows %TEMP% directory.\u003c/p\u003e\n\u003cp\u003eDarkTortilla uses a .NET-based DLL named \"RunPe6\" for process injection. This DLL is embedded within the core processor as an encoded byte array (see Figure 17).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"403\" width=\"519\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-17.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 17. Encoded RunPe6 DLL stored as byte array within DarkTortilla core processor. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eTo decode each byte, the core processor uses the following equation with \u003cem\u003e\u0026lt;xor_key\u0026gt;\u003c/em\u003e as the hard-coded integer array [45, 89, 125, 69, 250, 222, 111] and \u003cem\u003e\u0026lt;seed\u0026gt;\u003c/em\u003e as the hard-coded integer 99:\u003c/p\u003e\n\u003cpre\u003edecoded_byte = encoded_byte ^ (\u003cem\u003e\u0026lt;xor_key\u0026gt;\u003c/em\u003e[(idx * \u003cem\u003e\u0026lt;seed\u0026gt;)\u003c/em\u003e % xor_key.Length])\u003c/pre\u003e\n\u003cbr /\u003e\n\u003cp\u003eThe core processor loads RunPe6 and calls its \u0026lsquo;Runn' function to execute the malicious payload within the context of the configured target subprocess. The core processor does not directly reference this function. Rather, it references the index values for the target class (18) and function (0). Figure 18 displays PowerShell code developed by CTU researchers to replicate the core processor's target function identification logic.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"167\" width=\"561\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-18.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 18. Custom PowerShell script to identify RunPe6 function used for payload process injection. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch3\u003eAddon package processing\u003c/h3\u003e\n\u003cp\u003eDarkTortilla can be configured with zero or more payloads known as addon packages. These addons are in addition to the main payload that DarkTortilla is tasked with delivering. Observed addons include benign decoy documents, legitimate executables, keyloggers, clipboard stealers, cryptocurrency miners, and additional DarkTortilla payloads. Each addon package possesses a set of configuration elements composed of a static \"F\" character, an integer \"{0}\" that represents the index value indicating the position of the addon in the package array, and a character representing a particular property associated with the package.\u003c/p\u003e\n\u003cp\u003eThe %FilesNum% configuration element defines the number of addon packages to process. For example, if the %FilesNum% value is 3, the configuration elements are F.0.\u003cem\u003e\u0026lt;addon property\u0026gt;\u003c/em\u003e, F.1.\u003cem\u003e\u0026lt;addon property\u0026gt;\u003c/em\u003e, and F.2.\u003cem\u003e\u0026lt;addon property\u0026gt;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eThe F.{0}.D (data) configuration element contains the addon package payload binary data. The core processor checks the %Compress% configuration element to determine if the stored data is compressed. If the element is set to true, the core processor decompresses the data before processing it.\u003c/p\u003e\n\u003cp\u003eThe core processor next determines if it should process the addon package by inspecting the initial loader's installation state and the addon package's F.{0}.R (run) value. Table 7 lists the criteria and their result.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Initial loader running from install directory\u003c/th\u003e\n            \u003cth\u003e\n            F.{0}.R (run) value\u003c/th\u003e\n            \u003cth\u003e\n            Process addon package?\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Yes\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            No\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            No\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Yes\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 7. Criteria for processing addon package.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eIf configured to process the addon package, the core processor inspects the F.{0}.O (operation) configuration element value to determine how to execute its payload. This value can be any integer but is typically 0, 1, or 2. If the value is set to 0 or any value other than 1 or 2, the core processor saves the payload to disk but does not execute it. If the value is 1, the core processor saves the payload to disk and executes it. If the value is 2, the core processor executes the payload in memory via the same RunPE process injection technique and target process it uses for the main payload.\u003c/p\u003e\n\u003cp\u003eIf the payload is saved to disk, the location is specified by the addon path (F.{0}.P), subfolder (F.{0}.F), and filename (F.{0}.N) configuration elements. The F.{0}.P integer value represents a CSIDL value associated with a special folder on the system. For example, the value 2 corresponds to the Windows Start Menu/Programs folder. The full path of an analyzed \u003ca href=\"https://www.virustotal.com/gui/file/5be86cfca25e295f88b5aab42a6f604d2f1bb97f3c73b01df664c137908e2ec4\"\u003esample\u003c/a\u003e containing a F.{0}.P value of 2, an empty string for F.{0}.F, and a value of sertif.exe for F.{0}.N is \"C:\\Users\\\u003cem\u003e\u0026lt;username\u0026gt;\u003c/em\u003e\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\sertif.exe\".\u003c/p\u003e\n\u003ch3\u003eMain payload processing\u003c/h3\u003e\n\u003cp\u003eAfter processing addon packages and installing the initial loader executable if appropriate, DarkTortilla processes its main payload. This main payload is typically a commodity information stealer or remote access trojan (RAT). DarkTortilla stores the binary data for the main payload in the %MainFile% configuration element. Processing this payload consists of two steps:\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003eThe core processor queries the %Compress% configuration element to determine if the binary data in the %MainFile% configuration element is compressed. If set to true, the core processor decompresses the data.\u003c/li\u003e\n    \u003cbr /\u003e\n    \u003cli\u003eThe core processor executes the main payload via RunPE process injection. Unlike the addon payloads, there is no option to save the main payload to the filesystem. Therefore, the main payload resides only in memory. The target process used for injection is the same as the addon packages and is defined by the %HostIndex% configuration element.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003eAnti-analysis controls\u003c/h3\u003e\n\u003cp\u003eDarkTortilla core processor samples analyzed by CTU researchers were obfuscated using the \u003ca href=\"https://yck1509.github.io/ConfuserEx/\"\u003eConfuserEx\u003c/a\u003e code obfuscator. In addition to the obfuscator altering namespace, class, function, and property names, CTU researchers identified multiple samples where it injected specially crafted code that did not affect execution but inhibited decompilation by tools such as dnSpy (see Figure 19). Bypassing this anti-analysis control requires removing the code that caused the decompiler to break, identifying another sample that does not implement this control, or piecing together analysis from multiple samples to understand the code.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"497\" width=\"800\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-19.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 19. Broken dnSpy decompilation of DarkTortilla core processor. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe core processor includes code that that detects profilers and debuggers, but these anti-analysis controls are not called. To detect profiling, the code verifies if the \u003ca href=\"https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ee471451(v=vs.100)?redirectedfrom=MSDN\"\u003eCOR_ENABLE_PROFILING\u003c/a\u003e environment variable is present and sets to the value of 1. To detect debuggers, the code spawns a thread (see Figure 20) that continuously checks the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.debugger.isattached?view=net-6.0\"\u003eDebugger.IsAttached\u003c/a\u003e property and the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.debugger.islogging?view=net-6.0\"\u003eDebugger.IsLogging\u003c/a\u003e method. If the core processor identifies a debugger or if the thread performing the checks is terminated, the code terminates the initial loader process. It is unclear if this code was added by ConfuserEx or the malware author.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"475\" width=\"585\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-20.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 20. Debugger detection performed by DarkTortilla core processor. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe core processor implements string encoding to obscure important strings such as the configuration keys. Figure 21 shows a code excerpt that passes the string length (17), character index array ([26,8,13,18,19,0,11,11,0,19,8,14,13,17,4,6,26]), and capital letter index array ([8,17]) to the decode function.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"79\" width=\"522\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-21.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 21. DarkTortilla core processor string obfuscation example. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThis function decodes the string by iterating through each value in the character index array and retrieving the corresponding character at the specified index in a hard-coded character array (see Figure 22).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"105\" width=\"385\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-22.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 22. Character array used by string decoding logic. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eFigure 21 shows that the example's first three values of the character index array passed to the decode function are 26, 8, and 13. These values correspond to the characters \"%\", \"i\", and \"n\" in the hard-coded character array shown in Figure 22. The values passed in the capital letter index array (8, 17) indicate which characters should be capitalized (\"I\" and \"R\" in this example). Processing the character index array results in the decoded string \"%InstallationReg%\".\u003c/p\u003e\n\u003cp\u003eThe %VM% configuration element enables DarkTortilla's anti-virtual machine (anti-VM) controls. If set to true, the core processor obtains information about the system by querying the following Windows Management Instrumentation (WMI) objects:\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-computersystem\"\u003eWin32_ComputerSystem\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-bios\"\u003eWin32_BIOS\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-motherboarddevice\"\u003eWin32_MotherboardDevice\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-pnpentity\"\u003eWin32_PnPEntity\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-diskdrive\"\u003eWin32_DiskDrive\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe core processor also retrieves information about the system's running processes and services. It then inspects this data for strings associated with Hyper-V, QEMU, Virtual PC, VirtualBox, and VMware. If any of the case-insensitive data matches the criteria in Table 8, the core processor terminates the initial loader process.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Targeted technology\n            \u003c/th\u003e\n            \u003cth\u003e\n            Inspected entity\n            \u003c/th\u003e\n            \u003cth\u003e\n            Inspection logic\n            \u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Hyper-V\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Caption contains \"virtual\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Hyper-V\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_ComputerSystem\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Manufacturer contains \"microsoft\" and Model contains \"virtual\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            QEMU\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name contains \"qemu\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Virtual PC\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Process\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Process list contains \"vmusrvc\" or both \"vpcmap\" and \"vmsrvc\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VirtualBox\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Model contains \"vbox\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VirtualBox\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Process\n            \u003c/td\u003e\n            \u003ctd\u003e\n            ProcessName contains \"vboxservice\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name contains \"vmware\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Model contains \"vmware\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_ComputerSystem\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Manufacturer contains \"vmware\" and Model contains \"virtual\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_BIOS\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Serial number contains \"vmware\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name equals \"vmware pointing device\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name contains \"vmware sata\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name equals \"vmware usb pointing device\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name equals \"vmware vmci bus device\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name equals \"vmware virtual s scsi disk device\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name starts with \"vmware svga\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Service\n            \u003c/td\u003e\n            \u003ctd\u003e\n            ServiceImagePath contains \"vmware\" and ServiceName equals \"vmtools\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Service\n            \u003c/td\u003e\n            \u003ctd\u003e\n            ServiceImagePath contains \"vmware\" and ServiceName equals \"tpvcgateway\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Service\n            \u003c/td\u003e\n            \u003ctd\u003e\n            ServiceImagePath contains \"vmware\" and ServiceName equals \"tpautoconnsvc\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 8. DarkTortilla core processor anti-VM detections.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe %SB% configuration element enables DarkTortilla's anti-sandbox control. This control only detects the \u003ca href=\"https://sandboxie-plus.com/Sandboxie/\"\u003eSandboxie\u003c/a\u003e sandbox. The core processor terminates the initial loader process if it detects a running process named \"sandboxierpcss\" in the current session.\u003c/p\u003e\n\u003ch3\u003eAnti-tamper controls\u003c/h3\u003e\n\u003cp\u003eDarkTortilla's anti-tamper controls are the last step in its execution chain and occur after the main payload is executed. The four controls ensure that nothing interferes with DarkTortilla's execution of its critical components.\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003e\n    \u003cp\u003eThe first anti-tamper control is employed by the core processor and ensures that the injected subprocess running the main payload is immediately rerun if terminated. The %InjectionPersist% configuration element regulates this control. If set to true, the core processor starts a thread that monitors the state of the injected subprocess. If the subprocess is terminated, this anti-tamper control automatically respawns the configured target subprocess, re-injects the main payload, and executes it within the context of the subprocess.\u003c/p\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\n    \u003cp\u003eThe second anti-tamper control ensures that the initial loader executable is immediately rerun if terminated. DarkTortilla implements this functionality with a secondary .NET-based executable that it refers to as \"WatchDog\". The %InjectionPersist% configuration element regulates this control. If set to true, the core processor drops the WatchDog executable and its configuration file to the Windows %TEMP% directory. It then executes the WatchDog executable, which monitors the initial loader process.\u003c/p\u003e\n    \u003cp\u003eThe WatchDog executable bytes are stored in the DarkTortilla %WatchDogBytes% configuration element, and the filename is stored in %WatchDogName%. Prior to processing, the core processor decompresses the WatchDog executable's bytes if the %Compress% configuration element is set to true. Every \u003ca href=\"https://www.virustotal.com/gui/file/2d0dc6216f613ac7551a7e70a798c22aee8eb9819428b1357e2b8c73bef905ad\"\u003eWatchDog executable\u003c/a\u003e dropped by DarkTortilla was identical:\u003c/p\u003e\n    \u003cul\u003e\n        \u003cli style=\"list-style: disc;\"\u003eMD5 hash: 0e362e7005823d0bec3719b902ed6d62\u003c/li\u003e\n        \u003cli style=\"list-style: disc;\"\u003eSHA1 hash: 590d860b909804349e0cdc2f1662b37bd62f7463\u003c/li\u003e\n        \u003cli style=\"list-style: disc;\"\u003eSHA256 hash: 2d0dc6216f613ac7551a7e70a798c22aee8eb9819428b1357e2b8c73bef905ad\u003c/li\u003e\n    \u003c/ul\u003e\n\n    \u003cp\u003eIf an executable with the configured WatchDog name already exists in the Windows %TEMP% directory, the core processor removes the existing executable's \u003ca href=\"https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-fscc/6e3f7352-d11c-4d76-8c39-2516a9df36e8\"\u003eZone.Identifier\u003c/a\u003e Alternate Data Stream (ADS), which strips the executable of any existing \u003ca href=\"https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/ms537183(v=vs.85)?redirectedfrom=MSDN\"\u003eURL security zones\u003c/a\u003e. It then overwrites the existing executable with the new WatchDog executable.\u003c/p\u003e\n    \u003cp\u003eThe WatchDog configuration file dropped to the filesystem shares the same name as the WatchDog executable but uses a .txt file extension. For example, the configuration filename for \"WatchDog.exe\" is \"WatchDog.txt\". This configuration file contains three lines representing the following values:\u003c/p\u003e\n    \u003cul\u003e\n        \u003cli style=\"list-style: disc;\"\u003eThe process ID of the initial loader executable\u003c/li\u003e\n        \u003cli style=\"list-style: disc;\"\u003eThe path and filename of the initial loader executable\u003c/li\u003e\n        \u003cli style=\"list-style: disc;\"\u003eThe process ID for the WatchDog executable\u003c/li\u003e\n    \u003c/ul\u003e\n\n    \u003cp\u003eIf the initial loader process terminates, the WatchDog process reruns it and refreshes the contents of the WatchDog configuration text file with the new process ID information.\u003c/p\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\n    \u003cp\u003eThe third anti-tamper control is employed by the core processor and ensures that the dropped WatchDog executable continues to execute. The core processor retrieves the WatchDog executable process ID from the WatchDog configuration file once per second and verifies that the corresponding process is running. If the WatchDog process terminates, the core processor breaks the loop, drops a new WatchDog configuration file, and reruns the WatchDog executable.\u003c/p\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\n    \u003cp\u003eThe fourth anti-tamper control is employed by the core processor and maintains persistence for the initial loader. The %StartupPersist% configuration element regulates this control. If set to true, the core processor starts a thread that sets persistence every 30 seconds using the persistence type defined in the DarkTortilla configuration. The control does not contain validation logic to check the persistence status, so it repeats the process indefinitely.\u003c/p\u003e\n    \u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3\u003eDelayed execution\u003c/h3\u003e\n\u003cp\u003eThe core processor implements the kernel32.dll Sleep function to delay execution at the following stages of the process. The length of delay is typically controlled by the value in the %Delay% configuration element. CTU researchers observed values ranging from 0 seconds to 300 seconds.\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003ePrior to implementing persistence, the core processor sleeps for the number of seconds specified by the %Delay% configuration element.\u003c/li\u003e\n    \u003cli\u003ePrior to processing addon packages, the core processor sleeps for the number of seconds specified by the %Delay% configuration element.\u003c/li\u003e\n    \u003cli\u003eThe core processor sleeps for a hard-coded 5 seconds after copying the source executable to the install directory but before running the executable.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe number of delays increases if the %Melt% and %Installation% configuration elements are set to true, as the delays are processed each time the executable migrates. These delays can impede detection in sandbox environments if they exceed the maximum wait time.\u003c/p\u003e\n\u003ch2\u003ePossible malware connections\u003c/h2\u003e\n\u003cp\u003eDarkTortilla code shares similarities to other malware. For example, payload compression, junk code inclusion, and payload execution via \u003ca href=\"https://github.com/malwares/Crypter/blob/master/%5BC%23%5D%20The%20RATs%20Crew%20Crypter/Form1.cs#L161-L163\"\u003eRunPe6\u003c/a\u003e are also features of a RATs Crew crypter last updated in 2016. DarkTortilla could represent an evolution of that crypter. Additionally, the Gameloader malware uses similar malspam lures and archive files as DarkTortilla. It also leverages .NET resources to store encoded DLLs and encrypted bitmap images and delivers similar commodity malware payloads. However, there is insufficient evidence as of this publication to definitively link these malware families or threat actors to DarkTortilla.\u003c/p\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eResearchers often overlook DarkTortilla and focus on its main payload. However, DarkTortilla is capable of evading detection, is highly configurable, and delivers a wide range of popular and effective malware. Its capabilities and prevalence make it a formidable threat.\u003c/p\u003e\n\u003ch2\u003eThreat indicators\u003c/h2\u003e\n\u003cp\u003eThe threat indicators in Table 9 can be used to detect activity related to DarkTortilla. The URL may contain malicious content, so consider the risks before opening it in a browser.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Indicator\n            \u003c/th\u003e\n            \u003cth\u003e\n            Type\n            \u003c/th\u003e\n            \u003cth\u003e\n            Context\n            \u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            59295e810bbdbfd64b8c41316ea13cae\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious spam delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            18391a58ee25a5cb8dfbf4d48517b5b0\u003cbr /\u003e\n            c66c5ae6\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious spam delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            981aa83b2d33cca994021197237ac5ee\u003cbr /\u003e\n            3ad3402f7d25f04f4e76985f4ec8744c\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious spam delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            84872b60072011eab8940f3b49bdb582\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            3da0f44d45a1d6676d52ce691d2f6d75\u003cbr /\u003e\n            4eb3097e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5e03556be992d23088a3c49d24c45b1c\u003cbr /\u003e\n            21cd275bffb4e536348e8128d50374b6\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            2d74df3ce221f6ff48d20bac158a3e78\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious document delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0563e691801251cdfd363eee31858ead\u003cbr /\u003e\n            5ee3928b\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious document delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            4f15b28c91fa0e8d0dd9e86481bad04f\u003cbr /\u003e\n            a34fcaf564d08de7c4c0c513fc6e122d\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious document delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            827258f907c5087f498c413d28e2203e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5e0cb6076002b11a39636e07a217b493\u003cbr /\u003e\n            835e5bce\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            55d7d9bd9d4a511417033b6c14ce93f9\u003cbr /\u003e\n            62d6a6e6c6414f0cb7e455baee1d3ab7\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            c37aae0ff565a2e44f144f837b750279\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            dde386911b091e894746b0f12d88a1fd\u003cbr /\u003e\n            18761fb9\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            a0b96236bfd79d2ebeadb8e3deb9448a\u003cbr /\u003e\n            f3ec8edd1ea9672b7ad4793934bb4c47\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            93fe6600c51014d7d6c2afedf8398f92\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            8f7340704745f3d53b284c101e93c42f\u003cbr /\u003e\n            8d4c2adc\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            45ef054bca2ae4d67e6623bf28ff75e5\u003cbr /\u003e\n            d178924602674c654e1b569aa74601cd\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            6e91ad0972e104a277505104abe39d1e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            261d699c3bb1a0042b88a45ed340f2d8\u003cbr /\u003e\n            6149464f\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            b3754c6ecc445e9a3b37c5ebe68adb96\u003cbr /\u003e\n            30ca4aa89a8e8515468f39ae8131f141\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            cd49f7c3c4e82dee128eedea9879bc33\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            619bf90a8ea219e34bf57dda1a322914\u003cbr /\u003e\n            b9fa1c81\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0a5dc3b6669cf31e8536c59fe1315918\u003cbr /\u003e\n            eb4ecfd87998445e2eeb8fed64bd2f2c\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            851816aa8cf45ba769f0d9420acfb3e5\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            4178d5efa388caf2d0ffd4539cf285b1\u003cbr /\u003e\n            de5ffab6\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            083acce46cb8cf35e37c778d1f4aee68\u003cbr /\u003e\n            14bca72d2874b793a47f9823f51df0fe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            f44695a8febb2a35576a59fa984629d2\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            37ec57e5da46dc1990941a1bb3ffab9e\u003cbr /\u003e\n            74db346a\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            53b3b37b7d1e40c80fcda2c424cd8373\u003cbr /\u003e\n            79ac2ce93023de6c22ba3e2d94679671\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            8d8c551dd572a1dc158de239b37eaa9a\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            6d4b4bcd107b09af37996c73a6448379\u003cbr /\u003e\n            a31aaac4\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5be86cfca25e295f88b5aab42a6f604d\u003cbr /\u003e\n            2f1bb97f3c73b01df664c137908e2ec4\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0f89a2015ed9c1be5522e27c00276e52\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla core processor (PVCore1)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5ad5b35f6cc093067c6f219f2d2107f4\u003cbr /\u003e\n            4248c5bb\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla core processor (PVCore1)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            93dd1202697dbaed9ef4f4707f262821\u003cbr /\u003e\n            2bf13aad096de29c14924b1dae1d6d5b\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla core processor (PVCore1)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0e362e7005823d0bec3719b902ed6d62\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla watchdog executable\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            590d860b909804349e0cdc2f1662b37b\u003cbr /\u003e\n            d62f7463\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla watchdog executable\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            2d0dc6216f613ac7551a7e70a798c22a\u003cbr /\u003e\n            ee8eb9819428b1357e2b8c73bef905ad\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla watchdog executable\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            https://pastebin.pl/view/raw/60b6b03b\n            \u003c/td\u003e\n            \u003ctd\u003e\n            URL\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla encoded core processor download\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 9. Indicators for this threat.\u003c/em\u003e\u003c/p\u003e\n\u003ch2\u003eReferences\u003c/h2\u003e\n\u003cp\u003eArntz, Pieter. \"Explained: Packer, Crypter, and Protector.\" Malwarebytes Labs. March 27, 2017. \u003ca href=\"https://blog.malwarebytes.com/cybercrime/malware/2017/03/explained-packer-crypter-and-protector/\"\u003ehttps://blog.malwarebytes.com/cybercrime/malware/2017/03/explained-packer-crypter-and-protector/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eHasherezade. \"Rainbows, Steganography and Malware in a new .NET cryptor.\" Malwarebytes Labs. March 30, 2016. \u003ca href=\"https://blog.malwarebytes.com/threat-analysis/2015/08/rainbows-steganography-and-malware-in-a-new-net-cryptor/\"\u003ehttps://blog.malwarebytes.com/threat-analysis/2015/08/rainbows-steganography-and-malware-in-a-new-net-cryptor/\u003c/a\u003e \u003c/p\u003e\n\u003cp\u003e\"RATs Crew.\" Hack Forums. June 21, 2021. \u003ca href=\"https://wiki.hackforums.net/RATs_Crew\"\u003ehttps://wiki.hackforums.net/RATs_Crew\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eGoSecure Titan Labs. \"New Malware \u0026lsquo;Gameloader' in Discord Malspam Campaign.\" GoSecure. November 2, 2021. \u003ca href=\"https://www.gosecure.net/blog/2021/11/02/new-malware-gameloader-in-discord-malspam-campaign-identified-by-gosecure-titan-labs/\"\u003ehttps://www.gosecure.net/blog/2021/11/02/new-malware-gameloader-in-discord-malspam-campaign-identified-by-gosecure-titan-labs/\u003c/a\u003e\u003c/p\u003e"},"author":[{"id":"d143bf9c-2048-4f78-a59f-64dbcba7f3dc","url":"http://uswest-www.secureworks.com/content/people/counter-threat-unit-research-team","name":"Counter Threat Unit Research Team","displayName":"Counter Threat Unit Research Team","fields":{"lastName":{"value":" "},"bio":{"value":"Secureworks Counter Threat Unit™ (CTU) researchers frequently serve as expert resources for the media, publish technical analyses for the security community, and speak about emerging threats at security conferences. Leveraging Secureworks’ advanced security technologies and a network of industry contacts, the CTU™ research team tracks threat actors and analyzes anomalous activity, uncovering new attack techniques and threats. This process enables CTU researchers to identify threats as they emerge and develop countermeasures that protect customers before damage can occur."},"firstName":{"value":"Counter Threat Unit Research Team"},"metaTitle":{"value":"Counter Threat Unit Research Team | Secureworks"},"noFollow":{"value":false},"excludeFromSearch":{"value":false},"noIndex":{"value":false},"openGraphTitle":{"value":"Counter Threat Unit Research Team | Secureworks"},"openGraphSiteName":{"value":"Secureworks"},"twitterCardType":{"id":"32f6a4e4-93dd-4a9c-aa60-cdedb0bedabb","url":"/sitecore/system/settings/feature/experience-accelerator/sitemetadata/enums/twitter-card-types/summary-card-with-large-image","name":"Summary Card with Large Image","displayName":"Summary Card with Large Image","fields":{"value":{"value":"summary_large_image"}}}}}],"publishedDate":{"value":"2022-08-17T02:00:00Z"},"lastUpdatedDate":{"value":"0001-01-01T00:00:00Z"},"displayDate":{"value":"0001-01-01T00:00:00Z"},"customTags":[{"id":"36eb03d6-7645-45a6-9715-b8c452d6a6e8","url":"http://cd/sitecore/content/shared/taxonomy/content-type/content-type---threat-analysis","name":"Content Type - Threat Analysis","displayName":"Content Type - Threat Analysis","fields":{"value":{"value":"Threat Analysis"}}},{"id":"0755cbd4-295d-4f10-8d4f-ce30adb25dba","url":"http://cd/sitecore/content/shared/taxonomy/topic/threat-intelligence","name":"Threat Intelligence","displayName":"Topic - Threat Intelligence","fields":{"value":{"value":"Threat Intelligence"}}},{"id":"d591aaba-1816-4bec-8a75-7388c3adb175","url":"http://cd/sitecore/content/shared/taxonomy/service/threat-hunting-assessment","name":"Threat Hunting Assessment","displayName":"Service - Secureworks Threat Hunting Assessment","fields":{"value":{"value":"Threat Hunting Assessment"}}},{"id":"4657b998-5773-410b-84b4-ab8bffb36f49","url":"http://cd/sitecore/content/shared/taxonomy/content-type/content-type---research","name":"Content Type - Research","displayName":"Content Type - Research","fields":{"value":{"value":"Research"}}}],"pageLocation":{"id":"2e57e396-bd9e-4829-8646-55dd117e548f","url":"/sitecore/content/shared/locations/research","name":"research","displayName":"/research","fields":{"value":{"value":"research"}}},"pageDesign":{"id":"2b9967b1-47cf-4c13-a2ea-6ee507433909","url":"/presentation/page-designs/research-article","name":"Research Article","displayName":"Research Article","fields":{"partialDesigns":{"value":"{5A1F0357-FC36-46A7-8236-A69E0E353F4A}|{2B412C03-2AF5-4F68-B8A4-4921D29B5DB4}|{ED6F2B34-AF34-4648-A828-ECBF550D950A}"}}},"openGraphTitle":{"value":"DarkTortilla Malware Analysis"},"openGraphDescription":{"value":"Learn how Secureworks CTU researchers have identified DarkTortilla samples delivering targeted malicious payloads, benign decoy documents, and executables."},"openGraphImageUrl":{"value":{"src":"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/darktortilla-malware-ta_800x800.png?h=800\u0026iar=0\u0026w=800\u0026hash=F572C79EF036740F86184BECC4377968","alt":"DarkTortilla Malware Analysis","width":"800","height":"800"}},"openGraphSiteName":{"value":"Secureworks"},"twitterCardType":{"id":"32f6a4e4-93dd-4a9c-aa60-cdedb0bedabb","url":"/sitecore/system/settings/feature/experience-accelerator/sitemetadata/enums/twitter-card-types/summary-card-with-large-image","name":"Summary Card with Large Image","displayName":"Summary Card with Large Image","fields":{"value":{"value":"summary_large_image"}}},"metaDescription":{"value":"Learn how Secureworks CTU researchers have identified DarkTortilla samples delivering targeted malicious payloads, benign decoy documents, and executables."}},"renderingParams":{"cacheClearingBehavior":"Clear on publish"}}},{"uid":"eba8c2f9-2974-4e2d-9453-83d4cbcecc6b","componentName":"ArticleTags","dataSource":"/sitecore/content/SW/swxp-rendering/Content/Articles/research/2022/darktortilla malware analysis","params":{"Tag Destination Page Url":"\u003clink text=\"\" anchor=\"\" linktype=\"internal\" class=\"\" title=\"\" target=\"\" querystring=\"\" id=\"{9CCE9D90-CF8F-4210-B503-5474D48B4928}\" /\u003e"},"fields":{"id":"8507d2d8-3e50-40a0-860a-1b403dd2bdaf","name":"darktortilla malware analysis","displayName":"darktortilla malware analysis","templateName":"Article Page","templateId":"{9F5E0978-58FB-40A6-8872-3E84B897AF67}","url":"/research/darktortilla-malware-analysis","searchPageUrl":"/research","fields":{"metaTitle":{"value":"DarkTortilla Malware Analysis"},"noFollow":{"value":false},"excludeFromSearch":{"value":false},"noIndex":{"value":false},"gated":{"value":false},"gatedVideoType":{"id":"971f4491-d4a6-42bf-abc8-9d305797ca0c","url":"/sitecore/content/shared/lookups/video-platforms/vimeo","name":"Vimeo","displayName":"Vimeo","fields":{"value":{"value":"vimeo"}}},"eyebrow":{"value":"Threat Analysis"},"image":{"value":{"src":"/-/media/images/thumbnails/blog/thing-keyboard-02.jpg?h=722\u0026iar=0\u0026w=1284\u0026hash=3EB40DA8D7DC106CD65E005A469CF61C","alt":"keyboard","width":"1284","height":"722"}},"title":{"value":"DarkTortilla Malware Analysis"},"body":{"value":"\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eDarkTortilla is a complex and highly configurable .NET-based \u003ca href=\"https://blog.malwarebytes.com/cybercrime/malware/2017/03/explained-packer-crypter-and-protector/\"\u003ecrypter\u003c/a\u003e that has \u003ca href=\"https://blog.malwarebytes.com/threat-analysis/2015/08/rainbows-steganography-and-malware-in-a-new-net-cryptor/\"\u003epossibly\u003c/a\u003e been active since at least August 2015. It typically delivers popular information stealers and remote access trojans (RATs) such as AgentTesla, AsyncRat, NanoCore, and RedLine. While it appears to primarily deliver commodity malware, Secureworks\u0026reg; Counter Threat Unit\u0026trade; (CTU) researchers identified DarkTortilla samples delivering targeted payloads such as Cobalt Strike and Metasploit. It can also deliver \"addon packages\" such as additional malicious payloads, benign decoy documents, and executables. It features robust anti-analysis and anti-tamper controls that can make detection, analysis, and eradication challenging.\u003c/p\u003e\n\u003cp\u003eFrom January 2021 through May 2022, an average of 93 unique DarkTortilla samples per week were uploaded to the VirusTotal analysis service. Code similarities suggest possible links between DarkTortilla and other malware: a \u003ca href=\"https://github.com/malwares/Crypter/tree/master/%5BC%23%5D%20The%20RATs%20Crew%20Crypter\"\u003ecrypter\u003c/a\u003e operated by the \u003ca href=\"https://wiki.hackforums.net/RATs_Crew\"\u003eRATs Crew\u003c/a\u003e threat group, which was active between 2008 and 2012, and the \u003ca href=\"https://www.gosecure.net/blog/2021/11/02/new-malware-gameloader-in-discord-malspam-campaign-identified-by-gosecure-titan-labs/\"\u003eGameloader\u003c/a\u003e malware that emerged in 2021.\u003c/p\u003e\n\u003ch2\u003eDelivery\u003c/h2\u003e\n\u003cp\u003eCTU\u0026trade; analysis of VirusTotal samples revealed numerous campaigns delivering DarkTortilla via malicious spam (malspam). The emails typically use a logistics lure and include the malicious payload in an archive attachment with file types such as .iso, .zip, .img, .dmg, and .tar. The language of the email message is customized to the victim, and CTU researchers observed samples in English, German, Romanian, Spanish, Italian, and Bulgarian. Figure 1 shows a German-language malspam \u003ca href=\"https://www.virustotal.com/gui/file/981aa83b2d33cca994021197237ac5ee3ad3402f7d25f04f4e76985f4ec8744c\"\u003esample\u003c/a\u003e. The redacted filename of the attached \u003ca href=\"https://en.wikipedia.org/wiki/Optical_disc_image\"\u003eISO image\u003c/a\u003e archive file (.iso) includes the name of the organization the email was sent from. It is unclear if that organization was compromised. The archive file contains a single executable with the same filename but the .exe extension. This executable is a DarkTortilla initial loader \u003ca href=\"https://www.virustotal.com/gui/file/5e03556be992d23088a3c49d24c45b1c21cd275bffb4e536348e8128d50374b6\"\u003esample\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"597\" width=\"544\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-01.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 1. DarkTortilla malspam containing malicious archive attachment. (The German text translates to \"Good morning, Please give us your best price offer for our attached order. Awaiting your kind reply. Kind regards\"). (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eCTU researchers also identified malicious documents (maldocs) delivering DarkTortilla. Most of these maldocs embed the DarkTortilla initial loader executable as a Packager Shell Object. Figure 2 shows a \u003ca href=\"https://www.virustotal.com/gui/file/4f15b28c91fa0e8d0dd9e86481bad04fa34fcaf564d08de7c4c0c513fc6e122d\"\u003esample\u003c/a\u003e that prompts the victim to double-click the embedded Packager Shell Object, which executes the payload. Inspection of the Packager Shell Objects properties revealed that it is an executable named \u003ca href=\"https://www.virustotal.com/gui/file/55d7d9bd9d4a511417033b6c14ce93f962d6a6e6c6414f0cb7e455baee1d3ab7\"\u003eRFQ-010129H.exe\u003c/a\u003e, which is a DarkTortilla initial loader sample. Other analyzed maldocs use different approaches, such as leveraging embedded macros to automatically execute the Packager Shell Object when a victim opens the document and enables macros.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"658\" width=\"800\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-02.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 2. Maldoc sample delivering DarkTortilla. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch2\u003eHigh-level execution flow\u003c/h2\u003e\n\u003cp\u003eDarkTortilla consists of two components that rely on each other to successfully detonate payloads: a .NET-based executable (initial loader) and a .NET-based DLL (core processor). The typical high-level execution flow for a DarkTortilla payload starts with execution of the initial loader. The initial loader then retrieves its encoded core processor. While the encoded core processor is typically embedded within the .NET resources of the initial loader, CTU researchers identified initial loaders that retrieved their core processor from \u003ca href=\"https://cyberhoot.com/cybrary/paste/\"\u003epublic paste sites\u003c/a\u003e such as pastebin . pl, textbin . net, and paste . ee.\u003c/p\u003e\n\u003cp\u003eThe initial loader decodes, loads, and executes the core processor. When executed, the core processor extracts, decrypts, and parses its configuration. The encrypted configuration is stored within the .NET resources of the initial loader as bitmap images. Depending on DarkTortilla's configuration, the core processor performs the following actions:\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003eDisplays a fake message box\u003c/li\u003e\n    \u003cli\u003ePerforms anti-virtual machine checks\u003c/li\u003e\n    \u003cli\u003ePerforms anti-sandbox checks\u003c/li\u003e\n    \u003cli\u003eImplements persistence\u003c/li\u003e\n    \u003cli\u003eMigrates execution to the Windows %TEMP% directory by using the \"Melt\" configuration element\u003c/li\u003e\n    \u003cli\u003eProcesses addon packages\u003c/li\u003e\n    \u003cli\u003eMigrates execution to its install directory\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe core processor then injects and executes its configured main payload within the context of the configured subprocess. Finally, if configured, the core processor implements anti-tamper controls to prevent interference with execution of the initial loader, core processor, injected subprocess, and WatchDog executable.\u003c/p\u003e\n\u003cp\u003eFigure 3 illustrates this high-level DarkTortilla execution flow.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"775\" width=\"622\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-03.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 3. High-level execution flow for DarkTortilla infection. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch2\u003eInitial loader\u003c/h2\u003e\n\u003cp\u003eInitial loader samples analyzed by CTU researchers were obfuscated using the \u003ca href=\"https://marketplace.visualstudio.com/items?itemName=DeepSeaObfuscator.DeepSeaObfuscator\"\u003eDeepSea .NET code obfuscator\u003c/a\u003e. As a result, many aspects of the original code have been altered to thwart analysis. For example, namespace, class, function, and property names were renamed from their original descriptive values to random characters. Figure 4 shows an example of these obfuscated values within the code decompiled by the \u003ca href=\"https://github.com/dnSpyEx/dnSpy\"\u003ednSpy\u003c/a\u003e .NET analysis tool.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"384\" width=\"368\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-04.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 4. Obfuscated DarkTortilla initial loader sample. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eIn addition to name obfuscation, DeepSea applies \u003ca href=\"http://tigress.cs.arizona.edu/transformPage/docs/flatten/index.html\"\u003eswitch dispatch control flow obfuscation\u003c/a\u003e to DarkTortilla's initial loader. This technique restructures the original linear code into switch statements that transfer execution in a seemingly unpredictable pattern, making analysis difficult. Figure 5 shows a switch statement at the entry point of a DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/a0b96236bfd79d2ebeadb8e3deb9448af3ec8edd1ea9672b7ad4793934bb4c47\"\u003esample\u003c/a\u003e. In this example, the value stored in the \"num\" variable controls which code gets executed next. This value is obfuscated and is often the result of a conditional or mathematical expression calculated at runtime, such as \"\u003ca href=\"https://en.wikipedia.org/wiki/%3F:\"\u003e((!flag) ? 15 : 9)\u003c/a\u003e\" or \"\u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.math.abs?view=net-6.0#system-math-abs(system-int32)#system-math-abs(system-int32)\"\u003eMath.Abs(num2 * 25 * 25)\u003c/a\u003e\".\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"533\" width=\"420\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-05.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 5. Switch dispatch control flow obfuscation applied to DarkTortilla initial loader. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader stores DarkTortilla's encrypted configuration as bitmap images. Figure 6 lists the partial resource section of one \u003ca href=\"https://www.virustotal.com/gui/file/b3754c6ecc445e9a3b37c5ebe68adb9630ca4aa89a8e8515468f39ae8131f141\"\u003esample\u003c/a\u003e consisting of over 700 of these images.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"573\" width=\"763\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-06.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 6. Encrypted configuration stored as bitmap images within the .NET resources of DarkTortilla initial loader. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader's execution flow typically starts by checking for internet connectivity by issuing HTTP GET requests. In samples that implement this check, the initial loader attempts to retrieve content from google . com, bing . com, or both. Some \u003ca href=\"https://www.virustotal.com/gui/file/45ef054bca2ae4d67e6623bf28ff75e5d178924602674c654e1b569aa74601cd\"\u003esamples\u003c/a\u003e store the URLs in the executable as plain text (see Figure 7), but most samples encode them. If the check fails, the initial loader retries the request(s) until all are successful.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"324\" width=\"594\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-07.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 7. Internet connectivity check in DarkTortilla initial loader. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader generates a 16-byte key to decode the core processor. This key is based on an initial hard-coded value multiplied by the index value of its location in the destination array. Because the values are stored as single bytes, the maximum value for an element in the array is 0xFF (255 decimal). For example, the decode key array for an initial hard-coded value of 0x6E (110 decimal) is [0x00,0x6E,0xDC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF].\u003c/p\u003e\n\u003cp\u003eThe initial loader then retrieves the encoded core processor data. This data commonly resides within the .NET resources of the initial loader binary. Figure 8 shows encoded core processor data residing within the \"pnj\" .NET resource of a DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/45ef054bca2ae4d67e6623bf28ff75e5d178924602674c654e1b569aa74601cd\"\u003esample\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"756\" width=\"1017\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-08.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 8. Encoded core processor data stored within the .NET resources of DarkTortilla initial loader. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader decodes the core processor data by applying the following algorithm to each byte:\u003c/p\u003e\n\n\u003cpre\u003e\tenc_byte ^ (dec_key_arr[idx % len(dec_key_arr)] ^ (idx + (seed_byte % \n\tlen(dec_key_arr)) \u0026amp; seed_byte)\n\u003c/pre\u003e\n\n\u003cul\u003e\n    \u003cli\u003eenc_byte: The core processor byte array value being decoded\u003c/li\u003e\n    \u003cli\u003eidx: The encoded byte index in the core processor byte array\u003c/li\u003e\n    \u003cli\u003edec_key_arr: The generated 16-byte decode key byte array\u003c/li\u003e\n    \u003cli\u003eseed_byte: The fourth byte of the 16-byte decode key byte array\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe initial loader loads the decoded core processor assembly code and executes its pre-determined entry point function.\u003c/p\u003e\n\u003ch3\u003eInitial loader variant with externally hosted core processor\u003c/h3\u003e\n\u003cp\u003eInitial loader variants that retrieve the encoded core processor from public paste sites first decode the URL where the core processor is hosted. The encoding logic applied to the URL varies across analyzed DarkTortilla samples, making analysis and detection difficult. Figure 9 shows a DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/0a5dc3b6669cf31e8536c59fe1315918eb4ecfd87998445e2eeb8fed64bd2f2c\"\u003esample\u003c/a\u003e that encodes the URL (https: //pastebin . pl/view/raw/60b6b03b) by prepending and appending random text.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"408\" width=\"735\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-09.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 9. DarkTortilla initial loader variant that retrieves encoded core processor data from public paste site. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader retrieves an encoded string hosted at the decoded URL. This string represents the encoded core processor data. The string consists of fake XML tags, integer values encoded with a \u003ca href=\"https://en.wikipedia.org/wiki/Caesar_cipher\"\u003eshift cipher\u003c/a\u003e, and delimiters comprised of random letters (see Figure 10). The downloaded data is stored in memory and is never saved to the filesystem.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"476\" width=\"750\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-10.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 10. Encoded DarkTortilla core processor data hosted on public paste site. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader decodes the string by first removing the fake XML tags. The string is converted into an array of integers by replacing the random letter character delimiters with a consistent letter and then using that letter to split the string into integers. The last step is to iterate through the integer array and subtract a pre-defined value. This value changes across samples.\u003c/p\u003e\n\u003cp\u003eIn the Figure 10 example (\u0026lt;xml\u0026gt;1002k1015U1069k925E928s925U925E925g929E925\u0026hellip;\u0026lt;/xml\u0026gt;), the consistent letter delimiter is \"k\" and the pre-defined subtracted value is 925:\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003eRemove XML tags: 1002k1015U1069k925E928s925U925E925g929E925\u0026hellip;\u003c/li\u003e\n    \u003cli\u003eReplace random letters with consistent character: 1002k1015k1069k925k928k925k925k925k929k925\u0026hellip;\u003c/li\u003e\n    \u003cli\u003eSplit into integer array: [1002, 1015, 1069, 925, 928, 925, 925, 925, 929, 925, \u0026hellip;]\u003c/li\u003e\n    \u003cli\u003eSubtract pre-defined value from each integer: [77, 90, 144, 0, 3, 0, 0, 0, 4, 0, \u0026hellip;]\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThe hex representation of the final integer array for this example is [4D, 5A, 90, 00, 03, 00, 00, 00, 04, 00, \u0026hellip;]. This decoded data is the core processor DLL (see Figure 11).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"227\" width=\"700\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-11.png\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 11. Decoded DarkTortilla core processor DLL. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch2\u003eCore processor\u003c/h2\u003e\n\u003cp\u003eThe core processor contains DarkTortilla's primary functionality. From at least June 2020 to March 2022, the malware author transitioned through a limited number of filenames for this DLL that appeared to relate to a function or purpose (Deserialize.dll, SHCore1.dll, \u003ca href=\"https://www.virustotal.com/gui/file/93dd1202697dbaed9ef4f4707f2628212bf13aad096de29c14924b1dae1d6d5b\"\u003ePVCore1.dll\u003c/a\u003e, and SHCore2.dll). In March 2022, the names began to change more frequently to seemingly random names (e.g., BRIN.dll, UKRUSAIN.dll, KNIFALL.dll, NullSBAS.dll).\u003c/p\u003e\n\u003ch3\u003eConfiguration processing\u003c/h3\u003e\n\u003cp\u003eThe core processor identifies the following resources in the initial loader that are associated with the encrypted configuration:\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003eThe bitmap image resource(s) containing the encrypted configuration data\u003c/li\u003e\n    \u003cli\u003eThe binary resource specifying the total number of images to process\u003c/li\u003e\n    \u003cli\u003eThe resource folder containing these images and binary resources\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe names of these resources are calculated using the compile timestamp listed in the initial loader (which is not the file's actual compile timestamp) and two hard-coded values that represent an initialization value and the length of the resource name. The hard-coded initialization and name length values were consistent across all DarkTortilla samples analyzed by CTU researchers (see Table 1).\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003eInitial loader resource\u003c/th\u003e\n            \u003cth\u003eInitialization value\u003c/th\u003e\n            \u003cth\u003eResource name length value\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Resource folder\n            \u003c/td\u003e\n            \u003ctd\u003e\n            5\n            \u003c/td\u003e\n            \u003ctd\u003e\n            12\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Image count file\n            \u003c/td\u003e\n            \u003ctd\u003e\n            80\n            \u003c/td\u003e\n            \u003ctd\u003e\n            8\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Image file\n            \u003c/td\u003e\n            \u003ctd\u003e\n            20\n            \u003c/td\u003e\n            \u003ctd\u003e\n            8\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 1. Values used to derive initial loader resource names.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThese names are calculated via the following process:\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003eDivide the compile timestamp by \u0026lt;\u003cem\u003einitialization value\u003c/em\u003e\u0026gt;.\u003c/li\u003e\n    \u003cli\u003eRound the result using the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.math.round?view=net-6.0#system-math-round(system-decimal)#system-math-round(system-decimal)\"\u003eMath.Round()\u003c/a\u003e function.\u003c/li\u003e\n    \u003cli\u003ePass the result to the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.random\"\u003eRandom.Random()\u003c/a\u003e function as a seed value. By using a precalculated seed value, the malware author can generate a predictable 16-byte value.\u003c/li\u003e\n    \u003cli\u003eConvert the 16-byte value to a GUID using the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.guid\"\u003eGuid.Guid()\u003c/a\u003e function, which transposes the byte order.\u003c/li\u003e\n    \u003cli\u003eRemove dash characters (\u0026lsquo;-') added during the GUID conversion.\u003c/li\u003e\n    \u003cli\u003eTruncate the value to \u0026lt;\u003cem\u003eresource name length\u003c/em\u003e\u0026gt; characters.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eFor example, the following calculation generates the resource folder name of a \u003ca href=\"https://www.virustotal.com/gui/file/b3754c6ecc445e9a3b37c5ebe68adb9630ca4aa89a8e8515468f39ae8131f141\"\u003esample\u003c/a\u003e with a compile timestamp of \"Sun May 26 23:57:08 1985\" (integer: 486014228):\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003e486014228 / 5 = 97202845.6\u003c/li\u003e\n    \u003cli\u003eMath.Round(97202845.6) = 97202846\u003c/li\u003e\n    \u003cli\u003eRandom.Random(97202846) = d00bee25fa9dc9024fdf632727286708\u003c/li\u003e\n    \u003cli\u003eGuid.Guid(d00bee25fa9dc9024fdf632727286708) = 25ee0bd0-9dfa-02c9-4fdf-632727286708\u003c/li\u003e\n    \u003cli\u003eRemove dashes = 25ee0bd09dfa02c94fdf632727286708\u003c/li\u003e\n    \u003cli\u003eTruncate to 12 characters = 25ee0bd09dfa\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eApplying the same calculation to the other components reveals that the image count resource name for this sample is \"cd6935eb\" and the image base name is \"d390ea32\". The bitmap-formatted image names follow the pattern \u0026lt;\u003cem\u003eimage_base_name\u003c/em\u003e\u0026gt;\u0026lt;\u003cem\u003eimage_index\u003c/em\u003e\u0026gt;, where the \u0026lt;\u003cem\u003eimage_index\u003c/em\u003e\u0026gt; value ranges from 0 to the value specified in the image count resource. In this sample, the image count resource value is 0x2D4 (integer: 724), which means DarkTortilla attempts to process 725 bitmap-formatted images with the names d390ea32\u003cstrong\u003e0\u003c/strong\u003e, d390ea32\u003cstrong\u003e1\u003c/strong\u003e, d390ea32\u003cstrong\u003e2\u003c/strong\u003e, \u0026hellip;, d390ea32\u003cstrong\u003e723\u003c/strong\u003e, d390ea32\u003cstrong\u003e724\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eTo extract the encrypted configuration, the core processor iterates through each of the image resources in order, extracts the pixel data, and concatenates the pixel data into a byte array (see Figure 12).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"378\" width=\"783\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-12.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 12. Logic for extracting encrypted configuration from bitmap images. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe resulting byte array is decrypted using the \u003ca href=\"https://en.wikipedia.org/wiki/Advanced_Encryption_Standard\"\u003eRijndael\u003c/a\u003e cipher (also known as the Advanced Encryption Standard (AES)) with Electronic Code Book (ECB) block cipher mode and \u003ca href=\"https://en.wikipedia.org/wiki/Padding_(cryptography)#ISO_10126\"\u003eISO10126 padding\u003c/a\u003e configured. The ISO10126 \u003ca href=\"https://www.iso.org/standard/18114.html\"\u003estandard\u003c/a\u003e was withdrawn in 2007, so the use of this padding could indicate that DarkTortilla's origins date back to 2007 or earlier. The key used to decrypt this data is stored as the hard-coded integer array [81, 42, 59, 7, 27, 70, 83, 13, 71, 75, 17, 9, 39, 64, 3, 2] (see Figure 13).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"396\" width=\"800\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-13.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 13. Hard-coded key to decrypt DarkTortilla configuration. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eDarkTortilla parses the decrypted configuration data into a structure so that its elements can be easily referenced. Table 2 lists the potential configuration elements contained within DarkTortilla's decrypted configuration. Entries in \u003cstrong\u003ebold\u003c/strong\u003e indicate configuration elements that were consistently present in all samples analyzed by CTU researchers.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Key\u003c/th\u003e\n            \u003cth\u003e\n            Type\u003c/th\u003e\n            \u003cth\u003e\n            Description\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Installation%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eInstall DarkTortilla and implement persistence\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationReg%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Registry key used for persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationKey%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Registry value used for persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationDirectory%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Root install directory\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationFolder%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Subfolder name within the root install directory\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationFileName%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Filename for the initial loader executable within the root subfolder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %StartupFolder%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            bool\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Enable Startup folder persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %Hidden%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            bool\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Enable \"Hidden\" registry persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %HiddenReg%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \"Hidden\" registry key used for persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %HiddenKey%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \"Hidden\" registry value used for persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Message%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eDisplay fake message box\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageIcon%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Fake message box icon ID\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageButton%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Fake message box button ID\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageTitle%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Fake message box title\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageBody%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Fake message box message\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageRepetition%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            bool\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Display fake message box even if installed\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%VM%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ePerform anti-virtual machine checks\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%SB%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ePerform anti-sandbox checks\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%InjectionPersist%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eEnable anti-tamper control for running processes\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%StartupPersist%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eEnable anti-tamper control for startup persistence\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Melt%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eMigrate initial loader execution to the Windows %TEMP% directory\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MeltName%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Filename for the initial loader executable within the Windows %TEMP% directory\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %WatchDogName%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Filename for the anti-tamper WatchDog executable\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %WatchDogBytes%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            byte[]\n            \u003c/td\u003e\n            \u003ctd\u003e\n            WatchDog byte array\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Compress%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eIndicates if payloads are zlib-compressed\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Delay%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eint\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eNumber of seconds to delay execution within the core processor\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%HostIndex%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eint\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eID of the target subprocess name to use for main/addon payload injection\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%MainFile%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebyte[]\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eMain payload byte array\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%FilesNum%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eint\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eNumber of addon packages to process\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.D\n            \u003c/td\u003e\n            \u003ctd\u003e\n            byte[]\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (data): Payload byte array\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.N\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (name): Filename\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.P\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (path): Target install folder (special folder ID)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.F\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (folder): Target install subfolder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.O\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (operation): Execution type (disk, memory, none)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.T\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (time): Execution delay (seconds)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.R\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (run): Payload execution criterion\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 2. DarkTortilla configuration elements. Bold text indicates elements that appear in all analyzed samples.\u003c/em\u003e\u003c/p\u003e\n\u003ch3\u003eFake message display\u003c/h3\u003e\n\u003cp\u003eDarkTortilla can be configured to display a message box when executed. The threat actor can customize message box characteristics such as the display message, message box title, and the \u003ca href=\"https://docs.microsoft.com/en-us/office/vba/language/reference/user-interface-help/msgbox-constants\"\u003eicon and button configuration\u003c/a\u003e. Threat actors use fake message boxes to make victims think that execution failed or that a legitimate application is loading and installing. Table 3 lists the configuration elements and values in one DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/083acce46cb8cf35e37c778d1f4aee6814bca72d2874b793a47f9823f51df0fe/\"\u003esample\u003c/a\u003e.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Configuration element\u003c/th\u003e\n            \u003cth\u003e\n            Assigned value as it appears in the configuration\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %Message%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageIcon%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            16\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageButton%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            0\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageTitle%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            .Net Framework Initialization Error\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageBody%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            To run this application, you first must install one of the following version of the .Net Framework:\\r\\n.Net Framework, Version = 4.8.0\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageRepetition%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 3. Fake message box-related configuration elements.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eFigure 14 shows the message box for the DarkTortilla sample configured with the values in Table 3. The %MessageRepetition% configuration element controls whether the message box will continue to be displayed upon execution after DarkTortilla is installed and persistent on the compromised system.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"185\" width=\"464\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-14.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 14. Fake message box. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch3\u003e\"Melt\" execution migration\u003c/h3\u003e\n\u003cp\u003eIf the %Melt% configuration element is set to true, the core processor moves the initial loader executable to the Window's %TEMP% directory. It uses the %MeltName% configuration element value as the executable filename (e.g., java.exe, PDF.exe, cookies.exe). The core processor runs the new executable and then terminates the original initial loader executable. However, the %TEMP% directory may not be the final destination for the initial loader. The executable could migrate again if the %Installation% configuration element is set to true.\u003c/p\u003e\n\u003ch3\u003eInstallation\u003c/h3\u003e\n\u003cp\u003eThe %Installation% configuration element controls whether DarkTortilla installs itself on a system. If set to true, the core processor moves the current DarkTortilla executable into the directory specified by the configuration. Table 4 lists the values stored in one DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/53b3b37b7d1e40c80fcda2c424cd837379ac2ce93023de6c22ba3e2d94679671\"\u003esample\u003c/a\u003e.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Configuration element\u003c/th\u003e\n            \u003cth\u003e\n            Value\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationDirectory%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            38\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationFolder%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            WindowsPowerShell\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationFileName%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            PowerShellInfo.exe\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 4. Installation configuration elements with example values.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe integer value assigned to the %InstallationDirectory% configuration element represents a \u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/shell/csidl\"\u003eCSIDL\u003c/a\u003e value associated with a special folder on the system. In Table 4, the value 38 corresponds to the Windows \u003ca href=\"https://www.magnumdb.com/search?q=CSIDL_PROGRAM_FILES\"\u003eProgram Files\u003c/a\u003e directory. Based on this configuration, the full install path and filename for this DarkTortilla sample is \"C:\\Program Files\\WindowsPowerShell\\PowerShellInfo.exe\".\u003c/p\u003e\n\u003cp\u003eTo install, the core processor terminates the currently running DarkTortilla executable. It copies the executable to the configured installation path and filename, and then executes the installed executable via \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.process.start?view=net-6.0\"\u003eProcess.Start()\u003c/a\u003e.\u003c/p\u003e\n\u003ch3\u003ePersistence\u003c/h3\u003e\n\u003cp\u003ePersistence is controlled by the %Installation% configuration element in combination with the %Hidden% and %StartupFolder% configuration elements. DarkTortilla uses the logic in Table 5 to determine the persistence type.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            %Hidden%\u003c/th\u003e\n            \u003cth\u003e\n            %StartupFolder%\u003c/th\u003e\n            \u003cth\u003e\n            Persistence type\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Use registry HKCU Run key\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Windows startup folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Windows startup folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Use registry HKCU Winlogon key\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 5. Configuration elements determining the persistence type.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eA bug in the code causes the %StartupFolder% logic to override the %Hidden% logic if both configuration elements are set to true. The malware author erroneously used an \"if\" statement instead of \"else if\" in the logic setting the persistence type (see Figure 15).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"313\" width=\"800\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-15.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 15. Error in persistence code. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eFor Windows startup folder persistence, the core processor uses the \u003ca href=\"https://docs.microsoft.com/en-us/troubleshoot/windows-client/admin-development/create-desktop-shortcut-with-wsh\"\u003eWshShortcut\u003c/a\u003e COM object to create a .lnk shortcut file in the Windows startup folder. This file points to the configured installation path and filename of DarkTortilla's initial loader executable (see Figure 16).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"196\" width=\"685\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-16.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 16. COM object that drops shortcut file in Windows startup folder for persistence. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eDarkTortilla features standard and hidden techniques for implementing persistence via the Windows registry. Both options implement persistence in the HKEY_CURRENT_USER (HKCU) hive as a hard-coded value in the core processor code. This persistence results in the installed DarkTortilla initial loader executable being run every time the user logs in.\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003eFor standard registry persistence, the core processor uses the %InstallationReg% and %InstallationKey% values to set the target key/value combination. In every sample analyzed by CTU researchers where standard persistence was configured, the %InstallationReg% value was \"Software\\Microsoft\\Windows\\CurrentVersion\\Run\". The value stored in %InstallationKey% varied across samples (e.g., \"Updates\", \"svchost\", \"Runtime Broker\").\u003c/li\u003e\n    \u003cbr /\u003e\n    \u003cli\u003eFor hidden registry persistence, the core processor uses the %HiddenReg% and %HiddenKey% values to set the target key/value combination. In every sample analyzed by CTU researchers where hidden persistence was configured, the %InstallationReg% value was \"Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" and the value stored in %HiddenKey% was \"Shell\". Prior to setting the hidden persistence registry value, DarkTortilla's core processor prepends the installed initial loader executable path with the Windows shell value retrieved from the HKEY_LOCAL_MACHINE (HKLM) hive. This value is typically \"explorer.exe\", resulting in \"explorer.exe,\u0026lt;\u003cem\u003einstalled_darktortilla_exe_path\u003c/em\u003e\u0026gt;\". For example, if the configured install path and executable name for a DarkTortilla sample is \"C:\\Program Files\\WindowsPowerShell\\PowerShellInfo.exe\", then the HKCU Winlogon\\Shell registry entry is \"explorer.exe,C:\\Program Files\\WindowsPowerShell\\PowerShellInfo.exe\". To create these registry values, the core processor executes the following command via Process.Start():\u003cbr /\u003e\n    \u003cbr /\u003e\n    \u003cpre\u003e\tcmd.exe /c REG ADD \"HKCU\\\u003cem\u003e\u0026lt;configured_reg_key\u0026gt;\u003c/em\u003e\" /f /v \"\u003cem\u003e\u0026lt;configured_reg_val\u0026gt;\u003c/em\u003e\" /t\n\tREG_SZ /d \"\u003cem\u003e\u0026lt;installed_darktortilla_exe_path\u0026gt;\u003c/em\u003e\"\n\t\u003c/pre\u003e\n    \u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eRunPE process injection\u003c/h3\u003e\n\u003cp\u003eDarkTortilla can execute its payloads using process injection. With this method, the payload resides only in memory and never accesses the filesystem. The %HostIndex% configuration element defines which legitimate process to target for process injection (see Table 6).\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            %HostIndex% value\u003c/th\u003e\n            \u003cth\u003e\n            Corresponding target process\u003c/th\u003e\n            \u003cth\u003e\n            Source directory\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0 \u003cem\u003e(or any numeric value that is not 1-6)\u003c/em\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Initial loader executable's name\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u0026nbsp;\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            1\n            \u003c/td\u003e\n            \u003ctd\u003e\n            AppLaunch.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            2\n            \u003c/td\u003e\n            \u003ctd\u003e\n            svchost.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            System32 folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            3\n            \u003c/td\u003e\n            \u003ctd\u003e\n            RegAsm.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            4\n            \u003c/td\u003e\n            \u003ctd\u003e\n            InstallUtil.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5\n            \u003c/td\u003e\n            \u003ctd\u003e\n            mscorsvw.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            6\n            \u003c/td\u003e\n            \u003ctd\u003e\n            AddInProcess32.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 6. %HostIndex% values and corresponding target processes used for payload injection.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003ePrior to setting the target process name, the core processor checks for active processes named \"avp\". The avp.exe process is part of the Kaspersky Anti-Virus suite. If the core processor detects this process, it overrides the %HostIndex% value and sets the target process name to the name of the initial loader executable. When the %HostIndex% value is 1-6, the core processor attempts to copy the legitimate target executable file to the Windows %TEMP% directory.\u003c/p\u003e\n\u003cp\u003eDarkTortilla uses a .NET-based DLL named \"RunPe6\" for process injection. This DLL is embedded within the core processor as an encoded byte array (see Figure 17).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"403\" width=\"519\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-17.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 17. Encoded RunPe6 DLL stored as byte array within DarkTortilla core processor. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eTo decode each byte, the core processor uses the following equation with \u003cem\u003e\u0026lt;xor_key\u0026gt;\u003c/em\u003e as the hard-coded integer array [45, 89, 125, 69, 250, 222, 111] and \u003cem\u003e\u0026lt;seed\u0026gt;\u003c/em\u003e as the hard-coded integer 99:\u003c/p\u003e\n\u003cpre\u003edecoded_byte = encoded_byte ^ (\u003cem\u003e\u0026lt;xor_key\u0026gt;\u003c/em\u003e[(idx * \u003cem\u003e\u0026lt;seed\u0026gt;)\u003c/em\u003e % xor_key.Length])\u003c/pre\u003e\n\u003cbr /\u003e\n\u003cp\u003eThe core processor loads RunPe6 and calls its \u0026lsquo;Runn' function to execute the malicious payload within the context of the configured target subprocess. The core processor does not directly reference this function. Rather, it references the index values for the target class (18) and function (0). Figure 18 displays PowerShell code developed by CTU researchers to replicate the core processor's target function identification logic.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"167\" width=\"561\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-18.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 18. Custom PowerShell script to identify RunPe6 function used for payload process injection. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch3\u003eAddon package processing\u003c/h3\u003e\n\u003cp\u003eDarkTortilla can be configured with zero or more payloads known as addon packages. These addons are in addition to the main payload that DarkTortilla is tasked with delivering. Observed addons include benign decoy documents, legitimate executables, keyloggers, clipboard stealers, cryptocurrency miners, and additional DarkTortilla payloads. Each addon package possesses a set of configuration elements composed of a static \"F\" character, an integer \"{0}\" that represents the index value indicating the position of the addon in the package array, and a character representing a particular property associated with the package.\u003c/p\u003e\n\u003cp\u003eThe %FilesNum% configuration element defines the number of addon packages to process. For example, if the %FilesNum% value is 3, the configuration elements are F.0.\u003cem\u003e\u0026lt;addon property\u0026gt;\u003c/em\u003e, F.1.\u003cem\u003e\u0026lt;addon property\u0026gt;\u003c/em\u003e, and F.2.\u003cem\u003e\u0026lt;addon property\u0026gt;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eThe F.{0}.D (data) configuration element contains the addon package payload binary data. The core processor checks the %Compress% configuration element to determine if the stored data is compressed. If the element is set to true, the core processor decompresses the data before processing it.\u003c/p\u003e\n\u003cp\u003eThe core processor next determines if it should process the addon package by inspecting the initial loader's installation state and the addon package's F.{0}.R (run) value. Table 7 lists the criteria and their result.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Initial loader running from install directory\u003c/th\u003e\n            \u003cth\u003e\n            F.{0}.R (run) value\u003c/th\u003e\n            \u003cth\u003e\n            Process addon package?\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Yes\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            No\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            No\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Yes\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 7. Criteria for processing addon package.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eIf configured to process the addon package, the core processor inspects the F.{0}.O (operation) configuration element value to determine how to execute its payload. This value can be any integer but is typically 0, 1, or 2. If the value is set to 0 or any value other than 1 or 2, the core processor saves the payload to disk but does not execute it. If the value is 1, the core processor saves the payload to disk and executes it. If the value is 2, the core processor executes the payload in memory via the same RunPE process injection technique and target process it uses for the main payload.\u003c/p\u003e\n\u003cp\u003eIf the payload is saved to disk, the location is specified by the addon path (F.{0}.P), subfolder (F.{0}.F), and filename (F.{0}.N) configuration elements. The F.{0}.P integer value represents a CSIDL value associated with a special folder on the system. For example, the value 2 corresponds to the Windows Start Menu/Programs folder. The full path of an analyzed \u003ca href=\"https://www.virustotal.com/gui/file/5be86cfca25e295f88b5aab42a6f604d2f1bb97f3c73b01df664c137908e2ec4\"\u003esample\u003c/a\u003e containing a F.{0}.P value of 2, an empty string for F.{0}.F, and a value of sertif.exe for F.{0}.N is \"C:\\Users\\\u003cem\u003e\u0026lt;username\u0026gt;\u003c/em\u003e\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\sertif.exe\".\u003c/p\u003e\n\u003ch3\u003eMain payload processing\u003c/h3\u003e\n\u003cp\u003eAfter processing addon packages and installing the initial loader executable if appropriate, DarkTortilla processes its main payload. This main payload is typically a commodity information stealer or remote access trojan (RAT). DarkTortilla stores the binary data for the main payload in the %MainFile% configuration element. Processing this payload consists of two steps:\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003eThe core processor queries the %Compress% configuration element to determine if the binary data in the %MainFile% configuration element is compressed. If set to true, the core processor decompresses the data.\u003c/li\u003e\n    \u003cbr /\u003e\n    \u003cli\u003eThe core processor executes the main payload via RunPE process injection. Unlike the addon payloads, there is no option to save the main payload to the filesystem. Therefore, the main payload resides only in memory. The target process used for injection is the same as the addon packages and is defined by the %HostIndex% configuration element.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003eAnti-analysis controls\u003c/h3\u003e\n\u003cp\u003eDarkTortilla core processor samples analyzed by CTU researchers were obfuscated using the \u003ca href=\"https://yck1509.github.io/ConfuserEx/\"\u003eConfuserEx\u003c/a\u003e code obfuscator. In addition to the obfuscator altering namespace, class, function, and property names, CTU researchers identified multiple samples where it injected specially crafted code that did not affect execution but inhibited decompilation by tools such as dnSpy (see Figure 19). Bypassing this anti-analysis control requires removing the code that caused the decompiler to break, identifying another sample that does not implement this control, or piecing together analysis from multiple samples to understand the code.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"497\" width=\"800\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-19.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 19. Broken dnSpy decompilation of DarkTortilla core processor. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe core processor includes code that that detects profilers and debuggers, but these anti-analysis controls are not called. To detect profiling, the code verifies if the \u003ca href=\"https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ee471451(v=vs.100)?redirectedfrom=MSDN\"\u003eCOR_ENABLE_PROFILING\u003c/a\u003e environment variable is present and sets to the value of 1. To detect debuggers, the code spawns a thread (see Figure 20) that continuously checks the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.debugger.isattached?view=net-6.0\"\u003eDebugger.IsAttached\u003c/a\u003e property and the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.debugger.islogging?view=net-6.0\"\u003eDebugger.IsLogging\u003c/a\u003e method. If the core processor identifies a debugger or if the thread performing the checks is terminated, the code terminates the initial loader process. It is unclear if this code was added by ConfuserEx or the malware author.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"475\" width=\"585\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-20.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 20. Debugger detection performed by DarkTortilla core processor. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe core processor implements string encoding to obscure important strings such as the configuration keys. Figure 21 shows a code excerpt that passes the string length (17), character index array ([26,8,13,18,19,0,11,11,0,19,8,14,13,17,4,6,26]), and capital letter index array ([8,17]) to the decode function.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"79\" width=\"522\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-21.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 21. DarkTortilla core processor string obfuscation example. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThis function decodes the string by iterating through each value in the character index array and retrieving the corresponding character at the specified index in a hard-coded character array (see Figure 22).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"105\" width=\"385\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-22.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 22. Character array used by string decoding logic. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eFigure 21 shows that the example's first three values of the character index array passed to the decode function are 26, 8, and 13. These values correspond to the characters \"%\", \"i\", and \"n\" in the hard-coded character array shown in Figure 22. The values passed in the capital letter index array (8, 17) indicate which characters should be capitalized (\"I\" and \"R\" in this example). Processing the character index array results in the decoded string \"%InstallationReg%\".\u003c/p\u003e\n\u003cp\u003eThe %VM% configuration element enables DarkTortilla's anti-virtual machine (anti-VM) controls. If set to true, the core processor obtains information about the system by querying the following Windows Management Instrumentation (WMI) objects:\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-computersystem\"\u003eWin32_ComputerSystem\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-bios\"\u003eWin32_BIOS\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-motherboarddevice\"\u003eWin32_MotherboardDevice\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-pnpentity\"\u003eWin32_PnPEntity\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-diskdrive\"\u003eWin32_DiskDrive\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe core processor also retrieves information about the system's running processes and services. It then inspects this data for strings associated with Hyper-V, QEMU, Virtual PC, VirtualBox, and VMware. If any of the case-insensitive data matches the criteria in Table 8, the core processor terminates the initial loader process.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Targeted technology\n            \u003c/th\u003e\n            \u003cth\u003e\n            Inspected entity\n            \u003c/th\u003e\n            \u003cth\u003e\n            Inspection logic\n            \u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Hyper-V\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Caption contains \"virtual\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Hyper-V\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_ComputerSystem\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Manufacturer contains \"microsoft\" and Model contains \"virtual\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            QEMU\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name contains \"qemu\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Virtual PC\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Process\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Process list contains \"vmusrvc\" or both \"vpcmap\" and \"vmsrvc\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VirtualBox\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Model contains \"vbox\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VirtualBox\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Process\n            \u003c/td\u003e\n            \u003ctd\u003e\n            ProcessName contains \"vboxservice\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name contains \"vmware\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Model contains \"vmware\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_ComputerSystem\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Manufacturer contains \"vmware\" and Model contains \"virtual\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_BIOS\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Serial number contains \"vmware\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name equals \"vmware pointing device\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name contains \"vmware sata\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name equals \"vmware usb pointing device\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name equals \"vmware vmci bus device\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name equals \"vmware virtual s scsi disk device\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name starts with \"vmware svga\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Service\n            \u003c/td\u003e\n            \u003ctd\u003e\n            ServiceImagePath contains \"vmware\" and ServiceName equals \"vmtools\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Service\n            \u003c/td\u003e\n            \u003ctd\u003e\n            ServiceImagePath contains \"vmware\" and ServiceName equals \"tpvcgateway\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Service\n            \u003c/td\u003e\n            \u003ctd\u003e\n            ServiceImagePath contains \"vmware\" and ServiceName equals \"tpautoconnsvc\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 8. DarkTortilla core processor anti-VM detections.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe %SB% configuration element enables DarkTortilla's anti-sandbox control. This control only detects the \u003ca href=\"https://sandboxie-plus.com/Sandboxie/\"\u003eSandboxie\u003c/a\u003e sandbox. The core processor terminates the initial loader process if it detects a running process named \"sandboxierpcss\" in the current session.\u003c/p\u003e\n\u003ch3\u003eAnti-tamper controls\u003c/h3\u003e\n\u003cp\u003eDarkTortilla's anti-tamper controls are the last step in its execution chain and occur after the main payload is executed. The four controls ensure that nothing interferes with DarkTortilla's execution of its critical components.\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003e\n    \u003cp\u003eThe first anti-tamper control is employed by the core processor and ensures that the injected subprocess running the main payload is immediately rerun if terminated. The %InjectionPersist% configuration element regulates this control. If set to true, the core processor starts a thread that monitors the state of the injected subprocess. If the subprocess is terminated, this anti-tamper control automatically respawns the configured target subprocess, re-injects the main payload, and executes it within the context of the subprocess.\u003c/p\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\n    \u003cp\u003eThe second anti-tamper control ensures that the initial loader executable is immediately rerun if terminated. DarkTortilla implements this functionality with a secondary .NET-based executable that it refers to as \"WatchDog\". The %InjectionPersist% configuration element regulates this control. If set to true, the core processor drops the WatchDog executable and its configuration file to the Windows %TEMP% directory. It then executes the WatchDog executable, which monitors the initial loader process.\u003c/p\u003e\n    \u003cp\u003eThe WatchDog executable bytes are stored in the DarkTortilla %WatchDogBytes% configuration element, and the filename is stored in %WatchDogName%. Prior to processing, the core processor decompresses the WatchDog executable's bytes if the %Compress% configuration element is set to true. Every \u003ca href=\"https://www.virustotal.com/gui/file/2d0dc6216f613ac7551a7e70a798c22aee8eb9819428b1357e2b8c73bef905ad\"\u003eWatchDog executable\u003c/a\u003e dropped by DarkTortilla was identical:\u003c/p\u003e\n    \u003cul\u003e\n        \u003cli style=\"list-style: disc;\"\u003eMD5 hash: 0e362e7005823d0bec3719b902ed6d62\u003c/li\u003e\n        \u003cli style=\"list-style: disc;\"\u003eSHA1 hash: 590d860b909804349e0cdc2f1662b37bd62f7463\u003c/li\u003e\n        \u003cli style=\"list-style: disc;\"\u003eSHA256 hash: 2d0dc6216f613ac7551a7e70a798c22aee8eb9819428b1357e2b8c73bef905ad\u003c/li\u003e\n    \u003c/ul\u003e\n\n    \u003cp\u003eIf an executable with the configured WatchDog name already exists in the Windows %TEMP% directory, the core processor removes the existing executable's \u003ca href=\"https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-fscc/6e3f7352-d11c-4d76-8c39-2516a9df36e8\"\u003eZone.Identifier\u003c/a\u003e Alternate Data Stream (ADS), which strips the executable of any existing \u003ca href=\"https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/ms537183(v=vs.85)?redirectedfrom=MSDN\"\u003eURL security zones\u003c/a\u003e. It then overwrites the existing executable with the new WatchDog executable.\u003c/p\u003e\n    \u003cp\u003eThe WatchDog configuration file dropped to the filesystem shares the same name as the WatchDog executable but uses a .txt file extension. For example, the configuration filename for \"WatchDog.exe\" is \"WatchDog.txt\". This configuration file contains three lines representing the following values:\u003c/p\u003e\n    \u003cul\u003e\n        \u003cli style=\"list-style: disc;\"\u003eThe process ID of the initial loader executable\u003c/li\u003e\n        \u003cli style=\"list-style: disc;\"\u003eThe path and filename of the initial loader executable\u003c/li\u003e\n        \u003cli style=\"list-style: disc;\"\u003eThe process ID for the WatchDog executable\u003c/li\u003e\n    \u003c/ul\u003e\n\n    \u003cp\u003eIf the initial loader process terminates, the WatchDog process reruns it and refreshes the contents of the WatchDog configuration text file with the new process ID information.\u003c/p\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\n    \u003cp\u003eThe third anti-tamper control is employed by the core processor and ensures that the dropped WatchDog executable continues to execute. The core processor retrieves the WatchDog executable process ID from the WatchDog configuration file once per second and verifies that the corresponding process is running. If the WatchDog process terminates, the core processor breaks the loop, drops a new WatchDog configuration file, and reruns the WatchDog executable.\u003c/p\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\n    \u003cp\u003eThe fourth anti-tamper control is employed by the core processor and maintains persistence for the initial loader. The %StartupPersist% configuration element regulates this control. If set to true, the core processor starts a thread that sets persistence every 30 seconds using the persistence type defined in the DarkTortilla configuration. The control does not contain validation logic to check the persistence status, so it repeats the process indefinitely.\u003c/p\u003e\n    \u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3\u003eDelayed execution\u003c/h3\u003e\n\u003cp\u003eThe core processor implements the kernel32.dll Sleep function to delay execution at the following stages of the process. The length of delay is typically controlled by the value in the %Delay% configuration element. CTU researchers observed values ranging from 0 seconds to 300 seconds.\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003ePrior to implementing persistence, the core processor sleeps for the number of seconds specified by the %Delay% configuration element.\u003c/li\u003e\n    \u003cli\u003ePrior to processing addon packages, the core processor sleeps for the number of seconds specified by the %Delay% configuration element.\u003c/li\u003e\n    \u003cli\u003eThe core processor sleeps for a hard-coded 5 seconds after copying the source executable to the install directory but before running the executable.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe number of delays increases if the %Melt% and %Installation% configuration elements are set to true, as the delays are processed each time the executable migrates. These delays can impede detection in sandbox environments if they exceed the maximum wait time.\u003c/p\u003e\n\u003ch2\u003ePossible malware connections\u003c/h2\u003e\n\u003cp\u003eDarkTortilla code shares similarities to other malware. For example, payload compression, junk code inclusion, and payload execution via \u003ca href=\"https://github.com/malwares/Crypter/blob/master/%5BC%23%5D%20The%20RATs%20Crew%20Crypter/Form1.cs#L161-L163\"\u003eRunPe6\u003c/a\u003e are also features of a RATs Crew crypter last updated in 2016. DarkTortilla could represent an evolution of that crypter. Additionally, the Gameloader malware uses similar malspam lures and archive files as DarkTortilla. It also leverages .NET resources to store encoded DLLs and encrypted bitmap images and delivers similar commodity malware payloads. However, there is insufficient evidence as of this publication to definitively link these malware families or threat actors to DarkTortilla.\u003c/p\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eResearchers often overlook DarkTortilla and focus on its main payload. However, DarkTortilla is capable of evading detection, is highly configurable, and delivers a wide range of popular and effective malware. Its capabilities and prevalence make it a formidable threat.\u003c/p\u003e\n\u003ch2\u003eThreat indicators\u003c/h2\u003e\n\u003cp\u003eThe threat indicators in Table 9 can be used to detect activity related to DarkTortilla. The URL may contain malicious content, so consider the risks before opening it in a browser.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Indicator\n            \u003c/th\u003e\n            \u003cth\u003e\n            Type\n            \u003c/th\u003e\n            \u003cth\u003e\n            Context\n            \u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            59295e810bbdbfd64b8c41316ea13cae\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious spam delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            18391a58ee25a5cb8dfbf4d48517b5b0\u003cbr /\u003e\n            c66c5ae6\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious spam delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            981aa83b2d33cca994021197237ac5ee\u003cbr /\u003e\n            3ad3402f7d25f04f4e76985f4ec8744c\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious spam delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            84872b60072011eab8940f3b49bdb582\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            3da0f44d45a1d6676d52ce691d2f6d75\u003cbr /\u003e\n            4eb3097e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5e03556be992d23088a3c49d24c45b1c\u003cbr /\u003e\n            21cd275bffb4e536348e8128d50374b6\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            2d74df3ce221f6ff48d20bac158a3e78\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious document delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0563e691801251cdfd363eee31858ead\u003cbr /\u003e\n            5ee3928b\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious document delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            4f15b28c91fa0e8d0dd9e86481bad04f\u003cbr /\u003e\n            a34fcaf564d08de7c4c0c513fc6e122d\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious document delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            827258f907c5087f498c413d28e2203e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5e0cb6076002b11a39636e07a217b493\u003cbr /\u003e\n            835e5bce\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            55d7d9bd9d4a511417033b6c14ce93f9\u003cbr /\u003e\n            62d6a6e6c6414f0cb7e455baee1d3ab7\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            c37aae0ff565a2e44f144f837b750279\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            dde386911b091e894746b0f12d88a1fd\u003cbr /\u003e\n            18761fb9\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            a0b96236bfd79d2ebeadb8e3deb9448a\u003cbr /\u003e\n            f3ec8edd1ea9672b7ad4793934bb4c47\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            93fe6600c51014d7d6c2afedf8398f92\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            8f7340704745f3d53b284c101e93c42f\u003cbr /\u003e\n            8d4c2adc\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            45ef054bca2ae4d67e6623bf28ff75e5\u003cbr /\u003e\n            d178924602674c654e1b569aa74601cd\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            6e91ad0972e104a277505104abe39d1e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            261d699c3bb1a0042b88a45ed340f2d8\u003cbr /\u003e\n            6149464f\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            b3754c6ecc445e9a3b37c5ebe68adb96\u003cbr /\u003e\n            30ca4aa89a8e8515468f39ae8131f141\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            cd49f7c3c4e82dee128eedea9879bc33\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            619bf90a8ea219e34bf57dda1a322914\u003cbr /\u003e\n            b9fa1c81\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0a5dc3b6669cf31e8536c59fe1315918\u003cbr /\u003e\n            eb4ecfd87998445e2eeb8fed64bd2f2c\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            851816aa8cf45ba769f0d9420acfb3e5\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            4178d5efa388caf2d0ffd4539cf285b1\u003cbr /\u003e\n            de5ffab6\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            083acce46cb8cf35e37c778d1f4aee68\u003cbr /\u003e\n            14bca72d2874b793a47f9823f51df0fe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            f44695a8febb2a35576a59fa984629d2\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            37ec57e5da46dc1990941a1bb3ffab9e\u003cbr /\u003e\n            74db346a\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            53b3b37b7d1e40c80fcda2c424cd8373\u003cbr /\u003e\n            79ac2ce93023de6c22ba3e2d94679671\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            8d8c551dd572a1dc158de239b37eaa9a\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            6d4b4bcd107b09af37996c73a6448379\u003cbr /\u003e\n            a31aaac4\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5be86cfca25e295f88b5aab42a6f604d\u003cbr /\u003e\n            2f1bb97f3c73b01df664c137908e2ec4\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0f89a2015ed9c1be5522e27c00276e52\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla core processor (PVCore1)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5ad5b35f6cc093067c6f219f2d2107f4\u003cbr /\u003e\n            4248c5bb\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla core processor (PVCore1)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            93dd1202697dbaed9ef4f4707f262821\u003cbr /\u003e\n            2bf13aad096de29c14924b1dae1d6d5b\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla core processor (PVCore1)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0e362e7005823d0bec3719b902ed6d62\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla watchdog executable\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            590d860b909804349e0cdc2f1662b37b\u003cbr /\u003e\n            d62f7463\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla watchdog executable\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            2d0dc6216f613ac7551a7e70a798c22a\u003cbr /\u003e\n            ee8eb9819428b1357e2b8c73bef905ad\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla watchdog executable\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            https://pastebin.pl/view/raw/60b6b03b\n            \u003c/td\u003e\n            \u003ctd\u003e\n            URL\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla encoded core processor download\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 9. Indicators for this threat.\u003c/em\u003e\u003c/p\u003e\n\u003ch2\u003eReferences\u003c/h2\u003e\n\u003cp\u003eArntz, Pieter. \"Explained: Packer, Crypter, and Protector.\" Malwarebytes Labs. March 27, 2017. \u003ca href=\"https://blog.malwarebytes.com/cybercrime/malware/2017/03/explained-packer-crypter-and-protector/\"\u003ehttps://blog.malwarebytes.com/cybercrime/malware/2017/03/explained-packer-crypter-and-protector/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eHasherezade. \"Rainbows, Steganography and Malware in a new .NET cryptor.\" Malwarebytes Labs. March 30, 2016. \u003ca href=\"https://blog.malwarebytes.com/threat-analysis/2015/08/rainbows-steganography-and-malware-in-a-new-net-cryptor/\"\u003ehttps://blog.malwarebytes.com/threat-analysis/2015/08/rainbows-steganography-and-malware-in-a-new-net-cryptor/\u003c/a\u003e \u003c/p\u003e\n\u003cp\u003e\"RATs Crew.\" Hack Forums. June 21, 2021. \u003ca href=\"https://wiki.hackforums.net/RATs_Crew\"\u003ehttps://wiki.hackforums.net/RATs_Crew\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eGoSecure Titan Labs. \"New Malware \u0026lsquo;Gameloader' in Discord Malspam Campaign.\" GoSecure. November 2, 2021. \u003ca href=\"https://www.gosecure.net/blog/2021/11/02/new-malware-gameloader-in-discord-malspam-campaign-identified-by-gosecure-titan-labs/\"\u003ehttps://www.gosecure.net/blog/2021/11/02/new-malware-gameloader-in-discord-malspam-campaign-identified-by-gosecure-titan-labs/\u003c/a\u003e\u003c/p\u003e"},"author":[{"id":"d143bf9c-2048-4f78-a59f-64dbcba7f3dc","url":"http://uswest-www.secureworks.com/content/people/counter-threat-unit-research-team","name":"Counter Threat Unit Research Team","displayName":"Counter Threat Unit Research Team","fields":{"lastName":{"value":" "},"bio":{"value":"Secureworks Counter Threat Unit™ (CTU) researchers frequently serve as expert resources for the media, publish technical analyses for the security community, and speak about emerging threats at security conferences. Leveraging Secureworks’ advanced security technologies and a network of industry contacts, the CTU™ research team tracks threat actors and analyzes anomalous activity, uncovering new attack techniques and threats. This process enables CTU researchers to identify threats as they emerge and develop countermeasures that protect customers before damage can occur."},"firstName":{"value":"Counter Threat Unit Research Team"},"metaTitle":{"value":"Counter Threat Unit Research Team | Secureworks"},"noFollow":{"value":false},"excludeFromSearch":{"value":false},"noIndex":{"value":false},"openGraphTitle":{"value":"Counter Threat Unit Research Team | Secureworks"},"openGraphSiteName":{"value":"Secureworks"},"twitterCardType":{"id":"32f6a4e4-93dd-4a9c-aa60-cdedb0bedabb","url":"/sitecore/system/settings/feature/experience-accelerator/sitemetadata/enums/twitter-card-types/summary-card-with-large-image","name":"Summary Card with Large Image","displayName":"Summary Card with Large Image","fields":{"value":{"value":"summary_large_image"}}}}}],"publishedDate":{"value":"2022-08-17T02:00:00Z"},"lastUpdatedDate":{"value":"0001-01-01T00:00:00Z"},"displayDate":{"value":"0001-01-01T00:00:00Z"},"customTags":[{"id":"36eb03d6-7645-45a6-9715-b8c452d6a6e8","url":"http://cd/sitecore/content/shared/taxonomy/content-type/content-type---threat-analysis","name":"Content Type - Threat Analysis","displayName":"Content Type - Threat Analysis","fields":{"value":{"value":"Threat Analysis"}}},{"id":"0755cbd4-295d-4f10-8d4f-ce30adb25dba","url":"http://cd/sitecore/content/shared/taxonomy/topic/threat-intelligence","name":"Threat Intelligence","displayName":"Topic - Threat Intelligence","fields":{"value":{"value":"Threat Intelligence"}}},{"id":"d591aaba-1816-4bec-8a75-7388c3adb175","url":"http://cd/sitecore/content/shared/taxonomy/service/threat-hunting-assessment","name":"Threat Hunting Assessment","displayName":"Service - Secureworks Threat Hunting Assessment","fields":{"value":{"value":"Threat Hunting Assessment"}}},{"id":"4657b998-5773-410b-84b4-ab8bffb36f49","url":"http://cd/sitecore/content/shared/taxonomy/content-type/content-type---research","name":"Content Type - Research","displayName":"Content Type - Research","fields":{"value":{"value":"Research"}}}],"pageLocation":{"id":"2e57e396-bd9e-4829-8646-55dd117e548f","url":"/sitecore/content/shared/locations/research","name":"research","displayName":"/research","fields":{"value":{"value":"research"}}},"pageDesign":{"id":"2b9967b1-47cf-4c13-a2ea-6ee507433909","url":"/presentation/page-designs/research-article","name":"Research Article","displayName":"Research Article","fields":{"partialDesigns":{"value":"{5A1F0357-FC36-46A7-8236-A69E0E353F4A}|{2B412C03-2AF5-4F68-B8A4-4921D29B5DB4}|{ED6F2B34-AF34-4648-A828-ECBF550D950A}"}}},"openGraphTitle":{"value":"DarkTortilla Malware Analysis"},"openGraphDescription":{"value":"Learn how Secureworks CTU researchers have identified DarkTortilla samples delivering targeted malicious payloads, benign decoy documents, and executables."},"openGraphImageUrl":{"value":{"src":"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/darktortilla-malware-ta_800x800.png?h=800\u0026iar=0\u0026w=800\u0026hash=F572C79EF036740F86184BECC4377968","alt":"DarkTortilla Malware Analysis","width":"800","height":"800"}},"openGraphSiteName":{"value":"Secureworks"},"twitterCardType":{"id":"32f6a4e4-93dd-4a9c-aa60-cdedb0bedabb","url":"/sitecore/system/settings/feature/experience-accelerator/sitemetadata/enums/twitter-card-types/summary-card-with-large-image","name":"Summary Card with Large Image","displayName":"Summary Card with Large Image","fields":{"value":{"value":"summary_large_image"}}},"metaDescription":{"value":"Learn how Secureworks CTU researchers have identified DarkTortilla samples delivering targeted malicious payloads, benign decoy documents, and executables."}},"renderingParams":{"tagDestinationPageUrl":"\u003clink text=\"\" anchor=\"\" linktype=\"internal\" class=\"\" title=\"\" target=\"\" querystring=\"\" id=\"{9CCE9D90-CF8F-4210-B503-5474D48B4928}\" /\u003e"}}},{"uid":"706aa1e8-81f9-491f-a471-710ad8670d33","componentName":"AboutAuthor","dataSource":"/sitecore/content/SW/swxp-rendering/Content/Articles/research/2022/darktortilla malware analysis","fields":{"id":"8507d2d8-3e50-40a0-860a-1b403dd2bdaf","name":"darktortilla malware analysis","displayName":"darktortilla malware analysis","templateName":"Article Page","templateId":"{9F5E0978-58FB-40A6-8872-3E84B897AF67}","url":"/research/darktortilla-malware-analysis","searchPageUrl":"/research","fields":{"metaTitle":{"value":"DarkTortilla Malware Analysis"},"noFollow":{"value":false},"excludeFromSearch":{"value":false},"noIndex":{"value":false},"gated":{"value":false},"gatedVideoType":{"id":"971f4491-d4a6-42bf-abc8-9d305797ca0c","url":"/sitecore/content/shared/lookups/video-platforms/vimeo","name":"Vimeo","displayName":"Vimeo","fields":{"value":{"value":"vimeo"}}},"eyebrow":{"value":"Threat Analysis"},"image":{"value":{"src":"/-/media/images/thumbnails/blog/thing-keyboard-02.jpg?h=722\u0026iar=0\u0026w=1284\u0026hash=3EB40DA8D7DC106CD65E005A469CF61C","alt":"keyboard","width":"1284","height":"722"}},"title":{"value":"DarkTortilla Malware Analysis"},"body":{"value":"\u003ch2\u003eSummary\u003c/h2\u003e\n\u003cp\u003eDarkTortilla is a complex and highly configurable .NET-based \u003ca href=\"https://blog.malwarebytes.com/cybercrime/malware/2017/03/explained-packer-crypter-and-protector/\"\u003ecrypter\u003c/a\u003e that has \u003ca href=\"https://blog.malwarebytes.com/threat-analysis/2015/08/rainbows-steganography-and-malware-in-a-new-net-cryptor/\"\u003epossibly\u003c/a\u003e been active since at least August 2015. It typically delivers popular information stealers and remote access trojans (RATs) such as AgentTesla, AsyncRat, NanoCore, and RedLine. While it appears to primarily deliver commodity malware, Secureworks\u0026reg; Counter Threat Unit\u0026trade; (CTU) researchers identified DarkTortilla samples delivering targeted payloads such as Cobalt Strike and Metasploit. It can also deliver \"addon packages\" such as additional malicious payloads, benign decoy documents, and executables. It features robust anti-analysis and anti-tamper controls that can make detection, analysis, and eradication challenging.\u003c/p\u003e\n\u003cp\u003eFrom January 2021 through May 2022, an average of 93 unique DarkTortilla samples per week were uploaded to the VirusTotal analysis service. Code similarities suggest possible links between DarkTortilla and other malware: a \u003ca href=\"https://github.com/malwares/Crypter/tree/master/%5BC%23%5D%20The%20RATs%20Crew%20Crypter\"\u003ecrypter\u003c/a\u003e operated by the \u003ca href=\"https://wiki.hackforums.net/RATs_Crew\"\u003eRATs Crew\u003c/a\u003e threat group, which was active between 2008 and 2012, and the \u003ca href=\"https://www.gosecure.net/blog/2021/11/02/new-malware-gameloader-in-discord-malspam-campaign-identified-by-gosecure-titan-labs/\"\u003eGameloader\u003c/a\u003e malware that emerged in 2021.\u003c/p\u003e\n\u003ch2\u003eDelivery\u003c/h2\u003e\n\u003cp\u003eCTU\u0026trade; analysis of VirusTotal samples revealed numerous campaigns delivering DarkTortilla via malicious spam (malspam). The emails typically use a logistics lure and include the malicious payload in an archive attachment with file types such as .iso, .zip, .img, .dmg, and .tar. The language of the email message is customized to the victim, and CTU researchers observed samples in English, German, Romanian, Spanish, Italian, and Bulgarian. Figure 1 shows a German-language malspam \u003ca href=\"https://www.virustotal.com/gui/file/981aa83b2d33cca994021197237ac5ee3ad3402f7d25f04f4e76985f4ec8744c\"\u003esample\u003c/a\u003e. The redacted filename of the attached \u003ca href=\"https://en.wikipedia.org/wiki/Optical_disc_image\"\u003eISO image\u003c/a\u003e archive file (.iso) includes the name of the organization the email was sent from. It is unclear if that organization was compromised. The archive file contains a single executable with the same filename but the .exe extension. This executable is a DarkTortilla initial loader \u003ca href=\"https://www.virustotal.com/gui/file/5e03556be992d23088a3c49d24c45b1c21cd275bffb4e536348e8128d50374b6\"\u003esample\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"597\" width=\"544\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-01.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 1. DarkTortilla malspam containing malicious archive attachment. (The German text translates to \"Good morning, Please give us your best price offer for our attached order. Awaiting your kind reply. Kind regards\"). (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eCTU researchers also identified malicious documents (maldocs) delivering DarkTortilla. Most of these maldocs embed the DarkTortilla initial loader executable as a Packager Shell Object. Figure 2 shows a \u003ca href=\"https://www.virustotal.com/gui/file/4f15b28c91fa0e8d0dd9e86481bad04fa34fcaf564d08de7c4c0c513fc6e122d\"\u003esample\u003c/a\u003e that prompts the victim to double-click the embedded Packager Shell Object, which executes the payload. Inspection of the Packager Shell Objects properties revealed that it is an executable named \u003ca href=\"https://www.virustotal.com/gui/file/55d7d9bd9d4a511417033b6c14ce93f962d6a6e6c6414f0cb7e455baee1d3ab7\"\u003eRFQ-010129H.exe\u003c/a\u003e, which is a DarkTortilla initial loader sample. Other analyzed maldocs use different approaches, such as leveraging embedded macros to automatically execute the Packager Shell Object when a victim opens the document and enables macros.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"658\" width=\"800\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-02.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 2. Maldoc sample delivering DarkTortilla. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch2\u003eHigh-level execution flow\u003c/h2\u003e\n\u003cp\u003eDarkTortilla consists of two components that rely on each other to successfully detonate payloads: a .NET-based executable (initial loader) and a .NET-based DLL (core processor). The typical high-level execution flow for a DarkTortilla payload starts with execution of the initial loader. The initial loader then retrieves its encoded core processor. While the encoded core processor is typically embedded within the .NET resources of the initial loader, CTU researchers identified initial loaders that retrieved their core processor from \u003ca href=\"https://cyberhoot.com/cybrary/paste/\"\u003epublic paste sites\u003c/a\u003e such as pastebin . pl, textbin . net, and paste . ee.\u003c/p\u003e\n\u003cp\u003eThe initial loader decodes, loads, and executes the core processor. When executed, the core processor extracts, decrypts, and parses its configuration. The encrypted configuration is stored within the .NET resources of the initial loader as bitmap images. Depending on DarkTortilla's configuration, the core processor performs the following actions:\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003eDisplays a fake message box\u003c/li\u003e\n    \u003cli\u003ePerforms anti-virtual machine checks\u003c/li\u003e\n    \u003cli\u003ePerforms anti-sandbox checks\u003c/li\u003e\n    \u003cli\u003eImplements persistence\u003c/li\u003e\n    \u003cli\u003eMigrates execution to the Windows %TEMP% directory by using the \"Melt\" configuration element\u003c/li\u003e\n    \u003cli\u003eProcesses addon packages\u003c/li\u003e\n    \u003cli\u003eMigrates execution to its install directory\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe core processor then injects and executes its configured main payload within the context of the configured subprocess. Finally, if configured, the core processor implements anti-tamper controls to prevent interference with execution of the initial loader, core processor, injected subprocess, and WatchDog executable.\u003c/p\u003e\n\u003cp\u003eFigure 3 illustrates this high-level DarkTortilla execution flow.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"775\" width=\"622\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-03.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 3. High-level execution flow for DarkTortilla infection. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch2\u003eInitial loader\u003c/h2\u003e\n\u003cp\u003eInitial loader samples analyzed by CTU researchers were obfuscated using the \u003ca href=\"https://marketplace.visualstudio.com/items?itemName=DeepSeaObfuscator.DeepSeaObfuscator\"\u003eDeepSea .NET code obfuscator\u003c/a\u003e. As a result, many aspects of the original code have been altered to thwart analysis. For example, namespace, class, function, and property names were renamed from their original descriptive values to random characters. Figure 4 shows an example of these obfuscated values within the code decompiled by the \u003ca href=\"https://github.com/dnSpyEx/dnSpy\"\u003ednSpy\u003c/a\u003e .NET analysis tool.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"384\" width=\"368\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-04.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 4. Obfuscated DarkTortilla initial loader sample. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eIn addition to name obfuscation, DeepSea applies \u003ca href=\"http://tigress.cs.arizona.edu/transformPage/docs/flatten/index.html\"\u003eswitch dispatch control flow obfuscation\u003c/a\u003e to DarkTortilla's initial loader. This technique restructures the original linear code into switch statements that transfer execution in a seemingly unpredictable pattern, making analysis difficult. Figure 5 shows a switch statement at the entry point of a DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/a0b96236bfd79d2ebeadb8e3deb9448af3ec8edd1ea9672b7ad4793934bb4c47\"\u003esample\u003c/a\u003e. In this example, the value stored in the \"num\" variable controls which code gets executed next. This value is obfuscated and is often the result of a conditional or mathematical expression calculated at runtime, such as \"\u003ca href=\"https://en.wikipedia.org/wiki/%3F:\"\u003e((!flag) ? 15 : 9)\u003c/a\u003e\" or \"\u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.math.abs?view=net-6.0#system-math-abs(system-int32)#system-math-abs(system-int32)\"\u003eMath.Abs(num2 * 25 * 25)\u003c/a\u003e\".\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"533\" width=\"420\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-05.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 5. Switch dispatch control flow obfuscation applied to DarkTortilla initial loader. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader stores DarkTortilla's encrypted configuration as bitmap images. Figure 6 lists the partial resource section of one \u003ca href=\"https://www.virustotal.com/gui/file/b3754c6ecc445e9a3b37c5ebe68adb9630ca4aa89a8e8515468f39ae8131f141\"\u003esample\u003c/a\u003e consisting of over 700 of these images.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"573\" width=\"763\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-06.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 6. Encrypted configuration stored as bitmap images within the .NET resources of DarkTortilla initial loader. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader's execution flow typically starts by checking for internet connectivity by issuing HTTP GET requests. In samples that implement this check, the initial loader attempts to retrieve content from google . com, bing . com, or both. Some \u003ca href=\"https://www.virustotal.com/gui/file/45ef054bca2ae4d67e6623bf28ff75e5d178924602674c654e1b569aa74601cd\"\u003esamples\u003c/a\u003e store the URLs in the executable as plain text (see Figure 7), but most samples encode them. If the check fails, the initial loader retries the request(s) until all are successful.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"324\" width=\"594\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-07.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 7. Internet connectivity check in DarkTortilla initial loader. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader generates a 16-byte key to decode the core processor. This key is based on an initial hard-coded value multiplied by the index value of its location in the destination array. Because the values are stored as single bytes, the maximum value for an element in the array is 0xFF (255 decimal). For example, the decode key array for an initial hard-coded value of 0x6E (110 decimal) is [0x00,0x6E,0xDC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF].\u003c/p\u003e\n\u003cp\u003eThe initial loader then retrieves the encoded core processor data. This data commonly resides within the .NET resources of the initial loader binary. Figure 8 shows encoded core processor data residing within the \"pnj\" .NET resource of a DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/45ef054bca2ae4d67e6623bf28ff75e5d178924602674c654e1b569aa74601cd\"\u003esample\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"756\" width=\"1017\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-08.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 8. Encoded core processor data stored within the .NET resources of DarkTortilla initial loader. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader decodes the core processor data by applying the following algorithm to each byte:\u003c/p\u003e\n\n\u003cpre\u003e\tenc_byte ^ (dec_key_arr[idx % len(dec_key_arr)] ^ (idx + (seed_byte % \n\tlen(dec_key_arr)) \u0026amp; seed_byte)\n\u003c/pre\u003e\n\n\u003cul\u003e\n    \u003cli\u003eenc_byte: The core processor byte array value being decoded\u003c/li\u003e\n    \u003cli\u003eidx: The encoded byte index in the core processor byte array\u003c/li\u003e\n    \u003cli\u003edec_key_arr: The generated 16-byte decode key byte array\u003c/li\u003e\n    \u003cli\u003eseed_byte: The fourth byte of the 16-byte decode key byte array\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe initial loader loads the decoded core processor assembly code and executes its pre-determined entry point function.\u003c/p\u003e\n\u003ch3\u003eInitial loader variant with externally hosted core processor\u003c/h3\u003e\n\u003cp\u003eInitial loader variants that retrieve the encoded core processor from public paste sites first decode the URL where the core processor is hosted. The encoding logic applied to the URL varies across analyzed DarkTortilla samples, making analysis and detection difficult. Figure 9 shows a DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/0a5dc3b6669cf31e8536c59fe1315918eb4ecfd87998445e2eeb8fed64bd2f2c\"\u003esample\u003c/a\u003e that encodes the URL (https: //pastebin . pl/view/raw/60b6b03b) by prepending and appending random text.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"408\" width=\"735\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-09.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 9. DarkTortilla initial loader variant that retrieves encoded core processor data from public paste site. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader retrieves an encoded string hosted at the decoded URL. This string represents the encoded core processor data. The string consists of fake XML tags, integer values encoded with a \u003ca href=\"https://en.wikipedia.org/wiki/Caesar_cipher\"\u003eshift cipher\u003c/a\u003e, and delimiters comprised of random letters (see Figure 10). The downloaded data is stored in memory and is never saved to the filesystem.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"476\" width=\"750\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-10.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 10. Encoded DarkTortilla core processor data hosted on public paste site. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe initial loader decodes the string by first removing the fake XML tags. The string is converted into an array of integers by replacing the random letter character delimiters with a consistent letter and then using that letter to split the string into integers. The last step is to iterate through the integer array and subtract a pre-defined value. This value changes across samples.\u003c/p\u003e\n\u003cp\u003eIn the Figure 10 example (\u0026lt;xml\u0026gt;1002k1015U1069k925E928s925U925E925g929E925\u0026hellip;\u0026lt;/xml\u0026gt;), the consistent letter delimiter is \"k\" and the pre-defined subtracted value is 925:\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003eRemove XML tags: 1002k1015U1069k925E928s925U925E925g929E925\u0026hellip;\u003c/li\u003e\n    \u003cli\u003eReplace random letters with consistent character: 1002k1015k1069k925k928k925k925k925k929k925\u0026hellip;\u003c/li\u003e\n    \u003cli\u003eSplit into integer array: [1002, 1015, 1069, 925, 928, 925, 925, 925, 929, 925, \u0026hellip;]\u003c/li\u003e\n    \u003cli\u003eSubtract pre-defined value from each integer: [77, 90, 144, 0, 3, 0, 0, 0, 4, 0, \u0026hellip;]\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eThe hex representation of the final integer array for this example is [4D, 5A, 90, 00, 03, 00, 00, 00, 04, 00, \u0026hellip;]. This decoded data is the core processor DLL (see Figure 11).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"227\" width=\"700\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-11.png\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 11. Decoded DarkTortilla core processor DLL. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch2\u003eCore processor\u003c/h2\u003e\n\u003cp\u003eThe core processor contains DarkTortilla's primary functionality. From at least June 2020 to March 2022, the malware author transitioned through a limited number of filenames for this DLL that appeared to relate to a function or purpose (Deserialize.dll, SHCore1.dll, \u003ca href=\"https://www.virustotal.com/gui/file/93dd1202697dbaed9ef4f4707f2628212bf13aad096de29c14924b1dae1d6d5b\"\u003ePVCore1.dll\u003c/a\u003e, and SHCore2.dll). In March 2022, the names began to change more frequently to seemingly random names (e.g., BRIN.dll, UKRUSAIN.dll, KNIFALL.dll, NullSBAS.dll).\u003c/p\u003e\n\u003ch3\u003eConfiguration processing\u003c/h3\u003e\n\u003cp\u003eThe core processor identifies the following resources in the initial loader that are associated with the encrypted configuration:\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003eThe bitmap image resource(s) containing the encrypted configuration data\u003c/li\u003e\n    \u003cli\u003eThe binary resource specifying the total number of images to process\u003c/li\u003e\n    \u003cli\u003eThe resource folder containing these images and binary resources\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe names of these resources are calculated using the compile timestamp listed in the initial loader (which is not the file's actual compile timestamp) and two hard-coded values that represent an initialization value and the length of the resource name. The hard-coded initialization and name length values were consistent across all DarkTortilla samples analyzed by CTU researchers (see Table 1).\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003eInitial loader resource\u003c/th\u003e\n            \u003cth\u003eInitialization value\u003c/th\u003e\n            \u003cth\u003eResource name length value\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Resource folder\n            \u003c/td\u003e\n            \u003ctd\u003e\n            5\n            \u003c/td\u003e\n            \u003ctd\u003e\n            12\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Image count file\n            \u003c/td\u003e\n            \u003ctd\u003e\n            80\n            \u003c/td\u003e\n            \u003ctd\u003e\n            8\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Image file\n            \u003c/td\u003e\n            \u003ctd\u003e\n            20\n            \u003c/td\u003e\n            \u003ctd\u003e\n            8\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 1. Values used to derive initial loader resource names.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThese names are calculated via the following process:\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003eDivide the compile timestamp by \u0026lt;\u003cem\u003einitialization value\u003c/em\u003e\u0026gt;.\u003c/li\u003e\n    \u003cli\u003eRound the result using the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.math.round?view=net-6.0#system-math-round(system-decimal)#system-math-round(system-decimal)\"\u003eMath.Round()\u003c/a\u003e function.\u003c/li\u003e\n    \u003cli\u003ePass the result to the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.random\"\u003eRandom.Random()\u003c/a\u003e function as a seed value. By using a precalculated seed value, the malware author can generate a predictable 16-byte value.\u003c/li\u003e\n    \u003cli\u003eConvert the 16-byte value to a GUID using the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.guid\"\u003eGuid.Guid()\u003c/a\u003e function, which transposes the byte order.\u003c/li\u003e\n    \u003cli\u003eRemove dash characters (\u0026lsquo;-') added during the GUID conversion.\u003c/li\u003e\n    \u003cli\u003eTruncate the value to \u0026lt;\u003cem\u003eresource name length\u003c/em\u003e\u0026gt; characters.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eFor example, the following calculation generates the resource folder name of a \u003ca href=\"https://www.virustotal.com/gui/file/b3754c6ecc445e9a3b37c5ebe68adb9630ca4aa89a8e8515468f39ae8131f141\"\u003esample\u003c/a\u003e with a compile timestamp of \"Sun May 26 23:57:08 1985\" (integer: 486014228):\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003e486014228 / 5 = 97202845.6\u003c/li\u003e\n    \u003cli\u003eMath.Round(97202845.6) = 97202846\u003c/li\u003e\n    \u003cli\u003eRandom.Random(97202846) = d00bee25fa9dc9024fdf632727286708\u003c/li\u003e\n    \u003cli\u003eGuid.Guid(d00bee25fa9dc9024fdf632727286708) = 25ee0bd0-9dfa-02c9-4fdf-632727286708\u003c/li\u003e\n    \u003cli\u003eRemove dashes = 25ee0bd09dfa02c94fdf632727286708\u003c/li\u003e\n    \u003cli\u003eTruncate to 12 characters = 25ee0bd09dfa\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eApplying the same calculation to the other components reveals that the image count resource name for this sample is \"cd6935eb\" and the image base name is \"d390ea32\". The bitmap-formatted image names follow the pattern \u0026lt;\u003cem\u003eimage_base_name\u003c/em\u003e\u0026gt;\u0026lt;\u003cem\u003eimage_index\u003c/em\u003e\u0026gt;, where the \u0026lt;\u003cem\u003eimage_index\u003c/em\u003e\u0026gt; value ranges from 0 to the value specified in the image count resource. In this sample, the image count resource value is 0x2D4 (integer: 724), which means DarkTortilla attempts to process 725 bitmap-formatted images with the names d390ea32\u003cstrong\u003e0\u003c/strong\u003e, d390ea32\u003cstrong\u003e1\u003c/strong\u003e, d390ea32\u003cstrong\u003e2\u003c/strong\u003e, \u0026hellip;, d390ea32\u003cstrong\u003e723\u003c/strong\u003e, d390ea32\u003cstrong\u003e724\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eTo extract the encrypted configuration, the core processor iterates through each of the image resources in order, extracts the pixel data, and concatenates the pixel data into a byte array (see Figure 12).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"378\" width=\"783\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-12.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 12. Logic for extracting encrypted configuration from bitmap images. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe resulting byte array is decrypted using the \u003ca href=\"https://en.wikipedia.org/wiki/Advanced_Encryption_Standard\"\u003eRijndael\u003c/a\u003e cipher (also known as the Advanced Encryption Standard (AES)) with Electronic Code Book (ECB) block cipher mode and \u003ca href=\"https://en.wikipedia.org/wiki/Padding_(cryptography)#ISO_10126\"\u003eISO10126 padding\u003c/a\u003e configured. The ISO10126 \u003ca href=\"https://www.iso.org/standard/18114.html\"\u003estandard\u003c/a\u003e was withdrawn in 2007, so the use of this padding could indicate that DarkTortilla's origins date back to 2007 or earlier. The key used to decrypt this data is stored as the hard-coded integer array [81, 42, 59, 7, 27, 70, 83, 13, 71, 75, 17, 9, 39, 64, 3, 2] (see Figure 13).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"396\" width=\"800\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-13.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 13. Hard-coded key to decrypt DarkTortilla configuration. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eDarkTortilla parses the decrypted configuration data into a structure so that its elements can be easily referenced. Table 2 lists the potential configuration elements contained within DarkTortilla's decrypted configuration. Entries in \u003cstrong\u003ebold\u003c/strong\u003e indicate configuration elements that were consistently present in all samples analyzed by CTU researchers.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Key\u003c/th\u003e\n            \u003cth\u003e\n            Type\u003c/th\u003e\n            \u003cth\u003e\n            Description\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Installation%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eInstall DarkTortilla and implement persistence\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationReg%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Registry key used for persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationKey%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Registry value used for persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationDirectory%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Root install directory\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationFolder%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Subfolder name within the root install directory\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationFileName%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Filename for the initial loader executable within the root subfolder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %StartupFolder%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            bool\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Enable Startup folder persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %Hidden%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            bool\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Enable \"Hidden\" registry persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %HiddenReg%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \"Hidden\" registry key used for persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %HiddenKey%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \"Hidden\" registry value used for persistence\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Message%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eDisplay fake message box\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageIcon%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Fake message box icon ID\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageButton%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Fake message box button ID\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageTitle%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Fake message box title\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageBody%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Fake message box message\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageRepetition%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            bool\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Display fake message box even if installed\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%VM%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ePerform anti-virtual machine checks\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%SB%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ePerform anti-sandbox checks\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%InjectionPersist%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eEnable anti-tamper control for running processes\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%StartupPersist%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eEnable anti-tamper control for startup persistence\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Melt%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eMigrate initial loader execution to the Windows %TEMP% directory\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MeltName%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Filename for the initial loader executable within the Windows %TEMP% directory\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %WatchDogName%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Filename for the anti-tamper WatchDog executable\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %WatchDogBytes%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            byte[]\n            \u003c/td\u003e\n            \u003ctd\u003e\n            WatchDog byte array\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Compress%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebool\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eIndicates if payloads are zlib-compressed\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%Delay%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eint\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eNumber of seconds to delay execution within the core processor\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%HostIndex%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eint\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eID of the target subprocess name to use for main/addon payload injection\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%MainFile%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003ebyte[]\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eMain payload byte array\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003e%FilesNum%\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eint\u003c/strong\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u003cstrong\u003eNumber of addon packages to process\u003c/strong\u003e\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.D\n            \u003c/td\u003e\n            \u003ctd\u003e\n            byte[]\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (data): Payload byte array\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.N\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (name): Filename\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.P\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (path): Target install folder (special folder ID)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.F\n            \u003c/td\u003e\n            \u003ctd\u003e\n            string\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (folder): Target install subfolder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.O\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (operation): Execution type (disk, memory, none)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.T\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (time): Execution delay (seconds)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            F.{0}.R\n            \u003c/td\u003e\n            \u003ctd\u003e\n            int\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Addon package (run): Payload execution criterion\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 2. DarkTortilla configuration elements. Bold text indicates elements that appear in all analyzed samples.\u003c/em\u003e\u003c/p\u003e\n\u003ch3\u003eFake message display\u003c/h3\u003e\n\u003cp\u003eDarkTortilla can be configured to display a message box when executed. The threat actor can customize message box characteristics such as the display message, message box title, and the \u003ca href=\"https://docs.microsoft.com/en-us/office/vba/language/reference/user-interface-help/msgbox-constants\"\u003eicon and button configuration\u003c/a\u003e. Threat actors use fake message boxes to make victims think that execution failed or that a legitimate application is loading and installing. Table 3 lists the configuration elements and values in one DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/083acce46cb8cf35e37c778d1f4aee6814bca72d2874b793a47f9823f51df0fe/\"\u003esample\u003c/a\u003e.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Configuration element\u003c/th\u003e\n            \u003cth\u003e\n            Assigned value as it appears in the configuration\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %Message%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageIcon%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            16\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageButton%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            0\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageTitle%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            .Net Framework Initialization Error\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageBody%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            To run this application, you first must install one of the following version of the .Net Framework:\\r\\n.Net Framework, Version = 4.8.0\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %MessageRepetition%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 3. Fake message box-related configuration elements.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eFigure 14 shows the message box for the DarkTortilla sample configured with the values in Table 3. The %MessageRepetition% configuration element controls whether the message box will continue to be displayed upon execution after DarkTortilla is installed and persistent on the compromised system.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"185\" width=\"464\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-14.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 14. Fake message box. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch3\u003e\"Melt\" execution migration\u003c/h3\u003e\n\u003cp\u003eIf the %Melt% configuration element is set to true, the core processor moves the initial loader executable to the Window's %TEMP% directory. It uses the %MeltName% configuration element value as the executable filename (e.g., java.exe, PDF.exe, cookies.exe). The core processor runs the new executable and then terminates the original initial loader executable. However, the %TEMP% directory may not be the final destination for the initial loader. The executable could migrate again if the %Installation% configuration element is set to true.\u003c/p\u003e\n\u003ch3\u003eInstallation\u003c/h3\u003e\n\u003cp\u003eThe %Installation% configuration element controls whether DarkTortilla installs itself on a system. If set to true, the core processor moves the current DarkTortilla executable into the directory specified by the configuration. Table 4 lists the values stored in one DarkTortilla \u003ca href=\"https://www.virustotal.com/gui/file/53b3b37b7d1e40c80fcda2c424cd837379ac2ce93023de6c22ba3e2d94679671\"\u003esample\u003c/a\u003e.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Configuration element\u003c/th\u003e\n            \u003cth\u003e\n            Value\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationDirectory%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            38\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationFolder%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            WindowsPowerShell\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            %InstallationFileName%\n            \u003c/td\u003e\n            \u003ctd\u003e\n            PowerShellInfo.exe\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 4. Installation configuration elements with example values.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe integer value assigned to the %InstallationDirectory% configuration element represents a \u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/shell/csidl\"\u003eCSIDL\u003c/a\u003e value associated with a special folder on the system. In Table 4, the value 38 corresponds to the Windows \u003ca href=\"https://www.magnumdb.com/search?q=CSIDL_PROGRAM_FILES\"\u003eProgram Files\u003c/a\u003e directory. Based on this configuration, the full install path and filename for this DarkTortilla sample is \"C:\\Program Files\\WindowsPowerShell\\PowerShellInfo.exe\".\u003c/p\u003e\n\u003cp\u003eTo install, the core processor terminates the currently running DarkTortilla executable. It copies the executable to the configured installation path and filename, and then executes the installed executable via \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.process.start?view=net-6.0\"\u003eProcess.Start()\u003c/a\u003e.\u003c/p\u003e\n\u003ch3\u003ePersistence\u003c/h3\u003e\n\u003cp\u003ePersistence is controlled by the %Installation% configuration element in combination with the %Hidden% and %StartupFolder% configuration elements. DarkTortilla uses the logic in Table 5 to determine the persistence type.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            %Hidden%\u003c/th\u003e\n            \u003cth\u003e\n            %StartupFolder%\u003c/th\u003e\n            \u003cth\u003e\n            Persistence type\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Use registry HKCU Run key\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Windows startup folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Windows startup folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Use registry HKCU Winlogon key\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 5. Configuration elements determining the persistence type.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eA bug in the code causes the %StartupFolder% logic to override the %Hidden% logic if both configuration elements are set to true. The malware author erroneously used an \"if\" statement instead of \"else if\" in the logic setting the persistence type (see Figure 15).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"313\" width=\"800\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-15.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 15. Error in persistence code. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eFor Windows startup folder persistence, the core processor uses the \u003ca href=\"https://docs.microsoft.com/en-us/troubleshoot/windows-client/admin-development/create-desktop-shortcut-with-wsh\"\u003eWshShortcut\u003c/a\u003e COM object to create a .lnk shortcut file in the Windows startup folder. This file points to the configured installation path and filename of DarkTortilla's initial loader executable (see Figure 16).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"196\" width=\"685\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-16.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 16. COM object that drops shortcut file in Windows startup folder for persistence. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eDarkTortilla features standard and hidden techniques for implementing persistence via the Windows registry. Both options implement persistence in the HKEY_CURRENT_USER (HKCU) hive as a hard-coded value in the core processor code. This persistence results in the installed DarkTortilla initial loader executable being run every time the user logs in.\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003eFor standard registry persistence, the core processor uses the %InstallationReg% and %InstallationKey% values to set the target key/value combination. In every sample analyzed by CTU researchers where standard persistence was configured, the %InstallationReg% value was \"Software\\Microsoft\\Windows\\CurrentVersion\\Run\". The value stored in %InstallationKey% varied across samples (e.g., \"Updates\", \"svchost\", \"Runtime Broker\").\u003c/li\u003e\n    \u003cbr /\u003e\n    \u003cli\u003eFor hidden registry persistence, the core processor uses the %HiddenReg% and %HiddenKey% values to set the target key/value combination. In every sample analyzed by CTU researchers where hidden persistence was configured, the %InstallationReg% value was \"Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" and the value stored in %HiddenKey% was \"Shell\". Prior to setting the hidden persistence registry value, DarkTortilla's core processor prepends the installed initial loader executable path with the Windows shell value retrieved from the HKEY_LOCAL_MACHINE (HKLM) hive. This value is typically \"explorer.exe\", resulting in \"explorer.exe,\u0026lt;\u003cem\u003einstalled_darktortilla_exe_path\u003c/em\u003e\u0026gt;\". For example, if the configured install path and executable name for a DarkTortilla sample is \"C:\\Program Files\\WindowsPowerShell\\PowerShellInfo.exe\", then the HKCU Winlogon\\Shell registry entry is \"explorer.exe,C:\\Program Files\\WindowsPowerShell\\PowerShellInfo.exe\". To create these registry values, the core processor executes the following command via Process.Start():\u003cbr /\u003e\n    \u003cbr /\u003e\n    \u003cpre\u003e\tcmd.exe /c REG ADD \"HKCU\\\u003cem\u003e\u0026lt;configured_reg_key\u0026gt;\u003c/em\u003e\" /f /v \"\u003cem\u003e\u0026lt;configured_reg_val\u0026gt;\u003c/em\u003e\" /t\n\tREG_SZ /d \"\u003cem\u003e\u0026lt;installed_darktortilla_exe_path\u0026gt;\u003c/em\u003e\"\n\t\u003c/pre\u003e\n    \u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eRunPE process injection\u003c/h3\u003e\n\u003cp\u003eDarkTortilla can execute its payloads using process injection. With this method, the payload resides only in memory and never accesses the filesystem. The %HostIndex% configuration element defines which legitimate process to target for process injection (see Table 6).\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            %HostIndex% value\u003c/th\u003e\n            \u003cth\u003e\n            Corresponding target process\u003c/th\u003e\n            \u003cth\u003e\n            Source directory\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0 \u003cem\u003e(or any numeric value that is not 1-6)\u003c/em\u003e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Initial loader executable's name\n            \u003c/td\u003e\n            \u003ctd\u003e\n            \u0026nbsp;\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            1\n            \u003c/td\u003e\n            \u003ctd\u003e\n            AppLaunch.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            2\n            \u003c/td\u003e\n            \u003ctd\u003e\n            svchost.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            System32 folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            3\n            \u003c/td\u003e\n            \u003ctd\u003e\n            RegAsm.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            4\n            \u003c/td\u003e\n            \u003ctd\u003e\n            InstallUtil.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5\n            \u003c/td\u003e\n            \u003ctd\u003e\n            mscorsvw.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            6\n            \u003c/td\u003e\n            \u003ctd\u003e\n            AddInProcess32.exe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Microsoft.NET Framework folder\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 6. %HostIndex% values and corresponding target processes used for payload injection.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003ePrior to setting the target process name, the core processor checks for active processes named \"avp\". The avp.exe process is part of the Kaspersky Anti-Virus suite. If the core processor detects this process, it overrides the %HostIndex% value and sets the target process name to the name of the initial loader executable. When the %HostIndex% value is 1-6, the core processor attempts to copy the legitimate target executable file to the Windows %TEMP% directory.\u003c/p\u003e\n\u003cp\u003eDarkTortilla uses a .NET-based DLL named \"RunPe6\" for process injection. This DLL is embedded within the core processor as an encoded byte array (see Figure 17).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"403\" width=\"519\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-17.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 17. Encoded RunPe6 DLL stored as byte array within DarkTortilla core processor. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eTo decode each byte, the core processor uses the following equation with \u003cem\u003e\u0026lt;xor_key\u0026gt;\u003c/em\u003e as the hard-coded integer array [45, 89, 125, 69, 250, 222, 111] and \u003cem\u003e\u0026lt;seed\u0026gt;\u003c/em\u003e as the hard-coded integer 99:\u003c/p\u003e\n\u003cpre\u003edecoded_byte = encoded_byte ^ (\u003cem\u003e\u0026lt;xor_key\u0026gt;\u003c/em\u003e[(idx * \u003cem\u003e\u0026lt;seed\u0026gt;)\u003c/em\u003e % xor_key.Length])\u003c/pre\u003e\n\u003cbr /\u003e\n\u003cp\u003eThe core processor loads RunPe6 and calls its \u0026lsquo;Runn' function to execute the malicious payload within the context of the configured target subprocess. The core processor does not directly reference this function. Rather, it references the index values for the target class (18) and function (0). Figure 18 displays PowerShell code developed by CTU researchers to replicate the core processor's target function identification logic.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"167\" width=\"561\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-18.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 18. Custom PowerShell script to identify RunPe6 function used for payload process injection. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003ch3\u003eAddon package processing\u003c/h3\u003e\n\u003cp\u003eDarkTortilla can be configured with zero or more payloads known as addon packages. These addons are in addition to the main payload that DarkTortilla is tasked with delivering. Observed addons include benign decoy documents, legitimate executables, keyloggers, clipboard stealers, cryptocurrency miners, and additional DarkTortilla payloads. Each addon package possesses a set of configuration elements composed of a static \"F\" character, an integer \"{0}\" that represents the index value indicating the position of the addon in the package array, and a character representing a particular property associated with the package.\u003c/p\u003e\n\u003cp\u003eThe %FilesNum% configuration element defines the number of addon packages to process. For example, if the %FilesNum% value is 3, the configuration elements are F.0.\u003cem\u003e\u0026lt;addon property\u0026gt;\u003c/em\u003e, F.1.\u003cem\u003e\u0026lt;addon property\u0026gt;\u003c/em\u003e, and F.2.\u003cem\u003e\u0026lt;addon property\u0026gt;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eThe F.{0}.D (data) configuration element contains the addon package payload binary data. The core processor checks the %Compress% configuration element to determine if the stored data is compressed. If the element is set to true, the core processor decompresses the data before processing it.\u003c/p\u003e\n\u003cp\u003eThe core processor next determines if it should process the addon package by inspecting the initial loader's installation state and the addon package's F.{0}.R (run) value. Table 7 lists the criteria and their result.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Initial loader running from install directory\u003c/th\u003e\n            \u003cth\u003e\n            F.{0}.R (run) value\u003c/th\u003e\n            \u003cth\u003e\n            Process addon package?\u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Yes\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            No\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            True\n            \u003c/td\u003e\n            \u003ctd\u003e\n            No\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            False\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Yes\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 7. Criteria for processing addon package.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eIf configured to process the addon package, the core processor inspects the F.{0}.O (operation) configuration element value to determine how to execute its payload. This value can be any integer but is typically 0, 1, or 2. If the value is set to 0 or any value other than 1 or 2, the core processor saves the payload to disk but does not execute it. If the value is 1, the core processor saves the payload to disk and executes it. If the value is 2, the core processor executes the payload in memory via the same RunPE process injection technique and target process it uses for the main payload.\u003c/p\u003e\n\u003cp\u003eIf the payload is saved to disk, the location is specified by the addon path (F.{0}.P), subfolder (F.{0}.F), and filename (F.{0}.N) configuration elements. The F.{0}.P integer value represents a CSIDL value associated with a special folder on the system. For example, the value 2 corresponds to the Windows Start Menu/Programs folder. The full path of an analyzed \u003ca href=\"https://www.virustotal.com/gui/file/5be86cfca25e295f88b5aab42a6f604d2f1bb97f3c73b01df664c137908e2ec4\"\u003esample\u003c/a\u003e containing a F.{0}.P value of 2, an empty string for F.{0}.F, and a value of sertif.exe for F.{0}.N is \"C:\\Users\\\u003cem\u003e\u0026lt;username\u0026gt;\u003c/em\u003e\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\sertif.exe\".\u003c/p\u003e\n\u003ch3\u003eMain payload processing\u003c/h3\u003e\n\u003cp\u003eAfter processing addon packages and installing the initial loader executable if appropriate, DarkTortilla processes its main payload. This main payload is typically a commodity information stealer or remote access trojan (RAT). DarkTortilla stores the binary data for the main payload in the %MainFile% configuration element. Processing this payload consists of two steps:\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003eThe core processor queries the %Compress% configuration element to determine if the binary data in the %MainFile% configuration element is compressed. If set to true, the core processor decompresses the data.\u003c/li\u003e\n    \u003cbr /\u003e\n    \u003cli\u003eThe core processor executes the main payload via RunPE process injection. Unlike the addon payloads, there is no option to save the main payload to the filesystem. Therefore, the main payload resides only in memory. The target process used for injection is the same as the addon packages and is defined by the %HostIndex% configuration element.\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003ch3\u003eAnti-analysis controls\u003c/h3\u003e\n\u003cp\u003eDarkTortilla core processor samples analyzed by CTU researchers were obfuscated using the \u003ca href=\"https://yck1509.github.io/ConfuserEx/\"\u003eConfuserEx\u003c/a\u003e code obfuscator. In addition to the obfuscator altering namespace, class, function, and property names, CTU researchers identified multiple samples where it injected specially crafted code that did not affect execution but inhibited decompilation by tools such as dnSpy (see Figure 19). Bypassing this anti-analysis control requires removing the code that caused the decompiler to break, identifying another sample that does not implement this control, or piecing together analysis from multiple samples to understand the code.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"497\" width=\"800\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-19.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 19. Broken dnSpy decompilation of DarkTortilla core processor. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe core processor includes code that that detects profilers and debuggers, but these anti-analysis controls are not called. To detect profiling, the code verifies if the \u003ca href=\"https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ee471451(v=vs.100)?redirectedfrom=MSDN\"\u003eCOR_ENABLE_PROFILING\u003c/a\u003e environment variable is present and sets to the value of 1. To detect debuggers, the code spawns a thread (see Figure 20) that continuously checks the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.debugger.isattached?view=net-6.0\"\u003eDebugger.IsAttached\u003c/a\u003e property and the \u003ca href=\"https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.debugger.islogging?view=net-6.0\"\u003eDebugger.IsLogging\u003c/a\u003e method. If the core processor identifies a debugger or if the thread performing the checks is terminated, the code terminates the initial loader process. It is unclear if this code was added by ConfuserEx or the malware author.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"475\" width=\"585\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-20.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 20. Debugger detection performed by DarkTortilla core processor. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe core processor implements string encoding to obscure important strings such as the configuration keys. Figure 21 shows a code excerpt that passes the string length (17), character index array ([26,8,13,18,19,0,11,11,0,19,8,14,13,17,4,6,26]), and capital letter index array ([8,17]) to the decode function.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"79\" width=\"522\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-21.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 21. DarkTortilla core processor string obfuscation example. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThis function decodes the string by iterating through each value in the character index array and retrieving the corresponding character at the specified index in a hard-coded character array (see Figure 22).\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"\" height=\"105\" width=\"385\" src=\"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/figure-22.jpg\" /\u003e\u003cbr /\u003e\n\u003cem\u003eFigure 22. Character array used by string decoding logic. (Source: Secureworks)\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eFigure 21 shows that the example's first three values of the character index array passed to the decode function are 26, 8, and 13. These values correspond to the characters \"%\", \"i\", and \"n\" in the hard-coded character array shown in Figure 22. The values passed in the capital letter index array (8, 17) indicate which characters should be capitalized (\"I\" and \"R\" in this example). Processing the character index array results in the decoded string \"%InstallationReg%\".\u003c/p\u003e\n\u003cp\u003eThe %VM% configuration element enables DarkTortilla's anti-virtual machine (anti-VM) controls. If set to true, the core processor obtains information about the system by querying the following Windows Management Instrumentation (WMI) objects:\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-computersystem\"\u003eWin32_ComputerSystem\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-bios\"\u003eWin32_BIOS\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-motherboarddevice\"\u003eWin32_MotherboardDevice\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-pnpentity\"\u003eWin32_PnPEntity\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-diskdrive\"\u003eWin32_DiskDrive\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe core processor also retrieves information about the system's running processes and services. It then inspects this data for strings associated with Hyper-V, QEMU, Virtual PC, VirtualBox, and VMware. If any of the case-insensitive data matches the criteria in Table 8, the core processor terminates the initial loader process.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Targeted technology\n            \u003c/th\u003e\n            \u003cth\u003e\n            Inspected entity\n            \u003c/th\u003e\n            \u003cth\u003e\n            Inspection logic\n            \u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Hyper-V\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Caption contains \"virtual\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Hyper-V\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_ComputerSystem\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Manufacturer contains \"microsoft\" and Model contains \"virtual\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            QEMU\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name contains \"qemu\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            Virtual PC\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Process\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Process list contains \"vmusrvc\" or both \"vpcmap\" and \"vmsrvc\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VirtualBox\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Model contains \"vbox\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VirtualBox\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Process\n            \u003c/td\u003e\n            \u003ctd\u003e\n            ProcessName contains \"vboxservice\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name contains \"vmware\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_DiskDrive\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Model contains \"vmware\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_ComputerSystem\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Manufacturer contains \"vmware\" and Model contains \"virtual\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_BIOS\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Serial number contains \"vmware\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name equals \"vmware pointing device\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name contains \"vmware sata\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name equals \"vmware usb pointing device\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name equals \"vmware vmci bus device\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name equals \"vmware virtual s scsi disk device\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Win32_PnPEntity\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Name starts with \"vmware svga\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Service\n            \u003c/td\u003e\n            \u003ctd\u003e\n            ServiceImagePath contains \"vmware\" and ServiceName equals \"vmtools\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Service\n            \u003c/td\u003e\n            \u003ctd\u003e\n            ServiceImagePath contains \"vmware\" and ServiceName equals \"tpvcgateway\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            VMware\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Service\n            \u003c/td\u003e\n            \u003ctd\u003e\n            ServiceImagePath contains \"vmware\" and ServiceName equals \"tpautoconnsvc\"\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 8. DarkTortilla core processor anti-VM detections.\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThe %SB% configuration element enables DarkTortilla's anti-sandbox control. This control only detects the \u003ca href=\"https://sandboxie-plus.com/Sandboxie/\"\u003eSandboxie\u003c/a\u003e sandbox. The core processor terminates the initial loader process if it detects a running process named \"sandboxierpcss\" in the current session.\u003c/p\u003e\n\u003ch3\u003eAnti-tamper controls\u003c/h3\u003e\n\u003cp\u003eDarkTortilla's anti-tamper controls are the last step in its execution chain and occur after the main payload is executed. The four controls ensure that nothing interferes with DarkTortilla's execution of its critical components.\u003c/p\u003e\n\u003col\u003e\n    \u003cli\u003e\n    \u003cp\u003eThe first anti-tamper control is employed by the core processor and ensures that the injected subprocess running the main payload is immediately rerun if terminated. The %InjectionPersist% configuration element regulates this control. If set to true, the core processor starts a thread that monitors the state of the injected subprocess. If the subprocess is terminated, this anti-tamper control automatically respawns the configured target subprocess, re-injects the main payload, and executes it within the context of the subprocess.\u003c/p\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\n    \u003cp\u003eThe second anti-tamper control ensures that the initial loader executable is immediately rerun if terminated. DarkTortilla implements this functionality with a secondary .NET-based executable that it refers to as \"WatchDog\". The %InjectionPersist% configuration element regulates this control. If set to true, the core processor drops the WatchDog executable and its configuration file to the Windows %TEMP% directory. It then executes the WatchDog executable, which monitors the initial loader process.\u003c/p\u003e\n    \u003cp\u003eThe WatchDog executable bytes are stored in the DarkTortilla %WatchDogBytes% configuration element, and the filename is stored in %WatchDogName%. Prior to processing, the core processor decompresses the WatchDog executable's bytes if the %Compress% configuration element is set to true. Every \u003ca href=\"https://www.virustotal.com/gui/file/2d0dc6216f613ac7551a7e70a798c22aee8eb9819428b1357e2b8c73bef905ad\"\u003eWatchDog executable\u003c/a\u003e dropped by DarkTortilla was identical:\u003c/p\u003e\n    \u003cul\u003e\n        \u003cli style=\"list-style: disc;\"\u003eMD5 hash: 0e362e7005823d0bec3719b902ed6d62\u003c/li\u003e\n        \u003cli style=\"list-style: disc;\"\u003eSHA1 hash: 590d860b909804349e0cdc2f1662b37bd62f7463\u003c/li\u003e\n        \u003cli style=\"list-style: disc;\"\u003eSHA256 hash: 2d0dc6216f613ac7551a7e70a798c22aee8eb9819428b1357e2b8c73bef905ad\u003c/li\u003e\n    \u003c/ul\u003e\n\n    \u003cp\u003eIf an executable with the configured WatchDog name already exists in the Windows %TEMP% directory, the core processor removes the existing executable's \u003ca href=\"https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-fscc/6e3f7352-d11c-4d76-8c39-2516a9df36e8\"\u003eZone.Identifier\u003c/a\u003e Alternate Data Stream (ADS), which strips the executable of any existing \u003ca href=\"https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/ms537183(v=vs.85)?redirectedfrom=MSDN\"\u003eURL security zones\u003c/a\u003e. It then overwrites the existing executable with the new WatchDog executable.\u003c/p\u003e\n    \u003cp\u003eThe WatchDog configuration file dropped to the filesystem shares the same name as the WatchDog executable but uses a .txt file extension. For example, the configuration filename for \"WatchDog.exe\" is \"WatchDog.txt\". This configuration file contains three lines representing the following values:\u003c/p\u003e\n    \u003cul\u003e\n        \u003cli style=\"list-style: disc;\"\u003eThe process ID of the initial loader executable\u003c/li\u003e\n        \u003cli style=\"list-style: disc;\"\u003eThe path and filename of the initial loader executable\u003c/li\u003e\n        \u003cli style=\"list-style: disc;\"\u003eThe process ID for the WatchDog executable\u003c/li\u003e\n    \u003c/ul\u003e\n\n    \u003cp\u003eIf the initial loader process terminates, the WatchDog process reruns it and refreshes the contents of the WatchDog configuration text file with the new process ID information.\u003c/p\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\n    \u003cp\u003eThe third anti-tamper control is employed by the core processor and ensures that the dropped WatchDog executable continues to execute. The core processor retrieves the WatchDog executable process ID from the WatchDog configuration file once per second and verifies that the corresponding process is running. If the WatchDog process terminates, the core processor breaks the loop, drops a new WatchDog configuration file, and reruns the WatchDog executable.\u003c/p\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\n    \u003cp\u003eThe fourth anti-tamper control is employed by the core processor and maintains persistence for the initial loader. The %StartupPersist% configuration element regulates this control. If set to true, the core processor starts a thread that sets persistence every 30 seconds using the persistence type defined in the DarkTortilla configuration. The control does not contain validation logic to check the persistence status, so it repeats the process indefinitely.\u003c/p\u003e\n    \u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3\u003eDelayed execution\u003c/h3\u003e\n\u003cp\u003eThe core processor implements the kernel32.dll Sleep function to delay execution at the following stages of the process. The length of delay is typically controlled by the value in the %Delay% configuration element. CTU researchers observed values ranging from 0 seconds to 300 seconds.\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003ePrior to implementing persistence, the core processor sleeps for the number of seconds specified by the %Delay% configuration element.\u003c/li\u003e\n    \u003cli\u003ePrior to processing addon packages, the core processor sleeps for the number of seconds specified by the %Delay% configuration element.\u003c/li\u003e\n    \u003cli\u003eThe core processor sleeps for a hard-coded 5 seconds after copying the source executable to the install directory but before running the executable.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe number of delays increases if the %Melt% and %Installation% configuration elements are set to true, as the delays are processed each time the executable migrates. These delays can impede detection in sandbox environments if they exceed the maximum wait time.\u003c/p\u003e\n\u003ch2\u003ePossible malware connections\u003c/h2\u003e\n\u003cp\u003eDarkTortilla code shares similarities to other malware. For example, payload compression, junk code inclusion, and payload execution via \u003ca href=\"https://github.com/malwares/Crypter/blob/master/%5BC%23%5D%20The%20RATs%20Crew%20Crypter/Form1.cs#L161-L163\"\u003eRunPe6\u003c/a\u003e are also features of a RATs Crew crypter last updated in 2016. DarkTortilla could represent an evolution of that crypter. Additionally, the Gameloader malware uses similar malspam lures and archive files as DarkTortilla. It also leverages .NET resources to store encoded DLLs and encrypted bitmap images and delivers similar commodity malware payloads. However, there is insufficient evidence as of this publication to definitively link these malware families or threat actors to DarkTortilla.\u003c/p\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eResearchers often overlook DarkTortilla and focus on its main payload. However, DarkTortilla is capable of evading detection, is highly configurable, and delivers a wide range of popular and effective malware. Its capabilities and prevalence make it a formidable threat.\u003c/p\u003e\n\u003ch2\u003eThreat indicators\u003c/h2\u003e\n\u003cp\u003eThe threat indicators in Table 9 can be used to detect activity related to DarkTortilla. The URL may contain malicious content, so consider the risks before opening it in a browser.\u003c/p\u003e\n\u003ctable\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003cth\u003e\n            Indicator\n            \u003c/th\u003e\n            \u003cth\u003e\n            Type\n            \u003c/th\u003e\n            \u003cth\u003e\n            Context\n            \u003c/th\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            59295e810bbdbfd64b8c41316ea13cae\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious spam delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            18391a58ee25a5cb8dfbf4d48517b5b0\u003cbr /\u003e\n            c66c5ae6\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious spam delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            981aa83b2d33cca994021197237ac5ee\u003cbr /\u003e\n            3ad3402f7d25f04f4e76985f4ec8744c\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious spam delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            84872b60072011eab8940f3b49bdb582\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            3da0f44d45a1d6676d52ce691d2f6d75\u003cbr /\u003e\n            4eb3097e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5e03556be992d23088a3c49d24c45b1c\u003cbr /\u003e\n            21cd275bffb4e536348e8128d50374b6\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            2d74df3ce221f6ff48d20bac158a3e78\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious document delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0563e691801251cdfd363eee31858ead\u003cbr /\u003e\n            5ee3928b\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious document delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            4f15b28c91fa0e8d0dd9e86481bad04f\u003cbr /\u003e\n            a34fcaf564d08de7c4c0c513fc6e122d\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            Malicious document delivering DarkTortilla\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            827258f907c5087f498c413d28e2203e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5e0cb6076002b11a39636e07a217b493\u003cbr /\u003e\n            835e5bce\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            55d7d9bd9d4a511417033b6c14ce93f9\u003cbr /\u003e\n            62d6a6e6c6414f0cb7e455baee1d3ab7\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            c37aae0ff565a2e44f144f837b750279\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            dde386911b091e894746b0f12d88a1fd\u003cbr /\u003e\n            18761fb9\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            a0b96236bfd79d2ebeadb8e3deb9448a\u003cbr /\u003e\n            f3ec8edd1ea9672b7ad4793934bb4c47\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            93fe6600c51014d7d6c2afedf8398f92\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            8f7340704745f3d53b284c101e93c42f\u003cbr /\u003e\n            8d4c2adc\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            45ef054bca2ae4d67e6623bf28ff75e5\u003cbr /\u003e\n            d178924602674c654e1b569aa74601cd\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            6e91ad0972e104a277505104abe39d1e\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            261d699c3bb1a0042b88a45ed340f2d8\u003cbr /\u003e\n            6149464f\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            b3754c6ecc445e9a3b37c5ebe68adb96\u003cbr /\u003e\n            30ca4aa89a8e8515468f39ae8131f141\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            cd49f7c3c4e82dee128eedea9879bc33\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            619bf90a8ea219e34bf57dda1a322914\u003cbr /\u003e\n            b9fa1c81\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0a5dc3b6669cf31e8536c59fe1315918\u003cbr /\u003e\n            eb4ecfd87998445e2eeb8fed64bd2f2c\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            851816aa8cf45ba769f0d9420acfb3e5\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            4178d5efa388caf2d0ffd4539cf285b1\u003cbr /\u003e\n            de5ffab6\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            083acce46cb8cf35e37c778d1f4aee68\u003cbr /\u003e\n            14bca72d2874b793a47f9823f51df0fe\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            f44695a8febb2a35576a59fa984629d2\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            37ec57e5da46dc1990941a1bb3ffab9e\u003cbr /\u003e\n            74db346a\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            53b3b37b7d1e40c80fcda2c424cd8373\u003cbr /\u003e\n            79ac2ce93023de6c22ba3e2d94679671\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            8d8c551dd572a1dc158de239b37eaa9a\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            6d4b4bcd107b09af37996c73a6448379\u003cbr /\u003e\n            a31aaac4\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5be86cfca25e295f88b5aab42a6f604d\u003cbr /\u003e\n            2f1bb97f3c73b01df664c137908e2ec4\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla initial loader\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0f89a2015ed9c1be5522e27c00276e52\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla core processor (PVCore1)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            5ad5b35f6cc093067c6f219f2d2107f4\u003cbr /\u003e\n            4248c5bb\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla core processor (PVCore1)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            93dd1202697dbaed9ef4f4707f262821\u003cbr /\u003e\n            2bf13aad096de29c14924b1dae1d6d5b\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla core processor (PVCore1)\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            0e362e7005823d0bec3719b902ed6d62\n            \u003c/td\u003e\n            \u003ctd\u003e\n            MD5 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla watchdog executable\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            590d860b909804349e0cdc2f1662b37b\u003cbr /\u003e\n            d62f7463\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA1 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla watchdog executable\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            2d0dc6216f613ac7551a7e70a798c22a\u003cbr /\u003e\n            ee8eb9819428b1357e2b8c73bef905ad\n            \u003c/td\u003e\n            \u003ctd\u003e\n            SHA256 hash\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla watchdog executable\n            \u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e\n            https://pastebin.pl/view/raw/60b6b03b\n            \u003c/td\u003e\n            \u003ctd\u003e\n            URL\n            \u003c/td\u003e\n            \u003ctd\u003e\n            DarkTortilla encoded core processor download\n            \u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cem\u003eTable 9. Indicators for this threat.\u003c/em\u003e\u003c/p\u003e\n\u003ch2\u003eReferences\u003c/h2\u003e\n\u003cp\u003eArntz, Pieter. \"Explained: Packer, Crypter, and Protector.\" Malwarebytes Labs. March 27, 2017. \u003ca href=\"https://blog.malwarebytes.com/cybercrime/malware/2017/03/explained-packer-crypter-and-protector/\"\u003ehttps://blog.malwarebytes.com/cybercrime/malware/2017/03/explained-packer-crypter-and-protector/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eHasherezade. \"Rainbows, Steganography and Malware in a new .NET cryptor.\" Malwarebytes Labs. March 30, 2016. \u003ca href=\"https://blog.malwarebytes.com/threat-analysis/2015/08/rainbows-steganography-and-malware-in-a-new-net-cryptor/\"\u003ehttps://blog.malwarebytes.com/threat-analysis/2015/08/rainbows-steganography-and-malware-in-a-new-net-cryptor/\u003c/a\u003e \u003c/p\u003e\n\u003cp\u003e\"RATs Crew.\" Hack Forums. June 21, 2021. \u003ca href=\"https://wiki.hackforums.net/RATs_Crew\"\u003ehttps://wiki.hackforums.net/RATs_Crew\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eGoSecure Titan Labs. \"New Malware \u0026lsquo;Gameloader' in Discord Malspam Campaign.\" GoSecure. November 2, 2021. \u003ca href=\"https://www.gosecure.net/blog/2021/11/02/new-malware-gameloader-in-discord-malspam-campaign-identified-by-gosecure-titan-labs/\"\u003ehttps://www.gosecure.net/blog/2021/11/02/new-malware-gameloader-in-discord-malspam-campaign-identified-by-gosecure-titan-labs/\u003c/a\u003e\u003c/p\u003e"},"author":[{"id":"d143bf9c-2048-4f78-a59f-64dbcba7f3dc","url":"http://uswest-www.secureworks.com/content/people/counter-threat-unit-research-team","name":"Counter Threat Unit Research Team","displayName":"Counter Threat Unit Research Team","fields":{"lastName":{"value":" "},"bio":{"value":"Secureworks Counter Threat Unit™ (CTU) researchers frequently serve as expert resources for the media, publish technical analyses for the security community, and speak about emerging threats at security conferences. Leveraging Secureworks’ advanced security technologies and a network of industry contacts, the CTU™ research team tracks threat actors and analyzes anomalous activity, uncovering new attack techniques and threats. This process enables CTU researchers to identify threats as they emerge and develop countermeasures that protect customers before damage can occur."},"firstName":{"value":"Counter Threat Unit Research Team"},"metaTitle":{"value":"Counter Threat Unit Research Team | Secureworks"},"noFollow":{"value":false},"excludeFromSearch":{"value":false},"noIndex":{"value":false},"openGraphTitle":{"value":"Counter Threat Unit Research Team | Secureworks"},"openGraphSiteName":{"value":"Secureworks"},"twitterCardType":{"id":"32f6a4e4-93dd-4a9c-aa60-cdedb0bedabb","url":"/sitecore/system/settings/feature/experience-accelerator/sitemetadata/enums/twitter-card-types/summary-card-with-large-image","name":"Summary Card with Large Image","displayName":"Summary Card with Large Image","fields":{"value":{"value":"summary_large_image"}}}}}],"publishedDate":{"value":"2022-08-17T02:00:00Z"},"lastUpdatedDate":{"value":"0001-01-01T00:00:00Z"},"displayDate":{"value":"0001-01-01T00:00:00Z"},"customTags":[{"id":"36eb03d6-7645-45a6-9715-b8c452d6a6e8","url":"http://cd/sitecore/content/shared/taxonomy/content-type/content-type---threat-analysis","name":"Content Type - Threat Analysis","displayName":"Content Type - Threat Analysis","fields":{"value":{"value":"Threat Analysis"}}},{"id":"0755cbd4-295d-4f10-8d4f-ce30adb25dba","url":"http://cd/sitecore/content/shared/taxonomy/topic/threat-intelligence","name":"Threat Intelligence","displayName":"Topic - Threat Intelligence","fields":{"value":{"value":"Threat Intelligence"}}},{"id":"d591aaba-1816-4bec-8a75-7388c3adb175","url":"http://cd/sitecore/content/shared/taxonomy/service/threat-hunting-assessment","name":"Threat Hunting Assessment","displayName":"Service - Secureworks Threat Hunting Assessment","fields":{"value":{"value":"Threat Hunting Assessment"}}},{"id":"4657b998-5773-410b-84b4-ab8bffb36f49","url":"http://cd/sitecore/content/shared/taxonomy/content-type/content-type---research","name":"Content Type - Research","displayName":"Content Type - Research","fields":{"value":{"value":"Research"}}}],"pageLocation":{"id":"2e57e396-bd9e-4829-8646-55dd117e548f","url":"/sitecore/content/shared/locations/research","name":"research","displayName":"/research","fields":{"value":{"value":"research"}}},"pageDesign":{"id":"2b9967b1-47cf-4c13-a2ea-6ee507433909","url":"/presentation/page-designs/research-article","name":"Research Article","displayName":"Research Article","fields":{"partialDesigns":{"value":"{5A1F0357-FC36-46A7-8236-A69E0E353F4A}|{2B412C03-2AF5-4F68-B8A4-4921D29B5DB4}|{ED6F2B34-AF34-4648-A828-ECBF550D950A}"}}},"openGraphTitle":{"value":"DarkTortilla Malware Analysis"},"openGraphDescription":{"value":"Learn how Secureworks CTU researchers have identified DarkTortilla samples delivering targeted malicious payloads, benign decoy documents, and executables."},"openGraphImageUrl":{"value":{"src":"/-/media/images/insights/resources/threat-analysis/2022/darktortilla/darktortilla-malware-ta_800x800.png?h=800\u0026iar=0\u0026w=800\u0026hash=F572C79EF036740F86184BECC4377968","alt":"DarkTortilla Malware Analysis","width":"800","height":"800"}},"openGraphSiteName":{"value":"Secureworks"},"twitterCardType":{"id":"32f6a4e4-93dd-4a9c-aa60-cdedb0bedabb","url":"/sitecore/system/settings/feature/experience-accelerator/sitemetadata/enums/twitter-card-types/summary-card-with-large-image","name":"Summary Card with Large Image","displayName":"Summary Card with Large Image","fields":{"value":{"value":"summary_large_image"}}},"metaDescription":{"value":"Learn how Secureworks CTU researchers have identified DarkTortilla samples delivering targeted malicious payloads, benign decoy documents, and executables."}},"renderingParams":{}}},{"uid":"ba8da727-c3c1-4fe2-adbc-c1df47de446a","componentName":"CtaButton","dataSource":"/sitecore/content/SW/swxp-rendering/Presentation/Partial Designs/Pages/Base - Research Article Without Hero/Content/Back To All Research","params":{"Button Type":"{CCBE900A-43E9-4CA2-8839-94671E1367BD}"},"fields":{"id":"ac8a338c-89fd-47b0-980e-94e105444d4e","name":"Back To All Research","displayName":"Back To All Research","templateName":"ContentItem","templateId":"{0251E6E9-AF09-4F1D-9289-66B8150AA997}","url":"/presentation/partial-designs/pages/base---research-article-without-hero/content/back-to-all-research","searchPageUrl":"/","fields":{"link":{"value":{"href":"/research","text":"Back to more Threat Analyses and Advisories ","linktype":"internal","id":"{E4D09D08-466F-4397-BBF7-3F04FCCA7C5D}"}}},"renderingParams":{"buttonType":{"id":"ccbe900a-43e9-4ca2-8839-94671e1367bd","name":"Back Link","displayName":"Back Link","templateName":"LookUpItem","templateId":"{EFB889F4-78B6-4030-99DF-B47C6A0FAB7B}","url":"/sitecore/content/shared/lookups/cta-button-types/back-link","searchPageUrl":"/","fields":{"value":{"value":"back-link"}}}}},"placeholders":{"cta-buttons*":[]}}]}}]}}]}},{"uid":"24857c89-5599-4386-bee6-a4adccd8d6ee","componentName":"PageSection","dataSource":"","params":{"Styles":" ","Theme":"{8EF51010-1608-476E-9F7E-6452D41D8A65}","DynamicPlaceholderId":"1"},"fields":{"renderingParams":{"styles":[{"id":"e2fd1715-2fcf-4646-a5a7-f5c29669760d","name":"Pad - Narrow Top and Bottom","displayName":"Pad - Narrow Top and Bottom","templateName":"ComplexStyle","templateId":"{203B5721-B56C-4334-8DFA-46B742A39C61}","url":"/sitecore/content/shared/complex-styles/spacing/pad---narrow-top-and-bottom","searchPageUrl":"/","fields":{"stylesDesktop":{"value":".headline {\r\nmargin-bottom: 64px;\r\n}"},"stylesXs":{"value":"padding: 64px 0;\r\n.headline {\r\nmargin-bottom: 40px;\r\n}"},"isMouseHoverOnly":{"value":false}}},{"id":"c3b07248-4f85-421d-b0a9-7f1084dbc028","name":"Grey Background","displayName":"Grey Background","templateName":"ComplexStyle","templateId":"{203B5721-B56C-4334-8DFA-46B742A39C61}","url":"/sitecore/content/shared/complex-styles/backgrounds/solid/grey-background","searchPageUrl":"/","fields":{"backgroundXs":[{"id":"21e4232b-88da-4654-8aad-8949f838c8d9","url":"http://cd/sitecore/content/shared/colors/solid/grey","name":"Grey","displayName":"Grey","fields":{"cssValue":{"value":"#EFEFEF"}}}],"isMouseHoverOnly":{"value":false}}}],"theme":{"id":"8ef51010-1608-476e-9f7e-6452d41d8a65","name":"Light","displayName":"Light","templateName":"LookUpItem","templateId":"{EFB889F4-78B6-4030-99DF-B47C6A0FAB7B}","url":"/sitecore/content/shared/lookups/themes/light","searchPageUrl":"/","fields":{"value":{"value":"light"}}},"dynamicPlaceholderId":"1"}},"placeholders":{"page-section-1":[{"uid":"32c1cc98-d5f9-4740-a83f-5cfb54e5ef6f","componentName":"FormStandalone","dataSource":"","params":{"Form":"{613D9AAC-9A12-4CF5-B2F5-6C7A8128AEFD}"},"fields":{"renderingParams":{"form":{"id":"613d9aac-9a12-4cf5-b2f5-6c7a8128aefd","name":"Talk with an Expert Homepage","displayName":"Talk with an Expert Homepage","templateName":"Form","templateId":"{626F26B5-F773-41D1-899B-C32DBA114AB6}","url":"/sitecore/content/shared/forms/talk-with-an-expert-homepage","searchPageUrl":"/","fields":{"gaFormFirstStepEvent":{"value":"marketo_form_step_1"},"gaFormSubmittedEvent":{"value":"marketo_form_submitted"},"formTitle":{"value":"Talk with an Expert"},"submitButtonText":{"value":"Talk with an Expert"},"successMessage":{"value":"\u003cp\u003eThank you for submitting the form! We have received your request. A Secureworks team member will contact you within one business day.\u003c/p\u003e"},"continueButtonText":{"value":"Continue"},"mustBeValidBusinessEmail":{"value":false},"formId":{"value":"1784"}}}}}}]}},{"uid":"77fbfc47-45c5-49c9-81d7-4f6471237a83","componentName":"PageSection","dataSource":"","params":{"Styles":" ","Theme":"{8EF51010-1608-476E-9F7E-6452D41D8A65}","DynamicPlaceholderId":"4"},"fields":{"renderingParams":{"styles":[{"id":"e4a60de4-a848-4805-99fb-335be537576b","name":"Pad - Top and Bottom","displayName":"Pad - Top and Bottom","templateName":"ComplexStyle","templateId":"{203B5721-B56C-4334-8DFA-46B742A39C61}","url":"/sitecore/content/shared/complex-styles/spacing/pad---top-and-bottom","searchPageUrl":"/","fields":{"stylesDesktop":{"value":"padding: 168px 0;\r\n.headline {\r\nmargin-bottom: 40px;\r\n}"},"stylesXs":{"value":"padding: 88px 0;\r\n\r\n.headline {\r\nmargin-bottom: 40px;\r\n}"},"isMouseHoverOnly":{"value":false}}},{"id":"0317a55e-7d10-4cdb-b581-4babaefc1a54","name":"White Background","displayName":"White Background","templateName":"ComplexStyle","templateId":"{203B5721-B56C-4334-8DFA-46B742A39C61}","url":"/sitecore/content/shared/complex-styles/backgrounds/solid/white-background","searchPageUrl":"/","fields":{"backgroundXs":[{"id":"07b46900-9ffa-489a-9c94-99a595268278","url":"http://cd/sitecore/content/shared/colors/solid/white","name":"White","displayName":"White","fields":{"cssValue":{"value":"#ffffff"}}}],"isMouseHoverOnly":{"value":false}}}],"theme":{"id":"8ef51010-1608-476e-9f7e-6452d41d8a65","name":"Light","displayName":"Light","templateName":"LookUpItem","templateId":"{EFB889F4-78B6-4030-99DF-B47C6A0FAB7B}","url":"/sitecore/content/shared/lookups/themes/light","searchPageUrl":"/","fields":{"value":{"value":"light"}}},"dynamicPlaceholderId":"4"}},"placeholders":{"page-section-4":[{"uid":"9fb6f896-f8f9-49a9-a977-29b9beef7224","componentName":"MediaCarousel","dataSource":"/sitecore/content/SW/swxp-rendering/Presentation/Partial Designs/Pages/Base - Research Article Without Hero/Content/Additional Resources","params":{"Title Tag":"{5775D3EF-F791-4AA1-8F3F-6A7DD98574EF}","CacheClearingBehavior":"Clear on publish","DynamicPlaceholderId":"5"},"fields":{"id":"0903e1be-8eb2-4073-8704-f3d7eab0c762","name":"Additional Resources","displayName":"Additional Resources","templateName":"ContentItem","templateId":"{0251E6E9-AF09-4F1D-9289-66B8150AA997}","url":"/presentation/partial-designs/pages/base---research-article-without-hero/content/additional-resources","searchPageUrl":"/","fields":{"title":{"value":"Additional Resources"}},"renderingParams":{"titleTag":{"id":"5775d3ef-f791-4aa1-8f3f-6a7dd98574ef","name":"h2","displayName":"h2","templateName":"LookUpItem","templateId":"{EFB889F4-78B6-4030-99DF-B47C6A0FAB7B}","url":"/sitecore/content/shared/lookups/headline-tags/h2","searchPageUrl":"/","fields":{"value":{"value":"h2"}}},"cacheClearingBehavior":"Clear on publish","dynamicPlaceholderId":"5"}},"placeholders":{"carousel":[{"uid":"0c4b8a35-1541-4a03-88b6-c1232aa072d5","componentName":"MediaCarouselItem","dataSource":"/sitecore/content/SW/swxp-rendering/Presentation/Partial Designs/Pages/Base - Research Article Without Hero/Content/Additional Resources Slides/Slide 1","params":{"Title Tag":"{B800F7D9-370C-410A-B418-2A2E722FC8D2}","CacheClearingBehavior":"Clear on publish"},"fields":{"id":"45c627cd-44d4-4c53-8081-a8fa626bf94b","name":"Slide 1","displayName":"Slide 1","templateName":"ContentItem","templateId":"{0251E6E9-AF09-4F1D-9289-66B8150AA997}","url":"/presentation/partial-designs/pages/base---research-article-without-hero/content/additional-resources-slides/slide-1","searchPageUrl":"/","fields":{"eyebrow":{"value":"Blog"},"image":{"value":{"src":"https://dam.secureworks.com/transform/9a08d532-71c6-455c-809f-bdfb03543277/cyberpredictions24_4-3-xl-1","width":"3200","height":"2400","alt":"cyberpredictions24_4-3-xl (1)","asset":{"id":"9A08D532-71C6-455C-809FBDFB03543277","name":"cyberpredictions24_4-3-xl (1)","assetType":"Image","files":[{"name":"transformBaseUrl","url":"https://dam.secureworks.com/transform/9a08d532-71c6-455c-809f-bdfb03543277/cyberpredictions24_4-3-xl-1","width":0,"height":0,"fileSize":0},{"name":"1x1_Badge_320x320","url":"https://dam.secureworks.com/transform/1x1_Badge_320x320/9a08d532-71c6-455c-809f-bdfb03543277/cyberpredictions24_4-3-xl-1","width":0,"height":0,"fileSize":0},{"name":"16x9_Image-Standard_1284x722","url":"https://dam.secureworks.com/transform/16x9_Image-Standard_1284x722/9a08d532-71c6-455c-809f-bdfb03543277/cyberpredictions24_4-3-xl-1","width":0,"height":0,"fileSize":0},{"name":"5x3_Logo_400x240","url":"https://dam.secureworks.com/transform/5x3_Logo_400x240/9a08d532-71c6-455c-809f-bdfb03543277/cyberpredictions24_4-3-xl-1","width":0,"height":0,"fileSize":0},{"name":"1x1_Icon_120x120","url":"https://dam.secureworks.com/transform/1x1_Icon_120x120/9a08d532-71c6-455c-809f-bdfb03543277/cyberpredictions24_4-3-xl-1","width":0,"height":0,"fileSize":0},{"name":"4x3_Image-Tall_1284x963","url":"https://dam.secureworks.com/transform/4x3_Image-Tall_1284x963/9a08d532-71c6-455c-809f-bdfb03543277/cyberpredictions24_4-3-xl-1","width":0,"height":0,"fileSize":0},{"name":"1x1_Image-Square_1284x1284","url":"https://dam.secureworks.com/transform/1x1_Image-Square_1284x1284/9a08d532-71c6-455c-809f-bdfb03543277/cyberpredictions24_4-3-xl-1","width":0,"height":0,"fileSize":0},{"name":"1-91x1_Social_1200x627","url":"https://dam.secureworks.com/transform/1-91x1_Social_1200x627/9a08d532-71c6-455c-809f-bdfb03543277/cyberpredictions24_4-3-xl-1","width":0,"height":0,"fileSize":0},{"name":"webImage","url":"https://dam.secureworks.com/transform/9a08d532-71c6-455c-809f-bdfb03543277/cyberpredictions24_4-3-xl-1?io=transform:scale,width:800","width":800,"height":600,"fileSize":0},{"name":"thumbnail","url":"https://dam.secureworks.com/transform/9a08d532-71c6-455c-809f-bdfb03543277/cyberpredictions24_4-3-xl-1?io=transform:scale,width:250","width":250,"height":188,"fileSize":0},{"name":"mini","url":"https://dam.secureworks.com/transform/9a08d532-71c6-455c-809f-bdfb03543277/cyberpredictions24_4-3-xl-1?io=transform:scale,width:80","width":80,"height":80,"fileSize":0}]}}},"link":{"value":{"href":"/blog/three-cybersecurity-platform-predictions-for-2024","text":"Read Now","linktype":"internal","id":"{C76A43E5-322F-468B-B306-D2C038F78859}"}},"title":{"value":"Three Cybersecurity Platform Predictions for 2024"}},"renderingParams":{"titleTag":{"id":"b800f7d9-370c-410a-b418-2a2e722fc8d2","name":"h3","displayName":"h3","templateName":"LookUpItem","templateId":"{EFB889F4-78B6-4030-99DF-B47C6A0FAB7B}","url":"/sitecore/content/shared/lookups/headline-tags/h3","searchPageUrl":"/","fields":{"value":{"value":"h3"}}},"cacheClearingBehavior":"Clear on publish"}}},{"uid":"3972dc7c-2bed-47ea-afe7-3c31de47582c","componentName":"MediaCarouselItem","dataSource":"/sitecore/content/SW/swxp-rendering/Presentation/Partial Designs/Pages/Base - Research Article Without Hero/Content/Additional Resources Slides/Slide 2","params":{"Title Tag":"{B800F7D9-370C-410A-B418-2A2E722FC8D2}","CacheClearingBehavior":"Clear on publish"},"fields":{"id":"47bee682-48f2-41d7-9ad0-9d106143c953","name":"Slide 2","displayName":"Slide 2","templateName":"ContentItem","templateId":"{0251E6E9-AF09-4F1D-9289-66B8150AA997}","url":"/presentation/partial-designs/pages/base---research-article-without-hero/content/additional-resources-slides/slide-2","searchPageUrl":"/","fields":{"eyebrow":{"value":"Blog"},"image":{"value":{"src":"https://dam.secureworks.com/transform/16x9_Image-Standard_1284x722/eac71bd6-462b-496e-aea3-f47a92bb2092/Businesswoman-Using-Laptop-in-Modern-Environment","width":"1284","height":"722","alt":"Young business woman holding smartphone with a computer generated background. Innovation, metaverse and futuristic concepts.","asset":{"id":"EAC71BD6-462B-496E-AEA3F47A92BB2092","name":"Businesswoman Using Laptop in Modern Environment","description":"Young business woman holding smartphone with a computer generated background. Innovation, metaverse and futuristic concepts.","assetType":"Image","files":[{"name":"transformBaseUrl","url":"https://dam.secureworks.com/transform/eac71bd6-462b-496e-aea3-f47a92bb2092/Businesswoman-Using-Laptop-in-Modern-Environment","width":0,"height":0,"fileSize":0},{"name":"1x1_Badge_320x320","url":"https://dam.secureworks.com/transform/1x1_Badge_320x320/eac71bd6-462b-496e-aea3-f47a92bb2092/Businesswoman-Using-Laptop-in-Modern-Environment","width":0,"height":0,"fileSize":0},{"name":"16x9_Image-Standard_1284x722","url":"https://dam.secureworks.com/transform/16x9_Image-Standard_1284x722/eac71bd6-462b-496e-aea3-f47a92bb2092/Businesswoman-Using-Laptop-in-Modern-Environment","width":0,"height":0,"fileSize":0},{"name":"5x3_Logo_400x240","url":"https://dam.secureworks.com/transform/5x3_Logo_400x240/eac71bd6-462b-496e-aea3-f47a92bb2092/Businesswoman-Using-Laptop-in-Modern-Environment","width":0,"height":0,"fileSize":0},{"name":"1x1_Icon_120x120","url":"https://dam.secureworks.com/transform/1x1_Icon_120x120/eac71bd6-462b-496e-aea3-f47a92bb2092/Businesswoman-Using-Laptop-in-Modern-Environment","width":0,"height":0,"fileSize":0},{"name":"4x3_Image-Tall_1284x963","url":"https://dam.secureworks.com/transform/4x3_Image-Tall_1284x963/eac71bd6-462b-496e-aea3-f47a92bb2092/Businesswoman-Using-Laptop-in-Modern-Environment","width":0,"height":0,"fileSize":0},{"name":"1x1_Image-Square_1284x1284","url":"https://dam.secureworks.com/transform/1x1_Image-Square_1284x1284/eac71bd6-462b-496e-aea3-f47a92bb2092/Businesswoman-Using-Laptop-in-Modern-Environment","width":0,"height":0,"fileSize":0},{"name":"1-91x1_Social_1200x627","url":"https://dam.secureworks.com/transform/1-91x1_Social_1200x627/eac71bd6-462b-496e-aea3-f47a92bb2092/Businesswoman-Using-Laptop-in-Modern-Environment","width":0,"height":0,"fileSize":0},{"name":"webImage","url":"https://dam.secureworks.com/transform/16x9_Image-Standard_1284x722/eac71bd6-462b-496e-aea3-f47a92bb2092/Businesswoman-Using-Laptop-in-Modern-Environment?io=transform:scale,width:800","width":800,"height":533,"fileSize":0},{"name":"thumbnail","url":"https://dam.secureworks.com/transform/16x9_Image-Standard_1284x722/eac71bd6-462b-496e-aea3-f47a92bb2092/Businesswoman-Using-Laptop-in-Modern-Environment?io=transform:scale,width:250","width":250,"height":167,"fileSize":0},{"name":"mini","url":"https://dam.secureworks.com/transform/16x9_Image-Standard_1284x722/eac71bd6-462b-496e-aea3-f47a92bb2092/Businesswoman-Using-Laptop-in-Modern-Environment?io=transform:scale,width:80","width":80,"height":80,"fileSize":0}]}}},"link":{"value":{"href":"/blog/five-keys-to-maximizing-mdr-value","text":"Read Now","linktype":"internal","id":"{C69FDE9E-1BF6-4052-A867-256BF0280C1D}"}},"title":{"value":"Five Keys to Maximizing MDR Value"}},"renderingParams":{"titleTag":{"id":"b800f7d9-370c-410a-b418-2a2e722fc8d2","name":"h3","displayName":"h3","templateName":"LookUpItem","templateId":"{EFB889F4-78B6-4030-99DF-B47C6A0FAB7B}","url":"/sitecore/content/shared/lookups/headline-tags/h3","searchPageUrl":"/","fields":{"value":{"value":"h3"}}},"cacheClearingBehavior":"Clear on publish"}}},{"uid":"306b2fa0-a8ec-4fff-9f04-cfc6e1b98fab","componentName":"MediaCarouselItem","dataSource":"/sitecore/content/SW/swxp-rendering/Presentation/Partial Designs/Pages/Base - Research Article Without Hero/Content/Additional Resources Slides/Slide 3","params":{"Title Tag":"{B800F7D9-370C-410A-B418-2A2E722FC8D2}","CacheClearingBehavior":"Clear on publish"},"fields":{"id":"1086bc00-4f0a-43dc-8685-4e334dba60d7","name":"Slide 3","displayName":"Slide 3","templateName":"ContentItem","templateId":"{0251E6E9-AF09-4F1D-9289-66B8150AA997}","url":"/presentation/partial-designs/pages/base---research-article-without-hero/content/additional-resources-slides/slide-3","searchPageUrl":"/","fields":{"eyebrow":{"value":"Blog"},"image":{"value":{"src":"https://dam.secureworks.com/transform/16x9_Image-Standard_1284x722/a0ee8f5e-c763-43f9-827e-020fa9ced487/Hand-Touching-a-Modern-Graphic-Wall","width":"1284","height":"722","alt":"manipulating big data","asset":{"id":"A0EE8F5E-C763-43F9-827E020FA9CED487","name":"Hand Touching a Modern Graphic Wall","description":"manipulating big data","assetType":"Image","files":[{"name":"transformBaseUrl","url":"https://dam.secureworks.com/transform/a0ee8f5e-c763-43f9-827e-020fa9ced487/Hand-Touching-a-Modern-Graphic-Wall","width":0,"height":0,"fileSize":0},{"name":"1x1_Badge_320x320","url":"https://dam.secureworks.com/transform/1x1_Badge_320x320/a0ee8f5e-c763-43f9-827e-020fa9ced487/Hand-Touching-a-Modern-Graphic-Wall","width":0,"height":0,"fileSize":0},{"name":"16x9_Image-Standard_1284x722","url":"https://dam.secureworks.com/transform/16x9_Image-Standard_1284x722/a0ee8f5e-c763-43f9-827e-020fa9ced487/Hand-Touching-a-Modern-Graphic-Wall","width":0,"height":0,"fileSize":0},{"name":"5x3_Logo_400x240","url":"https://dam.secureworks.com/transform/5x3_Logo_400x240/a0ee8f5e-c763-43f9-827e-020fa9ced487/Hand-Touching-a-Modern-Graphic-Wall","width":0,"height":0,"fileSize":0},{"name":"1x1_Icon_120x120","url":"https://dam.secureworks.com/transform/1x1_Icon_120x120/a0ee8f5e-c763-43f9-827e-020fa9ced487/Hand-Touching-a-Modern-Graphic-Wall","width":0,"height":0,"fileSize":0},{"name":"4x3_Image-Tall_1284x963","url":"https://dam.secureworks.com/transform/4x3_Image-Tall_1284x963/a0ee8f5e-c763-43f9-827e-020fa9ced487/Hand-Touching-a-Modern-Graphic-Wall","width":0,"height":0,"fileSize":0},{"name":"1x1_Image-Square_1284x1284","url":"https://dam.secureworks.com/transform/1x1_Image-Square_1284x1284/a0ee8f5e-c763-43f9-827e-020fa9ced487/Hand-Touching-a-Modern-Graphic-Wall","width":0,"height":0,"fileSize":0},{"name":"1-91x1_Social_1200x627","url":"https://dam.secureworks.com/transform/1-91x1_Social_1200x627/a0ee8f5e-c763-43f9-827e-020fa9ced487/Hand-Touching-a-Modern-Graphic-Wall","width":0,"height":0,"fileSize":0},{"name":"webImage","url":"https://dam.secureworks.com/transform/16x9_Image-Standard_1284x722/a0ee8f5e-c763-43f9-827e-020fa9ced487/Hand-Touching-a-Modern-Graphic-Wall?io=transform:scale,width:800","width":800,"height":534,"fileSize":0},{"name":"thumbnail","url":"https://dam.secureworks.com/transform/16x9_Image-Standard_1284x722/a0ee8f5e-c763-43f9-827e-020fa9ced487/Hand-Touching-a-Modern-Graphic-Wall?io=transform:scale,width:250","width":250,"height":167,"fileSize":0},{"name":"mini","url":"https://dam.secureworks.com/transform/16x9_Image-Standard_1284x722/a0ee8f5e-c763-43f9-827e-020fa9ced487/Hand-Touching-a-Modern-Graphic-Wall?io=transform:scale,width:80","width":80,"height":80,"fileSize":0}]}}},"link":{"value":{"href":"/blog/unravelling-the-attack-surface-of-ai-systems","text":"Read Now","linktype":"internal","id":"{4A736DFC-D792-4043-B320-7C362A7B9FCF}"}},"title":{"value":"Unravelling the Attack Surface of AI Systems"}},"renderingParams":{"titleTag":{"id":"b800f7d9-370c-410a-b418-2a2e722fc8d2","name":"h3","displayName":"h3","templateName":"LookUpItem","templateId":"{EFB889F4-78B6-4030-99DF-B47C6A0FAB7B}","url":"/sitecore/content/shared/lookups/headline-tags/h3","searchPageUrl":"/","fields":{"value":{"value":"h3"}}},"cacheClearingBehavior":"Clear on publish"}}}]}}]}}]}}],"headless-footer":[{"uid":"9c419b89-d12b-4718-9340-e4030846a81d","componentName":"PartialDesignDynamicPlaceholder","dataSource":"","params":{"sid":"{ED6F2B34-AF34-4648-A828-ECBF550D950A}","ph":"headless-footer","sig":"sxa-main-footer"},"placeholders":{"sxa-main-footer":[{"uid":"2ffe6709-dded-4444-a437-fbd2a1fbb96a","componentName":"Footer","dataSource":"","params":{"CacheClearingBehavior":"Clear on publish","DynamicPlaceholderId":"1"},"placeholders":{"sw-footer-bottom-links":[{"uid":"91b708fe-1049-431c-8fe7-e0f347d81619","componentName":"LinkGroup","dataSource":"{2D012428-453E-4D62-8A35-7826717D80A7}","params":{"CacheClearingBehavior":"Clear on publish"},"fields":{"id":"2d012428-453e-4d62-8a35-7826717d80a7","name":"Bottom Links","displayName":"Bottom Links","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/footer-content/bottom-links","searchPageUrl":"/","children":[{"id":"7292553a-6fc9-43c9-bfe6-31e00739927c","name":"Privacy Policy","displayName":"Privacy Policy","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/bottom-links/privacy-policy","searchPageUrl":"/","fields":{"link":{"value":{"href":"/legal/privacy-policy","text":"Privacy Policy","linktype":"internal","id":"{66582841-C076-4FC7-9AEF-93C3451C155D}"}}}},{"id":"87e29eda-c6a5-4f6e-8f08-f2f04124894a","name":"Supply Chain Transparency","displayName":"Supply Chain Transparency","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/bottom-links/supply-chain-transparency","searchPageUrl":"/","fields":{"link":{"value":{"href":"/modern-slavery-and-human-trafficking-statement","text":"Supply Chain Transparency","linktype":"external","url":"/modern-slavery-and-human-trafficking-statement"}}}},{"id":"dc11b414-9d67-4119-9506-0db7dd653ac4","name":"Terms and Conditions","displayName":"Terms and Conditions","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/bottom-links/terms-and-conditions","searchPageUrl":"/","fields":{"link":{"value":{"href":"/legal/terms-conditions","text":"Terms and Conditions","linktype":"internal","id":"{60B76BEF-B4E8-48AD-88FF-85F9643E26E1}"}}}},{"id":"61e6864a-953d-4755-b2d8-5eecb79bd24a","name":"Accessibility Statement","displayName":"Accessibility Statement","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/bottom-links/accessibility-statement","searchPageUrl":"/","fields":{"link":{"value":{"href":"/legal/accessibility-statement","text":"Accessibility Statement","linktype":"internal","id":"{1EA66BFD-EC4C-457E-B33F-CB3D343C68F1}"}}}},{"id":"515f7b0d-d6b3-46ca-9074-c81f062a5f24","name":"Unsubscribe","displayName":"Unsubscribe","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/bottom-links/unsubscribe","searchPageUrl":"/","fields":{"link":{"value":{"href":"https://pages.secureworks.com/UnsubscribePage.html?mkt_unsubscribe=1","text":"Unsubscribe","linktype":"external","url":"https://pages.secureworks.com/UnsubscribePage.html?mkt_unsubscribe=1"}}}},{"id":"eae1c5fc-15be-4224-ae61-ae4d5a7aa425","name":"Cookie Settings","displayName":"Cookie Settings","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/bottom-links/cookie-settings","searchPageUrl":"/","fields":{"link":{"value":{"href":"javascript:void(0);return false;","text":"Cookie Settings","linktype":"javascript","url":"javascript:void(0)","class":"optanon-toggle-display"}}}}],"renderingParams":{"cacheClearingBehavior":"Clear on publish"}}}],"sw-footer-col-1":[{"uid":"003769a7-dcc8-4f0b-8acf-ac7fdfec39ce","componentName":"ImageLink","dataSource":"{129D3FE5-8D03-472C-AECB-17AA64549D7D}","fields":{"id":"129d3fe5-8d03-472c-aecb-17aa64549d7d","name":"New Logo","displayName":"New Logo","templateName":"ContentItem","templateId":"{0251E6E9-AF09-4F1D-9289-66B8150AA997}","url":"/content/navigation/footer-content/new-logo","searchPageUrl":"/","fields":{"image":{"value":{"src":"/-/media/images/logos/secureworks-a-sophos-company-logo-lockup-white-195x44-2.png?h=44\u0026iar=0\u0026w=183\u0026hash=26EE0FC0305D6B1E9E4AF31B13E6F68B","alt":"Secureworks a SOPHOS company","width":"183","height":"44"}},"link":{"value":{"href":"/","linktype":"internal","title":"Secureworks, Inc.","id":"{9CCE9D90-CF8F-4210-B503-5474D48B4928}"}}},"renderingParams":{}}},{"uid":"20662a58-d0d6-4853-bac4-e10bae90833d","componentName":"SocialNetworkLinks","dataSource":"{9B935711-D297-458D-93A9-F517F7FBBE75}","params":{"CacheClearingBehavior":"Clear on publish"},"fields":{"id":"9b935711-d297-458d-93a9-f517f7fbbe75","name":"Social Links","displayName":"Social Links","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/footer-content/social-links","searchPageUrl":"/","children":[{"id":"9febad3e-1f92-47de-ad7d-0b193d02963d","name":"LinkedIn","displayName":"LinkedIn","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/social-links/linkedin","searchPageUrl":"/","fields":{"link":{"value":{"href":"https://www.linkedin.com/company/secureworks","linktype":"external","url":"https://www.linkedin.com/company/secureworks","title":"LinkedIn"}},"cssIcon":{"id":"b8f353d7-9460-40d0-ac1c-1ed49d850358","url":"/sitecore/content/shared/icons/linkedin","name":"LinkedIn","displayName":"LinkedIn","fields":{"iconName":{"value":"linkedin-in"},"iconStyle":{"value":"brands"}}}}},{"id":"aabea208-1c86-4076-9c3f-e3241a1a8ce2","name":"Twitter","displayName":"Twitter","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/social-links/twitter","searchPageUrl":"/","fields":{"link":{"value":{"href":"https://x.com/secureworks","linktype":"external","url":"https://x.com/secureworks","title":"Twitter"}},"cssIcon":{"id":"99370dd2-8818-4dc5-b152-2f8b3167e739","url":"/sitecore/content/shared/icons/x---twitter","name":"X - Twitter","displayName":"X - Twitter","fields":{"cssClasses":{"value":"x-twitter"},"iconName":{"value":"x-twitter"},"iconStyle":{"value":"brands"}}}}},{"id":"60ee0336-cf82-4c3d-8189-fbef1771bdcf","name":"Facebook","displayName":"Facebook","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/social-links/facebook","searchPageUrl":"/","fields":{"link":{"value":{"href":"https://www.facebook.com/secureworks","linktype":"external","url":"https://www.facebook.com/secureworks","title":"Facebook"}},"cssIcon":{"id":"4ce796fc-203f-43ec-b2cd-081d3dc1ebf0","url":"/sitecore/content/shared/icons/facebook","name":"Facebook","displayName":"Facebook","fields":{"cssClasses":{"value":"facebook"},"iconName":{"value":"facebook"},"iconStyle":{"value":"brands"}}}}},{"id":"f572fe8c-a1e8-4c5b-a61e-5f68cdf7fb28","name":"GitHub","displayName":"GitHub","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/social-links/github","searchPageUrl":"/","fields":{"link":{"value":{"href":"https://github.com/secureworks","linktype":"external","url":"https://github.com/secureworks","title":"GitHub"}},"cssIcon":{"id":"ec94e0be-2665-4267-bf50-f0a8748f1c82","url":"/sitecore/content/shared/icons/github","name":"GitHub","displayName":"GitHub","fields":{"cssClasses":{"value":"github"},"iconName":{"value":"github"},"iconStyle":{"value":"brands"}}}}}],"renderingParams":{"cacheClearingBehavior":"Clear on publish"}}},{"uid":"ca96ab4f-a340-4e43-8fb8-92f8d6945a3b","componentName":"CallToAction","dataSource":"{7EB50562-9771-4830-9BFF-E6F7CE8D16FE}","fields":{"id":"7eb50562-9771-4830-9bff-e6f7ce8d16fe","name":"New Subscribe Now","displayName":"New Subscribe Now","templateName":"ContentItem","templateId":"{0251E6E9-AF09-4F1D-9289-66B8150AA997}","url":"/content/navigation/footer-content/new-subscribe-now","searchPageUrl":"/","fields":{"link":{"value":{"href":"/subscribe","text":"Subscribe Now","linktype":"internal","id":"{EF6497A4-3BE0-4C7B-B251-BEE947263C7E}"}},"title":{"value":"Get the latest updates and news from Secureworks."}},"renderingParams":{}}}],"sw-footer-col-2":[{"uid":"744aeca2-bb6a-40d5-9187-bd2f1437845a","componentName":"LinkGroup","dataSource":"{5D0274D1-EF76-45DC-89E8-34C87A6B0A0A}","params":{"CacheClearingBehavior":"Clear on publish"},"fields":{"id":"5d0274d1-ef76-45dc-89e8-34c87a6b0a0a","name":"Platform Column","displayName":"Platform Column","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/footer-content/platform-column","searchPageUrl":"/","children":[{"id":"ee873fb3-2a2c-4e44-a659-a161ad2c5998","name":"Platform","displayName":"Platform","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/footer-content/platform-column/platform","searchPageUrl":"/","fields":{"title":{"value":"Platform"}},"children":[{"id":"b1207cc3-78fc-4f19-bce0-ad040263b878","name":"group 1","displayName":"group 1","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/footer-content/platform-column/platform/group-1","searchPageUrl":"/","fields":{"title":{"value":"Detection \u0026 Response"}},"children":[{"id":"3111c4c6-a880-4592-8242-f17e908a11a5","name":"footer link 1","displayName":"footer link 1","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/platform-column/platform/group-1/footer-link-1","searchPageUrl":"/","fields":{"link":{"value":{"href":"/products/xdr","text":"XDR","linktype":"internal","id":"{A58C43A9-F86F-4787-BC39-99BCF87C9E4E}"}}}},{"id":"41ba30cb-494d-4a16-9548-137b4b0e5eac","name":"footer link 2","displayName":"footer link 2","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/platform-column/platform/group-1/footer-link-2","searchPageUrl":"/","fields":{"link":{"value":{"href":"/products/log-management","text":"Log Management","linktype":"internal","id":"{45A1F15C-C7D7-4C34-A116-1A0B49B9C20E}"}}}},{"id":"485f3ec3-56e0-4968-b641-68ac07e561df","name":"footer link 3","displayName":"footer link 3","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/platform-column/platform/group-1/footer-link-3","searchPageUrl":"/","fields":{"link":{"value":{"href":"/resources/tl-mitre-adversary-software-coverage-tool","text":"MITRE ATT\u0026CK Coverage","linktype":"internal","id":"{74CFC183-9C30-442C-922B-35B149300D54}"}}}}]},{"id":"ce6edaaf-d36e-4a53-944b-24272794d558","name":"group 2","displayName":"group 2","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/footer-content/platform-column/platform/group-2","searchPageUrl":"/","fields":{"title":{"value":"Network Security"}},"children":[{"id":"d4c994f3-375d-4404-a842-dd2b76bbb3f6","name":"footer link 1","displayName":"footer link 1","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/platform-column/platform/group-2/footer-link-1","searchPageUrl":"/","fields":{"link":{"value":{"href":"/products/ndr","text":"NDR","linktype":"internal","id":"{85B1B49E-B3AD-4644-946F-E9B3615E906F}"}}}}]},{"id":"3f50c64d-b3bd-460a-b147-ac4b43e2e36f","name":"group 3","displayName":"group 3","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/footer-content/platform-column/platform/group-3","searchPageUrl":"/","fields":{"title":{"value":"Endpoint Security"}},"children":[{"id":"76dca579-55b7-4cbb-9a7a-b197dba63071","name":"footer link 1","displayName":"footer link 1","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/platform-column/platform/group-3/footer-link-1","searchPageUrl":"/","fields":{"link":{"value":{"href":"/products/edr","text":"EDR","linktype":"internal","id":"{4C0772D6-E38B-44E4-903B-F16C56D98398}"}}}},{"id":"941e2ade-fc46-403d-a39a-b1aab806dd31","name":"footer link 2","displayName":"footer link 2","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/platform-column/platform/group-3/footer-link-2","searchPageUrl":"/","fields":{"link":{"value":{"href":"/products/ngav","text":"NGAV","linktype":"internal","id":"{23BA2D6F-EA9C-482C-B33D-992A78234631}"}}}}]},{"id":"cda2dd86-855d-4988-b934-4a1b8c491370","name":"group 4","displayName":"group 4","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/footer-content/platform-column/platform/group-4","searchPageUrl":"/","fields":{"title":{"value":"Identity Security"}},"children":[{"id":"2bbc3b31-8535-4b4c-b504-1e68b5ce2f3b","name":"footer link 1","displayName":"footer link 1","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/platform-column/platform/group-4/footer-link-1","searchPageUrl":"/","fields":{"link":{"value":{"href":"/products/idr","text":"IDR","linktype":"internal","id":"{DA08D745-CD6C-43FC-B964-1FEBB9C0AF8B}"}}}}]},{"id":"076eb4a2-3d22-4082-baf3-ce4687a3dfc8","name":"group 5","displayName":"group 5","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/footer-content/platform-column/platform/group-5","searchPageUrl":"/","fields":{"title":{"value":"OT Security"}},"children":[{"id":"ad2f558a-8d37-4f91-b69a-f73fd025ef22","name":"footer link 1","displayName":"footer link 1","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/platform-column/platform/group-5/footer-link-1","searchPageUrl":"/","fields":{"link":{"value":{"href":"/services/ot","text":"Operational Technology","linktype":"internal","id":"{11A34EFF-9C34-4FA8-993E-9D8D6A609D50}"}}}}]},{"id":"0da3b012-abe2-4429-99cb-5195cf9cdaef","name":"group 6","displayName":"group 6","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/footer-content/platform-column/platform/group-6","searchPageUrl":"/","fields":{"title":{"value":"Vulnerability Management"}},"children":[{"id":"4ce68201-6a6c-48b2-86cc-1ec69ced4fa9","name":"footer link 1","displayName":"footer link 1","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/platform-column/platform/group-6/footer-link-1","searchPageUrl":"/","fields":{"link":{"value":{"href":"/products/vdr","text":"Vulnerability Risk Prioritization","linktype":"internal","id":"{2F07FFF0-C4A4-4AC3-A16A-789E570F47C3}"}}}}]}]},{"id":"ce2851b9-132e-476f-88a5-149dbeb2381c","name":"Why Secureworks","displayName":"Why Secureworks","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/footer-content/platform-column/why-secureworks","searchPageUrl":"/","fields":{"title":{"value":"Why Secureworks"}},"children":[{"id":"93ec3d3a-6a75-4379-b251-3ad5effbbe36","name":"Why Secureworks","displayName":"Why Secureworks","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/platform-column/why-secureworks/why-secureworks","searchPageUrl":"/","fields":{"link":{"value":{"href":"/about/why-secureworks","text":"Why Secureworks","linktype":"internal","id":"{4B603C28-D78D-40B3-8FD7-04F1BC20D5F9}"}}}},{"id":"4706c846-0fca-427e-9899-a1b196819e2e","name":"Customer Trust","displayName":"Customer Trust","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/platform-column/why-secureworks/customer-trust","searchPageUrl":"/","fields":{"link":{"value":{"href":"/about/customers","text":"Customer Trust","linktype":"internal","id":"{18952EE1-784D-430F-8FFD-B28DF2B4B4F3}"}}}},{"id":"dc014b48-f1ec-4ef3-96bd-8b313e47b8f3","name":"Compare Secureworks","displayName":"Compare Secureworks","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/platform-column/why-secureworks/compare-secureworks","searchPageUrl":"/","fields":{"link":{"value":{"href":"/about/why-secureworks/competition","text":"Compare Secureworks","linktype":"internal","id":"{D9B649DE-8CE5-4DED-A706-AD76319F97B4}"}}}},{"id":"377f47ee-fd53-4152-afa1-1a07dcaf606c","name":"At Your Side","displayName":"At Your Side","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/platform-column/why-secureworks/at-your-side","searchPageUrl":"/","fields":{"link":{"value":{"href":"/about/why-secureworks/at-your-side","text":"At Your Side","linktype":"internal","id":"{A8D8DE19-9900-48F9-B866-890A7737FF68}"}}}},{"id":"9f0f8d9c-ee6d-4193-b09b-6c33a724b5a9","name":"ROI Calculator","displayName":"ROI Calculator","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/platform-column/why-secureworks/roi-calculator","searchPageUrl":"/","fields":{"link":{"value":{"href":"/services/managedxdr/calculator","text":"ROI Calculator","linktype":"internal","id":"{EEC8FEE0-5EE9-41A2-ADA9-D5D665A0B6C9}"}}}},{"id":"cab5dd43-94b7-4534-8897-64ddd0418746","name":"Artificial Intelligence","displayName":"Artificial Intelligence","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/platform-column/why-secureworks/artificial-intelligence","searchPageUrl":"/","fields":{"link":{"value":{"href":"/about/why-secureworks/ai","text":"Artificial Intelligence","linktype":"internal","id":"{1496DFF3-184E-498D-BA4F-45DE912DB133}"}}}},{"id":"9871b84e-2bc3-4f6b-b1fa-99c7f3460601","name":"Corporate Responsibility","displayName":"Corporate Responsibility","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/platform-column/why-secureworks/corporate-responsibility","searchPageUrl":"/","fields":{"link":{"value":{"href":"/legal/corporate-responsibility","text":"Corporate Responsibility","linktype":"internal","id":"{B61C4E25-48BF-49F9-A30A-1496FEEC0079}"}}}},{"id":"4a6ba316-321a-438d-8c80-562d35c48997","name":"Corporate Overview","displayName":"Corporate Overview","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/platform-column/why-secureworks/corporate-overview","searchPageUrl":"/","fields":{"link":{"value":{"href":"/about","text":"Corporate Overview","linktype":"internal","id":"{951B65EB-D21D-4F3E-BC34-BE6AF4725856}"}}}},{"id":"bc9a1e8c-b6dc-4d77-a4e0-5f876b667141","name":"Counter Threat Unit","displayName":"Counter Threat Unit","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/platform-column/why-secureworks/counter-threat-unit","searchPageUrl":"/","fields":{"link":{"value":{"href":"/about/counter-threat-unit","text":"Counter Threat Unit","linktype":"internal","id":"{9B8D664E-54FE-4B16-ACC7-1107CA4FF463}"}}}}]}],"renderingParams":{"cacheClearingBehavior":"Clear on publish"}}}],"sw-footer-col-3":[{"uid":"ca524394-ba56-4346-bc4f-57f6a57dbeb0","componentName":"LinkGroup","dataSource":"{9AFC3759-3E7C-4AB0-B347-698A985BF17D}","params":{"CacheClearingBehavior":"Clear on publish"},"fields":{"id":"9afc3759-3e7c-4ab0-b347-698a985bf17d","name":"Services Column","displayName":"Services Column","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/footer-content/services-column","searchPageUrl":"/","children":[{"id":"ddb3e912-5b99-45aa-bddc-78644d58b37a","name":"Services","displayName":"Services","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/footer-content/services-column/services","searchPageUrl":"/","fields":{"title":{"value":"Services"}},"children":[{"id":"039860b0-bd4a-473d-8e4c-f10322a73fc0","name":"group 1","displayName":"group 1","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/footer-content/services-column/services/group-1","searchPageUrl":"/","fields":{"title":{"value":"Managed Detection \u0026 Response"}},"children":[{"id":"4f753125-c9db-4c43-bfed-029dc8c1df57","name":"footer link 1","displayName":"footer link 1","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/services-column/services/group-1/footer-link-1","searchPageUrl":"/","fields":{"link":{"value":{"href":"/services/managedxdr","text":"MDR Overview","linktype":"internal","id":"{FA6FB773-E5BC-404A-BEE9-76A9B64EFD4D}"}}}},{"id":"d348c7b7-cc28-4c37-8437-a06452cd3fa8","name":"footer link 2","displayName":"footer link 2","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/services-column/services/group-1/footer-link-2","searchPageUrl":"/","fields":{"link":{"value":{"href":"/services/threat-hunting","text":"Threat Hunting","linktype":"internal","id":"{82DC3F3F-D07A-45BE-B6B0-B93E6A876717}"}}}},{"id":"004340bd-956d-42af-bf8d-9792a61a5187","name":"footer link 3","displayName":"footer link 3","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/services-column/services/group-1/footer-link-3","searchPageUrl":"/","fields":{"link":{"value":{"href":"/services/ot","text":"MDR for OT","linktype":"internal","id":"{11A34EFF-9C34-4FA8-993E-9D8D6A609D50}"}}}},{"id":"ab4b2097-2d55-4685-9564-d4551f889562","name":"footer link 4","displayName":"footer link 4","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/services-column/services/group-1/footer-link-4","searchPageUrl":"/","fields":{"link":{"value":{"href":"/services/managedxdr/microsoft","text":"MDR for Microsoft","linktype":"internal","id":"{56E808B7-4C4F-4F17-AACF-41ED2369D537}"}}}}]},{"id":"3b72f162-f23b-4e49-b880-ce8ba6b6d9ae","name":"group 2","displayName":"group 2","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/footer-content/services-column/services/group-2","searchPageUrl":"/","fields":{"title":{"value":"Consulting"}},"children":[{"id":"fbb5f6d7-22e9-45e1-9506-31ed6d23b947","name":"footer link 1","displayName":"footer link 1","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/services-column/services/group-2/footer-link-1","searchPageUrl":"/","fields":{"link":{"value":{"href":"/services/consulting","text":"Consulting Services Overview","linktype":"internal","id":"{378365AC-43B1-4559-9D4F-F205FA876093}"}}}},{"id":"2e13dc58-1c91-4d3b-bac3-f24d864832fc","name":"footer link 2","displayName":"footer link 2","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/services-column/services/group-2/footer-link-2","searchPageUrl":"/","fields":{"link":{"value":{"href":"/services/risk","text":"Risk Assessment","linktype":"internal","id":"{34F6E073-4864-4600-8246-8EE6DBA54DF6}"}}}},{"id":"86b69e4a-de5f-4e65-a0d3-9f7d9cff9f93","name":"footer link 3","displayName":"footer link 3","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/services-column/services/group-2/footer-link-3","searchPageUrl":"/","fields":{"link":{"value":{"href":"/services/security-preparedness","text":"Security Preparedness","linktype":"internal","id":"{DE18C38C-BB4A-46C4-B331-F6A3E3CC58F8}"}}}},{"id":"6362cf01-77fc-4aa7-803d-028c25d0f83d","name":"footer link 4","displayName":"footer link 4","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/services-column/services/group-2/footer-link-4","searchPageUrl":"/","fields":{"link":{"value":{"href":"/services/resiliency-testing","text":"Resiliency Testing","linktype":"internal","id":"{03D4D2F5-DB10-4CB0-A02E-8F07E987BA70}"}}}}]},{"id":"a718f6c9-eaa2-4744-a0b6-b7f9f031b603","name":"group 3","displayName":"group 3","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/footer-content/services-column/services/group-3","searchPageUrl":"/","fields":{"title":{"value":"Professional Services"}},"children":[{"id":"a14b2e93-ba38-44be-8fc9-6f44874e37a8","name":"footer link 1","displayName":"footer link 1","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/services-column/services/group-3/footer-link-1","searchPageUrl":"/","fields":{"link":{"value":{"href":"/services/professional-services","text":"Professional Services Overview","linktype":"internal","id":"{F0850C67-96E5-40B5-9724-092177BFF892}"}}}},{"id":"81401974-67a8-49f2-9cdd-317df949231e","name":"footer link 2","displayName":"footer link 2","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/services-column/services/group-3/footer-link-2","searchPageUrl":"/","fields":{"link":{"value":{"href":"/services/onboarding","text":"Taegis Onboarding","linktype":"internal","id":"{27ACED52-FC48-49AF-A081-E70F89CC3FB8}"}}}},{"id":"37b3d16f-f503-454a-9e75-e5dd7dfcdd33","name":"footer link 3","displayName":"footer link 3","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/services-column/services/group-3/footer-link-3","searchPageUrl":"/","fields":{"link":{"value":{"href":"/services/steady-state","text":"Steady State Services","linktype":"internal","id":"{FE201751-8270-4870-9E91-29683338F43A}"}}}}]},{"id":"8d73954f-4336-4ce4-b43f-e8200c1b0f77","name":"group 4","displayName":"group 4","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/footer-content/services-column/services/group-4","searchPageUrl":"/","fields":{"title":{"value":"Incident Response"}},"children":[{"id":"420af065-103d-4765-af97-5e2565b7f83f","name":"footer link 1","displayName":"footer link 1","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/services-column/services/group-4/footer-link-1","searchPageUrl":"/","fields":{"link":{"value":{"href":"/services/emergency-incident-response","text":"About Emergency Incident Response","linktype":"internal","id":"{2771F287-A718-4860-A3FE-5DAE1FE70DCE}"}}}},{"id":"92322f79-b764-417d-a067-4ebaced171ec","name":"footer link 2","displayName":"footer link 2","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/services-column/services/group-4/footer-link-2","searchPageUrl":"/","fields":{"link":{"value":{"href":"/contact/emergency-response","text":"Emergency Breach Hotline","linktype":"internal","id":"{A47150CB-F354-43AF-8D78-C9228CD7D6CA}"}}}}]}]},{"id":"2b73046c-cdc4-4e4c-ba8a-420d1c8a2e43","name":"Solutions","displayName":"Solutions","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/footer-content/services-column/solutions","searchPageUrl":"/","fields":{"title":{"value":"Solutions"}},"children":[{"id":"92cf0d53-bef3-4fe2-8f42-0fbef04061f9","name":"Industries","displayName":"Industries","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/footer-content/services-column/solutions/industries","searchPageUrl":"/","fields":{"title":{"value":"Industries"}},"children":[{"id":"58fed2af-8dfd-4fb8-af62-adfa0a123a8c","name":"Education","displayName":"Education","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/services-column/solutions/industries/education","searchPageUrl":"/","fields":{"link":{"value":{"href":"/solutions/industries/education","text":"Education Industry","linktype":"internal","id":"{39248500-A22B-4A0F-9A9E-82BBAECA3BD2}"}}}},{"id":"3bf1763d-1a60-4b62-8712-5ff7b9cbbe16","name":"Financial","displayName":"Financial","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/services-column/solutions/industries/financial","searchPageUrl":"/","fields":{"link":{"value":{"href":"/solutions/industries/financial","text":"Financial Industry","linktype":"internal","id":"{DC7FF9A4-5768-4A0B-AF02-F71D07BAB85C}"}}}},{"id":"238ff5a6-51e4-4185-8f50-1f5ff1aab275","name":"Manufacturing","displayName":"Manufacturing","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/services-column/solutions/industries/manufacturing","searchPageUrl":"/","fields":{"link":{"value":{"href":"/solutions/industries/manufacturing","text":"Manufacturing Industry","linktype":"internal","id":"{13DCEAC9-C57B-4B05-8EA7-FD2D55CC5F7A}"}}}}]},{"id":"2db27e1f-b1b8-4b0b-99a6-ceb87a567ada","name":"Need","displayName":"Need","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/footer-content/services-column/solutions/need","searchPageUrl":"/","fields":{"title":{"value":"Need"}},"children":[{"id":"394d5a5f-f345-49c0-954a-a7a19031eae9","name":"Accelerate Security Maturity","displayName":"Accelerate Security Maturity","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/services-column/solutions/need/accelerate-security-maturity","searchPageUrl":"/","fields":{"link":{"value":{"href":"/solutions/need/security-maturity","text":"Accelerate Security Maturity","linktype":"internal","id":"{2556D9F4-3025-4CFD-ABD8-6E6D85B0FF74}"}}}},{"id":"79387021-71ee-43e9-bdc3-e0e5e60b6ad7","name":"Consolidate Security Tools","displayName":"Consolidate Security Tools","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/services-column/solutions/need/consolidate-security-tools","searchPageUrl":"/","fields":{"link":{"value":{"href":"/solutions/need/tech-consolidation","text":"Consolidate Security Tools","linktype":"internal","id":"{888A91C8-908A-40E0-874A-A033D73C425E}"}}}},{"id":"8f8f793e-fa47-4655-a4a5-fe8ea7d4e5c7","name":"Maximize Microsoft Security","displayName":"Maximize Microsoft Security","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/services-column/solutions/need/maximize-microsoft-security","searchPageUrl":"/","fields":{"link":{"value":{"href":"/solutions/need/microsoft","text":"Microsoft Security","linktype":"internal","id":"{35C36EF1-5248-4189-B138-7D859E47B154}"}}}},{"id":"62819e80-15f9-4812-bd8b-85318cc18067","name":"Monitor Both IT and OT","displayName":"Monitor Both IT and OT","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/services-column/solutions/need/monitor-both-it-and-ot","searchPageUrl":"/","fields":{"link":{"value":{"href":"/solutions/need/monitor-it-ot","text":"Monitor IT and OT","linktype":"internal","id":"{A071166D-04D9-431E-BEB8-C9153CE1597B}"}}}},{"id":"30d7ad91-7911-4643-8172-2aa602371733","name":"Reduce Teams Burden","displayName":"Reduce Teams Burden","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/services-column/solutions/need/reduce-teams-burden","searchPageUrl":"/","fields":{"link":{"value":{"href":"/solutions/need/reduce-teams-burden","text":"Reduce Teams Burden","linktype":"internal","id":"{4DF735FD-0433-47E6-9A1D-FCF108F1EFD3}"}}}}]}]}],"renderingParams":{"cacheClearingBehavior":"Clear on publish"}}}],"sw-footer-col-4":[{"uid":"4d52e81f-f631-4aa9-9bb2-9d2d1c2bb22b","componentName":"LinkGroup","dataSource":"{0B5EFC3C-5EED-4D72-9692-256D10172915}","params":{"CacheClearingBehavior":"Clear on publish"},"fields":{"id":"0b5efc3c-5eed-4d72-9692-256d10172915","name":"Resources Column","displayName":"Resources Column","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/footer-content/resources-column","searchPageUrl":"/","children":[{"id":"f47328b7-b218-47d0-97af-b64e2268f902","name":"Resources","displayName":"Resources","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/footer-content/resources-column/resources","searchPageUrl":"/","fields":{"title":{"value":"Resources"}},"children":[{"id":"42095001-0c62-4ee7-9f49-20eb7efafb17","name":"Blog","displayName":"Blog","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/resources-column/resources/blog","searchPageUrl":"/","fields":{"link":{"value":{"href":"/blog","text":"Blog","linktype":"internal","id":"{10919727-36B6-4D26-804B-57383B20DE71}"}}}},{"id":"a27edc1a-7d9f-4252-8ae5-6e3dd50584f0","name":"Cybersecurity Glossary","displayName":"Cybersecurity Glossary","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/resources-column/resources/cybersecurity-glossary","searchPageUrl":"/","fields":{"link":{"value":{"href":"/glossary","text":"Cybersecurity Glossary","linktype":"internal","id":"{E8DE65EF-53AE-4679-8E0D-E5212DE9EFA5}"}}}},{"id":"213eb1fd-0a57-42e4-b536-c639b47f5a3d","name":"Resource Library","displayName":"Resource Library","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/resources-column/resources/resource-library","searchPageUrl":"/","fields":{"link":{"value":{"href":"/resources","text":"Resource Library","linktype":"internal","id":"{16BCBC39-2631-4162-B194-7524B8AE586E}"}}}},{"id":"2e279811-5d4e-446f-a1ba-277b6898b7b0","name":"Case Studies","displayName":"Case Studies","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/resources-column/resources/case-studies","searchPageUrl":"/","fields":{"link":{"value":{"href":"/resources","text":"Case Studies","linktype":"internal","querystring":"tags=Case+Study","id":"{16BCBC39-2631-4162-B194-7524B8AE586E}"}}}},{"id":"5350f37a-d8b8-4460-862f-2532cb2d9cec","name":"Data Sheets","displayName":"Data Sheets","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/resources-column/resources/data-sheets","searchPageUrl":"/","fields":{"link":{"value":{"href":"/resources","text":"Data Sheets","linktype":"internal","querystring":"tags=Data+Sheet","id":"{16BCBC39-2631-4162-B194-7524B8AE586E}"}}}},{"id":"e69274de-81d3-4c8b-820a-21261d7a6bb1","name":"Industry Reports","displayName":"Industry Reports","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/resources-column/resources/industry-reports","searchPageUrl":"/","fields":{"link":{"value":{"href":"/resources","text":"Industry Reports","linktype":"internal","querystring":"tags=Report ","id":"{16BCBC39-2631-4162-B194-7524B8AE586E}"}}}},{"id":"481f09ee-a8a5-4ed9-bcc2-0016901ec800","name":"In the News","displayName":"In the News","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/resources-column/resources/in-the-news","searchPageUrl":"/","fields":{"link":{"value":{"href":"/about/in-the-news","text":"In the News","linktype":"internal","id":"{2EAB5C99-E1CC-4228-A1B3-857DE515DB1E}"}}}},{"id":"fa46a4e1-dca5-40b0-82c1-13b2dada6c64","name":"Knowledge Center Library","displayName":"Knowledge Center Library","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/resources-column/resources/knowledge-center-library","searchPageUrl":"/","fields":{"link":{"value":{"href":"/centers","text":"Knowledge Center Library","linktype":"internal","id":"{96E4B26B-375E-4EB6-80F7-AFCBC4D6BFAE}"}}}},{"id":"c2fd0a1d-04ac-4d36-914f-791f1b63591f","name":"Live Events","displayName":"Live Events","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/resources-column/resources/live-events","searchPageUrl":"/","fields":{"link":{"value":{"href":"/about/events","text":"Live Events","linktype":"internal","id":"{39738E13-0AF3-4483-8B5B-46D201FB8926}"}}}},{"id":"23549ab1-111d-46f3-8855-0484f53e8429","name":"Threat Resource Library","displayName":"Threat Resource Library","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/resources-column/resources/threat-resource-library","searchPageUrl":"/","fields":{"link":{"value":{"href":"/research","text":"Threat Resource Library","linktype":"internal","id":"{E4D09D08-466F-4397-BBF7-3F04FCCA7C5D}"}}}},{"id":"c45ab4ce-646a-434b-8d5d-328d22f34e57","name":"Threat Profiles","displayName":"Threat Profiles","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/resources-column/resources/threat-profiles","searchPageUrl":"/","fields":{"link":{"value":{"href":"/research/threat-profiles","text":"Threat Profiles","linktype":"internal","id":"{5C8A3FD7-45F7-4F04-8DEA-8CD22524F619}"}}}},{"id":"6075accd-5f64-4c07-8d40-1fcee8e83fbe","name":"White Papers","displayName":"White Papers","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/resources-column/resources/white-papers","searchPageUrl":"/","fields":{"link":{"value":{"href":"/resources","text":"White Papers","linktype":"internal","querystring":"tags=White+Paper","id":"{16BCBC39-2631-4162-B194-7524B8AE586E}"}}}},{"id":"1ae0094b-9cc7-4f1f-875a-ca31a61e3168","name":"Webinars","displayName":"Webinars","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/resources-column/resources/webinars","searchPageUrl":"/","fields":{"link":{"value":{"href":"/resources","text":"Webinars","linktype":"internal","querystring":"tags=Webinar","id":"{16BCBC39-2631-4162-B194-7524B8AE586E}"}}}},{"id":"a585748a-2d63-4b48-a1b9-cbd2e3cb1a13","name":"Podcasts","displayName":"Podcasts","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/resources-column/resources/podcasts","searchPageUrl":"/","fields":{"link":{"value":{"href":"/resources","text":"Podcasts","linktype":"internal","querystring":"tags=Podcast","id":"{16BCBC39-2631-4162-B194-7524B8AE586E}"}}}},{"id":"94b0ffb8-3876-4977-9a52-07aa1a17d636","name":"Videos","displayName":"Videos","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/resources-column/resources/videos","searchPageUrl":"/","fields":{"link":{"value":{"href":"/resources","text":"Videos","linktype":"internal","querystring":"tags=Video","id":"{16BCBC39-2631-4162-B194-7524B8AE586E}"}}}}]},{"id":"047f13f0-3826-420d-b635-a01bd82d16d0","name":"Get In Touch","displayName":"Get In Touch","templateName":"Navigation Group","templateId":"{D7C18297-B521-453E-944F-515DE34E6E12}","url":"/content/navigation/footer-content/resources-column/get-in-touch","searchPageUrl":"/","fields":{"title":{"value":"Get In Touch"}},"children":[{"id":"1d7dada3-22e1-449d-8466-d3830ab52f8d","name":"Experiencing a Breach","displayName":"Experiencing a Breach","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/resources-column/get-in-touch/experiencing-a-breach","searchPageUrl":"/","fields":{"link":{"value":{"href":"/contact/emergency-response","text":"Experiencing a Breach","linktype":"internal","id":"{A47150CB-F354-43AF-8D78-C9228CD7D6CA}"}}}},{"id":"d0a82780-32ee-4a24-88fa-d58a64f928d1","name":"Contact","displayName":"Contact","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/resources-column/get-in-touch/contact","searchPageUrl":"/","fields":{"link":{"value":{"href":"/contact","text":"Contact","linktype":"internal","id":"{B5A18A3F-7A0F-4542-B2AB-44A2DD597543}"}}}},{"id":"cb98459f-bf27-4afd-a89a-1036337e85c2","name":"Support","displayName":"Support","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/resources-column/get-in-touch/support","searchPageUrl":"/","fields":{"link":{"value":{"href":"/customer-support","text":"Support","linktype":"internal","id":"{769978B9-F1A8-4DB1-BA28-567725A2418A}"}}}},{"id":"273762b3-1b23-4902-b735-381719035d8d","name":"Login","displayName":"Login","templateName":"Navigation Link","templateId":"{784F744F-0D31-4533-851C-3F938E729373}","url":"/content/navigation/footer-content/resources-column/get-in-touch/login","searchPageUrl":"/","fields":{"link":{"value":{"href":"https://portal.secureworks.com/portal/loginIDP","text":"Login","linktype":"external","url":"https://portal.secureworks.com/portal/loginIDP"}}}}]}],"renderingParams":{"cacheClearingBehavior":"Clear on publish"}}}]}}]}}],"headless-tail":[{"uid":"6cfec51d-e171-42c0-a8e6-fd5dde2832c7","componentName":"PartialDesignDynamicPlaceholder","dataSource":"","params":{"sid":"{5A1F0357-FC36-46A7-8236-A69E0E353F4A}","ph":"headless-tail","sig":"sxa-main-header"},"placeholders":{"sxa-main-header":[{"uid":"4594c3e7-195f-4349-9c8b-4e3935e31ea1","componentName":"CustomJs","dataSource":"{A899E283-9B2D-4D22-B9A1-BEE509D23DE4}","fields":{"ScriptType":{"value":"Script"},"Source":{"value":""},"Attributes":{"value":""},"Content":{"value":"document.addEventListener(\"securitypolicyviolation\", (e) =\u003e {\r\n    if(e.blockedURI !== 'inline'){\r\n      console.info(\"CSP BLOCKED: URI \", e.blockedURI , \" | DIRECTIVE\", e.violatedDirective);   \r\n    } else {\r\n      console.info(\"CSP BLOCKED: contents \", e.target.text);   \r\n    }\r\n});"}}},{"uid":"2d7cb732-ae45-4fb9-9850-139a685a03ea","componentName":"CustomJs","dataSource":"{8901243F-2464-4CA5-ADC0-4575314E764A}","fields":{"ScriptType":{"value":"Script"},"Source":{"value":""},"Attributes":{"value":"async"},"Content":{"value":"window.desktopSize = (window.innerWidth \u003e 1024)? true: false;\r\nwindow.updateNavIcon = () =\u003e {\r\n    \r\ndocument.querySelectorAll('[aria-label=\"Secureworks Homepage\"]')[0].innerHTML = `\u003csvg xmlns=\"http://www.w3.org/2000/svg\" id=\"Layer_1\" data-name=\"Layer 1\" width=\"182.97\" height=\"44\" viewBox=\"0 0 182.97 44\"\u003e\r\n\u003cdefs\u003e\r\n  \u003cstyle\u003e\r\n    .cls-1 {\r\n      fill: #fff;\r\n    }\r\n  \u003c/style\u003e\r\n\u003c/defs\u003e\r\n\u003cg\u003e\r\n  \u003cpath class=\"cls-1\" d=\"M60.01,40.75c-.35.57-1.07.95-2.35.95-1.82,0-2.42-.96-2.42-2.16,0-1.39.8-2.16,2.6-2.16h2.11v-.6c0-.9-.41-1.64-1.71-1.64-1.2,0-1.74.54-1.74,1.16v.11h-1.06v-.11c0-1.09.86-2.07,2.83-2.07,2.12,0,2.81,1.16,2.81,2.6v4.73h-1.01l-.05-.8ZM59.94,39v-.71h-1.94c-1.2,0-1.62.46-1.62,1.22,0,.71.34,1.28,1.56,1.28,1.47,0,2-.77,2-1.79Z\"/\u003e\r\n  \u003cpath class=\"cls-1\" d=\"M71.02,34.87v-.18c0-.58-.38-1.14-1.71-1.14-1.17,0-1.56.5-1.56,1.05,0,.58.37.83,1.06.96l1.9.38c1.25.24,2.55.94,2.55,2.61s-.96,3.17-3.79,3.17c-3.1,0-3.9-1.44-3.9-2.77v-.19h2.05v.15c0,.57.37,1.11,1.81,1.11,1.29,0,1.71-.53,1.71-1.2,0-.56-.34-.88-1.21-1.06l-1.89-.38c-1.37-.27-2.31-1.02-2.31-2.62,0-1.48,1.07-2.88,3.63-2.88,2.72,0,3.71,1.43,3.71,2.77v.22h-2.05Z\"/\u003e\r\n  \u003cpath class=\"cls-1\" d=\"M74.51,38.22v-2.85c0-1.66.9-3.49,3.94-3.49s3.95,1.83,3.95,3.49v2.85c0,1.66-.9,3.49-3.95,3.49s-3.94-1.83-3.94-3.49ZM80.34,38.12v-2.64c0-.87-.38-1.79-1.89-1.79s-1.88.92-1.88,1.79v2.64c0,.87.38,1.79,1.88,1.79s1.89-.92,1.89-1.79Z\"/\u003e\r\n  \u003cpath class=\"cls-1\" d=\"M86.17,38.73v2.83h-2.07v-9.51h3.74c3.07,0,3.95,1.66,3.95,3.34s-.88,3.34-3.95,3.34h-1.67ZM86.17,33.8v3.19h1.63c1.52,0,1.89-.8,1.89-1.59s-.37-1.6-1.89-1.6h-1.63Z\"/\u003e\r\n  \u003cpath class=\"cls-1\" d=\"M98.86,37.53h-3.67v4.02h-2.07v-9.51h2.07v3.7h3.67v-3.7h2.07v9.51h-2.07v-4.02Z\"/\u003e\r\n  \u003cpath class=\"cls-1\" d=\"M102.62,38.22v-2.85c0-1.66.9-3.49,3.94-3.49s3.95,1.83,3.95,3.49v2.85c0,1.66-.9,3.49-3.95,3.49s-3.94-1.83-3.94-3.49ZM108.45,38.12v-2.64c0-.87-.38-1.79-1.89-1.79s-1.88.92-1.88,1.79v2.64c0,.87.38,1.79,1.88,1.79s1.89-.92,1.89-1.79Z\"/\u003e\r\n  \u003cpath class=\"cls-1\" d=\"M117.22,34.87v-.18c0-.58-.38-1.14-1.71-1.14-1.17,0-1.56.5-1.56,1.05,0,.58.37.83,1.06.96l1.9.38c1.25.24,2.55.94,2.55,2.61s-.96,3.17-3.79,3.17c-3.1,0-3.9-1.44-3.9-2.77v-.19h2.05v.15c0,.57.37,1.11,1.81,1.11,1.29,0,1.71-.53,1.71-1.2,0-.56-.34-.88-1.21-1.06l-1.89-.38c-1.37-.27-2.31-1.02-2.31-2.62,0-1.48,1.07-2.88,3.63-2.88,2.72,0,3.71,1.43,3.71,2.77v.22h-2.05Z\"/\u003e\r\n  \u003cpath class=\"cls-1\" d=\"M129.68,39.07v.14c0,1.18-.77,2.5-2.89,2.5-2.28,0-3.02-1.48-3.02-2.84v-1.81c0-1.35.73-2.83,3.02-2.83,2.16,0,2.88,1.32,2.88,2.5v.14h-1.11v-.15c0-.72-.45-1.55-1.77-1.55-1.43,0-1.89.99-1.89,1.88v1.82c0,.9.46,1.89,1.89,1.89,1.32,0,1.77-.83,1.77-1.55v-.14h1.13Z\"/\u003e\r\n  \u003cpath class=\"cls-1\" d=\"M131.11,37.06c0-1.35.73-2.83,3.02-2.83s3.02,1.48,3.02,2.83v1.81c0,1.36-.72,2.84-3.02,2.84s-3.02-1.48-3.02-2.84v-1.81ZM136.01,37.04c0-.88-.46-1.88-1.89-1.88s-1.89.99-1.89,1.88v1.83c0,.88.46,1.89,1.89,1.89s1.89-1.01,1.89-1.89v-1.83Z\"/\u003e\r\n  \u003cpath class=\"cls-1\" d=\"M138.97,41.55v-7.17h1.01l.07.98c.38-.68,1.16-1.13,2.27-1.13s1.89.53,2.26,1.33c.37-.79,1.22-1.33,2.5-1.33,1.7,0,2.54,1.2,2.54,2.69v4.63h-1.13v-4.38c0-.98-.37-1.94-1.74-1.94s-1.89,1.02-1.89,2.08v4.24h-1.13v-4.38c0-.98-.37-1.94-1.74-1.94s-1.89,1.02-1.89,2.08v4.24h-1.13Z\"/\u003e\r\n  \u003cpath class=\"cls-1\" d=\"M152.77,40.74v3.26h-1.13v-9.62h1.01l.07.96c.39-.68,1.18-1.11,2.32-1.11,1.68,0,2.61,1.2,2.61,2.77v1.93c0,1.59-.95,2.77-2.65,2.77-1.09,0-1.83-.37-2.23-.96ZM156.52,38.69v-1.43c0-1.06-.37-2.02-1.81-2.02s-1.94.98-1.94,2.08v1.3c0,1.1.48,2.08,1.94,2.08s1.81-.92,1.81-2.01Z\"/\u003e\r\n  \u003cpath class=\"cls-1\" d=\"M163.87,40.75c-.35.57-1.07.95-2.35.95-1.82,0-2.42-.96-2.42-2.16,0-1.39.8-2.16,2.6-2.16h2.11v-.6c0-.9-.41-1.64-1.71-1.64-1.2,0-1.74.54-1.74,1.16v.11h-1.06v-.11c0-1.09.86-2.07,2.83-2.07,2.12,0,2.81,1.16,2.81,2.6v4.73h-1.01l-.05-.8ZM163.8,39v-.71h-1.94c-1.2,0-1.62.46-1.62,1.22,0,.71.34,1.28,1.56,1.28,1.47,0,2-.77,2-1.79Z\"/\u003e\r\n  \u003cpath class=\"cls-1\" d=\"M166.95,41.55v-7.17h1.01l.07.98c.39-.68,1.18-1.13,2.32-1.13,1.74,0,2.6,1.2,2.6,2.69v4.63h-1.14v-4.38c0-.98-.37-1.94-1.78-1.94s-1.94,1.02-1.94,2.08v4.24h-1.13Z\"/\u003e\r\n  \u003cpath class=\"cls-1\" d=\"M175.81,44l.92-2.47-2.62-7.15h1.2l1.97,5.68,2.08-5.68h1.13l-3.59,9.62h-1.09Z\"/\u003e\r\n\u003c/g\u003e\r\n\u003cpath class=\"cls-1\" d=\"M69.96,14.25v8.7h3.34v-8.7c0-1.97,1.6-3.57,3.57-3.57h2.52v-3.34h-2.52c-3.8,0-6.91,3.07-6.91,6.91Z\"/\u003e\r\n\u003cpath class=\"cls-1\" d=\"M88.6,7.11h-.23c-4.4.09-7.92,3.71-7.83,8.15,0,4.49,3.3,8.01,8.2,8.01,3.43,0,5.91-1.69,7.28-4.21l-2.75-1.51c-.82,1.74-2.61,2.84-4.53,2.79-2.7,0-4.53-1.6-4.99-3.98h12.82v-1.28h0c0-4.62-3.39-7.97-7.97-7.97ZM83.88,13.52c.6-2.11,2.52-3.53,4.72-3.48,2.38,0,4.08,1.24,4.58,3.48h-9.3Z\"/\u003e\r\n\u003cpath class=\"cls-1\" d=\"M25.82,7.11h-.23c-4.4.09-7.92,3.71-7.88,8.15,0,4.49,3.3,8.01,8.24,8.01,3.43,0,5.91-1.69,7.28-4.21l-2.75-1.51c-.82,1.74-2.61,2.84-4.53,2.79-2.7,0-4.53-1.6-4.99-3.98h12.87v-1.28c-.05-4.62-3.39-7.97-8.01-7.97ZM21.15,13.52c.6-2.11,2.56-3.53,4.72-3.48,2.38,0,4.08,1.24,4.58,3.48h-9.3Z\"/\u003e\r\n\u003cpath class=\"cls-1\" d=\"M9.52,9.85c-2.61-.87-4.99-1.6-4.99-3.75,0-1.74,1.51-3.11,3.8-3.11,1.83-.09,3.57.87,4.53,2.43l2.75-2.06C13.83,1.11,11.13-.13,8.29.01,4.12-.04,1.05,2.71,1.05,6.15c0,4.17,3.34,5.4,6.41,6.41,2.61.82,5.08,1.6,5.08,3.89,0,2.01-1.6,3.62-4.12,3.62-2.29,0-4.12-1.14-5.45-3.3l-2.98,2.38c1.97,2.7,5.13,4.21,8.47,4.12,4.67,0,7.56-3.34,7.56-6.78-.05-4.26-3.39-5.59-6.5-6.64Z\"/\u003e\r\n\u003cpath class=\"cls-1\" d=\"M43.91,20.16c-2.7,0-4.9-2.2-4.9-4.85v-.09c-.09-2.66,2.01-4.9,4.67-4.95h.14c1.92-.05,3.66,1.14,4.4,2.93l2.98-1.28c-1.24-2.93-4.17-4.81-7.37-4.76-4.4-.05-8.01,3.43-8.1,7.88v.23c-.05,4.4,3.53,8.01,7.92,8.06h.18c3.25.09,6.23-1.88,7.42-4.85l-3.02-1.28c-.64,1.74-2.38,2.98-4.3,2.98Z\"/\u003e\r\n\u003cpath class=\"cls-1\" d=\"M64.15,15.99c0,2.11-1.69,3.8-3.8,3.8s-3.8-1.69-3.8-3.8V7.43h-3.39v8.56c0,3.98,3.21,7.19,7.19,7.19s7.19-3.21,7.19-7.19V7.43h-3.39v8.56Z\"/\u003e\r\n\u003cpath class=\"cls-1\" d=\"M141.21,13.24v9.71h3.34v-9.71c0-1.42,1.14-2.61,2.61-2.61h3.53v-3.34h-3.53c-3.25.05-5.91,2.7-5.95,5.95Z\"/\u003e\r\n\u003cpath class=\"cls-1\" d=\"M181.46,3.44v-.09c-.05-.41-.37-.73-.78-.69h-.92v2.43h.37v-.87h.27l.64.87h.46l-.64-.92c.37-.05.64-.37.6-.73ZM180.18,3.86v-.78h.55c.23,0,.37.18.37.41s-.18.37-.41.37h-.5Z\"/\u003e\r\n\u003cpath class=\"cls-1\" d=\"M175.37,13.61c-2.24-.5-3.66-.82-3.66-1.92,0-1.01.92-1.88,2.66-1.88,1.37-.05,2.7.6,3.48,1.79l2.75-1.51c-1.19-1.88-3.34-3.02-6.23-3.02-3.66-.05-6,2.24-6,4.67,0,3.21,2.75,4.08,5.36,4.62,1.92.41,3.75.69,3.75,1.92,0,1.1-.96,2.06-2.84,2.06-1.65.05-3.16-.82-3.98-2.24l-2.98,1.6c1.33,2.29,3.57,3.62,6.82,3.62,4.4.05,6.27-2.84,6.27-4.99.05-3.3-2.84-4.17-5.4-4.72Z\"/\u003e\r\n\u003cpath class=\"cls-1\" d=\"M182.28,2.12h0c-.46-.46-1.05-.73-1.74-.73h-.05c-1.33,0-2.43,1.1-2.38,2.43h0c0,1.33,1.1,2.43,2.43,2.43s2.43-1.1,2.43-2.43c0-.6-.23-1.24-.69-1.69ZM180.59,5.92c-1.1,0-2.01-.87-2.06-2.01,0-1.14.87-2.06,2.01-2.06s2.06.87,2.06,2.01h0v.05c0,1.14-.92,2.01-2.01,2.01Z\"/\u003e\r\n\u003cpolygon class=\"cls-1\" points=\"115.43 18.46 111.45 7.43 108.15 7.43 104.08 18.46 100.55 7.43 97.16 7.38 102.29 22.95 105.54 22.95 109.75 11.87 113.88 22.95 117.08 22.95 122.48 7.43 119.1 7.43 115.43 18.46\"/\u003e\r\n\u003cpolygon class=\"cls-1\" points=\"163.46 7.43 156.28 15.21 163.46 23 167.45 23 160.26 15.21 167.45 7.43 163.46 7.43\"/\u003e\r\n\u003crect class=\"cls-1\" x=\"152.98\" y=\".29\" width=\"3.3\" height=\"22.67\"/\u003e\r\n\u003cpath class=\"cls-1\" d=\"M130.82,6.97c-4.49,0-8.1,3.62-8.1,8.1s3.62,8.1,8.1,8.1,8.1-3.62,8.1-8.1-3.62-8.1-8.1-8.1ZM130.82,19.97c-2.7,0-4.9-2.2-4.9-4.9s2.2-4.9,4.9-4.9,4.9,2.2,4.9,4.9-2.2,4.9-4.9,4.9Z\"/\u003e\r\n\u003c/svg\u003e`;\r\n}\r\nwindow.addEventListener('resize', () =\u003e {\r\n    if((window.innerWidth \u003e 1024 \u0026\u0026 window.desktopSize)\r\n        || (window.innerWidth \u003c 1024 \u0026\u0026 !window.desktopSize))\r\n    {\r\n        return; // no update necessary\r\n    }\r\n    setTimeout(() =\u003e\r\n        window.updateNavIcon()\r\n        , 100);\r\n    //window.updateNavIcon();\r\n    window.desktopSize = (window.innerWidth \u003e 1024)? true: false;\r\n}, true);\r\n\r\n\r\nsetTimeout(() =\u003e\r\n    window.updateNavIcon()\r\n    , 50);"}}}]}}]}}}},"dictionary":{"article_download_pdf":"Download PDF","article_last_updated_date":"Last Updated Date","article_now_trending":"Now Trending...","article_publishing_date":"Publishing Date","article_tags":"Tags","article_unable_to_display_pdf":"Unable to display PDF file.","404-h1-1":"THE PAGE YOU REQUESTED","404-body-text":"Secureworks Emergency Incident Response team can provide you immediate assistance responding to and remediating a possible cyber incident or data breach. Call now for 24/7 Incident Response:","404-h1-2":"DOES NOT EXIST","404-h2":"REGIONAL EMERGENCY HOTLINE NUMBERS\n","404-hero-body":"Lets get you back to safety","404-hero-linktext":"Visit Secureworks home page","Australia":"Australia","Canada":"Canada","France":"France","Germany":"Germany","Japan":"Japan","UnitedArabEmirates":"United Arab Emirates","UnitedKingdom":"United Kingdom","UnitedStates":"United States","content_security_policy":"script-src 'self' 'nonce-#nonce#' 'sha256-a4OsulkWqMTIxAzQEmKj+HnGXfA5kHFlNSi2RPJixoQ=' 'sha256-d5WXCRNK9hIqrsinW2Ti05th5ypqmt8rND1zZ5fIHRQ=' 'sha256-QanyWrbT0wCx9X2Jy1i0vjMWUJuBBnoFWBW59nXIAaQ=' 'sha256-QanyWrbT0wCx9X2Jy1i0vjMWUJuBBnoFWBW59nXIAaQ=' 'sha256-PDj+y4dsjx//y3j3XeqRQfENwQq6pGv979Bj2gNKC2U=' 'sha256-wY8ZJu7Uu8c5AFYGRuoE7SNBraw8IAkl5Yz+glnnte8=' 'sha256-UGfgrQ+GKJogDAQthuGt5lpepOeF3ypbYTr2PPxcBdU=' 'sha256-hUiPqjPAx0BTYk+HP/Ohq7cZFW+CFLUDreW74sIBUJk=' 'sha256-MWnKpq2mO4B+C/F7fLTeifs05WkVCc8Hkl+SzXGUmtI=' 'sha256-QiHtJSgKkeO/qh+2A9GCUt3xk8ONLQAa6uua+j+nHLg=' 'sha256-7+1sMW/o6RcIncEOmuvZbRThB6NRZLwQjvsqQAGehKA=' 'sha256-tYinntSHdpRdg0LwZuBycjWqxaMdCzBdOnOGsSZH2Ho=' 'sha256-DP0AJIADL+tS8s/bg6t7xbMHunrd17JCuOgpyNjxt/M=' 'sha256-sqwbnK0D7p9u3WG0lgAYLYmp/byKS9zlT2eFORz1SDY=' 'sha256-L436NBsgbW4nnr2zz6geY9aouLDwQiH+458+ny7TeJ8=' 'sha256-t21JzuoP0AGVdHYfaGtWzFviQ1hj34OuECR3Ur2P1Dk=' 'sha256-kmGPVWtzfwq6b9fEOy1NmWxrKyxreHZU5tKvRxQpDMA=' 'sha256-SAqGhA/G1eraYlnHKoGwPlIvGfOo45eq5hoyKq2LnUY=' 'sha256-+08d4MzO/if2DlZslM+0a0gvpYaPHK7ilzV9yUXHxRo=' 'sha256-5RKybv4IYG3Rt1CcIXoS1OAD7D0vjWLop/a6KVpWxM0=' 'sha256-N/Mk5WIdXnJRlsc5rmMcLJsovC5ozGJ5BmVdRxKOeNc=' 'sha256-XJEfHQ97N7xwKM6MQXMpabeUHxVT647JYAYwrOX6sQQ=' 'sha256-sdKFLBOaDq01ySztbW/n0JnIwsMIlCr7AaMAznJOqA0=' 'sha256-7pyFNQ34QDbIyjfqF4dboUBH/FqtGtJgw7KPgC+aKY8=' 'sha256-yYGe3YxZ1stILsg6s+TKQ7ACovlrQ/V7H5hpGiko1EI=' 'sha256-JcTUCZru8bIzmyUfGjmyP1Nwn0ccUuwLyJA5/jgV2jI=' 'sha256-zEF/ALwwDYV2nZ+rdYGh2XpjU1lbO3oZ2osZayOlmpw=' 'sha256-ErdS+5vyua60ApoR4T4MK5hMhAxO8I75iqTuR4st0lk=' 'sha256-dgOinhXczUSm4ADnOKjecy4HqoIpihiWY1xMUGi3KiE=' 'sha256-bAZaADjFxXYURQUP9Z4p4eiIim+gCGst1ZWemjLGJxo=' 'sha256-x3E2vOOOHY24kNAmZOQxorAyW5o6cX3R7J5Jg+RTqZY=' 'sha256-WJHVKi7ReHnWJF4AUmd9vWDpqeX8GVtEsyAJP01M130=' 'sha256-mvYU2m+aQi6xWWVpxauZ/UaXg+HkwxCv4r/qVBDAm3A=' 'sha256-IgMQOOOedQeMPBl7lSreMVPmJvU62bc6l8HcsGXnbWc=' 'sha256-Ov0LRI92VqZTYbOhyIvK8iFCm9rBs/HXaYLwlDMrra0=' 'sha256-HjgaVwCCuGQHih00gvN/PUGZuGwVIWd/6sThgUEi83E=' 'sha256-7oEVqsTDSU0XTGoiH3B7bXM3sMDjv58JCTndWi8pUKw=' 'sha256-ZlXTkZmAmWswFmM/VCVi0DLagBh+F9JWQiK/yRsf7yc=' 'sha256-76Yt/S5cofMdn9d5/cJOU32zSvhw1A8QJDSgL1c0YRI=' 'sha256-z4pF+zMq94+GUUF273G0WvSAL91jUazcB1NOISkNlzk=' 'sha256-4OIRiOWgv2ak/dapUtCUuoqEUnVBrH8A9LJCp3dthUw=' 'sha256-ew0tynw+zAqBiv217Nj202XmktwGvkQU7jXqQMotiHg=' 'sha256-2mFyIAC6FjDBvAg15BPawsugazV1sKm4T9x09V76BK0=' 'sha256-kxoZz5p2Ko+K+FXi8lIZc2opwhJF9WD4/wy9+dLYHzY=' 'sha256-+ThII46Fk+h63393vJ+nvAEZnTSXIwpqVJDSklAo5eM=' 'sha256-hUowsewUBuLRjFz7Z3pohTKe/pX/uO7uKD1k25qHLQY=' 'sha256-pMZUEpT65ftOEzHdiYyq/2vt545RymVHJSh5H2y5BDk=' 'sha256-nGkmLI0CpGjUy6Gg2vRE6xAh+vU4jlNVmPB+55WJmn8=' 'sha256-j6LWS7Q+Wsyd91b6000yHCoIqUaJIJQq56Lw3XQPcHA=' 'sha256-XQ6pUmmjpjpunCfT67q0ACDA7NqxLJx1iJwCFhC73wo=' 'sha256-tCniuKIyeHpfi5vxJOgLkz0eRI+cerKWFRsy5hMt5V0=' 'sha256-EZaJwK6Bh4sdKWjgv6zhJUdT2ISL4NhEQSPYf++uAeU=' 'sha256-1T7dud0UtKJZdhJcgsp1gh8MZDyA3S8DIsOpB3+co4M=' 'sha256-g6A8gRllShDRUg9hmXQZ0ZvMQ35F4jsarESQIDJtpE4=' 'sha256-y6vRm9V8P08qfB27ukHo07LF4IM00RKuKNzQBfsBlgg=' 'sha256-1GbAOPSdN7GyL999DpkIzp8XYAH1OP43heqQi7uU3FQ=' 'sha256-1p8zU6DNbl/tn8sFUoVBsvAF+dwRMDHK3WXM4vqIhDc=' 'sha256-39FcaN3WyGnHnf2UX+fHrSBSJq4KI6BETrXNemtzDa8=' 'sha256-4N1dEVT13lNPCpxXX2XuIlfUBwZp3wNLb/hBbSKGESA=' 'sha256-hNSRZgUy89mPGFidDBRWC4Ed4jKTrCtZP2zeBPNbdeI=' 'sha256-CD2LEDjz/KtOaC5rzryax+qZEQVmnKcZAQsqnSqAIXw=' 'sha256-FKJXEsmjg1Bgqi33LGcZCFxDahpEPN6prnNBVDxvfhc=' 'sha256-GNXg66Qlqpdgh9Nsv/+xAVNgfxsTWLi+TUdpxamXMuU=' 'sha256-TKtnYUWk/B6gzo2immnWBOjewDye+cXQBoAlykzhX/s=' 'sha256-BMQXzfchDpNs+zYF2cO7o9iAJtoSq+2OX45TfNM/cdA=' 'sha256-IECBAorlkKUYQadvB50kjQC3oIqb9xKfOB+cVXdarE0=' 'sha256-c+xyt9U1PbPeI7Pot035l4MckCT6qHAzxiBA5t+7KPE=' 'sha256-bZ4r9bNMpnkokR0Gwp+X+Y0qYhZKQwglL8B9TAvMsrA=' 'sha256-GNsgzTmK93RFT4ppB/KnAwm9wVkth71ceJVqrzSGC6M=' 'sha256-NMtcHh/vZkcUq5lHSUz2dzv8n1jv1SFeNewgEGvik4k=' 'sha256-qNQx9jt8qaEBXM11NIr686AfxMFZ5JdLDih1v53gg58=' 'sha256-V3cvEVskzD9prkzxm7tqKYfGLb9bWJvWCtL+JIITaS0=' 'sha256-waeaCDLj6GQjXDbMrbks0tMGletGWM4yUCtZexjXtQ4=' 'sha256-NqbLH0mR4blvVOwz3czIHomPHCsoQ0Wm41wF1kBSvZU=' 'sha256-TZtgnurDy2HoHCI+ehO8j6c5zhggFWTaD7sk189UzKM=' 'sha256-gsbdg33D5bd9G0LZ0fXRG2gtuTHtE5/f0vcHrZgakbQ=' 'sha256-BXlqoZ7hukD5ysO0e9EKhq69GLrh8k9fWsZ10PXXdOc=' 'sha256-d5WXCRNK9hIqrsinW2Ti05th5ypqmt8rND1zZ5fIHRQ=' 'sha256-c5M+NLgRh2uZKLBm0W58rq/nZX5z4LEQxfCSjY7wCHQ=' 'sha256-gzKnDBOzzYYhMmRH3rT73OegABllJzEMo+1usge47aM=' 'sha256-wXwbYLVZgyzry5fK/5WnQq9jT3RAAfcWHUooavfpDo4=' 'sha256-o9eHUQeH0AlkwLizLQ194ce+ILKV8zO1qabDSlq9+Vw=' 'sha256-/g2e64ddggDcPHArpj4SkIUi7M1alw71SxAndKPWytI=' 'sha256-BQBjX7Zr2oEnL/G5+L9abLZPWYrN03x5SjrUYKt+9O4=' 'sha256-/EXHF24ZLv3sVXdu8zVsOFrJXNdeav40mWXR6cS6/nk=' 'sha256-ge9pG7IIkD7dLmy8K31jJuB81Pqs3PqTXUWxeDYc8xI=' *.secureworks.com https://play.vidyard.com https://code.jquery.com https://js-agent.newrelic.com https://bam.nr-data.net https://pcdnscwx001.azureedge.net https://munchkin.marketo.net https://*.marketo.com https://www.googleadservices.com https://googleads.g.doubleclick.net https://www.google.com https://www.google-analytics.com https://ssl.google-analytics.com https://www.googletagmanager.com https://ajax.googleapis.com https://tagmanager.google.com https://translate.google.com https://bat.bing.com https://connect.facebook.net https://ad.atdmt.com https://static.ads-twitter.com https://analytics.twitter.com https://www.linkedin.com https://px.ads.linkedin.com https://snap.licdn.com https://sjs.bizographics.com https://j.6sc.co https://b.6sc.co https://*.6sc.co https://epsilon.6sense.com https://*.rlcdn.com https://gateway.zscaler.net https://geolocation.onetrust.com https://optanon.blob.core.windows.net https://cdn.cookielaw.org https://api.rollbar.com https://*.drift.com https://*.driftt.com https://*.simplecast.com https://*.crazyegg.com https://script.crazyegg.com https://widgets.ziftsolutions.com https://hammock.hotprofile.biz https://transfertool.hotprofile.biz/production/ https://m-store-hammock.hot-profile.com/hot-profile/ https://wa2.hot-profile.com https://*.on24.com https://*.ceros.com https://*.redditstatic.com https://*.ensighten.com https://*.ml314.com https://*.choozle.com https://*.bluekai.com https://cdn.bizible.com https://cdn.bizibly.com https://ws-assets.zoominfo.com https://ws.zoominfo.com https://*.clarity.ms https://cdn.pdst.fm https://*.cloudfunctions.net https://www.teads.com https://p.teads.tv https://www.facebook.com connect.facebook.net https://*.eloqua.com https://*.en25.com; img-src 'self' https://*.teads.tv https://*.jsdelivr.net https://*.vidyard.com content.secureworks.com *.secureworks.com web.secureworks.com www.google.com *.googletagmanager.com *.google-analytics.com www.google.com.ua googleads.g.doubleclick.net cdn.cookielaw.org *.gstatic.com optanon.blob.core.windows.net bat.bing.com c.bing.com j.6sc.co b.6sc.co c.6sc.co epsilon.6sense.com attr.ml-api.io s.ml-attr.com secure.adnxs.com id.rlcdn.com px.ads.linkedin.com *.adslinkedin.com p.adsymptotic.com www.linkedin.com static.ziftsolutions.com *.crazyegg.com *.redditstatic.com alb.reddit.com *.ensighten.com ml314.com *.choozle.com *.bluekai.com cdn.bizible.com cdn.bizibly.com *.clarity.ms analytics.twitter.com t.co www.facebook.com t.teads.tv https://ssl.gstatic.com https://www.gstatic.com blob: data:; frame-ancestors 'self' *.folloze.com https://calculator.value-cloud.com *.secureworks.com; worker-src 'self' blob: data:;","footer_copyright_company":"Secureworks, Inc.","resource_article_number_of_pages":"{VALUE} Page","resource_article_number_of_pages_plural":"{VALUE} Pages","resource_article_read_time":"{VALUE} Minute Read","resource_article_read_time_plural":"{VALUE} Minutes Read","resource_article_watch_time":"{VALUE} Minute","resource_article_watch_time_plural":"{VALUE} Minutes","Download":"Download","Download All Data":"Download All Data","Downloading...":"Downloading...","search_event_live":"Live","search_event_on_demand":"On-Demand","search_event_upcoming":"Upcoming","search_facets_content_type":"Content Type","search_facets_event_type":"Event Type","search_facets_industry":"Industry","search_facets_objectives":"Objectives","search_facets_product":"Product","search_facets_region":"Region","search_facets_service":"Service","search_facets_thematic_areas":"Thematic Areas","search_facets_topic":"Topic","search_filters_clear_filters":"Clear Filters","search_filters_filter":"Filter","search_filters_filters_selected":"Filters Selected","search_no_results_description":"Please check spelling or try different keywords","search_no_results_title":"No results to show","RSS":"RSS","RSS Feed":"RSS Feed","search_sort_by_alphabetical":"Alphabetical","search_sort_by_most_recent":"Most Recent","search_sort_by_oldest_to_newest":"Oldest To Newest","search_result":"result","search_results":"results"},"componentProps":{"9fb6f896-f8f9-49a9-a977-29b9beef7224":null},"nonce":"MWM4OWUzOWEtZjBiOS00ZjAzLTgzM2MtOTNmN2RiM2E2ZjZj"},"__N_SSP":true},"page":"/[[...path]]","query":{"path":["_site_swxp-rendering","research","darktortilla-malware-analysis"]},"buildId":"cToPZMMvGQcJIfVX2YHg0","assetPrefix":"https://www.secureworks.com","isFallback":false,"dynamicIds":[37062],"gssp":true,"locale":"en","locales":["en","ja-JP","fr-FR"],"defaultLocale":"en","scriptLoader":[]}</script></body></html>