<!DOCTYPE html><html lang="en-US"><head><meta charSet="utf-8" data-next-head=""/><meta name="viewport" content="width=device-width" data-next-head=""/><link rel="icon" href="https://techcommunity.microsoft.com/t5/s/gxcuf89792/m_assets/themes/customTheme1/favicon-1730836283320.png?time=1730836286415&amp;image-dimensions=32x32" type="image/png" data-next-head=""/><link rel="apple-touch-icon" href="https://techcommunity.microsoft.com/t5/s/gxcuf89792/m_assets/themes/customTheme1/favicon-1730836283320.png?time=1730836286415&amp;image-dimensions=180x180" type="image/png" data-next-head=""/><link rel="manifest" href="/manifest.webmanifest/customTheme1/1749167508102" data-next-head=""/><title data-next-head="">SolarWinds Post-Compromise Hunting with Azure Sentinel | Microsoft Community Hub</title><meta name="robots" content="index,follow" data-next-head=""/><meta name="description" content="
Microsoft recently blogged about the Recent Nation-State Cyber Attacks that has impacted high value targets both across the government and private sector...." data-next-head=""/><meta name="twitter:card" content="summary_large_image" data-next-head=""/><meta property="og:title" content="SolarWinds Post-Compromise Hunting with Azure Sentinel | Microsoft Community Hub" data-next-head=""/><meta property="og:description" content="
Microsoft recently blogged about the Recent Nation-State Cyber Attacks that has impacted high value targets both across the government and private sector...." data-next-head=""/><meta property="og:url" content="https://techcommunity.microsoft.com/blog/microsoftsentinelblog/solarwinds-post-compromise-hunting-with-azure-sentinel/1995095" data-next-head=""/><meta property="og:type" content="article" data-next-head=""/><meta property="article:modified_time" content="2021-11-02T18:30:13.281-07:00" data-next-head=""/><meta property="og:image" content="https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTE2OGlFQjcxOEM5Njc1QzQ5Q0Q3?revision=57" data-next-head=""/><meta property="og:image:width" content="799" data-next-head=""/><meta property="og:image:height" content="527" data-next-head=""/><meta property="og:site_name" content="TECHCOMMUNITY.MICROSOFT.COM" data-next-head=""/><link rel="canonical" href="https://techcommunity.microsoft.com/blog/microsoftsentinelblog/solarwinds-post-compromise-hunting-with-azure-sentinel/1995095" data-next-head=""/><style type="text/css" data-next-head="">:root:root { --lia-nav-bg-color: var(--lia-bs-white); --lia-nav-bg-opacity: 0.8; --lia-nav-pt: 15px; --lia-nav-pb: 15px; --lia-nav-border-bottom: 1px solid var(--lia-bs-border-color); --lia-nav-box-shadow: var(--lia-bs-box-shadow-sm); --lia-nav-brand-mr: 30px; --lia-nav-brand-mr-sm: 10px; --lia-nav-brand-logo-height: 30px; --lia-nav-link-gap: 10px; --lia-nav-link-justify-content: flex-start; --lia-nav-link-py: 5px; --lia-nav-link-px: 10px; --lia-nav-link-dropdown-py: 9px; --lia-nav-link-dropdown-px: var(--lia-nav-link-px); --lia-nav-link-color: var(--lia-bs-body-color); --lia-nav-link-hover-color: var(--lia-bs-body-color); --lia-nav-link-font-size: 14px; --lia-nav-link-font-style: NORMAL; --lia-nav-link-font-weight: 400; --lia-nav-link-text-transform: none; --lia-nav-link-letter-spacing: normal; --lia-nav-link-border-radius: var(--lia-bs-border-radius-sm); --lia-nav-link-bg-color: transparent; --lia-nav-link-bg-hover-color: transparent; --lia-nav-link-border: none; --lia-nav-link-border-hover: none; --lia-nav-link-box-shadow: none; --lia-nav-link-box-shadow-hover: none; --lia-nav-link-text-border-bottom: none; --lia-nav-link-text-border-bottom-hover: 2px solid var(--lia-bs-body-color); --lia-nav-dropdown-pt: 10px; --lia-nav-dropdown-pb: 15px; --lia-nav-dropdown-px: 10px; --lia-nav-dropdown-menu-offset: 2px; --lia-nav-dropdown-divider-mt: 10px; --lia-nav-dropdown-divider-mb: 10px; --lia-nav-dropdown-border-color: hsla(var(--lia-bs-black-h), var(--lia-bs-black-s), var(--lia-bs-black-l), 0.08); --lia-nav-controller-bg-hover-color: hsla(var(--lia-bs-black-h), var(--lia-bs-black-s), var(--lia-bs-black-l), 0.1); --lia-nav-controller-icon-color: var(--lia-bs-body-color); --lia-nav-controller-icon-hover-color: var(--lia-bs-body-color); --lia-nav-controller-icon-highlight: hsla(30, 100%, 50%); --lia-nav-controller-icon-highlight-text: var(--lia-yiq-dark); --lia-nav-controller-text-color: var(--lia-nav-controller-icon-color); --lia-nav-controller-text-hover-color: var(--lia-nav-controller-icon-hover-color); --lia-nav-controller-border-radius: var(--lia-border-radius-50); --lia-nav-hamburger-color: var(--lia-nav-controller-icon-color); --lia-nav-hamburger-hover-color: var(--lia-nav-controller-icon-color); --lia-nav-hamburger-bg-color: transparent; --lia-nav-hamburger-bg-hover-color: transparent; --lia-nav-hamburger-border: none; --lia-nav-hamburger-border-hover: none; --lia-nav-collapse-menu-ml: 20px; --lia-nav-collapse-menu-divider-bg: var(--lia-nav-link-color); --lia-nav-collapse-menu-divider-opacity: 0.16; }</style><script type="application/ld+json" data-next-head="">{"@context":"https://schema.org","@type":"BreadcrumbList","itemListElement":[{"@type":"ListItem","position":1,"item":"https://techcommunity.microsoft.com","name":"Microsoft Community Hub"},{"@type":"ListItem","position":2,"item":"https://techcommunity.microsoft.com/category/communities","name":"Communities"},{"@type":"ListItem","position":3,"item":"https://techcommunity.microsoft.com/category/products-services","name":"Products"},{"@type":"ListItem","position":4,"item":"https://techcommunity.microsoft.com/category/microsoft-security","name":"Microsoft Security"},{"@type":"ListItem","position":5,"item":"https://techcommunity.microsoft.com/category/microsoft-sentinel","name":"Microsoft Sentinel"},{"@type":"ListItem","position":6,"item":"https://techcommunity.microsoft.com/category/microsoft-sentinel/blog/MicrosoftSentinelBlog","name":"Microsoft Sentinel Blog"}]}</script><style type="text/css" data-testid="CustomComponentContentCss" data-next-head="">.custom_widget_MicrosoftFooter_context-uhf_yuh6w_1 {
  min-width: 17.5rem;
  font-size: 0.9375rem;
  box-sizing: border-box;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  &amp; *,
  &amp; *:before,
  &amp; *:after {
    box-sizing: inherit;
  }
  a.custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12 {
    color: #616161;
    word-break: break-word;
    text-decoration: none;
  }
  &amp;a:link,
  &amp;a:focus,
  &amp;a:hover,
  &amp;a:active,
  &amp;a:visited {
    text-decoration: none;
    color: inherit;
  }
  &amp; div {
    font-family: &#x27;Segoe UI&#x27;, SegoeUI, &#x27;Helvetica Neue&#x27;, Helvetica, Arial, sans-serif;
  }
}
.custom_widget_MicrosoftFooter_c-uhff_yuh6w_12 {
  background: #f2f2f2;
  margin: -1.5625;
  width: auto;
  height: auto;
}
.custom_widget_MicrosoftFooter_c-uhff-nav_yuh6w_35 {
  margin: 0 auto;
  max-width: calc(100rem + 10%);
  padding: 0 5%;
  box-sizing: inherit;
  &amp;:before,
  &amp;:after {
    content: &#x27; &#x27;;
    display: table;
    clear: left;
  }
  @media only screen and (max-width: 1083px) {
    padding-left: 0.75rem;
  }
  .custom_widget_MicrosoftFooter_c-heading-4_yuh6w_49 {
    color: #616161;
    word-break: break-word;
    font-size: 0.9375rem;
    line-height: 1.25rem;
    padding: 2.25rem 0 0.25rem;
    font-weight: 600;
  }
  .custom_widget_MicrosoftFooter_c-uhff-nav-row_yuh6w_57 {
    .custom_widget_MicrosoftFooter_c-uhff-nav-group_yuh6w_58 {
      display: block;
      float: left;
      min-height: 0.0625rem;
      vertical-align: text-top;
      padding: 0 0.75rem;
      width: 100%;
      zoom: 1;
      &amp;:first-child {
        padding-left: 0;
        @media only screen and (max-width: 1083px) {
          padding-left: 0.75rem;
        }
      }
      @media only screen and (min-width: 540px) and (max-width: 1082px) {
        width: 33.33333%;
      }
      @media only screen and (min-width: 1083px) {
        width: 16.6666666667%;
      }
      ul.custom_widget_MicrosoftFooter_c-list_yuh6w_78.custom_widget_MicrosoftFooter_f-bare_yuh6w_78 {
        font-size: 0.6875rem;
        line-height: 1rem;
        margin-top: 0;
        margin-bottom: 0;
        padding-left: 0;
        list-style-type: none;
        li {
          word-break: break-word;
          padding: 0.5rem 0;
          margin: 0;
        }
      }
    }
  }
}
.custom_widget_MicrosoftFooter_c-uhff-base_yuh6w_94 {
  background: #f2f2f2;
  margin: 0 auto;
  max-width: calc(100rem + 10%);
  padding: 1.875rem 5% 1rem;
  &amp;:before,
  &amp;:after {
    content: &#x27; &#x27;;
    display: table;
  }
  &amp;:after {
    clear: both;
  }
  a.custom_widget_MicrosoftFooter_c-uhff-ccpa_yuh6w_107 {
    font-size: 0.6875rem;
    line-height: 1rem;
    float: left;
    margin: 0.1875rem 0;
  }
  a.custom_widget_MicrosoftFooter_c-uhff-ccpa_yuh6w_107:hover {
    text-decoration: underline;
  }
  ul.custom_widget_MicrosoftFooter_c-list_yuh6w_78 {
    font-size: 0.6875rem;
    line-height: 1rem;
    float: right;
    margin: 0.1875rem 0;
    color: #616161;
    li {
      padding: 0 1.5rem 0.25rem 0;
      display: inline-block;
    }
  }
  .custom_widget_MicrosoftFooter_c-list_yuh6w_78.custom_widget_MicrosoftFooter_f-bare_yuh6w_78 {
    padding-left: 0;
    list-style-type: none;
  }
  @media only screen and (max-width: 1083px) {
    display: flex;
    flex-wrap: wrap;
    padding: 1.875rem 1.5rem 1rem;
  }
}
.custom_widget_MicrosoftFooter_social-share_yuh6w_138 {
  position: fixed;
  top: 60%;
  transform: translateY(-50%);
  left: 0;
  z-index: 1000;
}
.custom_widget_MicrosoftFooter_sharing-options_yuh6w_146 {
  list-style: none;
  padding: 0;
  margin: 0;
  display: block;
  flex-direction: column;
  background-color: white;
  width: 3.125rem;
  border-radius: 0 0.4375rem 0.4375rem 0;
}
.custom_widget_MicrosoftFooter_linkedin-icon_yuh6w_156 {
  border-top-right-radius: 7px;
}
.custom_widget_MicrosoftFooter_linkedin-icon_yuh6w_156:hover {
  border-radius: 0;
}
.custom_widget_MicrosoftFooter_social-share-email-image_yuh6w_163:hover {
  border-radius: 0;
}
.custom_widget_MicrosoftFooter_social-link-footer_yuh6w_167:hover .custom_widget_MicrosoftFooter_linkedin-icon_yuh6w_156 {
  border-radius: 0;
}
.custom_widget_MicrosoftFooter_social-link-footer_yuh6w_167:hover .custom_widget_MicrosoftFooter_social-share-email-image_yuh6w_163 {
  border-radius: 0;
}
.custom_widget_MicrosoftFooter_social-link-footer_yuh6w_167 img {
  width: 1.875rem;
  height: auto;
  transition: filter 0.3s ease;
}
.custom_widget_MicrosoftFooter_social-share-list_yuh6w_180 {
  width: 3.125rem;
}
.custom_widget_MicrosoftFooter_social-share-rss-image_yuh6w_183 {
  width: 1.875rem;
  height: auto;
  transition: filter 0.3s ease;
}
.custom_widget_MicrosoftFooter_sharing-options_yuh6w_146 li {
  width: 3.125rem;
  height: 3.125rem;
  padding: 0.5rem;
  box-sizing: border-box;
  border: 2px solid white; 
  display: inline-block;
  text-align: center;
  opacity: 1;
  visibility: visible;
  transition: border 0.3s ease; /* Smooth transition effect */
  border-left: none;
  border-bottom: none; /* Apply bottom border to only last item */
}
.custom_widget_MicrosoftFooter_social-share-list-linkedin_yuh6w_203 {
  background-color: #0474b4;
  border-top-right-radius: 5px; /* Rounded top right corner of first item*/
}
.custom_widget_MicrosoftFooter_social-share-list-facebook_yuh6w_207 {
  background-color: #3c5c9c;
}
.custom_widget_MicrosoftFooter_social-share-list-xicon_yuh6w_210 {
  background-color: #000;
}
.custom_widget_MicrosoftFooter_social-share-list-reddit_yuh6w_213 {
  background-color: #fc4404;
}
.custom_widget_MicrosoftFooter_social-share-list-bluesky_yuh6w_216 {
  background-color: #f0f2f5;
}
.custom_widget_MicrosoftFooter_social-share-list-rss_yuh6w_219 {
  background-color: #ec7b1c;
}
.custom_widget_MicrosoftFooter_social-share-list-mail_yuh6w_222 {
  background-color: #848484;  
  border-bottom-right-radius: 5px; /* Rounded bottom right corner of last item*/
}
.custom_widget_MicrosoftFooter_sharing-options_yuh6w_146 li.custom_widget_MicrosoftFooter_social-share-list-mail_yuh6w_222 {
  border-bottom: 2px solid white;  /* Add bottom border only to the last item */
  height: 3.25rem; /* Increase last child height to make in align with the hover label */
}
.custom_widget_MicrosoftFooter_x-icon_yuh6w_230 {
  filter: invert(100%);
  transition: filter 0.3s ease;
  width: 1.25rem !important;
  height: auto;
  padding-top: 0.3125rem !important;
}
.custom_widget_MicrosoftFooter_bluesky-icon_yuh6w_237 {
  filter: invert(20%) sepia(100%) saturate(3000%) hue-rotate(180deg);
  transition: filter 0.3s ease;
  padding-top: 0.3125rem !important;
  width: 1.5625rem !important;
}
.custom_widget_MicrosoftFooter_share-icon_yuh6w_244 {
  border: 2px solid transparent;
  display: inline-block;
  position: relative;
}
.custom_widget_MicrosoftFooter_sharing-options_yuh6w_146 li:hover {
  border: 2px solid white; 
  border-left: none;
  border-bottom: none;
  border-radius: 0;
}
.custom_widget_MicrosoftFooter_sharing-options_yuh6w_146 li.custom_widget_MicrosoftFooter_social-share-list-mail_yuh6w_222:hover {
  border-bottom: 2px solid white;  /* Add bottom border only to the last item */
}
.custom_widget_MicrosoftFooter_sharing-options_yuh6w_146 li:hover .custom_widget_MicrosoftFooter_label_yuh6w_260 {
  opacity: 1;
  visibility: visible;
  border: 2px solid white;
  box-sizing: border-box;
  border-left: none;
}
.custom_widget_MicrosoftFooter_label_yuh6w_260 {
  position: absolute;
  left: 100%;
  white-space: nowrap;
  opacity: 0;
  visibility: hidden;
  transition: all 0.2s ease;
  color: white;
  border-radius: 0 10 0 0.625rem;
  top: 50%;
  transform: translateY(-50%);
  height: 3.25rem;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.625rem 0.75rem 0.9375rem 0.5rem;
  border: 2px solid white;
}
.custom_widget_MicrosoftFooter_linkedin_yuh6w_156 {
  background-color: #0474b4;
  border-top-right-radius: 5px; /* Rounded top right corner of first item*/
}
.custom_widget_MicrosoftFooter_facebook_yuh6w_290 {
  background-color: #3c5c9c;
}
.custom_widget_MicrosoftFooter_twitter_yuh6w_293 {
  background-color: black;
  color: white;
}
.custom_widget_MicrosoftFooter_reddit_yuh6w_297 {
  background-color: #fc4404;
}
.custom_widget_MicrosoftFooter_mail_yuh6w_300 {
  background-color: #848484;
  border-bottom-right-radius: 5px; /* Rounded bottom right corner of last item*/
}
.custom_widget_MicrosoftFooter_bluesky_yuh6w_237 {
  background-color: #f0f2f5;
  color: black;
}
.custom_widget_MicrosoftFooter_rss_yuh6w_308 {
  background-color: #ec7b1c;
}
@media (max-width: 991px) {
  .custom_widget_MicrosoftFooter_social-share_yuh6w_138 {
    display: none;
  }
}
</style><script type="application/ld+json" data-next-head="">{"@context":"https://schema.org","@type":"BlogPosting","datePublished":"12/16/2020, 7:54:32 PM","description":"MSTIC has released a number of new hunting and detection queries for Azure Sentinel based on additional observations as well as research released by partners and the wider community. In addition, the SolarWinds post compromise hunting workbook has been updated to include a number of new sections.&amp;nbsp;&amp;nbsp;\nBlog sections have been marked with Updated&amp;nbsp;and include the date they were last updated.\n&amp;nbsp;\nMicrosoft recently blogged about the Recent Nation-State Cyber Attacks that has impacted high value targets both across the government and private sector. This attack is also known as Solorigate or Sunburst. This threat actor is believed to be highly sophisticated and motivated. Relevant security data required for hunting and investigating such a complex attack is produced in multiple locations - cloud, on-premises and across multiple security tools and product logs.&amp;nbsp; Being able to analyze all the data from a single point makes it easier to spot trends and attacks. Azure Sentinel has made it easy to collect data from multiple data sources across different environments both on-prem and cloud with the goal of connecting that data together more easily. This blog post contains guidance and generic approaches to hunt for attacker activity (TTPs) in data that is available by default in Azure Sentinel or can be onboarded to Azure Sentinel.&amp;nbsp;\n&amp;nbsp;\nAssociated content details:\n\n\n\n\nUpdated 12/18/2020\nCurrently known in depth&amp;nbsp;attack details have been provided by the M365 and MSTIC teams via the&amp;nbsp;deep dive analysis blog.\n\n\n\nUpdated 12/21/2020\nCurrent advice for incident responders&amp;nbsp;on recovery from systemic identity compromises has been provided by Microsoft Detection and Response Team.\n\n\n\n\nUpdated 12/22/2020\nAzure AD Identity admins who want to gain further visibility and understanding related to the identity implications of this attack on their environment can use the newly released Sensitive Operations Report workbook.\n\n\n\n\nUpdated 12/26/2020\nFor Identity Vendors and their customers to understand the Solorigate identity related attack components the Identity team at Microsoft has produced a blog has been created to walk thru this information.\n\n\n\nUpdated 12/28/2020\nUsers of Microsoft 365 Defender can also hunt and detect on similar items in this blog, but tailored towards investigation using Microsoft 365 Defender to protect against Solorigate.\n\n\n\n&amp;nbsp;\nThe goal of this article is post-compromise investigation strategies and is focused on TTPs and not focused on specific IOCs.&amp;nbsp; Azure Sentinel customers are encouraged to review advisories and IOC’s shared by Microsoft MSRC and security partners to search on specific IOC’s in their environment using Azure Sentinel.&amp;nbsp; Links to these IOC’s are listed in the reference section at the end.\n&amp;nbsp;\nTo make it easier for security teams to visualize and monitor their environments for this attack the MSTIC team has shared a SolarWinds Post Compromise hunting workbook via Azure Sentinel and Azure Sentinel GitHub. There are many things in this workbook that threat hunters would find useful and the workbook is complimentary to the hunting methods shared below. Importantly, if you have recently rotated ADFS key material this workbook can be useful in identifying attacker logon activity if they logon with old key material. Security teams should leverage this hunting workbook as part of their workflow in investigating this attack.\n&amp;nbsp;\nThanks to the MSTIC and M365 teams for collaborating to deliver this content in a timely manner. Special thanks to&amp;nbsp;aprakash13,&amp;nbsp;Ashwin_Patil,&amp;nbsp;Pete Bryan,&amp;nbsp;ItsReallyNick,&amp;nbsp;Chris Glyer,&amp;nbsp;Cyb3rWard0g,&amp;nbsp;Tim Burrell (MSTIC),&amp;nbsp;Rob Mead,&amp;nbsp;TomMcElroy,&amp;nbsp;Elia Florio,&amp;nbsp;Corina Feuerstein,&amp;nbsp;Ramin Nafisi, Michael Matonis.&amp;nbsp;\n&amp;nbsp;\nPlease note that since Azure Sentinel and the M365 Advanced Hunting portal share the same query language and share similar data types, all of the referenced queries can be used directly or slightly modified to work in both.\n&amp;nbsp;\nGaining a foothold\nAs shared in Microsoft’s technical blog – Customer Guidance on Recent Nation-state Cyber Attacks - attackers might have compromised the internal build systems or the update distribution systems of SolarWinds Orion software then modified a DLL component in the legitimate software and embedded backdoor code that would allow these attackers to remotely perform commands or deliver additional payloads. Below is a representation of various attack stages which you can also see in Microsoft Threat Protection (MTP) portal.&amp;nbsp; Note that if you do not have Microsoft Threat Protection this link will not work for you.\n&amp;nbsp;\n\n \nTo hunt for similar TTPs used in this attack, a good place to start is to build an inventory of the machines that have SolarWinds Orion components. Organizations might already have a software inventory management system to indicate hosts where the SolarWinds application is installed. Alternatively, Azure Sentinel could be leveraged to run a simple query to gather similar details. Azure Sentinel collects data from multiple different logs that could be used to gather this information. For example, through the recently released Microsoft 365 Defender connector, security teams can now easily ingest Microsoft 365 raw data into Azure Sentinel. Using the ingested data, a simple query like below can be written that will pull the hosts with SolarWinds process running in last 30 days based on Process execution either via host on boarded to Sentinel or on boarded via Microsoft Defender for Endpoints (MDE). The query also leverages the Sysmon logs that a lot of customers are collecting from their environment to surface the machines that have SolarWinds running on them. Similar queries that leverage M365 raw data could also be run from the M365&apos;s Advanced hunting portal.\n&amp;nbsp;\nSolarWinds Inventory check query\nSpoiler (Highlight to read)\n\nlet&amp;nbsp;timeframe&amp;nbsp;=&amp;nbsp;30d;&amp;nbsp;\n(union&amp;nbsp;isfuzzy=true&amp;nbsp;\n(&amp;nbsp;\nSecurityEvent&amp;nbsp;\n|&amp;nbsp;where&amp;nbsp;TimeGenerated&amp;nbsp;&amp;gt;=&amp;nbsp;ago(timeframe)&amp;nbsp;\n|&amp;nbsp;where&amp;nbsp;EventID&amp;nbsp;==&amp;nbsp;&apos;4688&apos;&amp;nbsp;\n|&amp;nbsp;where&amp;nbsp;tolower(NewProcessName)&amp;nbsp;has&amp;nbsp;&apos;solarwinds&apos;&amp;nbsp;\n|&amp;nbsp;extend&amp;nbsp;MachineName&amp;nbsp;=&amp;nbsp;Computer&amp;nbsp;,&amp;nbsp;Process&amp;nbsp;=&amp;nbsp;NewProcessName\n|&amp;nbsp;summarize&amp;nbsp;StartTime&amp;nbsp;=&amp;nbsp;min(TimeGenerated),&amp;nbsp;EndTime&amp;nbsp;=&amp;nbsp;max(TimeGenerated),&amp;nbsp;MachineCount&amp;nbsp;=&amp;nbsp;dcount(MachineName),&amp;nbsp;AccountCount&amp;nbsp;=&amp;nbsp;dcount(Account),&amp;nbsp;MachineNames&amp;nbsp;=&amp;nbsp;make_set(MachineName),&amp;nbsp;Accounts&amp;nbsp;=&amp;nbsp;make_set(Account)&amp;nbsp;by&amp;nbsp;Process,&amp;nbsp;Type\n),&amp;nbsp;\n(&amp;nbsp;\nDeviceProcessEvents&amp;nbsp;\n|&amp;nbsp;where&amp;nbsp;TimeGenerated&amp;nbsp;&amp;gt;=&amp;nbsp;ago(timeframe)&amp;nbsp;\n|&amp;nbsp;where&amp;nbsp;tolower(InitiatingProcessFolderPath)&amp;nbsp;has&amp;nbsp;&apos;solarwinds&apos;&amp;nbsp;\n|&amp;nbsp;extend&amp;nbsp;MachineName&amp;nbsp;=&amp;nbsp;DeviceName&amp;nbsp;,&amp;nbsp;Process&amp;nbsp;=&amp;nbsp;InitiatingProcessFolderPath,&amp;nbsp;Account&amp;nbsp;=&amp;nbsp;AccountName\n|&amp;nbsp;summarize&amp;nbsp;StartTime&amp;nbsp;=&amp;nbsp;min(TimeGenerated),&amp;nbsp;EndTime&amp;nbsp;=&amp;nbsp;max(TimeGenerated),&amp;nbsp;MachineCount&amp;nbsp;=&amp;nbsp;dcount(MachineName),&amp;nbsp;AccountCount&amp;nbsp;=&amp;nbsp;dcount(Account),&amp;nbsp;MachineNames&amp;nbsp;=&amp;nbsp;make_set(MachineName),&amp;nbsp;Accounts&amp;nbsp;=&amp;nbsp;make_set(Account)&amp;nbsp;&amp;nbsp;by&amp;nbsp;Process,&amp;nbsp;Type\n),&amp;nbsp;\n(&amp;nbsp;\nEvent&amp;nbsp;\n|&amp;nbsp;where&amp;nbsp;TimeGenerated&amp;nbsp;&amp;gt;=&amp;nbsp;ago(timeframe)&amp;nbsp;\n|&amp;nbsp;where&amp;nbsp;Source&amp;nbsp;==&amp;nbsp;&quot;Microsoft-Windows-Sysmon&quot;&amp;nbsp;\n|&amp;nbsp;where&amp;nbsp;EventID&amp;nbsp;==&amp;nbsp;1&amp;nbsp;\n|&amp;nbsp;extend&amp;nbsp;Image&amp;nbsp;=&amp;nbsp;EventDetail.[4].[&quot;#text&quot;]&amp;nbsp;\n|&amp;nbsp;where&amp;nbsp;tolower(Image)&amp;nbsp;has&amp;nbsp;&apos;solarwinds&apos;&amp;nbsp;\n|&amp;nbsp;extend&amp;nbsp;MachineName&amp;nbsp;=&amp;nbsp;Computer&amp;nbsp;,&amp;nbsp;Process&amp;nbsp;=&amp;nbsp;Image,&amp;nbsp;Account&amp;nbsp;=&amp;nbsp;UserName\n|&amp;nbsp;summarize&amp;nbsp;StartTime&amp;nbsp;=&amp;nbsp;min(TimeGenerated),&amp;nbsp;EndTime&amp;nbsp;=&amp;nbsp;max(TimeGenerated),&amp;nbsp;MachineCount&amp;nbsp;=&amp;nbsp;dcount(MachineName),&amp;nbsp;AccountCount&amp;nbsp;=&amp;nbsp;dcount(Account),&amp;nbsp;MachineNames&amp;nbsp;=&amp;nbsp;make_set(MachineName),&amp;nbsp;Accounts&amp;nbsp;=&amp;nbsp;make_set(Account)&amp;nbsp;&amp;nbsp;by&amp;nbsp;Process,&amp;nbsp;Type\n)&amp;nbsp;\n)&amp;nbsp;\n\n\n\nlet&amp;nbsp;timeframe&amp;nbsp;=&amp;nbsp;30d;&amp;nbsp;\n(union&amp;nbsp;isfuzzy=true&amp;nbsp;\n(&amp;nbsp;\nSecurityEvent&amp;nbsp;\n|&amp;nbsp;where&amp;nbsp;TimeGenerated&amp;nbsp;&amp;gt;=&amp;nbsp;ago(timeframe)&amp;nbsp;\n|&amp;nbsp;where&amp;nbsp;EventID&amp;nbsp;==&amp;nbsp;&apos;4688&apos;&amp;nbsp;\n|&amp;nbsp;where&amp;nbsp;tolower(NewProcessName)&amp;nbsp;has&amp;nbsp;&apos;solarwinds&apos;&amp;nbsp;\n|&amp;nbsp;extend&amp;nbsp;MachineName&amp;nbsp;=&amp;nbsp;Computer&amp;nbsp;,&amp;nbsp;Process&amp;nbsp;=&amp;nbsp;NewProcessName\n|&amp;nbsp;summarize&amp;nbsp;StartTime&amp;nbsp;=&amp;nbsp;min(TimeGenerated),&amp;nbsp;EndTime&amp;nbsp;=&amp;nbsp;max(TimeGenerated),&amp;nbsp;MachineCount&amp;nbsp;=&amp;nbsp;dcount(MachineName),&amp;nbsp;AccountCount&amp;nbsp;=&amp;nbsp;dcount(Account),&amp;nbsp;MachineNames&amp;nbsp;=&amp;nbsp;make_set(MachineName),&amp;nbsp;Accounts&amp;nbsp;=&amp;nbsp;make_set(Account)&amp;nbsp;by&amp;nbsp;Process,&amp;nbsp;Type\n),&amp;nbsp;\n(&amp;nbsp;\nDeviceProcessEvents&amp;nbsp;\n|&amp;nbsp;where&amp;nbsp;TimeGenerated&amp;nbsp;&amp;gt;=&amp;nbsp;ago(timeframe)&amp;nbsp;\n|&amp;nbsp;where&amp;nbsp;tolower(InitiatingProcessFolderPath)&amp;nbsp;has&amp;nbsp;&apos;solarwinds&apos;&amp;nbsp;\n|&amp;nbsp;extend&amp;nbsp;MachineName&amp;nbsp;=&amp;nbsp;DeviceName&amp;nbsp;,&amp;nbsp;Process&amp;nbsp;=&amp;nbsp;InitiatingProcessFolderPath,&amp;nbsp;Account&amp;nbsp;=&amp;nbsp;AccountName\n|&amp;nbsp;summarize&amp;nbsp;StartTime&amp;nbsp;=&amp;nbsp;min(TimeGenerated),&amp;nbsp;EndTime&amp;nbsp;=&amp;nbsp;max(TimeGenerated),&amp;nbsp;MachineCount&amp;nbsp;=&amp;nbsp;dcount(MachineName),&amp;nbsp;AccountCount&amp;nbsp;=&amp;nbsp;dcount(Account),&amp;nbsp;MachineNames&amp;nbsp;=&amp;nbsp;make_set(MachineName),&amp;nbsp;Accounts&amp;nbsp;=&amp;nbsp;make_set(Account)&amp;nbsp;&amp;nbsp;by&amp;nbsp;Process,&amp;nbsp;Type\n),&amp;nbsp;\n(&amp;nbsp;\nEvent&amp;nbsp;\n|&amp;nbsp;where&amp;nbsp;TimeGenerated&amp;nbsp;&amp;gt;=&amp;nbsp;ago(timeframe)&amp;nbsp;\n|&amp;nbsp;where&amp;nbsp;Source&amp;nbsp;==&amp;nbsp;&quot;Microsoft-Windows-Sysmon&quot;&amp;nbsp;\n|&amp;nbsp;where&amp;nbsp;EventID&amp;nbsp;==&amp;nbsp;1&amp;nbsp;\n|&amp;nbsp;extend&amp;nbsp;Image&amp;nbsp;=&amp;nbsp;EventDetail.[4].[&quot;#text&quot;]&amp;nbsp;\n|&amp;nbsp;where&amp;nbsp;tolower(Image)&amp;nbsp;has&amp;nbsp;&apos;solarwinds&apos;&amp;nbsp;\n|&amp;nbsp;extend&amp;nbsp;MachineName&amp;nbsp;=&amp;nbsp;Computer&amp;nbsp;,&amp;nbsp;Process&amp;nbsp;=&amp;nbsp;Image,&amp;nbsp;Account&amp;nbsp;=&amp;nbsp;UserName\n|&amp;nbsp;summarize&amp;nbsp;StartTime&amp;nbsp;=&amp;nbsp;min(TimeGenerated),&amp;nbsp;EndTime&amp;nbsp;=&amp;nbsp;max(TimeGenerated),&amp;nbsp;MachineCount&amp;nbsp;=&amp;nbsp;dcount(MachineName),&amp;nbsp;AccountCount&amp;nbsp;=&amp;nbsp;dcount(Account),&amp;nbsp;MachineNames&amp;nbsp;=&amp;nbsp;make_set(MachineName),&amp;nbsp;Accounts&amp;nbsp;=&amp;nbsp;make_set(Account)&amp;nbsp;&amp;nbsp;by&amp;nbsp;Process,&amp;nbsp;Type\n)&amp;nbsp;\n)&amp;nbsp;\n\n\nUpdated 12/30/2020\nOn systems where the malicious SolarWinds DLL (SolarWinds.Orion.Core.BusinessLayer.dll) is running, it is known that the attacker used a hardcoded named pipe &apos;583da945-62af-10e8-4902-a8f205c72b2e&apos; to conduct various checks as well as to ensure only one instance of the backdoor was running. The use of named pipes by malware is not uncommon as it provides a mechanism for communication between processes. This activity by the malware can be detected if you are collecting Sysmon (Event Id 17/18) or Security Event Id 5145 in your Azure Sentinel workspace. The&amp;nbsp;Solorigate Named Pipe&amp;nbsp;detection should not be considered reliable on its own as the creation of just the hardcoded named pipe does not indicate that the malicious code was completely triggered, and the machine beaconed out or received additional commands. However, presence of this is definitely suspicious and should warrant further in-depth investigation.\nSpoiler (Highlight to read)let timeframe = 1d;(union isfuzzy=true(Event| where TimeGenerated &amp;gt;= ago(timeframe)| where Source == &quot;Microsoft-Windows-Sysmon&quot;| where EventID in (17,18)| extend EvData = parse_xml(EventData)| extend EventDetail = EvData.DataItem.EventData.Data| extend NamedPipe = EventDetail.[5].[&quot;#text&quot;]| extend ProcessDetail = EventDetail.[6].[&quot;#text&quot;]| where NamedPipe contains &apos;583da945-62af-10e8-4902-a8f205c72b2e&apos;| extend Account = UserName| project-away EventDetail, EvData),(SecurityEvent| where TimeGenerated &amp;gt;= ago(timeframe)| where EventID == &apos;5145&apos;| where AccessList has &apos;%%4418&apos; // presence of CreatePipeInstance value | where RelativeTargetName contains &apos;583da945-62af-10e8-4902-a8f205c72b2e&apos;))| extend timestamp = TimeGenerated, AccountCustomEntity = Account, HostCustomEntity = Computerlet timeframe = 1d;(union isfuzzy=true(Event| where TimeGenerated &amp;gt;= ago(timeframe)| where Source == &quot;Microsoft-Windows-Sysmon&quot;| where EventID in (17,18)| extend EvData = parse_xml(EventData)| extend EventDetail = EvData.DataItem.EventData.Data| extend NamedPipe = EventDetail.[5].[&quot;#text&quot;]| extend ProcessDetail = EventDetail.[6].[&quot;#text&quot;]| where NamedPipe contains &apos;583da945-62af-10e8-4902-a8f205c72b2e&apos;| extend Account = UserName| project-away EventDetail, EvData),(SecurityEvent| where TimeGenerated &amp;gt;= ago(timeframe)| where EventID == &apos;5145&apos;| where AccessList has &apos;%%4418&apos; // presence of CreatePipeInstance value | where RelativeTargetName contains &apos;583da945-62af-10e8-4902-a8f205c72b2e&apos;))| extend timestamp = TimeGenerated, AccountCustomEntity = Account, HostCustomEntity = Computer\nPrivilege Escalation\nOnce the adversary acquires an initial foothold on a system thru the SolarWinds process they will have System account level access, the attacker will then attempt to elevate to domain admin level access to the environment. The Microsoft Threat Intelligence Center (MSTIC) team has already delivered multiple queries into Azure Sentinel that identify similar TTPs and many are also available in M365. These methodologies are not specific to just this threat actor or this attack but have been seen in various attack campaigns.\nIdentifying abnormal logon activities or additions to privileged groups is one way to identify privilege escalation.\nUpdated 12/17/2020\n\nChecking for hosts with new logons to identify potential lateral movement by the attacker.\nLook for any new&amp;nbsp;account being created and added to built-in administrators group.\nLook for any user account added to privileged built in domain local or global groups,&amp;nbsp;including adding accounts to a domain privileged group such as Enterprise Admins, Cert Publishers or DnsAdmins.\nMonitor for rare activity by a high-value account carried out on a system or service.\n\nRelated to this attack, in some environments service account credentials had been granted administrative privileges. The above queries can be modified to remove the condition of focusing “User” accounts by commenting the query to include service accounts in the scope where applicable:\n&amp;nbsp;\n//| where AccountType == &quot;User&quot;\n&amp;nbsp;\nPlease see the Azure Sentinel Github for additional queries and hunting ideas related to Accounts under the Detections and Hunting Queries sections for AuditLogs, and SecurityEvents\nMicrosoft 365 Defender team has also shared quite a few sample queries for use in their advanced hunting portal that could be leveraged to detect this part of the attack. Additionally, the logic for many of the Azure Sentinel queries can also be transformed to equivalent queries for Microsoft 365 Defender, that could be run in their Advanced Hunting Portal.\nMicrosoft 365 Defender has an upcoming complimentary blog that will be updated here once available.\n&amp;nbsp;\nCertificate Export\nThe next step in the attack was stealing the certificate that signs SAML tokens from the federation server (ADFS) called a Token Signing Cert (TSC). SAML Tokens&amp;nbsp;are basically XML representations of claims.&amp;nbsp; You can read more about ADFS in What is federation with Azure AD? | Microsoft Docs and SAML at Azure Single Sign On SAML Protocol - Microsoft identity platform | Microsoft Docs. The process is as follows:\n\nA client requests a SAML token from an ADFS Server by authenticating to that server using Windows credentials.\nThe ADFS server issues a SAML token to the client.\nThe SAML token is signed with a certificate associated with the server.\nThe client then presents the SAML token to the application that it needs access to.\nThe signature over the SAML token tells the application that the security token service issued the token and grants access to the client.\n\n&amp;nbsp;\nADFS Key Extraction \nUpdated 01/15/2021\nThe implication of stealing the Token Signing Cert (TSC) is that once the certificate has been acquired, the actor can forge SAML (Security Assertions Markup Language) tokens with whatever claims and lifetime they choose, then sign it with the certificate that has been acquired.  Microsoft continues to strongly recommend securing your AD FS (Active Directory Federation Service) TSC because if these TSC’s are acquired by a bad actor, this then enables the actor to forge SAML tokens that impersonate highly privileged accounts.  There are publicly available pen-testing tools like ADFSDump and ADFSpoof that help with extracting required information from&amp;nbsp;the AD&amp;nbsp;FS configuration database&amp;nbsp;to generate the forged security tokens.  While&amp;nbsp;we have not confirmed&amp;nbsp;these&amp;nbsp;specific tools were&amp;nbsp;used in this attack, they are useful for simulating the attack behavior or executing a similar attack and therefore,&amp;nbsp;Microsoft has&amp;nbsp;created&amp;nbsp;a high-fidelity detection related to this&amp;nbsp;for M365 Defender:\n\nADFS private key extraction which detects ADFS private key extraction patterns from tools such as ADFSDump.\n\nNote: Any M365 Defender alert&amp;nbsp;can be seen in Azure Sentinel Security Alerts or in the M365 security portal.\nUpdated 01/15/2021\nThe&amp;nbsp;TTP (tactics, techniques, and procedures)&amp;nbsp;observed in the Solorigate attack is the creation of&amp;nbsp;a&amp;nbsp;legitimate SAML token used to authenticate as any user. One way an attacker could achieve this is by compromising&amp;nbsp;AD&amp;nbsp;FS key material.&amp;nbsp;Microsoft&amp;nbsp;has a&amp;nbsp;new&amp;nbsp;detection for this as stated above&amp;nbsp;and&amp;nbsp;for&amp;nbsp;Azure Sentinel&amp;nbsp;has&amp;nbsp;also created a Windows Event Log based detection that indicates&amp;nbsp;an ADFS DKM Master Key Export.&amp;nbsp;As part of the update for this query to the Azure Sentinel GitHub,&amp;nbsp;there is a detailed write up for&amp;nbsp;why this&amp;nbsp;is&amp;nbsp;interesting&amp;nbsp;along with a&amp;nbsp;subsequent addition&amp;nbsp;providing clarity&amp;nbsp;on how to get 4662&amp;nbsp;events&amp;nbsp;to fire.&amp;nbsp; This detection should not be considered reliable on its own but can identify suspicious activity that warrants further investigation.\nUpdated 01/15/2021\nSpoiler (Highlight to read)\n&amp;nbsp;(union isfuzzy=true (SecurityEvent | where EventID == 4662 // You need to create a SACL on the ADFS Policy Store DKM group for this event to be created. | where ObjectServer == &apos;DS&apos;| where OperationType == &apos;Object Access&apos;//| where ObjectName contains &apos;&amp;lt;GUID of ADFS Policy Store DKM Group object&apos; This is unique to the domain. Check description for more details.| where ObjectType contains &apos;5cb41ed0-0e4c-11d0-a286-00aa003049e2&apos; // Contact Class| where Properties contains &apos;8d3bca50-1d7e-11d0-a081-00aa006c33ed&apos; // Picture Attribute - Ldap-Display-Name: thumbnailPhoto| extend timestamp = TimeGenerated, HostCustomEntity = Computer, AccountCustomEntity = SubjectAccount),(DeviceEvents| where ActionType =~ &quot;LdapSearch&quot;| where AdditionalFields.AttributeList contains &quot;thumbnailPhoto&quot;| where AdditionalFields.DistinguishedName contains &quot;CN=ADFS,CN=Microsoft,CN=Program Data&quot; // Filter results to show only hits related to the ADFS AD container| extend timestamp = TimeGenerated, HostCustomEntity = DeviceName, AccountCustomEntity = InitiatingProcessAccountName))\n\n&amp;nbsp;(union isfuzzy=true (SecurityEvent | where EventID == 4662 // You need to create a SACL on the ADFS Policy Store DKM group for this event to be created. | where ObjectServer == &apos;DS&apos;| where OperationType == &apos;Object Access&apos;//| where ObjectName contains &apos;&amp;lt;GUID of ADFS Policy Store DKM Group object&apos; This is unique to the domain. Check description for more details.| where ObjectType contains &apos;5cb41ed0-0e4c-11d0-a286-00aa003049e2&apos; // Contact Class| where Properties contains &apos;8d3bca50-1d7e-11d0-a081-00aa006c33ed&apos; // Picture Attribute - Ldap-Display-Name: thumbnailPhoto| extend timestamp = TimeGenerated, HostCustomEntity = Computer, AccountCustomEntity = SubjectAccount),(DeviceEvents| where ActionType =~ &quot;LdapSearch&quot;| where AdditionalFields.AttributeList contains &quot;thumbnailPhoto&quot;| where AdditionalFields.DistinguishedName contains &quot;CN=ADFS,CN=Microsoft,CN=Program Data&quot; // Filter results to show only hits related to the ADFS AD container| extend timestamp = TimeGenerated, HostCustomEntity = DeviceName, AccountCustomEntity = InitiatingProcessAccountName))\n\nUpdated 12/19/2020\nMSTIC has developed another detection for ADFS server key export events. This detection leverages the visibility provided by Sysmon and provides a more reliable detection method than that covered in the Windows Event Log detection. For this detection to be effective you must be collecting Sysmon Event IDs 17 and 18 into your Azure Sentinel workspace.\nSpoiler (Highlight to read)// Adjust this to use a longer timeframe to identify ADFS serverslet lookback = 6d;// Adjust this to adjust the key export detection timeframelet timeframe = 1d;// Start be identifying ADFS servers to reduce FP chancelet ADFS_Servers = (Event| where TimeGenerated &amp;gt; ago(timeframe+lookback)| where Source == &quot;Microsoft-Windows-Sysmon&quot;| extend EventData = parse_xml(EventData).DataItem.EventData.Data| mv-expand bagexpansion=array EventData| evaluate bag_unpack(EventData)| extend Key=tostring([&apos;@Name&apos;]), Value=[&apos;#text&apos;]| evaluate pivot(Key, any(Value), TimeGenerated, Source, EventLog, Computer, EventLevel, EventLevelName, EventID, UserName, RenderedDescription, MG, ManagementGroupName, Type, _ResourceId)| extend process = split(Image, &apos;\\\\&apos;, -1)[-1]| where process =~ &quot;Microsoft.IdentityServer.ServiceHost.exe&quot;| summarize by Computer);// Look for ADFS servers where Named Pipes event are presentEvent| where TimeGenerated &amp;gt; ago(timeframe)| where Source == &quot;Microsoft-Windows-Sysmon&quot;| where Computer in~ (ADFS_Servers)| extend RenderedDescription = tostring(split(RenderedDescription, &quot;:&quot;)[0])| extend EventData = parse_xml(EventData).DataItem.EventData.Data| mv-expand bagexpansion=array EventData| evaluate bag_unpack(EventData)| extend Key=tostring([&apos;@Name&apos;]), Value=[&apos;#text&apos;]| evaluate pivot(Key, any(Value), TimeGenerated, Source, EventLog, Computer, EventLevel, EventLevelName, EventID, UserName, RenderedDescription, MG, ManagementGroupName, Type, _ResourceId)| extend RuleName = column_ifexists(&quot;RuleName&quot;, &quot;&quot;), TechniqueId = column_ifexists(&quot;TechniqueId&quot;, &quot;&quot;), TechniqueName = column_ifexists(&quot;TechniqueName&quot;, &quot;&quot;)| parse RuleName with * &apos;technique_id=&apos; TechniqueId &apos;,&apos; * &apos;technique_name=&apos; TechniqueName| where EventID in (17,18)// Look for Pipe related to querying the WID| where PipeName == &quot;\\\\MICROSOFT##WID\\\\tsql\\\\query&quot;| extend process = split(Image, &apos;\\\\&apos;, -1)[-1]// Exclude expected processes| where process !in (&quot;Microsoft.IdentityServer.ServiceHost.exe&quot;, &quot;Microsoft.Identity.Health.Adfs.PshSurrogate.exe&quot;, &quot;AzureADConnect.exe&quot;, &quot;Microsoft.Tri.Sensor.exe&quot;, &quot;wsmprovhost.exe&quot;,&quot;mmc.exe&quot;, &quot;sqlservr.exe&quot;)| extend Operation = RenderedDescription| project-reorder TimeGenerated, EventType, Operation, process, Image, Computer, UserName| extend HostCustomEntity = Computer, AccountCustomEntity = UserName// Adjust this to use a longer timeframe to identify ADFS serverslet lookback = 6d;// Adjust this to adjust the key export detection timeframelet timeframe = 1d;// Start be identifying ADFS servers to reduce FP chancelet ADFS_Servers = (Event| where TimeGenerated &amp;gt; ago(timeframe+lookback)| where Source == &quot;Microsoft-Windows-Sysmon&quot;| extend EventData = parse_xml(EventData).DataItem.EventData.Data| mv-expand bagexpansion=array EventData| evaluate bag_unpack(EventData)| extend Key=tostring([&apos;@Name&apos;]), Value=[&apos;#text&apos;]| evaluate pivot(Key, any(Value), TimeGenerated, Source, EventLog, Computer, EventLevel, EventLevelName, EventID, UserName, RenderedDescription, MG, ManagementGroupName, Type, _ResourceId)| extend process = split(Image, &apos;\\\\&apos;, -1)[-1]| where process =~ &quot;Microsoft.IdentityServer.ServiceHost.exe&quot;| summarize by Computer);// Look for ADFS servers where Named Pipes event are presentEvent| where TimeGenerated &amp;gt; ago(timeframe)| where Source == &quot;Microsoft-Windows-Sysmon&quot;| where Computer in~ (ADFS_Servers)| extend RenderedDescription = tostring(split(RenderedDescription, &quot;:&quot;)[0])| extend EventData = parse_xml(EventData).DataItem.EventData.Data| mv-expand bagexpansion=array EventData| evaluate bag_unpack(EventData)| extend Key=tostring([&apos;@Name&apos;]), Value=[&apos;#text&apos;]| evaluate pivot(Key, any(Value), TimeGenerated, Source, EventLog, Computer, EventLevel, EventLevelName, EventID, UserName, RenderedDescription, MG, ManagementGroupName, Type, _ResourceId)| extend RuleName = column_ifexists(&quot;RuleName&quot;, &quot;&quot;), TechniqueId = column_ifexists(&quot;TechniqueId&quot;, &quot;&quot;), TechniqueName = column_ifexists(&quot;TechniqueName&quot;, &quot;&quot;)| parse RuleName with * &apos;technique_id=&apos; TechniqueId &apos;,&apos; * &apos;technique_name=&apos; TechniqueName| where EventID in (17,18)// Look for Pipe related to querying the WID| where PipeName == &quot;\\\\MICROSOFT##WID\\\\tsql\\\\query&quot;| extend process = split(Image, &apos;\\\\&apos;, -1)[-1]// Exclude expected processes| where process !in (&quot;Microsoft.IdentityServer.ServiceHost.exe&quot;, &quot;Microsoft.Identity.Health.Adfs.PshSurrogate.exe&quot;, &quot;AzureADConnect.exe&quot;, &quot;Microsoft.Tri.Sensor.exe&quot;, &quot;wsmprovhost.exe&quot;,&quot;mmc.exe&quot;, &quot;sqlservr.exe&quot;)| extend Operation = RenderedDescription| project-reorder TimeGenerated, EventType, Operation, process, Image, Computer, UserName| extend HostCustomEntity = Computer, AccountCustomEntity = UserName\nOutside of directly looking for tools, this adversary may have used custom tooling so looking for anomalous process executions or anomalous accounts logging on to our ADFS server can give us some clue when such attacks happen. Azure Sentinel provides queries that can help to:\n\nFind rare anomalous process in your environment.\nAlso look for rare processes run by service accounts\nOr uncommon processes that are in the bottom 5% of all the process.\nIn some instances, there is a rare command line syntax related to DLL loading, you can adjust these queries to also look at rarity on the command line.\n\nEvery environment is different and some of these queries being generic could be noisy. So, in the first step a good approach would be to limit this kind of hunting to our ADFS server.\n&amp;nbsp;\nAzure Active Directory Hunting\nHaving gained a significant foothold in the on prem environment, the actor also targeted the Azure AD of some of the compromised organizations and made modifications to Azure AD settings to facilitate long term access. Microsoft has shared many relevant queries through the Azure Sentinel GitHub to identify these actions.\nUpdated 01/15/2021\nOne such activity is related to modifying domain federation trust settings.&amp;nbsp;A&amp;nbsp;federation trust signifies&amp;nbsp;the establishment&amp;nbsp;of&amp;nbsp;authentication&amp;nbsp;and authorization trust&amp;nbsp;between two organizations so that users located in partner organizations&amp;nbsp;can send authentication&amp;nbsp;and authorization&amp;nbsp;requests successfully.\n\nWhile not specifically seen in this attack, tracking federation trust modifications is&amp;nbsp;important.&amp;nbsp;The Azure Sentinel query for domain federation trust settings modification will alert when a user or application modifies the federation settings on the domain particularly when a new Active Directory Federated Service (ADFS) Trusted Realm object, such as a signing certificate, is added to the domain&amp;nbsp;or there is an update to domain authentication from managed to&amp;nbsp;federated. Modification to domain federation settings should be rare&amp;nbsp;and&amp;nbsp;this&amp;nbsp;should be treated as&amp;nbsp;a high-fidelity alert that&amp;nbsp;Azure AD and&amp;nbsp;Azure Sentinel users&amp;nbsp;should&amp;nbsp;follow up on.\n\nUpdated 01/15/2021\nThe original purpose of the&amp;nbsp;STSRefreshTokenModification&amp;nbsp;low severity, hunting-only query was to demonstrate an event that has token validity time periods in it and demonstrate how one could monitor for anomalous/edited tokens. We have determined this event will only fire on the manual expiration of the&amp;nbsp;StsRefreshToken&amp;nbsp;by an admin (or the user). These types of events are most often generated when legitimate administrators troubleshoot frequent AAD (Azure AD) user sign-ins. To avoid any confusion with&amp;nbsp;Solorigate&amp;nbsp;investigation and hunting, we have removed this section from the blog.\n&amp;nbsp;\nAnother such activity is adding access to the Service Principal or Application.&amp;nbsp; If a threat actor obtains access to an Application Administrator account, they may configure alternate authentication mechanisms for direct access to any of the scopes and services available to the Service Principal. With these privileges, the actor can add alternative authentication material for direct access to resources using this credential.\n\nIdentify where the&amp;nbsp;verify KeyCredential has been updated with&amp;nbsp;New access credential added to Application or Service Principal.\n\nUpdated 12/20/2020\n\nIdentify where the&amp;nbsp;verify KeyCredential was not present and has now has had its First access credential added to Application or Service Principal where no credential was present.\n\n&amp;nbsp;\nSpoiler (Highlight to read)\nNew access credential added to Application or Service Principallet auditLookback = 1h;AuditLogs| where TimeGenerated &amp;gt; ago(auditLookback)| where OperationName has_any (&quot;Add service principal&quot;, &quot;Certificates and secrets management&quot;) // captures &quot;Add service principal&quot;, &quot;Add service principal credentials&quot;, and &quot;Update application – Certificates and secrets management&quot; events| where Result =~ &quot;success&quot;| mv-expand target = TargetResources| where tostring(InitiatedBy.user.userPrincipalName) has &quot;@&quot; or tostring(InitiatedBy.app.displayName) has &quot;@&quot;| extend targetDisplayName = tostring(TargetResources[0].displayName)| extend targetId = tostring(TargetResources[0].id)| extend targetType = tostring(TargetResources[0].type)| extend keyEvents = TargetResources[0].modifiedProperties| mv-expand keyEvents| where keyEvents.displayName =~ &quot;KeyDescription&quot;| extend new_value_set = parse_json(tostring(keyEvents.newValue))| extend old_value_set = parse_json(tostring(keyEvents.oldValue))| where old_value_set != &quot;[]&quot;| extend diff = set_difference(new_value_set, old_value_set)| where isnotempty(diff)| parse diff with * &quot;KeyIdentifier=&quot; keyIdentifier:string &quot;,KeyType=&quot; keyType:string &quot;,KeyUsage=&quot; keyUsage:string &quot;,DisplayName=&quot; keyDisplayName:string &quot;]&quot; *| where keyUsage == &quot;Verify&quot; or keyUsage == &quot;&quot;| extend UserAgent = iff(AdditionalDetails[0].key == &quot;User-Agent&quot;,tostring(AdditionalDetails[0].value),&quot;&quot;)| extend InitiatingUserOrApp = iff(isnotempty(InitiatedBy.user.userPrincipalName),tostring(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.app.displayName))| extend InitiatingIpAddress = iff(isnotempty(InitiatedBy.user.ipAddress), tostring(InitiatedBy.user.ipAddress), tostring(InitiatedBy.app.ipAddress))// The below line is currently commented out but Azure Sentinel users can modify this query to show only Application or only Service Principal events in their environment//| where targetType =~ &quot;Application&quot; // or targetType =~ &quot;ServicePrincipal&quot;| project-away diff, new_value_set, old_value_set| project-reorder TimeGenerated, OperationName, InitiatingUserOrApp, InitiatingIpAddress, UserAgent, targetDisplayName, targetId, targetType, keyDisplayName, keyType, keyUsage, keyIdentifier, CorrelationId, TenantId| extend timestamp = TimeGenerated, AccountCustomEntity = InitiatingUserOrApp, IPCustomEntity = InitiatingIpAddress\nFirst access credential added to Application or Service Principal where no credential was presentlet auditLookback = 1h;AuditLogs| where TimeGenerated &amp;gt; ago(auditLookback)| where OperationName has_any (&quot;Add service principal&quot;, &quot;Certificates and secrets management&quot;) // captures &quot;Add service principal&quot;, &quot;Add service principal credentials&quot;, and &quot;Update application – Certificates and secrets management&quot; events| where Result =~ &quot;success&quot;| mv-expand target = TargetResources| where tostring(InitiatedBy.user.userPrincipalName) has &quot;@&quot; or tostring(InitiatedBy.app.displayName) has &quot;@&quot;| extend targetDisplayName = tostring(TargetResources[0].displayName)| extend targetId = tostring(TargetResources[0].id)| extend targetType = tostring(TargetResources[0].type)| extend keyEvents = TargetResources[0].modifiedProperties| mv-expand keyEvents| where keyEvents.displayName =~ &quot;KeyDescription&quot;| extend new_value_set = parse_json(tostring(keyEvents.newValue))| extend old_value_set = parse_json(tostring(keyEvents.oldValue))| where old_value_set == &quot;[]&quot;| parse new_value_set with * &quot;KeyIdentifier=&quot; keyIdentifier:string &quot;,KeyType=&quot; keyType:string &quot;,KeyUsage=&quot; keyUsage:string &quot;,DisplayName=&quot; keyDisplayName:string &quot;]&quot; *| where keyUsage == &quot;Verify&quot; or keyUsage == &quot;&quot;| extend UserAgent = iff(AdditionalDetails[0].key == &quot;User-Agent&quot;,tostring(AdditionalDetails[0].value),&quot;&quot;)| extend InitiatingUserOrApp = iff(isnotempty(InitiatedBy.user.userPrincipalName),tostring(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.app.displayName))| extend InitiatingIpAddress = iff(isnotempty(InitiatedBy.user.ipAddress), tostring(InitiatedBy.user.ipAddress), tostring(InitiatedBy.app.ipAddress))// The below line is currently commented out but Azure Sentinel users can modify this query to show only Application or only Service Principal events in their environment//| where targetType =~ &quot;Application&quot; // or targetType =~ &quot;ServicePrincipal&quot;| project-away new_value_set, old_value_set| project-reorder TimeGenerated, OperationName, InitiatingUserOrApp, InitiatingIpAddress, UserAgent, targetDisplayName, targetId, targetType, keyDisplayName, keyType, keyUsage, keyIdentifier, CorrelationId, TenantId| extend timestamp = TimeGenerated, AccountCustomEntity = InitiatingUserOrApp, IPCustomEntity = InitiatingIpAddress\n\nNew access credential added to Application or Service Principallet auditLookback = 1h;AuditLogs| where TimeGenerated &amp;gt; ago(auditLookback)| where OperationName has_any (&quot;Add service principal&quot;, &quot;Certificates and secrets management&quot;) // captures &quot;Add service principal&quot;, &quot;Add service principal credentials&quot;, and &quot;Update application – Certificates and secrets management&quot; events| where Result =~ &quot;success&quot;| mv-expand target = TargetResources| where tostring(InitiatedBy.user.userPrincipalName) has &quot;@&quot; or tostring(InitiatedBy.app.displayName) has &quot;@&quot;| extend targetDisplayName = tostring(TargetResources[0].displayName)| extend targetId = tostring(TargetResources[0].id)| extend targetType = tostring(TargetResources[0].type)| extend keyEvents = TargetResources[0].modifiedProperties| mv-expand keyEvents| where keyEvents.displayName =~ &quot;KeyDescription&quot;| extend new_value_set = parse_json(tostring(keyEvents.newValue))| extend old_value_set = parse_json(tostring(keyEvents.oldValue))| where old_value_set != &quot;[]&quot;| extend diff = set_difference(new_value_set, old_value_set)| where isnotempty(diff)| parse diff with * &quot;KeyIdentifier=&quot; keyIdentifier:string &quot;,KeyType=&quot; keyType:string &quot;,KeyUsage=&quot; keyUsage:string &quot;,DisplayName=&quot; keyDisplayName:string &quot;]&quot; *| where keyUsage == &quot;Verify&quot; or keyUsage == &quot;&quot;| extend UserAgent = iff(AdditionalDetails[0].key == &quot;User-Agent&quot;,tostring(AdditionalDetails[0].value),&quot;&quot;)| extend InitiatingUserOrApp = iff(isnotempty(InitiatedBy.user.userPrincipalName),tostring(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.app.displayName))| extend InitiatingIpAddress = iff(isnotempty(InitiatedBy.user.ipAddress), tostring(InitiatedBy.user.ipAddress), tostring(InitiatedBy.app.ipAddress))// The below line is currently commented out but Azure Sentinel users can modify this query to show only Application or only Service Principal events in their environment//| where targetType =~ &quot;Application&quot; // or targetType =~ &quot;ServicePrincipal&quot;| project-away diff, new_value_set, old_value_set| project-reorder TimeGenerated, OperationName, InitiatingUserOrApp, InitiatingIpAddress, UserAgent, targetDisplayName, targetId, targetType, keyDisplayName, keyType, keyUsage, keyIdentifier, CorrelationId, TenantId| extend timestamp = TimeGenerated, AccountCustomEntity = InitiatingUserOrApp, IPCustomEntity = InitiatingIpAddress\nFirst access credential added to Application or Service Principal where no credential was presentlet auditLookback = 1h;AuditLogs| where TimeGenerated &amp;gt; ago(auditLookback)| where OperationName has_any (&quot;Add service principal&quot;, &quot;Certificates and secrets management&quot;) // captures &quot;Add service principal&quot;, &quot;Add service principal credentials&quot;, and &quot;Update application – Certificates and secrets management&quot; events| where Result =~ &quot;success&quot;| mv-expand target = TargetResources| where tostring(InitiatedBy.user.userPrincipalName) has &quot;@&quot; or tostring(InitiatedBy.app.displayName) has &quot;@&quot;| extend targetDisplayName = tostring(TargetResources[0].displayName)| extend targetId = tostring(TargetResources[0].id)| extend targetType = tostring(TargetResources[0].type)| extend keyEvents = TargetResources[0].modifiedProperties| mv-expand keyEvents| where keyEvents.displayName =~ &quot;KeyDescription&quot;| extend new_value_set = parse_json(tostring(keyEvents.newValue))| extend old_value_set = parse_json(tostring(keyEvents.oldValue))| where old_value_set == &quot;[]&quot;| parse new_value_set with * &quot;KeyIdentifier=&quot; keyIdentifier:string &quot;,KeyType=&quot; keyType:string &quot;,KeyUsage=&quot; keyUsage:string &quot;,DisplayName=&quot; keyDisplayName:string &quot;]&quot; *| where keyUsage == &quot;Verify&quot; or keyUsage == &quot;&quot;| extend UserAgent = iff(AdditionalDetails[0].key == &quot;User-Agent&quot;,tostring(AdditionalDetails[0].value),&quot;&quot;)| extend InitiatingUserOrApp = iff(isnotempty(InitiatedBy.user.userPrincipalName),tostring(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.app.displayName))| extend InitiatingIpAddress = iff(isnotempty(InitiatedBy.user.ipAddress), tostring(InitiatedBy.user.ipAddress), tostring(InitiatedBy.app.ipAddress))// The below line is currently commented out but Azure Sentinel users can modify this query to show only Application or only Service Principal events in their environment//| where targetType =~ &quot;Application&quot; // or targetType =~ &quot;ServicePrincipal&quot;| project-away new_value_set, old_value_set| project-reorder TimeGenerated, OperationName, InitiatingUserOrApp, InitiatingIpAddress, UserAgent, targetDisplayName, targetId, targetType, keyDisplayName, keyType, keyUsage, keyIdentifier, CorrelationId, TenantId| extend timestamp = TimeGenerated, AccountCustomEntity = InitiatingUserOrApp, IPCustomEntity = InitiatingIpAddress\n\nUpdated 12/19/2020\nThis threat actor has been observed using applications to read users mailboxes within a target environment. To help identify this activity MSTIC has created a hunting query that looks for applications that have been granted mailbox read permissions followed by consent to this application. Whilst this may uncover legitimate applications hunters should validate applications granted mail read permissions genuinely require them.\nSpoiler (Highlight to read)AuditLogs| where Category =~ &quot;ApplicationManagement&quot;| where ActivityDisplayName =~ &quot;Add delegated permission grant&quot;| where Result =~ &quot;success&quot;| where tostring(InitiatedBy.user.userPrincipalName) has &quot;@&quot; or tostring(InitiatedBy.app.displayName) has &quot;@&quot;| extend props = parse_json(tostring(TargetResources[0].modifiedProperties))| mv-expand props| extend UserAgent = tostring(AdditionalDetails[0].value)| extend InitiatingUser = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)| extend UserIPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)| extend DisplayName = tostring(props.displayName)| extend Permissions = tostring(parse_json(tostring(props.newValue)))| where Permissions has_any (&quot;Mail.Read&quot;, &quot;Mail.ReadWrite&quot;)| extend PermissionsAddedTo = tostring(TargetResources[0].displayName)| extend Type = tostring(TargetResources[0].type)| project-away props| join kind=leftouter(AuditLogs| where ActivityDisplayName has &quot;Consent to application&quot;| extend AppName = tostring(TargetResources[0].displayName)| extend AppId = tostring(TargetResources[0].id)| project AppName, AppId, CorrelationId) on CorrelationId| project-reorder TimeGenerated, OperationName, InitiatingUser, UserIPAddress, UserAgent, PermissionsAddedTo, Permissions, AppName, AppId, CorrelationId| extend timestamp = TimeGenerated, AccountCustomEntity = InitiatingUser, IPCustomEntity = UserIPAddressAuditLogs| where Category =~ &quot;ApplicationManagement&quot;| where ActivityDisplayName =~ &quot;Add delegated permission grant&quot;| where Result =~ &quot;success&quot;| where tostring(InitiatedBy.user.userPrincipalName) has &quot;@&quot; or tostring(InitiatedBy.app.displayName) has &quot;@&quot;| extend props = parse_json(tostring(TargetResources[0].modifiedProperties))| mv-expand props| extend UserAgent = tostring(AdditionalDetails[0].value)| extend InitiatingUser = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)| extend UserIPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)| extend DisplayName = tostring(props.displayName)| extend Permissions = tostring(parse_json(tostring(props.newValue)))| where Permissions has_any (&quot;Mail.Read&quot;, &quot;Mail.ReadWrite&quot;)| extend PermissionsAddedTo = tostring(TargetResources[0].displayName)| extend Type = tostring(TargetResources[0].type)| project-away props| join kind=leftouter(AuditLogs| where ActivityDisplayName has &quot;Consent to application&quot;| extend AppName = tostring(TargetResources[0].displayName)| extend AppId = tostring(TargetResources[0].id)| project AppName, AppId, CorrelationId) on CorrelationId| project-reorder TimeGenerated, OperationName, InitiatingUser, UserIPAddress, UserAgent, PermissionsAddedTo, Permissions, AppName, AppId, CorrelationId| extend timestamp = TimeGenerated, AccountCustomEntity = InitiatingUser, IPCustomEntity = UserIPAddress\nIt’s also advised to hunt for application consents for unexpected applications, particularly where they provide offline access to data or other high value access;\n\nSuspicious application consent similar to O365 Attack Toolkit\nSuspicious application consent for offline access\n\nUpdated 12/17/2020 (moved location)\nIn addition to Azure AD pre-compromise logon hunting it is also possible to monitor for logons attempting to use invalid key material. This can help identify attempted logons using stolen key material made after key material has been rotated. This can be done by querying SigninLogs in Azure Sentinel where the ResultType is 5000811. Please note that if you roll your token signing certificate, there will be expected activity when searching on the above.\n&amp;nbsp;\nRecon and Remote Execution\nUpdated 12/27/2020\nThe adversary will often attempt to access on-prem systems to gain further insight and mapping of the environment.&amp;nbsp; As described in the Resulting hands-on-keyboard attack section of the&amp;nbsp;Analyzing Solorigate blog by Microsoft, attackers renamed windows administrative tools like adfind.exe which were then used for domain enumeration. An example of the process execution command like can look like this:\n\n\n\nC:\\Windows\\system32\\cmd.exe /C csrss.exe -h breached.contoso.com -f (name=”Domain Admins”) member -list | csrss.exe -h breached.contoso.com -f objectcategory=* &amp;gt; .\\Mod\\mod1.log\n\n\n\nWe have provided a query in the Azure Sentinel Github which will help in detecting the command line patterns related to ADFind usage. You can customize this query to look at your specific DC/ADFS servers.\nSpoiler (Highlight to read)let startdate = 1d;let lookupwindow = 2m;let threshold = 3; //number of commandlines in the set belowlet DCADFSServersList = dynamic ([&quot;DCServer01&quot;, &quot;DCServer02&quot;, &quot;ADFSServer01&quot;]); // Enter a reference list of hostnames for your DC/ADFS serverslet tokens = dynamic([&quot;objectcategory&quot;,&quot;domainlist&quot;,&quot;dcmodes&quot;,&quot;adinfo&quot;,&quot;trustdmp&quot;,&quot;computers_pwdnotreqd&quot;,&quot;Domain Admins&quot;, &quot;objectcategory=person&quot;, &quot;objectcategory=computer&quot;, &quot;objectcategory=*&quot;]);SecurityEvent//| where Computer in (DCADFSServersList) // Uncomment to limit it to your DC/ADFS servers list if specified above or any pattern in hostnames (startswith, matches regex, etc).| where TimeGenerated between (ago(startdate) .. now())| where EventID == 4688| where CommandLine has_any (tokens)| where CommandLine matches regex &quot;(.*)&amp;gt;(.*)&quot;| summarize Commandlines = make_set(CommandLine), LastObserved=max(TimeGenerated) by bin(TimeGenerated, lookupwindow), Account, Computer, ParentProcessName, NewProcessName| extend Count = array_length(Commandlines)| where Count &amp;gt; thresholdlet startdate = 1d;let lookupwindow = 2m;let threshold = 3; //number of commandlines in the set belowlet DCADFSServersList = dynamic ([&quot;DCServer01&quot;, &quot;DCServer02&quot;, &quot;ADFSServer01&quot;]); // Enter a reference list of hostnames for your DC/ADFS serverslet tokens = dynamic([&quot;objectcategory&quot;,&quot;domainlist&quot;,&quot;dcmodes&quot;,&quot;adinfo&quot;,&quot;trustdmp&quot;,&quot;computers_pwdnotreqd&quot;,&quot;Domain Admins&quot;, &quot;objectcategory=person&quot;, &quot;objectcategory=computer&quot;, &quot;objectcategory=*&quot;]);SecurityEvent//| where Computer in (DCADFSServersList) // Uncomment to limit it to your DC/ADFS servers list if specified above or any pattern in hostnames (startswith, matches regex, etc).| where TimeGenerated between (ago(startdate) .. now())| where EventID == 4688| where CommandLine has_any (tokens)| where CommandLine matches regex &quot;(.*)&amp;gt;(.*)&quot;| summarize Commandlines = make_set(CommandLine), LastObserved=max(TimeGenerated) by bin(TimeGenerated, lookupwindow), Account, Computer, ParentProcessName, NewProcessName| extend Count = array_length(Commandlines)| where Count &amp;gt; threshold\nOn the remote execution side, there is a pattern that can be identified related to using alternate credentials than the currently logged on user, such as when using the RUN AS feature on a Windows system and passing in explicit credentials.&amp;nbsp; We have released a query that will identify when execution is occurring via&amp;nbsp;multiple explicit credentials against remote targets.&amp;nbsp; This requires that Windows Event 4648 is being collected as part of Azure Sentinel.\n&amp;nbsp;\nSpoiler (Highlight to read)let WellKnownLocalSIDs = &quot;S-1-5-[0-9][0-9]$&quot;;let protocols = dynamic([&apos;cifs&apos;, &apos;ldap&apos;, &apos;RPCSS&apos;, &apos;host&apos; , &apos;HTTP&apos;, &apos;RestrictedKrbHost&apos;, &apos;TERMSRV&apos;, &apos;msomsdksvc&apos;, &apos;mssqlsvc&apos;]);SecurityEvent| where TimeGenerated &amp;gt;= ago(1d)| where EventID == 4648| where SubjectUserSid != &apos;S-1-0-0&apos; // this is the Nobody SID which really means No security principal was included.| where not(SubjectUserSid matches regex WellKnownLocalSIDs) //excluding system account/service account as this is generally normal| where TargetInfo has &apos;/&apos; //looking for only items that indicate an interesting protocol is included| where Computer !has tostring(split(TargetServerName,&apos;$&apos;)[0])| where TargetAccount !~ tostring(split(SubjectAccount,&apos;$&apos;)[0])| extend TargetInfoProtocol = tolower(split(TargetInfo, &apos;/&apos;)[0]), TargetInfoMachine = toupper(split(TargetInfo, &apos;/&apos;)[1])| extend TargetAccount = tolower(TargetAccount), SubjectAccount = tolower(SubjectAccount)| extend UncommonProtocol = case(not(TargetInfoProtocol has_any (protocols)), TargetInfoProtocol, &apos;NotApplicable&apos;)| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), AccountsUsedCount = dcount(TargetAccount), AccountsUsed = make_set(TargetAccount), TargetMachineCount = dcount(TargetInfoMachine), TargetMachines = make_set(TargetInfoMachine), TargetProtocols = dcount(TargetInfoProtocol), Protocols = make_set(TargetInfoProtocol), Processes = make_set(Process) by Computer, SubjectAccount, UncommonProtocol| where TargetMachineCount &amp;gt; 1 or UncommonProtocol != &apos;NotApplicable&apos;| extend ProtocolCount = array_length(Protocols)| extend ProtocolScore = case(Protocols has &apos;rpcss&apos; and Protocols has &apos;host&apos; and Protocols has &apos;cifs&apos;, 10, //observed in Solorigate and depending on which are used together the higher the scoreProtocols has &apos;rpcss&apos; and Protocols has &apos;host&apos;, 5,Protocols has &apos;rpcss&apos; and Protocols has &apos;cifs&apos;, 5,Protocols has &apos;host&apos; and Protocols has &apos;cifs&apos;, 5,Protocols has &apos;ldap&apos; or Protocols has &apos;rpcss&apos; or Protocols has &apos;host&apos; or Protocols has &apos;cifs&apos;, 1, //ldap is more commonly seen in general, this was also seen with Solorigate but not usually to the same machines as the others aboveUncommonProtocol != &apos;NotApplicable&apos;, 3,0 //other protocols may be of interest, but in relation to observations for enumeration/execution in Solorigate they receive 0)| extend Score = ProtocolScore + ProtocolCount + AccountsUsedCount| where Score &amp;gt;= 9 or (UncommonProtocol != &apos;NotApplicable&apos; and Score &amp;gt;= 4) // Score must be 9 or better as this will include 5 points for atleast 2 of the interesting protocols + the count of protocols (min 2) + the number of accounts used for execution (min 2) = min of 9 OR score must be 4 or greater for an uncommon protocol| extend TimePeriod = EndTime - StartTime //This identifies the time between start and finish for the use of the explicit credentials, shorter time period may indicate scripted executions| project-away UncommonProtocol| extend timestamp = StartTime, AccountCustomEntity = SubjectAccount, HostCustomEntity = Computer| order by Score desclet WellKnownLocalSIDs = &quot;S-1-5-[0-9][0-9]$&quot;;let protocols = dynamic([&apos;cifs&apos;, &apos;ldap&apos;, &apos;RPCSS&apos;, &apos;host&apos; , &apos;HTTP&apos;, &apos;RestrictedKrbHost&apos;, &apos;TERMSRV&apos;, &apos;msomsdksvc&apos;, &apos;mssqlsvc&apos;]);SecurityEvent| where TimeGenerated &amp;gt;= ago(1d)| where EventID == 4648| where SubjectUserSid != &apos;S-1-0-0&apos; // this is the Nobody SID which really means No security principal was included.| where not(SubjectUserSid matches regex WellKnownLocalSIDs) //excluding system account/service account as this is generally normal| where TargetInfo has &apos;/&apos; //looking for only items that indicate an interesting protocol is included| where Computer !has tostring(split(TargetServerName,&apos;$&apos;)[0])| where TargetAccount !~ tostring(split(SubjectAccount,&apos;$&apos;)[0])| extend TargetInfoProtocol = tolower(split(TargetInfo, &apos;/&apos;)[0]), TargetInfoMachine = toupper(split(TargetInfo, &apos;/&apos;)[1])| extend TargetAccount = tolower(TargetAccount), SubjectAccount = tolower(SubjectAccount)| extend UncommonProtocol = case(not(TargetInfoProtocol has_any (protocols)), TargetInfoProtocol, &apos;NotApplicable&apos;)| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), AccountsUsedCount = dcount(TargetAccount), AccountsUsed = make_set(TargetAccount), TargetMachineCount = dcount(TargetInfoMachine), TargetMachines = make_set(TargetInfoMachine), TargetProtocols = dcount(TargetInfoProtocol), Protocols = make_set(TargetInfoProtocol), Processes = make_set(Process) by Computer, SubjectAccount, UncommonProtocol| where TargetMachineCount &amp;gt; 1 or UncommonProtocol != &apos;NotApplicable&apos;| extend ProtocolCount = array_length(Protocols)| extend ProtocolScore = case(Protocols has &apos;rpcss&apos; and Protocols has &apos;host&apos; and Protocols has &apos;cifs&apos;, 10, //observed in Solorigate and depending on which are used together the higher the scoreProtocols has &apos;rpcss&apos; and Protocols has &apos;host&apos;, 5,Protocols has &apos;rpcss&apos; and Protocols has &apos;cifs&apos;, 5,Protocols has &apos;host&apos; and Protocols has &apos;cifs&apos;, 5,Protocols has &apos;ldap&apos; or Protocols has &apos;rpcss&apos; or Protocols has &apos;host&apos; or Protocols has &apos;cifs&apos;, 1, //ldap is more commonly seen in general, this was also seen with Solorigate but not usually to the same machines as the others aboveUncommonProtocol != &apos;NotApplicable&apos;, 3,0 //other protocols may be of interest, but in relation to observations for enumeration/execution in Solorigate they receive 0)| extend Score = ProtocolScore + ProtocolCount + AccountsUsedCount| where Score &amp;gt;= 9 or (UncommonProtocol != &apos;NotApplicable&apos; and Score &amp;gt;= 4) // Score must be 9 or better as this will include 5 points for atleast 2 of the interesting protocols + the count of protocols (min 2) + the number of accounts used for execution (min 2) = min of 9 OR score must be 4 or greater for an uncommon protocol| extend TimePeriod = EndTime - StartTime //This identifies the time between start and finish for the use of the explicit credentials, shorter time period may indicate scripted executions| project-away UncommonProtocol| extend timestamp = StartTime, AccountCustomEntity = SubjectAccount, HostCustomEntity = Computer| order by Score desc\n&amp;nbsp;\nData Access\nAccessing confidential data is one of the primary motives of this attack. Data access for the attacker here relied on leveraging minted SAML tokens to access user files/email stored in the cloud via compromised AppIds. One way to detect this is when a user or application signs in using Azure Active Directory PowerShell to access non-Active Directory resources.\n&amp;nbsp;\nMicrosoft Graph is one way that the attacker may be seen accessing resources and can help find what the attacker may have accessed using the Service principal Azure Active Directory sign-in logs. If you have data in your Log analytics you could easily plot a chart to see what anomalous activity is happening in your environment that is leveraging the graph.&amp;nbsp;\nUpdated 12/17/2020\nNote that this data type in Azure Sentinel below is only available when additional Diagnostic Logging is enabled on the workspace.&amp;nbsp; Please see the instructions in the expandable section below.\nSpoiler (Highlight to read)The AADServicePrincipalSigninLogs datatype will not be available in Azure Sentinel unless it is configured under Diagnostic Settings.&amp;nbsp; Please see screenshots below the query.AADServicePrincipalSignInLogs| where TimeGenerated &amp;gt; ago(90d)| where ResourceDisplayName == &quot;Microsoft Graph&quot;| where ServicePrincipalId == &quot;524c43c4-c484-4f7a-bd44-89d4a0d8aeab&quot;| summarize count() by bin(TimeGenerated, 1h)| render timechartTo enable Service Principal Signin Logging, do the following:\n \n\n \n\n \nThe AADServicePrincipalSigninLogs datatype will not be available in Azure Sentinel unless it is configured under Diagnostic Settings.&amp;nbsp; Please see screenshots below the query.AADServicePrincipalSignInLogs| where TimeGenerated &amp;gt; ago(90d)| where ResourceDisplayName == &quot;Microsoft Graph&quot;| where ServicePrincipalId == &quot;524c43c4-c484-4f7a-bd44-89d4a0d8aeab&quot;| summarize count() by bin(TimeGenerated, 1h)| render timechartTo enable Service Principal Signin Logging, do the following:\n \n\n \n\n \n\nUpdated 12/21/2020\nAdditionally, below is a sample query that brings out some of the logons to Azure AD where multi factor authentication was satisfied by token based logons versus MFA via phone auth or the like. It is possible this could produce many results, so additional tuning is suggested for your environment.\nSpoiler (Highlight to read)SigninLogs| where TimeGenerated &amp;gt; ago(30d)| where ResultType == 0| extend additionalDetails = tostring(Status.additionalDetails)| summarize make_set(additionalDetails), min(TimeGenerated), max(TimeGenerated) by IPAddress, UserPrincipalName| where array_length(set_additionalDetails) == 2| where (set_additionalDetails[1] == &quot;MFA requirement satisfied by claim in the token&quot; and set_additionalDetails[0] == &quot;MFA requirement satisfied by claim provided by external provider&quot;) or (set_additionalDetails[0] == &quot;MFA requirement satisfied by claim in the token&quot; and set_additionalDetails[1] == &quot;MFA requirement satisfied by claim provided by external provider&quot;)//| project IPAddress, UserPrincipalName, min_TimeGenerated, max_TimeGeneratedSigninLogs| where TimeGenerated &amp;gt; ago(30d)| where ResultType == 0| extend additionalDetails = tostring(Status.additionalDetails)| summarize make_set(additionalDetails), min(TimeGenerated), max(TimeGenerated) by IPAddress, UserPrincipalName| where array_length(set_additionalDetails) == 2| where (set_additionalDetails[1] == &quot;MFA requirement satisfied by claim in the token&quot; and set_additionalDetails[0] == &quot;MFA requirement satisfied by claim provided by external provider&quot;) or (set_additionalDetails[0] == &quot;MFA requirement satisfied by claim in the token&quot; and set_additionalDetails[1] == &quot;MFA requirement satisfied by claim provided by external provider&quot;)//| project IPAddress, UserPrincipalName, min_TimeGenerated, max_TimeGenerated\nUPDATED 12/17/2020\nThis attack also used Virtual Private Servers (VPS) hosts to access victim networks and can be used in conjunction with the query above. Both MSTIC and FireEye have reported attacker logon events coming from network ranges associated with VPS providers. In order to highlight these logons, MSTIC has created a new hunting query -&amp;nbsp;Signins From VPS Providers -&amp;nbsp;that looks for successful signins from network ranges associated with VPS providers. This is joined with the above query, the new query looks for IPs that only display sign-ins based on tokens and not other MFA options, although this could be removed if wanted. The list of VPS ranges in the query is not comprehensive and there is significant potential for false positives so results should be investigated before responding, however it can provide very effective signal. Combining the query below with data that list VPS server ranges will make this a high-confidence hunting query.&amp;nbsp;\n&amp;nbsp;\nIn relation to the VPS servers section above, the previously mentioned workbook has a section that shows successful user signins from VPS (Virtual Private Server) providers where only tokens were used to authenticate. This uses the new KQL operator ipv4_lookup to evaluate if a login came from a known VPS provider network range. This operator can alternatively be used to look for all logons not coming from known ranges should your environment have a common logon source.\n&amp;nbsp;\nData Exfiltration&amp;nbsp;\nUpdated 12/20/2020\nEmail data has been observed as a target for the&amp;nbsp;Solorigate&amp;nbsp;attackers, one way to monitor for potential suspicious access is to look for anomalous&amp;nbsp;MailItemsAccessed&amp;nbsp;volumes. MSTIC has created a specific hunting query to&amp;nbsp;identify Anomolous User Accessing Other Users Mailbox&amp;nbsp;which can help to identify malicious activity related to this attack. Additionally, MSTIC previously created&amp;nbsp;a more generic detection - Exchange workflow MailItemsAccessed operation anomaly - which&amp;nbsp;looks for time series based anomalies in&amp;nbsp;MailItemsAccessed&amp;nbsp;events in the&amp;nbsp;OfficeActivity&amp;nbsp;log.&amp;nbsp;\nSpoiler (Highlight to read)Anomalous access to other user&apos;s mailboxeslet timeframe = 14d;let user_threshold = 1;let folder_threshold = 5;OfficeActivity| where TimeGenerated &amp;gt; ago(timeframe)| where Operation =~ &quot;MailItemsAccessed&quot; | where ResultStatus =~ &quot;Succeeded&quot;| mv-expand parse_json(Folders)| extend folders = tostring(Folders.Path)| where tolower(MailboxOwnerUPN) != tolower(UserId)| extend ClientIP = iif(Client_IPAddress startswith &quot;[&quot;, extract(&quot;\\\\[([^\\\\]]*)&quot;, 1, Client_IPAddress), Client_IPAddress)| summarize make_set(folders), make_set(ClientInfoString), make_set(ClientIP), make_set(MailboxGuid), make_set(MailboxOwnerUPN) by UserId| extend folder_count = array_length(set_folders)| extend user_count = array_length(set_MailboxGuid)| where user_count &amp;gt; user_threshold or folder_count &amp;gt; folder_threshold| sort by user_count desc| project-reorder UserId, user_count, folder_count, set_MailboxOwnerUPN, set_ClientIP, set_ClientInfoString, set_folderExchange workflow MailItemsAccessed operation anomalylet starttime = 14d;let endtime = 1d;let timeframe = 1h;let scorethreshold = 1.5;let percentthreshold = 50;// Preparing the time series data aggregated hourly count of MailItemsAccessd Operation in the form of multi-value array to use with time series anomaly function.let TimeSeriesData =OfficeActivity| where TimeGenerated between (startofday(ago(starttime))..startofday(ago(endtime)))| where OfficeWorkload=~ &quot;Exchange&quot; and Operation =~ &quot;MailItemsAccessed&quot; and ResultStatus =~ &quot;Succeeded&quot;| project TimeGenerated, Operation, MailboxOwnerUPN| make-series Total=count() on TimeGenerated from startofday(ago(starttime)) to startofday(ago(endtime)) step timeframe;let TimeSeriesAlerts = TimeSeriesData| extend (anomalies, score, baseline) = series_decompose_anomalies(Total, scorethreshold, -1, &apos;linefit&apos;)| mv-expand Total to typeof(double), TimeGenerated to typeof(datetime), anomalies to typeof(double), score to typeof(double), baseline to typeof(long)| where anomalies &amp;gt; 0| project TimeGenerated, Total, baseline, anomalies, score;// Joining the flagged outlier from the previous step with the original dataset to present contextual information// during the anomalyhour to analysts to conduct investigation or informed decisions.TimeSeriesAlerts | where TimeGenerated &amp;gt; ago(2d)// Join against base logs since specified timeframe to retrive records associated with the hour of anomoly| join (OfficeActivity| where TimeGenerated &amp;gt; ago(2d)| where OfficeWorkload=~ &quot;Exchange&quot; and Operation =~ &quot;MailItemsAccessed&quot; and ResultStatus =~ &quot;Succeeded&quot;) on TimeGeneratedAnomalous access to other user&apos;s mailboxeslet timeframe = 14d;let user_threshold = 1;let folder_threshold = 5;OfficeActivity| where TimeGenerated &amp;gt; ago(timeframe)| where Operation =~ &quot;MailItemsAccessed&quot; | where ResultStatus =~ &quot;Succeeded&quot;| mv-expand parse_json(Folders)| extend folders = tostring(Folders.Path)| where tolower(MailboxOwnerUPN) != tolower(UserId)| extend ClientIP = iif(Client_IPAddress startswith &quot;[&quot;, extract(&quot;\\\\[([^\\\\]]*)&quot;, 1, Client_IPAddress), Client_IPAddress)| summarize make_set(folders), make_set(ClientInfoString), make_set(ClientIP), make_set(MailboxGuid), make_set(MailboxOwnerUPN) by UserId| extend folder_count = array_length(set_folders)| extend user_count = array_length(set_MailboxGuid)| where user_count &amp;gt; user_threshold or folder_count &amp;gt; folder_threshold| sort by user_count desc| project-reorder UserId, user_count, folder_count, set_MailboxOwnerUPN, set_ClientIP, set_ClientInfoString, set_folderExchange workflow MailItemsAccessed operation anomalylet starttime = 14d;let endtime = 1d;let timeframe = 1h;let scorethreshold = 1.5;let percentthreshold = 50;// Preparing the time series data aggregated hourly count of MailItemsAccessd Operation in the form of multi-value array to use with time series anomaly function.let TimeSeriesData =OfficeActivity| where TimeGenerated between (startofday(ago(starttime))..startofday(ago(endtime)))| where OfficeWorkload=~ &quot;Exchange&quot; and Operation =~ &quot;MailItemsAccessed&quot; and ResultStatus =~ &quot;Succeeded&quot;| project TimeGenerated, Operation, MailboxOwnerUPN| make-series Total=count() on TimeGenerated from startofday(ago(starttime)) to startofday(ago(endtime)) step timeframe;let TimeSeriesAlerts = TimeSeriesData| extend (anomalies, score, baseline) = series_decompose_anomalies(Total, scorethreshold, -1, &apos;linefit&apos;)| mv-expand Total to typeof(double), TimeGenerated to typeof(datetime), anomalies to typeof(double), score to typeof(double), baseline to typeof(long)| where anomalies &amp;gt; 0| project TimeGenerated, Total, baseline, anomalies, score;// Joining the flagged outlier from the previous step with the original dataset to present contextual information// during the anomalyhour to analysts to conduct investigation or informed decisions.TimeSeriesAlerts | where TimeGenerated &amp;gt; ago(2d)// Join against base logs since specified timeframe to retrive records associated with the hour of anomoly| join (OfficeActivity| where TimeGenerated &amp;gt; ago(2d)| where OfficeWorkload=~ &quot;Exchange&quot; and Operation =~ &quot;MailItemsAccessed&quot; and ResultStatus =~ &quot;Succeeded&quot;) on TimeGenerated\nUpdated 12/19/2020\nTargeting of email data has also been observed by other industry members including Volexity who reported attackers using PowerShell commands to export on premise Exchange mailboxes and then hosting those files on OWA servers in order to exfiltrate them.\nMSTIC has created detections to identify this activity at both the OWA server and attacking host level through IIS logs, and PowerShell command line logging.\n&amp;nbsp;\nOWA exfiltration:\nSpoiler (Highlight to read)let excludeIps = dynamic([&quot;127.0.0.1&quot;, &quot;::1&quot;]);let scriptingExt = dynamic([&quot;aspx&quot;, &quot;ashx&quot;, &quot;asp&quot;]);W3CIISLog| where csUriStem contains &quot;/owa/&quot;//The actor pulls a file back but won&apos;t send it any URI params| where isempty(csUriQuery)| extend file_ext = tostring(split(csUriStem, &quot;.&quot;)[-1])//Giving your file a known scripting extension will throw an error//rather than just serving the file as it will try to interpret the script| where file_ext !in~ (scriptingExt)//The actor was seen using image files, but we go wider in case they change this behaviour//| where file_ext in~ (&quot;jpg&quot;, &quot;jpeg&quot;, &quot;png&quot;, &quot;bmp&quot;)| extend file_name = tostring(split(csUriStem, &quot;/&quot;)[-1])| where file_name != &quot;&quot;| where cIP !in~ (excludeIps)| project file_ext, csUriStem, file_name, Computer, cIP, sIP, TenantId, TimeGenerated| summarize dcount(cIP), AccessingIPs=make_set(cIP), AccessTimes=make_set(TimeGenerated), Access=count() by TenantId, file_name, Computer, csUriStem//Collection of the exfiltration will occur only once, lets check for 2 accesses in case they mess up//Tailor this for hunting| where Access &amp;lt;= 2 and dcount_cIP == 1let excludeIps = dynamic([&quot;127.0.0.1&quot;, &quot;::1&quot;]);let scriptingExt = dynamic([&quot;aspx&quot;, &quot;ashx&quot;, &quot;asp&quot;]);W3CIISLog| where csUriStem contains &quot;/owa/&quot;//The actor pulls a file back but won&apos;t send it any URI params| where isempty(csUriQuery)| extend file_ext = tostring(split(csUriStem, &quot;.&quot;)[-1])//Giving your file a known scripting extension will throw an error//rather than just serving the file as it will try to interpret the script| where file_ext !in~ (scriptingExt)//The actor was seen using image files, but we go wider in case they change this behaviour//| where file_ext in~ (&quot;jpg&quot;, &quot;jpeg&quot;, &quot;png&quot;, &quot;bmp&quot;)| extend file_name = tostring(split(csUriStem, &quot;/&quot;)[-1])| where file_name != &quot;&quot;| where cIP !in~ (excludeIps)| project file_ext, csUriStem, file_name, Computer, cIP, sIP, TenantId, TimeGenerated| summarize dcount(cIP), AccessingIPs=make_set(cIP), AccessTimes=make_set(TimeGenerated), Access=count() by TenantId, file_name, Computer, csUriStem//Collection of the exfiltration will occur only once, lets check for 2 accesses in case they mess up//Tailor this for hunting| where Access &amp;lt;= 2 and dcount_cIP == 1\nHost creating then removing mailbox export requests using PowerShell cmdlets:\nSpoiler (Highlight to read)\n&amp;nbsp; // Adjust the timeframe to change the window events need to occur within to alert\n&amp;nbsp; let timeframe = 1h;\n&amp;nbsp; SecurityEvent\n&amp;nbsp; | where Process in (&quot;powershell.exe&quot;, &quot;cmd.exe&quot;)\n&amp;nbsp; | where CommandLine contains &apos;New-MailboxExportRequest&apos;\n&amp;nbsp; | summarize by Computer, timekey = bin(TimeGenerated, timeframe), CommandLine, SubjectUserName\n&amp;nbsp;&amp;nbsp;| join kind=inner (SecurityEvent\n&amp;nbsp; | where Process in (&quot;powershell.exe&quot;, &quot;cmd.exe&quot;)\n&amp;nbsp; | where CommandLine contains &apos;Remove-MailboxExportRequest&apos;\n&amp;nbsp; | summarize by Computer, timekey = bin(TimeGenerated, timeframe), CommandLine, SubjectUserName) on Computer, timekey, SubjectUserName\n&amp;nbsp; | extend commands = pack_array(CommandLine1, CommandLine)\n&amp;nbsp; | summarize by timekey, Computer, tostring(commands), SubjectUserName\n&amp;nbsp; | project-reorder timekey, Computer, SubjectUserName, [&apos;commands&apos;]\n&amp;nbsp; | extend HostCustomEntity = Computer, AccountCustomEntity = SubjectUserName\n\n&amp;nbsp; // Adjust the timeframe to change the window events need to occur within to alert\n&amp;nbsp; let timeframe = 1h;\n&amp;nbsp; SecurityEvent\n&amp;nbsp; | where Process in (&quot;powershell.exe&quot;, &quot;cmd.exe&quot;)\n&amp;nbsp; | where CommandLine contains &apos;New-MailboxExportRequest&apos;\n&amp;nbsp; | summarize by Computer, timekey = bin(TimeGenerated, timeframe), CommandLine, SubjectUserName\n&amp;nbsp;&amp;nbsp;| join kind=inner (SecurityEvent\n&amp;nbsp; | where Process in (&quot;powershell.exe&quot;, &quot;cmd.exe&quot;)\n&amp;nbsp; | where CommandLine contains &apos;Remove-MailboxExportRequest&apos;\n&amp;nbsp; | summarize by Computer, timekey = bin(TimeGenerated, timeframe), CommandLine, SubjectUserName) on Computer, timekey, SubjectUserName\n&amp;nbsp; | extend commands = pack_array(CommandLine1, CommandLine)\n&amp;nbsp; | summarize by timekey, Computer, tostring(commands), SubjectUserName\n&amp;nbsp; | project-reorder timekey, Computer, SubjectUserName, [&apos;commands&apos;]\n&amp;nbsp; | extend HostCustomEntity = Computer, AccountCustomEntity = SubjectUserName\n\nUpdated 12/28/2020\nEmail Delegation and later delegate access is another tactic that has been observed to gain access to user&apos;s mailboxes.&amp;nbsp; We have a previously created a method to discover&amp;nbsp;Non-owner mailbox login activity that can be applied here to help identify when delegates are inappropriately access email.\n&amp;nbsp;\nSpoiler (Highlight to read)let timeframe = 1d;OfficeActivity| where TimeGenerated &amp;gt;= ago(timeframe)| where Operation == &quot;MailboxLogin&quot; and Logon_Type != &quot;Owner&quot; | summarize count(), min(TimeGenerated), max(TimeGenerated) by Operation, OrganizationName, UserType, UserId, MailboxOwnerUPN, Logon_Type| extend timestamp = min_TimeGenerated, AccountCustomEntity = UserIdlet timeframe = 1d;OfficeActivity| where TimeGenerated &amp;gt;= ago(timeframe)| where Operation == &quot;MailboxLogin&quot; and Logon_Type != &quot;Owner&quot; | summarize count(), min(TimeGenerated), max(TimeGenerated) by Operation, OrganizationName, UserType, UserId, MailboxOwnerUPN, Logon_Type| extend timestamp = min_TimeGenerated, AccountCustomEntity = UserId\n&amp;nbsp;\nDomain&amp;nbsp;Hunting\nUpdated 12/17/2020\nDomain specific\nMSTIC has collated network based&amp;nbsp;IoCs&amp;nbsp;from&amp;nbsp;MSTIC,&amp;nbsp;FireEye&amp;nbsp;and&amp;nbsp;Volexity&amp;nbsp;to create a network based&amp;nbsp;IoC&amp;nbsp;detection -&amp;nbsp;Solorigate Network Beacon -&amp;nbsp;that leverage multiple network focused data sources within Azure Sentinel.&amp;nbsp;&amp;nbsp;\nSpoiler (Highlight to read)let domains = dynamic([&quot;incomeupdate.com&quot;,&quot;zupertech.com&quot;,&quot;databasegalore.com&quot;,&quot;panhardware.com&quot;,&quot;avsvmcloud.com&quot;,&quot;digitalcollege.org&quot;,&quot;freescanonline.com&quot;,&quot;deftsecurity.com&quot;,&quot;thedoccloud.com&quot;,&quot;virtualdataserver.com&quot;,&quot;lcomputers.com&quot;,&quot;webcodez.com&quot;,&quot;globalnetworkissues.com&quot;,&quot;kubecloud.com&quot;,&quot;seobundlekit.com&quot;,&quot;solartrackingsystem.net&quot;,&quot;virtualwebdata.com&quot;]);let timeframe = 6h;(union isfuzzy=true(CommonSecurityLog | where TimeGenerated &amp;gt;= ago(timeframe) | parse Message with * &apos;(&apos; DNSName &apos;)&apos; * | where DNSName in~ (domains) or DestinationHostName has_any (domains) or RequestURL has_any(domains)| extend AccountCustomEntity = SourceUserID, HostCustomEntity = DeviceName, IPCustomEntity = SourceIP),(DnsEvents | where TimeGenerated &amp;gt;= ago(timeframe) | extend DNSName = Name| where isnotempty(DNSName)| where DNSName in~ (domains)| extend IPCustomEntity = ClientIP),(VMConnection | where TimeGenerated &amp;gt;= ago(timeframe) | parse RemoteDnsCanonicalNames with * &apos;[&quot;&apos; DNSName &apos;&quot;]&apos; *| where isnotempty(DNSName)| where DNSName in~ (domains)| extend IPCustomEntity = RemoteIp),(DeviceNetworkEvents | where TimeGenerated &amp;gt;= ago(timeframe) | where isnotempty(RemoteUrl) | where RemoteUrl has_any (domains) | extend DNSName = RemoteUrl| extend IPCustomEntity = RemoteIP | extend HostCustomEntity = DeviceName ) )let domains = dynamic([&quot;incomeupdate.com&quot;,&quot;zupertech.com&quot;,&quot;databasegalore.com&quot;,&quot;panhardware.com&quot;,&quot;avsvmcloud.com&quot;,&quot;digitalcollege.org&quot;,&quot;freescanonline.com&quot;,&quot;deftsecurity.com&quot;,&quot;thedoccloud.com&quot;,&quot;virtualdataserver.com&quot;,&quot;lcomputers.com&quot;,&quot;webcodez.com&quot;,&quot;globalnetworkissues.com&quot;,&quot;kubecloud.com&quot;,&quot;seobundlekit.com&quot;,&quot;solartrackingsystem.net&quot;,&quot;virtualwebdata.com&quot;]);let timeframe = 6h;(union isfuzzy=true(CommonSecurityLog | where TimeGenerated &amp;gt;= ago(timeframe) | parse Message with * &apos;(&apos; DNSName &apos;)&apos; * | where DNSName in~ (domains) or DestinationHostName has_any (domains) or RequestURL has_any(domains)| extend AccountCustomEntity = SourceUserID, HostCustomEntity = DeviceName, IPCustomEntity = SourceIP),(DnsEvents | where TimeGenerated &amp;gt;= ago(timeframe) | extend DNSName = Name| where isnotempty(DNSName)| where DNSName in~ (domains)| extend IPCustomEntity = ClientIP),(VMConnection | where TimeGenerated &amp;gt;= ago(timeframe) | parse RemoteDnsCanonicalNames with * &apos;[&quot;&apos; DNSName &apos;&quot;]&apos; *| where isnotempty(DNSName)| where DNSName in~ (domains)| extend IPCustomEntity = RemoteIp),(DeviceNetworkEvents | where TimeGenerated &amp;gt;= ago(timeframe) | where isnotempty(RemoteUrl) | where RemoteUrl has_any (domains) | extend DNSName = RemoteUrl| extend IPCustomEntity = RemoteIP | extend HostCustomEntity = DeviceName ) )\nDomain DGA\nThe&amp;nbsp;avsvmcloud[.]com&amp;nbsp;has been observed by several organizations as making DGA like subdomain queries as part of C2 activities. MSTIC have generated a hunting query -&amp;nbsp;Solorigate DNS Pattern -&amp;nbsp;to look for similar&amp;nbsp;patterns of activity from other domains that might help identify other potential C2 sources.\nSpoiler (Highlight to read)let cloudApiTerms = dynamic([&quot;api&quot;, &quot;east&quot;, &quot;west&quot;]);DnsEvents| where IPAddresses != &quot;&quot; and IPAddresses != &quot;127.0.0.1&quot;| where Name endswith &quot;.com&quot; or Name endswith &quot;.org&quot; or Name endswith &quot;.net&quot;| extend domain_split = split(Name, &quot;.&quot;)| where tostring(domain_split[-5]) != &quot;&quot; and tostring(domain_split[-6]) == &quot;&quot;| extend sub_domain = tostring(domain_split[0])| where sub_domain !contains &quot;-&quot;| extend sub_directories = strcat(domain_split[-3], &quot; &quot;, domain_split[-4])| where sub_directories has_any(cloudApiTerms)//Based on sample communications the subdomain is always between 20 and 30 bytes| where strlen(domain_split) &amp;lt; 32 or strlen(domain_split) &amp;gt; 20| extend domain = strcat(tostring(domain_split[-2]), &quot;.&quot;, tostring(domain_split[-1])) | extend subdomain_no = countof(sub_domain, @&quot;(\\d)&quot;, &quot;regex&quot;)| extend subdomain_ch = countof(sub_domain, @&quot;([a-z])&quot;, &quot;regex&quot;)| where subdomain_no &amp;gt; 1| extend percentage_numerical = toreal(subdomain_no) / toreal(strlen(sub_domain)) * 100| where percentage_numerical &amp;lt; 50 and percentage_numerical &amp;gt; 5| summarize count(), make_set(Name), FirstSeen=min(TimeGenerated), LastSeen=max(TimeGenerated) by Name| order by count_ asclet cloudApiTerms = dynamic([&quot;api&quot;, &quot;east&quot;, &quot;west&quot;]);DnsEvents| where IPAddresses != &quot;&quot; and IPAddresses != &quot;127.0.0.1&quot;| where Name endswith &quot;.com&quot; or Name endswith &quot;.org&quot; or Name endswith &quot;.net&quot;| extend domain_split = split(Name, &quot;.&quot;)| where tostring(domain_split[-5]) != &quot;&quot; and tostring(domain_split[-6]) == &quot;&quot;| extend sub_domain = tostring(domain_split[0])| where sub_domain !contains &quot;-&quot;| extend sub_directories = strcat(domain_split[-3], &quot; &quot;, domain_split[-4])| where sub_directories has_any(cloudApiTerms)//Based on sample communications the subdomain is always between 20 and 30 bytes| where strlen(domain_split) &amp;lt; 32 or strlen(domain_split) &amp;gt; 20| extend domain = strcat(tostring(domain_split[-2]), &quot;.&quot;, tostring(domain_split[-1])) | extend subdomain_no = countof(sub_domain, @&quot;(\\d)&quot;, &quot;regex&quot;)| extend subdomain_ch = countof(sub_domain, @&quot;([a-z])&quot;, &quot;regex&quot;)| where subdomain_no &amp;gt; 1| extend percentage_numerical = toreal(subdomain_no) / toreal(strlen(sub_domain)) * 100| where percentage_numerical &amp;lt; 50 and percentage_numerical &amp;gt; 5| summarize count(), make_set(Name), FirstSeen=min(TimeGenerated), LastSeen=max(TimeGenerated) by Name| order by count_ asc\nEncoded Domain\nIn&amp;nbsp;addition&amp;nbsp;we have another query - Solorigate Encoded Domain in URL-&amp;nbsp;that takes the encoding pattern the DGA uses, encodes the domains seen in&amp;nbsp;signin&amp;nbsp;logs and then looks for those patterns in DNS logs. This can help identify other C2 domains using the same encoding scheme.&amp;nbsp;\nSpoiler (Highlight to read)let dictionary = dynamic([&quot;r&quot;,&quot;q&quot;,&quot;3&quot;,&quot;g&quot;,&quot;s&quot;,&quot;a&quot;,&quot;l&quot;,&quot;t&quot;,&quot;6&quot;,&quot;u&quot;,&quot;1&quot;,&quot;i&quot;,&quot;y&quot;,&quot;f&quot;,&quot;z&quot;,&quot;o&quot;,&quot;p&quot;,&quot;5&quot;,&quot;7&quot;,&quot;2&quot;,&quot;d&quot;,&quot;4&quot;,&quot;9&quot;,&quot;b&quot;,&quot;n&quot;,&quot;x&quot;,&quot;8&quot;,&quot;c&quot;,&quot;v&quot;,&quot;m&quot;,&quot;k&quot;,&quot;e&quot;,&quot;w&quot;,&quot;h&quot;,&quot;j&quot;]);let regex_bad_domains = SigninLogs//Collect domains from tenant from signin logs| where TimeGenerated &amp;gt; ago(1d)| extend domain = tostring(split(UserPrincipalName, &quot;@&quot;, 1)[0])| where domain != &quot;&quot;| summarize by domain| extend split_domain = split(domain, &quot;.&quot;)//This cuts back on domains such as na.contoso.com by electing not to match on the &quot;na&quot; portion| extend target_string = iff(strlen(split_domain[0]) &amp;lt;= 2, split_domain[1], split_domain[0])| extend target_string = split(target_string, &quot;-&quot;)| mv-expand target_string//Rip all of the alphanumeric out of the domain name| extend string_chars = extract_all(@&quot;([a-z0-9])&quot;, tostring(target_string))//Guid for tracking our data| extend guid = new_guid()//Expand to get all of the individual chars from the domain| mv-expand string_chars| extend chars = tostring(string_chars)//Conduct computation to encode the domain as per actor spec| extend computed_char = array_index_of(dictionary, chars)| extend computed_char = dictionary[(computed_char + 4) % array_length(dictionary)] | summarize make_list(computed_char) by guid, domain| extend target_encoded = tostring(strcat_array(list_computed_char, &quot;&quot;))//These are probably too small, but can be edited (expect FP&apos;s when going too small)| where strlen(target_encoded) &amp;gt; 5| distinct target_encoded| summarize make_set(target_encoded)//Key to join to DNS| extend key = 1;DnsEvents| where TimeGenerated &amp;gt; ago(1d)| summarize by Name| extend key = 1//For each DNS query join the malicious domain list| join kind=inner ( regex_bad_domains) on key| project-away key//Expand each malicious key for each DNS query observed| mv-expand set_target_encoded//IndexOf allows us to fuzzy match on the substring| extend match = indexof(Name, set_target_encoded)| where match &amp;gt; -1let dictionary = dynamic([&quot;r&quot;,&quot;q&quot;,&quot;3&quot;,&quot;g&quot;,&quot;s&quot;,&quot;a&quot;,&quot;l&quot;,&quot;t&quot;,&quot;6&quot;,&quot;u&quot;,&quot;1&quot;,&quot;i&quot;,&quot;y&quot;,&quot;f&quot;,&quot;z&quot;,&quot;o&quot;,&quot;p&quot;,&quot;5&quot;,&quot;7&quot;,&quot;2&quot;,&quot;d&quot;,&quot;4&quot;,&quot;9&quot;,&quot;b&quot;,&quot;n&quot;,&quot;x&quot;,&quot;8&quot;,&quot;c&quot;,&quot;v&quot;,&quot;m&quot;,&quot;k&quot;,&quot;e&quot;,&quot;w&quot;,&quot;h&quot;,&quot;j&quot;]);let regex_bad_domains = SigninLogs//Collect domains from tenant from signin logs| where TimeGenerated &amp;gt; ago(1d)| extend domain = tostring(split(UserPrincipalName, &quot;@&quot;, 1)[0])| where domain != &quot;&quot;| summarize by domain| extend split_domain = split(domain, &quot;.&quot;)//This cuts back on domains such as na.contoso.com by electing not to match on the &quot;na&quot; portion| extend target_string = iff(strlen(split_domain[0]) &amp;lt;= 2, split_domain[1], split_domain[0])| extend target_string = split(target_string, &quot;-&quot;)| mv-expand target_string//Rip all of the alphanumeric out of the domain name| extend string_chars = extract_all(@&quot;([a-z0-9])&quot;, tostring(target_string))//Guid for tracking our data| extend guid = new_guid()//Expand to get all of the individual chars from the domain| mv-expand string_chars| extend chars = tostring(string_chars)//Conduct computation to encode the domain as per actor spec| extend computed_char = array_index_of(dictionary, chars)| extend computed_char = dictionary[(computed_char + 4) % array_length(dictionary)] | summarize make_list(computed_char) by guid, domain| extend target_encoded = tostring(strcat_array(list_computed_char, &quot;&quot;))//These are probably too small, but can be edited (expect FP&apos;s when going too small)| where strlen(target_encoded) &amp;gt; 5| distinct target_encoded| summarize make_set(target_encoded)//Key to join to DNS| extend key = 1;DnsEvents| where TimeGenerated &amp;gt; ago(1d)| summarize by Name| extend key = 1//For each DNS query join the malicious domain list| join kind=inner ( regex_bad_domains) on key| project-away key//Expand each malicious key for each DNS query observed| mv-expand set_target_encoded//IndexOf allows us to fuzzy match on the substring| extend match = indexof(Name, set_target_encoded)| where match &amp;gt; -1\nSecurity Service Tampering\nUpdated 01/19/2021\nThere has been additional indication that security services are being tampered with to hinder detection and investigation. While this is a common tactic, we felt that we should include this reference. The query is currently written specifically for Potential Microsoft security services tampering, but can easily be adapted to identify other security services.\nSpoiler (Highlight to read)let includeProc = dynamic([&quot;sc.exe&quot;,&quot;net1.exe&quot;,&quot;net.exe&quot;, &quot;taskkill.exe&quot;, &quot;cmd.exe&quot;, &quot;powershell.exe&quot;]);let action = dynamic([&quot;stop&quot;,&quot;disable&quot;, &quot;delete&quot;]);let service1 = dynamic([&apos;sense&apos;, &apos;windefend&apos;, &apos;mssecflt&apos;]);let service2 = dynamic([&apos;sense&apos;, &apos;windefend&apos;, &apos;mssecflt&apos;, &apos;healthservice&apos;]);let params1 = dynamic([&quot;-DisableRealtimeMonitoring&quot;, &quot;-DisableBehaviorMonitoring&quot; ,&quot;-DisableIOAVProtection&quot;]);let params2 = dynamic([&quot;sgrmbroker.exe&quot;, &quot;mssense.exe&quot;]);let regparams1 = dynamic([&apos;reg add &quot;HKLM\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows Defender&quot;&apos;, &apos;reg add &quot;HKLM\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows Advanced Threat Protection&quot;&apos;]);let regparams2 = dynamic([&apos;ForceDefenderPassiveMode&apos;, &apos;DisableAntiSpyware&apos;]);let regparams3 = dynamic([&apos;sense&apos;, &apos;windefend&apos;]);let regparams4 = dynamic([&apos;demand&apos;, &apos;disabled&apos;]);let regparams5 = dynamic([&apos;reg add &quot;HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\services\\\\HealthService&quot;&apos;, &apos;reg add &quot;HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\Sense&quot;&apos;, &apos;reg add &quot;HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\WinDefend&quot;&apos;, &apos;reg add &quot;HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\MsSecFlt&quot;&apos;, &apos;reg add &quot;HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\DiagTrack&quot;&apos;, &apos;reg add &quot;HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\SgrmBroker&quot;&apos;, &apos;reg add &quot;HKLMSYSTEM\\\\CurrentControlSet\\\\Services\\\\SgrmAgent&quot;&apos;, &apos;reg add &quot;HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\AATPSensorUpdater&quot;&apos; , &apos;reg add &quot;HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\AATPSensor&quot;&apos;, &apos;reg add &quot;HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\mpssvc&quot;&apos;]);let regparams6 = dynamic([&apos;/d 4&apos;,&apos;/d &quot;4&quot;&apos;,&apos;/d 0x00000004&apos;]);let regparams7 = dynamic([&apos;/d 1&apos;,&apos;/d &quot;1&quot;&apos;,&apos;/d 0x00000001&apos;]);let timeframe = 1d;(union isfuzzy=true(SecurityEvent| where TimeGenerated &amp;gt;= ago(timeframe)| where EventID == 4688| extend ProcessName = tostring(split(NewProcessName, &apos;\\\\&apos;)[-1])| where ProcessName in~ (includeProc)| where (CommandLine has_any (action) and CommandLine has_any (service1)) or (CommandLine has_any (params1) and CommandLine has &apos;Set-MpPreference&apos; and CommandLine has &apos;$true&apos;)or (CommandLine has_any (params2) and CommandLine has &quot;/IM&quot;) or (CommandLine has_any (regparams5) and CommandLine has &apos;Start&apos; and CommandLine has_any (regparams6))or (CommandLine has_any (regparams1) and CommandLine has_any (regparams2) and CommandLine has_any (regparams7)) or (CommandLine has &quot;start&quot; and CommandLine has &quot;config&quot; and CommandLine has_any (regparams3) and CommandLine has_any (regparams4))| project TimeGenerated, Computer, Account, AccountDomain, ProcessName, ProcessNameFullPath = NewProcessName, EventID, Activity, CommandLine, EventSourceName, Type),(Event| where TimeGenerated &amp;gt;= ago(timeframe)| where Source =~ &quot;Microsoft-Windows-SENSE&quot;| where EventID == 87 and ParameterXml in (&quot;&amp;lt;Param&amp;gt;sgrmbroker&amp;lt;/Param&amp;gt;&quot;, &quot;&amp;lt;Param&amp;gt;WinDefend&amp;lt;/Param&amp;gt;&quot;)| project TimeGenerated, Computer, Account = UserName, EventID, Activity = RenderedDescription, EventSourceName = Source, Type),(DeviceProcessEvents| where TimeGenerated &amp;gt;= ago(timeframe)| where InitiatingProcessFileName in~ (includeProc)| where (InitiatingProcessCommandLine has_any(action) and InitiatingProcessCommandLine has_any (service2) and InitiatingProcessParentFileName != &apos;cscript.exe&apos;)or (InitiatingProcessCommandLine has_any (params1) and InitiatingProcessCommandLine has &apos;Set-MpPreference&apos; and InitiatingProcessCommandLine has &apos;$true&apos;) or (InitiatingProcessCommandLine has_any (params2) and InitiatingProcessCommandLine has &quot;/IM&quot;) or ( InitiatingProcessCommandLine has_any (regparams5) and InitiatingProcessCommandLine has &apos;Start&apos; and InitiatingProcessCommandLine has_any (regparams6))or (InitiatingProcessCommandLine has_any (regparams1) and InitiatingProcessCommandLine has_any (regparams2) and InitiatingProcessCommandLine has_any (regparams7)) or (InitiatingProcessCommandLine has_any(&quot;start&quot;) and InitiatingProcessCommandLine has &quot;config&quot; and InitiatingProcessCommandLine has_any (regparams3) and InitiatingProcessCommandLine has_any (regparams4))| extend Account = iff(isnotempty(InitiatingProcessAccountUpn), InitiatingProcessAccountUpn, InitiatingProcessAccountName), Computer = DeviceName| project TimeGenerated, Computer, Account, AccountDomain, ProcessName = InitiatingProcessFileName, ProcessNameFullPath = FolderPath, Activity = ActionType, CommandLine = InitiatingProcessCommandLine, Type, InitiatingProcessParentFileName))| extend timestamp = TimeGenerated, AccountCustomEntity = Account, HostCustomEntity = Computerlet includeProc = dynamic([&quot;sc.exe&quot;,&quot;net1.exe&quot;,&quot;net.exe&quot;, &quot;taskkill.exe&quot;, &quot;cmd.exe&quot;, &quot;powershell.exe&quot;]);let action = dynamic([&quot;stop&quot;,&quot;disable&quot;, &quot;delete&quot;]);let service1 = dynamic([&apos;sense&apos;, &apos;windefend&apos;, &apos;mssecflt&apos;]);let service2 = dynamic([&apos;sense&apos;, &apos;windefend&apos;, &apos;mssecflt&apos;, &apos;healthservice&apos;]);let params1 = dynamic([&quot;-DisableRealtimeMonitoring&quot;, &quot;-DisableBehaviorMonitoring&quot; ,&quot;-DisableIOAVProtection&quot;]);let params2 = dynamic([&quot;sgrmbroker.exe&quot;, &quot;mssense.exe&quot;]);let regparams1 = dynamic([&apos;reg add &quot;HKLM\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows Defender&quot;&apos;, &apos;reg add &quot;HKLM\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows Advanced Threat Protection&quot;&apos;]);let regparams2 = dynamic([&apos;ForceDefenderPassiveMode&apos;, &apos;DisableAntiSpyware&apos;]);let regparams3 = dynamic([&apos;sense&apos;, &apos;windefend&apos;]);let regparams4 = dynamic([&apos;demand&apos;, &apos;disabled&apos;]);let regparams5 = dynamic([&apos;reg add &quot;HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\services\\\\HealthService&quot;&apos;, &apos;reg add &quot;HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\Sense&quot;&apos;, &apos;reg add &quot;HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\WinDefend&quot;&apos;, &apos;reg add &quot;HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\MsSecFlt&quot;&apos;, &apos;reg add &quot;HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\DiagTrack&quot;&apos;, &apos;reg add &quot;HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\SgrmBroker&quot;&apos;, &apos;reg add &quot;HKLMSYSTEM\\\\CurrentControlSet\\\\Services\\\\SgrmAgent&quot;&apos;, &apos;reg add &quot;HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\AATPSensorUpdater&quot;&apos; , &apos;reg add &quot;HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\AATPSensor&quot;&apos;, &apos;reg add &quot;HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\mpssvc&quot;&apos;]);let regparams6 = dynamic([&apos;/d 4&apos;,&apos;/d &quot;4&quot;&apos;,&apos;/d 0x00000004&apos;]);let regparams7 = dynamic([&apos;/d 1&apos;,&apos;/d &quot;1&quot;&apos;,&apos;/d 0x00000001&apos;]);let timeframe = 1d;(union isfuzzy=true(SecurityEvent| where TimeGenerated &amp;gt;= ago(timeframe)| where EventID == 4688| extend ProcessName = tostring(split(NewProcessName, &apos;\\\\&apos;)[-1])| where ProcessName in~ (includeProc)| where (CommandLine has_any (action) and CommandLine has_any (service1)) or (CommandLine has_any (params1) and CommandLine has &apos;Set-MpPreference&apos; and CommandLine has &apos;$true&apos;)or (CommandLine has_any (params2) and CommandLine has &quot;/IM&quot;) or (CommandLine has_any (regparams5) and CommandLine has &apos;Start&apos; and CommandLine has_any (regparams6))or (CommandLine has_any (regparams1) and CommandLine has_any (regparams2) and CommandLine has_any (regparams7)) or (CommandLine has &quot;start&quot; and CommandLine has &quot;config&quot; and CommandLine has_any (regparams3) and CommandLine has_any (regparams4))| project TimeGenerated, Computer, Account, AccountDomain, ProcessName, ProcessNameFullPath = NewProcessName, EventID, Activity, CommandLine, EventSourceName, Type),(Event| where TimeGenerated &amp;gt;= ago(timeframe)| where Source =~ &quot;Microsoft-Windows-SENSE&quot;| where EventID == 87 and ParameterXml in (&quot;&amp;lt;Param&amp;gt;sgrmbroker&amp;lt;/Param&amp;gt;&quot;, &quot;&amp;lt;Param&amp;gt;WinDefend&amp;lt;/Param&amp;gt;&quot;)| project TimeGenerated, Computer, Account = UserName, EventID, Activity = RenderedDescription, EventSourceName = Source, Type),(DeviceProcessEvents| where TimeGenerated &amp;gt;= ago(timeframe)| where InitiatingProcessFileName in~ (includeProc)| where (InitiatingProcessCommandLine has_any(action) and InitiatingProcessCommandLine has_any (service2) and InitiatingProcessParentFileName != &apos;cscript.exe&apos;)or (InitiatingProcessCommandLine has_any (params1) and InitiatingProcessCommandLine has &apos;Set-MpPreference&apos; and InitiatingProcessCommandLine has &apos;$true&apos;) or (InitiatingProcessCommandLine has_any (params2) and InitiatingProcessCommandLine has &quot;/IM&quot;) or ( InitiatingProcessCommandLine has_any (regparams5) and InitiatingProcessCommandLine has &apos;Start&apos; and InitiatingProcessCommandLine has_any (regparams6))or (InitiatingProcessCommandLine has_any (regparams1) and InitiatingProcessCommandLine has_any (regparams2) and InitiatingProcessCommandLine has_any (regparams7)) or (InitiatingProcessCommandLine has_any(&quot;start&quot;) and InitiatingProcessCommandLine has &quot;config&quot; and InitiatingProcessCommandLine has_any (regparams3) and InitiatingProcessCommandLine has_any (regparams4))| extend Account = iff(isnotempty(InitiatingProcessAccountUpn), InitiatingProcessAccountUpn, InitiatingProcessAccountName), Computer = DeviceName| project TimeGenerated, Computer, Account, AccountDomain, ProcessName = InitiatingProcessFileName, ProcessNameFullPath = FolderPath, Activity = ActionType, CommandLine = InitiatingProcessCommandLine, Type, InitiatingProcessParentFileName))| extend timestamp = TimeGenerated, AccountCustomEntity = Account, HostCustomEntity = Computer\nMicrosoft M365 Defender + Azure Sentinel detection correlation\nIn&amp;nbsp;addition&amp;nbsp;we have created a query in Azure Sentinel&amp;nbsp;-&amp;nbsp;Solorigate Defender Detections -&amp;nbsp;to collate the range of Defender detections that are now deployed. This query can be used to get an overview of such alerts and the hosts they relate to.&amp;nbsp;\nSpoiler (Highlight to read)DeviceInfo| extend DeviceName = tolower(DeviceName)| join (SecurityAlert| where ProviderName =~ &quot;MDATP&quot;| extend ThreatName = tostring(parse_json(ExtendedProperties).ThreatName)| where ThreatName has &quot;Solarigate&quot;| extend HostCustomEntity = tolower(CompromisedEntity)| take 10) on $left.DeviceName == $right.HostCustomEntity| project TimeGenerated, DisplayName, ThreatName, CompromisedEntity, PublicIP, MachineGroup, AlertSeverity, Description, LoggedOnUsers, DeviceId, TenantId| extend timestamp = TimeGenerated, IPCustomEntity = PublicIPDeviceInfo| extend DeviceName = tolower(DeviceName)| join (SecurityAlert| where ProviderName =~ &quot;MDATP&quot;| extend ThreatName = tostring(parse_json(ExtendedProperties).ThreatName)| where ThreatName has &quot;Solarigate&quot;| extend HostCustomEntity = tolower(CompromisedEntity)| take 10) on $left.DeviceName == $right.HostCustomEntity| project TimeGenerated, DisplayName, ThreatName, CompromisedEntity, PublicIP, MachineGroup, AlertSeverity, Description, LoggedOnUsers, DeviceId, TenantId| extend timestamp = TimeGenerated, IPCustomEntity = PublicIP\n&amp;nbsp;\nConclusion\nAdditionally, as a cloud native SIEM Azure Sentinel can not only collect raw data from various disparate logs but it also gets alerts from various security products. For example, M365 Defender has a range of alerts for various attack components like SolarWinds malicious binaries, network traffic to the compromised domains, DNS queries for known patterns associated with SolarWinds compromise that can flow into Sentinel. Combining these alerts with other raw logs and additional data sources provides the security team with additional insights as well as a complete picture of nature and the scope of attack.\n&amp;nbsp;\nAppendix\nMany of these queries have been incorporated into the related hunting workbook.\nList of all Azure Sentinel Queries from each section\nUpdated 01/15/2021\nSpoiler (Highlight to read)\n\n\n\nGaining a foothold\n&amp;nbsp;\n\n\nSolarWinds Inventory check query\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/SolarWindsInventory.yaml\n\n\nSolorigate Name Pipe\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/SolorigateNamedPipe.yaml&amp;nbsp;\n\n\nPrivilege Escalation\n&amp;nbsp;\n\n\nHosts with new logons\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/HostsWithNewLogons.yaml\n\n\nNew user created and added to the built-in administrators group\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserCreatedAddedToBuiltinAdmins_1d.yaml\n\n\nUser account added to built in domain local or global group\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserAccountAddedToPrivlegeGroup_1h.yaml\n\n\nTracking Privileged Account Rare Activity\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/TrackingPrivAccounts.yaml\n\n\nADFS Key Extraction\n&amp;nbsp;\n\n\nADFS DKM Master Key Export\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/MultipleDataSources/ADFS-DKM-MasterKey-Export.yaml\n\n\nADFS Key Export (Sysmon)\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/ADFSKeyExportSysmon.yaml\n\n\nEntropy for Processes for a given Host\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/ProcessEntropy.yaml\n\n\nRare processes run by Service accounts\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/RareProcbyServiceAccount.yaml\n\n\nUncommon processes - bottom 5%\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/uncommon_processes.yaml\n\n\nAzure Active Directory\n&amp;nbsp;\n\n\nModified domain federation trust settings\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/ADFSDomainTrustMods.yaml\n\n\nNew access credential added to Application or Service Principal\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/NewAppOrServicePrincipalCredential.yaml\n\n\nFirst access credential added to Application or Service Principal where no credential was present\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/FirstAppOrServicePrincipalCredential.yaml\n\n\nMail.Read Permissions Granted to Application\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/MailPermissionsAddedToApplication.yaml\n\n\nSuspicious application consent similar to O365 Attack Toolkit\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/MaliciousOAuthApp_O365AttackToolkit.yaml\n\n\nSuspicious application consent for offline access\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/SuspiciousOAuthApp_OfflineAccess.yaml\n\n\nRecon and Remote Execution\n&amp;nbsp;\n\n\nSuspicious enumeration using Adfind tool\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/Suspicious_enumeration_using_adfind.yaml\n\n\nMultiple explicit credential usage - 4648 events\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/MultipleExplicitCredentialUsage4648Events.yaml\n\n\nData Access\n&amp;nbsp;\n\n\nAzure Active Directory PowerShell accessing non-AAD resources\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SigninLogs/AzureAADPowerShellAnomaly.yaml\n\n\nSignins From VPS Providers\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SigninLogs/Signins-From-VPS-Providers.yaml\n\n\nData Exfiltration\n&amp;nbsp;\n\n\nAnomalous access to other user&apos;s mailboxes\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/OfficeActivity/AnomolousUserAccessingOtherUsersMailbox.yaml\n\n\nExchange workflow MailItemsAccessed operation anomaly\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/OfficeActivity/MailItemsAccessedTimeSeries.yaml\n\n\nSuspect Mailbox Export on IIS/OWA\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/W3CIISLog/SuspectedMailBoxExportHostonOWA.yaml\n\n\nHost Exporting Mailbox and Removing Export\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/HostExportingMailboxAndRemovingExport.yaml\n\n\nNon-owner mailbox login activity\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/OfficeActivity/nonowner_MailboxLogin.yaml\n\n\nDomain Hunting\n&amp;nbsp;\n\n\nSolorigate Network Beacon\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/MultipleDataSources/Solorigate-Network-Beacon.yaml\n\n\nSolorigate DNS Pattern\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/DnsEvents/Solorigate-DNS-Pattern.yaml\n\n\nSolorigate Encoded Domain in URL\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/DnsEvents/Solorigate-Encoded-Domain-URL.yaml\n\n\nSecurity Service Tampering\n&amp;nbsp;\n\n\nPotential Microsoft security services tampering\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/PotentialMicrosoftSecurityServicesTampering.yaml&amp;nbsp;\n\n\nM365+Sentinel\n&amp;nbsp;\n\n\nSolorigate Defender Detections\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityAlert/Solorigate-Defender-Detections.yaml\n\n\n\n\n\n\n\nGaining a foothold\n&amp;nbsp;\n\n\nSolarWinds Inventory check query\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/SolarWindsInventory.yaml\n\n\nSolorigate Name Pipe\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/SolorigateNamedPipe.yaml&amp;nbsp;\n\n\nPrivilege Escalation\n&amp;nbsp;\n\n\nHosts with new logons\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/HostsWithNewLogons.yaml\n\n\nNew user created and added to the built-in administrators group\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserCreatedAddedToBuiltinAdmins_1d.yaml\n\n\nUser account added to built in domain local or global group\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserAccountAddedToPrivlegeGroup_1h.yaml\n\n\nTracking Privileged Account Rare Activity\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/TrackingPrivAccounts.yaml\n\n\nADFS Key Extraction\n&amp;nbsp;\n\n\nADFS DKM Master Key Export\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/MultipleDataSources/ADFS-DKM-MasterKey-Export.yaml\n\n\nADFS Key Export (Sysmon)\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/ADFSKeyExportSysmon.yaml\n\n\nEntropy for Processes for a given Host\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/ProcessEntropy.yaml\n\n\nRare processes run by Service accounts\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/RareProcbyServiceAccount.yaml\n\n\nUncommon processes - bottom 5%\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/uncommon_processes.yaml\n\n\nAzure Active Directory\n&amp;nbsp;\n\n\nModified domain federation trust settings\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/ADFSDomainTrustMods.yaml\n\n\nNew access credential added to Application or Service Principal\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/NewAppOrServicePrincipalCredential.yaml\n\n\nFirst access credential added to Application or Service Principal where no credential was present\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/FirstAppOrServicePrincipalCredential.yaml\n\n\nMail.Read Permissions Granted to Application\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/MailPermissionsAddedToApplication.yaml\n\n\nSuspicious application consent similar to O365 Attack Toolkit\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/MaliciousOAuthApp_O365AttackToolkit.yaml\n\n\nSuspicious application consent for offline access\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/SuspiciousOAuthApp_OfflineAccess.yaml\n\n\nRecon and Remote Execution\n&amp;nbsp;\n\n\nSuspicious enumeration using Adfind tool\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/Suspicious_enumeration_using_adfind.yaml\n\n\nMultiple explicit credential usage - 4648 events\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/MultipleExplicitCredentialUsage4648Events.yaml\n\n\nData Access\n&amp;nbsp;\n\n\nAzure Active Directory PowerShell accessing non-AAD resources\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SigninLogs/AzureAADPowerShellAnomaly.yaml\n\n\nSignins From VPS Providers\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SigninLogs/Signins-From-VPS-Providers.yaml\n\n\nData Exfiltration\n&amp;nbsp;\n\n\nAnomalous access to other user&apos;s mailboxes\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/OfficeActivity/AnomolousUserAccessingOtherUsersMailbox.yaml\n\n\nExchange workflow MailItemsAccessed operation anomaly\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/OfficeActivity/MailItemsAccessedTimeSeries.yaml\n\n\nSuspect Mailbox Export on IIS/OWA\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/W3CIISLog/SuspectedMailBoxExportHostonOWA.yaml\n\n\nHost Exporting Mailbox and Removing Export\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/HostExportingMailboxAndRemovingExport.yaml\n\n\nNon-owner mailbox login activity\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/OfficeActivity/nonowner_MailboxLogin.yaml\n\n\nDomain Hunting\n&amp;nbsp;\n\n\nSolorigate Network Beacon\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/MultipleDataSources/Solorigate-Network-Beacon.yaml\n\n\nSolorigate DNS Pattern\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/DnsEvents/Solorigate-DNS-Pattern.yaml\n\n\nSolorigate Encoded Domain in URL\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/DnsEvents/Solorigate-Encoded-Domain-URL.yaml\n\n\nSecurity Service Tampering\n&amp;nbsp;\n\n\nPotential Microsoft security services tampering\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/PotentialMicrosoftSecurityServicesTampering.yaml&amp;nbsp;\n\n\nM365+Sentinel\n&amp;nbsp;\n\n\nSolorigate Defender Detections\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityAlert/Solorigate-Defender-Detections.yaml\n\n\n\n\nReferences\nRecent Nation-State Cyber Attacks&amp;nbsp; \nBehavior:Win32/Solorigate.C!dha threat description - Microsoft Security Intelligence\nCustomer guidance on recent nation-state cyberattacks&amp;nbsp;\nFireEye Advisory: Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims With SUNBURST Backdoor\nFireEye GitHub page: Sunburst Countermeasures&amp;nbsp;\nDHS Directive\nSolarWinds Security Advisory\nFalconFriday – Fireeye Red Team Tool Countermeasures KQL Queries &amp;nbsp;\nMicrosoft-365-Defender-Hunting-Queries: Sample queries for Advanced hunting in Microsoft 365 Defender (github.com)\nAzure Sentinel SolarWinds Post Compromise Hunting Workbook\nAzure Sentinel SolarWinds Post Compromise Notebook&amp;nbsp;\nUpdated 12/18/2020\nNew Threat analytics report shares the latest intelligence on recent nation-state cyber attacks - Microsoft Tech Community\nAnalyzing Solorigate, the compromised DLL file that started a sophisticated cyberattack, and how Microsoft Defender helps protect customers - Microsoft Security&amp;nbsp;\nUpdated 12/28/2020\nUsing Microsoft 365 Defender to protect against Solorigate - Microsoft Security\n&amp;nbsp;\n&amp;nbsp;\n&amp;nbsp;\n&amp;nbsp;\n&amp;nbsp;\n&amp;nbsp;","mainEntityOfPage":{"@type":"WebPage","@id":"https://techcommunity.microsoft.com/blog/microsoftsentinelblog/solarwinds-post-compromise-hunting-with-azure-sentinel/1995095"},"headline":"SolarWinds Post-Compromise Hunting with Azure Sentinel","image":["https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTE2OGlFQjcxOEM5Njc1QzQ5Q0Q3?revision=57"],"dateModified":"11/3/2021, 1:30:13 AM","author":{"@type":"Person","name":"shainw","url":"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/dS0yNTI3NTItMTU0NzA4aTBCQjIxNjFDMzc2MDE0OUE"},"publisher":{"@type":"Organization","name":"TECHCOMMUNITY.MICROSOFT.COM"}}</script><noscript id="__next_css__DO_NOT_USE__"></noscript><script id="prism-bootstrap" data-nscript="beforeInteractive" crossorigin="anonymous">window.Prism = window.Prism || {};Prism.manual = true;</script><link rel="preload" href="/_next/static/css/c86f63fb5be9eab5.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/c86f63fb5be9eab5.css" crossorigin="anonymous" data-n-g=""/><link rel="preload" href="/_next/static/css/a7ae38d56ad86150.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/a7ae38d56ad86150.css" crossorigin="anonymous" data-n-p=""/><link rel="preload" href="/_next/static/css/7e9b6cf1e4096094.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/7e9b6cf1e4096094.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/27354a62d6df58b7.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/27354a62d6df58b7.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/eaa9446ca6152861.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/eaa9446ca6152861.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/f42ee462e312d76a.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/f42ee462e312d76a.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/f31f40c02bff3364.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/f31f40c02bff3364.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/96e83c4412cdcd6d.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/96e83c4412cdcd6d.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/b90ed3dcf17a88eb.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/b90ed3dcf17a88eb.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/a87e85723550ff6c.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/a87e85723550ff6c.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/31114999931d0e03.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/31114999931d0e03.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/d091b00a3151c602.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/d091b00a3151c602.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/2cb7930a61479b70.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/2cb7930a61479b70.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/1b95805c732eb48a.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/1b95805c732eb48a.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/82149aedc83e7925.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/82149aedc83e7925.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/d9008e6eff4bb31c.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/d9008e6eff4bb31c.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/01bbadcc1be827c5.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/01bbadcc1be827c5.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/0c51bccf3b306949.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/0c51bccf3b306949.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/34eb9a13214a5190.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/34eb9a13214a5190.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/66e75bf06f523a07.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/66e75bf06f523a07.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/d251c99cf38a4187.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/d251c99cf38a4187.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/c94ef98af7effe01.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/c94ef98af7effe01.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/8cc8a18b0063d113.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/8cc8a18b0063d113.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/2fa8acea5ddb7a0d.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/2fa8acea5ddb7a0d.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/89f471ab95170462.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/89f471ab95170462.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/3fef582ee28ef9df.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/3fef582ee28ef9df.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/b49d669020fdad6b.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/b49d669020fdad6b.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/acce1e159f006524.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/acce1e159f006524.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/eaa1e83705b8a1b9.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/eaa1e83705b8a1b9.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/d9e0f6ee4c8b30bc.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/d9e0f6ee4c8b30bc.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/2d01909ce48d3a0a.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/2d01909ce48d3a0a.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/8e9fe845357bfc67.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/8e9fe845357bfc67.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/2bd5257384e41f56.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/2bd5257384e41f56.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/cd6bfd9c6ece1bf7.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/cd6bfd9c6ece1bf7.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/e50f24e20f7bc6ce.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/e50f24e20f7bc6ce.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/b446b4cb1480f1f5.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/b446b4cb1480f1f5.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/b98b1cb4814170f3.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/b98b1cb4814170f3.css" crossorigin="anonymous"/><link rel="preload" href="/_next/static/css/6b5f713b892f81ee.css" as="style" crossorigin="anonymous"/><link rel="stylesheet" href="/_next/static/css/6b5f713b892f81ee.css" crossorigin="anonymous"/><noscript data-n-css=""></noscript><script defer="" crossorigin="anonymous" nomodule="" src="/_next/static/chunks/polyfills-42372ed130431b0a.js"></script><script id="searchHeader" src="https://techcommunity.microsoft.com/t5/s/gxcuf89792/pagescripts/1738986038000/searchHeader.js" defer="" data-nscript="beforeInteractive" crossorigin="anonymous"></script><script id="cookie_consent" src="https://techcommunity.microsoft.com/t5/s/gxcuf89792/pagescripts/1730819800000/cookie_consent.js?page.id=BlogMessagePage&amp;entity.id=board%3Amicrosoftsentinelblog&amp;entity.id=message%3A1995095" defer="" data-nscript="beforeInteractive" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/80542-e554b662ed172792.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/23842-2eb2dbebd7118696.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/37330-02cf9322c6bbb815.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/99844-efb193a71a2da8c1.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/76820-71d5e2c8d61d1364.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/56930-9a5b9a69b00641f5.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/97524-ef7365367540a2d9.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/8555-b206c375cc3ea622.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/71213-d9eaf81b02551454.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/97333-6cfb0c1676fad44e.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/34062-981f866452e2a601.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/91713.8f40a40d6e77a8c9.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/3666.86e04d90b5a51466.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/43847.684594de57cbb398.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/83256.1122b9d3909a44f4.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/70676.d9b00570a2b9ed6b.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/86460.b8406a203ff51240.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/84509.9c922909edff5ca2.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/40423.c6472dc963a4d303.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/4398-f250f2c116aed728.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/11330.81ceecacefe71cd1.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/51379.ebe807b3e9d5cfe4.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/99473.762620d454da0ba8.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/97924.0668f5e4245302a7.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/15089.9d0085e66d943355.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/23132.95eda00636faff19.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/27333.925e9e31300ba7f5.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/29586.258ddb5445797822.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/76759.3bc491d3cc21a75b.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/59399.826c18f011a9f080.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/7737.0717f8c4a4fc374f.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/32999.cc03e74403df57be.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/6156.6fff69b68c862210.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/97323.8461812db8709f37.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/62365.51cf6ee1300b0ec7.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/62252.37497c9e606f0ec7.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/80558.91d0591d2ebcc679.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/81490.2f928953ef47a80e.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/50694.47fc83bf8f682280.js" crossorigin="anonymous"></script><script defer="" src="/_next/static/chunks/69678.de68cf0b4b2d52fe.js" crossorigin="anonymous"></script><script src="/_next/static/chunks/webpack-e4d82d4710231b58.js" defer="" crossorigin="anonymous"></script><script src="/_next/static/chunks/main-a3ca57496c2a1cbd.js" defer="" crossorigin="anonymous"></script><script src="/_next/static/chunks/pages/_app-8bbdb8409339d61e.js" defer="" crossorigin="anonymous"></script><script src="/_next/static/chunks/56954-7a491023ec68da92.js" defer="" crossorigin="anonymous"></script><script src="/_next/static/chunks/37553-edae5290810af0ed.js" defer="" crossorigin="anonymous"></script><script src="/_next/static/chunks/67527-9e6cd1c21181203b.js" defer="" crossorigin="anonymous"></script><script src="/_next/static/chunks/85258-1868fffc45c370ab.js" defer="" crossorigin="anonymous"></script><script src="/_next/static/chunks/42349-9c2217cc9242c7b5.js" defer="" crossorigin="anonymous"></script><script src="/_next/static/chunks/51325-af62f67ba93b2d35.js" defer="" crossorigin="anonymous"></script><script src="/_next/static/chunks/68922-014c305f6c83ab14.js" defer="" crossorigin="anonymous"></script><script src="/_next/static/chunks/76822-722afe0f1e5b0005.js" defer="" crossorigin="anonymous"></script><script src="/_next/static/chunks/87783-d998f9a06d3d2e76.js" defer="" crossorigin="anonymous"></script><script src="/_next/static/chunks/44811-96edfb6bddec5c6e.js" defer="" crossorigin="anonymous"></script><script src="/_next/static/chunks/34785-6fe74836e6751d50.js" defer="" crossorigin="anonymous"></script><script src="/_next/static/chunks/pages/blogs/BlogMessagePage/BlogMessagePage-a51bd8b7ef280586.js" defer="" crossorigin="anonymous"></script><script src="/_next/static/cQon2PUqbQU8la6pXifn2/_buildManifest.js" defer="" crossorigin="anonymous"></script><script src="/_next/static/cQon2PUqbQU8la6pXifn2/_ssgManifest.js" defer="" crossorigin="anonymous"></script></head><body><div id="__next"><link rel="stylesheet" type="text/css" href="/themes/font/main/customTheme1-1749167508102.css"/><link rel="stylesheet" type="text/css" href="/themes/style/main/customTheme1-1749167508102.css"/><header data-testid="QuiltWrapperSection"><div aria-hidden="true"></div><nav class="Navbar_lia-nav__x3UtG Navbar_lia-nav-fixed__mp9zl" style="--lia-d-nav-bg-combined:hsla(0, 0%, 100%, 0.8)"><div data-testid="ThemedContainer" class="Navbar_lia-container__PneN7 ThemedContainer_lia-fixed-container__MPYgN ThemedContainer_lia-fixed-gutters__1PeHV styles_container__6wTQq"><div class="NavbarHamburgerDropdown_lia-hamburger__wMSGy styles_dropdown__gtmlA"><button data-testid="Button" aria-haspopup="true" aria-expanded="false" aria-label="Side Menu" id=":R1r5mqlfmm:" type="button" class="styles_lia-g-unstyled-btn__Sglpm NavbarHamburgerDropdown_lia-hamburger-toggle__A99vU styles_dropdown-toggle__lyIUd styles_btn__1HFm0"><span class="HamburgerIcon_lia-hamburger__Vl1W7"><span class="HamburgerIcon_lia-burger-part__gpOaQ HamburgerIcon_lia-lettuce__CHkD6 NavbarHamburgerDropdown_lia-hamburger-icon__CaJzZ"></span><span class="HamburgerIcon_lia-burger-part__gpOaQ HamburgerIcon_lia-tomato__gEm9r NavbarHamburgerDropdown_lia-hamburger-icon__CaJzZ"></span><span class="HamburgerIcon_lia-burger-part__gpOaQ HamburgerIcon_lia-cheese__4316P NavbarHamburgerDropdown_lia-hamburger-icon__CaJzZ"></span></span></button></div><div class="Navbar_lia-brand-wrap__kMjMv"><a class="Navbar_lia-brand-logo___j4kl" href="/"><img src="https://techcommunity.microsoft.com/t5/s/gxcuf89792/m_assets/themes/customTheme1/favicon-1730836271365.png?time=1730836274203" alt="Brand Logo" class="BrandLogo_lia-logo__9HhbP"/></a><a href="#main-content" class="Navbar_lia-skip-content__x8IQ0">Skip to content</a></div><section class="NavbarTextLinks_lia-main-links-container__QOLn4"><div class="NavbarTextLinks_lia-main-links__XTYIO"><a tabindex="0" href="/" class="styles_lia-g-navbar-link___5V8S" data-testid="NavbarLink.Tech_Community" target="_self"><span class="styles_lia-g-navbar-link-text__hNCPc">Tech Community</span></a><a tabindex="0" href="/Directory" class="styles_lia-g-navbar-link___5V8S" data-testid="NavbarLink.Community_Hubs" target="_self"><span class="styles_lia-g-navbar-link-text__hNCPc">Community Hubs</span></a><div data-menu-open="false" class="NavbarDropdown_lia-dropdown__UxoG7 styles_dropdown__gtmlA"><div aria-haspopup="true" aria-label="Press the down arrow to open the menu" data-testid="NavbarDropdown.Toggle" tabindex="-1" id=":R3br5mqlfmm:"><a tabindex="0" href="/" class="styles_lia-g-navbar-link___5V8S NavbarDropdownToggle_lia-link-extender__HG9yN NavbarAnchor_lia-disabled__IqfY3" data-testid="NavbarLink.Products" target="_blank"><span class="styles_lia-g-navbar-link-text__hNCPc">Products<svg class="styles_lia-g-navbar-dropdown-icon__MBB_c Icon_lia-icon__on1Gb" data-testid="Icon" style="--lia-local-icon-color:var(--lia-bs-body-color);--lia-local-icon-color-h:var(--lia-bs-body-color-h);--lia-local-icon-color-s:var(--lia-bs-body-color-s);--lia-local-icon-color-l:var(--lia-bs-body-color-l)" aria-hidden="true"><use href="/static/graphics/processed/33e68b0d/chevron-down.svg#chevron-down"></use></svg></span></a></div></div><div data-menu-open="false" class="NavbarDropdown_lia-dropdown__UxoG7 styles_dropdown__gtmlA"><div aria-haspopup="true" aria-label="Press the down arrow to open the menu" data-testid="NavbarDropdown.Toggle" tabindex="-1" id=":R4br5mqlfmm:"><a tabindex="0" href="/" class="styles_lia-g-navbar-link___5V8S NavbarDropdownToggle_lia-link-extender__HG9yN NavbarAnchor_lia-disabled__IqfY3" data-testid="NavbarLink.Topics" target="_self"><span class="styles_lia-g-navbar-link-text__hNCPc">Topics<svg class="styles_lia-g-navbar-dropdown-icon__MBB_c Icon_lia-icon__on1Gb" data-testid="Icon" style="--lia-local-icon-color:var(--lia-bs-body-color);--lia-local-icon-color-h:var(--lia-bs-body-color-h);--lia-local-icon-color-s:var(--lia-bs-body-color-s);--lia-local-icon-color-l:var(--lia-bs-body-color-l)" aria-hidden="true"><use href="/static/graphics/processed/33e68b0d/chevron-down.svg#chevron-down"></use></svg></span></a></div></div><a tabindex="0" href="/Blogs" class="styles_lia-g-navbar-link___5V8S" data-testid="NavbarLink.Blogs" target="_self"><span class="styles_lia-g-navbar-link-text__hNCPc">Blogs</span></a><a tabindex="0" href="/Events" class="styles_lia-g-navbar-link___5V8S" data-testid="NavbarLink.Events" target="_self"><span class="styles_lia-g-navbar-link-text__hNCPc">Events</span></a><div data-menu-open="false" class="NavbarDropdown_lia-dropdown__UxoG7 styles_dropdown__gtmlA"><div aria-haspopup="true" aria-label="Press the down arrow to open the menu" data-testid="NavbarDropdown.Toggle" tabindex="-1" id=":R7br5mqlfmm:"><a tabindex="0" href="/category/MicrosoftLearn" class="styles_lia-g-navbar-link___5V8S NavbarDropdownToggle_lia-link-extender__HG9yN NavbarAnchor_lia-disabled__IqfY3" data-testid="NavbarLink.Microsoft_Learn" target="_self"><span class="styles_lia-g-navbar-link-text__hNCPc">Microsoft Learn<svg class="styles_lia-g-navbar-dropdown-icon__MBB_c Icon_lia-icon__on1Gb" data-testid="Icon" style="--lia-local-icon-color:var(--lia-bs-body-color);--lia-local-icon-color-h:var(--lia-bs-body-color-h);--lia-local-icon-color-s:var(--lia-bs-body-color-s);--lia-local-icon-color-l:var(--lia-bs-body-color-l)" aria-hidden="true"><use href="/static/graphics/processed/33e68b0d/chevron-down.svg#chevron-down"></use></svg></span></a></div></div><a tabindex="0" href="/category/Community-Info-Center" class="styles_lia-g-navbar-link___5V8S" data-testid="NavbarLink.Lounge" target="_self"><span class="styles_lia-g-navbar-link-text__hNCPc">Lounge</span></a></div><div class="NavbarTextLinks_lia-more__Lo2H5"></div></section><section class="Navbar_lia-section__0E_DT Navbar_lia-controls__i63Rp"><a data-testid="AuthenticationLink.registration" class="Navbar_lia-controller-text-link__1JNsW styles_lia-g-navbar-link___5V8S" href="/t5/s/gxcuf89792/auth/oidcss/sso_login_redirect/provider/default?referer=https%3A%2F%2Ftechcommunity.microsoft.com%2Fblog%2Fmicrosoftsentinelblog%2Fsolarwinds-post-compromise-hunting-with-azure-sentinel%2F1995095">Register</a><a data-testid="AuthenticationLink.login" class="Navbar_lia-controller-text-link__1JNsW styles_lia-g-navbar-link___5V8S" href="/t5/s/gxcuf89792/auth/oidcss/sso_login_redirect/provider/default?referer=https%3A%2F%2Ftechcommunity.microsoft.com%2Fblog%2Fmicrosoftsentinelblog%2Fsolarwinds-post-compromise-hunting-with-azure-sentinel%2F1995095">Sign In</a></section></div></nav><div class="Navbar_lia-nav-spacer__e1b2y" aria-hidden="true"></div><nav aria-label="Breadcrumbs" class="Breadcrumb_lia-nav__ilWY3" style="--lia-local-link-color:var(--lia-bs-gray-700);--lia-local-link-hover-color:var(--lia-bs-primary);--lia-local-bg-color:transparent;--lia-local-border-bottom:1px solid var(--lia-bs-border-color)" data-testid="BreadcrumbWidget"><div data-testid="ThemedContainer" class="styles_d-flex__7__Y_ styles_align-items-center__OKdH0 ThemedContainer_lia-fixed-container__MPYgN ThemedContainer_lia-fixed-gutters__1PeHV styles_container__6wTQq"><ol class="Breadcrumb_lia-crumb-list__Xb5Aw" data-testid="Breadcrumb"><li class="Breadcrumb_lia-crumb-list-item__iXBAq"><a data-testid="nodeLink" target="_self" class="Breadcrumb_lia-crumb-item__CSmrj" aria-label="Place Microsoft Community Hub" href="/">Microsoft Community Hub</a></li><li class="Breadcrumb_lia-crumb-divider__Fy21x" aria-hidden="true"><svg class="Breadcrumb_lia-crumb-icon__ZfovN styles_lia-g-icon-size-12__fO_66 Icon_lia-size-12__l8N3M Icon_lia-icon__on1Gb" data-testid="Icon" style="--lia-local-icon-color:var(--lia-bs-gray-500);--lia-local-icon-color-h:var(--lia-bs-gray-500-h);--lia-local-icon-color-s:var(--lia-bs-gray-500-s);--lia-local-icon-color-l:var(--lia-bs-gray-500-l)" aria-hidden="true"><use href="/static/graphics/processed/33e68b0d/chevron-right.svg#chevron-right"></use></svg></li><li class="Breadcrumb_lia-crumb-list-item__iXBAq"><div class="styles_dropdown__gtmlA"><button data-testid="Button" aria-haspopup="true" aria-expanded="false" aria-label="Additional parent page navigation" type="button" class="styles_lia-g-unstyled-btn__Sglpm Breadcrumb_lia-dropdown-toggle__csMOA styles_dropdown-toggle__lyIUd styles_btn__1HFm0"><svg class="Breadcrumb_lia-ellipsis-icon__ulzm3 styles_lia-g-icon-size-12__fO_66 Icon_lia-size-12__l8N3M Icon_lia-icon__on1Gb" data-testid="Icon" style="--lia-local-icon-color:var(--lia-bs-gray-700);--lia-local-icon-color-h:var(--lia-bs-gray-700-h);--lia-local-icon-color-s:var(--lia-bs-gray-700-s);--lia-local-icon-color-l:var(--lia-bs-gray-700-l)" aria-hidden="true"><use href="/static/graphics/processed/33e68b0d/ellipsis.svg#ellipsis"></use></svg></button><div x-placement="bottom-start" style="position:absolute;top:0;left:0;opacity:0;pointer-events:none" class="styles_dropdown-menu__gMSix"><a data-testid="nodeLink" target="_self" class="styles_dropdown-item__s_Yb9" aria-label="Place Communities" href="/category/communities">Communities</a><a data-testid="nodeLink" target="_self" class="styles_dropdown-item__s_Yb9" aria-label="Place Products" href="/category/products-services">Products</a><a data-testid="nodeLink" target="_self" class="styles_dropdown-item__s_Yb9" aria-label="Place Microsoft Security" href="/category/microsoft-security">Microsoft Security</a></div></div></li><li class="Breadcrumb_lia-crumb-divider__Fy21x" aria-hidden="true"><svg class="Breadcrumb_lia-crumb-icon__ZfovN styles_lia-g-icon-size-12__fO_66 Icon_lia-size-12__l8N3M Icon_lia-icon__on1Gb" data-testid="Icon" style="--lia-local-icon-color:var(--lia-bs-gray-500);--lia-local-icon-color-h:var(--lia-bs-gray-500-h);--lia-local-icon-color-s:var(--lia-bs-gray-500-s);--lia-local-icon-color-l:var(--lia-bs-gray-500-l)" aria-hidden="true"><use href="/static/graphics/processed/33e68b0d/chevron-right.svg#chevron-right"></use></svg></li><li class="Breadcrumb_lia-crumb-list-item__iXBAq"><a data-testid="nodeLink" target="_self" class="Breadcrumb_lia-crumb-item__CSmrj" aria-label="Place Microsoft Sentinel" href="/category/microsoft-sentinel">Microsoft Sentinel</a></li><li class="Breadcrumb_lia-crumb-divider__Fy21x" aria-hidden="true"><svg class="Breadcrumb_lia-crumb-icon__ZfovN styles_lia-g-icon-size-12__fO_66 Icon_lia-size-12__l8N3M Icon_lia-icon__on1Gb" data-testid="Icon" style="--lia-local-icon-color:var(--lia-bs-gray-500);--lia-local-icon-color-h:var(--lia-bs-gray-500-h);--lia-local-icon-color-s:var(--lia-bs-gray-500-s);--lia-local-icon-color-l:var(--lia-bs-gray-500-l)" aria-hidden="true"><use href="/static/graphics/processed/33e68b0d/chevron-right.svg#chevron-right"></use></svg></li><li class="Breadcrumb_lia-crumb-list-item__iXBAq Breadcrumb_lia-crumb-mobile__phoX_" data-testid="Breadcrumb.Mobilecrumb"><a data-testid="nodeLink" target="_self" class="Breadcrumb_lia-crumb-item__CSmrj" aria-label="Place Microsoft Sentinel Blog" href="/category/microsoft-sentinel/blog/microsoftsentinelblog"><svg class="Breadcrumb_lia-crumb-icon-mobile__TE_1C styles_lia-g-icon-size-16__V9Va_ Icon_lia-size-16__D8_m2 Icon_lia-icon__on1Gb" data-testid="Icon" style="--lia-local-icon-color:var(--lia-bs-gray-700);--lia-local-icon-color-h:var(--lia-bs-gray-700-h);--lia-local-icon-color-s:var(--lia-bs-gray-700-s);--lia-local-icon-color-l:var(--lia-bs-gray-700-l)" aria-hidden="true"><use href="/static/graphics/processed/33e68b0d/chevron-left.svg#chevron-left"></use></svg>Microsoft Sentinel Blog</a></li></ol><div class="Breadcrumb_lia-crumb-actions__fTD_Z"></div></div></nav><div class="CustomComponent_lia-wrapper__7IqeO" style="--lia-local-bg-color:transparent"><article class="CustomComponent_lia-article__sQ7z4" data-testid="CustomComponent"><section class="styles_lia-g-message-body__LkV7_"><div class="CustomComponentContent_lia-content-wrap__5OF48" data-testid="HtmlCustomComponentContent"><DIV style="width: 100%; background-color: #0068b8; padding: 10px 0px; text-align: center; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; margin: 0px;"><A style="color: #ffffff; font-size: 16px; text-decoration: none; display: block; line-height: 1.5;" href="https://aka.ms/mtc/el/CopilotControlSystem" target="_blank" rel="noopener noreferrer" aria-label="Join us June 17–18 for a deep dive into Copilot Control System—live expert-led sessions and Q&amp;A on data security, agent lifecycle, adoption, and more! click here to Learn more"> Join us June 17–18 for a deep dive into Copilot Control System—live expert-led sessions and Q&amp;A on data security, agent lifecycle, adoption, and more! <SPAN style="text-decoration: underline; font-weight: 500;">Learn more &gt;</SPAN> </A></DIV></div></section></article></div><div class="CustomComponent_lia-wrapper__7IqeO" style="--lia-local-bg-color:transparent"><article class="CustomComponent_lia-article__sQ7z4" data-testid="CustomComponent"><section></section></article></div></header><main id="main-content"><section class="QuiltSection_lia-section-spacing__WK9AB" data-testid="QuiltSection-blog-article"><div class="QuiltSection_lia-section-attached-first__zZ7U_"></div><div data-testid="ThemedContainer" class="ThemedContainer_lia-fixed-container__MPYgN styles_container__6wTQq"><div class="styles_text-center__Pja03 styles_text-break__Ny06M styles_sr-only__NOnjB styles_lia-g-mb-15__YNrGd" data-testid="QuiltSectionHeader"><h2 class="styles_sr-only__NOnjB" data-testid="QuiltSectionHeader.Title">Blog Post</h2></div><div class="styles_row__sjnST"><div style="--lia-content-item-border:none" class="QuiltSection_lia-column__iNmDj styles_col-lg-12__u20eR"><div class="styles_lia-g-section-widget__aHMgk"><div class="BlogArticleWidget_lia-blog-container__PjCkA"><div class="BlogArticleWidget_lia-message-body-container__APZ8H"><div class="MessageViewStandard_lia-wrap__T7pk7"><article class="MessageViewStandard_lia-article__pnxJk styles_lia-g-message-box__arKXm BlogArticleWidget_lia-article__s_eaY" data-testid="StandardMessageView"><section class="MessageViewStandard_lia-section__rh71K" id="uid1995095"><div class="styles_d-flex__7__Y_ styles_flex-column__Vl0ML"><div class="MessageViewStandard_lia-head-wrapper__KIxBz"><div class="MessageViewStandard_lia-title-section__P1a89"><div class="styles_d-flex__7__Y_"><div class="styles_lia-g-subheading__MYxBV MessageViewStandard_lia-node-title__ptFLq NodeTitle_lia-title-and-icon__wEuTM styles_h5__q_74t" data-testid="NodeTitle">Microsoft Sentinel Blog </div><div class="styles_lia-g-subheading__MYxBV MessageViewStandard_lia-node-title__ptFLq styles_lia-g-ml-25__j3n4m">33 MIN READ</div></div><h1 title="SolarWinds Post-Compromise Hunting with Azure Sentinel" class="styles_text-break__Ny06M MessageViewStandard_lia-cover-image-title__WLVim" data-testid="MessageSubject">SolarWinds Post-Compromise Hunting with Azure Sentinel</h1><div class="MessageViewStandard_lia-header__m8KYT"><div class="MessageViewStandard_lia-header-main__2zLqy"><div class="styles_lia-g-mr-10__IIyjn"><a data-hovercard-trigger="true" data-testid="userLink" class="styles_d-block__btBet" aria-label="View Profile: shainw" aria-describedby="UserHoverCard-252752" target="_self" href="/users/shainw/252752"><span class="UserAvatar_lia-avatar__HFfcv styles_lia-g-icon-size-50__HExtr" data-testid="userAvatar"><img src="https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/dS0yNTI3NTItMTU0NzA4aTBCQjIxNjFDMzc2MDE0OUE?image-dimensions=50x50" alt="shainw&#x27;s avatar" class="UserAvatar_lia-avatar-img__CUPwZ" aria-hidden="false"/></span></a></div><div class="MessageViewStandard_lia-header-text__6GqFy"><div class="styles_d-flex__7__Y_ styles_align-items-center__OKdH0"><span class="styles_lia-g-divider__X68T2"><a data-hovercard-trigger="true" data-testid="userLink" class="MessageViewStandard_lia-author-text__3ExAu styles_font-weight-bold__3_Kc8 styles_small__seeYj styles_d-flex__7__Y_" aria-label="View Profile: shainw" aria-describedby="UserHoverCard-252752" target="_self" href="/users/shainw/252752">shainw</a></span><div class="styles_lia-g-ml-5__SlnKE MessageViewStandard_lia-author-rank__fonU0" data-testid="userRank"><div class="UserRankLabel_lia-rank__CqPss"><img class="UserRankLabel_lia-rank-icon__g_uVM" src="https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/cmstNC05WEo0blc?image-dimensions=100x16&amp;constrain-image=true" alt="Icon for Microsoft rank"/><span style="border-color:#333333;color:#333333" class="UserRankLabel_lia-is-boxed__Ykpfe UserRankLabel_lia-rank-label__epEUI UserRankLabel_lia-is-outline__q_ZVs"><span class="UserRankLabel_text-break__RX8Tt styles_lia-g-clamp__dg3Sg">Microsoft</span></span></div></div></div><span class="MessageViewStandard_lia-author-post-time__OaTrl" data-testid="messageTime"><span title="December 16, 2020 at 7:54 PM" role="none">Dec 16, 2020</span></span></div></div></div></div></div></div><div class="BlogArticleWidget_lia-blog-content__THh3d"><div class="styles_lia-g-message-body__LkV7_ styles_lia-g-message-body-blog__TUnqH styles_clearfix__xFEoC styles_text-body__F7QRV"><P><FONT size="3" color="#993300">MSTIC has released a number of new hunting and detection queries for Azure Sentinel based on additional observations as well as research released by partners and the wider community. In addition, the <A href="https://github.com/Azure/Azure-Sentinel/blob/master/Workbooks/SolarWindsPostCompromiseHunting.json" target="_self" rel="noopener noreferrer">SolarWinds post compromise hunting workbook</A> has been updated to include a number of new sections.&nbsp;&nbsp;</FONT></P>
<P><FONT size="3" color="#993300">Blog sections have been marked with <STRONG>Updated&nbsp;</STRONG>and include the date they were last updated.</FONT></P>
<P>&nbsp;</P>
<P>Microsoft recently blogged about the <A href="https://blogs.microsoft.com/on-the-issues/2020/12/13/customers-protect-nation-state-cyberattacks/" target="_blank" rel="noopener noreferrer">Recent Nation-State Cyber Attacks</A> that has impacted high value targets both across the government and private sector. This attack is also known as <A href="https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=Trojan:MSIL/Solorigate.B!dha" target="_blank" rel="noopener noreferrer">Solorigate</A> or <A href="https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html" target="_blank" rel="noopener nofollow noreferrer">Sunburst</A>. This threat actor is believed to be highly sophisticated and motivated. Relevant security data required for hunting and investigating such a complex attack is produced in multiple locations - cloud, on-premises and across multiple security tools and product logs.&nbsp; Being able to analyze all the data from a single point makes it easier to spot trends and attacks. Azure Sentinel has made it easy to collect data from multiple data sources across different environments both on-prem and cloud with the goal of connecting that data together more easily. This blog post contains guidance and generic approaches to hunt for attacker activity (TTPs) in data that is available by default in Azure Sentinel or can be onboarded to Azure Sentinel.&nbsp;</P>
<P>&nbsp;</P>
<P>Associated content details:</P>
<TABLE border="1" width="100.03884623514038%">
<TBODY>
<TR>
<TD width="100%" height="95px">
<H6 id="community-1995095-toc-hId-223156908"><FONT size="1 2 3 4 5 6 7" color="#993300">Updated 12/18/2020</FONT></H6>
Currently known in depth&nbsp;<STRONG>attack details</STRONG> have been provided by the M365 and MSTIC teams via the&nbsp;<A href="https://aka.ms/solorigateattack" target="_self" rel="noopener noreferrer">deep dive analysis blog</A><STRONG>.</STRONG></TD>
</TR>
<TR>
<TD width="100%" height="84px">
<P><FONT size="1 2 3 4 5 6 7" color="#993300">Updated 12/21/2020</FONT></P>
<P>Current <STRONG>advice for incident responders</STRONG>&nbsp;<A href="https://aka.ms/dartrecoveryguide" target="_self" rel="noopener noreferrer">on recovery from systemic identity compromises</A> has been provided by <A href="https://www.microsoft.com/security/blog/2019/03/25/dart-the-microsoft-cybersecurity-team-we-hope-you-never-meet/" target="_self" rel="noopener noreferrer">Microsoft Detection and Response Team</A>.</P>
</TD>
</TR>
<TR>
<TD width="100%" height="111px">
<P><FONT size="1 2 3 4 5 6 7" color="#993300">Updated 12/22/2020</FONT></P>
<P><STRONG>Azure AD Identity admins</STRONG> who want to gain further visibility and understanding related to the identity implications of this attack on their environment can use the newly released <A href="https://techcommunity.microsoft.com/t5/azure-active-directory-identity/azure-ad-workbook-to-help-you-assess-solorigate-risk/ba-p/2010718" target="_self">Sensitive Operations Report workbook</A>.</P>
</TD>
</TR>
<TR>
<TD height="57px">
<P><FONT size="1 2 3 4 5 6 7" color="#993300">Updated 12/26/2020</FONT></P>
<STRONG>For Identity Vendors and their customers</STRONG> to understand the Solorigate identity related attack components the Identity team at Microsoft has produced <A href="https://techcommunity.microsoft.com/t5/azure-active-directory-identity/understanding-quot-solorigate-quot-s-identity-iocs-for-identity/ba-p/2007610" target="_self">a blog has been created</A> to walk thru this information.</TD>
</TR>
<TR>
<TD>
<P><FONT size="1 2 3 4 5 6 7" color="#993300">Updated 12/28/2020</FONT></P>
<FONT size="3" color="#000000"><STRONG>Users of Microsoft 365 Defender</STRONG> can also hunt and detect on similar items in this blog, but tailored towards investigation using <A href="https://aka.ms/detect_solorigate" target="_self" rel="noopener noreferrer">Microsoft 365 Defender to protect against Solorigate</A>.</FONT></TD>
</TR>
</TBODY>
</TABLE>
<P>&nbsp;</P>
<P>The goal of this article is post-compromise investigation strategies and is focused on TTPs and not focused on specific IOCs.&nbsp; Azure Sentinel customers are encouraged to review advisories and IOC’s shared by Microsoft MSRC and security partners to search on specific IOC’s in their environment using Azure Sentinel.&nbsp; Links to these IOC’s are listed in the reference section at the end.</P>
<P>&nbsp;</P>
<P>To make it easier for security teams to visualize and monitor their environments for this attack the MSTIC team has shared a <A href="https://github.com/Azure/Azure-Sentinel/tree/master/Workbooks/SolarWindsPostCompromiseHunting.json" target="_blank" rel="noopener noreferrer">SolarWinds Post Compromise</A> hunting workbook via Azure Sentinel and Azure Sentinel GitHub. There are many things in this workbook that threat hunters would find useful and the workbook is complimentary to the hunting methods shared below. Importantly, if you have recently rotated ADFS key material this workbook can be useful in identifying attacker logon activity if they logon with old key material. Security teams should leverage this hunting workbook as part of their workflow in investigating this attack.</P>
<P>&nbsp;</P>
<P>Thanks to the <STRONG>MSTIC</STRONG> and <STRONG>M365</STRONG> teams for collaborating to deliver this content in a timely manner. <STRONG>Special thanks to</STRONG>&nbsp;<a href="javascript:void(0)" data-lia-user-mentions="" data-lia-user-uid="293861" data-lia-user-login="aprakash13" class="lia-mention lia-mention-user" rel="nofollow noopener noreferrer">aprakash13</a>,&nbsp;<a href="javascript:void(0)" data-lia-user-mentions="" data-lia-user-uid="313528" data-lia-user-login="Ashwin_Patil" class="lia-mention lia-mention-user" rel="nofollow noopener noreferrer">Ashwin_Patil</a>,&nbsp;<a href="javascript:void(0)" data-lia-user-mentions="" data-lia-user-uid="113210" data-lia-user-login="Pete Bryan" class="lia-mention lia-mention-user" rel="nofollow noopener noreferrer">Pete Bryan</a>,&nbsp;<a href="javascript:void(0)" data-lia-user-mentions="" data-lia-user-uid="640594" data-lia-user-login="ItsReallyNick" class="lia-mention lia-mention-user" rel="nofollow noopener noreferrer">ItsReallyNick</a>,&nbsp;Chris Glyer,&nbsp;<a href="javascript:void(0)" data-lia-user-mentions="" data-lia-user-uid="591947" data-lia-user-login="Cyb3rWard0g" class="lia-mention lia-mention-user" rel="nofollow noopener noreferrer">Cyb3rWard0g</a>,&nbsp;<a href="javascript:void(0)" data-lia-user-mentions="" data-lia-user-uid="178222" data-lia-user-login="Tim Burrell (MSTIC)" class="lia-mention lia-mention-user" rel="nofollow noopener noreferrer">Tim Burrell (MSTIC)</a>,&nbsp;Rob Mead,&nbsp;<a href="javascript:void(0)" data-lia-user-mentions="" data-lia-user-uid="686380" data-lia-user-login="TomMcElroy" class="lia-mention lia-mention-user" rel="nofollow noopener noreferrer">TomMcElroy</a>,&nbsp;<a href="javascript:void(0)" data-lia-user-mentions="" data-lia-user-uid="75694" data-lia-user-login="Elia Florio" class="lia-mention lia-mention-user" rel="nofollow noopener noreferrer">Elia Florio</a>,&nbsp;<a href="javascript:void(0)" data-lia-user-mentions="" data-lia-user-uid="92617" data-lia-user-login="Corina Feuerstein" class="lia-mention lia-mention-user" rel="nofollow noopener noreferrer">Corina Feuerstein</a>,&nbsp;Ramin Nafisi, Michael Matonis.&nbsp;</P>
<P>&nbsp;</P>
<P>Please note that since Azure Sentinel and the M365 Advanced Hunting portal share the same query language and share similar data types, all of the referenced queries can be used directly or slightly modified to work in both.</P>
<P>&nbsp;</P>
<H2 id="community-1995095-toc-hId-1308540585">Gaining a foothold</H2>
<P>As shared in Microsoft’s technical blog – <A href="https://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/" target="_blank" rel="noopener noreferrer">Customer Guidance on Recent Nation-state Cyber Attacks</A> - attackers might have compromised the internal build systems or the update distribution systems of SolarWinds Orion software then modified a DLL component in the legitimate software and embedded backdoor code that would allow these attackers to remotely perform commands or deliver additional payloads. Below is a representation of various attack stages which you can also see in <A href="https://securitycenter.windows.com/" target="_blank" rel="noopener nofollow noreferrer">Microsoft Threat Protection (MTP) portal</A>.&nbsp; Note that if you do not have Microsoft Threat Protection this link will not work for you.</P>
<P>&nbsp;</P>
<P><span class="lia-media-object lia-media-is-inline lia-media-size-large" data-image-alt="Image1.png"><button class="lia-media-unstyled-btn" type="button" aria-haspopup="true" aria-label="Enlarge Image Image1.png"><img src="https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTE1MWkzRkU2NThDQUY5QzMzNTg1?image-dimensions=729x481&amp;revision=57" width="729" height="481" alt="Image1.png" /></button></span></P>
<P> </P>
<P>To hunt for similar TTPs used in this attack, a good place to start is to build an inventory of the machines that have SolarWinds Orion components. Organizations might already have a software inventory management system to indicate hosts where the SolarWinds application is installed. Alternatively, Azure Sentinel could be leveraged to run a simple query to gather similar details. Azure Sentinel collects data from multiple different logs that could be used to gather this information. For example, through the recently released <SPAN><A href="https://docs.microsoft.com/en-us/azure/sentinel/connect-microsoft-365-defender" target="_blank" rel="noopener noreferrer">Microsoft 365 Defender connector</A></SPAN>, security teams can now easily ingest Microsoft 365 raw data into Azure Sentinel. Using the ingested data, a simple query like below can be written that will pull the hosts with SolarWinds process running in last 30 days based on Process execution either via host on boarded to Sentinel or on boarded via Microsoft Defender for Endpoints (MDE). The query also leverages the Sysmon logs that a lot of customers are collecting from their environment to surface the machines that have SolarWinds running on them. Similar queries that leverage M365 raw data could also be run from the M365's Advanced hunting portal.</P>
<P>&nbsp;</P>
<P><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/SolarWindsInventory.yaml" target="_self" rel="noopener noreferrer">SolarWinds Inventory check query</A></P>
<div class="lia-spoiler-container"><a class="lia-spoiler-link" href="#community-1995095-" rel="nofollow noopener noreferrer">Spoiler</a><noscript> (Highlight to read)</noscript><div class="lia-spoiler-border"><div class="lia-spoiler-content">
<DIV>
<DIV><SPAN>let&nbsp;timeframe&nbsp;=&nbsp;</SPAN><SPAN>30</SPAN><SPAN>d</SPAN><SPAN>;</SPAN><SPAN>&nbsp;</SPAN></DIV>
<DIV><SPAN>(</SPAN><SPAN>union</SPAN><SPAN>&nbsp;isfuzzy=</SPAN><SPAN>true</SPAN><SPAN>&nbsp;</SPAN></DIV>
<DIV><SPAN>(</SPAN><SPAN>&nbsp;</SPAN></DIV>
<DIV><SPAN>SecurityEvent&nbsp;</SPAN></DIV>
<DIV><SPAN>|&nbsp;</SPAN><SPAN>where</SPAN><SPAN>&nbsp;TimeGenerated&nbsp;&gt;=&nbsp;ago</SPAN><SPAN>(</SPAN><SPAN>timeframe</SPAN><SPAN>)</SPAN><SPAN>&nbsp;</SPAN></DIV>
<DIV><SPAN>|&nbsp;</SPAN><SPAN>where</SPAN><SPAN>&nbsp;EventID&nbsp;==&nbsp;</SPAN><SPAN>'4688'</SPAN><SPAN>&nbsp;</SPAN></DIV>
<DIV><SPAN>|&nbsp;</SPAN><SPAN>where</SPAN><SPAN>&nbsp;tolower</SPAN><SPAN>(</SPAN><SPAN>NewProcessName</SPAN><SPAN>)</SPAN><SPAN>&nbsp;</SPAN><SPAN>has</SPAN><SPAN>&nbsp;</SPAN><SPAN>'solarwinds'</SPAN><SPAN>&nbsp;</SPAN></DIV>
<DIV><SPAN>|&nbsp;</SPAN><SPAN>extend</SPAN><SPAN>&nbsp;MachineName&nbsp;=&nbsp;Computer&nbsp;</SPAN><SPAN>,</SPAN><SPAN>&nbsp;Process&nbsp;=&nbsp;NewProcessName</SPAN></DIV>
<DIV><SPAN>|&nbsp;</SPAN><SPAN>summarize</SPAN><SPAN>&nbsp;StartTime&nbsp;=&nbsp;min</SPAN><SPAN>(</SPAN><SPAN>TimeGenerated</SPAN><SPAN>),</SPAN><SPAN>&nbsp;EndTime&nbsp;=&nbsp;max</SPAN><SPAN>(</SPAN><SPAN>TimeGenerated</SPAN><SPAN>),</SPAN><SPAN>&nbsp;MachineCount&nbsp;=&nbsp;dcount</SPAN><SPAN>(</SPAN><SPAN>MachineName</SPAN><SPAN>),</SPAN><SPAN>&nbsp;AccountCount&nbsp;=&nbsp;dcount</SPAN><SPAN>(</SPAN><SPAN>Account</SPAN><SPAN>),</SPAN><SPAN>&nbsp;MachineNames&nbsp;=&nbsp;make_set</SPAN><SPAN>(</SPAN><SPAN>MachineName</SPAN><SPAN>),</SPAN><SPAN>&nbsp;Accounts&nbsp;=&nbsp;make_set</SPAN><SPAN>(</SPAN><SPAN>Account</SPAN><SPAN>)</SPAN><SPAN>&nbsp;</SPAN><SPAN>by</SPAN><SPAN>&nbsp;Process</SPAN><SPAN>,</SPAN><SPAN>&nbsp;Type</SPAN></DIV>
<DIV><SPAN>),</SPAN><SPAN>&nbsp;</SPAN></DIV>
<DIV><SPAN>(</SPAN><SPAN>&nbsp;</SPAN></DIV>
<DIV><SPAN>DeviceProcessEvents&nbsp;</SPAN></DIV>
<DIV><SPAN>|&nbsp;</SPAN><SPAN>where</SPAN><SPAN>&nbsp;TimeGenerated&nbsp;&gt;=&nbsp;ago</SPAN><SPAN>(</SPAN><SPAN>timeframe</SPAN><SPAN>)</SPAN><SPAN>&nbsp;</SPAN></DIV>
<DIV><SPAN>|&nbsp;</SPAN><SPAN>where</SPAN><SPAN>&nbsp;tolower</SPAN><SPAN>(</SPAN><SPAN>InitiatingProcessFolderPath</SPAN><SPAN>)</SPAN><SPAN>&nbsp;</SPAN><SPAN>has</SPAN><SPAN>&nbsp;</SPAN><SPAN>'solarwinds'</SPAN><SPAN>&nbsp;</SPAN></DIV>
<DIV><SPAN>|&nbsp;</SPAN><SPAN>extend</SPAN><SPAN>&nbsp;MachineName&nbsp;=&nbsp;DeviceName&nbsp;</SPAN><SPAN>,</SPAN><SPAN>&nbsp;Process&nbsp;=&nbsp;InitiatingProcessFolderPath</SPAN><SPAN>,</SPAN><SPAN>&nbsp;Account&nbsp;=&nbsp;AccountName</SPAN></DIV>
<DIV><SPAN>|&nbsp;</SPAN><SPAN>summarize</SPAN><SPAN>&nbsp;StartTime&nbsp;=&nbsp;min</SPAN><SPAN>(</SPAN><SPAN>TimeGenerated</SPAN><SPAN>),</SPAN><SPAN>&nbsp;EndTime&nbsp;=&nbsp;max</SPAN><SPAN>(</SPAN><SPAN>TimeGenerated</SPAN><SPAN>),</SPAN><SPAN>&nbsp;MachineCount&nbsp;=&nbsp;dcount</SPAN><SPAN>(</SPAN><SPAN>MachineName</SPAN><SPAN>),</SPAN><SPAN>&nbsp;AccountCount&nbsp;=&nbsp;dcount</SPAN><SPAN>(</SPAN><SPAN>Account</SPAN><SPAN>),</SPAN><SPAN>&nbsp;MachineNames&nbsp;=&nbsp;make_set</SPAN><SPAN>(</SPAN><SPAN>MachineName</SPAN><SPAN>),</SPAN><SPAN>&nbsp;Accounts&nbsp;=&nbsp;make_set</SPAN><SPAN>(</SPAN><SPAN>Account</SPAN><SPAN>)</SPAN><SPAN>&nbsp;&nbsp;</SPAN><SPAN>by</SPAN><SPAN>&nbsp;Process</SPAN><SPAN>,</SPAN><SPAN>&nbsp;Type</SPAN></DIV>
<DIV><SPAN>),</SPAN><SPAN>&nbsp;</SPAN></DIV>
<DIV><SPAN>(</SPAN><SPAN>&nbsp;</SPAN></DIV>
<DIV><SPAN>Event&nbsp;</SPAN></DIV>
<DIV><SPAN>|&nbsp;</SPAN><SPAN>where</SPAN><SPAN>&nbsp;TimeGenerated&nbsp;&gt;=&nbsp;ago</SPAN><SPAN>(</SPAN><SPAN>timeframe</SPAN><SPAN>)</SPAN><SPAN>&nbsp;</SPAN></DIV>
<DIV><SPAN>|&nbsp;</SPAN><SPAN>where</SPAN><SPAN>&nbsp;Source&nbsp;==&nbsp;</SPAN><SPAN>"Microsoft-Windows-Sysmon"</SPAN><SPAN>&nbsp;</SPAN></DIV>
<DIV><SPAN>|&nbsp;</SPAN><SPAN>where</SPAN><SPAN>&nbsp;EventID&nbsp;==&nbsp;</SPAN><SPAN>1</SPAN><SPAN>&nbsp;</SPAN></DIV>
<DIV><SPAN>|&nbsp;</SPAN><SPAN>extend</SPAN><SPAN>&nbsp;Image&nbsp;=&nbsp;EventDetail</SPAN><SPAN>.[</SPAN><SPAN>4</SPAN><SPAN>].[</SPAN><SPAN>"#text"</SPAN><SPAN>]</SPAN><SPAN>&nbsp;</SPAN></DIV>
<DIV><SPAN>|&nbsp;</SPAN><SPAN>where</SPAN><SPAN>&nbsp;tolower</SPAN><SPAN>(</SPAN><SPAN>Image</SPAN><SPAN>)</SPAN><SPAN>&nbsp;</SPAN><SPAN>has</SPAN><SPAN>&nbsp;</SPAN><SPAN>'solarwinds'</SPAN><SPAN>&nbsp;</SPAN></DIV>
<DIV><SPAN>|&nbsp;</SPAN><SPAN>extend</SPAN><SPAN>&nbsp;MachineName&nbsp;=&nbsp;Computer&nbsp;</SPAN><SPAN>,</SPAN><SPAN>&nbsp;Process&nbsp;=&nbsp;Image</SPAN><SPAN>,</SPAN><SPAN>&nbsp;Account&nbsp;=&nbsp;UserName</SPAN></DIV>
<DIV><SPAN>|&nbsp;</SPAN><SPAN>summarize</SPAN><SPAN>&nbsp;StartTime&nbsp;=&nbsp;min</SPAN><SPAN>(</SPAN><SPAN>TimeGenerated</SPAN><SPAN>),</SPAN><SPAN>&nbsp;EndTime&nbsp;=&nbsp;max</SPAN><SPAN>(</SPAN><SPAN>TimeGenerated</SPAN><SPAN>),</SPAN><SPAN>&nbsp;MachineCount&nbsp;=&nbsp;dcount</SPAN><SPAN>(</SPAN><SPAN>MachineName</SPAN><SPAN>),</SPAN><SPAN>&nbsp;AccountCount&nbsp;=&nbsp;dcount</SPAN><SPAN>(</SPAN><SPAN>Account</SPAN><SPAN>),</SPAN><SPAN>&nbsp;MachineNames&nbsp;=&nbsp;make_set</SPAN><SPAN>(</SPAN><SPAN>MachineName</SPAN><SPAN>),</SPAN><SPAN>&nbsp;Accounts&nbsp;=&nbsp;make_set</SPAN><SPAN>(</SPAN><SPAN>Account</SPAN><SPAN>)</SPAN><SPAN>&nbsp;&nbsp;</SPAN><SPAN>by</SPAN><SPAN>&nbsp;Process</SPAN><SPAN>,</SPAN><SPAN>&nbsp;Type</SPAN></DIV>
<DIV><SPAN>)</SPAN><SPAN>&nbsp;</SPAN></DIV>
<DIV><SPAN>)</SPAN><SPAN>&nbsp;<BR /></SPAN></DIV>
</DIV>
</div><noscript><div class="lia-spoiler-noscript-container"><div class="lia-spoiler-noscript-content">

let&nbsp;timeframe&nbsp;=&nbsp;30d;&nbsp;
(union&nbsp;isfuzzy=true&nbsp;
(&nbsp;
SecurityEvent&nbsp;
|&nbsp;where&nbsp;TimeGenerated&nbsp;&gt;=&nbsp;ago(timeframe)&nbsp;
|&nbsp;where&nbsp;EventID&nbsp;==&nbsp;'4688'&nbsp;
|&nbsp;where&nbsp;tolower(NewProcessName)&nbsp;has&nbsp;'solarwinds'&nbsp;
|&nbsp;extend&nbsp;MachineName&nbsp;=&nbsp;Computer&nbsp;,&nbsp;Process&nbsp;=&nbsp;NewProcessName
|&nbsp;summarize&nbsp;StartTime&nbsp;=&nbsp;min(TimeGenerated),&nbsp;EndTime&nbsp;=&nbsp;max(TimeGenerated),&nbsp;MachineCount&nbsp;=&nbsp;dcount(MachineName),&nbsp;AccountCount&nbsp;=&nbsp;dcount(Account),&nbsp;MachineNames&nbsp;=&nbsp;make_set(MachineName),&nbsp;Accounts&nbsp;=&nbsp;make_set(Account)&nbsp;by&nbsp;Process,&nbsp;Type
),&nbsp;
(&nbsp;
DeviceProcessEvents&nbsp;
|&nbsp;where&nbsp;TimeGenerated&nbsp;&gt;=&nbsp;ago(timeframe)&nbsp;
|&nbsp;where&nbsp;tolower(InitiatingProcessFolderPath)&nbsp;has&nbsp;'solarwinds'&nbsp;
|&nbsp;extend&nbsp;MachineName&nbsp;=&nbsp;DeviceName&nbsp;,&nbsp;Process&nbsp;=&nbsp;InitiatingProcessFolderPath,&nbsp;Account&nbsp;=&nbsp;AccountName
|&nbsp;summarize&nbsp;StartTime&nbsp;=&nbsp;min(TimeGenerated),&nbsp;EndTime&nbsp;=&nbsp;max(TimeGenerated),&nbsp;MachineCount&nbsp;=&nbsp;dcount(MachineName),&nbsp;AccountCount&nbsp;=&nbsp;dcount(Account),&nbsp;MachineNames&nbsp;=&nbsp;make_set(MachineName),&nbsp;Accounts&nbsp;=&nbsp;make_set(Account)&nbsp;&nbsp;by&nbsp;Process,&nbsp;Type
),&nbsp;
(&nbsp;
Event&nbsp;
|&nbsp;where&nbsp;TimeGenerated&nbsp;&gt;=&nbsp;ago(timeframe)&nbsp;
|&nbsp;where&nbsp;Source&nbsp;==&nbsp;"Microsoft-Windows-Sysmon"&nbsp;
|&nbsp;where&nbsp;EventID&nbsp;==&nbsp;1&nbsp;
|&nbsp;extend&nbsp;Image&nbsp;=&nbsp;EventDetail.[4].["#text"]&nbsp;
|&nbsp;where&nbsp;tolower(Image)&nbsp;has&nbsp;'solarwinds'&nbsp;
|&nbsp;extend&nbsp;MachineName&nbsp;=&nbsp;Computer&nbsp;,&nbsp;Process&nbsp;=&nbsp;Image,&nbsp;Account&nbsp;=&nbsp;UserName
|&nbsp;summarize&nbsp;StartTime&nbsp;=&nbsp;min(TimeGenerated),&nbsp;EndTime&nbsp;=&nbsp;max(TimeGenerated),&nbsp;MachineCount&nbsp;=&nbsp;dcount(MachineName),&nbsp;AccountCount&nbsp;=&nbsp;dcount(Account),&nbsp;MachineNames&nbsp;=&nbsp;make_set(MachineName),&nbsp;Accounts&nbsp;=&nbsp;make_set(Account)&nbsp;&nbsp;by&nbsp;Process,&nbsp;Type
)&nbsp;
)&nbsp;

</div></div></noscript></div></div>
<H6 id="community-1995095-toc-hId-903215278"><FONT size="1 2 3 4 5 6 7" color="#993300">Updated 12/30/2020</FONT></H6>
<P>On systems where the malicious SolarWinds DLL (SolarWinds.Orion.Core.BusinessLayer.dll) is running, it is known that the attacker used a hardcoded named pipe '583da945-62af-10e8-4902-a8f205c72b2e' to conduct various checks as well as to ensure only one instance of the backdoor was running. The use of named pipes by malware is not uncommon as it provides a mechanism for communication between processes. This activity by the malware can be detected if you are collecting Sysmon (Event Id 17/18) or Security Event Id 5145 in your Azure Sentinel workspace. The&nbsp;<A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/SolorigateNamedPipe.yaml" target="_self" rel="noopener noreferrer"><SPAN>Solorigate Named Pipe&nbsp;</SPAN>detection</A> should not be considered reliable on its own as the creation of just the hardcoded named pipe does not indicate that the malicious code was completely triggered, and the machine beaconed out or received additional commands. However, presence of this is definitely suspicious and should warrant further in-depth investigation.</P>
<div class="lia-spoiler-container"><a class="lia-spoiler-link" href="#community-1995095-" rel="nofollow noopener noreferrer">Spoiler</a><noscript> (Highlight to read)</noscript><div class="lia-spoiler-border"><div class="lia-spoiler-content">let timeframe = 1d;<BR />(union isfuzzy=true<BR />(Event<BR />| where TimeGenerated &gt;= ago(timeframe)<BR />| where Source == "Microsoft-Windows-Sysmon"<BR />| where EventID in (17,18)<BR />| extend EvData = parse_xml(EventData)<BR />| extend EventDetail = EvData.DataItem.EventData.Data<BR />| extend NamedPipe = EventDetail.[5].["#text"]<BR />| extend ProcessDetail = EventDetail.[6].["#text"]<BR />| where NamedPipe contains '583da945-62af-10e8-4902-a8f205c72b2e'<BR />| extend Account = UserName<BR />| project-away EventDetail, EvData<BR />),<BR />(<BR />SecurityEvent<BR />| where TimeGenerated &gt;= ago(timeframe)<BR />| where EventID == '5145'<BR />| where AccessList has '%%4418' // presence of CreatePipeInstance value <BR />| where RelativeTargetName contains '583da945-62af-10e8-4902-a8f205c72b2e'<BR />)<BR />)<BR />| extend timestamp = TimeGenerated, AccountCustomEntity = Account, HostCustomEntity = Computer</div><noscript><div class="lia-spoiler-noscript-container"><div class="lia-spoiler-noscript-content">let timeframe = 1d;(union isfuzzy=true(Event| where TimeGenerated &gt;= ago(timeframe)| where Source == "Microsoft-Windows-Sysmon"| where EventID in (17,18)| extend EvData = parse_xml(EventData)| extend EventDetail = EvData.DataItem.EventData.Data| extend NamedPipe = EventDetail.[5].["#text"]| extend ProcessDetail = EventDetail.[6].["#text"]| where NamedPipe contains '583da945-62af-10e8-4902-a8f205c72b2e'| extend Account = UserName| project-away EventDetail, EvData),(SecurityEvent| where TimeGenerated &gt;= ago(timeframe)| where EventID == '5145'| where AccessList has '%%4418' // presence of CreatePipeInstance value | where RelativeTargetName contains '583da945-62af-10e8-4902-a8f205c72b2e'))| extend timestamp = TimeGenerated, AccountCustomEntity = Account, HostCustomEntity = Computer</div></div></noscript></div></div>
<H2 id="community-1995095-toc-hId-1988598955">Privilege Escalation</H2>
<P>Once the adversary acquires an initial foothold on a system thru the SolarWinds process they will have System account level access, the attacker will then attempt to elevate to domain admin level access to the environment. The Microsoft Threat Intelligence Center (MSTIC) team has already delivered multiple queries into Azure Sentinel that identify similar TTPs and many are also available in M365. These methodologies are not specific to just this threat actor or this attack but have been seen in various attack campaigns.</P>
<P>Identifying abnormal logon activities or additions to privileged groups is one way to identify privilege escalation.</P>
<H6 id="community-1995095-toc-hId-1583273648"><FONT size="1 2 3 4 5 6 7" color="#993300">Updated 12/17/2020</FONT></H6>
<UL>
<LI>Checking for <A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/HostsWithNewLogons.yaml" target="_blank" rel="noopener noreferrer">hosts with new logons</A> to identify potential lateral movement by the attacker.</LI>
<LI>Look for any new&nbsp;<A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserCreatedAddedToBuiltinAdmins_1d.yaml" target="_blank" rel="noopener noreferrer">account being created and added to built-in administrators group.</A></LI>
<LI>Look for any <A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserAccountAddedToPrivlegeGroup_1h.yaml" target="_self" rel="noopener noreferrer">u</A><SPAN><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserAccountAddedToPrivlegeGroup_1h.yaml" target="_self" rel="noopener noreferrer">ser account added to privileged built in domain local or global groups,</A>&nbsp;</SPAN><SPAN>including adding accounts to a domain privileged group</SPAN> such as Enterprise Admins, Cert Publishers or DnsAdmins.</LI>
<LI>Monitor for <A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/TrackingPrivAccounts.yaml" target="_blank" rel="noopener noreferrer">rare activity by a high-value account</A> carried out on a system or service.</LI>
</UL>
<P>Related to this attack, in some environments service account credentials had been granted administrative privileges. The above queries can be modified to remove the condition of focusing “User” accounts by commenting the query to include service accounts in the scope where applicable:</P>
<P>&nbsp;</P>
<P><STRONG><EM>//| where AccountType == "User"</EM></STRONG></P>
<P>&nbsp;</P>
<P>Please see the <A href="https://github.com/Azure/Azure-Sentinel" target="_blank" rel="noopener noreferrer">Azure Sentinel Github</A> for additional queries and hunting ideas related to Accounts under the Detections and Hunting Queries sections for AuditLogs, and SecurityEvents</P>
<P>Microsoft 365 Defender team has also shared quite a few sample queries for use in their <SPAN><A href="https://github.com/microsoft/Microsoft-365-Defender-Hunting-Queries" target="_blank" rel="noopener noreferrer">advanced hunting</A></SPAN> portal that could be leveraged to detect this part of the attack. Additionally, the logic for many of the Azure Sentinel queries can also be transformed to equivalent queries for Microsoft 365 Defender, that could be run in their Advanced Hunting Portal.</P>
<P>Microsoft 365 Defender has an upcoming complimentary blog that will be updated here once available.</P>
<P>&nbsp;</P>
<H2 id="community-1995095-toc-hId--1626309971">Certificate Export</H2>
<P>The next step in the attack was stealing the certificate that signs SAML tokens from the federation server (ADFS) called a Token Signing Cert (TSC). SAML Tokens&nbsp;are basically XML representations of claims.&nbsp; You can read more about ADFS in <A href="https://docs.microsoft.com/en-us/azure/active-directory/hybrid/whatis-fed" target="_blank" rel="noopener noreferrer">What is federation with Azure AD? | Microsoft Docs</A> and SAML at <A href="https://docs.microsoft.com/en-us/azure/active-directory/develop/single-sign-on-saml-protocol" target="_blank" rel="noopener noreferrer">Azure Single Sign On SAML Protocol - Microsoft identity platform | Microsoft Docs</A>. The process is as follows:</P>
<OL>
<LI>A client requests a SAML token from an ADFS Server by authenticating to that server using Windows credentials.</LI>
<LI>The ADFS server issues a SAML token to the client.</LI>
<LI>The SAML token is signed with a certificate associated with the server.</LI>
<LI>The client then presents the SAML token to the application that it needs access to.</LI>
<LI>The signature over the SAML token tells the application that the security token service issued the token and grants access to the client.</LI>
</OL>
<P>&nbsp;</P>
<H2 id="community-1995095-toc-hId-861202862"><SPAN data-contrast="none">ADFS Key Extraction </SPAN></H2>
<P><FONT size="1 2 3 4 5 6 7" color="#993300"><SPAN data-contrast="none">Updated 01/15/2021</SPAN></FONT></P>
<P>The implication of stealing the Token Signing Cert (TSC) is that once the certificate has been acquired, the actor can forge SAML (Security Assertions Markup Language) tokens with whatever claims and lifetime they choose, then sign it with the certificate that has been acquired.  Microsoft continues to strongly recommend securing your AD FS (Active Directory Federation Service) TSC because if these TSC’s are acquired by a bad actor, this then enables the actor to forge SAML tokens that impersonate highly privileged accounts.  There are publicly available pen-testing tools like <A href="https://github.com/fireeye/adfsdump" target="_blank" rel="noopener noreferrer">ADFSDump</A> and <A href="https://github.com/fireeye/adfspoof" target="_blank" rel="noopener noreferrer">ADFSpoof</A> <SPAN class="TextRun  BCX8 SCXW227613231" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW227613231">that help with extracting required information from<SPAN>&nbsp;</SPAN></SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW227613231" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW227613231">the AD</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW227613231" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW227613231"><SPAN>&nbsp;</SPAN></SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW227613231" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW227613231">FS configuration database</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW227613231" data-contrast="none"><SPAN class="NormalTextRun CommentStart  BCX8 SCXW227613231"><SPAN>&nbsp;</SPAN>to generate the forged security tokens</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW227613231" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW227613231">.  </SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW227613231" data-contrast="none"><SPAN class="NormalTextRun CommentStart  BCX8 SCXW227613231">While<SPAN>&nbsp;</SPAN></SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW227613231" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW227613231">we have not confirmed<SPAN>&nbsp;</SPAN></SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW227613231" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW227613231">these</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW227613231" data-contrast="none"><SPAN class="NormalTextRun CommentStart  BCX8 SCXW227613231"><SPAN>&nbsp;</SPAN>specific tools were</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW227613231" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW227613231"><SPAN>&nbsp;</SPAN></SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW227613231" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW227613231">used in th</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW227613231" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW227613231">is attack</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW227613231" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW227613231">, they are useful for simulating the attack behavior or executing a similar attack and therefore</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW227613231" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW227613231">,<SPAN>&nbsp;</SPAN></SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW227613231" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW227613231">Microsoft has</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW227613231" data-contrast="none"><SPAN class="NormalTextRun CommentStart  BCX8 SCXW227613231"><SPAN>&nbsp;</SPAN>created<SPAN>&nbsp;</SPAN></SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW227613231" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW227613231">a high</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW227613231" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW227613231">-fidelity detection related to this</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW227613231" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW227613231"><SPAN>&nbsp;</SPAN>for M365 Defender</SPAN></SPAN>:</P>
<UL>
<LI><STRONG>ADFS private key extraction</STRONG> which detects ADFS private key extraction patterns from tools such as ADFSDump.</LI>
</UL>
<P><STRONG>Note:</STRONG> <SPAN class="TextRun  BCX8 SCXW233666654" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW233666654">Any M365 Defender alert</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW233666654" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW233666654"><SPAN>&nbsp;</SPAN>can be seen in Azure Sentinel Security Alerts or in the M365 security portal</SPAN></SPAN>.</P>
<P><FONT size="1 2 3 4 5 6 7" color="#993300">Updated 01/15/2021</FONT></P>
<P><SPAN data-contrast="auto"><SPAN class="TextRun  BCX8 SCXW94422071" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW94422071">Th</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW94422071" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW94422071">e</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW94422071" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW94422071">&nbsp;</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW94422071" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW94422071">TTP (tactics, techniques, and procedures)</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW94422071" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW94422071">&nbsp;observed in the </SPAN><SPAN class="NormalTextRun SpellingErrorV2  BCX8 SCXW94422071">Solorigate</SPAN><SPAN class="NormalTextRun  BCX8 SCXW94422071"> attack is the creation of&nbsp;</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW94422071" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW94422071">a&nbsp;</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW94422071" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW94422071">legitimate SAML token used to authenticate as any user. One way an attacker could achieve this is by compromising&nbsp;</SPAN><SPAN class="NormalTextRun ContextualSpellingAndGrammarErrorV2  BCX8 SCXW94422071">AD</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW94422071" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW94422071">&nbsp;</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW94422071" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW94422071">FS key material.&nbsp;</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW94422071" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW94422071">Microsoft&nbsp;</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW94422071" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW94422071">has a</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW94422071" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW94422071">&nbsp;new</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW94422071" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW94422071">&nbsp;detection for this as stated above&nbsp;</SPAN><SPAN class="NormalTextRun ContextualSpellingAndGrammarErrorV2  BCX8 DefaultHighlightTransition SCXW94422071">and&nbsp;</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW94422071" data-contrast="none"><SPAN class="NormalTextRun ContextualSpellingAndGrammarErrorV2  BCX8 DefaultHighlightTransition SCXW94422071">for</SPAN><SPAN class="NormalTextRun  BCX8 SCXW94422071">&nbsp;Azure Sentinel&nbsp;</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW94422071" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW94422071">has&nbsp;</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW94422071" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW94422071">also created a Windows Event Log based detection that indicates</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW94422071" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW94422071">&nbsp;an</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW94422071" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW94422071"> </SPAN></SPAN><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/MultipleDataSources/ADFS-DKM-MasterKey-Export.yaml" target="_self" rel="noopener noreferrer">ADFS DKM Master Key Export</A>.</SPAN><SPAN data-contrast="auto">&nbsp;<SPAN class="TextRun  BCX8 SCXW94422071" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW94422071">As part of the update for this query to the Azure Sentinel GitHub,&nbsp;</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW94422071" data-contrast="none"><SPAN class="NormalTextRun CommentStart  BCX8 SCXW94422071">there is a</SPAN></SPAN> <A href="https://github.com/Azure/Azure-Sentinel/pull/1512#issue-543053339" target="_self" rel="noopener noreferrer">detailed write up</A> <SPAN class="TextRun  BCX8 SCXW94422071" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW94422071">for&nbsp;</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW94422071" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW94422071">why this&nbsp;</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW94422071" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW94422071">is&nbsp;</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW94422071" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW94422071">interesting</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW94422071" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW94422071">&nbsp;along with a&nbsp;<A class="Hyperlink  BCX8 SCXW94422071" href="https://github.com/Azure/Azure-Sentinel/pull/1562#issue-551542469" target="_blank" rel="noopener noreferrer"><SPAN class="FieldRange  BCX8 SCXW94422071"><SPAN class="TextRun Underlined  BCX8 SCXW94422071" data-contrast="none"><SPAN class="NormalTextRun CommentStart  BCX8 SCXW94422071" data-ccp-charstyle="Hyperlink">subsequent addition</SPAN></SPAN></SPAN></A>&nbsp;providing clarity&nbsp;on how to get 4662&nbsp;events&nbsp;to fire</SPAN></SPAN>.&nbsp; This detection should not be considered reliable on its own but can identify suspicious activity that warrants further investigation.</SPAN></P>
<P><SPAN data-contrast="auto"><FONT size="1 2 3 4 5 6 7" color="#993300">Updated 01/15/2021</FONT></SPAN></P>
<div class="lia-spoiler-container"><a class="lia-spoiler-link" href="#community-1995095-" rel="nofollow noopener noreferrer">Spoiler</a><noscript> (Highlight to read)</noscript><div class="lia-spoiler-border"><div class="lia-spoiler-content">
<P>&nbsp;(union isfuzzy=true (SecurityEvent <BR />| where EventID == 4662 // You need to create a SACL on the ADFS Policy Store DKM group for this event to be created. <BR />| where ObjectServer == 'DS'<BR />| where OperationType == 'Object Access'<BR />//| where ObjectName contains '&lt;GUID of ADFS Policy Store DKM Group object' This is unique to the domain. Check description for more details.<BR />| where ObjectType contains '5cb41ed0-0e4c-11d0-a286-00aa003049e2' // Contact Class<BR />| where Properties contains '8d3bca50-1d7e-11d0-a081-00aa006c33ed' // Picture Attribute - Ldap-Display-Name: thumbnailPhoto<BR />| extend timestamp = TimeGenerated, HostCustomEntity = Computer, AccountCustomEntity = SubjectAccount),<BR />(DeviceEvents<BR />| where ActionType =~ "LdapSearch"<BR />| where AdditionalFields.AttributeList contains "thumbnailPhoto"<BR />| where AdditionalFields.DistinguishedName contains "CN=ADFS,CN=Microsoft,CN=Program Data" // Filter results to show only hits related to the ADFS AD container<BR />| extend timestamp = TimeGenerated, HostCustomEntity = DeviceName, AccountCustomEntity = InitiatingProcessAccountName)<BR />)</P>
</div><noscript><div class="lia-spoiler-noscript-container"><div class="lia-spoiler-noscript-content">
&nbsp;(union isfuzzy=true (SecurityEvent | where EventID == 4662 // You need to create a SACL on the ADFS Policy Store DKM group for this event to be created. | where ObjectServer == 'DS'| where OperationType == 'Object Access'//| where ObjectName contains '&lt;GUID of ADFS Policy Store DKM Group object' This is unique to the domain. Check description for more details.| where ObjectType contains '5cb41ed0-0e4c-11d0-a286-00aa003049e2' // Contact Class| where Properties contains '8d3bca50-1d7e-11d0-a081-00aa006c33ed' // Picture Attribute - Ldap-Display-Name: thumbnailPhoto| extend timestamp = TimeGenerated, HostCustomEntity = Computer, AccountCustomEntity = SubjectAccount),(DeviceEvents| where ActionType =~ "LdapSearch"| where AdditionalFields.AttributeList contains "thumbnailPhoto"| where AdditionalFields.DistinguishedName contains "CN=ADFS,CN=Microsoft,CN=Program Data" // Filter results to show only hits related to the ADFS AD container| extend timestamp = TimeGenerated, HostCustomEntity = DeviceName, AccountCustomEntity = InitiatingProcessAccountName))
</div></div></noscript></div></div>
<P><FONT size="1 2 3 4 5 6 7" color="#993300"><SPAN data-contrast="none">Updated 12/19/2020</SPAN></FONT></P>
<P>MSTIC has developed another <A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/ADFSKeyExportSysmon.yaml" target="_blank" rel="noopener noreferrer">detection</A> for ADFS server key export events. This detection leverages the visibility provided by <A href="https://docs.microsoft.com/en-us/sysinternals/downloads/sysmon" target="_blank" rel="noopener noreferrer">Sysmon</A> and provides a more reliable detection method than that covered in the Windows Event Log detection. For this detection to be effective you must be collecting Sysmon Event IDs 17 and 18 into <A href="https://medium.com/blueteamlabs/using-sysmon-in-azure-sentinel-883eb6ffc431" target="_blank" rel="noopener nofollow noreferrer">your Azure Sentinel workspace</A>.</P>
<div class="lia-spoiler-container"><a class="lia-spoiler-link" href="#community-1995095-" rel="nofollow noopener noreferrer">Spoiler</a><noscript> (Highlight to read)</noscript><div class="lia-spoiler-border"><div class="lia-spoiler-content">// Adjust this to use a longer timeframe to identify ADFS servers<BR />let lookback = 6d;<BR />// Adjust this to adjust the key export detection timeframe<BR />let timeframe = 1d;<BR />// Start be identifying ADFS servers to reduce FP chance<BR />let ADFS_Servers = (<BR />Event<BR />| where TimeGenerated &gt; ago(timeframe+lookback)<BR />| where Source == "Microsoft-Windows-Sysmon"<BR />| extend EventData = parse_xml(EventData).DataItem.EventData.Data<BR />| mv-expand bagexpansion=array EventData<BR />| evaluate bag_unpack(EventData)<BR />| extend Key=tostring(['@Name']), Value=['#text']<BR />| evaluate pivot(Key, any(Value), TimeGenerated, Source, EventLog, Computer, EventLevel, EventLevelName, EventID, UserName, RenderedDescription, MG, ManagementGroupName, Type, _ResourceId)<BR />| extend process = split(Image, '\\', -1)[-1]<BR />| where process =~ "Microsoft.IdentityServer.ServiceHost.exe"<BR />| summarize by Computer);<BR />// Look for ADFS servers where Named Pipes event are present<BR />Event<BR />| where TimeGenerated &gt; ago(timeframe)<BR />| where Source == "Microsoft-Windows-Sysmon"<BR />| where Computer in~ (ADFS_Servers)<BR />| extend RenderedDescription = tostring(split(RenderedDescription, ":")[0])<BR />| extend EventData = parse_xml(EventData).DataItem.EventData.Data<BR />| mv-expand bagexpansion=array EventData<BR />| evaluate bag_unpack(EventData)<BR />| extend Key=tostring(['@Name']), Value=['#text']<BR />| evaluate pivot(Key, any(Value), TimeGenerated, Source, EventLog, Computer, EventLevel, EventLevelName, EventID, UserName, RenderedDescription, MG, ManagementGroupName, Type, _ResourceId)<BR />| extend RuleName = column_ifexists("RuleName", ""), TechniqueId = column_ifexists("TechniqueId", ""), TechniqueName = column_ifexists("TechniqueName", "")<BR />| parse RuleName with * 'technique_id=' TechniqueId ',' * 'technique_name=' TechniqueName<BR />| where EventID in (17,18)<BR />// Look for Pipe related to querying the WID<BR />| where PipeName == "\\MICROSOFT##WID\\tsql\\query"<BR />| extend process = split(Image, '\\', -1)[-1]<BR />// Exclude expected processes<BR />| where process !in ("Microsoft.IdentityServer.ServiceHost.exe", "Microsoft.Identity.Health.Adfs.PshSurrogate.exe", "AzureADConnect.exe", "Microsoft.Tri.Sensor.exe", "wsmprovhost.exe","mmc.exe", "sqlservr.exe")<BR />| extend Operation = RenderedDescription<BR />| project-reorder TimeGenerated, EventType, Operation, process, Image, Computer, UserName<BR />| extend HostCustomEntity = Computer, AccountCustomEntity = UserName</div><noscript><div class="lia-spoiler-noscript-container"><div class="lia-spoiler-noscript-content">// Adjust this to use a longer timeframe to identify ADFS serverslet lookback = 6d;// Adjust this to adjust the key export detection timeframelet timeframe = 1d;// Start be identifying ADFS servers to reduce FP chancelet ADFS_Servers = (Event| where TimeGenerated &gt; ago(timeframe+lookback)| where Source == "Microsoft-Windows-Sysmon"| extend EventData = parse_xml(EventData).DataItem.EventData.Data| mv-expand bagexpansion=array EventData| evaluate bag_unpack(EventData)| extend Key=tostring(['@Name']), Value=['#text']| evaluate pivot(Key, any(Value), TimeGenerated, Source, EventLog, Computer, EventLevel, EventLevelName, EventID, UserName, RenderedDescription, MG, ManagementGroupName, Type, _ResourceId)| extend process = split(Image, '\\', -1)[-1]| where process =~ "Microsoft.IdentityServer.ServiceHost.exe"| summarize by Computer);// Look for ADFS servers where Named Pipes event are presentEvent| where TimeGenerated &gt; ago(timeframe)| where Source == "Microsoft-Windows-Sysmon"| where Computer in~ (ADFS_Servers)| extend RenderedDescription = tostring(split(RenderedDescription, ":")[0])| extend EventData = parse_xml(EventData).DataItem.EventData.Data| mv-expand bagexpansion=array EventData| evaluate bag_unpack(EventData)| extend Key=tostring(['@Name']), Value=['#text']| evaluate pivot(Key, any(Value), TimeGenerated, Source, EventLog, Computer, EventLevel, EventLevelName, EventID, UserName, RenderedDescription, MG, ManagementGroupName, Type, _ResourceId)| extend RuleName = column_ifexists("RuleName", ""), TechniqueId = column_ifexists("TechniqueId", ""), TechniqueName = column_ifexists("TechniqueName", "")| parse RuleName with * 'technique_id=' TechniqueId ',' * 'technique_name=' TechniqueName| where EventID in (17,18)// Look for Pipe related to querying the WID| where PipeName == "\\MICROSOFT##WID\\tsql\\query"| extend process = split(Image, '\\', -1)[-1]// Exclude expected processes| where process !in ("Microsoft.IdentityServer.ServiceHost.exe", "Microsoft.Identity.Health.Adfs.PshSurrogate.exe", "AzureADConnect.exe", "Microsoft.Tri.Sensor.exe", "wsmprovhost.exe","mmc.exe", "sqlservr.exe")| extend Operation = RenderedDescription| project-reorder TimeGenerated, EventType, Operation, process, Image, Computer, UserName| extend HostCustomEntity = Computer, AccountCustomEntity = UserName</div></div></noscript></div></div>
<P>Outside of directly looking for tools, this adversary may have used custom tooling so looking for anomalous process executions or anomalous accounts logging on to our ADFS server can give us some clue when such attacks happen. Azure Sentinel provides queries that can help to:</P>
<UL>
<LI>Find <A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/ProcessEntropy.yaml" target="_blank" rel="noopener noreferrer">rare anomalous process in your environment</A>.</LI>
<LI>Also look for <A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/RareProcbyServiceAccount.yaml" target="_blank" rel="noopener noreferrer">rare processes run by service accounts</A></LI>
<LI>Or uncommon processes that are in the <A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/uncommon_processes.yaml" target="_blank" rel="noopener noreferrer">bottom 5% of all the process</A>.</LI>
<LI>In some instances, there is a rare command line syntax related to DLL loading, you can adjust these queries to also look at rarity on the command line.</LI>
</UL>
<P>Every environment is different and some of these queries being generic could be noisy. So, in the first step a good approach would be to limit this kind of hunting to our ADFS server.</P>
<P>&nbsp;</P>
<H2 id="community-1995095-toc-hId--946251601">Azure Active Directory Hunting</H2>
<P>Having gained a significant foothold in the on prem environment, the actor also targeted the Azure AD of some of the compromised organizations and made modifications to Azure AD settings to facilitate long term access. Microsoft has shared many relevant queries through the <A href="https://github.com/Azure/Azure-Sentinel" target="_self" rel="noopener noreferrer">Azure Sentinel GitHub</A> to identify these actions.</P>
<P><FONT size="1 2 3 4 5 6 7" color="#993300">Updated 01/15/2021</FONT></P>
<P><SPAN class="TextRun SCXW239135417 BCX8" data-contrast="none"><SPAN class="NormalTextRun SCXW239135417 BCX8">One such activity is related to modifying </SPAN></SPAN><SPAN class="TextRun SCXW239135417 BCX8" data-contrast="none"><SPAN class="NormalTextRun SCXW239135417 BCX8">domain federation trust settings</SPAN></SPAN><SPAN class="TextRun SCXW239135417 BCX8" data-contrast="none"><SPAN class="NormalTextRun SCXW239135417 BCX8">.<SPAN>&nbsp;</SPAN></SPAN></SPAN><SPAN class="TextRun SCXW239135417 BCX8" data-contrast="none"><SPAN class="NormalTextRun SCXW239135417 BCX8">A</SPAN></SPAN><SPAN class="TextRun SCXW239135417 BCX8" data-contrast="none"><SPAN class="NormalTextRun SCXW239135417 BCX8"><SPAN>&nbsp;</SPAN>federation trust signifies<SPAN>&nbsp;</SPAN></SPAN></SPAN><SPAN class="TextRun SCXW239135417 BCX8" data-contrast="none"><SPAN class="NormalTextRun SCXW239135417 BCX8">the establishment</SPAN></SPAN><SPAN class="TextRun SCXW239135417 BCX8" data-contrast="none"><SPAN class="NormalTextRun SCXW239135417 BCX8"><SPAN>&nbsp;</SPAN>of</SPAN></SPAN><SPAN class="TextRun SCXW239135417 BCX8" data-contrast="none"><SPAN class="NormalTextRun SCXW239135417 BCX8"><SPAN>&nbsp;</SPAN></SPAN></SPAN><SPAN class="TextRun SCXW239135417 BCX8" data-contrast="none"><SPAN class="NormalTextRun SCXW239135417 BCX8">authentication</SPAN></SPAN><SPAN class="TextRun SCXW239135417 BCX8" data-contrast="none"><SPAN class="NormalTextRun SCXW239135417 BCX8"><SPAN>&nbsp;</SPAN>and authorization trust</SPAN></SPAN><SPAN class="TextRun SCXW239135417 BCX8" data-contrast="none"><SPAN class="NormalTextRun SCXW239135417 BCX8"><SPAN>&nbsp;</SPAN>between two organizations so that users located in partner organization</SPAN></SPAN><SPAN class="TextRun SCXW239135417 BCX8" data-contrast="none"><SPAN class="NormalTextRun SCXW239135417 BCX8">s</SPAN></SPAN><SPAN class="TextRun SCXW239135417 BCX8" data-contrast="none"><SPAN class="NormalTextRun SCXW239135417 BCX8"><SPAN>&nbsp;</SPAN>can send authentication</SPAN></SPAN><SPAN class="TextRun SCXW239135417 BCX8" data-contrast="none"><SPAN class="NormalTextRun SCXW239135417 BCX8"><SPAN>&nbsp;</SPAN>and authorization</SPAN></SPAN><SPAN class="TextRun SCXW239135417 BCX8" data-contrast="none"><SPAN class="NormalTextRun SCXW239135417 BCX8"><SPAN>&nbsp;</SPAN>requests successfully</SPAN></SPAN>.</P>
<UL>
<LI><SPAN class="TextRun  BCX8 SCXW231191900" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW231191900">While not specifically seen in this attack</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW231191900" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW231191900">, tracking federation trust modifications is<SPAN>&nbsp;</SPAN></SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW231191900" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW231191900">important</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW231191900" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW231191900">.<SPAN>&nbsp;</SPAN></SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW231191900" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW231191900">The Azure Sentinel query for </SPAN></SPAN><A class="Hyperlink  BCX8 SCXW231191900" href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/ADFSDomainTrustMods.yaml" target="_blank" rel="noreferrer noopener"><SPAN class="TextRun Underlined  BCX8 SCXW231191900" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW231191900">domain federation trust settings modification</SPAN></SPAN></A><SPAN class="TextRun  BCX8 SCXW231191900" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW231191900"> will alert when a user or application modifies the federation settings on the domain particularly when a new Active Directory Federated Service (ADFS) Trusted Realm object, such as a signing certificate, is added to the domain</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW231191900" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW231191900"><SPAN>&nbsp;</SPAN>or there is an update to domain authentication from <STRONG>managed</STRONG> to<SPAN>&nbsp;</SPAN></SPAN><STRONG><SPAN class="NormalTextRun ContextualSpellingAndGrammarErrorV2  BCX8 SCXW231191900">federated</SPAN></STRONG></SPAN><SPAN class="TextRun  BCX8 SCXW231191900" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW231191900"><STRONG>.</STRONG> Modification to domain federation settings should be rare<SPAN>&nbsp;</SPAN></SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW231191900" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW231191900">and<SPAN>&nbsp;</SPAN></SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW231191900" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW231191900">this<SPAN>&nbsp;</SPAN></SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW231191900" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW231191900">should be treated as<SPAN>&nbsp;</SPAN></SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW231191900" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW231191900">a high-fidelity alert that<SPAN>&nbsp;</SPAN></SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW231191900" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW231191900">Azure AD and<SPAN>&nbsp;</SPAN></SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW231191900" data-contrast="none"><SPAN class="NormalTextRun CommentStart  BCX8 SCXW231191900">Azure Sentinel users<SPAN>&nbsp;</SPAN></SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW231191900" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW231191900">should</SPAN></SPAN><SPAN class="TextRun  BCX8 SCXW231191900" data-contrast="none"><SPAN class="NormalTextRun  BCX8 SCXW231191900"><SPAN>&nbsp;</SPAN>follow up on</SPAN></SPAN>.</LI>
</UL>
<P><FONT size="1 2 3 4 5 6 7" color="#993300">Updated 01/15/2021</FONT></P>
<P><SPAN class="TrackChangeTextInsertion TrackedChange SCXW226733069 BCX8"><SPAN class="TextRun SCXW226733069 BCX8" data-contrast="none"><SPAN class="NormalTextRun SCXW226733069 BCX8">The original purpose of the<SPAN>&nbsp;</SPAN></SPAN><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/AuditLogs/StsRefreshTokenModification.yaml" target="_self" rel="noopener noreferrer"><SPAN class="NormalTextRun SpellingErrorV2 SCXW226733069 BCX8 DefaultHighlightTransition">STSRefreshTokenModification</SPAN></A><SPAN class="NormalTextRun SCXW226733069 BCX8"><SPAN>&nbsp;</SPAN>low severity, hunting-only query was to demonstrate an event that has token validity time periods in it and demonstrate how one could monitor for anomalous/edited tokens. We have determined this event will only fire on the manual expiration of the<SPAN>&nbsp;</SPAN></SPAN><SPAN class="NormalTextRun SpellingErrorV2 SCXW226733069 BCX8">StsRefreshToken</SPAN><SPAN class="NormalTextRun SCXW226733069 BCX8"><SPAN>&nbsp;</SPAN>by an admin (or the user). These types of events are most often generated when legitimate administrators troubleshoot frequent AAD (Azure AD) user sign-ins. To avoid any confusion with<SPAN>&nbsp;</SPAN></SPAN><SPAN class="NormalTextRun SpellingErrorV2 SCXW226733069 BCX8">Solorigate</SPAN><SPAN class="NormalTextRun SCXW226733069 BCX8"><SPAN>&nbsp;</SPAN>investigation and hunting, we have removed this section from the blog.</SPAN></SPAN></SPAN></P>
<P>&nbsp;</P>
<P>Another such activity is adding access to the Service Principal or Application.&nbsp; If a threat actor obtains access to an Application Administrator account, they may configure alternate authentication mechanisms for direct access to any of the scopes and services available to the Service Principal. With these privileges, the actor can add alternative authentication material for direct access to resources using this credential.</P>
<UL>
<LI>Identify where the&nbsp;<SPAN>verify KeyCredential</SPAN> has<STRONG> been updated</STRONG> with&nbsp;<A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/NewAppOrServicePrincipalCredential.yaml" target="_self" rel="noopener noreferrer"><SPAN>New access credential added to Application or Service Principal</SPAN>.</A></LI>
</UL>
<P><FONT size="1 2 3 4 5 6 7" color="#993300">Updated 12/20/2020</FONT></P>
<UL>
<LI>Identify where the&nbsp;<SPAN>verify KeyCredential <STRONG>was not present</STRONG> and has now has had its <A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/FirstAppOrServicePrincipalCredential.yaml" target="_self" rel="noopener noreferrer">First access credential added to Application or Service Principal where no credential was present</A>.</SPAN></LI>
</UL>
<P>&nbsp;</P>
<div class="lia-spoiler-container"><a class="lia-spoiler-link" href="#community-1995095-" rel="nofollow noopener noreferrer">Spoiler</a><noscript> (Highlight to read)</noscript><div class="lia-spoiler-border"><div class="lia-spoiler-content">
<P><STRONG>New access credential added to Application or Service Principal</STRONG><BR />let auditLookback = 1h;<BR />AuditLogs<BR />| where TimeGenerated &gt; ago(auditLookback)<BR />| where OperationName has_any ("Add service principal", "Certificates and secrets management") // captures "Add service principal", "Add service principal credentials", and "Update application – Certificates and secrets management" events<BR />| where Result =~ "success"<BR />| mv-expand target = TargetResources<BR />| where tostring(InitiatedBy.user.userPrincipalName) has "@" or tostring(InitiatedBy.app.displayName) has "@"<BR />| extend targetDisplayName = tostring(TargetResources[0].displayName)<BR />| extend targetId = tostring(TargetResources[0].id)<BR />| extend targetType = tostring(TargetResources[0].type)<BR />| extend keyEvents = TargetResources[0].modifiedProperties<BR />| mv-expand keyEvents<BR />| where keyEvents.displayName =~ "KeyDescription"<BR />| extend new_value_set = parse_json(tostring(keyEvents.newValue))<BR />| extend old_value_set = parse_json(tostring(keyEvents.oldValue))<BR />| where old_value_set != "[]"<BR />| extend diff = set_difference(new_value_set, old_value_set)<BR />| where isnotempty(diff)<BR />| parse diff with * "KeyIdentifier=" keyIdentifier:string ",KeyType=" keyType:string ",KeyUsage=" keyUsage:string ",DisplayName=" keyDisplayName:string "]" *<BR />| where keyUsage == "Verify" or keyUsage == ""<BR />| extend UserAgent = iff(AdditionalDetails[0].key == "User-Agent",tostring(AdditionalDetails[0].value),"")<BR />| extend InitiatingUserOrApp = iff(isnotempty(InitiatedBy.user.userPrincipalName),tostring(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.app.displayName))<BR />| extend InitiatingIpAddress = iff(isnotempty(InitiatedBy.user.ipAddress), tostring(InitiatedBy.user.ipAddress), tostring(InitiatedBy.app.ipAddress))<BR />// The below line is currently commented out but Azure Sentinel users can modify this query to show only Application or only Service Principal events in their environment<BR />//| where targetType =~ "Application" // or targetType =~ "ServicePrincipal"<BR />| project-away diff, new_value_set, old_value_set<BR />| project-reorder TimeGenerated, OperationName, InitiatingUserOrApp, InitiatingIpAddress, UserAgent, targetDisplayName, targetId, targetType, keyDisplayName, keyType, keyUsage, keyIdentifier, CorrelationId, TenantId<BR />| extend timestamp = TimeGenerated, AccountCustomEntity = InitiatingUserOrApp, IPCustomEntity = InitiatingIpAddress<BR /><BR /></P>
<P><STRONG>First access credential added to Application or Service Principal where no credential was present</STRONG><BR />let auditLookback = 1h;<BR />AuditLogs<BR />| where TimeGenerated &gt; ago(auditLookback)<BR />| where OperationName has_any ("Add service principal", "Certificates and secrets management") // captures "Add service principal", "Add service principal credentials", and "Update application – Certificates and secrets management" events<BR />| where Result =~ "success"<BR />| mv-expand target = TargetResources<BR />| where tostring(InitiatedBy.user.userPrincipalName) has "@" or tostring(InitiatedBy.app.displayName) has "@"<BR />| extend targetDisplayName = tostring(TargetResources[0].displayName)<BR />| extend targetId = tostring(TargetResources[0].id)<BR />| extend targetType = tostring(TargetResources[0].type)<BR />| extend keyEvents = TargetResources[0].modifiedProperties<BR />| mv-expand keyEvents<BR />| where keyEvents.displayName =~ "KeyDescription"<BR />| extend new_value_set = parse_json(tostring(keyEvents.newValue))<BR />| extend old_value_set = parse_json(tostring(keyEvents.oldValue))<BR />| where old_value_set == "[]"<BR />| parse new_value_set with * "KeyIdentifier=" keyIdentifier:string ",KeyType=" keyType:string ",KeyUsage=" keyUsage:string ",DisplayName=" keyDisplayName:string "]" *<BR />| where keyUsage == "Verify" or keyUsage == ""<BR />| extend UserAgent = iff(AdditionalDetails[0].key == "User-Agent",tostring(AdditionalDetails[0].value),"")<BR />| extend InitiatingUserOrApp = iff(isnotempty(InitiatedBy.user.userPrincipalName),tostring(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.app.displayName))<BR />| extend InitiatingIpAddress = iff(isnotempty(InitiatedBy.user.ipAddress), tostring(InitiatedBy.user.ipAddress), tostring(InitiatedBy.app.ipAddress))<BR />// The below line is currently commented out but Azure Sentinel users can modify this query to show only Application or only Service Principal events in their environment<BR />//| where targetType =~ "Application" // or targetType =~ "ServicePrincipal"<BR />| project-away new_value_set, old_value_set<BR />| project-reorder TimeGenerated, OperationName, InitiatingUserOrApp, InitiatingIpAddress, UserAgent, targetDisplayName, targetId, targetType, keyDisplayName, keyType, keyUsage, keyIdentifier, CorrelationId, TenantId<BR />| extend timestamp = TimeGenerated, AccountCustomEntity = InitiatingUserOrApp, IPCustomEntity = InitiatingIpAddress</P>
</div><noscript><div class="lia-spoiler-noscript-container"><div class="lia-spoiler-noscript-content">
New access credential added to Application or Service Principallet auditLookback = 1h;AuditLogs| where TimeGenerated &gt; ago(auditLookback)| where OperationName has_any ("Add service principal", "Certificates and secrets management") // captures "Add service principal", "Add service principal credentials", and "Update application – Certificates and secrets management" events| where Result =~ "success"| mv-expand target = TargetResources| where tostring(InitiatedBy.user.userPrincipalName) has "@" or tostring(InitiatedBy.app.displayName) has "@"| extend targetDisplayName = tostring(TargetResources[0].displayName)| extend targetId = tostring(TargetResources[0].id)| extend targetType = tostring(TargetResources[0].type)| extend keyEvents = TargetResources[0].modifiedProperties| mv-expand keyEvents| where keyEvents.displayName =~ "KeyDescription"| extend new_value_set = parse_json(tostring(keyEvents.newValue))| extend old_value_set = parse_json(tostring(keyEvents.oldValue))| where old_value_set != "[]"| extend diff = set_difference(new_value_set, old_value_set)| where isnotempty(diff)| parse diff with * "KeyIdentifier=" keyIdentifier:string ",KeyType=" keyType:string ",KeyUsage=" keyUsage:string ",DisplayName=" keyDisplayName:string "]" *| where keyUsage == "Verify" or keyUsage == ""| extend UserAgent = iff(AdditionalDetails[0].key == "User-Agent",tostring(AdditionalDetails[0].value),"")| extend InitiatingUserOrApp = iff(isnotempty(InitiatedBy.user.userPrincipalName),tostring(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.app.displayName))| extend InitiatingIpAddress = iff(isnotempty(InitiatedBy.user.ipAddress), tostring(InitiatedBy.user.ipAddress), tostring(InitiatedBy.app.ipAddress))// The below line is currently commented out but Azure Sentinel users can modify this query to show only Application or only Service Principal events in their environment//| where targetType =~ "Application" // or targetType =~ "ServicePrincipal"| project-away diff, new_value_set, old_value_set| project-reorder TimeGenerated, OperationName, InitiatingUserOrApp, InitiatingIpAddress, UserAgent, targetDisplayName, targetId, targetType, keyDisplayName, keyType, keyUsage, keyIdentifier, CorrelationId, TenantId| extend timestamp = TimeGenerated, AccountCustomEntity = InitiatingUserOrApp, IPCustomEntity = InitiatingIpAddress
First access credential added to Application or Service Principal where no credential was presentlet auditLookback = 1h;AuditLogs| where TimeGenerated &gt; ago(auditLookback)| where OperationName has_any ("Add service principal", "Certificates and secrets management") // captures "Add service principal", "Add service principal credentials", and "Update application – Certificates and secrets management" events| where Result =~ "success"| mv-expand target = TargetResources| where tostring(InitiatedBy.user.userPrincipalName) has "@" or tostring(InitiatedBy.app.displayName) has "@"| extend targetDisplayName = tostring(TargetResources[0].displayName)| extend targetId = tostring(TargetResources[0].id)| extend targetType = tostring(TargetResources[0].type)| extend keyEvents = TargetResources[0].modifiedProperties| mv-expand keyEvents| where keyEvents.displayName =~ "KeyDescription"| extend new_value_set = parse_json(tostring(keyEvents.newValue))| extend old_value_set = parse_json(tostring(keyEvents.oldValue))| where old_value_set == "[]"| parse new_value_set with * "KeyIdentifier=" keyIdentifier:string ",KeyType=" keyType:string ",KeyUsage=" keyUsage:string ",DisplayName=" keyDisplayName:string "]" *| where keyUsage == "Verify" or keyUsage == ""| extend UserAgent = iff(AdditionalDetails[0].key == "User-Agent",tostring(AdditionalDetails[0].value),"")| extend InitiatingUserOrApp = iff(isnotempty(InitiatedBy.user.userPrincipalName),tostring(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.app.displayName))| extend InitiatingIpAddress = iff(isnotempty(InitiatedBy.user.ipAddress), tostring(InitiatedBy.user.ipAddress), tostring(InitiatedBy.app.ipAddress))// The below line is currently commented out but Azure Sentinel users can modify this query to show only Application or only Service Principal events in their environment//| where targetType =~ "Application" // or targetType =~ "ServicePrincipal"| project-away new_value_set, old_value_set| project-reorder TimeGenerated, OperationName, InitiatingUserOrApp, InitiatingIpAddress, UserAgent, targetDisplayName, targetId, targetType, keyDisplayName, keyType, keyUsage, keyIdentifier, CorrelationId, TenantId| extend timestamp = TimeGenerated, AccountCustomEntity = InitiatingUserOrApp, IPCustomEntity = InitiatingIpAddress
</div></div></noscript></div></div>
<H6 id="community-1995095-toc-hId--1351576908"><FONT size="1 2 3 4 5 6 7" color="#993300">Updated 12/19/2020</FONT></H6>
<P>This threat actor has been observed using applications to read users mailboxes within a target environment. To help identify this activity MSTIC has created a <A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/MailPermissionsAddedToApplication.yaml" target="_self" rel="noopener noreferrer">hunting query</A> that looks for applications that have been granted mailbox read permissions followed by consent to this application. Whilst this may uncover legitimate applications hunters should validate applications granted mail read permissions genuinely require them.</P>
<div class="lia-spoiler-container"><a class="lia-spoiler-link" href="#community-1995095-" rel="nofollow noopener noreferrer">Spoiler</a><noscript> (Highlight to read)</noscript><div class="lia-spoiler-border"><div class="lia-spoiler-content">AuditLogs<BR />| where Category =~ "ApplicationManagement"<BR />| where ActivityDisplayName =~ "Add delegated permission grant"<BR />| where Result =~ "success"<BR />| where tostring(InitiatedBy.user.userPrincipalName) has "@" or tostring(InitiatedBy.app.displayName) has "@"<BR />| extend props = parse_json(tostring(TargetResources[0].modifiedProperties))<BR />| mv-expand props<BR />| extend UserAgent = tostring(AdditionalDetails[0].value)<BR />| extend InitiatingUser = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)<BR />| extend UserIPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)<BR />| extend DisplayName = tostring(props.displayName)<BR />| extend Permissions = tostring(parse_json(tostring(props.newValue)))<BR />| where Permissions has_any ("Mail.Read", "Mail.ReadWrite")<BR />| extend PermissionsAddedTo = tostring(TargetResources[0].displayName)<BR />| extend Type = tostring(TargetResources[0].type)<BR />| project-away props<BR />| join kind=leftouter(<BR />AuditLogs<BR />| where ActivityDisplayName has "Consent to application"<BR />| extend AppName = tostring(TargetResources[0].displayName)<BR />| extend AppId = tostring(TargetResources[0].id)<BR />| project AppName, AppId, CorrelationId) on CorrelationId<BR />| project-reorder TimeGenerated, OperationName, InitiatingUser, UserIPAddress, UserAgent, PermissionsAddedTo, Permissions, AppName, AppId, CorrelationId<BR />| extend timestamp = TimeGenerated, AccountCustomEntity = InitiatingUser, IPCustomEntity = UserIPAddress</div><noscript><div class="lia-spoiler-noscript-container"><div class="lia-spoiler-noscript-content">AuditLogs| where Category =~ "ApplicationManagement"| where ActivityDisplayName =~ "Add delegated permission grant"| where Result =~ "success"| where tostring(InitiatedBy.user.userPrincipalName) has "@" or tostring(InitiatedBy.app.displayName) has "@"| extend props = parse_json(tostring(TargetResources[0].modifiedProperties))| mv-expand props| extend UserAgent = tostring(AdditionalDetails[0].value)| extend InitiatingUser = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)| extend UserIPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)| extend DisplayName = tostring(props.displayName)| extend Permissions = tostring(parse_json(tostring(props.newValue)))| where Permissions has_any ("Mail.Read", "Mail.ReadWrite")| extend PermissionsAddedTo = tostring(TargetResources[0].displayName)| extend Type = tostring(TargetResources[0].type)| project-away props| join kind=leftouter(AuditLogs| where ActivityDisplayName has "Consent to application"| extend AppName = tostring(TargetResources[0].displayName)| extend AppId = tostring(TargetResources[0].id)| project AppName, AppId, CorrelationId) on CorrelationId| project-reorder TimeGenerated, OperationName, InitiatingUser, UserIPAddress, UserAgent, PermissionsAddedTo, Permissions, AppName, AppId, CorrelationId| extend timestamp = TimeGenerated, AccountCustomEntity = InitiatingUser, IPCustomEntity = UserIPAddress</div></div></noscript></div></div>
<P>It’s also advised to hunt for application consents for unexpected applications, particularly where they provide offline access to data or other high value access;</P>
<UL>
<LI><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/MaliciousOAuthApp_O365AttackToolkit.yaml" target="_self" rel="noopener noreferrer">Suspicious application consent similar to O365 Attack Toolkit</A></LI>
<LI><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/SuspiciousOAuthApp_OfflineAccess.yaml" target="_self" rel="noopener noreferrer">Suspicious application consent for offline access</A></LI>
</UL>
<H6 id="community-1995095-toc-hId-1135935925"><FONT size="1 2 3 4 5 6 7" color="#993300">Updated 12/17/2020 (moved location)</FONT></H6>
<P>In addition to Azure AD pre-compromise logon hunting it is also possible to monitor for logons attempting to use invalid key material. This can help identify attempted logons using stolen key material made after key material has been rotated. This can be done by querying SigninLogs in Azure Sentinel where the ResultType is 5000811. <STRONG>Please note</STRONG> that if you roll your token signing certificate, there will be expected activity when searching on the above.</P>
<P>&nbsp;</P>
<H2 id="community-1995095-toc-hId--399877955">Recon and Remote Execution</H2>
<P><FONT size="1 2 3 4 5 6 7" color="#993300">Updated 12/27/2020</FONT></P>
<P>The adversary will often attempt to access on-prem systems to gain further insight and mapping of the environment.&nbsp; As described in the <STRONG>Resulting hands-on-keyboard attack</STRONG> section of the&nbsp;<A href="https://www.microsoft.com/security/blog/2020/12/18/analyzing-solorigate-the-compromised-dll-file-that-started-a-sophisticated-cyberattack-and-how-microsoft-defender-helps-protect/" target="_self" rel="noopener noreferrer">Analyzing Solorigate blog by Microsoft</A>, attackers renamed windows administrative tools like adfind.exe which were then used for domain enumeration. An example of the process execution command like can look like this:</P>
<TABLE border="1" width="100%">
<TBODY>
<TR>
<TD width="100%">C:\Windows\system32\cmd.exe /C csrss.exe -h breached.contoso.com -f (name=”Domain Admins”) member -list | csrss.exe -h breached.contoso.com -f objectcategory=* &gt; .\Mod\mod1.log</TD>
</TR>
</TBODY>
</TABLE>
<P><BR />We have provided a query in the <A href="https://github.com/Azure/Azure-Sentinel" target="_self" rel="noopener noreferrer">Azure Sentinel Github</A> which will help in detecting the <A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/Suspicious_enumeration_using_adfind.yaml" target="_self" rel="noopener noreferrer">command line patterns related to ADFind usage.</A> You can customize this query to look at your specific DC/ADFS servers.</P>
<div class="lia-spoiler-container"><a class="lia-spoiler-link" href="#community-1995095-" rel="nofollow noopener noreferrer">Spoiler</a><noscript> (Highlight to read)</noscript><div class="lia-spoiler-border"><div class="lia-spoiler-content">let startdate = 1d;<BR />let lookupwindow = 2m;<BR />let threshold = 3; //number of commandlines in the set below<BR />let DCADFSServersList = dynamic (["DCServer01", "DCServer02", "ADFSServer01"]); // Enter a reference list of hostnames for your DC/ADFS servers<BR />let tokens = dynamic(["objectcategory","domainlist","dcmodes","adinfo","trustdmp","computers_pwdnotreqd","Domain Admins", "objectcategory=person", "objectcategory=computer", "objectcategory=*"]);<BR />SecurityEvent<BR />//| where Computer in (DCADFSServersList) // Uncomment to limit it to your DC/ADFS servers list if specified above or any pattern in hostnames (startswith, matches regex, etc).<BR />| where TimeGenerated between (ago(startdate) .. now())<BR />| where EventID == 4688<BR />| where CommandLine has_any (tokens)<BR />| where CommandLine matches regex "(.*)&gt;(.*)"<BR />| summarize Commandlines = make_set(CommandLine), LastObserved=max(TimeGenerated) by bin(TimeGenerated, lookupwindow), Account, Computer, ParentProcessName, NewProcessName<BR />| extend Count = array_length(Commandlines)<BR />| where Count &gt; threshold</div><noscript><div class="lia-spoiler-noscript-container"><div class="lia-spoiler-noscript-content">let startdate = 1d;let lookupwindow = 2m;let threshold = 3; //number of commandlines in the set belowlet DCADFSServersList = dynamic (["DCServer01", "DCServer02", "ADFSServer01"]); // Enter a reference list of hostnames for your DC/ADFS serverslet tokens = dynamic(["objectcategory","domainlist","dcmodes","adinfo","trustdmp","computers_pwdnotreqd","Domain Admins", "objectcategory=person", "objectcategory=computer", "objectcategory=*"]);SecurityEvent//| where Computer in (DCADFSServersList) // Uncomment to limit it to your DC/ADFS servers list if specified above or any pattern in hostnames (startswith, matches regex, etc).| where TimeGenerated between (ago(startdate) .. now())| where EventID == 4688| where CommandLine has_any (tokens)| where CommandLine matches regex "(.*)&gt;(.*)"| summarize Commandlines = make_set(CommandLine), LastObserved=max(TimeGenerated) by bin(TimeGenerated, lookupwindow), Account, Computer, ParentProcessName, NewProcessName| extend Count = array_length(Commandlines)| where Count &gt; threshold</div></div></noscript></div></div>
<P>On the remote execution side, there is a pattern that can be identified related to using alternate credentials than the currently logged on user, such as when using the RUN AS feature on a Windows system and passing in explicit credentials.&nbsp; We have released a query that will identify when execution is occurring via&nbsp;<A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/MultipleExplicitCredentialUsage4648Events.yaml" target="_self" rel="noopener noreferrer">multiple explicit credentials</A> against remote targets.&nbsp; This requires that <A href="https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4648" target="_self" rel="noopener noreferrer">Windows Event 4648</A> is being collected as part of Azure Sentinel.</P>
<P>&nbsp;</P>
<div class="lia-spoiler-container"><a class="lia-spoiler-link" href="#community-1995095-" rel="nofollow noopener noreferrer">Spoiler</a><noscript> (Highlight to read)</noscript><div class="lia-spoiler-border"><div class="lia-spoiler-content">let WellKnownLocalSIDs = "S-1-5-[0-9][0-9]$";<BR />let protocols = dynamic(['cifs', 'ldap', 'RPCSS', 'host' , 'HTTP', 'RestrictedKrbHost', 'TERMSRV', 'msomsdksvc', 'mssqlsvc']);<BR />SecurityEvent<BR />| where TimeGenerated &gt;= ago(1d)<BR />| where EventID == 4648<BR />| where SubjectUserSid != 'S-1-0-0' // this is the Nobody SID which really means No security principal was included.<BR />| where not(SubjectUserSid matches regex WellKnownLocalSIDs) //excluding system account/service account as this is generally normal<BR />| where TargetInfo has '/' //looking for only items that indicate an interesting protocol is included<BR />| where Computer !has tostring(split(TargetServerName,'$')[0])<BR />| where TargetAccount !~ tostring(split(SubjectAccount,'$')[0])<BR />| extend TargetInfoProtocol = tolower(split(TargetInfo, '/')[0]), TargetInfoMachine = toupper(split(TargetInfo, '/')[1])<BR />| extend TargetAccount = tolower(TargetAccount), SubjectAccount = tolower(SubjectAccount)<BR />| extend UncommonProtocol = case(not(TargetInfoProtocol has_any (protocols)), TargetInfoProtocol, 'NotApplicable')<BR />| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), AccountsUsedCount = dcount(TargetAccount), AccountsUsed = make_set(TargetAccount), TargetMachineCount = dcount(TargetInfoMachine), <BR />TargetMachines = make_set(TargetInfoMachine), TargetProtocols = dcount(TargetInfoProtocol), Protocols = make_set(TargetInfoProtocol), Processes = make_set(Process) by Computer, SubjectAccount, UncommonProtocol<BR />| where TargetMachineCount &gt; 1 or UncommonProtocol != 'NotApplicable'<BR />| extend ProtocolCount = array_length(Protocols)<BR />| extend ProtocolScore = case(<BR />Protocols has 'rpcss' and Protocols has 'host' and Protocols has 'cifs', 10, //observed in Solorigate and depending on which are used together the higher the score<BR />Protocols has 'rpcss' and Protocols has 'host', 5,<BR />Protocols has 'rpcss' and Protocols has 'cifs', 5,<BR />Protocols has 'host' and Protocols has 'cifs', 5,<BR />Protocols has 'ldap' or Protocols has 'rpcss' or Protocols has 'host' or Protocols has 'cifs', 1, //ldap is more commonly seen in general, this was also seen with Solorigate but not usually to the same machines as the others above<BR />UncommonProtocol != 'NotApplicable', 3,<BR />0 //other protocols may be of interest, but in relation to observations for enumeration/execution in Solorigate they receive 0<BR />)<BR />| extend Score = ProtocolScore + ProtocolCount + AccountsUsedCount<BR />| where Score &gt;= 9 or (UncommonProtocol != 'NotApplicable' and Score &gt;= 4) // Score must be 9 or better as this will include 5 points for atleast 2 of the interesting protocols + the count of protocols (min 2) + the number of accounts used for execution (min 2) = min of 9 OR score must be 4 or greater for an uncommon protocol<BR />| extend TimePeriod = EndTime - StartTime //This identifies the time between start and finish for the use of the explicit credentials, shorter time period may indicate scripted executions<BR />| project-away UncommonProtocol<BR />| extend timestamp = StartTime, AccountCustomEntity = SubjectAccount, HostCustomEntity = Computer<BR />| order by Score desc</div><noscript><div class="lia-spoiler-noscript-container"><div class="lia-spoiler-noscript-content">let WellKnownLocalSIDs = "S-1-5-[0-9][0-9]$";let protocols = dynamic(['cifs', 'ldap', 'RPCSS', 'host' , 'HTTP', 'RestrictedKrbHost', 'TERMSRV', 'msomsdksvc', 'mssqlsvc']);SecurityEvent| where TimeGenerated &gt;= ago(1d)| where EventID == 4648| where SubjectUserSid != 'S-1-0-0' // this is the Nobody SID which really means No security principal was included.| where not(SubjectUserSid matches regex WellKnownLocalSIDs) //excluding system account/service account as this is generally normal| where TargetInfo has '/' //looking for only items that indicate an interesting protocol is included| where Computer !has tostring(split(TargetServerName,'$')[0])| where TargetAccount !~ tostring(split(SubjectAccount,'$')[0])| extend TargetInfoProtocol = tolower(split(TargetInfo, '/')[0]), TargetInfoMachine = toupper(split(TargetInfo, '/')[1])| extend TargetAccount = tolower(TargetAccount), SubjectAccount = tolower(SubjectAccount)| extend UncommonProtocol = case(not(TargetInfoProtocol has_any (protocols)), TargetInfoProtocol, 'NotApplicable')| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), AccountsUsedCount = dcount(TargetAccount), AccountsUsed = make_set(TargetAccount), TargetMachineCount = dcount(TargetInfoMachine), TargetMachines = make_set(TargetInfoMachine), TargetProtocols = dcount(TargetInfoProtocol), Protocols = make_set(TargetInfoProtocol), Processes = make_set(Process) by Computer, SubjectAccount, UncommonProtocol| where TargetMachineCount &gt; 1 or UncommonProtocol != 'NotApplicable'| extend ProtocolCount = array_length(Protocols)| extend ProtocolScore = case(Protocols has 'rpcss' and Protocols has 'host' and Protocols has 'cifs', 10, //observed in Solorigate and depending on which are used together the higher the scoreProtocols has 'rpcss' and Protocols has 'host', 5,Protocols has 'rpcss' and Protocols has 'cifs', 5,Protocols has 'host' and Protocols has 'cifs', 5,Protocols has 'ldap' or Protocols has 'rpcss' or Protocols has 'host' or Protocols has 'cifs', 1, //ldap is more commonly seen in general, this was also seen with Solorigate but not usually to the same machines as the others aboveUncommonProtocol != 'NotApplicable', 3,0 //other protocols may be of interest, but in relation to observations for enumeration/execution in Solorigate they receive 0)| extend Score = ProtocolScore + ProtocolCount + AccountsUsedCount| where Score &gt;= 9 or (UncommonProtocol != 'NotApplicable' and Score &gt;= 4) // Score must be 9 or better as this will include 5 points for atleast 2 of the interesting protocols + the count of protocols (min 2) + the number of accounts used for execution (min 2) = min of 9 OR score must be 4 or greater for an uncommon protocol| extend TimePeriod = EndTime - StartTime //This identifies the time between start and finish for the use of the explicit credentials, shorter time period may indicate scripted executions| project-away UncommonProtocol| extend timestamp = StartTime, AccountCustomEntity = SubjectAccount, HostCustomEntity = Computer| order by Score desc</div></div></noscript></div></div>
<P>&nbsp;</P>
<H2 id="community-1995095-toc-hId-2087634878">Data <SPAN>Access</SPAN></H2>
<P>Accessing confidential data is one of the primary motives of this attack. Data access for the attacker here relied on leveraging minted SAML tokens to access user files/email stored in the cloud via compromised AppIds. One way to detect this is when a user or application signs in using <A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SigninLogs/AzureAADPowerShellAnomaly.yaml" target="_blank" rel="noopener noreferrer">Azure Active Directory PowerShell to access non-Active Directory resources</A>.</P>
<P>&nbsp;</P>
<P>Microsoft Graph is one way that the attacker may be seen accessing resources and can help find what the attacker may have accessed using the Service principal Azure Active Directory sign-in logs. If you have data in your Log analytics you could easily plot a chart to see what anomalous activity is happening in your environment that is leveraging the graph.&nbsp;</P>
<P><FONT size="1 2 3 4 5 6 7" color="#993300">Updated 12/17/2020</FONT></P>
<P><STRONG>Note</STRONG> that this data type in Azure Sentinel below is only available when additional Diagnostic Logging is enabled on the workspace.&nbsp; Please see the instructions in the expandable section below.</P>
<div class="lia-spoiler-container"><a class="lia-spoiler-link" href="#community-1995095-" rel="nofollow noopener noreferrer">Spoiler</a><noscript> (Highlight to read)</noscript><div class="lia-spoiler-border"><div class="lia-spoiler-content">The AADServicePrincipalSigninLogs datatype will not be available in Azure Sentinel unless it is configured under Diagnostic Settings.&nbsp; Please see screenshots below the query.<BR /><BR />AADServicePrincipalSignInLogs<BR />| where TimeGenerated &gt; ago(90d)<BR />| where ResourceDisplayName == "Microsoft Graph"<BR />| where ServicePrincipalId == "524c43c4-c484-4f7a-bd44-89d4a0d8aeab"<BR />| summarize count() by bin(TimeGenerated, 1h)<BR />| render timechart<BR /><BR />To enable Service Principal Signin Logging, do the following:<BR /><BR /><span class="lia-media-object lia-media-is-inline lia-media-size-large" data-image-alt="DiagnosticSettings1.png"><button class="lia-media-unstyled-btn" type="button" aria-haspopup="true" aria-label="Enlarge Image DiagnosticSettings1.png"><img src="https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTUyNmk0QUEzQjFDRjM0MkI0OTU4?image-dimensions=705x384&amp;revision=57" width="705" height="384" alt="DiagnosticSettings1.png" /></button></span>
<P> </P>
<span class="lia-media-object lia-media-is-inline lia-media-size-large" data-image-alt="DiagnosticSettings2.png"><button class="lia-media-unstyled-btn" type="button" aria-haspopup="true" aria-label="Enlarge Image DiagnosticSettings2.png"><img src="https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTUyN2lBRTZGNDQ4NjhDMUFCNDM5?image-dimensions=893x244&amp;revision=57" width="893" height="244" alt="DiagnosticSettings2.png" /></button></span>
<P> </P>
<span class="lia-media-object lia-media-is-inline lia-media-size-large" data-image-alt="DiagnosticSettings3.png"><button class="lia-media-unstyled-btn" type="button" aria-haspopup="true" aria-label="Enlarge Image DiagnosticSettings3.png"><img src="https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTUyOGlDQjYxQ0JGRTVCNjE3MUQ3?image-dimensions=800x517&amp;revision=57" width="800" height="517" alt="DiagnosticSettings3.png" /></button></span>
<P> </P>
</div><noscript><div class="lia-spoiler-noscript-container"><div class="lia-spoiler-noscript-content">The AADServicePrincipalSigninLogs datatype will not be available in Azure Sentinel unless it is configured under Diagnostic Settings.&nbsp; Please see screenshots below the query.AADServicePrincipalSignInLogs| where TimeGenerated &gt; ago(90d)| where ResourceDisplayName == "Microsoft Graph"| where ServicePrincipalId == "524c43c4-c484-4f7a-bd44-89d4a0d8aeab"| summarize count() by bin(TimeGenerated, 1h)| render timechartTo enable Service Principal Signin Logging, do the following:
 

 

 
</div></div></noscript></div></div>
<P><FONT size="1 2 3 4 5 6 7" color="#993300">Updated 12/21/2020</FONT></P>
<P>Additionally, below is a sample query that brings out some of the logons to Azure AD where multi factor authentication was satisfied by token based logons versus MFA via phone auth or the like. It is possible this could produce many results, so additional tuning is suggested for your environment.</P>
<div class="lia-spoiler-container"><a class="lia-spoiler-link" href="#community-1995095-" rel="nofollow noopener noreferrer">Spoiler</a><noscript> (Highlight to read)</noscript><div class="lia-spoiler-border"><div class="lia-spoiler-content">SigninLogs<BR />| where TimeGenerated &gt; ago(30d)<BR />| where ResultType == 0<BR />| extend additionalDetails = tostring(Status.additionalDetails)<BR />| summarize make_set(additionalDetails), min(TimeGenerated), max(TimeGenerated) by IPAddress, UserPrincipalName<BR />| where array_length(set_additionalDetails) == 2<BR />| where (set_additionalDetails[1] == "MFA requirement satisfied by claim in the token" and set_additionalDetails[0] == "MFA requirement satisfied by claim provided by external provider") or (set_additionalDetails[0] == "MFA requirement satisfied by claim in the token" and set_additionalDetails[1] == "MFA requirement satisfied by claim provided by external provider")<BR />//| project IPAddress, UserPrincipalName, min_TimeGenerated, max_TimeGenerated</div><noscript><div class="lia-spoiler-noscript-container"><div class="lia-spoiler-noscript-content">SigninLogs| where TimeGenerated &gt; ago(30d)| where ResultType == 0| extend additionalDetails = tostring(Status.additionalDetails)| summarize make_set(additionalDetails), min(TimeGenerated), max(TimeGenerated) by IPAddress, UserPrincipalName| where array_length(set_additionalDetails) == 2| where (set_additionalDetails[1] == "MFA requirement satisfied by claim in the token" and set_additionalDetails[0] == "MFA requirement satisfied by claim provided by external provider") or (set_additionalDetails[0] == "MFA requirement satisfied by claim in the token" and set_additionalDetails[1] == "MFA requirement satisfied by claim provided by external provider")//| project IPAddress, UserPrincipalName, min_TimeGenerated, max_TimeGenerated</div></div></noscript></div></div>
<P><FONT size="1 2 3 4 5 6 7" color="#993300">UPDATED 12/17/2020</FONT></P>
<P>This attack also used Virtual Private Servers (VPS) hosts to access victim networks and can be used in conjunction with the query above. Both MSTIC and FireEye have reported attacker logon events coming from network ranges associated with VPS providers. In order to highlight these logons, MSTIC has created a new hunting query -&nbsp;<SPAN><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SigninLogs/Signins-From-VPS-Providers.yaml" target="_self" rel="noopener noreferrer">Signins From VPS Providers -&nbsp;</A></SPAN>that looks for successful signins from network ranges associated with VPS providers. This is joined with the above query, the new query looks for IPs that only display sign-ins based on tokens and not other MFA options, although this could be removed if wanted. The list of VPS ranges in the query is not comprehensive and there is significant potential for false positives so results should be investigated before responding, however it can provide very effective signal. Combining the query below with data that list VPS server ranges will make this a high-confidence hunting query.&nbsp;</P>
<P>&nbsp;</P>
<P>In relation to the VPS servers section above, the previously mentioned workbook has a section that shows successful user signins from VPS (Virtual Private Server) providers where only tokens were used to authenticate. This uses the new KQL operator <A href="https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/ipv4-lookup-plugin" target="_blank" rel="noopener noreferrer">ipv4_lookup</A> to evaluate if a login came from a known VPS provider network range. This operator can alternatively be used to look for all logons not coming from known ranges should your environment have a common logon source.</P>
<P>&nbsp;</P>
<H2 aria-level="2" id="community-1995095-toc-hId-280180415"><SPAN data-contrast="none">Data Exfiltration</SPAN><SPAN data-ccp-props="{&quot;201341983&quot;:0,&quot;335559738&quot;:40,&quot;335559739&quot;:0,&quot;335559740&quot;:259}">&nbsp;</SPAN></H2>
<P aria-level="2"><FONT size="1 2 3 4 5 6 7" color="#993300">Updated 12/20/2020</FONT></P>
<P><SPAN data-contrast="auto">Email data has been observed as a target for the&nbsp;</SPAN><SPAN data-contrast="auto">Solorigate</SPAN><SPAN data-contrast="auto">&nbsp;attackers, one way to monitor for potential suspicious access is to look for anomalous&nbsp;</SPAN><SPAN data-contrast="auto">MailItemsAccessed</SPAN><SPAN data-contrast="auto">&nbsp;volumes. MSTIC has created a specific hunting query to&nbsp;identify <A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/OfficeActivity/AnomolousUserAccessingOtherUsersMailbox.yaml" target="_self" rel="noopener noreferrer">Anomolous User Accessing Other Users Mailbox</A>&nbsp;which can help to identify malicious activity related to this attack. Additionally, MSTIC previously created&nbsp;a more generic detection - <A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/OfficeActivity/MailItemsAccessedTimeSeries.yaml" target="_self" rel="noopener noreferrer">Exchange workflow MailItemsAccessed operation anomaly</A> - which</SPAN><SPAN data-contrast="auto">&nbsp;looks for time series based anomalies in&nbsp;</SPAN><SPAN data-contrast="auto">MailItemsAccessed</SPAN><SPAN data-contrast="auto">&nbsp;events in the&nbsp;</SPAN><SPAN data-contrast="auto">OfficeActivity</SPAN><SPAN data-contrast="auto">&nbsp;log.</SPAN><SPAN data-ccp-props="{&quot;201341983&quot;:0,&quot;335559739&quot;:160,&quot;335559740&quot;:259}">&nbsp;</SPAN></P>
<div class="lia-spoiler-container"><a class="lia-spoiler-link" href="#community-1995095-" rel="nofollow noopener noreferrer">Spoiler</a><noscript> (Highlight to read)</noscript><div class="lia-spoiler-border"><div class="lia-spoiler-content"><STRONG>Anomalous access to other user's mailboxes</STRONG><BR />let timeframe = 14d;<BR />let user_threshold = 1;<BR />let folder_threshold = 5;<BR />OfficeActivity<BR />| where TimeGenerated &gt; ago(timeframe)<BR />| where Operation =~ "MailItemsAccessed" <BR />| where ResultStatus =~ "Succeeded"<BR />| mv-expand parse_json(Folders)<BR />| extend folders = tostring(Folders.Path)<BR />| where tolower(MailboxOwnerUPN) != tolower(UserId)<BR />| extend ClientIP = iif(Client_IPAddress startswith "[", extract("\\[([^\\]]*)", 1, Client_IPAddress), Client_IPAddress)<BR />| summarize make_set(folders), make_set(ClientInfoString), make_set(ClientIP), make_set(MailboxGuid), make_set(MailboxOwnerUPN) by UserId<BR />| extend folder_count = array_length(set_folders)<BR />| extend user_count = array_length(set_MailboxGuid)<BR />| where user_count &gt; user_threshold or folder_count &gt; folder_threshold<BR />| sort by user_count desc<BR />| project-reorder UserId, user_count, folder_count, set_MailboxOwnerUPN, set_ClientIP, set_ClientInfoString, set_folder<BR /><BR /><STRONG>Exchange workflow MailItemsAccessed operation anomaly</STRONG><BR />let starttime = 14d;<BR />let endtime = 1d;<BR />let timeframe = 1h;<BR />let scorethreshold = 1.5;<BR />let percentthreshold = 50;<BR />// Preparing the time series data aggregated hourly count of MailItemsAccessd Operation in the form of multi-value array to use with time series anomaly function.<BR />let TimeSeriesData =<BR />OfficeActivity<BR />| where TimeGenerated between (startofday(ago(starttime))..startofday(ago(endtime)))<BR />| where OfficeWorkload=~ "Exchange" and Operation =~ "MailItemsAccessed" and ResultStatus =~ "Succeeded"<BR />| project TimeGenerated, Operation, MailboxOwnerUPN<BR />| make-series Total=count() on TimeGenerated from startofday(ago(starttime)) to startofday(ago(endtime)) step timeframe;<BR />let TimeSeriesAlerts = TimeSeriesData<BR />| extend (anomalies, score, baseline) = series_decompose_anomalies(Total, scorethreshold, -1, 'linefit')<BR />| mv-expand Total to typeof(double), TimeGenerated to typeof(datetime), anomalies to typeof(double), score to typeof(double), baseline to typeof(long)<BR />| where anomalies &gt; 0<BR />| project TimeGenerated, Total, baseline, anomalies, score;<BR />// Joining the flagged outlier from the previous step with the original dataset to present contextual information<BR />// during the anomalyhour to analysts to conduct investigation or informed decisions.<BR />TimeSeriesAlerts | where TimeGenerated &gt; ago(2d)<BR />// Join against base logs since specified timeframe to retrive records associated with the hour of anomoly<BR />| join (<BR />OfficeActivity<BR />| where TimeGenerated &gt; ago(2d)<BR />| where OfficeWorkload=~ "Exchange" and Operation =~ "MailItemsAccessed" and ResultStatus =~ "Succeeded"<BR />) on TimeGenerated</div><noscript><div class="lia-spoiler-noscript-container"><div class="lia-spoiler-noscript-content">Anomalous access to other user's mailboxeslet timeframe = 14d;let user_threshold = 1;let folder_threshold = 5;OfficeActivity| where TimeGenerated &gt; ago(timeframe)| where Operation =~ "MailItemsAccessed" | where ResultStatus =~ "Succeeded"| mv-expand parse_json(Folders)| extend folders = tostring(Folders.Path)| where tolower(MailboxOwnerUPN) != tolower(UserId)| extend ClientIP = iif(Client_IPAddress startswith "[", extract("\\[([^\\]]*)", 1, Client_IPAddress), Client_IPAddress)| summarize make_set(folders), make_set(ClientInfoString), make_set(ClientIP), make_set(MailboxGuid), make_set(MailboxOwnerUPN) by UserId| extend folder_count = array_length(set_folders)| extend user_count = array_length(set_MailboxGuid)| where user_count &gt; user_threshold or folder_count &gt; folder_threshold| sort by user_count desc| project-reorder UserId, user_count, folder_count, set_MailboxOwnerUPN, set_ClientIP, set_ClientInfoString, set_folderExchange workflow MailItemsAccessed operation anomalylet starttime = 14d;let endtime = 1d;let timeframe = 1h;let scorethreshold = 1.5;let percentthreshold = 50;// Preparing the time series data aggregated hourly count of MailItemsAccessd Operation in the form of multi-value array to use with time series anomaly function.let TimeSeriesData =OfficeActivity| where TimeGenerated between (startofday(ago(starttime))..startofday(ago(endtime)))| where OfficeWorkload=~ "Exchange" and Operation =~ "MailItemsAccessed" and ResultStatus =~ "Succeeded"| project TimeGenerated, Operation, MailboxOwnerUPN| make-series Total=count() on TimeGenerated from startofday(ago(starttime)) to startofday(ago(endtime)) step timeframe;let TimeSeriesAlerts = TimeSeriesData| extend (anomalies, score, baseline) = series_decompose_anomalies(Total, scorethreshold, -1, 'linefit')| mv-expand Total to typeof(double), TimeGenerated to typeof(datetime), anomalies to typeof(double), score to typeof(double), baseline to typeof(long)| where anomalies &gt; 0| project TimeGenerated, Total, baseline, anomalies, score;// Joining the flagged outlier from the previous step with the original dataset to present contextual information// during the anomalyhour to analysts to conduct investigation or informed decisions.TimeSeriesAlerts | where TimeGenerated &gt; ago(2d)// Join against base logs since specified timeframe to retrive records associated with the hour of anomoly| join (OfficeActivity| where TimeGenerated &gt; ago(2d)| where OfficeWorkload=~ "Exchange" and Operation =~ "MailItemsAccessed" and ResultStatus =~ "Succeeded") on TimeGenerated</div></div></noscript></div></div>
<P><FONT size="1 2 3 4 5 6 7" color="#993300">Updated 12/19/2020</FONT></P>
<P>Targeting of email data has also been observed by other industry members including <A href="https://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/" target="_blank" rel="noopener nofollow noreferrer">Volexity</A> who reported attackers using PowerShell commands to export on premise Exchange mailboxes and then hosting those files on OWA servers in order to exfiltrate them.</P>
<P>MSTIC has created detections to identify this activity at both the <A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/W3CIISLog/SuspectedMailBoxExportHostonOWA.yaml" target="_self" rel="noopener noreferrer">OWA server</A> and <A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/HostExportingMailboxAndRemovingExport.yaml" target="_self" rel="noopener noreferrer">attacking host level</A> through IIS logs, and PowerShell command line logging.</P>
<P>&nbsp;</P>
<P>OWA exfiltration:</P>
<div class="lia-spoiler-container"><a class="lia-spoiler-link" href="#community-1995095-" rel="nofollow noopener noreferrer">Spoiler</a><noscript> (Highlight to read)</noscript><div class="lia-spoiler-border"><div class="lia-spoiler-content">let excludeIps = dynamic(["127.0.0.1", "::1"]);<BR />let scriptingExt = dynamic(["aspx", "ashx", "asp"]);<BR />W3CIISLog<BR />| where csUriStem contains "/owa/"<BR />//The actor pulls a file back but won't send it any URI params<BR />| where isempty(csUriQuery)<BR />| extend file_ext = tostring(split(csUriStem, ".")[-1])<BR />//Giving your file a known scripting extension will throw an error<BR />//rather than just serving the file as it will try to interpret the script<BR />| where file_ext !in~ (scriptingExt)<BR />//The actor was seen using image files, but we go wider in case they change this behaviour<BR />//| where file_ext in~ ("jpg", "jpeg", "png", "bmp")<BR />| extend file_name = tostring(split(csUriStem, "/")[-1])<BR />| where file_name != ""<BR />| where cIP !in~ (excludeIps)<BR />| project file_ext, csUriStem, file_name, Computer, cIP, sIP, TenantId, TimeGenerated<BR />| summarize dcount(cIP), AccessingIPs=make_set(cIP), AccessTimes=make_set(TimeGenerated), Access=count() by TenantId, file_name, Computer, csUriStem<BR />//Collection of the exfiltration will occur only once, lets check for 2 accesses in case they mess up<BR />//Tailor this for hunting<BR />| where Access &lt;= 2 and dcount_cIP == 1</div><noscript><div class="lia-spoiler-noscript-container"><div class="lia-spoiler-noscript-content">let excludeIps = dynamic(["127.0.0.1", "::1"]);let scriptingExt = dynamic(["aspx", "ashx", "asp"]);W3CIISLog| where csUriStem contains "/owa/"//The actor pulls a file back but won't send it any URI params| where isempty(csUriQuery)| extend file_ext = tostring(split(csUriStem, ".")[-1])//Giving your file a known scripting extension will throw an error//rather than just serving the file as it will try to interpret the script| where file_ext !in~ (scriptingExt)//The actor was seen using image files, but we go wider in case they change this behaviour//| where file_ext in~ ("jpg", "jpeg", "png", "bmp")| extend file_name = tostring(split(csUriStem, "/")[-1])| where file_name != ""| where cIP !in~ (excludeIps)| project file_ext, csUriStem, file_name, Computer, cIP, sIP, TenantId, TimeGenerated| summarize dcount(cIP), AccessingIPs=make_set(cIP), AccessTimes=make_set(TimeGenerated), Access=count() by TenantId, file_name, Computer, csUriStem//Collection of the exfiltration will occur only once, lets check for 2 accesses in case they mess up//Tailor this for hunting| where Access &lt;= 2 and dcount_cIP == 1</div></div></noscript></div></div>
<P>Host creating then removing mailbox export requests using PowerShell cmdlets:</P>
<div class="lia-spoiler-container"><a class="lia-spoiler-link" href="#community-1995095-" rel="nofollow noopener noreferrer">Spoiler</a><noscript> (Highlight to read)</noscript><div class="lia-spoiler-border"><div class="lia-spoiler-content">
<P>&nbsp; // Adjust the timeframe to change the window events need to occur within to alert</P>
<P>&nbsp; let timeframe = 1h;</P>
<P>&nbsp; SecurityEvent</P>
<P>&nbsp; | where Process in ("powershell.exe", "cmd.exe")</P>
<P>&nbsp; | where CommandLine contains 'New-MailboxExportRequest'</P>
<P>&nbsp; | summarize by Computer, timekey = bin(TimeGenerated, timeframe), CommandLine, SubjectUserName</P>
<P>&nbsp;&nbsp;| join kind=inner (SecurityEvent</P>
<P>&nbsp; | where Process in ("powershell.exe", "cmd.exe")</P>
<P>&nbsp; | where CommandLine contains 'Remove-MailboxExportRequest'</P>
<P>&nbsp; | summarize by Computer, timekey = bin(TimeGenerated, timeframe), CommandLine, SubjectUserName) on Computer, timekey, SubjectUserName</P>
<P>&nbsp; | extend commands = pack_array(CommandLine1, CommandLine)</P>
<P>&nbsp; | summarize by timekey, Computer, tostring(commands), SubjectUserName</P>
<P>&nbsp; | project-reorder timekey, Computer, SubjectUserName, ['commands']</P>
<P>&nbsp; | extend HostCustomEntity = Computer, AccountCustomEntity = SubjectUserName</P>
</div><noscript><div class="lia-spoiler-noscript-container"><div class="lia-spoiler-noscript-content">
&nbsp; // Adjust the timeframe to change the window events need to occur within to alert
&nbsp; let timeframe = 1h;
&nbsp; SecurityEvent
&nbsp; | where Process in ("powershell.exe", "cmd.exe")
&nbsp; | where CommandLine contains 'New-MailboxExportRequest'
&nbsp; | summarize by Computer, timekey = bin(TimeGenerated, timeframe), CommandLine, SubjectUserName
&nbsp;&nbsp;| join kind=inner (SecurityEvent
&nbsp; | where Process in ("powershell.exe", "cmd.exe")
&nbsp; | where CommandLine contains 'Remove-MailboxExportRequest'
&nbsp; | summarize by Computer, timekey = bin(TimeGenerated, timeframe), CommandLine, SubjectUserName) on Computer, timekey, SubjectUserName
&nbsp; | extend commands = pack_array(CommandLine1, CommandLine)
&nbsp; | summarize by timekey, Computer, tostring(commands), SubjectUserName
&nbsp; | project-reorder timekey, Computer, SubjectUserName, ['commands']
&nbsp; | extend HostCustomEntity = Computer, AccountCustomEntity = SubjectUserName
</div></div></noscript></div></div>
<P aria-level="2"><FONT size="1 2 3 4 5 6 7" color="#993300">Updated 12/28/2020</FONT></P>
<P aria-level="2">Email Delegation and later delegate access is another tactic that has been observed to gain access to user's mailboxes.&nbsp; We have a previously created a method to discover&nbsp;<SPAN><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/OfficeActivity/nonowner_MailboxLogin.yaml" target="_self" rel="noopener noreferrer">Non-owner mailbox login activity</A> that can be applied here to help identify when delegates are inappropriately access email.</SPAN></P>
<P aria-level="2">&nbsp;</P>
<div class="lia-spoiler-container"><a class="lia-spoiler-link" href="#community-1995095-" rel="nofollow noopener noreferrer">Spoiler</a><noscript> (Highlight to read)</noscript><div class="lia-spoiler-border"><div class="lia-spoiler-content">let timeframe = 1d;<BR />OfficeActivity<BR />| where TimeGenerated &gt;= ago(timeframe)<BR />| where Operation == "MailboxLogin" and Logon_Type != "Owner" <BR />| summarize count(), min(TimeGenerated), max(TimeGenerated) by Operation, OrganizationName, UserType, UserId, MailboxOwnerUPN, Logon_Type<BR />| extend timestamp = min_TimeGenerated, AccountCustomEntity = UserId</div><noscript><div class="lia-spoiler-noscript-container"><div class="lia-spoiler-noscript-content">let timeframe = 1d;OfficeActivity| where TimeGenerated &gt;= ago(timeframe)| where Operation == "MailboxLogin" and Logon_Type != "Owner" | summarize count(), min(TimeGenerated), max(TimeGenerated) by Operation, OrganizationName, UserType, UserId, MailboxOwnerUPN, Logon_Type| extend timestamp = min_TimeGenerated, AccountCustomEntity = UserId</div></div></noscript></div></div>
<P>&nbsp;</P>
<H2 aria-level="2" id="community-1995095-toc-hId--1527274048"><SPAN data-contrast="none">Domain&nbsp;</SPAN><SPAN data-contrast="none">Hunting</SPAN></H2>
<P aria-level="2"><FONT size="1 2 3 4 5 6 7" color="#993300"><SPAN data-contrast="none">Updated 12/17/2020</SPAN></FONT></P>
<H4 id="community-1995095-toc-hId-1218404223"><SPAN data-contrast="auto">Domain specific</SPAN></H4>
<P><SPAN data-contrast="auto">MSTIC has collated network based&nbsp;IoCs&nbsp;from&nbsp;</SPAN><A href="https://blogs.microsoft.com/on-the-issues/2020/12/13/customers-protect-nation-state-cyberattacks/" target="_blank" rel="noopener noreferrer"><SPAN data-contrast="none">MSTIC</SPAN></A><SPAN data-contrast="auto">,&nbsp;</SPAN><A href="https://github.com/fireeye/sunburst_countermeasures/blob/main/indicator_release/Indicator_Release_NBIs.csv" target="_blank" rel="noopener noreferrer"><SPAN data-contrast="none">FireEye</SPAN></A><SPAN data-contrast="auto">&nbsp;and&nbsp;</SPAN><A href="https://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/" target="_blank" rel="noopener nofollow noreferrer"><SPAN data-contrast="none">Volexity</SPAN></A><SPAN data-contrast="auto">&nbsp;to create a network based&nbsp;IoC&nbsp;detection -&nbsp;<A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/MultipleDataSources/Solorigate-Network-Beacon.yaml" target="_self" rel="noopener noreferrer">Solorigate Network Beacon</A> -&nbsp;</SPAN><SPAN data-contrast="auto">that leverage multiple network focused data sources within Azure Sentinel.&nbsp;</SPAN><SPAN data-ccp-props="{&quot;201341983&quot;:0,&quot;335559739&quot;:160,&quot;335559740&quot;:259}">&nbsp;</SPAN></P>
<div class="lia-spoiler-container"><a class="lia-spoiler-link" href="#community-1995095-" rel="nofollow noopener noreferrer">Spoiler</a><noscript> (Highlight to read)</noscript><div class="lia-spoiler-border"><div class="lia-spoiler-content">let domains = dynamic(["incomeupdate.com","zupertech.com","databasegalore.com","panhardware.com","avsvmcloud.com","digitalcollege.org","freescanonline.com","deftsecurity.com","thedoccloud.com","virtualdataserver.com","lcomputers.com","webcodez.com","globalnetworkissues.com","kubecloud.com","seobundlekit.com","solartrackingsystem.net","virtualwebdata.com"]);<BR />let timeframe = 6h;<BR />(union isfuzzy=true<BR />(CommonSecurityLog <BR />| where TimeGenerated &gt;= ago(timeframe) <BR />| parse Message with * '(' DNSName ')' * <BR />| where DNSName in~ (domains) or DestinationHostName has_any (domains) or RequestURL has_any(domains)<BR />| extend AccountCustomEntity = SourceUserID, HostCustomEntity = DeviceName, IPCustomEntity = SourceIP<BR />),<BR />(DnsEvents <BR />| where TimeGenerated &gt;= ago(timeframe) <BR />| extend DNSName = Name<BR />| where isnotempty(DNSName)<BR />| where DNSName in~ (domains)<BR />| extend IPCustomEntity = ClientIP<BR />),<BR />(VMConnection <BR />| where TimeGenerated &gt;= ago(timeframe) <BR />| parse RemoteDnsCanonicalNames with * '["' DNSName '"]' *<BR />| where isnotempty(DNSName)<BR />| where DNSName in~ (domains)<BR />| extend IPCustomEntity = RemoteIp<BR />),<BR />(DeviceNetworkEvents <BR />| where TimeGenerated &gt;= ago(timeframe) <BR />| where isnotempty(RemoteUrl) <BR />| where RemoteUrl has_any (domains) <BR />| extend DNSName = RemoteUrl<BR />| extend IPCustomEntity = RemoteIP <BR />| extend HostCustomEntity = DeviceName <BR />) <BR />)</div><noscript><div class="lia-spoiler-noscript-container"><div class="lia-spoiler-noscript-content">let domains = dynamic(["incomeupdate.com","zupertech.com","databasegalore.com","panhardware.com","avsvmcloud.com","digitalcollege.org","freescanonline.com","deftsecurity.com","thedoccloud.com","virtualdataserver.com","lcomputers.com","webcodez.com","globalnetworkissues.com","kubecloud.com","seobundlekit.com","solartrackingsystem.net","virtualwebdata.com"]);let timeframe = 6h;(union isfuzzy=true(CommonSecurityLog | where TimeGenerated &gt;= ago(timeframe) | parse Message with * '(' DNSName ')' * | where DNSName in~ (domains) or DestinationHostName has_any (domains) or RequestURL has_any(domains)| extend AccountCustomEntity = SourceUserID, HostCustomEntity = DeviceName, IPCustomEntity = SourceIP),(DnsEvents | where TimeGenerated &gt;= ago(timeframe) | extend DNSName = Name| where isnotempty(DNSName)| where DNSName in~ (domains)| extend IPCustomEntity = ClientIP),(VMConnection | where TimeGenerated &gt;= ago(timeframe) | parse RemoteDnsCanonicalNames with * '["' DNSName '"]' *| where isnotempty(DNSName)| where DNSName in~ (domains)| extend IPCustomEntity = RemoteIp),(DeviceNetworkEvents | where TimeGenerated &gt;= ago(timeframe) | where isnotempty(RemoteUrl) | where RemoteUrl has_any (domains) | extend DNSName = RemoteUrl| extend IPCustomEntity = RemoteIP | extend HostCustomEntity = DeviceName ) )</div></div></noscript></div></div>
<H4 aria-level="2" id="community-1995095-toc-hId--589050240"><SPAN data-contrast="none">Domain DGA</SPAN></H4>
<P><SPAN data-contrast="auto">The&nbsp;</SPAN><SPAN data-contrast="auto">avsvmcloud[.]com</SPAN><SPAN data-contrast="auto">&nbsp;has been observed by several organizations as making DGA like subdomain queries as part of C2 activities. MSTIC have generated a hunting query -&nbsp;<A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/DnsEvents/Solorigate-DNS-Pattern.yaml" target="_self" rel="noopener noreferrer">Solorigate DNS Pattern</A> -&nbsp;</SPAN><SPAN data-contrast="auto">to look for similar&nbsp;</SPAN><SPAN data-contrast="auto">patterns of activity from other domains that might help identify other potential C2 sources.</SPAN></P>
<div class="lia-spoiler-container"><a class="lia-spoiler-link" href="#community-1995095-" rel="nofollow noopener noreferrer">Spoiler</a><noscript> (Highlight to read)</noscript><div class="lia-spoiler-border"><div class="lia-spoiler-content">let cloudApiTerms = dynamic(["api", "east", "west"]);<BR />DnsEvents<BR />| where IPAddresses != "" and IPAddresses != "127.0.0.1"<BR />| where Name endswith ".com" or Name endswith ".org" or Name endswith ".net"<BR />| extend domain_split = split(Name, ".")<BR />| where tostring(domain_split[-5]) != "" and tostring(domain_split[-6]) == ""<BR />| extend sub_domain = tostring(domain_split[0])<BR />| where sub_domain !contains "-"<BR />| extend sub_directories = strcat(domain_split[-3], " ", domain_split[-4])<BR />| where sub_directories has_any(cloudApiTerms)<BR />//Based on sample communications the subdomain is always between 20 and 30 bytes<BR />| where strlen(domain_split) &lt; 32 or strlen(domain_split) &gt; 20<BR />| extend domain = strcat(tostring(domain_split[-2]), ".", tostring(domain_split[-1])) <BR />| extend subdomain_no = countof(sub_domain, @"(\d)", "regex")<BR />| extend subdomain_ch = countof(sub_domain, @"([a-z])", "regex")<BR />| where subdomain_no &gt; 1<BR />| extend percentage_numerical = toreal(subdomain_no) / toreal(strlen(sub_domain)) * 100<BR />| where percentage_numerical &lt; 50 and percentage_numerical &gt; 5<BR />| summarize count(), make_set(Name), FirstSeen=min(TimeGenerated), LastSeen=max(TimeGenerated) by Name<BR />| order by count_ asc</div><noscript><div class="lia-spoiler-noscript-container"><div class="lia-spoiler-noscript-content">let cloudApiTerms = dynamic(["api", "east", "west"]);DnsEvents| where IPAddresses != "" and IPAddresses != "127.0.0.1"| where Name endswith ".com" or Name endswith ".org" or Name endswith ".net"| extend domain_split = split(Name, ".")| where tostring(domain_split[-5]) != "" and tostring(domain_split[-6]) == ""| extend sub_domain = tostring(domain_split[0])| where sub_domain !contains "-"| extend sub_directories = strcat(domain_split[-3], " ", domain_split[-4])| where sub_directories has_any(cloudApiTerms)//Based on sample communications the subdomain is always between 20 and 30 bytes| where strlen(domain_split) &lt; 32 or strlen(domain_split) &gt; 20| extend domain = strcat(tostring(domain_split[-2]), ".", tostring(domain_split[-1])) | extend subdomain_no = countof(sub_domain, @"(\d)", "regex")| extend subdomain_ch = countof(sub_domain, @"([a-z])", "regex")| where subdomain_no &gt; 1| extend percentage_numerical = toreal(subdomain_no) / toreal(strlen(sub_domain)) * 100| where percentage_numerical &lt; 50 and percentage_numerical &gt; 5| summarize count(), make_set(Name), FirstSeen=min(TimeGenerated), LastSeen=max(TimeGenerated) by Name| order by count_ asc</div></div></noscript></div></div>
<H4 id="community-1995095-toc-hId-1898462593"><SPAN class="TextRun SCXW219610271 BCX8" data-contrast="auto"><SPAN class="NormalTextRun SCXW219610271 BCX8">Encoded Domain</SPAN></SPAN></H4>
<P><SPAN class="TextRun SCXW219610271 BCX8" data-contrast="auto"><SPAN class="NormalTextRun SCXW219610271 BCX8">In<SPAN>&nbsp;</SPAN></SPAN><SPAN class="NormalTextRun ContextualSpellingAndGrammarErrorV2 SCXW219610271 BCX8">addition</SPAN></SPAN><SPAN class="TextRun SCXW219610271 BCX8" data-contrast="auto"><SPAN class="NormalTextRun SCXW219610271 BCX8"><SPAN>&nbsp;</SPAN>we have another query - <A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/DnsEvents/Solorigate-Encoded-Domain-URL.yaml" target="_self" rel="noopener noreferrer"><SPAN>Solorigate Encoded Domain in URL</SPAN></A>-<SPAN>&nbsp;</SPAN></SPAN></SPAN><SPAN class="TextRun SCXW219610271 BCX8" data-contrast="auto"><SPAN class="NormalTextRun SCXW219610271 BCX8">that takes the encoding pattern the DGA uses, encodes the domains seen in<SPAN>&nbsp;</SPAN></SPAN><SPAN class="NormalTextRun SpellingErrorV2 SCXW219610271 BCX8">signin</SPAN><SPAN class="NormalTextRun SCXW219610271 BCX8"><SPAN>&nbsp;</SPAN>logs and then looks for those patterns in DNS logs. This can help identify other C2 domains using the same encoding scheme.</SPAN></SPAN><SPAN class="EOP SCXW219610271 BCX8" data-ccp-props="{&quot;201341983&quot;:0,&quot;335559739&quot;:160,&quot;335559740&quot;:240}">&nbsp;</SPAN></P>
<div class="lia-spoiler-container"><a class="lia-spoiler-link" href="#community-1995095-" rel="nofollow noopener noreferrer">Spoiler</a><noscript> (Highlight to read)</noscript><div class="lia-spoiler-border"><div class="lia-spoiler-content">let dictionary = dynamic(["r","q","3","g","s","a","l","t","6","u","1","i","y","f","z","o","p","5","7","2","d","4","9","b","n","x","8","c","v","m","k","e","w","h","j"]);<BR />let regex_bad_domains = SigninLogs<BR />//Collect domains from tenant from signin logs<BR />| where TimeGenerated &gt; ago(1d)<BR />| extend domain = tostring(split(UserPrincipalName, "@", 1)[0])<BR />| where domain != ""<BR />| summarize by domain<BR />| extend split_domain = split(domain, ".")<BR />//This cuts back on domains such as na.contoso.com by electing not to match on the "na" portion<BR />| extend target_string = iff(strlen(split_domain[0]) &lt;= 2, split_domain[1], split_domain[0])<BR />| extend target_string = split(target_string, "-")<BR />| mv-expand target_string<BR />//Rip all of the alphanumeric out of the domain name<BR />| extend string_chars = extract_all(@"([a-z0-9])", tostring(target_string))<BR />//Guid for tracking our data<BR />| extend guid = new_guid()<BR />//Expand to get all of the individual chars from the domain<BR />| mv-expand string_chars<BR />| extend chars = tostring(string_chars)<BR />//Conduct computation to encode the domain as per actor spec<BR />| extend computed_char = array_index_of(dictionary, chars)<BR />| extend computed_char = dictionary[(computed_char + 4) % array_length(dictionary)] <BR />| summarize make_list(computed_char) by guid, domain<BR />| extend target_encoded = tostring(strcat_array(list_computed_char, ""))<BR />//These are probably too small, but can be edited (expect FP's when going too small)<BR />| where strlen(target_encoded) &gt; 5<BR />| distinct target_encoded<BR />| summarize make_set(target_encoded)<BR />//Key to join to DNS<BR />| extend key = 1;<BR />DnsEvents<BR />| where TimeGenerated &gt; ago(1d)<BR />| summarize by Name<BR />| extend key = 1<BR />//For each DNS query join the malicious domain list<BR />| join kind=inner ( <BR />regex_bad_domains<BR />) on key<BR />| project-away key<BR />//Expand each malicious key for each DNS query observed<BR />| mv-expand set_target_encoded<BR />//IndexOf allows us to fuzzy match on the substring<BR />| extend match = indexof(Name, set_target_encoded)<BR />| where match &gt; -1</div><noscript><div class="lia-spoiler-noscript-container"><div class="lia-spoiler-noscript-content">let dictionary = dynamic(["r","q","3","g","s","a","l","t","6","u","1","i","y","f","z","o","p","5","7","2","d","4","9","b","n","x","8","c","v","m","k","e","w","h","j"]);let regex_bad_domains = SigninLogs//Collect domains from tenant from signin logs| where TimeGenerated &gt; ago(1d)| extend domain = tostring(split(UserPrincipalName, "@", 1)[0])| where domain != ""| summarize by domain| extend split_domain = split(domain, ".")//This cuts back on domains such as na.contoso.com by electing not to match on the "na" portion| extend target_string = iff(strlen(split_domain[0]) &lt;= 2, split_domain[1], split_domain[0])| extend target_string = split(target_string, "-")| mv-expand target_string//Rip all of the alphanumeric out of the domain name| extend string_chars = extract_all(@"([a-z0-9])", tostring(target_string))//Guid for tracking our data| extend guid = new_guid()//Expand to get all of the individual chars from the domain| mv-expand string_chars| extend chars = tostring(string_chars)//Conduct computation to encode the domain as per actor spec| extend computed_char = array_index_of(dictionary, chars)| extend computed_char = dictionary[(computed_char + 4) % array_length(dictionary)] | summarize make_list(computed_char) by guid, domain| extend target_encoded = tostring(strcat_array(list_computed_char, ""))//These are probably too small, but can be edited (expect FP's when going too small)| where strlen(target_encoded) &gt; 5| distinct target_encoded| summarize make_set(target_encoded)//Key to join to DNS| extend key = 1;DnsEvents| where TimeGenerated &gt; ago(1d)| summarize by Name| extend key = 1//For each DNS query join the malicious domain list| join kind=inner ( regex_bad_domains) on key| project-away key//Expand each malicious key for each DNS query observed| mv-expand set_target_encoded//IndexOf allows us to fuzzy match on the substring| extend match = indexof(Name, set_target_encoded)| where match &gt; -1</div></div></noscript></div></div>
<H2 id="community-1995095-toc-hId--167157308">Security Service Tampering</H2>
<P><FONT size="1 2 3 4 5 6 7" color="#993300"><SPAN data-contrast="none">Updated 01/19/2021</SPAN></FONT></P>
<P>There has been additional indication that security services are being tampered with to hinder detection and investigation. While this is a common tactic, we felt that we should include this reference. The query is currently written specifically for <A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/PotentialMicrosoftSecurityServicesTampering.yaml" target="_self" rel="noopener noreferrer">Potential Microsoft security services tampering</A>, but can easily be adapted to identify other security services.</P>
<div class="lia-spoiler-container"><a class="lia-spoiler-link" href="#community-1995095-" rel="nofollow noopener noreferrer">Spoiler</a><noscript> (Highlight to read)</noscript><div class="lia-spoiler-border"><div class="lia-spoiler-content">let includeProc = dynamic(["sc.exe","net1.exe","net.exe", "taskkill.exe", "cmd.exe", "powershell.exe"]);<BR />let action = dynamic(["stop","disable", "delete"]);<BR />let service1 = dynamic(['sense', 'windefend', 'mssecflt']);<BR />let service2 = dynamic(['sense', 'windefend', 'mssecflt', 'healthservice']);<BR />let params1 = dynamic(["-DisableRealtimeMonitoring", "-DisableBehaviorMonitoring" ,"-DisableIOAVProtection"]);<BR />let params2 = dynamic(["sgrmbroker.exe", "mssense.exe"]);<BR />let regparams1 = dynamic(['reg add "HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender"', 'reg add "HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Advanced Threat Protection"']);<BR />let regparams2 = dynamic(['ForceDefenderPassiveMode', 'DisableAntiSpyware']);<BR />let regparams3 = dynamic(['sense', 'windefend']);<BR />let regparams4 = dynamic(['demand', 'disabled']);<BR />let regparams5 = dynamic(['reg add "HKLM\\SYSTEM\\CurrentControlSet\\services\\HealthService"', 'reg add "HKLM\\SYSTEM\\CurrentControlSet\\Services\\Sense"', 'reg add "HKLM\\SYSTEM\\CurrentControlSet\\Services\\WinDefend"', 'reg add "HKLM\\SYSTEM\\CurrentControlSet\\Services\\MsSecFlt"', 'reg add "HKLM\\SYSTEM\\CurrentControlSet\\Services\\DiagTrack"', 'reg add "HKLM\\SYSTEM\\CurrentControlSet\\Services\\SgrmBroker"', 'reg add "HKLMSYSTEM\\CurrentControlSet\\Services\\SgrmAgent"', 'reg add "HKLM\\SYSTEM\\CurrentControlSet\\Services\\AATPSensorUpdater"' , 'reg add "HKLM\\SYSTEM\\CurrentControlSet\\Services\\AATPSensor"', 'reg add "HKLM\\SYSTEM\\CurrentControlSet\\Services\\mpssvc"']);<BR />let regparams6 = dynamic(['/d 4','/d "4"','/d 0x00000004']);<BR />let regparams7 = dynamic(['/d 1','/d "1"','/d 0x00000001']);<BR />let timeframe = 1d;<BR />(union isfuzzy=true<BR />(<BR />SecurityEvent<BR />| where TimeGenerated &gt;= ago(timeframe)<BR />| where EventID == 4688<BR />| extend ProcessName = tostring(split(NewProcessName, '\\')[-1])<BR />| where ProcessName in~ (includeProc)<BR />| where (CommandLine has_any (action) and CommandLine has_any (service1)) <BR />or (CommandLine has_any (params1) and CommandLine has 'Set-MpPreference' and CommandLine has '$true')<BR />or (CommandLine has_any (params2) and CommandLine has "/IM") <BR />or (CommandLine has_any (regparams5) and CommandLine has 'Start' and CommandLine has_any (regparams6))<BR />or (CommandLine has_any (regparams1) and CommandLine has_any (regparams2) and CommandLine has_any (regparams7)) <BR />or (CommandLine has "start" and CommandLine has "config" and CommandLine has_any (regparams3) and CommandLine has_any (regparams4))<BR />| project TimeGenerated, Computer, Account, AccountDomain, ProcessName, ProcessNameFullPath = NewProcessName, EventID, Activity, CommandLine, EventSourceName, Type<BR />),<BR />(<BR />Event<BR />| where TimeGenerated &gt;= ago(timeframe)<BR />| where Source =~ "Microsoft-Windows-SENSE"<BR />| where EventID == 87 and ParameterXml in ("&lt;Param&gt;sgrmbroker&lt;/Param&gt;", "&lt;Param&gt;WinDefend&lt;/Param&gt;")<BR />| project TimeGenerated, Computer, Account = UserName, EventID, Activity = RenderedDescription, EventSourceName = Source, Type<BR />),<BR />(<BR />DeviceProcessEvents<BR />| where TimeGenerated &gt;= ago(timeframe)<BR />| where InitiatingProcessFileName in~ (includeProc)<BR />| where (InitiatingProcessCommandLine has_any(action) and InitiatingProcessCommandLine has_any (service2) and InitiatingProcessParentFileName != 'cscript.exe')<BR />or (InitiatingProcessCommandLine has_any (params1) and InitiatingProcessCommandLine has 'Set-MpPreference' and InitiatingProcessCommandLine has '$true') <BR />or (InitiatingProcessCommandLine has_any (params2) and InitiatingProcessCommandLine has "/IM") <BR />or ( InitiatingProcessCommandLine has_any (regparams5) and InitiatingProcessCommandLine has 'Start' and InitiatingProcessCommandLine has_any (regparams6))<BR />or (InitiatingProcessCommandLine has_any (regparams1) and InitiatingProcessCommandLine has_any (regparams2) and InitiatingProcessCommandLine has_any (regparams7)) <BR />or (InitiatingProcessCommandLine has_any("start") and InitiatingProcessCommandLine has "config" and InitiatingProcessCommandLine has_any (regparams3) and InitiatingProcessCommandLine has_any (regparams4))<BR />| extend Account = iff(isnotempty(InitiatingProcessAccountUpn), InitiatingProcessAccountUpn, InitiatingProcessAccountName), Computer = DeviceName<BR />| project TimeGenerated, Computer, Account, AccountDomain, ProcessName = InitiatingProcessFileName, ProcessNameFullPath = FolderPath, Activity = ActionType, CommandLine = InitiatingProcessCommandLine, Type, InitiatingProcessParentFileName<BR />)<BR />)<BR />| extend timestamp = TimeGenerated, AccountCustomEntity = Account, HostCustomEntity = Computer</div><noscript><div class="lia-spoiler-noscript-container"><div class="lia-spoiler-noscript-content">let includeProc = dynamic(["sc.exe","net1.exe","net.exe", "taskkill.exe", "cmd.exe", "powershell.exe"]);let action = dynamic(["stop","disable", "delete"]);let service1 = dynamic(['sense', 'windefend', 'mssecflt']);let service2 = dynamic(['sense', 'windefend', 'mssecflt', 'healthservice']);let params1 = dynamic(["-DisableRealtimeMonitoring", "-DisableBehaviorMonitoring" ,"-DisableIOAVProtection"]);let params2 = dynamic(["sgrmbroker.exe", "mssense.exe"]);let regparams1 = dynamic(['reg add "HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Defender"', 'reg add "HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows Advanced Threat Protection"']);let regparams2 = dynamic(['ForceDefenderPassiveMode', 'DisableAntiSpyware']);let regparams3 = dynamic(['sense', 'windefend']);let regparams4 = dynamic(['demand', 'disabled']);let regparams5 = dynamic(['reg add "HKLM\\SYSTEM\\CurrentControlSet\\services\\HealthService"', 'reg add "HKLM\\SYSTEM\\CurrentControlSet\\Services\\Sense"', 'reg add "HKLM\\SYSTEM\\CurrentControlSet\\Services\\WinDefend"', 'reg add "HKLM\\SYSTEM\\CurrentControlSet\\Services\\MsSecFlt"', 'reg add "HKLM\\SYSTEM\\CurrentControlSet\\Services\\DiagTrack"', 'reg add "HKLM\\SYSTEM\\CurrentControlSet\\Services\\SgrmBroker"', 'reg add "HKLMSYSTEM\\CurrentControlSet\\Services\\SgrmAgent"', 'reg add "HKLM\\SYSTEM\\CurrentControlSet\\Services\\AATPSensorUpdater"' , 'reg add "HKLM\\SYSTEM\\CurrentControlSet\\Services\\AATPSensor"', 'reg add "HKLM\\SYSTEM\\CurrentControlSet\\Services\\mpssvc"']);let regparams6 = dynamic(['/d 4','/d "4"','/d 0x00000004']);let regparams7 = dynamic(['/d 1','/d "1"','/d 0x00000001']);let timeframe = 1d;(union isfuzzy=true(SecurityEvent| where TimeGenerated &gt;= ago(timeframe)| where EventID == 4688| extend ProcessName = tostring(split(NewProcessName, '\\')[-1])| where ProcessName in~ (includeProc)| where (CommandLine has_any (action) and CommandLine has_any (service1)) or (CommandLine has_any (params1) and CommandLine has 'Set-MpPreference' and CommandLine has '$true')or (CommandLine has_any (params2) and CommandLine has "/IM") or (CommandLine has_any (regparams5) and CommandLine has 'Start' and CommandLine has_any (regparams6))or (CommandLine has_any (regparams1) and CommandLine has_any (regparams2) and CommandLine has_any (regparams7)) or (CommandLine has "start" and CommandLine has "config" and CommandLine has_any (regparams3) and CommandLine has_any (regparams4))| project TimeGenerated, Computer, Account, AccountDomain, ProcessName, ProcessNameFullPath = NewProcessName, EventID, Activity, CommandLine, EventSourceName, Type),(Event| where TimeGenerated &gt;= ago(timeframe)| where Source =~ "Microsoft-Windows-SENSE"| where EventID == 87 and ParameterXml in ("&lt;Param&gt;sgrmbroker&lt;/Param&gt;", "&lt;Param&gt;WinDefend&lt;/Param&gt;")| project TimeGenerated, Computer, Account = UserName, EventID, Activity = RenderedDescription, EventSourceName = Source, Type),(DeviceProcessEvents| where TimeGenerated &gt;= ago(timeframe)| where InitiatingProcessFileName in~ (includeProc)| where (InitiatingProcessCommandLine has_any(action) and InitiatingProcessCommandLine has_any (service2) and InitiatingProcessParentFileName != 'cscript.exe')or (InitiatingProcessCommandLine has_any (params1) and InitiatingProcessCommandLine has 'Set-MpPreference' and InitiatingProcessCommandLine has '$true') or (InitiatingProcessCommandLine has_any (params2) and InitiatingProcessCommandLine has "/IM") or ( InitiatingProcessCommandLine has_any (regparams5) and InitiatingProcessCommandLine has 'Start' and InitiatingProcessCommandLine has_any (regparams6))or (InitiatingProcessCommandLine has_any (regparams1) and InitiatingProcessCommandLine has_any (regparams2) and InitiatingProcessCommandLine has_any (regparams7)) or (InitiatingProcessCommandLine has_any("start") and InitiatingProcessCommandLine has "config" and InitiatingProcessCommandLine has_any (regparams3) and InitiatingProcessCommandLine has_any (regparams4))| extend Account = iff(isnotempty(InitiatingProcessAccountUpn), InitiatingProcessAccountUpn, InitiatingProcessAccountName), Computer = DeviceName| project TimeGenerated, Computer, Account, AccountDomain, ProcessName = InitiatingProcessFileName, ProcessNameFullPath = FolderPath, Activity = ActionType, CommandLine = InitiatingProcessCommandLine, Type, InitiatingProcessParentFileName))| extend timestamp = TimeGenerated, AccountCustomEntity = Account, HostCustomEntity = Computer</div></div></noscript></div></div>
<H2 id="community-1995095-toc-hId--1974611771">Microsoft M365 Defender + Azure Sentinel detection correlation</H2>
<P><SPAN class="TextRun SCXW53252412 BCX8" data-contrast="auto"><SPAN class="NormalTextRun SCXW53252412 BCX8">In<SPAN>&nbsp;</SPAN></SPAN><SPAN class="NormalTextRun ContextualSpellingAndGrammarErrorV2 SCXW53252412 BCX8">addition</SPAN><SPAN class="NormalTextRun SCXW53252412 BCX8"><SPAN>&nbsp;</SPAN></SPAN></SPAN><SPAN class="TextRun SCXW53252412 BCX8" data-contrast="auto"><SPAN class="NormalTextRun SCXW53252412 BCX8">we have created a query in Azure Sentinel&nbsp;</SPAN></SPAN><SPAN class="TextRun SCXW53252412 BCX8" data-contrast="auto"><SPAN class="NormalTextRun SCXW53252412 BCX8"><SPAN>-&nbsp;<A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityAlert/Solorigate-Defender-Detections.yaml" target="_self" rel="noopener noreferrer">Solorigate Defender Detections</A> -&nbsp;</SPAN>to collate the range of Defender detections that are now deployed. This query can be used to get an overview of such alerts and the hosts they relate to.</SPAN></SPAN><SPAN class="EOP SCXW53252412 BCX8" data-ccp-props="{&quot;201341983&quot;:0,&quot;335559739&quot;:160,&quot;335559740&quot;:259}">&nbsp;</SPAN></P>
<div class="lia-spoiler-container"><a class="lia-spoiler-link" href="#community-1995095-" rel="nofollow noopener noreferrer">Spoiler</a><noscript> (Highlight to read)</noscript><div class="lia-spoiler-border"><div class="lia-spoiler-content">DeviceInfo<BR />| extend DeviceName = tolower(DeviceName)<BR />| join (SecurityAlert<BR />| where ProviderName =~ "MDATP"<BR />| extend ThreatName = tostring(parse_json(ExtendedProperties).ThreatName)<BR />| where ThreatName has "Solarigate"<BR />| extend HostCustomEntity = tolower(CompromisedEntity)<BR />| take 10) on $left.DeviceName == $right.HostCustomEntity<BR />| project TimeGenerated, DisplayName, ThreatName, CompromisedEntity, PublicIP, MachineGroup, AlertSeverity, Description, LoggedOnUsers, DeviceId, TenantId<BR />| extend timestamp = TimeGenerated, IPCustomEntity = PublicIP</div><noscript><div class="lia-spoiler-noscript-container"><div class="lia-spoiler-noscript-content">DeviceInfo| extend DeviceName = tolower(DeviceName)| join (SecurityAlert| where ProviderName =~ "MDATP"| extend ThreatName = tostring(parse_json(ExtendedProperties).ThreatName)| where ThreatName has "Solarigate"| extend HostCustomEntity = tolower(CompromisedEntity)| take 10) on $left.DeviceName == $right.HostCustomEntity| project TimeGenerated, DisplayName, ThreatName, CompromisedEntity, PublicIP, MachineGroup, AlertSeverity, Description, LoggedOnUsers, DeviceId, TenantId| extend timestamp = TimeGenerated, IPCustomEntity = PublicIP</div></div></noscript></div></div>
<P>&nbsp;</P>
<H2 id="community-1995095-toc-hId-512901062">Conclusion</H2>
<P>Additionally, as a cloud native SIEM Azure Sentinel can not only collect raw data from various disparate logs but it also gets alerts from various security products. For example, M365 Defender has a range of alerts for various attack components like SolarWinds malicious binaries, network traffic to the compromised domains, DNS queries for known patterns associated with SolarWinds compromise that can flow into Sentinel. Combining these alerts with other raw logs and additional data sources provides the security team with additional insights as well as a complete picture of nature and the scope of attack.</P>
<P>&nbsp;</P>
<H2 id="community-1995095-toc-hId--596391460">Appendix</H2>
<P>Many of these queries have been incorporated into the related <A href="https://github.com/Azure/Azure-Sentinel/blob/master/Workbooks/SolarWindsPostCompromiseHunting.json" target="_self" rel="noopener noreferrer">hunting workbook</A>.</P>
<P>List of all Azure Sentinel Queries from each section</P>
<P><FONT size="1 2 3 4 5 6 7" color="#993300"><SPAN data-contrast="none">Updated 01/15/2021</SPAN></FONT></P>
<div class="lia-spoiler-container"><a class="lia-spoiler-link" href="#community-1995095-" rel="nofollow noopener noreferrer">Spoiler</a><noscript> (Highlight to read)</noscript><div class="lia-spoiler-border"><div class="lia-spoiler-content">
<TABLE width="1333px">
<TBODY>
<TR>
<TD width="416px" height="30px"><STRONG>Gaining a foothold</STRONG></TD>
<TD width="917px" height="30px">&nbsp;</TD>
</TR>
<TR>
<TD width="416px" height="30px">SolarWinds Inventory check query</TD>
<TD width="917px" height="30px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/SolarWindsInventory.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/SolarWindsInventory.yaml</A></TD>
</TR>
<TR>
<TD>Solorigate Name Pipe</TD>
<TD><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/SolorigateNamedPipe.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/SolorigateNamedPipe.yaml</A>&nbsp;</TD>
</TR>
<TR>
<TD width="416px" height="30px"><STRONG>Privilege Escalation</STRONG></TD>
<TD width="917px" height="30px">&nbsp;</TD>
</TR>
<TR>
<TD width="416px" height="30px">Hosts with new logons</TD>
<TD width="917px" height="30px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/HostsWithNewLogons.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/HostsWithNewLogons.yaml</A></TD>
</TR>
<TR>
<TD width="416px" height="57px">New user created and added to the built-in administrators group</TD>
<TD width="917px" height="57px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserCreatedAddedToBuiltinAdmins_1d.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserCreatedAddedToBuiltinAdmins_1d.yaml</A></TD>
</TR>
<TR>
<TD width="416px" height="57px">User account added to built in domain local or global group</TD>
<TD width="917px" height="57px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserAccountAddedToPrivlegeGroup_1h.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserAccountAddedToPrivlegeGroup_1h.yaml</A></TD>
</TR>
<TR>
<TD width="416px" height="30px">Tracking Privileged Account Rare Activity</TD>
<TD width="917px" height="30px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/TrackingPrivAccounts.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/TrackingPrivAccounts.yaml</A></TD>
</TR>
<TR>
<TD width="416px" height="30px"><STRONG>ADFS Key Extraction</STRONG></TD>
<TD width="917px" height="30px">&nbsp;</TD>
</TR>
<TR>
<TD width="416px" height="30px">ADFS DKM Master Key Export</TD>
<TD width="917px" height="30px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/MultipleDataSources/ADFS-DKM-MasterKey-Export.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Detections/MultipleDataSources/ADFS-DKM-MasterKey-Export.yaml</A></TD>
</TR>
<TR>
<TD width="416px" height="30px">ADFS Key Export (Sysmon)</TD>
<TD width="917px" height="30px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/ADFSKeyExportSysmon.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/ADFSKeyExportSysmon.yaml</A></TD>
</TR>
<TR>
<TD width="416px" height="30px">Entropy for Processes for a given Host</TD>
<TD width="917px" height="30px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/ProcessEntropy.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/ProcessEntropy.yaml</A></TD>
</TR>
<TR>
<TD width="416px" height="30px">Rare processes run by Service accounts</TD>
<TD width="917px" height="30px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/RareProcbyServiceAccount.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/RareProcbyServiceAccount.yaml</A></TD>
</TR>
<TR>
<TD width="416px" height="30px">Uncommon processes - bottom 5%</TD>
<TD width="917px" height="30px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/uncommon_processes.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/uncommon_processes.yaml</A></TD>
</TR>
<TR>
<TD width="416px" height="30px"><STRONG>Azure Active Directory</STRONG></TD>
<TD width="917px" height="30px">&nbsp;</TD>
</TR>
<TR>
<TD width="416px" height="30px">Modified domain federation trust settings</TD>
<TD width="917px" height="30px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/ADFSDomainTrustMods.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/ADFSDomainTrustMods.yaml</A></TD>
</TR>
<TR>
<TD width="416px" height="57px">New access credential added to Application or Service Principal</TD>
<TD width="917px" height="57px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/NewAppOrServicePrincipalCredential.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/NewAppOrServicePrincipalCredential.yaml</A></TD>
</TR>
<TR>
<TD width="416px" height="57px">First access credential added to Application or Service Principal where no credential was present</TD>
<TD width="917px" height="57px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/FirstAppOrServicePrincipalCredential.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/FirstAppOrServicePrincipalCredential.yaml</A></TD>
</TR>
<TR>
<TD width="416px" height="30px">Mail.Read Permissions Granted to Application</TD>
<TD width="917px" height="30px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/MailPermissionsAddedToApplication.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/MailPermissionsAddedToApplication.yaml</A></TD>
</TR>
<TR>
<TD width="416px" height="57px">Suspicious application consent similar to O365 Attack Toolkit</TD>
<TD width="917px" height="57px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/MaliciousOAuthApp_O365AttackToolkit.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/MaliciousOAuthApp_O365AttackToolkit.yaml</A></TD>
</TR>
<TR>
<TD width="416px" height="30px">Suspicious application consent for offline access</TD>
<TD width="917px" height="30px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/SuspiciousOAuthApp_OfflineAccess.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/SuspiciousOAuthApp_OfflineAccess.yaml</A></TD>
</TR>
<TR>
<TD width="416px" height="30px"><STRONG>Recon and Remote Execution</STRONG></TD>
<TD width="917px" height="30px">&nbsp;</TD>
</TR>
<TR>
<TD width="416px" height="57px">Suspicious enumeration using Adfind tool</TD>
<TD width="917px" height="57px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/Suspicious_enumeration_using_adfind.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/Suspicious_enumeration_using_adfind.yaml</A></TD>
</TR>
<TR>
<TD width="416px" height="57px">Multiple explicit credential usage - 4648 events</TD>
<TD width="917px" height="57px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/MultipleExplicitCredentialUsage4648Events.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/MultipleExplicitCredentialUsage4648Events.yaml</A></TD>
</TR>
<TR>
<TD width="416px" height="30px"><STRONG>Data Access</STRONG></TD>
<TD width="917px" height="30px">&nbsp;</TD>
</TR>
<TR>
<TD width="416px" height="57px">Azure Active Directory PowerShell accessing non-AAD resources</TD>
<TD width="917px" height="57px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SigninLogs/AzureAADPowerShellAnomaly.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SigninLogs/AzureAADPowerShellAnomaly.yaml</A></TD>
</TR>
<TR>
<TD width="416px" height="30px">Signins From VPS Providers</TD>
<TD width="917px" height="30px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SigninLogs/Signins-From-VPS-Providers.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SigninLogs/Signins-From-VPS-Providers.yaml</A></TD>
</TR>
<TR>
<TD width="416px" height="30px"><STRONG>Data Exfiltration</STRONG></TD>
<TD width="917px" height="30px">&nbsp;</TD>
</TR>
<TR>
<TD width="416px" height="57px">Anomalous access to other user's mailboxes</TD>
<TD width="917px" height="57px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/OfficeActivity/AnomolousUserAccessingOtherUsersMailbox.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/OfficeActivity/AnomolousUserAccessingOtherUsersMailbox.yaml</A></TD>
</TR>
<TR>
<TD width="416px" height="57px">Exchange workflow MailItemsAccessed operation anomaly</TD>
<TD width="917px" height="57px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/OfficeActivity/MailItemsAccessedTimeSeries.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Detections/OfficeActivity/MailItemsAccessedTimeSeries.yaml</A></TD>
</TR>
<TR>
<TD width="416px" height="57px">Suspect Mailbox Export on IIS/OWA</TD>
<TD width="917px" height="57px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/W3CIISLog/SuspectedMailBoxExportHostonOWA.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/W3CIISLog/SuspectedMailBoxExportHostonOWA.yaml</A></TD>
</TR>
<TR>
<TD width="416px" height="57px">Host Exporting Mailbox and Removing Export</TD>
<TD width="917px" height="57px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/HostExportingMailboxAndRemovingExport.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/HostExportingMailboxAndRemovingExport.yaml</A></TD>
</TR>
<TR>
<TD width="416px">Non-owner mailbox login activity</TD>
<TD width="917px" height="20" class="xl64" style="height: 15.0pt; width: 48pt;"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/OfficeActivity/nonowner_MailboxLogin.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/OfficeActivity/nonowner_MailboxLogin.yaml</A></TD>
</TR>
<TR>
<TD width="416px" height="30px"><STRONG>Domain Hunting</STRONG></TD>
<TD width="917px" height="30px">&nbsp;</TD>
</TR>
<TR>
<TD width="416px" height="30px">Solorigate Network Beacon</TD>
<TD width="917px" height="30px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/MultipleDataSources/Solorigate-Network-Beacon.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Detections/MultipleDataSources/Solorigate-Network-Beacon.yaml</A></TD>
</TR>
<TR>
<TD width="416px" height="30px">Solorigate DNS Pattern</TD>
<TD width="917px" height="30px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/DnsEvents/Solorigate-DNS-Pattern.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/DnsEvents/Solorigate-DNS-Pattern.yaml</A></TD>
</TR>
<TR>
<TD width="416px" height="30px">Solorigate Encoded Domain in URL</TD>
<TD width="917px" height="30px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/DnsEvents/Solorigate-Encoded-Domain-URL.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/DnsEvents/Solorigate-Encoded-Domain-URL.yaml</A></TD>
</TR>
<TR>
<TD><STRONG>Security Service Tampering</STRONG></TD>
<TD>&nbsp;</TD>
</TR>
<TR>
<TD>Potential Microsoft security services tampering</TD>
<TD><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/PotentialMicrosoftSecurityServicesTampering.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/PotentialMicrosoftSecurityServicesTampering.yaml</A>&nbsp;</TD>
</TR>
<TR>
<TD width="416px" height="30px"><STRONG>M365+Sentinel</STRONG></TD>
<TD width="917px" height="30px">&nbsp;</TD>
</TR>
<TR>
<TD width="416px" height="30px">Solorigate Defender Detections</TD>
<TD width="917px" height="30px"><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityAlert/Solorigate-Defender-Detections.yaml" target="_blank" rel="noopener noreferrer">https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityAlert/Solorigate-Defender-Detections.yaml</A></TD>
</TR>
</TBODY>
</TABLE>
</div><noscript><div class="lia-spoiler-noscript-container"><div class="lia-spoiler-noscript-content">



Gaining a foothold
&nbsp;


SolarWinds Inventory check query
https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/SolarWindsInventory.yaml


Solorigate Name Pipe
https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/SolorigateNamedPipe.yaml&nbsp;


Privilege Escalation
&nbsp;


Hosts with new logons
https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/HostsWithNewLogons.yaml


New user created and added to the built-in administrators group
https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserCreatedAddedToBuiltinAdmins_1d.yaml


User account added to built in domain local or global group
https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserAccountAddedToPrivlegeGroup_1h.yaml


Tracking Privileged Account Rare Activity
https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/TrackingPrivAccounts.yaml


ADFS Key Extraction
&nbsp;


ADFS DKM Master Key Export
https://github.com/Azure/Azure-Sentinel/blob/master/Detections/MultipleDataSources/ADFS-DKM-MasterKey-Export.yaml


ADFS Key Export (Sysmon)
https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/ADFSKeyExportSysmon.yaml


Entropy for Processes for a given Host
https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/ProcessEntropy.yaml


Rare processes run by Service accounts
https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/RareProcbyServiceAccount.yaml


Uncommon processes - bottom 5%
https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/uncommon_processes.yaml


Azure Active Directory
&nbsp;


Modified domain federation trust settings
https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/ADFSDomainTrustMods.yaml


New access credential added to Application or Service Principal
https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/NewAppOrServicePrincipalCredential.yaml


First access credential added to Application or Service Principal where no credential was present
https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/FirstAppOrServicePrincipalCredential.yaml


Mail.Read Permissions Granted to Application
https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/MailPermissionsAddedToApplication.yaml


Suspicious application consent similar to O365 Attack Toolkit
https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/MaliciousOAuthApp_O365AttackToolkit.yaml


Suspicious application consent for offline access
https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/SuspiciousOAuthApp_OfflineAccess.yaml


Recon and Remote Execution
&nbsp;


Suspicious enumeration using Adfind tool
https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/Suspicious_enumeration_using_adfind.yaml


Multiple explicit credential usage - 4648 events
https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/MultipleExplicitCredentialUsage4648Events.yaml


Data Access
&nbsp;


Azure Active Directory PowerShell accessing non-AAD resources
https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SigninLogs/AzureAADPowerShellAnomaly.yaml


Signins From VPS Providers
https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SigninLogs/Signins-From-VPS-Providers.yaml


Data Exfiltration
&nbsp;


Anomalous access to other user's mailboxes
https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/OfficeActivity/AnomolousUserAccessingOtherUsersMailbox.yaml


Exchange workflow MailItemsAccessed operation anomaly
https://github.com/Azure/Azure-Sentinel/blob/master/Detections/OfficeActivity/MailItemsAccessedTimeSeries.yaml


Suspect Mailbox Export on IIS/OWA
https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/W3CIISLog/SuspectedMailBoxExportHostonOWA.yaml


Host Exporting Mailbox and Removing Export
https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/HostExportingMailboxAndRemovingExport.yaml


Non-owner mailbox login activity
https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/OfficeActivity/nonowner_MailboxLogin.yaml


Domain Hunting
&nbsp;


Solorigate Network Beacon
https://github.com/Azure/Azure-Sentinel/blob/master/Detections/MultipleDataSources/Solorigate-Network-Beacon.yaml


Solorigate DNS Pattern
https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/DnsEvents/Solorigate-DNS-Pattern.yaml


Solorigate Encoded Domain in URL
https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/DnsEvents/Solorigate-Encoded-Domain-URL.yaml


Security Service Tampering
&nbsp;


Potential Microsoft security services tampering
https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/PotentialMicrosoftSecurityServicesTampering.yaml&nbsp;


M365+Sentinel
&nbsp;


Solorigate Defender Detections
https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityAlert/Solorigate-Defender-Detections.yaml



</div></div></noscript></div></div>
<H2 id="community-1995095-toc-hId-1891121373">References</H2>
<P><A href="https://blogs.microsoft.com/on-the-issues/2020/12/13/customers-protect-nation-state-cyberattacks/" target="_blank" rel="noopener noreferrer">Recent Nation-State Cyber Attacks</A><SPAN>&nbsp; </SPAN></P>
<P><A href="https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=Behavior:Win32/Solorigate.C!dha&amp;ThreatID=2147771132" target="_blank" rel="noopener noreferrer">Behavior:Win32/Solorigate.C!dha threat description - Microsoft Security Intelligence</A></P>
<P><A href="https://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/" target="_blank" rel="noopener noreferrer">Customer guidance on recent nation-state cyberattacks&nbsp;</A></P>
<P><A href="https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html" target="_blank" rel="noopener nofollow noreferrer">FireEye Advisory: Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims With SUNBURST Backdoor</A></P>
<P><A href="https://github.com/fireeye/sunburst_countermeasures" target="_blank" rel="noopener noreferrer">FireEye GitHub page: Sunburst Countermeasures&nbsp;</A></P>
<P><A href="https://cyber.dhs.gov/ed/21-01/" target="_blank" rel="noopener nofollow noreferrer">DHS Directive</A></P>
<P><A href="https://www.solarwinds.com/securityadvisory" target="_blank" rel="noopener nofollow noreferrer">SolarWinds Security Advisory</A></P>
<P><A href="https://github.com/FalconForceTeam/FalconFriday/blob/master/Uncategorized/FireEye_red_team_tool_countermeasures.md" target="_blank" rel="noopener noreferrer">FalconFriday – Fireeye Red Team Tool Countermeasures KQL Queries &nbsp;</A></P>
<P><A href="https://github.com/microsoft/Microsoft-365-Defender-Hunting-Queries" target="_blank" rel="noopener noreferrer">Microsoft-365-Defender-Hunting-Queries: Sample queries for Advanced hunting in Microsoft 365 Defender (github.com)</A></P>
<P><A href="https://github.com/Azure/Azure-Sentinel/blob/master/Workbooks/SolarWindsPostCompromiseHunting.json" target="_blank" rel="noopener noreferrer">Azure Sentinel SolarWinds Post Compromise Hunting Workbook</A></P>
<P data-unlink="true"><A href="https://github.com/Azure/Azure-Sentinel-Notebooks/blob/master/Guided%20Investigation%20-%20Solarwinds%20Post%20Compromise%20Activity.ipynb" target="_blank" rel="noopener noreferrer">Azure Sentinel SolarWinds Post Compromise Notebook&nbsp;</A></P>
<P data-unlink="true"><FONT size="1 2 3 4 5 6 7" color="#993300">Updated 12/18/2020</FONT></P>
<P data-unlink="true"><A href="https://techcommunity.microsoft.com/t5/microsoft-365-defender/new-threat-analytics-report-shares-the-latest-intelligence-on/ba-p/2001095" target="_blank">New Threat analytics report shares the latest intelligence on recent nation-state cyber attacks - Microsoft Tech Community</A></P>
<P data-unlink="true"><A href="https://aka.ms/solorigateattack" target="_self" rel="noopener noreferrer">Analyzing Solorigate, the compromised DLL file that started a sophisticated cyberattack, and how Microsoft Defender helps protect customers - Microsoft Security&nbsp;</A></P>
<P data-unlink="true"><FONT size="1 2 3 4 5 6 7" color="#993300">Updated 12/28/2020</FONT></P>
<P data-unlink="true"><A href="https://www.microsoft.com/security/blog/2020/12/28/using-microsoft-365-defender-to-coordinate-protection-against-solorigate/" target="_blank" rel="noopener noreferrer">Using Microsoft 365 Defender to protect against Solorigate - Microsoft Security</A></P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P></div><div class="styles_d-flex__7__Y_ styles_align-items-center__OKdH0"><div class="styles_lia-g-text-xs__xMXX5 styles_lia-g-divider__X68T2 MessageRevision_lia-revision__75lOM"><div class="styles_d-flex__7__Y_ styles_align-items-center__OKdH0"><span data-testid="MessageTimestamp" class="styles_text-body__F7QRV MessageRevision_lia-publish-date__sB2l6">Updated <span title="November 3, 2021 at 1:30 AM">Nov 03, 2021</span></span></div><span data-testid="MessageVersion" class="MessageRevision_lia-revision-text__FVsnQ styles_rounded-sm__gAfAD">Version 55.0</span></div></div><div class="MessageViewStandard_lia-footer__H7yx3 MessageViewStandard_lia-footer-divider__bGc9s"><div class="MessageViewStandard_lia-footer-left__uxaFW MessageViewStandard_lia-has-tags__rcZNi"><div class="TagList_lia-list__83Z3Y" data-testid="TagList"><div class="styles_d-block__btBet"><a class="TagViewChip_lia-tag__XQ_Wo" data-testid="TagText" aria-label="Tag name hunting" href="/tag/hunting?nodeId=board%3AMicrosoftSentinelBlog"><span class="TagViewChip_lia-tag-text__iaqW0" data-testid="TagView.TagViewChip.TagText">hunting</span></a></div><div class="styles_d-block__btBet"><a class="TagViewChip_lia-tag__XQ_Wo" data-testid="TagText" aria-label="Tag name microsoft sentinel" href="/tag/microsoft%20sentinel?nodeId=board%3AMicrosoftSentinelBlog"><span class="TagViewChip_lia-tag-text__iaqW0" data-testid="TagView.TagViewChip.TagText">microsoft sentinel</span></a></div></div></div><div class="MessageViewStandard_lia-footer-right__kqY6e"><div class="styles_d-flex__7__Y_ styles_align-items-center__OKdH0"><button data-testid="ReplyButton" aria-label="Comment" type="button" class="styles_lia-g-action-btn__70w24 MessageReplyButton_lia-reply-btn__2ZU73 styles_btn__1HFm0 styles_btn-link__Qn59s"><svg class="styles_lia-g-icon-size-16__V9Va_ Icon_lia-size-16__D8_m2 Icon_lia-icon__on1Gb" data-testid="Icon" style="--lia-local-icon-color:var(--lia-bs-body-color);--lia-local-icon-color-h:var(--lia-bs-body-color-h);--lia-local-icon-color-s:var(--lia-bs-body-color-s);--lia-local-icon-color-l:var(--lia-bs-body-color-l)" aria-hidden="true"><title>Comment</title><use href="/static/graphics/processed/33e68b0d/comment.svg#comment"></use></svg><span class="MessageReplyButton_lia-reply-text__7NgWG">Comment</span></button></div></div></div><article class="MessageAuthorBio_lia-footer-wrapper__c0isy" data-testid="MessageAuthorBio"><div class="styles_d-flex__7__Y_ styles_align-items-center__OKdH0"><a data-hovercard-trigger="true" data-testid="userLink" class="styles_align-self-start__a5Ju_" aria-label="View Profile: shainw" aria-describedby="UserHoverCard-252752" target="_self" href="/users/shainw/252752"><span class="UserAvatar_lia-avatar__HFfcv styles_lia-g-icon-size-50__HExtr" data-testid="userAvatar"><img src="https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/dS0yNTI3NTItMTU0NzA4aTBCQjIxNjFDMzc2MDE0OUE?image-dimensions=50x50" alt="shainw&#x27;s avatar" class="UserAvatar_lia-avatar-img__CUPwZ" aria-hidden="false"/></span></a><div class="MessageAuthorBio_lia-footer-details-wrapper__wmghu"><div class="MessageAuthorBio_lia-footer-details__A_A8m"><div class="styles_d-flex__7__Y_ styles_align-items-center__OKdH0"><a data-hovercard-trigger="true" data-testid="userLink" class="styles_lia-g-divider__X68T2 MessageAuthorBio_lia-author-login__HeCwv" aria-label="View Profile: shainw" aria-describedby="UserHoverCard-252752" target="_self" href="/users/shainw/252752">shainw</a><div class="MessageAuthorBio_lia-user-rank__Tdh52" data-testid="userRank"><div class="UserRankLabel_lia-rank__CqPss"><img class="UserRankLabel_lia-rank-icon__g_uVM" src="https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/cmstNC05WEo0blc?image-dimensions=100x16&amp;constrain-image=true" alt="Icon for Microsoft rank"/><span style="border-color:#333333;color:#333333" class="UserRankLabel_lia-is-boxed__Ykpfe UserRankLabel_lia-rank-label__epEUI UserRankLabel_lia-is-outline__q_ZVs"><span class="UserRankLabel_text-break__RX8Tt styles_lia-g-clamp__dg3Sg">Microsoft</span></span></div></div></div><div class="MessageAuthorBio_lia-footer-description__6mbqx" data-testid="UserRegistrationDate">Joined <!-- -->December 11, 2018</div></div><div class="MessageAuthorBio_lia-action__6MD3u styles_d-none__wDjqp"><button title="Send Message" data-testid="SendMessage-Button" aria-label="Send Message" tabindex="0" type="button" class="styles_btn__1HFm0 styles_btn-secondary__Ust3k">Send Message</button></div><div class="MessageAuthorBio_lia-action__6MD3u"><a data-testid="userLink" class="styles_btn__1HFm0 styles_btn-secondary__Ust3k" aria-label="View Profile: shainw" target="_self" href="/users/shainw/252752">View Profile</a></div></div></div><div class="styles_d-flex__7__Y_ styles_align-items-center__OKdH0"><a data-hovercard-trigger="true" data-testid="nodeLink" target="_self" class="styles_align-self-start__a5Ju_" aria-label="Go to Microsoft Sentinel Blog board" href="/category/microsoft-sentinel/blog/microsoftsentinelblog"><div class="styles_lia-g-icon-size-50__HExtr Icon_lia-size-50__PduO6 Icon_lia-frame__Que5I" style="--lia-local-icon-color:var(--lia-blog-color);--lia-local-icon-color-h:var(--lia-blog-color-h);--lia-local-icon-color-s:var(--lia-blog-color-s);--lia-local-icon-color-l:var(--lia-blog-color-l)"><svg class="Icon_lia-icon__on1Gb" data-testid="Icon" aria-label="Content Type Blog icon"><use href="/static/graphics/processed/33e68b0d/content-blog.svg#content-blog"></use></svg></div></a><div class="MessageAuthorBio_lia-footer-details-wrapper__wmghu"><div class="MessageAuthorBio_lia-footer-details__A_A8m"><a data-hovercard-trigger="true" data-testid="nodeLink" target="_self" class="MessageAuthorBio_lia-node-title__XQdEJ" aria-label="Place Microsoft Sentinel Blog" href="/category/microsoft-sentinel/blog/microsoftsentinelblog"><span class="styles_lia-g-mb-0__AIhaX NodeTitle_lia-title-and-icon__wEuTM styles_h5__q_74t" data-testid="NodeTitle">Microsoft Sentinel Blog </span></a><div data-testid="NodeDescription" class="styles_lia-g-clamp__dg3Sg styles_lia-g-clamp-5__NDmQz styles_lia-g-card-subtitle__n8gq2 styles_lia-g-card-item___XH9P MessageAuthorBio_lia-footer-description__6mbqx"><span><p>Microsoft Sentinel is a cloud-native SIEM, enriched with AI and automation to provide expansive visibility across your digital environment.</p>


<p>When evaluating various solutions, your peers value hearing from people like you who’ve used the product. Review <b><a href="https://gtnr.io/XCGSsQ3Fg" title="Microsoft Sentinel" target="_blank" rel="noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer" style="color:#0072cd">Microsoft Sentinel</a> </b>by filling out a Gartner Peer Insights survey and receive a $25 USD gift card (for customers only). Here are the Privacy/Guideline links: <a href="https://privacy.microsoft.com/en-us/privacystatement" title="Microsoft Privacy Statement" target="_blank" rel="noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer" style="color:#0072cd">Microsoft Privacy Statement</a>, <a href="https://www.gartner.com/reviews/guidelines" title="Gartner’s Community Guidelines" target="_blank" rel="noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer" style="color:#0072cd">Gartner’s Community Guidelines</a> &amp; <a href="https://www.gartner.com/imagesrv/peer-insights/GPI-Review-Guide.pdf" title="Gartner Peer Insights Review Guide" target="_blank" rel="noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer" style="color:#0072cd">Gartner Peer Insights Review Guide</a>.</p></span></div></div><div class="MessageAuthorBio_lia-action__6MD3u"></div></div></div></article></div></section></article></div></div><div></div></div></div></div></div></div></section><section class="QuiltSection_lia-section-spacing__WK9AB" data-testid="QuiltSection-section-1729184836777"><div data-testid="ThemedContainer" class="ThemedContainer_lia-fixed-container__MPYgN styles_container__6wTQq"><div class="styles_row__sjnST"><div style="--lia-content-item-border:none" class="QuiltSection_lia-column__iNmDj styles_col-lg-8__V2wNr"></div><div style="--lia-content-item-border:1px solid hsla(var(--lia-bs-black-h), var(--lia-bs-black-s), var(--lia-bs-black-l), 0.08)" class="QuiltSection_lia-column__iNmDj styles_col-lg-4__6NfeT"></div></div></div></section></main><footer data-testid="QuiltWrapperSection"><div class="CustomComponent_lia-wrapper__7IqeO" style="--lia-local-bg-color:transparent"><article class="CustomComponent_lia-article__sQ7z4" data-testid="CustomComponent"><section><footer id="uhf-footer" class="custom_widget_MicrosoftFooter_c-uhff_yuh6w_12 custom_widget_MicrosoftFooter_context-uhf_yuh6w_1" data-uhf-mscc-rq="false" data-footer-footprint="/MSTechnical/MSTechnicalFooter, fromService: True" data-m="{&quot;cN&quot;:&quot;Uhf footer_cont&quot;,&quot;cT&quot;:&quot;Container&quot;,&quot;id&quot;:&quot;c1m1r1a2&quot;,&quot;sN&quot;:1,&quot;aN&quot;:&quot;m1r1a2&quot;}"><nav class="custom_widget_MicrosoftFooter_c-uhff-nav_yuh6w_35" aria-label="Footer Resource links" data-m="{&quot;cN&quot;:&quot;Footer nav_cont&quot;,&quot;cT&quot;:&quot;Container&quot;,&quot;id&quot;:&quot;c1c1m1r1a2&quot;,&quot;sN&quot;:1,&quot;aN&quot;:&quot;c1m1r1a2&quot;}"><div class="custom_widget_MicrosoftFooter_c-uhff-nav-row_yuh6w_57"><div class="custom_widget_MicrosoftFooter_c-uhff-nav-group_yuh6w_58" data-m="{&quot;cN&quot;:&quot;footerNavColumn1_cont&quot;,&quot;cT&quot;:&quot;Container&quot;,&quot;id&quot;:&quot;c1c1c1m1r1a2&quot;,&quot;sN&quot;:1,&quot;aN&quot;:&quot;c1c1m1r1a2&quot;}"><div class="custom_widget_MicrosoftFooter_c-heading-4_yuh6w_49" role="heading" aria-level="2">What&#x27;s new</div><ul class="custom_widget_MicrosoftFooter_c-list_yuh6w_78 custom_widget_MicrosoftFooter_f-bare_yuh6w_78"><li><a aria-label="Surface Pro 9 What&#x27;s new" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/en-us/d/surface-pro-9/93VKD8NP4FVK" data-m="{&quot;cN&quot;:&quot;Footer_WhatsNew_NewSurfacePro8_nav&quot;,&quot;id&quot;:&quot;n1c1c1c1m1r1a2&quot;,&quot;sN&quot;:1,&quot;aN&quot;:&quot;c1c1c1m1r1a2&quot;}">Surface Pro 9 </a></li><li><a aria-label="Surface Laptop 5 What&#x27;s new" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/en-us/d/surface-laptop-5/8XN49V61S1BN" data-m="{&quot;cN&quot;:&quot;Footer_WhatsNew_SurfaceLaptop2_nav&quot;,&quot;id&quot;:&quot;n2c1c1c1m1r1a2&quot;,&quot;sN&quot;:2,&quot;aN&quot;:&quot;c1c1c1m1r1a2&quot;}">Surface Laptop 5</a></li><li><a aria-label="Surface Studio 2+ What&#x27;s new" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/en-us/d/surface-studio-2plus/8VLFQC3597K4" data-m="{&quot;cN&quot;:&quot;Footer_WhatsNew_SurfaceStudio_nav&quot;,&quot;id&quot;:&quot;n3c1c1c1m1r1a2&quot;,&quot;sN&quot;:3,&quot;aN&quot;:&quot;c1c1c1m1r1a2&quot;}">Surface Studio 2+</a></li><li><a aria-label="Surface Laptop Go 2 What&#x27;s new" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/en-us/d/surface-laptop-go-2/8PGLPV76MJHN" data-m="{&quot;cN&quot;:&quot;Footer_WhatsNew_SurfaceLaptopGo_nav&quot;,&quot;id&quot;:&quot;n4c1c1c1m1r1a2&quot;,&quot;sN&quot;:4,&quot;aN&quot;:&quot;c1c1c1m1r1a2&quot;}">Surface Laptop Go 2</a></li><li><a aria-label="Surface Laptop Studio What&#x27;s new" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/en-us/d/surface-laptop-studio/8SRDF62SWKPF" data-m="{&quot;cN&quot;:&quot;Footer_WhatsNew_SurfaceLaptopStudio_nav&quot;,&quot;id&quot;:&quot;n5c1c1c1m1r1a2&quot;,&quot;sN&quot;:5,&quot;aN&quot;:&quot;c1c1c1m1r1a2&quot;}">Surface Laptop Studio</a></li><li><a aria-label="Surface Duo 2 What&#x27;s new" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/en-us/d/surface-duo-2/9408KGXP4XJL" data-m="{&quot;cN&quot;:&quot;Footer_WhatsNew_SurfaceDuo2_nav&quot;,&quot;id&quot;:&quot;n6c1c1c1m1r1a2&quot;,&quot;sN&quot;:6,&quot;aN&quot;:&quot;c1c1c1m1r1a2&quot;}">Surface Duo 2</a></li><li><a aria-label="Microsoft 365 What&#x27;s new" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/microsoft-365" data-m="{&quot;cN&quot;:&quot;Whatsnew_Microsoft365_nav&quot;,&quot;id&quot;:&quot;n7c1c1c1m1r1a2&quot;,&quot;sN&quot;:7,&quot;aN&quot;:&quot;c1c1c1m1r1a2&quot;}">Microsoft 365</a></li><li><a aria-label="Windows 11 apps What&#x27;s new" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/windows/windows-11-apps" data-m="{&quot;cN&quot;:&quot;Footer_WhatsNew_Windows_11_apps_nav&quot;,&quot;id&quot;:&quot;n8c1c1c1m1r1a2&quot;,&quot;sN&quot;:8,&quot;aN&quot;:&quot;c1c1c1m1r1a2&quot;}">Windows 11 apps</a></li></ul></div><div class="custom_widget_MicrosoftFooter_c-uhff-nav-group_yuh6w_58" data-m="{&quot;cN&quot;:&quot;footerNavColumn2_cont&quot;,&quot;cT&quot;:&quot;Container&quot;,&quot;id&quot;:&quot;c2c1c1m1r1a2&quot;,&quot;sN&quot;:2,&quot;aN&quot;:&quot;c1c1m1r1a2&quot;}"><div class="custom_widget_MicrosoftFooter_c-heading-4_yuh6w_49" role="heading" aria-level="2">Microsoft Store</div><ul class="custom_widget_MicrosoftFooter_c-list_yuh6w_78 custom_widget_MicrosoftFooter_f-bare_yuh6w_78"><li><a aria-label="Account profile Microsoft Store" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://account.microsoft.com/" data-m="{&quot;cN&quot;:&quot;Footer_StoreandSupport_AccountProfile_nav&quot;,&quot;id&quot;:&quot;n1c2c1c1m1r1a2&quot;,&quot;sN&quot;:1,&quot;aN&quot;:&quot;c2c1c1m1r1a2&quot;}">Account profile</a></li><li><a aria-label="Download Center Microsoft Store" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/en-us/download" data-m="{&quot;cN&quot;:&quot;Footer_StoreandSupport_DownloadCenter_nav&quot;,&quot;id&quot;:&quot;n2c2c1c1m1r1a2&quot;,&quot;sN&quot;:2,&quot;aN&quot;:&quot;c2c1c1m1r1a2&quot;}">Download Center</a></li><li><a aria-label="Microsoft Store support Microsoft Store" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://go.microsoft.com/fwlink/?linkid=2139749" data-m="{&quot;cN&quot;:&quot;Footer_StoreandSupport_SalesAndSupport_nav&quot;,&quot;id&quot;:&quot;n3c2c1c1m1r1a2&quot;,&quot;sN&quot;:3,&quot;aN&quot;:&quot;c2c1c1m1r1a2&quot;}">Microsoft Store support</a></li><li><a aria-label="Returns Microsoft Store" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://go.microsoft.com/fwlink/p/?LinkID=824764&amp;clcid=0x409" data-m="{&quot;cN&quot;:&quot;MicrosoftStore_ExtendedHolidayReturns_nav&quot;,&quot;id&quot;:&quot;n4c2c1c1m1r1a2&quot;,&quot;sN&quot;:4,&quot;aN&quot;:&quot;c2c1c1m1r1a2&quot;}">Returns</a></li><li><a aria-label="Order tracking Microsoft Store" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://account.microsoft.com/orders" data-m="{&quot;cN&quot;:&quot;Footer_StoreandSupport_OrderTracking_nav&quot;,&quot;id&quot;:&quot;n5c2c1c1m1r1a2&quot;,&quot;sN&quot;:5,&quot;aN&quot;:&quot;c2c1c1m1r1a2&quot;}">Order tracking</a></li><li><a aria-label="Virtual workshops and training Microsoft Store" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/en-us/store/workshops-training-and-events?icid=vl_uf_932020" data-m="{&quot;cN&quot;:&quot;Footer_StoreandSupport_StoreLocations_nav&quot;,&quot;id&quot;:&quot;n6c2c1c1m1r1a2&quot;,&quot;sN&quot;:6,&quot;aN&quot;:&quot;c2c1c1m1r1a2&quot;}">Virtual workshops and training</a></li><li><a aria-label="Microsoft Store Promise Microsoft Store" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/en-us/store/b/why-microsoft-store?icid=footer_why-msft-store_7102020" data-m="{&quot;cN&quot;:&quot;Footer_StoreandSupport_MicrosoftPromise_nav&quot;,&quot;id&quot;:&quot;n7c2c1c1m1r1a2&quot;,&quot;sN&quot;:7,&quot;aN&quot;:&quot;c2c1c1m1r1a2&quot;}">Microsoft Store Promise</a></li><li><a aria-label="Flexible Payments Microsoft Store" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/en-us/store/b/payment-financing-options?icid=footer_financing_vcc" data-m="{&quot;cN&quot;:&quot;Footer_StoreandSupport_Financing_nav&quot;,&quot;id&quot;:&quot;n8c2c1c1m1r1a2&quot;,&quot;sN&quot;:8,&quot;aN&quot;:&quot;c2c1c1m1r1a2&quot;}">Flexible Payments</a></li></ul></div><div class="custom_widget_MicrosoftFooter_c-uhff-nav-group_yuh6w_58" data-m="{&quot;cN&quot;:&quot;footerNavColumn3_cont&quot;,&quot;cT&quot;:&quot;Container&quot;,&quot;id&quot;:&quot;c3c1c1m1r1a2&quot;,&quot;sN&quot;:3,&quot;aN&quot;:&quot;c1c1m1r1a2&quot;}"><div class="custom_widget_MicrosoftFooter_c-heading-4_yuh6w_49" role="heading" aria-level="2">Education</div><ul class="custom_widget_MicrosoftFooter_c-list_yuh6w_78 custom_widget_MicrosoftFooter_f-bare_yuh6w_78"><li><a aria-label="Microsoft in education Education" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/en-us/education" data-m="{&quot;cN&quot;:&quot;Footer_Education_MicrosoftInEducation_nav&quot;,&quot;id&quot;:&quot;n1c3c1c1m1r1a2&quot;,&quot;sN&quot;:1,&quot;aN&quot;:&quot;c3c1c1m1r1a2&quot;}">Microsoft in education</a></li><li><a aria-label="Devices for education Education" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/en-us/education/devices/overview" data-m="{&quot;cN&quot;:&quot;Footer_Education_DevicesforEducation_nav&quot;,&quot;id&quot;:&quot;n2c3c1c1m1r1a2&quot;,&quot;sN&quot;:2,&quot;aN&quot;:&quot;c3c1c1m1r1a2&quot;}">Devices for education</a></li><li><a aria-label="Microsoft Teams for Education Education" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/en-us/education/products/teams" data-m="{&quot;cN&quot;:&quot;Footer_Education_MicrosoftTeamsforEducation_nav&quot;,&quot;id&quot;:&quot;n3c3c1c1m1r1a2&quot;,&quot;sN&quot;:3,&quot;aN&quot;:&quot;c3c1c1m1r1a2&quot;}">Microsoft Teams for Education</a></li><li><a aria-label="Microsoft 365 Education Education" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/en-us/education/buy-license/microsoft365" data-m="{&quot;cN&quot;:&quot;Footer_Education_Microsoft365Education_nav&quot;,&quot;id&quot;:&quot;n4c3c1c1m1r1a2&quot;,&quot;sN&quot;:4,&quot;aN&quot;:&quot;c3c1c1m1r1a2&quot;}">Microsoft 365 Education</a></li><li><a aria-label="Education consultation appointment Education" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/en-us/store/b/business-consultation?tab=educationconsultation&amp;icid=CNavfooter_educationconsultation" data-m="{&quot;cN&quot;:&quot;Footer_Education_ConsultationAppointment_nav&quot;,&quot;id&quot;:&quot;n5c3c1c1m1r1a2&quot;,&quot;sN&quot;:5,&quot;aN&quot;:&quot;c3c1c1m1r1a2&quot;}">Education consultation appointment</a></li><li><a aria-label="Educator training and development Education" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://education.microsoft.com/" data-m="{&quot;cN&quot;:&quot;Footer_Education_EducatorTrainingDevelopment_nav&quot;,&quot;id&quot;:&quot;n6c3c1c1m1r1a2&quot;,&quot;sN&quot;:6,&quot;aN&quot;:&quot;c3c1c1m1r1a2&quot;}">Educator training and development</a></li><li><a aria-label="Deals for students and parents Education" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/en-us/store/b/education" data-m="{&quot;cN&quot;:&quot;Footer_Education_DealsForStudentsandParents_nav&quot;,&quot;id&quot;:&quot;n7c3c1c1m1r1a2&quot;,&quot;sN&quot;:7,&quot;aN&quot;:&quot;c3c1c1m1r1a2&quot;}">Deals for students and parents</a></li><li><a aria-label="Azure for students Education" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://azure.microsoft.com/en-us/free/students/" data-m="{&quot;cN&quot;:&quot;Footer_Azureforstudents_nav&quot;,&quot;id&quot;:&quot;n8c3c1c1m1r1a2&quot;,&quot;sN&quot;:8,&quot;aN&quot;:&quot;c3c1c1m1r1a2&quot;}">Azure for students</a></li></ul></div></div><div class="custom_widget_MicrosoftFooter_c-uhff-nav-row_yuh6w_57"><div class="custom_widget_MicrosoftFooter_c-uhff-nav-group_yuh6w_58" data-m="{&quot;cN&quot;:&quot;footerNavColumn4_cont&quot;,&quot;cT&quot;:&quot;Container&quot;,&quot;id&quot;:&quot;c4c1c1m1r1a2&quot;,&quot;sN&quot;:4,&quot;aN&quot;:&quot;c1c1m1r1a2&quot;}"><div class="custom_widget_MicrosoftFooter_c-heading-4_yuh6w_49" role="heading" aria-level="2">Business</div><ul class="custom_widget_MicrosoftFooter_c-list_yuh6w_78 custom_widget_MicrosoftFooter_f-bare_yuh6w_78"><li><a aria-label="Microsoft Cloud Business" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/en-us/microsoft-cloud" data-m="{&quot;cN&quot;:&quot;Footer_Business_Microsoft_Cloud_nav&quot;,&quot;id&quot;:&quot;n1c4c1c1m1r1a2&quot;,&quot;sN&quot;:1,&quot;aN&quot;:&quot;c4c1c1m1r1a2&quot;}">Microsoft Cloud</a></li><li><a aria-label="Microsoft Security Business" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/en-us/security" data-m="{&quot;cN&quot;:&quot;Footer_Business_Microsoft Security_nav&quot;,&quot;id&quot;:&quot;n2c4c1c1m1r1a2&quot;,&quot;sN&quot;:2,&quot;aN&quot;:&quot;c4c1c1m1r1a2&quot;}">Microsoft Security</a></li><li><a aria-label="Dynamics 365 Business" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://dynamics.microsoft.com/en-us/" data-m="{&quot;cN&quot;:&quot;Footer_Business_MicrosoftDynamics365_nav&quot;,&quot;id&quot;:&quot;n3c4c1c1m1r1a2&quot;,&quot;sN&quot;:3,&quot;aN&quot;:&quot;c4c1c1m1r1a2&quot;}">Dynamics 365</a></li><li><a aria-label="Microsoft 365 Business" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/en-us/microsoft-365/business/" data-m="{&quot;cN&quot;:&quot;More_Business_Microsoft365_nav&quot;,&quot;id&quot;:&quot;n4c4c1c1m1r1a2&quot;,&quot;sN&quot;:4,&quot;aN&quot;:&quot;c4c1c1m1r1a2&quot;}">Microsoft 365</a></li><li><a aria-label="Microsoft Power Platform Business" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://powerplatform.microsoft.com/en-us/" data-m="{&quot;cN&quot;:&quot;Footer_DeveloperAndIT_Power Platform_nav&quot;,&quot;id&quot;:&quot;n5c4c1c1m1r1a2&quot;,&quot;sN&quot;:5,&quot;aN&quot;:&quot;c4c1c1m1r1a2&quot;}">Microsoft Power Platform</a></li><li><a aria-label="Microsoft Teams Business" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/en-us/microsoft-teams/group-chat-software" data-m="{&quot;cN&quot;:&quot;Footer_Business_Microsoft365_nav&quot;,&quot;id&quot;:&quot;n6c4c1c1m1r1a2&quot;,&quot;sN&quot;:6,&quot;aN&quot;:&quot;c4c1c1m1r1a2&quot;}">Microsoft Teams</a></li><li><a aria-label="Microsoft Industry Business" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/en-us/industry" data-m="{&quot;cN&quot;:&quot;Footer_Business_MicrosoftIndustry_nav&quot;,&quot;id&quot;:&quot;n7c4c1c1m1r1a2&quot;,&quot;sN&quot;:7,&quot;aN&quot;:&quot;c4c1c1m1r1a2&quot;}">Microsoft Industry</a></li><li><a aria-label="Small Business Business" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/en-us/store/b/business?icid=CNavBusinessStore" data-m="{&quot;cN&quot;:&quot;Footer_Business-SmallBusiness_nav&quot;,&quot;id&quot;:&quot;n8c4c1c1m1r1a2&quot;,&quot;sN&quot;:8,&quot;aN&quot;:&quot;c4c1c1m1r1a2&quot;}">Small Business</a></li></ul></div><div class="custom_widget_MicrosoftFooter_c-uhff-nav-group_yuh6w_58" data-m="{&quot;cN&quot;:&quot;footerNavColumn5_cont&quot;,&quot;cT&quot;:&quot;Container&quot;,&quot;id&quot;:&quot;c5c1c1m1r1a2&quot;,&quot;sN&quot;:5,&quot;aN&quot;:&quot;c1c1m1r1a2&quot;}"><div class="custom_widget_MicrosoftFooter_c-heading-4_yuh6w_49" role="heading" aria-level="2">Developer &amp; IT</div><ul class="custom_widget_MicrosoftFooter_c-list_yuh6w_78 custom_widget_MicrosoftFooter_f-bare_yuh6w_78"><li><a aria-label="Azure Developer &amp; IT" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://azure.microsoft.com/en-us/" data-m="{&quot;cN&quot;:&quot;Footer_Enterprise_MicrosoftAzure_nav&quot;,&quot;id&quot;:&quot;n1c5c1c1m1r1a2&quot;,&quot;sN&quot;:1,&quot;aN&quot;:&quot;c5c1c1m1r1a2&quot;}">Azure</a></li><li><a aria-label="Developer Center Developer &amp; IT" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://developer.microsoft.com/en-us/" data-m="{&quot;cN&quot;:&quot;Footer_Developer_DeveloperCenter_nav&quot;,&quot;id&quot;:&quot;n2c5c1c1m1r1a2&quot;,&quot;sN&quot;:2,&quot;aN&quot;:&quot;c5c1c1m1r1a2&quot;}">Developer Center</a></li><li><a aria-label="Documentation Developer &amp; IT" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://learn.microsoft.com/docs/" data-m="{&quot;cN&quot;:&quot;Footer_DeveloperAndIT_Documentation_nav&quot;,&quot;id&quot;:&quot;n3c5c1c1m1r1a2&quot;,&quot;sN&quot;:3,&quot;aN&quot;:&quot;c5c1c1m1r1a2&quot;}">Documentation</a></li><li><a aria-label="Microsoft Learn Developer &amp; IT" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://learn.microsoft.com/" data-m="{&quot;cN&quot;:&quot;Footer_DeveloperAndIT_MicrosoftLearn_nav&quot;,&quot;id&quot;:&quot;n4c5c1c1m1r1a2&quot;,&quot;sN&quot;:4,&quot;aN&quot;:&quot;c5c1c1m1r1a2&quot;}">Microsoft Learn</a></li><li><a aria-label="Microsoft Tech Community Developer &amp; IT" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://techcommunity.microsoft.com/" data-m="{&quot;cN&quot;:&quot;Footer_DeveloperAndIT_MicrosoftTechCommunity_nav&quot;,&quot;id&quot;:&quot;n5c5c1c1m1r1a2&quot;,&quot;sN&quot;:5,&quot;aN&quot;:&quot;c5c1c1m1r1a2&quot;}">Microsoft Tech Community</a></li><li><a aria-label="Azure Marketplace Developer &amp; IT" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://azuremarketplace.microsoft.com/en-us/" data-m="{&quot;cN&quot;:&quot;More_DeveloperAndIT_AzureMarketplace_nav&quot;,&quot;id&quot;:&quot;n6c5c1c1m1r1a2&quot;,&quot;sN&quot;:6,&quot;aN&quot;:&quot;c5c1c1m1r1a2&quot;}">Azure Marketplace</a></li><li><a aria-label="AppSource Developer &amp; IT" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://appsource.microsoft.com/en-us/" data-m="{&quot;cN&quot;:&quot;Footer_DeveloperAndIT_AppSource_nav&quot;,&quot;id&quot;:&quot;n7c5c1c1m1r1a2&quot;,&quot;sN&quot;:7,&quot;aN&quot;:&quot;c5c1c1m1r1a2&quot;}">AppSource</a></li><li><a aria-label="Visual Studio Developer &amp; IT" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://visualstudio.microsoft.com/" data-m="{&quot;cN&quot;:&quot;Footer_Developer_MicrosoftVisualStudio_nav&quot;,&quot;id&quot;:&quot;n8c5c1c1m1r1a2&quot;,&quot;sN&quot;:8,&quot;aN&quot;:&quot;c5c1c1m1r1a2&quot;}">Visual Studio</a></li></ul></div><div class="custom_widget_MicrosoftFooter_c-uhff-nav-group_yuh6w_58" data-m="{&quot;cN&quot;:&quot;footerNavColumn6_cont&quot;,&quot;cT&quot;:&quot;Container&quot;,&quot;id&quot;:&quot;c6c1c1m1r1a2&quot;,&quot;sN&quot;:6,&quot;aN&quot;:&quot;c1c1m1r1a2&quot;}"><div class="custom_widget_MicrosoftFooter_c-heading-4_yuh6w_49" role="heading" aria-level="2">Company</div><ul class="custom_widget_MicrosoftFooter_c-list_yuh6w_78 custom_widget_MicrosoftFooter_f-bare_yuh6w_78"><li><a aria-label="Careers Company" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://careers.microsoft.com/" data-m="{&quot;cN&quot;:&quot;Footer_Company_Careers_nav&quot;,&quot;id&quot;:&quot;n1c6c1c1m1r1a2&quot;,&quot;sN&quot;:1,&quot;aN&quot;:&quot;c6c1c1m1r1a2&quot;}">Careers</a></li><li><a aria-label="About Microsoft Company" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/en-us/about" data-m="{&quot;cN&quot;:&quot;Footer_Company_AboutMicrosoft_nav&quot;,&quot;id&quot;:&quot;n2c6c1c1m1r1a2&quot;,&quot;sN&quot;:2,&quot;aN&quot;:&quot;c6c1c1m1r1a2&quot;}">About Microsoft</a></li><li><a aria-label="Company news Company" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://news.microsoft.com/" data-m="{&quot;cN&quot;:&quot;Footer_Company_CompanyNews_nav&quot;,&quot;id&quot;:&quot;n3c6c1c1m1r1a2&quot;,&quot;sN&quot;:3,&quot;aN&quot;:&quot;c6c1c1m1r1a2&quot;}">Company news</a></li><li><a aria-label="Privacy at Microsoft Company" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://privacy.microsoft.com/en-us" data-m="{&quot;cN&quot;:&quot;Footer_Company_PrivacyAtMicrosoft_nav&quot;,&quot;id&quot;:&quot;n4c6c1c1m1r1a2&quot;,&quot;sN&quot;:4,&quot;aN&quot;:&quot;c6c1c1m1r1a2&quot;}">Privacy at Microsoft</a></li><li><a aria-label="Investors Company" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/investor/default.aspx" data-m="{&quot;cN&quot;:&quot;Footer_Company_Investors_nav&quot;,&quot;id&quot;:&quot;n5c6c1c1m1r1a2&quot;,&quot;sN&quot;:5,&quot;aN&quot;:&quot;c6c1c1m1r1a2&quot;}">Investors</a></li><li><a aria-label="Diversity and inclusion Company" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/en-us/diversity/" data-m="{&quot;cN&quot;:&quot;Footer_Company_DiversityAndInclusion_nav&quot;,&quot;id&quot;:&quot;n6c6c1c1m1r1a2&quot;,&quot;sN&quot;:6,&quot;aN&quot;:&quot;c6c1c1m1r1a2&quot;}">Diversity and inclusion</a></li><li><a aria-label="Accessibility Company" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/en-us/accessibility" data-m="{&quot;cN&quot;:&quot;Footer_Company_Accessibility_nav&quot;,&quot;id&quot;:&quot;n7c6c1c1m1r1a2&quot;,&quot;sN&quot;:7,&quot;aN&quot;:&quot;c6c1c1m1r1a2&quot;}">Accessibility</a></li><li><a aria-label="Sustainability Company" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/en-us/sustainability/" data-m="{&quot;cN&quot;:&quot;Footer_Company_Sustainability_nav&quot;,&quot;id&quot;:&quot;n8c6c1c1m1r1a2&quot;,&quot;sN&quot;:8,&quot;aN&quot;:&quot;c6c1c1m1r1a2&quot;}">Sustainability</a></li></ul></div></div></nav><div class="custom_widget_MicrosoftFooter_c-uhff-base_yuh6w_94"><a data-m="{&quot;id&quot;:&quot;n8c1c1m1r1a2&quot;,&quot;sN&quot;:8,&quot;aN&quot;:&quot;c1c1m1r1a2&quot;}" href="https://aka.ms/yourcaliforniaprivacychoices" class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12 custom_widget_MicrosoftFooter_c-uhff-ccpa_yuh6w_107"><svg role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30 14" xml:space="preserve" height="16" width="43"><title>California Consumer Privacy Act (CCPA) Opt-Out Icon</title><path d="M7.4 12.8h6.8l3.1-11.6H7.4C4.2 1.2 1.6 3.8 1.6 7s2.6 5.8 5.8 5.8z" style="fill-rule:evenodd;clip-rule:evenodd;fill:#fff"></path><path d="M22.6 0H7.4c-3.9 0-7 3.1-7 7s3.1 7 7 7h15.2c3.9 0 7-3.1 7-7s-3.2-7-7-7zm-21 7c0-3.2 2.6-5.8 5.8-5.8h9.9l-3.1 11.6H7.4c-3.2 0-5.8-2.6-5.8-5.8z" style="fill-rule:evenodd;clip-rule:evenodd;fill:#06f"></path><path d="M24.6 4c.2.2.2.6 0 .8L22.5 7l2.2 2.2c.2.2.2.6 0 .8-.2.2-.6.2-.8 0l-2.2-2.2-2.2 2.2c-.2.2-.6.2-.8 0-.2-.2-.2-.6 0-.8L20.8 7l-2.2-2.2c-.2-.2-.2-.6 0-.8.2-.2.6-.2.8 0l2.2 2.2L23.8 4c.2-.2.6-.2.8 0z" style="fill:#fff"></path><path d="M12.7 4.1c.2.2.3.6.1.8L8.6 9.8c-.1.1-.2.2-.3.2-.2.1-.5.1-.7-.1L5.4 7.7c-.2-.2-.2-.6 0-.8.2-.2.6-.2.8 0L8 8.6l3.8-4.5c.2-.2.6-.2.9 0z" style="fill:#06f"></path></svg><span>Your Privacy Choices</span></a><nav aria-label="Microsoft corporate links"><ul class="custom_widget_MicrosoftFooter_c-list_yuh6w_78 custom_widget_MicrosoftFooter_f-bare_yuh6w_78" data-m="{&quot;cN&quot;:&quot;Corp links_cont&quot;,&quot;cT&quot;:&quot;Container&quot;,&quot;id&quot;:&quot;c8c1c1m1r1a2&quot;,&quot;sN&quot;:8,&quot;aN&quot;:&quot;c1c1m1r1a2&quot;}"><li id="c-uhff-footer_sitemap"><a class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://www.microsoft.com/en-us/sitemap1.aspx" data-mscc-ic="false" data-m="{&quot;cN&quot;:&quot;Footer_Sitemap_nav&quot;,&quot;id&quot;:&quot;n1c8c1c1m1r1a2&quot;,&quot;sN&quot;:1,&quot;aN&quot;:&quot;c8c1c1m1r1a2&quot;}">Sitemap</a></li><li id="c-uhff-footer_contactus"><a class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://support.microsoft.com/contactus" data-mscc-ic="false" data-m="{&quot;cN&quot;:&quot;Footer_ContactUs_nav&quot;,&quot;id&quot;:&quot;n2c8c1c1m1r1a2&quot;,&quot;sN&quot;:2,&quot;aN&quot;:&quot;c8c1c1m1r1a2&quot;}">Contact Microsoft</a></li><li id="c-uhff-footer_privacyandcookies"><a class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://go.microsoft.com/fwlink/?LinkId=521839" data-mscc-ic="false" data-m="{&quot;cN&quot;:&quot;Footer_PrivacyandCookies_nav&quot;,&quot;id&quot;:&quot;n3c8c1c1m1r1a2&quot;,&quot;sN&quot;:3,&quot;aN&quot;:&quot;c8c1c1m1r1a2&quot;}">Privacy </a></li><li class="x-hidden" id="c-uhff-footer_managecookies"><a class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="javascript:manageConsent();" data-mscc-ic="false" data-m="{&quot;cN&quot;:&quot;Footer_ManageCookies_nav&quot;,&quot;id&quot;:&quot;n4c8c1c1m1r1a2&quot;,&quot;sN&quot;:4,&quot;aN&quot;:&quot;c8c1c1m1r1a2&quot;}"> Manage cookies</a></li><li id="c-uhff-footer_termsofuse"><a class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://go.microsoft.com/fwlink/?LinkID=206977" data-mscc-ic="false" data-m="{&quot;cN&quot;:&quot;Footer_TermsOfUse_nav&quot;,&quot;id&quot;:&quot;n5c8c1c1m1r1a2&quot;,&quot;sN&quot;:5,&quot;aN&quot;:&quot;c8c1c1m1r1a2&quot;}">Terms of use</a></li><li id="c-uhff-footer_trademarks"><a class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://go.microsoft.com/fwlink/?linkid=2196228" data-mscc-ic="false" data-m="{&quot;cN&quot;:&quot;Footer_Trademarks_nav&quot;,&quot;id&quot;:&quot;n6c8c1c1m1r1a2&quot;,&quot;sN&quot;:6,&quot;aN&quot;:&quot;c8c1c1m1r1a2&quot;}">Trademarks</a></li><li id="c-uhff-footer_safetyandeco"><a class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://go.microsoft.com/fwlink/?linkid=2196227" data-mscc-ic="false" data-m="{&quot;cN&quot;:&quot;Footer_SafetyAndEco_nav&quot;,&quot;id&quot;:&quot;n7c8c1c1m1r1a2&quot;,&quot;sN&quot;:7,&quot;aN&quot;:&quot;c8c1c1m1r1a2&quot;}">Safety &amp; eco</a></li><li id="c-uhff-footer_aboutourads"><a class="custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12" href="https://choice.microsoft.com" data-mscc-ic="false" data-m="{&quot;cN&quot;:&quot;Footer_AboutourAds_nav&quot;,&quot;id&quot;:&quot;n8c8c1c1m1r1a2&quot;,&quot;sN&quot;:8,&quot;aN&quot;:&quot;c8c1c1m1r1a2&quot;}">About our ads</a></li><li>© Microsoft 2024</li></ul></nav></div></footer><div class="custom_widget_MicrosoftFooter_social-share_yuh6w_138"><ul class="custom_widget_MicrosoftFooter_sharing-options_yuh6w_146"><li class="custom_widget_MicrosoftFooter_social-share-list-linkedin_yuh6w_203 custom_widget_MicrosoftFooter_share-icon_yuh6w_244"><a class="custom_widget_MicrosoftFooter_social-link-footer_yuh6w_167" id="social-share-linkedin-id" href="https://www.linkedin.com/sharing/share-offsite/?url={page.url}" target="_blank"><span><img class="custom_widget_MicrosoftFooter_linkedin-icon_yuh6w_156" alt="Share to LinkedIn" src="https://techcommunity.microsoft.com/t5/s/gxcuf89792/m_assets/components/MicrosoftFooter/assets/social-share-linkedin.svg?time=1743177821000"/><span class="custom_widget_MicrosoftFooter_label_yuh6w_260 custom_widget_MicrosoftFooter_linkedin_yuh6w_156">Share on LinkedIn</span></span></a></li><li class="custom_widget_MicrosoftFooter_social-share-list-facebook_yuh6w_207 custom_widget_MicrosoftFooter_share-icon_yuh6w_244"><a class="custom_widget_MicrosoftFooter_social-link-footer_yuh6w_167" id="social-share-facebook-id" href="https://www.facebook.com/share.php?u=page.url&amp;t=page-name" target="_blank"><span><img alt="Share to Facebook" src="https://techcommunity.microsoft.com/t5/s/gxcuf89792/m_assets/components/MicrosoftFooter/assets/social-share-facebook.svg?time=1743177821000"/><span class="custom_widget_MicrosoftFooter_label_yuh6w_260 custom_widget_MicrosoftFooter_facebook_yuh6w_290">Share on Facebook</span></span></a></li><li class="custom_widget_MicrosoftFooter_social-share-list-xicon_yuh6w_210 custom_widget_MicrosoftFooter_share-icon_yuh6w_244"><a class="custom_widget_MicrosoftFooter_social-link-footer_yuh6w_167" id="social-share-x-id" href="https://twitter.com/share?text=page-name&amp;url=page.url" target="_blank"><span><img class="custom_widget_MicrosoftFooter_x-icon_yuh6w_230" alt="Share to X" src="https://techcommunity.microsoft.com/t5/s/gxcuf89792/m_assets/components/MicrosoftFooter/assets/social-share-x.svg?time=1743177821000"/><span class="custom_widget_MicrosoftFooter_label_yuh6w_260 custom_widget_MicrosoftFooter_twitter_yuh6w_293">Share on X</span></span></a></li><li class="custom_widget_MicrosoftFooter_social-share-list-reddit_yuh6w_213 custom_widget_MicrosoftFooter_share-icon_yuh6w_244"><a class="custom_widget_MicrosoftFooter_social-link-footer_yuh6w_167" id="social-share-reddit-id" href="https://www.reddit.com/submit?url=page.url&amp;title=page-name" target="_blank"><span><img alt="Share to Reddit" src="https://techcommunity.microsoft.com/t5/s/gxcuf89792/m_assets/components/MicrosoftFooter/assets/social-share-reddit.svg?time=1743177821000"/><span class="custom_widget_MicrosoftFooter_label_yuh6w_260 custom_widget_MicrosoftFooter_reddit_yuh6w_297">Share on Reddit</span></span></a></li><li class="custom_widget_MicrosoftFooter_social-share-list-bluesky_yuh6w_216 custom_widget_MicrosoftFooter_share-icon_yuh6w_244"><a class="custom_widget_MicrosoftFooter_social-link-footer_yuh6w_167" id="share-blue-sky-id" href="https://bsky.app/intent/compose?text=page-name%21%20%F0%9F%A6%8B%0Apage.url" target="_blank"><span><img class="custom_widget_MicrosoftFooter_bluesky-icon_yuh6w_237" alt="Share to Blue Sky" src="https://techcommunity.microsoft.com/t5/s/gxcuf89792/m_assets/components/MicrosoftFooter/assets/bluesky-brands.svg?time=1743697028000"/><span class="custom_widget_MicrosoftFooter_label_yuh6w_260 custom_widget_MicrosoftFooter_bluesky_yuh6w_237">Share on Bluesky</span></span></a></li><li class="custom_widget_MicrosoftFooter_social-share-list-rss_yuh6w_219 custom_widget_MicrosoftFooter_share-icon_yuh6w_244"><a class="social-link-rss" id="social-share-rss-id-a" href="/t5/s/gxcuf89792/rss/Community" target="_blank"><span><img class="custom_widget_MicrosoftFooter_social-share-rss-image_yuh6w_183" alt="Subscribe to RSS" src="https://techcommunity.microsoft.com/t5/s/gxcuf89792/m_assets/components/MicrosoftFooter/assets/rss.svg?time=1743177821000"/><span class="custom_widget_MicrosoftFooter_label_yuh6w_260 custom_widget_MicrosoftFooter_rss_yuh6w_308">Share on RSS</span></span></a></li><li class="custom_widget_MicrosoftFooter_social-share-list-mail_yuh6w_222 custom_widget_MicrosoftFooter_share-icon_yuh6w_244"><a class="custom_widget_MicrosoftFooter_social-link-footer_yuh6w_167" id="share-email-id" href="mailto:?body=page.url" target="_blank"><span><img alt="Share to Email" src="https://techcommunity.microsoft.com/t5/s/gxcuf89792/m_assets/components/MicrosoftFooter/assets/social-share-email.svg?time=1743177821000"/><span class="custom_widget_MicrosoftFooter_label_yuh6w_260 custom_widget_MicrosoftFooter_mail_yuh6w_300">Share on Email</span></span></a></li></ul></div></section></article></div></footer></div><script id="__NEXT_DATA__" type="application/json" crossorigin="anonymous">{"props":{"pageProps":{"locale":"en-US","acceptLanguage":"en-US,en;q=0.5","tenant":{"id":"o365.prod","enabled":true,"auroraHost":"https://techcommunity.microsoft.com","host":"https://techcommunity.microsoft.com","phase":"prod","community":"gxcuf89792","ssl":true,"basePath":"","liaContextPath":"/t5/s","sameSite":true,"publicConfig":{"repoName":"o365","moduleFederationHost":"https://aurora-customization-usw2.lithium.com","mainBranchName":"main","sdkEnabled":false,"auroraAnalyticsEnabled":true,"auroraAuditEnabled":false,"auroraFeaturedWidgetsEnabled":true,"auroraFeaturedContentTopicMessagesLimit":50,"auroraFeaturedPlacesNodesLimit":50,"auroraUnreleasedSettingsEnabled":false,"googleMapsApiKey":"AIzaSyCU2qaVJD5yWJQJannmoRnvql4qTowFcrQ","labelsEnabled":true,"pendoEnabled":false,"pendoApiKey":"16d69dfe-7be6-4eb7-59b7-708c84e89099","reCaptchaV3Enabled":true,"reCaptchaV3ScoreThreshold":0.5,"reCaptchaV3SiteKey":"6LcfUxUcAAAAAH1DBxd4uJIxf5ITF4YwCRUVJHsY","supportedLanguages":["en-US","es-ES","fr-FR","ja-JP","it-IT","lv-LV","nl-NL","pt-BR","pt-PT","ro-RO","ru-RU","pl-PL","da-DK","de-DE","en-GB","ko-KR","zh-CN"],"trafficVisitorCookieMaxAge":31536000,"videosFileType":[".wmv",".avi",".mov",".moov",".mpg",".mpeg",".m2t",".m2v",".vob",".flv",".mp4",".mpg4",".mkv",".asf",".m4v",".m2p",".3gp",".3g2",".f4v",".mp3",".m4a",".wma",".aac"],"sitemapEnabled":true,"quiltsV2Enabled":true,"multiTemplatesEnabled":true,"localizedQuiltWrapperEnabled":false,"samlEnabled":false,"ssoAllowNormalSignon":false,"ideasEnabled":true,"occasionsEnabled":true,"oidcssEnabled":true,"oidcssPostLogoutEndpointEnabled":false,"jwtSsoEnabled":false,"multiAuthEnabled":false,"multiAuthLocalisation":false,"inviteByEmailForGrouphubsEnabled":true,"switchUserFeatureEnabled":true,"messageStatusEnabled":true,"videoEnabled":false,"externalVideoEnabled":true,"salesforceIntegrationEnabled":false,"casePortalEnabled":false,"resetPermissionsEnabled":false,"closeAccountEnabled":true,"threadSummaryLimit":-1,"maxFeaturedGuestForEvents":10,"auroraEndpointsEnabled":true,"anonymousUserDeletionEnabled":true,"poweredByLogoEnabled":true,"endpointReloadInterval":120000,"maxOpenStreamsForEndpoints":0,"endpointBranchCompareIncludeFilter":"*.js,*.json,*.graphql","showExternalVideoCookieBanner":false,"maxGuidesAndContentLimit":500,"auroraThirdPartyAnalyticsEnabled":true,"contentArchiveEnabled":true,"auroraFirehoseEnabled":false,"auroraFirehoseFilterEventsEnabled":false,"mentionsEnabled":true,"featuredGuideLimit":100,"contentBulkArchiveEnabled":false,"devBranchesLimit":5,"brandMessengerEnabled":false,"brandMessengerWidgetId":"dd13b0e1-07ac-49e5-8ea8-698fd296ca5c","brandMessengerCompanyKey":"khoros","brandMessengerWidgetUrl":"https://brand-messenger.app.khoros.com/bundle/loader.js?v="},"baseUrl":"https://techcommunity.microsoft.com","fresh":true,"useBasicAuth":false},"routeInfo":{"path":"/blog/microsoftsentinelblog/solarwinds-post-compromise-hunting-with-azure-sentinel/1995095","pageName":"BlogMessagePage"},"csrfToken":"1c00362126917f387310705f494d8b3c0af840d0faf32804405ed3e9af56c4eac9806ad9c1084c93b4421fb44e681d42d1f3e57eaa6fba6c7d3105a20e7b815c","authToken":{"token":"Bearer ikhODAlCd1uMN4Abk88ADmOmnCrHKY/j4KugfpAZ58k=","expires":86400,"headerName":"Authorization","providerName":"OAUTH2_CC_None"},"switchUserId":null,"isCrawler":false,"parentFrameId":"57bb3d81-e457-4f0e-8ba6-986a9dccaf3b","apolloState":{"Community:community:gxcuf89792":{"__typename":"Community","id":"community:gxcuf89792","ssoProperties":{"__typename":"SsoProperties","ssoEnabled":{"__typename":"PolicyResult","failureReason":null},"communitySignUpUrl":"/t5/s/gxcuf89792/auth/oidcss/sso_login_redirect/provider/default","communitySignOnUrl":"/t5/s/gxcuf89792/auth/oidcss/sso_login_redirect/provider/default","communitySignOffUrl":"","khorosSignUpUrl":"","khorosSignOnUrl":"","khorosSignOffUrl":"","samlSignOnUrl":"","samlSignOffUrl":"","oidcssSignOnUrl":"","oidcssSignOffUrl":"","jwtSsoSignOnUrl":null,"jwtSsoSignOffUrl":null,"ssoBounceUrl":"","ssoQsParam":"referer"},"samlProperties":{"__typename":"SamlProperties","samlEnabled":{"__typename":"PolicyResult","failureReason":{"__typename":"FailureReason","message":"error.lithium.policies.feature.saml.enabled.accessDenied","key":"error.lithium.policies.feature.saml.enabled.accessDenied","args":[]}},"registerQueryStringEnabled":false,"registerQueryStringValue":"","registerQueryStringEncodeValueEnabled":false,"loginQueryStringEnabled":false,"loginQueryStringValue":"","loginQueryStringEncodeValueEnabled":false,"idpBindingType":"post","idpOneBindingType":"post","idpTwoBindingType":"post"},"seoProperties":{"__typename":"SeoProperties","customOGSiteName":"TECHCOMMUNITY.MICROSOFT.COM","appendTopicUidInHead":false,"linkCommentToTimeStamp":true,"lowercasePath":true},"languageProperties":{"__typename":"LanguageProperties","language":"en-US"},"cookieProperties":{"__typename":"CookieProperties","cookiePrivacyPolicyUrl":"https://go.microsoft.com/fwlink/?LinkId=521839","isCookieBannerEnabled":false},"searchProperties":{"__typename":"SearchProperties","chatProperties":{"__typename":"ChatProperties","brandMessengerWidgetId":"","brandMessengerCompanyKey":"","brandMessengerScriptSource":"","brandMessengerElementSelector":""}},"knowledgeBaseProperties":{"__typename":"KnowledgeBaseProperties","isGuidesAndChaptersEnabled":true},"communityPolicies":{"__typename":"CommunityPolicies","localizedCategoriesFeatureEnabled":{"__typename":"PolicyResult","failureReason":{"__typename":"FailureReason","message":"error.lithium.policies.feature.localized_categories.enabled.accessDenied","key":"error.lithium.policies.feature.localized_categories.enabled.accessDenied","args":[]}},"canUsePrivateNotes":{"__typename":"PolicyResult","failureReason":{"__typename":"FailureReason","message":"Private notes feature is not enabled.","key":"error.lithium.policies.feature.notes.available.accessDenied","args":[]}},"canUseNotifications":{"__typename":"PolicyResult","failureReason":null},"canReadReplyOwnCases":{"__typename":"PolicyResult","failureReason":{"__typename":"FailureReason","message":"error.lithium.policies.feature.caseportal.action.view_case_portal.allowed.accessDenied","key":"error.lithium.policies.feature.caseportal.action.view_case_portal.allowed.accessDenied","args":[]}},"canAccessLocalizedCategories":{"__typename":"PolicyResult","failureReason":{"__typename":"FailureReason","message":"error.lithium.policies.feature.localized_categories.action.admin_localized_categories.allowed.accessDenied","key":"error.lithium.policies.feature.localized_categories.action.admin_localized_categories.allowed.accessDenied","args":[]}},"canAdminNode":{"__typename":"PolicyResult","failureReason":{"__typename":"FailureReason","message":"error.lithium.policies.feature.nodes.action.update_node_with_admin_privilege.allowed.accessDenied","key":"error.lithium.policies.feature.nodes.action.update_node_with_admin_privilege.allowed.accessDenied","args":[]}}},"badgeProperties":{"__typename":"BadgeProperties","enabled":{"__typename":"PolicyResult","failureReason":null}},"maintenanceProperties":{"__typename":"MaintenanceProperties","isMaintenanceModeEnabled":false},"timezoneProperties":{"__typename":"TimezoneProperties","timezone":"US/Pacific"},"displayId":"gxcuf89792","nodeType":"community","title":"Microsoft Community Hub","seoTitle":null,"description":"","avatar":null,"userContext":{"__typename":"NodeUserContext","canUpdateNode":false},"theme":{"__ref":"Theme:customTheme1"},"entityType":"COMMUNITY","depth":0,"shortTitle":"Home"},"ROOT_QUERY":{"__typename":"Query","allowedLanguages":["en-US"],"authProviders":[],"community":{"__ref":"Community:community:gxcuf89792"},"canAccess":true,"canRegister":true,"self":{"__ref":"User:user:-1"},"cachedAsset({\"assetId\":\"pages\",\"assetType\":\"pages\",\"lastModified\":\"000\"})":{"__ref":"CachedAsset:pages-1749167508645"},"cachedText({\"locale\":\"en-US\",\"namespaces\":[\"components/context/AppContext/AppContextProvider\"]})":[{"__ref":"CachedAsset:text:en_US-components/context/AppContext/AppContextProvider-0"}],"cachedText({\"locale\":\"en-US\",\"namespaces\":[\"shared/client/components/common/Loading/LoadingDot\"]})":[{"__ref":"CachedAsset:text:en_US-shared/client/components/common/Loading/LoadingDot-0"}],"message({\"id\":\"message:1995095\"})":{"__ref":"BlogTopicMessage:message:1995095"},"messageArchivalData({\"messageId\":\"message:1995095\"})":{"__typename":"MessageArchivalData","archived":false,"archivedDate":null,"suggestedUrl":null},"componentsLastModified":"1749167552250","quiltLastModified":"1749167506305","pagesLastModified":"1749167508645","pageScriptsLastModified":"1749167559720","textLastModified":"1747867729000","themeLastModified":"1749167508102","fieldDefinitionsLastModified":"1730819800000","entityDefinitionsLastModified":"1730819800000","quiltWrapperLastModified":"1749167433715","cachedAsset({\"assetId\":\"pages\",\"assetType\":\"pages\",\"lastModified\":\"1749167508645\"})":{"__ref":"CachedAsset:pages-1749167508645"},"cachedAsset({\"assetId\":\"customTheme1\",\"assetType\":\"theme\",\"lastModified\":\"1749167508102\",\"locale\":null,\"node\":null})":{"__ref":"CachedAsset:theme:customTheme1-1749167508102"},"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"shared/client/components/common/Loading/LoadingDot\"]})":[{"__ref":"CachedAsset:text:en_US-shared/client/components/common/Loading/LoadingDot-1747867729000"}],"cachedAsset({\"assetId\":\"pages/blogs/BlogMessagePage\",\"assetType\":\"quilt\",\"lastModified\":\"1749167506305\",\"locale\":null,\"node\":\"board:MicrosoftSentinelBlog\"})":{"__ref":"CachedAsset:quilt:o365.prod:pages/blogs/BlogMessagePage:board:MicrosoftSentinelBlog-1749167506305"},"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"components/common/EmailVerification\"]})":[{"__ref":"CachedAsset:text:en_US-components/common/EmailVerification-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"pages/blogs/BlogMessagePage\"]})":[{"__ref":"CachedAsset:text:en_US-pages/blogs/BlogMessagePage-1747867729000"}],"cachedAsset({\"assetId\":\"Common\",\"assetType\":\"quiltWrapper\",\"lastModified\":\"1749167433715\",\"locale\":null,\"node\":null})":{"__ref":"CachedAsset:quiltWrapper:o365.prod:Common:1749167433715"},"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"components/common/ActionFeedback\"]})":[{"__ref":"CachedAsset:text:en_US-components/common/ActionFeedback-1747867729000"}],"cachedAsset({\"assetId\":\"custom.widget.tempStatusBanner-en-US\",\"assetType\":\"component\",\"lastModified\":\"1749167552250\",\"locale\":null,\"node\":null})":{"__ref":"CachedAsset:component:custom.widget.tempStatusBanner-en-us-1749167552250"},"cachedAsset({\"assetId\":\"custom.widget.HeroBanner-en-US\",\"assetType\":\"component\",\"lastModified\":\"1749167552250\",\"locale\":null,\"node\":null})":{"__ref":"CachedAsset:component:custom.widget.HeroBanner-en-us-1749167552250"},"cachedAsset({\"assetId\":\"custom.widget.MicrosoftFooter-en-US\",\"assetType\":\"component\",\"lastModified\":\"1749167552250\",\"locale\":null,\"node\":null})":{"__ref":"CachedAsset:component:custom.widget.MicrosoftFooter-en-us-1749167552250"},"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"components/community/Breadcrumb\"]})":[{"__ref":"CachedAsset:text:en_US-components/community/Breadcrumb-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"components/messages/MessageBanner\"]})":[{"__ref":"CachedAsset:text:en_US-components/messages/MessageBanner-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"components/messages/MessageView/MessageViewStandard\"]})":[{"__ref":"CachedAsset:text:en_US-components/messages/MessageView/MessageViewStandard-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"components/messages/MessageReplyCallToAction\"]})":[{"__ref":"CachedAsset:text:en_US-components/messages/MessageReplyCallToAction-1747867729000"}],"coreNodes({\"constraints\":{\"id\":{\"in\":[\"community:gxcuf89792\",\"category:microsoft365\",\"category:Windows\",\"category:Microsoft365Copilot\",\"category:MicrosoftTeams\",\"category:microsoft-security\",\"category:Azure\",\"category:Content_Management\",\"category:Exchange\",\"category:Windows-Server\",\"category:Outlook\",\"category:microsoftintune\",\"category:AI\",\"category:EducationSector\",\"category:PartnerCommunity\",\"category:ITOpsTalk\",\"category:HealthcareAndLifeSciences\",\"category:MicrosoftMechanics\",\"category:PublicSector\",\"category:MicrosoftforNonprofits\",\"category:IoT\",\"category:StartupsatMicrosoft\",\"category:DrivingAdoption\",\"category:MicrosoftLearn\",\"category:MicrosoftLearn\",\"board:MicrosoftLearnBlog\",\"category:Community-Info-Center\"]}},\"first\":27})":{"__typename":"CoreNodeConnection","edges":[{"__typename":"CoreNodeEdge","node":{"__ref":"Community:community:gxcuf89792"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:Exchange"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:Outlook"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:Community-Info-Center"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:EducationSector"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:DrivingAdoption"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:Azure"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:Windows-Server"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:MicrosoftTeams"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:PublicSector"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:microsoft365"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:IoT"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:HealthcareAndLifeSciences"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:ITOpsTalk"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:MicrosoftLearn"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Blog:board:MicrosoftLearnBlog"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:AI"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:MicrosoftMechanics"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:MicrosoftforNonprofits"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:StartupsatMicrosoft"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:PartnerCommunity"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:Microsoft365Copilot"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:Windows"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:Content_Management"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:microsoft-security"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:microsoftintune"}}]},"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"components/community/Navbar\"]})":[{"__ref":"CachedAsset:text:en_US-components/community/Navbar-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"components/community/NavbarHamburgerDropdown\"]})":[{"__ref":"CachedAsset:text:en_US-components/community/NavbarHamburgerDropdown-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"components/community/BrandLogo\"]})":[{"__ref":"CachedAsset:text:en_US-components/community/BrandLogo-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"components/community/NavbarTextLinks\"]})":[{"__ref":"CachedAsset:text:en_US-components/community/NavbarTextLinks-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"components/authentication/AuthenticationLink\"]})":[{"__ref":"CachedAsset:text:en_US-components/authentication/AuthenticationLink-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"components/nodes/NodeLink\"]})":[{"__ref":"CachedAsset:text:en_US-components/nodes/NodeLink-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"components/messages/MessageCoverImage\"]})":[{"__ref":"CachedAsset:text:en_US-components/messages/MessageCoverImage-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"shared/client/components/nodes/NodeTitle\"]})":[{"__ref":"CachedAsset:text:en_US-shared/client/components/nodes/NodeTitle-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"components/messages/MessageTimeToRead\"]})":[{"__ref":"CachedAsset:text:en_US-components/messages/MessageTimeToRead-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"components/messages/MessageSubject\"]})":[{"__ref":"CachedAsset:text:en_US-components/messages/MessageSubject-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"components/users/UserLink\"]})":[{"__ref":"CachedAsset:text:en_US-components/users/UserLink-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"shared/client/components/users/UserRank\"]})":[{"__ref":"CachedAsset:text:en_US-shared/client/components/users/UserRank-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"components/messages/MessageTime\"]})":[{"__ref":"CachedAsset:text:en_US-components/messages/MessageTime-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"components/messages/MessageBody\"]})":[{"__ref":"CachedAsset:text:en_US-components/messages/MessageBody-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"components/messages/MessageCustomFields\"]})":[{"__ref":"CachedAsset:text:en_US-components/messages/MessageCustomFields-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"components/messages/MessageRevision\"]})":[{"__ref":"CachedAsset:text:en_US-components/messages/MessageRevision-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"shared/client/components/common/QueryHandler\"]})":[{"__ref":"CachedAsset:text:en_US-shared/client/components/common/QueryHandler-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"components/messages/MessageReplyButton\"]})":[{"__ref":"CachedAsset:text:en_US-components/messages/MessageReplyButton-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"components/messages/MessageAuthorBio\"]})":[{"__ref":"CachedAsset:text:en_US-components/messages/MessageAuthorBio-1747867729000"}],"component({\"componentId\":\"custom.widget.tempStatusBanner\"})":{"__typename":"Component","render({\"context\":{\"component\":{\"entities\":[],\"props\":{}},\"page\":{\"entities\":[\"message:1995095\"],\"name\":\"BlogMessagePage\",\"props\":{},\"url\":\"https://techcommunity.microsoft.com/blog/microsoftsentinelblog/solarwinds-post-compromise-hunting-with-azure-sentinel/1995095\"}}})":{"__typename":"ComponentRenderResult","html":"\u003cDIV style=\"width: 100%; background-color: #0068b8; padding: 10px 0px; text-align: center; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; margin: 0px;\"\u003e\u003cA style=\"color: #ffffff; font-size: 16px; text-decoration: none; display: block; line-height: 1.5;\" href=\"https://aka.ms/mtc/el/CopilotControlSystem\" target=\"_blank\" rel=\"noopener noreferrer\" aria-label=\"Join us June 17–18 for a deep dive into Copilot Control System—live expert-led sessions and Q\u0026amp;A on data security, agent lifecycle, adoption, and more! click here to Learn more\"\u003e Join us June 17–18 for a deep dive into Copilot Control System—live expert-led sessions and Q\u0026amp;A on data security, agent lifecycle, adoption, and more! \u003cSPAN style=\"text-decoration: underline; font-weight: 500;\"\u003eLearn more \u0026gt;\u003c/SPAN\u003e \u003c/A\u003e\u003c/DIV\u003e"}},"componentScriptGroups({\"componentId\":\"custom.widget.tempStatusBanner\"})":{"__typename":"ComponentScriptGroups","scriptGroups":{"__typename":"ComponentScriptGroupsDefinition","afterInteractive":{"__typename":"PageScriptGroupDefinition","group":"AFTER_INTERACTIVE","scriptIds":[]},"lazyOnLoad":{"__typename":"PageScriptGroupDefinition","group":"LAZY_ON_LOAD","scriptIds":[]}},"componentScripts":[]},"component({\"componentId\":\"custom.widget.MicrosoftFooter\"})":{"__typename":"Component","render({\"context\":{\"component\":{\"entities\":[],\"props\":{}},\"page\":{\"entities\":[\"message:1995095\"],\"name\":\"BlogMessagePage\",\"props\":{},\"url\":\"https://techcommunity.microsoft.com/blog/microsoftsentinelblog/solarwinds-post-compromise-hunting-with-azure-sentinel/1995095\"}}})":{"__typename":"ComponentRenderResult","html":"\u003cfooter id=\"uhf-footer\" class=\"c-uhff context-uhf\" data-uhf-mscc-rq=\"false\" data-footer-footprint=\"/MSTechnical/MSTechnicalFooter, fromService: True\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Uhf footer_cont\u0026quot;,\u0026quot;cT\u0026quot;:\u0026quot;Container\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:1,\u0026quot;aN\u0026quot;:\u0026quot;m1r1a2\u0026quot;}\"\u003e \u003cnav class=\"c-uhff-nav\" aria-label=\"Footer Resource links\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer nav_cont\u0026quot;,\u0026quot;cT\u0026quot;:\u0026quot;Container\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:1,\u0026quot;aN\u0026quot;:\u0026quot;c1m1r1a2\u0026quot;}\"\u003e \u003cdiv class=\"c-uhff-nav-row\"\u003e \u003cdiv class=\"c-uhff-nav-group\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;footerNavColumn1_cont\u0026quot;,\u0026quot;cT\u0026quot;:\u0026quot;Container\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;c1c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:1,\u0026quot;aN\u0026quot;:\u0026quot;c1c1m1r1a2\u0026quot;}\"\u003e \u003cdiv class=\"c-heading-4\" role=\"heading\" aria-level=\"2\"\u003eWhat's new\u003c/div\u003e \u003cul class=\"c-list f-bare\"\u003e \u003cli\u003e \u003ca aria-label=\"Surface Pro 9 What's new\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/en-us/d/surface-pro-9/93VKD8NP4FVK\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_WhatsNew_NewSurfacePro8_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n1c1c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:1,\u0026quot;aN\u0026quot;:\u0026quot;c1c1c1m1r1a2\u0026quot;}\"\u003eSurface Pro 9 \u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Surface Laptop 5 What's new\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/en-us/d/surface-laptop-5/8XN49V61S1BN\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_WhatsNew_SurfaceLaptop2_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n2c1c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:2,\u0026quot;aN\u0026quot;:\u0026quot;c1c1c1m1r1a2\u0026quot;}\"\u003eSurface Laptop 5\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Surface Studio 2+ What's new\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/en-us/d/surface-studio-2plus/8VLFQC3597K4\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_WhatsNew_SurfaceStudio_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n3c1c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:3,\u0026quot;aN\u0026quot;:\u0026quot;c1c1c1m1r1a2\u0026quot;}\"\u003eSurface Studio 2+\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Surface Laptop Go 2 What's new\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/en-us/d/surface-laptop-go-2/8PGLPV76MJHN\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_WhatsNew_SurfaceLaptopGo_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n4c1c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:4,\u0026quot;aN\u0026quot;:\u0026quot;c1c1c1m1r1a2\u0026quot;}\"\u003eSurface Laptop Go 2\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Surface Laptop Studio What's new\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/en-us/d/surface-laptop-studio/8SRDF62SWKPF\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_WhatsNew_SurfaceLaptopStudio_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n5c1c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:5,\u0026quot;aN\u0026quot;:\u0026quot;c1c1c1m1r1a2\u0026quot;}\"\u003eSurface Laptop Studio\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Surface Duo 2 What's new\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/en-us/d/surface-duo-2/9408KGXP4XJL\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_WhatsNew_SurfaceDuo2_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n6c1c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:6,\u0026quot;aN\u0026quot;:\u0026quot;c1c1c1m1r1a2\u0026quot;}\"\u003eSurface Duo 2\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Microsoft 365 What's new\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/microsoft-365\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Whatsnew_Microsoft365_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n7c1c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:7,\u0026quot;aN\u0026quot;:\u0026quot;c1c1c1m1r1a2\u0026quot;}\"\u003eMicrosoft 365\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Windows 11 apps What's new\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/windows/windows-11-apps\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_WhatsNew_Windows_11_apps_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n8c1c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:8,\u0026quot;aN\u0026quot;:\u0026quot;c1c1c1m1r1a2\u0026quot;}\"\u003eWindows 11 apps\u003c/a\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/div\u003e \u003cdiv class=\"c-uhff-nav-group\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;footerNavColumn2_cont\u0026quot;,\u0026quot;cT\u0026quot;:\u0026quot;Container\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;c2c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:2,\u0026quot;aN\u0026quot;:\u0026quot;c1c1m1r1a2\u0026quot;}\"\u003e \u003cdiv class=\"c-heading-4\" role=\"heading\" aria-level=\"2\"\u003eMicrosoft Store\u003c/div\u003e \u003cul class=\"c-list f-bare\"\u003e \u003cli\u003e \u003ca aria-label=\"Account profile Microsoft Store\" class=\"c-uhff-link\" href=\"https://account.microsoft.com/\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_StoreandSupport_AccountProfile_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n1c2c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:1,\u0026quot;aN\u0026quot;:\u0026quot;c2c1c1m1r1a2\u0026quot;}\"\u003eAccount profile\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Download Center Microsoft Store\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/en-us/download\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_StoreandSupport_DownloadCenter_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n2c2c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:2,\u0026quot;aN\u0026quot;:\u0026quot;c2c1c1m1r1a2\u0026quot;}\"\u003eDownload Center\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Microsoft Store support Microsoft Store\" class=\"c-uhff-link\" href=\"https://go.microsoft.com/fwlink/?linkid=2139749\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_StoreandSupport_SalesAndSupport_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n3c2c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:3,\u0026quot;aN\u0026quot;:\u0026quot;c2c1c1m1r1a2\u0026quot;}\"\u003eMicrosoft Store support\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Returns Microsoft Store\" class=\"c-uhff-link\" href=\"https://go.microsoft.com/fwlink/p/?LinkID=824764\u0026amp;clcid=0x409\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;MicrosoftStore_ExtendedHolidayReturns_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n4c2c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:4,\u0026quot;aN\u0026quot;:\u0026quot;c2c1c1m1r1a2\u0026quot;}\"\u003eReturns\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Order tracking Microsoft Store\" class=\"c-uhff-link\" href=\"https://account.microsoft.com/orders\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_StoreandSupport_OrderTracking_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n5c2c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:5,\u0026quot;aN\u0026quot;:\u0026quot;c2c1c1m1r1a2\u0026quot;}\"\u003eOrder tracking\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Virtual workshops and training Microsoft Store\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/en-us/store/workshops-training-and-events?icid=vl_uf_932020\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_StoreandSupport_StoreLocations_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n6c2c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:6,\u0026quot;aN\u0026quot;:\u0026quot;c2c1c1m1r1a2\u0026quot;}\"\u003eVirtual workshops and training\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Microsoft Store Promise Microsoft Store\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/en-us/store/b/why-microsoft-store?icid=footer_why-msft-store_7102020\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_StoreandSupport_MicrosoftPromise_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n7c2c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:7,\u0026quot;aN\u0026quot;:\u0026quot;c2c1c1m1r1a2\u0026quot;}\"\u003eMicrosoft Store Promise\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Flexible Payments Microsoft Store\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/en-us/store/b/payment-financing-options?icid=footer_financing_vcc\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_StoreandSupport_Financing_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n8c2c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:8,\u0026quot;aN\u0026quot;:\u0026quot;c2c1c1m1r1a2\u0026quot;}\"\u003eFlexible Payments\u003c/a\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/div\u003e \u003cdiv class=\"c-uhff-nav-group\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;footerNavColumn3_cont\u0026quot;,\u0026quot;cT\u0026quot;:\u0026quot;Container\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;c3c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:3,\u0026quot;aN\u0026quot;:\u0026quot;c1c1m1r1a2\u0026quot;}\"\u003e \u003cdiv class=\"c-heading-4\" role=\"heading\" aria-level=\"2\"\u003eEducation\u003c/div\u003e \u003cul class=\"c-list f-bare\"\u003e \u003cli\u003e \u003ca aria-label=\"Microsoft in education Education\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/en-us/education\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_Education_MicrosoftInEducation_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n1c3c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:1,\u0026quot;aN\u0026quot;:\u0026quot;c3c1c1m1r1a2\u0026quot;}\"\u003eMicrosoft in education\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Devices for education Education\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/en-us/education/devices/overview\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_Education_DevicesforEducation_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n2c3c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:2,\u0026quot;aN\u0026quot;:\u0026quot;c3c1c1m1r1a2\u0026quot;}\"\u003eDevices for education\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Microsoft Teams for Education Education\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/en-us/education/products/teams\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_Education_MicrosoftTeamsforEducation_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n3c3c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:3,\u0026quot;aN\u0026quot;:\u0026quot;c3c1c1m1r1a2\u0026quot;}\"\u003eMicrosoft Teams for Education\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Microsoft 365 Education Education\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/en-us/education/buy-license/microsoft365\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_Education_Microsoft365Education_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n4c3c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:4,\u0026quot;aN\u0026quot;:\u0026quot;c3c1c1m1r1a2\u0026quot;}\"\u003eMicrosoft 365 Education\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Education consultation appointment Education\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/en-us/store/b/business-consultation?tab=educationconsultation\u0026amp;icid=CNavfooter_educationconsultation\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_Education_ConsultationAppointment_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n5c3c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:5,\u0026quot;aN\u0026quot;:\u0026quot;c3c1c1m1r1a2\u0026quot;}\"\u003eEducation consultation appointment\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Educator training and development Education\" class=\"c-uhff-link\" href=\"https://education.microsoft.com/\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_Education_EducatorTrainingDevelopment_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n6c3c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:6,\u0026quot;aN\u0026quot;:\u0026quot;c3c1c1m1r1a2\u0026quot;}\"\u003eEducator training and development\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Deals for students and parents Education\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/en-us/store/b/education\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_Education_DealsForStudentsandParents_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n7c3c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:7,\u0026quot;aN\u0026quot;:\u0026quot;c3c1c1m1r1a2\u0026quot;}\"\u003eDeals for students and parents\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Azure for students Education\" class=\"c-uhff-link\" href=\"https://azure.microsoft.com/en-us/free/students/\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_Azureforstudents_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n8c3c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:8,\u0026quot;aN\u0026quot;:\u0026quot;c3c1c1m1r1a2\u0026quot;}\"\u003eAzure for students\u003c/a\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"c-uhff-nav-row\"\u003e \u003cdiv class=\"c-uhff-nav-group\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;footerNavColumn4_cont\u0026quot;,\u0026quot;cT\u0026quot;:\u0026quot;Container\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;c4c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:4,\u0026quot;aN\u0026quot;:\u0026quot;c1c1m1r1a2\u0026quot;}\"\u003e \u003cdiv class=\"c-heading-4\" role=\"heading\" aria-level=\"2\"\u003eBusiness\u003c/div\u003e \u003cul class=\"c-list f-bare\"\u003e \u003cli\u003e \u003ca aria-label=\"Microsoft Cloud Business\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/en-us/microsoft-cloud\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_Business_Microsoft_Cloud_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n1c4c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:1,\u0026quot;aN\u0026quot;:\u0026quot;c4c1c1m1r1a2\u0026quot;}\"\u003eMicrosoft Cloud\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Microsoft Security Business\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/en-us/security\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_Business_Microsoft Security_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n2c4c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:2,\u0026quot;aN\u0026quot;:\u0026quot;c4c1c1m1r1a2\u0026quot;}\"\u003eMicrosoft Security\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Dynamics 365 Business\" class=\"c-uhff-link\" href=\"https://dynamics.microsoft.com/en-us/\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_Business_MicrosoftDynamics365_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n3c4c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:3,\u0026quot;aN\u0026quot;:\u0026quot;c4c1c1m1r1a2\u0026quot;}\"\u003eDynamics 365\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Microsoft 365 Business\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/en-us/microsoft-365/business/\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;More_Business_Microsoft365_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n4c4c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:4,\u0026quot;aN\u0026quot;:\u0026quot;c4c1c1m1r1a2\u0026quot;}\"\u003eMicrosoft 365\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Microsoft Power Platform Business\" class=\"c-uhff-link\" href=\"https://powerplatform.microsoft.com/en-us/\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_DeveloperAndIT_Power Platform_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n5c4c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:5,\u0026quot;aN\u0026quot;:\u0026quot;c4c1c1m1r1a2\u0026quot;}\"\u003eMicrosoft Power Platform\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Microsoft Teams Business\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/en-us/microsoft-teams/group-chat-software\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_Business_Microsoft365_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n6c4c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:6,\u0026quot;aN\u0026quot;:\u0026quot;c4c1c1m1r1a2\u0026quot;}\"\u003eMicrosoft Teams\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Microsoft Industry Business\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/en-us/industry\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_Business_MicrosoftIndustry_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n7c4c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:7,\u0026quot;aN\u0026quot;:\u0026quot;c4c1c1m1r1a2\u0026quot;}\"\u003eMicrosoft Industry\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Small Business Business\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/en-us/store/b/business?icid=CNavBusinessStore\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_Business-SmallBusiness_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n8c4c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:8,\u0026quot;aN\u0026quot;:\u0026quot;c4c1c1m1r1a2\u0026quot;}\"\u003eSmall Business\u003c/a\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/div\u003e \u003cdiv class=\"c-uhff-nav-group\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;footerNavColumn5_cont\u0026quot;,\u0026quot;cT\u0026quot;:\u0026quot;Container\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;c5c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:5,\u0026quot;aN\u0026quot;:\u0026quot;c1c1m1r1a2\u0026quot;}\"\u003e \u003cdiv class=\"c-heading-4\" role=\"heading\" aria-level=\"2\"\u003eDeveloper \u0026amp; IT\u003c/div\u003e \u003cul class=\"c-list f-bare\"\u003e \u003cli\u003e \u003ca aria-label=\"Azure Developer \u0026amp; IT\" class=\"c-uhff-link\" href=\"https://azure.microsoft.com/en-us/\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_Enterprise_MicrosoftAzure_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n1c5c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:1,\u0026quot;aN\u0026quot;:\u0026quot;c5c1c1m1r1a2\u0026quot;}\"\u003eAzure\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Developer Center Developer \u0026amp; IT\" class=\"c-uhff-link\" href=\"https://developer.microsoft.com/en-us/\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_Developer_DeveloperCenter_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n2c5c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:2,\u0026quot;aN\u0026quot;:\u0026quot;c5c1c1m1r1a2\u0026quot;}\"\u003eDeveloper Center\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Documentation Developer \u0026amp; IT\" class=\"c-uhff-link\" href=\"https://learn.microsoft.com/docs/\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_DeveloperAndIT_Documentation_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n3c5c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:3,\u0026quot;aN\u0026quot;:\u0026quot;c5c1c1m1r1a2\u0026quot;}\"\u003eDocumentation\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Microsoft Learn Developer \u0026amp; IT\" class=\"c-uhff-link\" href=\"https://learn.microsoft.com/\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_DeveloperAndIT_MicrosoftLearn_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n4c5c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:4,\u0026quot;aN\u0026quot;:\u0026quot;c5c1c1m1r1a2\u0026quot;}\"\u003eMicrosoft Learn\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Microsoft Tech Community Developer \u0026amp; IT\" class=\"c-uhff-link\" href=\"https://techcommunity.microsoft.com/\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_DeveloperAndIT_MicrosoftTechCommunity_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n5c5c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:5,\u0026quot;aN\u0026quot;:\u0026quot;c5c1c1m1r1a2\u0026quot;}\"\u003eMicrosoft Tech Community\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Azure Marketplace Developer \u0026amp; IT\" class=\"c-uhff-link\" href=\"https://azuremarketplace.microsoft.com/en-us/\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;More_DeveloperAndIT_AzureMarketplace_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n6c5c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:6,\u0026quot;aN\u0026quot;:\u0026quot;c5c1c1m1r1a2\u0026quot;}\"\u003eAzure Marketplace\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"AppSource Developer \u0026amp; IT\" class=\"c-uhff-link\" href=\"https://appsource.microsoft.com/en-us/\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_DeveloperAndIT_AppSource_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n7c5c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:7,\u0026quot;aN\u0026quot;:\u0026quot;c5c1c1m1r1a2\u0026quot;}\"\u003eAppSource\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Visual Studio Developer \u0026amp; IT\" class=\"c-uhff-link\" href=\"https://visualstudio.microsoft.com/\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_Developer_MicrosoftVisualStudio_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n8c5c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:8,\u0026quot;aN\u0026quot;:\u0026quot;c5c1c1m1r1a2\u0026quot;}\"\u003eVisual Studio\u003c/a\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/div\u003e \u003cdiv class=\"c-uhff-nav-group\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;footerNavColumn6_cont\u0026quot;,\u0026quot;cT\u0026quot;:\u0026quot;Container\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;c6c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:6,\u0026quot;aN\u0026quot;:\u0026quot;c1c1m1r1a2\u0026quot;}\"\u003e \u003cdiv class=\"c-heading-4\" role=\"heading\" aria-level=\"2\"\u003eCompany\u003c/div\u003e \u003cul class=\"c-list f-bare\"\u003e \u003cli\u003e \u003ca aria-label=\"Careers Company\" class=\"c-uhff-link\" href=\"https://careers.microsoft.com/\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_Company_Careers_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n1c6c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:1,\u0026quot;aN\u0026quot;:\u0026quot;c6c1c1m1r1a2\u0026quot;}\"\u003eCareers\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"About Microsoft Company\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/en-us/about\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_Company_AboutMicrosoft_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n2c6c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:2,\u0026quot;aN\u0026quot;:\u0026quot;c6c1c1m1r1a2\u0026quot;}\"\u003eAbout Microsoft\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Company news Company\" class=\"c-uhff-link\" href=\"https://news.microsoft.com/\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_Company_CompanyNews_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n3c6c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:3,\u0026quot;aN\u0026quot;:\u0026quot;c6c1c1m1r1a2\u0026quot;}\"\u003eCompany news\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Privacy at Microsoft Company\" class=\"c-uhff-link\" href=\"https://privacy.microsoft.com/en-us\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_Company_PrivacyAtMicrosoft_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n4c6c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:4,\u0026quot;aN\u0026quot;:\u0026quot;c6c1c1m1r1a2\u0026quot;}\"\u003ePrivacy at Microsoft\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Investors Company\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/investor/default.aspx\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_Company_Investors_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n5c6c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:5,\u0026quot;aN\u0026quot;:\u0026quot;c6c1c1m1r1a2\u0026quot;}\"\u003eInvestors\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Diversity and inclusion Company\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/en-us/diversity/\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_Company_DiversityAndInclusion_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n6c6c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:6,\u0026quot;aN\u0026quot;:\u0026quot;c6c1c1m1r1a2\u0026quot;}\"\u003eDiversity and inclusion\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Accessibility Company\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/en-us/accessibility\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_Company_Accessibility_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n7c6c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:7,\u0026quot;aN\u0026quot;:\u0026quot;c6c1c1m1r1a2\u0026quot;}\"\u003eAccessibility\u003c/a\u003e \u003c/li\u003e \u003cli\u003e \u003ca aria-label=\"Sustainability Company\" class=\"c-uhff-link\" href=\"https://www.microsoft.com/en-us/sustainability/\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_Company_Sustainability_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n8c6c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:8,\u0026quot;aN\u0026quot;:\u0026quot;c6c1c1m1r1a2\u0026quot;}\"\u003eSustainability\u003c/a\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/div\u003e \u003c/div\u003e \u003c/nav\u003e \u003cdiv class=\"c-uhff-base\"\u003e \u003ca data-m=\"{\u0026quot;id\u0026quot;:\u0026quot;n8c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:8,\u0026quot;aN\u0026quot;:\u0026quot;c1c1m1r1a2\u0026quot;}\" href=\"https://aka.ms/yourcaliforniaprivacychoices\" class=\"c-uhff-link c-uhff-ccpa\"\u003e \u003csvg role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 30 14\" xml:space=\"preserve\" height=\"16\" width=\"43\"\u003e \u003ctitle\u003eCalifornia Consumer Privacy Act (CCPA) Opt-Out Icon\u003c/title\u003e \u003cpath d=\"M7.4 12.8h6.8l3.1-11.6H7.4C4.2 1.2 1.6 3.8 1.6 7s2.6 5.8 5.8 5.8z\" style=\"fill-rule:evenodd;clip-rule:evenodd;fill:#fff\"\u003e\u003c/path\u003e \u003cpath d=\"M22.6 0H7.4c-3.9 0-7 3.1-7 7s3.1 7 7 7h15.2c3.9 0 7-3.1 7-7s-3.2-7-7-7zm-21 7c0-3.2 2.6-5.8 5.8-5.8h9.9l-3.1 11.6H7.4c-3.2 0-5.8-2.6-5.8-5.8z\" style=\"fill-rule:evenodd;clip-rule:evenodd;fill:#06f\"\u003e\u003c/path\u003e \u003cpath d=\"M24.6 4c.2.2.2.6 0 .8L22.5 7l2.2 2.2c.2.2.2.6 0 .8-.2.2-.6.2-.8 0l-2.2-2.2-2.2 2.2c-.2.2-.6.2-.8 0-.2-.2-.2-.6 0-.8L20.8 7l-2.2-2.2c-.2-.2-.2-.6 0-.8.2-.2.6-.2.8 0l2.2 2.2L23.8 4c.2-.2.6-.2.8 0z\" style=\"fill:#fff\"\u003e\u003c/path\u003e \u003cpath d=\"M12.7 4.1c.2.2.3.6.1.8L8.6 9.8c-.1.1-.2.2-.3.2-.2.1-.5.1-.7-.1L5.4 7.7c-.2-.2-.2-.6 0-.8.2-.2.6-.2.8 0L8 8.6l3.8-4.5c.2-.2.6-.2.9 0z\" style=\"fill:#06f\"\u003e\u003c/path\u003e \u003c/svg\u003e \u003cspan\u003eYour Privacy Choices\u003c/span\u003e \u003c/a\u003e \u003cnav aria-label=\"Microsoft corporate links\"\u003e \u003cul class=\"c-list f-bare\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Corp links_cont\u0026quot;,\u0026quot;cT\u0026quot;:\u0026quot;Container\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;c8c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:8,\u0026quot;aN\u0026quot;:\u0026quot;c1c1m1r1a2\u0026quot;}\"\u003e \u003cli id=\"c-uhff-footer_sitemap\"\u003e \u003ca class=\"c-uhff-link\" href=\"https://www.microsoft.com/en-us/sitemap1.aspx\" data-mscc-ic=\"false\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_Sitemap_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n1c8c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:1,\u0026quot;aN\u0026quot;:\u0026quot;c8c1c1m1r1a2\u0026quot;}\"\u003eSitemap\u003c/a\u003e \u003c/li\u003e \u003cli id=\"c-uhff-footer_contactus\"\u003e \u003ca class=\"c-uhff-link\" href=\"https://support.microsoft.com/contactus\" data-mscc-ic=\"false\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_ContactUs_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n2c8c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:2,\u0026quot;aN\u0026quot;:\u0026quot;c8c1c1m1r1a2\u0026quot;}\"\u003eContact Microsoft\u003c/a\u003e \u003c/li\u003e \u003cli id=\"c-uhff-footer_privacyandcookies\"\u003e \u003ca class=\"c-uhff-link\" href=\"https://go.microsoft.com/fwlink/?LinkId=521839\" data-mscc-ic=\"false\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_PrivacyandCookies_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n3c8c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:3,\u0026quot;aN\u0026quot;:\u0026quot;c8c1c1m1r1a2\u0026quot;}\"\u003ePrivacy \u003c/a\u003e \u003c/li\u003e \u003cli class=\"x-hidden\" id=\"c-uhff-footer_managecookies\"\u003e \u003ca class=\"c-uhff-link\" href=\"javascript:manageConsent();\" onclick=\"javascript:manageConsent(); return false;\" data-mscc-ic=\"false\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_ManageCookies_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n4c8c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:4,\u0026quot;aN\u0026quot;:\u0026quot;c8c1c1m1r1a2\u0026quot;}\"\u003e Manage cookies\u003c/a\u003e \u003c/li\u003e \u003cli id=\"c-uhff-footer_termsofuse\"\u003e \u003ca class=\"c-uhff-link\" href=\"https://go.microsoft.com/fwlink/?LinkID=206977\" data-mscc-ic=\"false\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_TermsOfUse_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n5c8c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:5,\u0026quot;aN\u0026quot;:\u0026quot;c8c1c1m1r1a2\u0026quot;}\"\u003eTerms of use\u003c/a\u003e \u003c/li\u003e \u003cli id=\"c-uhff-footer_trademarks\"\u003e \u003ca class=\"c-uhff-link\" href=\"https://go.microsoft.com/fwlink/?linkid=2196228\" data-mscc-ic=\"false\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_Trademarks_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n6c8c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:6,\u0026quot;aN\u0026quot;:\u0026quot;c8c1c1m1r1a2\u0026quot;}\"\u003eTrademarks\u003c/a\u003e \u003c/li\u003e \u003cli id=\"c-uhff-footer_safetyandeco\"\u003e \u003ca class=\"c-uhff-link\" href=\"https://go.microsoft.com/fwlink/?linkid=2196227\" data-mscc-ic=\"false\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_SafetyAndEco_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n7c8c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:7,\u0026quot;aN\u0026quot;:\u0026quot;c8c1c1m1r1a2\u0026quot;}\"\u003eSafety \u0026amp; eco\u003c/a\u003e \u003c/li\u003e \u003cli id=\"c-uhff-footer_aboutourads\"\u003e \u003ca class=\"c-uhff-link\" href=\"https://choice.microsoft.com\" data-mscc-ic=\"false\" data-m=\"{\u0026quot;cN\u0026quot;:\u0026quot;Footer_AboutourAds_nav\u0026quot;,\u0026quot;id\u0026quot;:\u0026quot;n8c8c1c1m1r1a2\u0026quot;,\u0026quot;sN\u0026quot;:8,\u0026quot;aN\u0026quot;:\u0026quot;c8c1c1m1r1a2\u0026quot;}\"\u003eAbout our ads\u003c/a\u003e \u003c/li\u003e \u003cli\u003e© Microsoft 2024\u003c/li\u003e \u003c/ul\u003e \u003c/nav\u003e \u003c/div\u003e \u003c/footer\u003e \u003cdiv class=\"social-share\"\u003e \u003cul class=\"sharing-options\"\u003e \u003cli class=\"social-share-list-linkedin share-icon\"\u003e \u003ca class=\"social-link-footer\" id=\"social-share-linkedin-id\" href=\"https://www.linkedin.com/sharing/share-offsite/?url={page.url}\" target=\"_blank\"\u003e \u003cspan\u003e \u003cimg class=\"linkedin-icon\" style=\"\" alt=\"Share to LinkedIn\" src=\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/m_assets/components/MicrosoftFooter/assets/social-share-linkedin.svg?time=1743177821000\"\u003e \u003cspan class=\"label linkedin\"\u003eShare on LinkedIn\u003c/span\u003e \u003c/span\u003e \u003c/a\u003e \u003c/li\u003e \u003cli class=\"social-share-list-facebook share-icon\"\u003e \u003ca class=\"social-link-footer\" id=\"social-share-facebook-id\" href=\"https://www.facebook.com/share.php?u=page.url\u0026amp;t=page-name\" target=\"_blank\"\u003e \u003cspan\u003e \u003cimg alt=\"Share to Facebook\" src=\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/m_assets/components/MicrosoftFooter/assets/social-share-facebook.svg?time=1743177821000\"\u003e \u003cspan class=\"label facebook\"\u003eShare on Facebook\u003c/span\u003e \u003c/span\u003e \u003c/a\u003e \u003c/li\u003e \u003cli class=\"social-share-list-xicon share-icon\"\u003e \u003ca class=\"social-link-footer\" id=\"social-share-x-id\" href=\"https://twitter.com/share?text=page-name\u0026amp;url=page.url\" target=\"_blank\"\u003e \u003cspan\u003e \u003cimg class=\"x-icon\" alt=\"Share to X\" src=\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/m_assets/components/MicrosoftFooter/assets/social-share-x.svg?time=1743177821000\"\u003e \u003cspan class=\"label twitter\"\u003eShare on X\u003c/span\u003e \u003c/span\u003e \u003c/a\u003e \u003c/li\u003e \u003cli class=\"social-share-list-reddit share-icon\"\u003e \u003ca class=\"social-link-footer\" id=\"social-share-reddit-id\" href=\"https://www.reddit.com/submit?url=page.url\u0026amp;title=page-name\" target=\"_blank\"\u003e \u003cspan\u003e \u003cimg alt=\"Share to Reddit\" src=\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/m_assets/components/MicrosoftFooter/assets/social-share-reddit.svg?time=1743177821000\"\u003e \u003cspan class=\"label reddit\"\u003eShare on Reddit\u003c/span\u003e \u003c/span\u003e \u003c/a\u003e \u003c/li\u003e \u003cli class=\"social-share-list-bluesky share-icon\"\u003e \u003ca class=\"social-link-footer\" id=\"share-blue-sky-id\" href=\"https://bsky.app/intent/compose?text=page-name%21%20%F0%9F%A6%8B%0Apage.url\" target=\"_blank\"\u003e \u003cspan\u003e \u003cimg class=\"bluesky-icon\" alt=\"Share to Blue Sky\" src=\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/m_assets/components/MicrosoftFooter/assets/bluesky-brands.svg?time=1743697028000\"\u003e \u003cspan class=\"label bluesky\"\u003eShare on Bluesky\u003c/span\u003e \u003c/span\u003e \u003c/a\u003e \u003c/li\u003e  \u003cli class=\"social-share-list-rss share-icon\"\u003e \u003ca class=\"social-link-rss\" id=\"social-share-rss-id-a\" href=\"/t5/s/gxcuf89792/rss/Community\" target=\"_blank\"\u003e \u003cspan\u003e \u003cimg class=\"social-share-rss-image\" alt=\"Subscribe to RSS\" src=\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/m_assets/components/MicrosoftFooter/assets/rss.svg?time=1743177821000\"\u003e \u003cspan class=\"label rss\"\u003eShare on RSS\u003c/span\u003e \u003c/span\u003e \u003c/a\u003e \u003c/li\u003e  \u003cli class=\"social-share-list-mail share-icon\"\u003e \u003ca class=\"social-link-footer\" id=\"share-email-id\" href=\"mailto:?body=page.url\" target=\"_blank\"\u003e \u003cspan\u003e \u003cimg alt=\"Share to Email\" src=\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/m_assets/components/MicrosoftFooter/assets/social-share-email.svg?time=1743177821000\"\u003e \u003cspan class=\"label mail\"\u003eShare on Email\u003c/span\u003e \u003c/span\u003e \u003c/a\u003e \u003c/li\u003e \u003c/ul\u003e \u003cscript\u003e var currentURL = window.location.href; var strippedURL = currentURL.split('?')[0]; var socialLinks = document.querySelectorAll('[class*=\"social-link-footer\"]'); var currentTitle = document.title; socialLinks.forEach(function(link) { var currentHref = link.getAttribute('href'); var newHref = currentHref.replace('page.url', encodeURIComponent(strippedURL)).replace('page-name', encodeURIComponent(currentTitle)); link.setAttribute('href', newHref); }); var pathSegmentFooter = window.location.pathname.replace('/', ''); var rssLink = document.querySelector('[class*=\"social-link-rss\"]'); if(pathSegmentFooter == 'Blogs' || pathSegmentFooter == 'Events'){ const styleMappingFooter = { Blogs: 'blog', Events: 'occasion' }; var rssUrl = styleMappingFooter[pathSegmentFooter] ? `https://techcommunity.microsoft.com/t5/s/gxcuf89792/rss/Community?interaction.style=${styleMappingFooter[pathSegmentFooter]}\u0026feeds.replies=false` : null; rssLink.setAttribute('href', rssUrl); } \u003c/script\u003e \u003c/div\u003e"}},"componentScriptGroups({\"componentId\":\"custom.widget.MicrosoftFooter\"})":{"__typename":"ComponentScriptGroups","scriptGroups":{"__typename":"ComponentScriptGroupsDefinition","afterInteractive":{"__typename":"PageScriptGroupDefinition","group":"AFTER_INTERACTIVE","scriptIds":[]},"lazyOnLoad":{"__typename":"PageScriptGroupDefinition","group":"LAZY_ON_LOAD","scriptIds":[]}},"componentScripts":[]},"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"components/community/NavbarDropdownToggle\"]})":[{"__ref":"CachedAsset:text:en_US-components/community/NavbarDropdownToggle-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"components/customComponent/CustomComponent\"]})":[{"__ref":"CachedAsset:text:en_US-components/customComponent/CustomComponent-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"shared/client/components/users/UserAvatar\"]})":[{"__ref":"CachedAsset:text:en_US-shared/client/components/users/UserAvatar-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"shared/client/components/ranks/UserRankLabel\"]})":[{"__ref":"CachedAsset:text:en_US-shared/client/components/ranks/UserRankLabel-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"components/tags/TagView/TagViewChip\"]})":[{"__ref":"CachedAsset:text:en_US-components/tags/TagView/TagViewChip-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"components/users/UserRegistrationDate\"]})":[{"__ref":"CachedAsset:text:en_US-components/users/UserRegistrationDate-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"shared/client/components/nodes/NodeAvatar\"]})":[{"__ref":"CachedAsset:text:en_US-shared/client/components/nodes/NodeAvatar-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"shared/client/components/nodes/NodeDescription\"]})":[{"__ref":"CachedAsset:text:en_US-shared/client/components/nodes/NodeDescription-1747867729000"}],"cachedText({\"lastModified\":\"1747867729000\",\"locale\":\"en-US\",\"namespaces\":[\"shared/client/components/nodes/NodeIcon\"]})":[{"__ref":"CachedAsset:text:en_US-shared/client/components/nodes/NodeIcon-1747867729000"}]},"Theme:customTheme1":{"__typename":"Theme","id":"customTheme1"},"User:user:-1":{"__typename":"User","id":"user:-1","uid":-1,"login":"Anonymous","email":"","avatar":null,"rank":null,"kudosWeight":1,"registrationData":{"__typename":"RegistrationData","status":"ANONYMOUS","registrationTime":null,"confirmEmailStatus":false,"registrationAccessLevel":"VIEW","ssoRegistrationFields":[]},"ssoId":null,"profileSettings":{"__typename":"ProfileSettings","dateDisplayStyle":{"__typename":"InheritableStringSettingWithPossibleValues","key":"layout.friendly_dates_enabled","value":"false","localValue":"true","possibleValues":["true","false"]},"dateDisplayFormat":{"__typename":"InheritableStringSetting","key":"layout.format_pattern_date","value":"MMM dd yyyy","localValue":"MM-dd-yyyy"},"language":{"__typename":"InheritableStringSettingWithPossibleValues","key":"profile.language","value":"en-US","localValue":null,"possibleValues":["en-US","es-ES"]},"repliesSortOrder":{"__typename":"InheritableStringSettingWithPossibleValues","key":"config.user_replies_sort_order","value":"DEFAULT","localValue":"DEFAULT","possibleValues":["DEFAULT","LIKES","PUBLISH_TIME","REVERSE_PUBLISH_TIME"]}},"deleted":false},"CachedAsset:pages-1749167508645":{"__typename":"CachedAsset","id":"pages-1749167508645","value":[{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"BlogViewAllPostsPage","type":"BLOG","urlPath":"/category/:categoryId/blog/:boardId/all-posts/(/:after|/:before)?","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"CasePortalPage","type":"CASE_PORTAL","urlPath":"/caseportal","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"CreateGroupHubPage","type":"GROUP_HUB","urlPath":"/groups/create","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"CaseViewPage","type":"CASE_DETAILS","urlPath":"/case/:caseId/:caseNumber","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"InboxPage","type":"COMMUNITY","urlPath":"/inbox","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"HelpFAQPage","type":"COMMUNITY","urlPath":"/help","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"IdeaMessagePage","type":"IDEA_POST","urlPath":"/idea/:boardId/:messageSubject/:messageId","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"IdeaViewAllIdeasPage","type":"IDEA","urlPath":"/category/:categoryId/ideas/:boardId/all-ideas/(/:after|/:before)?","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"LoginPage","type":"USER","urlPath":"/signin","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"BlogPostPage","type":"BLOG","urlPath":"/category/:categoryId/blogs/:boardId/create","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"UserBlogPermissions.Page","type":"COMMUNITY","urlPath":"/c/user-blog-permissions/page","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"ThemeEditorPage","type":"COMMUNITY","urlPath":"/designer/themes","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"TkbViewAllArticlesPage","type":"TKB","urlPath":"/category/:categoryId/kb/:boardId/all-articles/(/:after|/:before)?","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1730819800000,"localOverride":null,"page":{"id":"AllEvents","type":"CUSTOM","urlPath":"/Events","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"OccasionEditPage","type":"EVENT","urlPath":"/event/:boardId/:messageSubject/:messageId/edit","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"OAuthAuthorizationAllowPage","type":"USER","urlPath":"/auth/authorize/allow","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"PageEditorPage","type":"COMMUNITY","urlPath":"/designer/pages","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"PostPage","type":"COMMUNITY","urlPath":"/category/:categoryId/:boardId/create","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"ForumBoardPage","type":"FORUM","urlPath":"/category/:categoryId/discussions/:boardId","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"TkbBoardPage","type":"TKB","urlPath":"/category/:categoryId/kb/:boardId","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"EventPostPage","type":"EVENT","urlPath":"/category/:categoryId/events/:boardId/create","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"UserBadgesPage","type":"COMMUNITY","urlPath":"/users/:login/:userId/badges","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"GroupHubMembershipAction","type":"GROUP_HUB","urlPath":"/membership/join/:nodeId/:membershipType","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"MaintenancePage","type":"COMMUNITY","urlPath":"/maintenance","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"IdeaReplyPage","type":"IDEA_REPLY","urlPath":"/idea/:boardId/:messageSubject/:messageId/comments/:replyId","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"UserSettingsPage","type":"USER","urlPath":"/mysettings/:userSettingsTab","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"GroupHubsPage","type":"GROUP_HUB","urlPath":"/groups","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"ForumPostPage","type":"FORUM","urlPath":"/category/:categoryId/discussions/:boardId/create","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"OccasionRsvpActionPage","type":"OCCASION","urlPath":"/event/:boardId/:messageSubject/:messageId/rsvp/:responseType","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"VerifyUserEmailPage","type":"USER","urlPath":"/verifyemail/:userId/:verifyEmailToken","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"AllOccasionsPage","type":"OCCASION","urlPath":"/category/:categoryId/events/:boardId/all-events/(/:after|/:before)?","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"EventBoardPage","type":"EVENT","urlPath":"/category/:categoryId/events/:boardId","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"TkbReplyPage","type":"TKB_REPLY","urlPath":"/kb/:boardId/:messageSubject/:messageId/comments/:replyId","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"IdeaBoardPage","type":"IDEA","urlPath":"/category/:categoryId/ideas/:boardId","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"CommunityGuideLinesPage","type":"COMMUNITY","urlPath":"/communityguidelines","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"CaseCreatePage","type":"SALESFORCE_CASE_CREATION","urlPath":"/caseportal/create","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"TkbEditPage","type":"TKB","urlPath":"/kb/:boardId/:messageSubject/:messageId/edit","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"ForgotPasswordPage","type":"USER","urlPath":"/forgotpassword","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"IdeaEditPage","type":"IDEA","urlPath":"/idea/:boardId/:messageSubject/:messageId/edit","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"TagPage","type":"COMMUNITY","urlPath":"/tag/:tagName","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"BlogBoardPage","type":"BLOG","urlPath":"/category/:categoryId/blog/:boardId","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"OccasionMessagePage","type":"OCCASION_TOPIC","urlPath":"/event/:boardId/:messageSubject/:messageId","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"ManageContentPage","type":"COMMUNITY","urlPath":"/managecontent","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"ClosedMembershipNodeNonMembersPage","type":"GROUP_HUB","urlPath":"/closedgroup/:groupHubId","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"CommunityPage","type":"COMMUNITY","urlPath":"/","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"ForumMessagePage","type":"FORUM_TOPIC","urlPath":"/discussions/:boardId/:messageSubject/:messageId","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"IdeaPostPage","type":"IDEA","urlPath":"/category/:categoryId/ideas/:boardId/create","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1730819800000,"localOverride":null,"page":{"id":"CommunityHub.Page","type":"CUSTOM","urlPath":"/Directory","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"BlogMessagePage","type":"BLOG_ARTICLE","urlPath":"/blog/:boardId/:messageSubject/:messageId","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"RegistrationPage","type":"USER","urlPath":"/register","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"EditGroupHubPage","type":"GROUP_HUB","urlPath":"/group/:groupHubId/edit","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"ForumEditPage","type":"FORUM","urlPath":"/discussions/:boardId/:messageSubject/:messageId/edit","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"ResetPasswordPage","type":"USER","urlPath":"/resetpassword/:userId/:resetPasswordToken","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1730819800000,"localOverride":null,"page":{"id":"AllBlogs.Page","type":"CUSTOM","urlPath":"/blogs","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"TkbMessagePage","type":"TKB_ARTICLE","urlPath":"/kb/:boardId/:messageSubject/:messageId","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"BlogEditPage","type":"BLOG","urlPath":"/blog/:boardId/:messageSubject/:messageId/edit","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"ManageUsersPage","type":"USER","urlPath":"/users/manage/:tab?/:manageUsersTab?","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"ForumReplyPage","type":"FORUM_REPLY","urlPath":"/discussions/:boardId/:messageSubject/:messageId/replies/:replyId","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"PrivacyPolicyPage","type":"COMMUNITY","urlPath":"/privacypolicy","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"NotificationPage","type":"COMMUNITY","urlPath":"/notifications","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"UserPage","type":"USER","urlPath":"/users/:login/:userId","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"HealthCheckPage","type":"COMMUNITY","urlPath":"/health","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"OccasionReplyPage","type":"OCCASION_REPLY","urlPath":"/event/:boardId/:messageSubject/:messageId/comments/:replyId","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"ManageMembersPage","type":"GROUP_HUB","urlPath":"/group/:groupHubId/manage/:tab?","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"SearchResultsPage","type":"COMMUNITY","urlPath":"/search","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"BlogReplyPage","type":"BLOG_REPLY","urlPath":"/blog/:boardId/:messageSubject/:messageId/replies/:replyId","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"GroupHubPage","type":"GROUP_HUB","urlPath":"/group/:groupHubId","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"TermsOfServicePage","type":"COMMUNITY","urlPath":"/termsofservice","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"CategoryPage","type":"CATEGORY","urlPath":"/category/:categoryId","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"ForumViewAllTopicsPage","type":"FORUM","urlPath":"/category/:categoryId/discussions/:boardId/all-topics/(/:after|/:before)?","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"TkbPostPage","type":"TKB","urlPath":"/category/:categoryId/kbs/:boardId/create","__typename":"PageDescriptor"},"__typename":"PageResource"},{"lastUpdatedTime":1749167508645,"localOverride":null,"page":{"id":"GroupHubPostPage","type":"GROUP_HUB","urlPath":"/group/:groupHubId/:boardId/create","__typename":"PageDescriptor"},"__typename":"PageResource"}],"localOverride":false},"CachedAsset:text:en_US-components/context/AppContext/AppContextProvider-0":{"__typename":"CachedAsset","id":"text:en_US-components/context/AppContext/AppContextProvider-0","value":{"noCommunity":"Cannot find community","noUser":"Cannot find current user","noNode":"Cannot find node with id {nodeId}","noMessage":"Cannot find message with id {messageId}","userBanned":"We're sorry, but you have been banned from using this site.","userBannedReason":"You have been banned for the following reason: {reason}"},"localOverride":false},"CachedAsset:text:en_US-shared/client/components/common/Loading/LoadingDot-0":{"__typename":"CachedAsset","id":"text:en_US-shared/client/components/common/Loading/LoadingDot-0","value":{"title":"Loading..."},"localOverride":false},"AssociatedImage:{\"url\":\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/cmstNC05WEo0blc\"}":{"__typename":"AssociatedImage","url":"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/cmstNC05WEo0blc","height":512,"width":512,"mimeType":"image/png"},"Rank:rank:4":{"__typename":"Rank","id":"rank:4","position":5,"name":"Microsoft","color":"333333","icon":{"__ref":"AssociatedImage:{\"url\":\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/cmstNC05WEo0blc\"}"},"rankStyle":"OUTLINE"},"User:user:252752":{"__typename":"User","id":"user:252752","uid":252752,"login":"shainw","deleted":false,"avatar":{"__typename":"UserAvatar","url":"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/dS0yNTI3NTItMTU0NzA4aTBCQjIxNjFDMzc2MDE0OUE"},"rank":{"__ref":"Rank:rank:4"},"email":"","messagesCount":8,"biography":null,"topicsCount":4,"kudosReceivedCount":26,"kudosGivenCount":1,"kudosWeight":1,"registrationData":{"__typename":"RegistrationData","status":null,"registrationTime":"2018-12-11T12:55:55.825-08:00","confirmEmailStatus":null},"followersCount":null,"solutionsCount":0},"Category:category:microsoft-sentinel":{"__typename":"Category","id":"category:microsoft-sentinel","entityType":"CATEGORY","displayId":"microsoft-sentinel","nodeType":"category","depth":4,"title":"Microsoft Sentinel","shortTitle":"Microsoft Sentinel","parent":{"__ref":"Category:category:microsoft-security"}},"Category:category:top":{"__typename":"Category","id":"category:top","entityType":"CATEGORY","displayId":"top","nodeType":"category","depth":0,"title":"Top","shortTitle":"Top"},"Category:category:communities":{"__typename":"Category","id":"category:communities","entityType":"CATEGORY","displayId":"communities","nodeType":"category","depth":1,"parent":{"__ref":"Category:category:top"},"title":"Communities","shortTitle":"Communities"},"Category:category:products-services":{"__typename":"Category","id":"category:products-services","entityType":"CATEGORY","displayId":"products-services","nodeType":"category","depth":2,"parent":{"__ref":"Category:category:communities"},"title":"Products","shortTitle":"Products"},"Category:category:microsoft-security":{"__typename":"Category","id":"category:microsoft-security","entityType":"CATEGORY","displayId":"microsoft-security","nodeType":"category","depth":3,"parent":{"__ref":"Category:category:products-services"},"title":"Microsoft Security","shortTitle":"Microsoft Security","categoryPolicies":{"__typename":"CategoryPolicies","canReadNode":{"__typename":"PolicyResult","failureReason":null}}},"Blog:board:MicrosoftSentinelBlog":{"__typename":"Blog","id":"board:MicrosoftSentinelBlog","entityType":"BLOG","displayId":"MicrosoftSentinelBlog","nodeType":"board","depth":5,"conversationStyle":"BLOG","repliesProperties":{"__typename":"RepliesProperties","sortOrder":"REVERSE_PUBLISH_TIME","repliesFormat":"threaded"},"tagProperties":{"__typename":"TagNodeProperties","tagsEnabled":{"__typename":"PolicyResult","failureReason":null}},"requireTags":false,"tagType":"PRESET_ONLY","description":"\u003cp\u003eMicrosoft Sentinel is a cloud-native SIEM, enriched with AI and automation to provide expansive visibility across your digital environment.\u003c/p\u003e\n\n\n\u003cp\u003eWhen evaluating various solutions, your peers value hearing from people like you who’ve used the product. Review \u003cb\u003e\u003ca href=\"https://gtnr.io/XCGSsQ3Fg\" title=\"Microsoft Sentinel\" target=\"_blank\" rel=\"noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer\" style=\"color:#0072cd\"\u003eMicrosoft Sentinel\u003c/a\u003e \u003c/b\u003eby filling out a Gartner Peer Insights survey and receive a $25 USD gift card (for customers only). Here are the Privacy/Guideline links: \u003ca href=\"https://privacy.microsoft.com/en-us/privacystatement\" title=\"Microsoft Privacy Statement\" target=\"_blank\" rel=\"noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer\" style=\"color:#0072cd\"\u003eMicrosoft Privacy Statement\u003c/a\u003e, \u003ca href=\"https://www.gartner.com/reviews/guidelines\" title=\"Gartner’s Community Guidelines\" target=\"_blank\" rel=\"noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer\" style=\"color:#0072cd\"\u003eGartner’s Community Guidelines\u003c/a\u003e \u0026amp; \u003ca href=\"https://www.gartner.com/imagesrv/peer-insights/GPI-Review-Guide.pdf\" title=\"Gartner Peer Insights Review Guide\" target=\"_blank\" rel=\"noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer noopener noreferrer\" style=\"color:#0072cd\"\u003eGartner Peer Insights Review Guide\u003c/a\u003e.\u003c/p\u003e","title":"Microsoft Sentinel Blog","shortTitle":"Microsoft Sentinel Blog","parent":{"__ref":"Category:category:microsoft-sentinel"},"ancestors":{"__typename":"CoreNodeConnection","edges":[{"__typename":"CoreNodeEdge","node":{"__ref":"Community:community:gxcuf89792"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:communities"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:products-services"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:microsoft-security"}},{"__typename":"CoreNodeEdge","node":{"__ref":"Category:category:microsoft-sentinel"}}]},"userContext":{"__typename":"NodeUserContext","canAddAttachments":false,"canUpdateNode":false,"canPostMessages":false,"isSubscribed":false},"theme":{"__ref":"Theme:customTheme1"},"boardPolicies":{"__typename":"BoardPolicies","canViewSpamDashBoard":{"__typename":"PolicyResult","failureReason":{"__typename":"FailureReason","message":"error.lithium.policies.feature.moderation_spam.action.access_spam_quarantine.allowed.accessDenied","key":"error.lithium.policies.feature.moderation_spam.action.access_spam_quarantine.allowed.accessDenied","args":[]}},"canArchiveMessage":{"__typename":"PolicyResult","failureReason":{"__typename":"FailureReason","message":"error.lithium.policies.content_archivals.enable_content_archival_settings.accessDenied","key":"error.lithium.policies.content_archivals.enable_content_archival_settings.accessDenied","args":[]}},"canPublishArticleOnCreate":{"__typename":"PolicyResult","failureReason":{"__typename":"FailureReason","message":"error.lithium.policies.forums.policy_can_publish_on_create_workflow_action.accessDenied","key":"error.lithium.policies.forums.policy_can_publish_on_create_workflow_action.accessDenied","args":[]}}}},"BlogTopicMessage:message:1995095":{"__typename":"BlogTopicMessage","uid":1995095,"subject":"SolarWinds Post-Compromise Hunting with Azure Sentinel","id":"message:1995095","revisionNum":57,"repliesCount":5,"author":{"__ref":"User:user:252752"},"depth":0,"hasGivenKudo":false,"board":{"__ref":"Blog:board:MicrosoftSentinelBlog"},"conversation":{"__ref":"Conversation:conversation:1995095"},"messagePolicies":{"__typename":"MessagePolicies","canPublishArticleOnEdit":{"__typename":"PolicyResult","failureReason":{"__typename":"FailureReason","message":"error.lithium.policies.forums.policy_can_publish_on_edit_workflow_action.accessDenied","key":"error.lithium.policies.forums.policy_can_publish_on_edit_workflow_action.accessDenied","args":[]}},"canModerateSpamMessage":{"__typename":"PolicyResult","failureReason":{"__typename":"FailureReason","message":"error.lithium.policies.feature.moderation_spam.action.moderate_entity.allowed.accessDenied","key":"error.lithium.policies.feature.moderation_spam.action.moderate_entity.allowed.accessDenied","args":[]}}},"contentWorkflow":{"__typename":"ContentWorkflow","state":"PUBLISH","scheduledPublishTime":null,"scheduledTimezone":null,"userContext":{"__typename":"MessageWorkflowContext","canSubmitForReview":null,"canEdit":false,"canRecall":null,"canSubmitForPublication":null,"canReturnToAuthor":null,"canPublish":null,"canReturnToReview":null,"canSchedule":false},"shortScheduledTimezone":null},"readOnly":false,"editFrozen":false,"moderationData":{"__ref":"ModerationData:moderation_data:1995095"},"teaser":"\u003cP\u003e\u003cspan class=\"lia-media-object lia-media-is-inline lia-media-size-large\" data-image-alt=\"Image1.png\"\u003e\u003cbutton class=\"lia-media-unstyled-btn\" type=\"button\" aria-haspopup=\"true\" aria-label=\"Enlarge Image Image1.png\"\u003e\u003cimg src=\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTE2OGlFQjcxOEM5Njc1QzQ5Q0Q3?image-dimensions=799x527\u0026amp;revision=57\" width=\"799\" height=\"527\" alt=\"Image1.png\" /\u003e\u003c/button\u003e\u003c/span\u003e\u003c/P\u003e\n\u003cP\u003eMicrosoft recently blogged about the \u003cA href=\"https://blogs.microsoft.com/on-the-issues/2020/12/13/customers-protect-nation-state-cyberattacks/\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eRecent Nation-State Cyber Attacks\u003c/A\u003e that has impacted high value targets both across the government and private sector. This attack is also known as \u003cA href=\"https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=Trojan:MSIL/Solorigate.B!dha\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eSolorigate\u003c/A\u003e or \u003cA href=\"https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\" target=\"_blank\" rel=\"noopener nofollow noreferrer\"\u003eSunburst\u003c/A\u003e.\u003c/P\u003e","body":"\u003cP\u003e\u003cFONT size=\"3\" color=\"#993300\"\u003eMSTIC has released a number of new hunting and detection queries for Azure Sentinel based on additional observations as well as research released by partners and the wider community. In addition, the \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Workbooks/SolarWindsPostCompromiseHunting.json\" target=\"_self\" rel=\"noopener noreferrer\"\u003eSolarWinds post compromise hunting workbook\u003c/A\u003e has been updated to include a number of new sections.\u0026nbsp;\u0026nbsp;\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003e\u003cFONT size=\"3\" color=\"#993300\"\u003eBlog sections have been marked with \u003cSTRONG\u003eUpdated\u0026nbsp;\u003c/STRONG\u003eand include the date they were last updated.\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003eMicrosoft recently blogged about the \u003cA href=\"https://blogs.microsoft.com/on-the-issues/2020/12/13/customers-protect-nation-state-cyberattacks/\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eRecent Nation-State Cyber Attacks\u003c/A\u003e that has impacted high value targets both across the government and private sector. This attack is also known as \u003cA href=\"https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=Trojan:MSIL/Solorigate.B!dha\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eSolorigate\u003c/A\u003e or \u003cA href=\"https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\" target=\"_blank\" rel=\"noopener nofollow noreferrer\"\u003eSunburst\u003c/A\u003e. This threat actor is believed to be highly sophisticated and motivated. Relevant security data required for hunting and investigating such a complex attack is produced in multiple locations - cloud, on-premises and across multiple security tools and product logs.\u0026nbsp; Being able to analyze all the data from a single point makes it easier to spot trends and attacks. Azure Sentinel has made it easy to collect data from multiple data sources across different environments both on-prem and cloud with the goal of connecting that data together more easily. This blog post contains guidance and generic approaches to hunt for attacker activity (TTPs) in data that is available by default in Azure Sentinel or can be onboarded to Azure Sentinel.\u0026nbsp;\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003eAssociated content details:\u003c/P\u003e\n\u003cTABLE border=\"1\" width=\"100.03884623514038%\"\u003e\n\u003cTBODY\u003e\n\u003cTR\u003e\n\u003cTD width=\"100%\" height=\"95px\"\u003e\n\u003cH6 id=\"community-1995095-toc-hId-223156908\"\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/18/2020\u003c/FONT\u003e\u003c/H6\u003e\nCurrently known in depth\u0026nbsp;\u003cSTRONG\u003eattack details\u003c/STRONG\u003e have been provided by the M365 and MSTIC teams via the\u0026nbsp;\u003cA href=\"https://aka.ms/solorigateattack\" target=\"_self\" rel=\"noopener noreferrer\"\u003edeep dive analysis blog\u003c/A\u003e\u003cSTRONG\u003e.\u003c/STRONG\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"100%\" height=\"84px\"\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/21/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003eCurrent \u003cSTRONG\u003eadvice for incident responders\u003c/STRONG\u003e\u0026nbsp;\u003cA href=\"https://aka.ms/dartrecoveryguide\" target=\"_self\" rel=\"noopener noreferrer\"\u003eon recovery from systemic identity compromises\u003c/A\u003e has been provided by \u003cA href=\"https://www.microsoft.com/security/blog/2019/03/25/dart-the-microsoft-cybersecurity-team-we-hope-you-never-meet/\" target=\"_self\" rel=\"noopener noreferrer\"\u003eMicrosoft Detection and Response Team\u003c/A\u003e.\u003c/P\u003e\n\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"100%\" height=\"111px\"\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/22/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003e\u003cSTRONG\u003eAzure AD Identity admins\u003c/STRONG\u003e who want to gain further visibility and understanding related to the identity implications of this attack on their environment can use the newly released \u003cA href=\"https://techcommunity.microsoft.com/t5/azure-active-directory-identity/azure-ad-workbook-to-help-you-assess-solorigate-risk/ba-p/2010718\" target=\"_self\"\u003eSensitive Operations Report workbook\u003c/A\u003e.\u003c/P\u003e\n\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD height=\"57px\"\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/26/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cSTRONG\u003eFor Identity Vendors and their customers\u003c/STRONG\u003e to understand the Solorigate identity related attack components the Identity team at Microsoft has produced \u003cA href=\"https://techcommunity.microsoft.com/t5/azure-active-directory-identity/understanding-quot-solorigate-quot-s-identity-iocs-for-identity/ba-p/2007610\" target=\"_self\"\u003ea blog has been created\u003c/A\u003e to walk thru this information.\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/28/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cFONT size=\"3\" color=\"#000000\"\u003e\u003cSTRONG\u003eUsers of Microsoft 365 Defender\u003c/STRONG\u003e can also hunt and detect on similar items in this blog, but tailored towards investigation using \u003cA href=\"https://aka.ms/detect_solorigate\" target=\"_self\" rel=\"noopener noreferrer\"\u003eMicrosoft 365 Defender to protect against Solorigate\u003c/A\u003e.\u003c/FONT\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003c/TBODY\u003e\n\u003c/TABLE\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003eThe goal of this article is post-compromise investigation strategies and is focused on TTPs and not focused on specific IOCs.\u0026nbsp; Azure Sentinel customers are encouraged to review advisories and IOC’s shared by Microsoft MSRC and security partners to search on specific IOC’s in their environment using Azure Sentinel.\u0026nbsp; Links to these IOC’s are listed in the reference section at the end.\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003eTo make it easier for security teams to visualize and monitor their environments for this attack the MSTIC team has shared a \u003cA href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Workbooks/SolarWindsPostCompromiseHunting.json\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eSolarWinds Post Compromise\u003c/A\u003e hunting workbook via Azure Sentinel and Azure Sentinel GitHub. There are many things in this workbook that threat hunters would find useful and the workbook is complimentary to the hunting methods shared below. Importantly, if you have recently rotated ADFS key material this workbook can be useful in identifying attacker logon activity if they logon with old key material. Security teams should leverage this hunting workbook as part of their workflow in investigating this attack.\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003eThanks to the \u003cSTRONG\u003eMSTIC\u003c/STRONG\u003e and \u003cSTRONG\u003eM365\u003c/STRONG\u003e teams for collaborating to deliver this content in a timely manner. \u003cSTRONG\u003eSpecial thanks to\u003c/STRONG\u003e\u0026nbsp;\u003ca href=\"javascript:void(0)\" data-lia-user-mentions=\"\" data-lia-user-uid=\"293861\" data-lia-user-login=\"aprakash13\" class=\"lia-mention lia-mention-user\" rel=\"nofollow noopener noreferrer\"\u003eaprakash13\u003c/a\u003e,\u0026nbsp;\u003ca href=\"javascript:void(0)\" data-lia-user-mentions=\"\" data-lia-user-uid=\"313528\" data-lia-user-login=\"Ashwin_Patil\" class=\"lia-mention lia-mention-user\" rel=\"nofollow noopener noreferrer\"\u003eAshwin_Patil\u003c/a\u003e,\u0026nbsp;\u003ca href=\"javascript:void(0)\" data-lia-user-mentions=\"\" data-lia-user-uid=\"113210\" data-lia-user-login=\"Pete Bryan\" class=\"lia-mention lia-mention-user\" rel=\"nofollow noopener noreferrer\"\u003ePete Bryan\u003c/a\u003e,\u0026nbsp;\u003ca href=\"javascript:void(0)\" data-lia-user-mentions=\"\" data-lia-user-uid=\"640594\" data-lia-user-login=\"ItsReallyNick\" class=\"lia-mention lia-mention-user\" rel=\"nofollow noopener noreferrer\"\u003eItsReallyNick\u003c/a\u003e,\u0026nbsp;Chris Glyer,\u0026nbsp;\u003ca href=\"javascript:void(0)\" data-lia-user-mentions=\"\" data-lia-user-uid=\"591947\" data-lia-user-login=\"Cyb3rWard0g\" class=\"lia-mention lia-mention-user\" rel=\"nofollow noopener noreferrer\"\u003eCyb3rWard0g\u003c/a\u003e,\u0026nbsp;\u003ca href=\"javascript:void(0)\" data-lia-user-mentions=\"\" data-lia-user-uid=\"178222\" data-lia-user-login=\"Tim Burrell (MSTIC)\" class=\"lia-mention lia-mention-user\" rel=\"nofollow noopener noreferrer\"\u003eTim Burrell (MSTIC)\u003c/a\u003e,\u0026nbsp;Rob Mead,\u0026nbsp;\u003ca href=\"javascript:void(0)\" data-lia-user-mentions=\"\" data-lia-user-uid=\"686380\" data-lia-user-login=\"TomMcElroy\" class=\"lia-mention lia-mention-user\" rel=\"nofollow noopener noreferrer\"\u003eTomMcElroy\u003c/a\u003e,\u0026nbsp;\u003ca href=\"javascript:void(0)\" data-lia-user-mentions=\"\" data-lia-user-uid=\"75694\" data-lia-user-login=\"Elia Florio\" class=\"lia-mention lia-mention-user\" rel=\"nofollow noopener noreferrer\"\u003eElia Florio\u003c/a\u003e,\u0026nbsp;\u003ca href=\"javascript:void(0)\" data-lia-user-mentions=\"\" data-lia-user-uid=\"92617\" data-lia-user-login=\"Corina Feuerstein\" class=\"lia-mention lia-mention-user\" rel=\"nofollow noopener noreferrer\"\u003eCorina Feuerstein\u003c/a\u003e,\u0026nbsp;Ramin Nafisi, Michael Matonis.\u0026nbsp;\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003ePlease note that since Azure Sentinel and the M365 Advanced Hunting portal share the same query language and share similar data types, all of the referenced queries can be used directly or slightly modified to work in both.\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cH2 id=\"community-1995095-toc-hId-1308540585\"\u003eGaining a foothold\u003c/H2\u003e\n\u003cP\u003eAs shared in Microsoft’s technical blog – \u003cA href=\"https://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eCustomer Guidance on Recent Nation-state Cyber Attacks\u003c/A\u003e - attackers might have compromised the internal build systems or the update distribution systems of SolarWinds Orion software then modified a DLL component in the legitimate software and embedded backdoor code that would allow these attackers to remotely perform commands or deliver additional payloads. Below is a representation of various attack stages which you can also see in \u003cA href=\"https://securitycenter.windows.com/\" target=\"_blank\" rel=\"noopener nofollow noreferrer\"\u003eMicrosoft Threat Protection (MTP) portal\u003c/A\u003e.\u0026nbsp; Note that if you do not have Microsoft Threat Protection this link will not work for you.\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003e\u003cspan class=\"lia-media-object lia-media-is-inline lia-media-size-large\" data-image-alt=\"Image1.png\"\u003e\u003cbutton class=\"lia-media-unstyled-btn\" type=\"button\" aria-haspopup=\"true\" aria-label=\"Enlarge Image Image1.png\"\u003e\u003cimg src=\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTE1MWkzRkU2NThDQUY5QzMzNTg1?image-dimensions=729x481\u0026amp;revision=57\" width=\"729\" height=\"481\" alt=\"Image1.png\" /\u003e\u003c/button\u003e\u003c/span\u003e\u003c/P\u003e\n\u003cP\u003e \u003c/P\u003e\n\u003cP\u003eTo hunt for similar TTPs used in this attack, a good place to start is to build an inventory of the machines that have SolarWinds Orion components. Organizations might already have a software inventory management system to indicate hosts where the SolarWinds application is installed. Alternatively, Azure Sentinel could be leveraged to run a simple query to gather similar details. Azure Sentinel collects data from multiple different logs that could be used to gather this information. For example, through the recently released \u003cSPAN\u003e\u003cA href=\"https://docs.microsoft.com/en-us/azure/sentinel/connect-microsoft-365-defender\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eMicrosoft 365 Defender connector\u003c/A\u003e\u003c/SPAN\u003e, security teams can now easily ingest Microsoft 365 raw data into Azure Sentinel. Using the ingested data, a simple query like below can be written that will pull the hosts with SolarWinds process running in last 30 days based on Process execution either via host on boarded to Sentinel or on boarded via Microsoft Defender for Endpoints (MDE). The query also leverages the Sysmon logs that a lot of customers are collecting from their environment to surface the machines that have SolarWinds running on them. Similar queries that leverage M365 raw data could also be run from the M365's Advanced hunting portal.\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/SolarWindsInventory.yaml\" target=\"_self\" rel=\"noopener noreferrer\"\u003eSolarWinds Inventory check query\u003c/A\u003e\u003c/P\u003e\n\u003cdiv class=\"lia-spoiler-container\"\u003e\u003ca class=\"lia-spoiler-link\" href=\"#community-1995095-\" rel=\"nofollow noopener noreferrer\"\u003eSpoiler\u003c/a\u003e\u003cnoscript\u003e (Highlight to read)\u003c/noscript\u003e\u003cdiv class=\"lia-spoiler-border\"\u003e\u003cdiv class=\"lia-spoiler-content\"\u003e\n\u003cDIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003elet\u0026nbsp;timeframe\u0026nbsp;=\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003e30\u003c/SPAN\u003e\u003cSPAN\u003ed\u003c/SPAN\u003e\u003cSPAN\u003e;\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eunion\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;isfuzzy=\u003c/SPAN\u003e\u003cSPAN\u003etrue\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003eSecurityEvent\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003ewhere\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;TimeGenerated\u0026nbsp;\u0026gt;=\u0026nbsp;ago\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003etimeframe\u003c/SPAN\u003e\u003cSPAN\u003e)\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003ewhere\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;EventID\u0026nbsp;==\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003e'4688'\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003ewhere\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;tolower\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eNewProcessName\u003c/SPAN\u003e\u003cSPAN\u003e)\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003ehas\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003e'solarwinds'\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003eextend\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;MachineName\u0026nbsp;=\u0026nbsp;Computer\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003e,\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Process\u0026nbsp;=\u0026nbsp;NewProcessName\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003esummarize\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;StartTime\u0026nbsp;=\u0026nbsp;min\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eTimeGenerated\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;EndTime\u0026nbsp;=\u0026nbsp;max\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eTimeGenerated\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;MachineCount\u0026nbsp;=\u0026nbsp;dcount\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eMachineName\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;AccountCount\u0026nbsp;=\u0026nbsp;dcount\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eAccount\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;MachineNames\u0026nbsp;=\u0026nbsp;make_set\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eMachineName\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Accounts\u0026nbsp;=\u0026nbsp;make_set\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eAccount\u003c/SPAN\u003e\u003cSPAN\u003e)\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003eby\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Process\u003c/SPAN\u003e\u003cSPAN\u003e,\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Type\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003eDeviceProcessEvents\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003ewhere\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;TimeGenerated\u0026nbsp;\u0026gt;=\u0026nbsp;ago\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003etimeframe\u003c/SPAN\u003e\u003cSPAN\u003e)\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003ewhere\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;tolower\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eInitiatingProcessFolderPath\u003c/SPAN\u003e\u003cSPAN\u003e)\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003ehas\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003e'solarwinds'\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003eextend\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;MachineName\u0026nbsp;=\u0026nbsp;DeviceName\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003e,\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Process\u0026nbsp;=\u0026nbsp;InitiatingProcessFolderPath\u003c/SPAN\u003e\u003cSPAN\u003e,\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Account\u0026nbsp;=\u0026nbsp;AccountName\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003esummarize\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;StartTime\u0026nbsp;=\u0026nbsp;min\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eTimeGenerated\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;EndTime\u0026nbsp;=\u0026nbsp;max\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eTimeGenerated\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;MachineCount\u0026nbsp;=\u0026nbsp;dcount\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eMachineName\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;AccountCount\u0026nbsp;=\u0026nbsp;dcount\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eAccount\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;MachineNames\u0026nbsp;=\u0026nbsp;make_set\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eMachineName\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Accounts\u0026nbsp;=\u0026nbsp;make_set\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eAccount\u003c/SPAN\u003e\u003cSPAN\u003e)\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003eby\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Process\u003c/SPAN\u003e\u003cSPAN\u003e,\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Type\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003eEvent\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003ewhere\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;TimeGenerated\u0026nbsp;\u0026gt;=\u0026nbsp;ago\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003etimeframe\u003c/SPAN\u003e\u003cSPAN\u003e)\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003ewhere\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Source\u0026nbsp;==\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003e\"Microsoft-Windows-Sysmon\"\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003ewhere\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;EventID\u0026nbsp;==\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003e1\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003eextend\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Image\u0026nbsp;=\u0026nbsp;EventDetail\u003c/SPAN\u003e\u003cSPAN\u003e.[\u003c/SPAN\u003e\u003cSPAN\u003e4\u003c/SPAN\u003e\u003cSPAN\u003e].[\u003c/SPAN\u003e\u003cSPAN\u003e\"#text\"\u003c/SPAN\u003e\u003cSPAN\u003e]\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003ewhere\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;tolower\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eImage\u003c/SPAN\u003e\u003cSPAN\u003e)\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003ehas\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003e'solarwinds'\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003eextend\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;MachineName\u0026nbsp;=\u0026nbsp;Computer\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003e,\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Process\u0026nbsp;=\u0026nbsp;Image\u003c/SPAN\u003e\u003cSPAN\u003e,\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Account\u0026nbsp;=\u0026nbsp;UserName\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003esummarize\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;StartTime\u0026nbsp;=\u0026nbsp;min\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eTimeGenerated\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;EndTime\u0026nbsp;=\u0026nbsp;max\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eTimeGenerated\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;MachineCount\u0026nbsp;=\u0026nbsp;dcount\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eMachineName\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;AccountCount\u0026nbsp;=\u0026nbsp;dcount\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eAccount\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;MachineNames\u0026nbsp;=\u0026nbsp;make_set\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eMachineName\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Accounts\u0026nbsp;=\u0026nbsp;make_set\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eAccount\u003c/SPAN\u003e\u003cSPAN\u003e)\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003eby\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Process\u003c/SPAN\u003e\u003cSPAN\u003e,\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Type\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e)\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e)\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003cBR /\u003e\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003c/DIV\u003e\n\u003c/div\u003e\u003cnoscript\u003e\u003cdiv class=\"lia-spoiler-noscript-container\"\u003e\u003cdiv class=\"lia-spoiler-noscript-content\"\u003e\n\nlet\u0026nbsp;timeframe\u0026nbsp;=\u0026nbsp;30d;\u0026nbsp;\n(union\u0026nbsp;isfuzzy=true\u0026nbsp;\n(\u0026nbsp;\nSecurityEvent\u0026nbsp;\n|\u0026nbsp;where\u0026nbsp;TimeGenerated\u0026nbsp;\u0026gt;=\u0026nbsp;ago(timeframe)\u0026nbsp;\n|\u0026nbsp;where\u0026nbsp;EventID\u0026nbsp;==\u0026nbsp;'4688'\u0026nbsp;\n|\u0026nbsp;where\u0026nbsp;tolower(NewProcessName)\u0026nbsp;has\u0026nbsp;'solarwinds'\u0026nbsp;\n|\u0026nbsp;extend\u0026nbsp;MachineName\u0026nbsp;=\u0026nbsp;Computer\u0026nbsp;,\u0026nbsp;Process\u0026nbsp;=\u0026nbsp;NewProcessName\n|\u0026nbsp;summarize\u0026nbsp;StartTime\u0026nbsp;=\u0026nbsp;min(TimeGenerated),\u0026nbsp;EndTime\u0026nbsp;=\u0026nbsp;max(TimeGenerated),\u0026nbsp;MachineCount\u0026nbsp;=\u0026nbsp;dcount(MachineName),\u0026nbsp;AccountCount\u0026nbsp;=\u0026nbsp;dcount(Account),\u0026nbsp;MachineNames\u0026nbsp;=\u0026nbsp;make_set(MachineName),\u0026nbsp;Accounts\u0026nbsp;=\u0026nbsp;make_set(Account)\u0026nbsp;by\u0026nbsp;Process,\u0026nbsp;Type\n),\u0026nbsp;\n(\u0026nbsp;\nDeviceProcessEvents\u0026nbsp;\n|\u0026nbsp;where\u0026nbsp;TimeGenerated\u0026nbsp;\u0026gt;=\u0026nbsp;ago(timeframe)\u0026nbsp;\n|\u0026nbsp;where\u0026nbsp;tolower(InitiatingProcessFolderPath)\u0026nbsp;has\u0026nbsp;'solarwinds'\u0026nbsp;\n|\u0026nbsp;extend\u0026nbsp;MachineName\u0026nbsp;=\u0026nbsp;DeviceName\u0026nbsp;,\u0026nbsp;Process\u0026nbsp;=\u0026nbsp;InitiatingProcessFolderPath,\u0026nbsp;Account\u0026nbsp;=\u0026nbsp;AccountName\n|\u0026nbsp;summarize\u0026nbsp;StartTime\u0026nbsp;=\u0026nbsp;min(TimeGenerated),\u0026nbsp;EndTime\u0026nbsp;=\u0026nbsp;max(TimeGenerated),\u0026nbsp;MachineCount\u0026nbsp;=\u0026nbsp;dcount(MachineName),\u0026nbsp;AccountCount\u0026nbsp;=\u0026nbsp;dcount(Account),\u0026nbsp;MachineNames\u0026nbsp;=\u0026nbsp;make_set(MachineName),\u0026nbsp;Accounts\u0026nbsp;=\u0026nbsp;make_set(Account)\u0026nbsp;\u0026nbsp;by\u0026nbsp;Process,\u0026nbsp;Type\n),\u0026nbsp;\n(\u0026nbsp;\nEvent\u0026nbsp;\n|\u0026nbsp;where\u0026nbsp;TimeGenerated\u0026nbsp;\u0026gt;=\u0026nbsp;ago(timeframe)\u0026nbsp;\n|\u0026nbsp;where\u0026nbsp;Source\u0026nbsp;==\u0026nbsp;\"Microsoft-Windows-Sysmon\"\u0026nbsp;\n|\u0026nbsp;where\u0026nbsp;EventID\u0026nbsp;==\u0026nbsp;1\u0026nbsp;\n|\u0026nbsp;extend\u0026nbsp;Image\u0026nbsp;=\u0026nbsp;EventDetail.[4].[\"#text\"]\u0026nbsp;\n|\u0026nbsp;where\u0026nbsp;tolower(Image)\u0026nbsp;has\u0026nbsp;'solarwinds'\u0026nbsp;\n|\u0026nbsp;extend\u0026nbsp;MachineName\u0026nbsp;=\u0026nbsp;Computer\u0026nbsp;,\u0026nbsp;Process\u0026nbsp;=\u0026nbsp;Image,\u0026nbsp;Account\u0026nbsp;=\u0026nbsp;UserName\n|\u0026nbsp;summarize\u0026nbsp;StartTime\u0026nbsp;=\u0026nbsp;min(TimeGenerated),\u0026nbsp;EndTime\u0026nbsp;=\u0026nbsp;max(TimeGenerated),\u0026nbsp;MachineCount\u0026nbsp;=\u0026nbsp;dcount(MachineName),\u0026nbsp;AccountCount\u0026nbsp;=\u0026nbsp;dcount(Account),\u0026nbsp;MachineNames\u0026nbsp;=\u0026nbsp;make_set(MachineName),\u0026nbsp;Accounts\u0026nbsp;=\u0026nbsp;make_set(Account)\u0026nbsp;\u0026nbsp;by\u0026nbsp;Process,\u0026nbsp;Type\n)\u0026nbsp;\n)\u0026nbsp;\n\n\u003c/div\u003e\u003c/div\u003e\u003c/noscript\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cH6 id=\"community-1995095-toc-hId-903215278\"\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/30/2020\u003c/FONT\u003e\u003c/H6\u003e\n\u003cP\u003eOn systems where the malicious SolarWinds DLL (SolarWinds.Orion.Core.BusinessLayer.dll) is running, it is known that the attacker used a hardcoded named pipe '583da945-62af-10e8-4902-a8f205c72b2e' to conduct various checks as well as to ensure only one instance of the backdoor was running. The use of named pipes by malware is not uncommon as it provides a mechanism for communication between processes. This activity by the malware can be detected if you are collecting Sysmon (Event Id 17/18) or Security Event Id 5145 in your Azure Sentinel workspace. The\u0026nbsp;\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/SolorigateNamedPipe.yaml\" target=\"_self\" rel=\"noopener noreferrer\"\u003e\u003cSPAN\u003eSolorigate Named Pipe\u0026nbsp;\u003c/SPAN\u003edetection\u003c/A\u003e should not be considered reliable on its own as the creation of just the hardcoded named pipe does not indicate that the malicious code was completely triggered, and the machine beaconed out or received additional commands. However, presence of this is definitely suspicious and should warrant further in-depth investigation.\u003c/P\u003e\n\u003cdiv class=\"lia-spoiler-container\"\u003e\u003ca class=\"lia-spoiler-link\" href=\"#community-1995095-\" rel=\"nofollow noopener noreferrer\"\u003eSpoiler\u003c/a\u003e\u003cnoscript\u003e (Highlight to read)\u003c/noscript\u003e\u003cdiv class=\"lia-spoiler-border\"\u003e\u003cdiv class=\"lia-spoiler-content\"\u003elet timeframe = 1d;\u003cBR /\u003e(union isfuzzy=true\u003cBR /\u003e(Event\u003cBR /\u003e| where TimeGenerated \u0026gt;= ago(timeframe)\u003cBR /\u003e| where Source == \"Microsoft-Windows-Sysmon\"\u003cBR /\u003e| where EventID in (17,18)\u003cBR /\u003e| extend EvData = parse_xml(EventData)\u003cBR /\u003e| extend EventDetail = EvData.DataItem.EventData.Data\u003cBR /\u003e| extend NamedPipe = EventDetail.[5].[\"#text\"]\u003cBR /\u003e| extend ProcessDetail = EventDetail.[6].[\"#text\"]\u003cBR /\u003e| where NamedPipe contains '583da945-62af-10e8-4902-a8f205c72b2e'\u003cBR /\u003e| extend Account = UserName\u003cBR /\u003e| project-away EventDetail, EvData\u003cBR /\u003e),\u003cBR /\u003e(\u003cBR /\u003eSecurityEvent\u003cBR /\u003e| where TimeGenerated \u0026gt;= ago(timeframe)\u003cBR /\u003e| where EventID == '5145'\u003cBR /\u003e| where AccessList has '%%4418' // presence of CreatePipeInstance value \u003cBR /\u003e| where RelativeTargetName contains '583da945-62af-10e8-4902-a8f205c72b2e'\u003cBR /\u003e)\u003cBR /\u003e)\u003cBR /\u003e| extend timestamp = TimeGenerated, AccountCustomEntity = Account, HostCustomEntity = Computer\u003c/div\u003e\u003cnoscript\u003e\u003cdiv class=\"lia-spoiler-noscript-container\"\u003e\u003cdiv class=\"lia-spoiler-noscript-content\"\u003elet timeframe = 1d;(union isfuzzy=true(Event| where TimeGenerated \u0026gt;= ago(timeframe)| where Source == \"Microsoft-Windows-Sysmon\"| where EventID in (17,18)| extend EvData = parse_xml(EventData)| extend EventDetail = EvData.DataItem.EventData.Data| extend NamedPipe = EventDetail.[5].[\"#text\"]| extend ProcessDetail = EventDetail.[6].[\"#text\"]| where NamedPipe contains '583da945-62af-10e8-4902-a8f205c72b2e'| extend Account = UserName| project-away EventDetail, EvData),(SecurityEvent| where TimeGenerated \u0026gt;= ago(timeframe)| where EventID == '5145'| where AccessList has '%%4418' // presence of CreatePipeInstance value | where RelativeTargetName contains '583da945-62af-10e8-4902-a8f205c72b2e'))| extend timestamp = TimeGenerated, AccountCustomEntity = Account, HostCustomEntity = Computer\u003c/div\u003e\u003c/div\u003e\u003c/noscript\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cH2 id=\"community-1995095-toc-hId-1988598955\"\u003ePrivilege Escalation\u003c/H2\u003e\n\u003cP\u003eOnce the adversary acquires an initial foothold on a system thru the SolarWinds process they will have System account level access, the attacker will then attempt to elevate to domain admin level access to the environment. The Microsoft Threat Intelligence Center (MSTIC) team has already delivered multiple queries into Azure Sentinel that identify similar TTPs and many are also available in M365. These methodologies are not specific to just this threat actor or this attack but have been seen in various attack campaigns.\u003c/P\u003e\n\u003cP\u003eIdentifying abnormal logon activities or additions to privileged groups is one way to identify privilege escalation.\u003c/P\u003e\n\u003cH6 id=\"community-1995095-toc-hId-1583273648\"\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/17/2020\u003c/FONT\u003e\u003c/H6\u003e\n\u003cUL\u003e\n\u003cLI\u003eChecking for \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/HostsWithNewLogons.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehosts with new logons\u003c/A\u003e to identify potential lateral movement by the attacker.\u003c/LI\u003e\n\u003cLI\u003eLook for any new\u0026nbsp;\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserCreatedAddedToBuiltinAdmins_1d.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eaccount being created and added to built-in administrators group.\u003c/A\u003e\u003c/LI\u003e\n\u003cLI\u003eLook for any \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserAccountAddedToPrivlegeGroup_1h.yaml\" target=\"_self\" rel=\"noopener noreferrer\"\u003eu\u003c/A\u003e\u003cSPAN\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserAccountAddedToPrivlegeGroup_1h.yaml\" target=\"_self\" rel=\"noopener noreferrer\"\u003eser account added to privileged built in domain local or global groups,\u003c/A\u003e\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003eincluding adding accounts to a domain privileged group\u003c/SPAN\u003e such as Enterprise Admins, Cert Publishers or DnsAdmins.\u003c/LI\u003e\n\u003cLI\u003eMonitor for \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/TrackingPrivAccounts.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003erare activity by a high-value account\u003c/A\u003e carried out on a system or service.\u003c/LI\u003e\n\u003c/UL\u003e\n\u003cP\u003eRelated to this attack, in some environments service account credentials had been granted administrative privileges. The above queries can be modified to remove the condition of focusing “User” accounts by commenting the query to include service accounts in the scope where applicable:\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003e\u003cSTRONG\u003e\u003cEM\u003e//| where AccountType == \"User\"\u003c/EM\u003e\u003c/STRONG\u003e\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003ePlease see the \u003cA href=\"https://github.com/Azure/Azure-Sentinel\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eAzure Sentinel Github\u003c/A\u003e for additional queries and hunting ideas related to Accounts under the Detections and Hunting Queries sections for AuditLogs, and SecurityEvents\u003c/P\u003e\n\u003cP\u003eMicrosoft 365 Defender team has also shared quite a few sample queries for use in their \u003cSPAN\u003e\u003cA href=\"https://github.com/microsoft/Microsoft-365-Defender-Hunting-Queries\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eadvanced hunting\u003c/A\u003e\u003c/SPAN\u003e portal that could be leveraged to detect this part of the attack. Additionally, the logic for many of the Azure Sentinel queries can also be transformed to equivalent queries for Microsoft 365 Defender, that could be run in their Advanced Hunting Portal.\u003c/P\u003e\n\u003cP\u003eMicrosoft 365 Defender has an upcoming complimentary blog that will be updated here once available.\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cH2 id=\"community-1995095-toc-hId--1626309971\"\u003eCertificate Export\u003c/H2\u003e\n\u003cP\u003eThe next step in the attack was stealing the certificate that signs SAML tokens from the federation server (ADFS) called a Token Signing Cert (TSC). SAML Tokens\u0026nbsp;are basically XML representations of claims.\u0026nbsp; You can read more about ADFS in \u003cA href=\"https://docs.microsoft.com/en-us/azure/active-directory/hybrid/whatis-fed\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eWhat is federation with Azure AD? | Microsoft Docs\u003c/A\u003e and SAML at \u003cA href=\"https://docs.microsoft.com/en-us/azure/active-directory/develop/single-sign-on-saml-protocol\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eAzure Single Sign On SAML Protocol - Microsoft identity platform | Microsoft Docs\u003c/A\u003e. The process is as follows:\u003c/P\u003e\n\u003cOL\u003e\n\u003cLI\u003eA client requests a SAML token from an ADFS Server by authenticating to that server using Windows credentials.\u003c/LI\u003e\n\u003cLI\u003eThe ADFS server issues a SAML token to the client.\u003c/LI\u003e\n\u003cLI\u003eThe SAML token is signed with a certificate associated with the server.\u003c/LI\u003e\n\u003cLI\u003eThe client then presents the SAML token to the application that it needs access to.\u003c/LI\u003e\n\u003cLI\u003eThe signature over the SAML token tells the application that the security token service issued the token and grants access to the client.\u003c/LI\u003e\n\u003c/OL\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cH2 id=\"community-1995095-toc-hId-861202862\"\u003e\u003cSPAN data-contrast=\"none\"\u003eADFS Key Extraction \u003c/SPAN\u003e\u003c/H2\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003e\u003cSPAN data-contrast=\"none\"\u003eUpdated 01/15/2021\u003c/SPAN\u003e\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003eThe implication of stealing the Token Signing Cert (TSC) is that once the certificate has been acquired, the actor can forge SAML (Security Assertions Markup Language) tokens with whatever claims and lifetime they choose, then sign it with the certificate that has been acquired.  Microsoft continues to strongly recommend securing your AD FS (Active Directory Federation Service) TSC because if these TSC’s are acquired by a bad actor, this then enables the actor to forge SAML tokens that impersonate highly privileged accounts.  There are publicly available pen-testing tools like \u003cA href=\"https://github.com/fireeye/adfsdump\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eADFSDump\u003c/A\u003e and \u003cA href=\"https://github.com/fireeye/adfspoof\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eADFSpoof\u003c/A\u003e \u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003ethat help with extracting required information from\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003ethe AD\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003eFS configuration database\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun CommentStart  BCX8 SCXW227613231\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003eto generate the forged security tokens\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003e.  \u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun CommentStart  BCX8 SCXW227613231\"\u003eWhile\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003ewe have not confirmed\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003ethese\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun CommentStart  BCX8 SCXW227613231\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003especific tools were\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003eused in th\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003eis attack\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003e, they are useful for simulating the attack behavior or executing a similar attack and therefore\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003e,\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003eMicrosoft has\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun CommentStart  BCX8 SCXW227613231\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003ecreated\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003ea high\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003e-fidelity detection related to this\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003efor M365 Defender\u003c/SPAN\u003e\u003c/SPAN\u003e:\u003c/P\u003e\n\u003cUL\u003e\n\u003cLI\u003e\u003cSTRONG\u003eADFS private key extraction\u003c/STRONG\u003e which detects ADFS private key extraction patterns from tools such as ADFSDump.\u003c/LI\u003e\n\u003c/UL\u003e\n\u003cP\u003e\u003cSTRONG\u003eNote:\u003c/STRONG\u003e \u003cSPAN class=\"TextRun  BCX8 SCXW233666654\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW233666654\"\u003eAny M365 Defender alert\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW233666654\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW233666654\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003ecan be seen in Azure Sentinel Security Alerts or in the M365 security portal\u003c/SPAN\u003e\u003c/SPAN\u003e.\u003c/P\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 01/15/2021\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003e\u003cSPAN data-contrast=\"auto\"\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003eTh\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003ee\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003eTTP (tactics, techniques, and procedures)\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003e\u0026nbsp;observed in the \u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun SpellingErrorV2  BCX8 SCXW94422071\"\u003eSolorigate\u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003e attack is the creation of\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003ea\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003elegitimate SAML token used to authenticate as any user. One way an attacker could achieve this is by compromising\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun ContextualSpellingAndGrammarErrorV2  BCX8 SCXW94422071\"\u003eAD\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003eFS key material.\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003eMicrosoft\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003ehas a\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003e\u0026nbsp;new\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003e\u0026nbsp;detection for this as stated above\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun ContextualSpellingAndGrammarErrorV2  BCX8 DefaultHighlightTransition SCXW94422071\"\u003eand\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun ContextualSpellingAndGrammarErrorV2  BCX8 DefaultHighlightTransition SCXW94422071\"\u003efor\u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003e\u0026nbsp;Azure Sentinel\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003ehas\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003ealso created a Windows Event Log based detection that indicates\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003e\u0026nbsp;an\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003e \u003c/SPAN\u003e\u003c/SPAN\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/MultipleDataSources/ADFS-DKM-MasterKey-Export.yaml\" target=\"_self\" rel=\"noopener noreferrer\"\u003eADFS DKM Master Key Export\u003c/A\u003e.\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003e\u0026nbsp;\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003eAs part of the update for this query to the Azure Sentinel GitHub,\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun CommentStart  BCX8 SCXW94422071\"\u003ethere is a\u003c/SPAN\u003e\u003c/SPAN\u003e \u003cA href=\"https://github.com/Azure/Azure-Sentinel/pull/1512#issue-543053339\" target=\"_self\" rel=\"noopener noreferrer\"\u003edetailed write up\u003c/A\u003e \u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003efor\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003ewhy this\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003eis\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003einteresting\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003e\u0026nbsp;along with a\u0026nbsp;\u003cA class=\"Hyperlink  BCX8 SCXW94422071\" href=\"https://github.com/Azure/Azure-Sentinel/pull/1562#issue-551542469\" target=\"_blank\" rel=\"noopener noreferrer\"\u003e\u003cSPAN class=\"FieldRange  BCX8 SCXW94422071\"\u003e\u003cSPAN class=\"TextRun Underlined  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun CommentStart  BCX8 SCXW94422071\" data-ccp-charstyle=\"Hyperlink\"\u003esubsequent addition\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/A\u003e\u0026nbsp;providing clarity\u0026nbsp;on how to get 4662\u0026nbsp;events\u0026nbsp;to fire\u003c/SPAN\u003e\u003c/SPAN\u003e.\u0026nbsp; This detection should not be considered reliable on its own but can identify suspicious activity that warrants further investigation.\u003c/SPAN\u003e\u003c/P\u003e\n\u003cP\u003e\u003cSPAN data-contrast=\"auto\"\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 01/15/2021\u003c/FONT\u003e\u003c/SPAN\u003e\u003c/P\u003e\n\u003cdiv class=\"lia-spoiler-container\"\u003e\u003ca class=\"lia-spoiler-link\" href=\"#community-1995095-\" rel=\"nofollow noopener noreferrer\"\u003eSpoiler\u003c/a\u003e\u003cnoscript\u003e (Highlight to read)\u003c/noscript\u003e\u003cdiv class=\"lia-spoiler-border\"\u003e\u003cdiv class=\"lia-spoiler-content\"\u003e\n\u003cP\u003e\u0026nbsp;(union isfuzzy=true (SecurityEvent \u003cBR /\u003e| where EventID == 4662 // You need to create a SACL on the ADFS Policy Store DKM group for this event to be created. \u003cBR /\u003e| where ObjectServer == 'DS'\u003cBR /\u003e| where OperationType == 'Object Access'\u003cBR /\u003e//| where ObjectName contains '\u0026lt;GUID of ADFS Policy Store DKM Group object' This is unique to the domain. Check description for more details.\u003cBR /\u003e| where ObjectType contains '5cb41ed0-0e4c-11d0-a286-00aa003049e2' // Contact Class\u003cBR /\u003e| where Properties contains '8d3bca50-1d7e-11d0-a081-00aa006c33ed' // Picture Attribute - Ldap-Display-Name: thumbnailPhoto\u003cBR /\u003e| extend timestamp = TimeGenerated, HostCustomEntity = Computer, AccountCustomEntity = SubjectAccount),\u003cBR /\u003e(DeviceEvents\u003cBR /\u003e| where ActionType =~ \"LdapSearch\"\u003cBR /\u003e| where AdditionalFields.AttributeList contains \"thumbnailPhoto\"\u003cBR /\u003e| where AdditionalFields.DistinguishedName contains \"CN=ADFS,CN=Microsoft,CN=Program Data\" // Filter results to show only hits related to the ADFS AD container\u003cBR /\u003e| extend timestamp = TimeGenerated, HostCustomEntity = DeviceName, AccountCustomEntity = InitiatingProcessAccountName)\u003cBR /\u003e)\u003c/P\u003e\n\u003c/div\u003e\u003cnoscript\u003e\u003cdiv class=\"lia-spoiler-noscript-container\"\u003e\u003cdiv class=\"lia-spoiler-noscript-content\"\u003e\n\u0026nbsp;(union isfuzzy=true (SecurityEvent | where EventID == 4662 // You need to create a SACL on the ADFS Policy Store DKM group for this event to be created. | where ObjectServer == 'DS'| where OperationType == 'Object Access'//| where ObjectName contains '\u0026lt;GUID of ADFS Policy Store DKM Group object' This is unique to the domain. Check description for more details.| where ObjectType contains '5cb41ed0-0e4c-11d0-a286-00aa003049e2' // Contact Class| where Properties contains '8d3bca50-1d7e-11d0-a081-00aa006c33ed' // Picture Attribute - Ldap-Display-Name: thumbnailPhoto| extend timestamp = TimeGenerated, HostCustomEntity = Computer, AccountCustomEntity = SubjectAccount),(DeviceEvents| where ActionType =~ \"LdapSearch\"| where AdditionalFields.AttributeList contains \"thumbnailPhoto\"| where AdditionalFields.DistinguishedName contains \"CN=ADFS,CN=Microsoft,CN=Program Data\" // Filter results to show only hits related to the ADFS AD container| extend timestamp = TimeGenerated, HostCustomEntity = DeviceName, AccountCustomEntity = InitiatingProcessAccountName))\n\u003c/div\u003e\u003c/div\u003e\u003c/noscript\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003e\u003cSPAN data-contrast=\"none\"\u003eUpdated 12/19/2020\u003c/SPAN\u003e\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003eMSTIC has developed another \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/ADFSKeyExportSysmon.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003edetection\u003c/A\u003e for ADFS server key export events. This detection leverages the visibility provided by \u003cA href=\"https://docs.microsoft.com/en-us/sysinternals/downloads/sysmon\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eSysmon\u003c/A\u003e and provides a more reliable detection method than that covered in the Windows Event Log detection. For this detection to be effective you must be collecting Sysmon Event IDs 17 and 18 into \u003cA href=\"https://medium.com/blueteamlabs/using-sysmon-in-azure-sentinel-883eb6ffc431\" target=\"_blank\" rel=\"noopener nofollow noreferrer\"\u003eyour Azure Sentinel workspace\u003c/A\u003e.\u003c/P\u003e\n\u003cdiv class=\"lia-spoiler-container\"\u003e\u003ca class=\"lia-spoiler-link\" href=\"#community-1995095-\" rel=\"nofollow noopener noreferrer\"\u003eSpoiler\u003c/a\u003e\u003cnoscript\u003e (Highlight to read)\u003c/noscript\u003e\u003cdiv class=\"lia-spoiler-border\"\u003e\u003cdiv class=\"lia-spoiler-content\"\u003e// Adjust this to use a longer timeframe to identify ADFS servers\u003cBR /\u003elet lookback = 6d;\u003cBR /\u003e// Adjust this to adjust the key export detection timeframe\u003cBR /\u003elet timeframe = 1d;\u003cBR /\u003e// Start be identifying ADFS servers to reduce FP chance\u003cBR /\u003elet ADFS_Servers = (\u003cBR /\u003eEvent\u003cBR /\u003e| where TimeGenerated \u0026gt; ago(timeframe+lookback)\u003cBR /\u003e| where Source == \"Microsoft-Windows-Sysmon\"\u003cBR /\u003e| extend EventData = parse_xml(EventData).DataItem.EventData.Data\u003cBR /\u003e| mv-expand bagexpansion=array EventData\u003cBR /\u003e| evaluate bag_unpack(EventData)\u003cBR /\u003e| extend Key=tostring(['@Name']), Value=['#text']\u003cBR /\u003e| evaluate pivot(Key, any(Value), TimeGenerated, Source, EventLog, Computer, EventLevel, EventLevelName, EventID, UserName, RenderedDescription, MG, ManagementGroupName, Type, _ResourceId)\u003cBR /\u003e| extend process = split(Image, '\\\\', -1)[-1]\u003cBR /\u003e| where process =~ \"Microsoft.IdentityServer.ServiceHost.exe\"\u003cBR /\u003e| summarize by Computer);\u003cBR /\u003e// Look for ADFS servers where Named Pipes event are present\u003cBR /\u003eEvent\u003cBR /\u003e| where TimeGenerated \u0026gt; ago(timeframe)\u003cBR /\u003e| where Source == \"Microsoft-Windows-Sysmon\"\u003cBR /\u003e| where Computer in~ (ADFS_Servers)\u003cBR /\u003e| extend RenderedDescription = tostring(split(RenderedDescription, \":\")[0])\u003cBR /\u003e| extend EventData = parse_xml(EventData).DataItem.EventData.Data\u003cBR /\u003e| mv-expand bagexpansion=array EventData\u003cBR /\u003e| evaluate bag_unpack(EventData)\u003cBR /\u003e| extend Key=tostring(['@Name']), Value=['#text']\u003cBR /\u003e| evaluate pivot(Key, any(Value), TimeGenerated, Source, EventLog, Computer, EventLevel, EventLevelName, EventID, UserName, RenderedDescription, MG, ManagementGroupName, Type, _ResourceId)\u003cBR /\u003e| extend RuleName = column_ifexists(\"RuleName\", \"\"), TechniqueId = column_ifexists(\"TechniqueId\", \"\"), TechniqueName = column_ifexists(\"TechniqueName\", \"\")\u003cBR /\u003e| parse RuleName with * 'technique_id=' TechniqueId ',' * 'technique_name=' TechniqueName\u003cBR /\u003e| where EventID in (17,18)\u003cBR /\u003e// Look for Pipe related to querying the WID\u003cBR /\u003e| where PipeName == \"\\\\MICROSOFT##WID\\\\tsql\\\\query\"\u003cBR /\u003e| extend process = split(Image, '\\\\', -1)[-1]\u003cBR /\u003e// Exclude expected processes\u003cBR /\u003e| where process !in (\"Microsoft.IdentityServer.ServiceHost.exe\", \"Microsoft.Identity.Health.Adfs.PshSurrogate.exe\", \"AzureADConnect.exe\", \"Microsoft.Tri.Sensor.exe\", \"wsmprovhost.exe\",\"mmc.exe\", \"sqlservr.exe\")\u003cBR /\u003e| extend Operation = RenderedDescription\u003cBR /\u003e| project-reorder TimeGenerated, EventType, Operation, process, Image, Computer, UserName\u003cBR /\u003e| extend HostCustomEntity = Computer, AccountCustomEntity = UserName\u003c/div\u003e\u003cnoscript\u003e\u003cdiv class=\"lia-spoiler-noscript-container\"\u003e\u003cdiv class=\"lia-spoiler-noscript-content\"\u003e// Adjust this to use a longer timeframe to identify ADFS serverslet lookback = 6d;// Adjust this to adjust the key export detection timeframelet timeframe = 1d;// Start be identifying ADFS servers to reduce FP chancelet ADFS_Servers = (Event| where TimeGenerated \u0026gt; ago(timeframe+lookback)| where Source == \"Microsoft-Windows-Sysmon\"| extend EventData = parse_xml(EventData).DataItem.EventData.Data| mv-expand bagexpansion=array EventData| evaluate bag_unpack(EventData)| extend Key=tostring(['@Name']), Value=['#text']| evaluate pivot(Key, any(Value), TimeGenerated, Source, EventLog, Computer, EventLevel, EventLevelName, EventID, UserName, RenderedDescription, MG, ManagementGroupName, Type, _ResourceId)| extend process = split(Image, '\\\\', -1)[-1]| where process =~ \"Microsoft.IdentityServer.ServiceHost.exe\"| summarize by Computer);// Look for ADFS servers where Named Pipes event are presentEvent| where TimeGenerated \u0026gt; ago(timeframe)| where Source == \"Microsoft-Windows-Sysmon\"| where Computer in~ (ADFS_Servers)| extend RenderedDescription = tostring(split(RenderedDescription, \":\")[0])| extend EventData = parse_xml(EventData).DataItem.EventData.Data| mv-expand bagexpansion=array EventData| evaluate bag_unpack(EventData)| extend Key=tostring(['@Name']), Value=['#text']| evaluate pivot(Key, any(Value), TimeGenerated, Source, EventLog, Computer, EventLevel, EventLevelName, EventID, UserName, RenderedDescription, MG, ManagementGroupName, Type, _ResourceId)| extend RuleName = column_ifexists(\"RuleName\", \"\"), TechniqueId = column_ifexists(\"TechniqueId\", \"\"), TechniqueName = column_ifexists(\"TechniqueName\", \"\")| parse RuleName with * 'technique_id=' TechniqueId ',' * 'technique_name=' TechniqueName| where EventID in (17,18)// Look for Pipe related to querying the WID| where PipeName == \"\\\\MICROSOFT##WID\\\\tsql\\\\query\"| extend process = split(Image, '\\\\', -1)[-1]// Exclude expected processes| where process !in (\"Microsoft.IdentityServer.ServiceHost.exe\", \"Microsoft.Identity.Health.Adfs.PshSurrogate.exe\", \"AzureADConnect.exe\", \"Microsoft.Tri.Sensor.exe\", \"wsmprovhost.exe\",\"mmc.exe\", \"sqlservr.exe\")| extend Operation = RenderedDescription| project-reorder TimeGenerated, EventType, Operation, process, Image, Computer, UserName| extend HostCustomEntity = Computer, AccountCustomEntity = UserName\u003c/div\u003e\u003c/div\u003e\u003c/noscript\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cP\u003eOutside of directly looking for tools, this adversary may have used custom tooling so looking for anomalous process executions or anomalous accounts logging on to our ADFS server can give us some clue when such attacks happen. Azure Sentinel provides queries that can help to:\u003c/P\u003e\n\u003cUL\u003e\n\u003cLI\u003eFind \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/ProcessEntropy.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003erare anomalous process in your environment\u003c/A\u003e.\u003c/LI\u003e\n\u003cLI\u003eAlso look for \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/RareProcbyServiceAccount.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003erare processes run by service accounts\u003c/A\u003e\u003c/LI\u003e\n\u003cLI\u003eOr uncommon processes that are in the \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/uncommon_processes.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ebottom 5% of all the process\u003c/A\u003e.\u003c/LI\u003e\n\u003cLI\u003eIn some instances, there is a rare command line syntax related to DLL loading, you can adjust these queries to also look at rarity on the command line.\u003c/LI\u003e\n\u003c/UL\u003e\n\u003cP\u003eEvery environment is different and some of these queries being generic could be noisy. So, in the first step a good approach would be to limit this kind of hunting to our ADFS server.\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cH2 id=\"community-1995095-toc-hId--946251601\"\u003eAzure Active Directory Hunting\u003c/H2\u003e\n\u003cP\u003eHaving gained a significant foothold in the on prem environment, the actor also targeted the Azure AD of some of the compromised organizations and made modifications to Azure AD settings to facilitate long term access. Microsoft has shared many relevant queries through the \u003cA href=\"https://github.com/Azure/Azure-Sentinel\" target=\"_self\" rel=\"noopener noreferrer\"\u003eAzure Sentinel GitHub\u003c/A\u003e to identify these actions.\u003c/P\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 01/15/2021\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003eOne such activity is related to modifying \u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003edomain federation trust settings\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003e.\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003eA\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003efederation trust signifies\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003ethe establishment\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003eof\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003eauthentication\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003eand authorization trust\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003ebetween two organizations so that users located in partner organization\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003es\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003ecan send authentication\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003eand authorization\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003erequests successfully\u003c/SPAN\u003e\u003c/SPAN\u003e.\u003c/P\u003e\n\u003cUL\u003e\n\u003cLI\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003eWhile not specifically seen in this attack\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003e, tracking federation trust modifications is\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003eimportant\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003e.\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003eThe Azure Sentinel query for \u003c/SPAN\u003e\u003c/SPAN\u003e\u003cA class=\"Hyperlink  BCX8 SCXW231191900\" href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/ADFSDomainTrustMods.yaml\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003cSPAN class=\"TextRun Underlined  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003edomain federation trust settings modification\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/A\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003e will alert when a user or application modifies the federation settings on the domain particularly when a new Active Directory Federated Service (ADFS) Trusted Realm object, such as a signing certificate, is added to the domain\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003eor there is an update to domain authentication from \u003cSTRONG\u003emanaged\u003c/STRONG\u003e to\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSTRONG\u003e\u003cSPAN class=\"NormalTextRun ContextualSpellingAndGrammarErrorV2  BCX8 SCXW231191900\"\u003efederated\u003c/SPAN\u003e\u003c/STRONG\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003e\u003cSTRONG\u003e.\u003c/STRONG\u003e Modification to domain federation settings should be rare\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003eand\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003ethis\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003eshould be treated as\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003ea high-fidelity alert that\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003eAzure AD and\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun CommentStart  BCX8 SCXW231191900\"\u003eAzure Sentinel users\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003eshould\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003efollow up on\u003c/SPAN\u003e\u003c/SPAN\u003e.\u003c/LI\u003e\n\u003c/UL\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 01/15/2021\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003e\u003cSPAN class=\"TrackChangeTextInsertion TrackedChange SCXW226733069 BCX8\"\u003e\u003cSPAN class=\"TextRun SCXW226733069 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW226733069 BCX8\"\u003eThe original purpose of the\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/AuditLogs/StsRefreshTokenModification.yaml\" target=\"_self\" rel=\"noopener noreferrer\"\u003e\u003cSPAN class=\"NormalTextRun SpellingErrorV2 SCXW226733069 BCX8 DefaultHighlightTransition\"\u003eSTSRefreshTokenModification\u003c/SPAN\u003e\u003c/A\u003e\u003cSPAN class=\"NormalTextRun SCXW226733069 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003elow severity, hunting-only query was to demonstrate an event that has token validity time periods in it and demonstrate how one could monitor for anomalous/edited tokens. We have determined this event will only fire on the manual expiration of the\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun SpellingErrorV2 SCXW226733069 BCX8\"\u003eStsRefreshToken\u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun SCXW226733069 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003eby an admin (or the user). These types of events are most often generated when legitimate administrators troubleshoot frequent AAD (Azure AD) user sign-ins. To avoid any confusion with\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun SpellingErrorV2 SCXW226733069 BCX8\"\u003eSolorigate\u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun SCXW226733069 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003einvestigation and hunting, we have removed this section from the blog.\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003eAnother such activity is adding access to the Service Principal or Application.\u0026nbsp; If a threat actor obtains access to an Application Administrator account, they may configure alternate authentication mechanisms for direct access to any of the scopes and services available to the Service Principal. With these privileges, the actor can add alternative authentication material for direct access to resources using this credential.\u003c/P\u003e\n\u003cUL\u003e\n\u003cLI\u003eIdentify where the\u0026nbsp;\u003cSPAN\u003everify KeyCredential\u003c/SPAN\u003e has\u003cSTRONG\u003e been updated\u003c/STRONG\u003e with\u0026nbsp;\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/NewAppOrServicePrincipalCredential.yaml\" target=\"_self\" rel=\"noopener noreferrer\"\u003e\u003cSPAN\u003eNew access credential added to Application or Service Principal\u003c/SPAN\u003e.\u003c/A\u003e\u003c/LI\u003e\n\u003c/UL\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/20/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cUL\u003e\n\u003cLI\u003eIdentify where the\u0026nbsp;\u003cSPAN\u003everify KeyCredential \u003cSTRONG\u003ewas not present\u003c/STRONG\u003e and has now has had its \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/FirstAppOrServicePrincipalCredential.yaml\" target=\"_self\" rel=\"noopener noreferrer\"\u003eFirst access credential added to Application or Service Principal where no credential was present\u003c/A\u003e.\u003c/SPAN\u003e\u003c/LI\u003e\n\u003c/UL\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cdiv class=\"lia-spoiler-container\"\u003e\u003ca class=\"lia-spoiler-link\" href=\"#community-1995095-\" rel=\"nofollow noopener noreferrer\"\u003eSpoiler\u003c/a\u003e\u003cnoscript\u003e (Highlight to read)\u003c/noscript\u003e\u003cdiv class=\"lia-spoiler-border\"\u003e\u003cdiv class=\"lia-spoiler-content\"\u003e\n\u003cP\u003e\u003cSTRONG\u003eNew access credential added to Application or Service Principal\u003c/STRONG\u003e\u003cBR /\u003elet auditLookback = 1h;\u003cBR /\u003eAuditLogs\u003cBR /\u003e| where TimeGenerated \u0026gt; ago(auditLookback)\u003cBR /\u003e| where OperationName has_any (\"Add service principal\", \"Certificates and secrets management\") // captures \"Add service principal\", \"Add service principal credentials\", and \"Update application – Certificates and secrets management\" events\u003cBR /\u003e| where Result =~ \"success\"\u003cBR /\u003e| mv-expand target = TargetResources\u003cBR /\u003e| where tostring(InitiatedBy.user.userPrincipalName) has \"@\" or tostring(InitiatedBy.app.displayName) has \"@\"\u003cBR /\u003e| extend targetDisplayName = tostring(TargetResources[0].displayName)\u003cBR /\u003e| extend targetId = tostring(TargetResources[0].id)\u003cBR /\u003e| extend targetType = tostring(TargetResources[0].type)\u003cBR /\u003e| extend keyEvents = TargetResources[0].modifiedProperties\u003cBR /\u003e| mv-expand keyEvents\u003cBR /\u003e| where keyEvents.displayName =~ \"KeyDescription\"\u003cBR /\u003e| extend new_value_set = parse_json(tostring(keyEvents.newValue))\u003cBR /\u003e| extend old_value_set = parse_json(tostring(keyEvents.oldValue))\u003cBR /\u003e| where old_value_set != \"[]\"\u003cBR /\u003e| extend diff = set_difference(new_value_set, old_value_set)\u003cBR /\u003e| where isnotempty(diff)\u003cBR /\u003e| parse diff with * \"KeyIdentifier=\" keyIdentifier:string \",KeyType=\" keyType:string \",KeyUsage=\" keyUsage:string \",DisplayName=\" keyDisplayName:string \"]\" *\u003cBR /\u003e| where keyUsage == \"Verify\" or keyUsage == \"\"\u003cBR /\u003e| extend UserAgent = iff(AdditionalDetails[0].key == \"User-Agent\",tostring(AdditionalDetails[0].value),\"\")\u003cBR /\u003e| extend InitiatingUserOrApp = iff(isnotempty(InitiatedBy.user.userPrincipalName),tostring(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.app.displayName))\u003cBR /\u003e| extend InitiatingIpAddress = iff(isnotempty(InitiatedBy.user.ipAddress), tostring(InitiatedBy.user.ipAddress), tostring(InitiatedBy.app.ipAddress))\u003cBR /\u003e// The below line is currently commented out but Azure Sentinel users can modify this query to show only Application or only Service Principal events in their environment\u003cBR /\u003e//| where targetType =~ \"Application\" // or targetType =~ \"ServicePrincipal\"\u003cBR /\u003e| project-away diff, new_value_set, old_value_set\u003cBR /\u003e| project-reorder TimeGenerated, OperationName, InitiatingUserOrApp, InitiatingIpAddress, UserAgent, targetDisplayName, targetId, targetType, keyDisplayName, keyType, keyUsage, keyIdentifier, CorrelationId, TenantId\u003cBR /\u003e| extend timestamp = TimeGenerated, AccountCustomEntity = InitiatingUserOrApp, IPCustomEntity = InitiatingIpAddress\u003cBR /\u003e\u003cBR /\u003e\u003c/P\u003e\n\u003cP\u003e\u003cSTRONG\u003eFirst access credential added to Application or Service Principal where no credential was present\u003c/STRONG\u003e\u003cBR /\u003elet auditLookback = 1h;\u003cBR /\u003eAuditLogs\u003cBR /\u003e| where TimeGenerated \u0026gt; ago(auditLookback)\u003cBR /\u003e| where OperationName has_any (\"Add service principal\", \"Certificates and secrets management\") // captures \"Add service principal\", \"Add service principal credentials\", and \"Update application – Certificates and secrets management\" events\u003cBR /\u003e| where Result =~ \"success\"\u003cBR /\u003e| mv-expand target = TargetResources\u003cBR /\u003e| where tostring(InitiatedBy.user.userPrincipalName) has \"@\" or tostring(InitiatedBy.app.displayName) has \"@\"\u003cBR /\u003e| extend targetDisplayName = tostring(TargetResources[0].displayName)\u003cBR /\u003e| extend targetId = tostring(TargetResources[0].id)\u003cBR /\u003e| extend targetType = tostring(TargetResources[0].type)\u003cBR /\u003e| extend keyEvents = TargetResources[0].modifiedProperties\u003cBR /\u003e| mv-expand keyEvents\u003cBR /\u003e| where keyEvents.displayName =~ \"KeyDescription\"\u003cBR /\u003e| extend new_value_set = parse_json(tostring(keyEvents.newValue))\u003cBR /\u003e| extend old_value_set = parse_json(tostring(keyEvents.oldValue))\u003cBR /\u003e| where old_value_set == \"[]\"\u003cBR /\u003e| parse new_value_set with * \"KeyIdentifier=\" keyIdentifier:string \",KeyType=\" keyType:string \",KeyUsage=\" keyUsage:string \",DisplayName=\" keyDisplayName:string \"]\" *\u003cBR /\u003e| where keyUsage == \"Verify\" or keyUsage == \"\"\u003cBR /\u003e| extend UserAgent = iff(AdditionalDetails[0].key == \"User-Agent\",tostring(AdditionalDetails[0].value),\"\")\u003cBR /\u003e| extend InitiatingUserOrApp = iff(isnotempty(InitiatedBy.user.userPrincipalName),tostring(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.app.displayName))\u003cBR /\u003e| extend InitiatingIpAddress = iff(isnotempty(InitiatedBy.user.ipAddress), tostring(InitiatedBy.user.ipAddress), tostring(InitiatedBy.app.ipAddress))\u003cBR /\u003e// The below line is currently commented out but Azure Sentinel users can modify this query to show only Application or only Service Principal events in their environment\u003cBR /\u003e//| where targetType =~ \"Application\" // or targetType =~ \"ServicePrincipal\"\u003cBR /\u003e| project-away new_value_set, old_value_set\u003cBR /\u003e| project-reorder TimeGenerated, OperationName, InitiatingUserOrApp, InitiatingIpAddress, UserAgent, targetDisplayName, targetId, targetType, keyDisplayName, keyType, keyUsage, keyIdentifier, CorrelationId, TenantId\u003cBR /\u003e| extend timestamp = TimeGenerated, AccountCustomEntity = InitiatingUserOrApp, IPCustomEntity = InitiatingIpAddress\u003c/P\u003e\n\u003c/div\u003e\u003cnoscript\u003e\u003cdiv class=\"lia-spoiler-noscript-container\"\u003e\u003cdiv class=\"lia-spoiler-noscript-content\"\u003e\nNew access credential added to Application or Service Principallet auditLookback = 1h;AuditLogs| where TimeGenerated \u0026gt; ago(auditLookback)| where OperationName has_any (\"Add service principal\", \"Certificates and secrets management\") // captures \"Add service principal\", \"Add service principal credentials\", and \"Update application – Certificates and secrets management\" events| where Result =~ \"success\"| mv-expand target = TargetResources| where tostring(InitiatedBy.user.userPrincipalName) has \"@\" or tostring(InitiatedBy.app.displayName) has \"@\"| extend targetDisplayName = tostring(TargetResources[0].displayName)| extend targetId = tostring(TargetResources[0].id)| extend targetType = tostring(TargetResources[0].type)| extend keyEvents = TargetResources[0].modifiedProperties| mv-expand keyEvents| where keyEvents.displayName =~ \"KeyDescription\"| extend new_value_set = parse_json(tostring(keyEvents.newValue))| extend old_value_set = parse_json(tostring(keyEvents.oldValue))| where old_value_set != \"[]\"| extend diff = set_difference(new_value_set, old_value_set)| where isnotempty(diff)| parse diff with * \"KeyIdentifier=\" keyIdentifier:string \",KeyType=\" keyType:string \",KeyUsage=\" keyUsage:string \",DisplayName=\" keyDisplayName:string \"]\" *| where keyUsage == \"Verify\" or keyUsage == \"\"| extend UserAgent = iff(AdditionalDetails[0].key == \"User-Agent\",tostring(AdditionalDetails[0].value),\"\")| extend InitiatingUserOrApp = iff(isnotempty(InitiatedBy.user.userPrincipalName),tostring(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.app.displayName))| extend InitiatingIpAddress = iff(isnotempty(InitiatedBy.user.ipAddress), tostring(InitiatedBy.user.ipAddress), tostring(InitiatedBy.app.ipAddress))// The below line is currently commented out but Azure Sentinel users can modify this query to show only Application or only Service Principal events in their environment//| where targetType =~ \"Application\" // or targetType =~ \"ServicePrincipal\"| project-away diff, new_value_set, old_value_set| project-reorder TimeGenerated, OperationName, InitiatingUserOrApp, InitiatingIpAddress, UserAgent, targetDisplayName, targetId, targetType, keyDisplayName, keyType, keyUsage, keyIdentifier, CorrelationId, TenantId| extend timestamp = TimeGenerated, AccountCustomEntity = InitiatingUserOrApp, IPCustomEntity = InitiatingIpAddress\nFirst access credential added to Application or Service Principal where no credential was presentlet auditLookback = 1h;AuditLogs| where TimeGenerated \u0026gt; ago(auditLookback)| where OperationName has_any (\"Add service principal\", \"Certificates and secrets management\") // captures \"Add service principal\", \"Add service principal credentials\", and \"Update application – Certificates and secrets management\" events| where Result =~ \"success\"| mv-expand target = TargetResources| where tostring(InitiatedBy.user.userPrincipalName) has \"@\" or tostring(InitiatedBy.app.displayName) has \"@\"| extend targetDisplayName = tostring(TargetResources[0].displayName)| extend targetId = tostring(TargetResources[0].id)| extend targetType = tostring(TargetResources[0].type)| extend keyEvents = TargetResources[0].modifiedProperties| mv-expand keyEvents| where keyEvents.displayName =~ \"KeyDescription\"| extend new_value_set = parse_json(tostring(keyEvents.newValue))| extend old_value_set = parse_json(tostring(keyEvents.oldValue))| where old_value_set == \"[]\"| parse new_value_set with * \"KeyIdentifier=\" keyIdentifier:string \",KeyType=\" keyType:string \",KeyUsage=\" keyUsage:string \",DisplayName=\" keyDisplayName:string \"]\" *| where keyUsage == \"Verify\" or keyUsage == \"\"| extend UserAgent = iff(AdditionalDetails[0].key == \"User-Agent\",tostring(AdditionalDetails[0].value),\"\")| extend InitiatingUserOrApp = iff(isnotempty(InitiatedBy.user.userPrincipalName),tostring(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.app.displayName))| extend InitiatingIpAddress = iff(isnotempty(InitiatedBy.user.ipAddress), tostring(InitiatedBy.user.ipAddress), tostring(InitiatedBy.app.ipAddress))// The below line is currently commented out but Azure Sentinel users can modify this query to show only Application or only Service Principal events in their environment//| where targetType =~ \"Application\" // or targetType =~ \"ServicePrincipal\"| project-away new_value_set, old_value_set| project-reorder TimeGenerated, OperationName, InitiatingUserOrApp, InitiatingIpAddress, UserAgent, targetDisplayName, targetId, targetType, keyDisplayName, keyType, keyUsage, keyIdentifier, CorrelationId, TenantId| extend timestamp = TimeGenerated, AccountCustomEntity = InitiatingUserOrApp, IPCustomEntity = InitiatingIpAddress\n\u003c/div\u003e\u003c/div\u003e\u003c/noscript\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cH6 id=\"community-1995095-toc-hId--1351576908\"\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/19/2020\u003c/FONT\u003e\u003c/H6\u003e\n\u003cP\u003eThis threat actor has been observed using applications to read users mailboxes within a target environment. To help identify this activity MSTIC has created a \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/MailPermissionsAddedToApplication.yaml\" target=\"_self\" rel=\"noopener noreferrer\"\u003ehunting query\u003c/A\u003e that looks for applications that have been granted mailbox read permissions followed by consent to this application. Whilst this may uncover legitimate applications hunters should validate applications granted mail read permissions genuinely require them.\u003c/P\u003e\n\u003cdiv class=\"lia-spoiler-container\"\u003e\u003ca class=\"lia-spoiler-link\" href=\"#community-1995095-\" rel=\"nofollow noopener noreferrer\"\u003eSpoiler\u003c/a\u003e\u003cnoscript\u003e (Highlight to read)\u003c/noscript\u003e\u003cdiv class=\"lia-spoiler-border\"\u003e\u003cdiv class=\"lia-spoiler-content\"\u003eAuditLogs\u003cBR /\u003e| where Category =~ \"ApplicationManagement\"\u003cBR /\u003e| where ActivityDisplayName =~ \"Add delegated permission grant\"\u003cBR /\u003e| where Result =~ \"success\"\u003cBR /\u003e| where tostring(InitiatedBy.user.userPrincipalName) has \"@\" or tostring(InitiatedBy.app.displayName) has \"@\"\u003cBR /\u003e| extend props = parse_json(tostring(TargetResources[0].modifiedProperties))\u003cBR /\u003e| mv-expand props\u003cBR /\u003e| extend UserAgent = tostring(AdditionalDetails[0].value)\u003cBR /\u003e| extend InitiatingUser = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\u003cBR /\u003e| extend UserIPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)\u003cBR /\u003e| extend DisplayName = tostring(props.displayName)\u003cBR /\u003e| extend Permissions = tostring(parse_json(tostring(props.newValue)))\u003cBR /\u003e| where Permissions has_any (\"Mail.Read\", \"Mail.ReadWrite\")\u003cBR /\u003e| extend PermissionsAddedTo = tostring(TargetResources[0].displayName)\u003cBR /\u003e| extend Type = tostring(TargetResources[0].type)\u003cBR /\u003e| project-away props\u003cBR /\u003e| join kind=leftouter(\u003cBR /\u003eAuditLogs\u003cBR /\u003e| where ActivityDisplayName has \"Consent to application\"\u003cBR /\u003e| extend AppName = tostring(TargetResources[0].displayName)\u003cBR /\u003e| extend AppId = tostring(TargetResources[0].id)\u003cBR /\u003e| project AppName, AppId, CorrelationId) on CorrelationId\u003cBR /\u003e| project-reorder TimeGenerated, OperationName, InitiatingUser, UserIPAddress, UserAgent, PermissionsAddedTo, Permissions, AppName, AppId, CorrelationId\u003cBR /\u003e| extend timestamp = TimeGenerated, AccountCustomEntity = InitiatingUser, IPCustomEntity = UserIPAddress\u003c/div\u003e\u003cnoscript\u003e\u003cdiv class=\"lia-spoiler-noscript-container\"\u003e\u003cdiv class=\"lia-spoiler-noscript-content\"\u003eAuditLogs| where Category =~ \"ApplicationManagement\"| where ActivityDisplayName =~ \"Add delegated permission grant\"| where Result =~ \"success\"| where tostring(InitiatedBy.user.userPrincipalName) has \"@\" or tostring(InitiatedBy.app.displayName) has \"@\"| extend props = parse_json(tostring(TargetResources[0].modifiedProperties))| mv-expand props| extend UserAgent = tostring(AdditionalDetails[0].value)| extend InitiatingUser = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)| extend UserIPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)| extend DisplayName = tostring(props.displayName)| extend Permissions = tostring(parse_json(tostring(props.newValue)))| where Permissions has_any (\"Mail.Read\", \"Mail.ReadWrite\")| extend PermissionsAddedTo = tostring(TargetResources[0].displayName)| extend Type = tostring(TargetResources[0].type)| project-away props| join kind=leftouter(AuditLogs| where ActivityDisplayName has \"Consent to application\"| extend AppName = tostring(TargetResources[0].displayName)| extend AppId = tostring(TargetResources[0].id)| project AppName, AppId, CorrelationId) on CorrelationId| project-reorder TimeGenerated, OperationName, InitiatingUser, UserIPAddress, UserAgent, PermissionsAddedTo, Permissions, AppName, AppId, CorrelationId| extend timestamp = TimeGenerated, AccountCustomEntity = InitiatingUser, IPCustomEntity = UserIPAddress\u003c/div\u003e\u003c/div\u003e\u003c/noscript\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cP\u003eIt’s also advised to hunt for application consents for unexpected applications, particularly where they provide offline access to data or other high value access;\u003c/P\u003e\n\u003cUL\u003e\n\u003cLI\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/MaliciousOAuthApp_O365AttackToolkit.yaml\" target=\"_self\" rel=\"noopener noreferrer\"\u003eSuspicious application consent similar to O365 Attack Toolkit\u003c/A\u003e\u003c/LI\u003e\n\u003cLI\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/SuspiciousOAuthApp_OfflineAccess.yaml\" target=\"_self\" rel=\"noopener noreferrer\"\u003eSuspicious application consent for offline access\u003c/A\u003e\u003c/LI\u003e\n\u003c/UL\u003e\n\u003cH6 id=\"community-1995095-toc-hId-1135935925\"\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/17/2020 (moved location)\u003c/FONT\u003e\u003c/H6\u003e\n\u003cP\u003eIn addition to Azure AD pre-compromise logon hunting it is also possible to monitor for logons attempting to use invalid key material. This can help identify attempted logons using stolen key material made after key material has been rotated. This can be done by querying SigninLogs in Azure Sentinel where the ResultType is 5000811. \u003cSTRONG\u003ePlease note\u003c/STRONG\u003e that if you roll your token signing certificate, there will be expected activity when searching on the above.\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cH2 id=\"community-1995095-toc-hId--399877955\"\u003eRecon and Remote Execution\u003c/H2\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/27/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003eThe adversary will often attempt to access on-prem systems to gain further insight and mapping of the environment.\u0026nbsp; As described in the \u003cSTRONG\u003eResulting hands-on-keyboard attack\u003c/STRONG\u003e section of the\u0026nbsp;\u003cA href=\"https://www.microsoft.com/security/blog/2020/12/18/analyzing-solorigate-the-compromised-dll-file-that-started-a-sophisticated-cyberattack-and-how-microsoft-defender-helps-protect/\" target=\"_self\" rel=\"noopener noreferrer\"\u003eAnalyzing Solorigate blog by Microsoft\u003c/A\u003e, attackers renamed windows administrative tools like adfind.exe which were then used for domain enumeration. An example of the process execution command like can look like this:\u003c/P\u003e\n\u003cTABLE border=\"1\" width=\"100%\"\u003e\n\u003cTBODY\u003e\n\u003cTR\u003e\n\u003cTD width=\"100%\"\u003eC:\\Windows\\system32\\cmd.exe /C csrss.exe -h breached.contoso.com -f (name=”Domain Admins”) member -list | csrss.exe -h breached.contoso.com -f objectcategory=* \u0026gt; .\\Mod\\mod1.log\u003c/TD\u003e\n\u003c/TR\u003e\n\u003c/TBODY\u003e\n\u003c/TABLE\u003e\n\u003cP\u003e\u003cBR /\u003eWe have provided a query in the \u003cA href=\"https://github.com/Azure/Azure-Sentinel\" target=\"_self\" rel=\"noopener noreferrer\"\u003eAzure Sentinel Github\u003c/A\u003e which will help in detecting the \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/Suspicious_enumeration_using_adfind.yaml\" target=\"_self\" rel=\"noopener noreferrer\"\u003ecommand line patterns related to ADFind usage.\u003c/A\u003e You can customize this query to look at your specific DC/ADFS servers.\u003c/P\u003e\n\u003cdiv class=\"lia-spoiler-container\"\u003e\u003ca class=\"lia-spoiler-link\" href=\"#community-1995095-\" rel=\"nofollow noopener noreferrer\"\u003eSpoiler\u003c/a\u003e\u003cnoscript\u003e (Highlight to read)\u003c/noscript\u003e\u003cdiv class=\"lia-spoiler-border\"\u003e\u003cdiv class=\"lia-spoiler-content\"\u003elet startdate = 1d;\u003cBR /\u003elet lookupwindow = 2m;\u003cBR /\u003elet threshold = 3; //number of commandlines in the set below\u003cBR /\u003elet DCADFSServersList = dynamic ([\"DCServer01\", \"DCServer02\", \"ADFSServer01\"]); // Enter a reference list of hostnames for your DC/ADFS servers\u003cBR /\u003elet tokens = dynamic([\"objectcategory\",\"domainlist\",\"dcmodes\",\"adinfo\",\"trustdmp\",\"computers_pwdnotreqd\",\"Domain Admins\", \"objectcategory=person\", \"objectcategory=computer\", \"objectcategory=*\"]);\u003cBR /\u003eSecurityEvent\u003cBR /\u003e//| where Computer in (DCADFSServersList) // Uncomment to limit it to your DC/ADFS servers list if specified above or any pattern in hostnames (startswith, matches regex, etc).\u003cBR /\u003e| where TimeGenerated between (ago(startdate) .. now())\u003cBR /\u003e| where EventID == 4688\u003cBR /\u003e| where CommandLine has_any (tokens)\u003cBR /\u003e| where CommandLine matches regex \"(.*)\u0026gt;(.*)\"\u003cBR /\u003e| summarize Commandlines = make_set(CommandLine), LastObserved=max(TimeGenerated) by bin(TimeGenerated, lookupwindow), Account, Computer, ParentProcessName, NewProcessName\u003cBR /\u003e| extend Count = array_length(Commandlines)\u003cBR /\u003e| where Count \u0026gt; threshold\u003c/div\u003e\u003cnoscript\u003e\u003cdiv class=\"lia-spoiler-noscript-container\"\u003e\u003cdiv class=\"lia-spoiler-noscript-content\"\u003elet startdate = 1d;let lookupwindow = 2m;let threshold = 3; //number of commandlines in the set belowlet DCADFSServersList = dynamic ([\"DCServer01\", \"DCServer02\", \"ADFSServer01\"]); // Enter a reference list of hostnames for your DC/ADFS serverslet tokens = dynamic([\"objectcategory\",\"domainlist\",\"dcmodes\",\"adinfo\",\"trustdmp\",\"computers_pwdnotreqd\",\"Domain Admins\", \"objectcategory=person\", \"objectcategory=computer\", \"objectcategory=*\"]);SecurityEvent//| where Computer in (DCADFSServersList) // Uncomment to limit it to your DC/ADFS servers list if specified above or any pattern in hostnames (startswith, matches regex, etc).| where TimeGenerated between (ago(startdate) .. now())| where EventID == 4688| where CommandLine has_any (tokens)| where CommandLine matches regex \"(.*)\u0026gt;(.*)\"| summarize Commandlines = make_set(CommandLine), LastObserved=max(TimeGenerated) by bin(TimeGenerated, lookupwindow), Account, Computer, ParentProcessName, NewProcessName| extend Count = array_length(Commandlines)| where Count \u0026gt; threshold\u003c/div\u003e\u003c/div\u003e\u003c/noscript\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cP\u003eOn the remote execution side, there is a pattern that can be identified related to using alternate credentials than the currently logged on user, such as when using the RUN AS feature on a Windows system and passing in explicit credentials.\u0026nbsp; We have released a query that will identify when execution is occurring via\u0026nbsp;\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/MultipleExplicitCredentialUsage4648Events.yaml\" target=\"_self\" rel=\"noopener noreferrer\"\u003emultiple explicit credentials\u003c/A\u003e against remote targets.\u0026nbsp; This requires that \u003cA href=\"https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4648\" target=\"_self\" rel=\"noopener noreferrer\"\u003eWindows Event 4648\u003c/A\u003e is being collected as part of Azure Sentinel.\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cdiv class=\"lia-spoiler-container\"\u003e\u003ca class=\"lia-spoiler-link\" href=\"#community-1995095-\" rel=\"nofollow noopener noreferrer\"\u003eSpoiler\u003c/a\u003e\u003cnoscript\u003e (Highlight to read)\u003c/noscript\u003e\u003cdiv class=\"lia-spoiler-border\"\u003e\u003cdiv class=\"lia-spoiler-content\"\u003elet WellKnownLocalSIDs = \"S-1-5-[0-9][0-9]$\";\u003cBR /\u003elet protocols = dynamic(['cifs', 'ldap', 'RPCSS', 'host' , 'HTTP', 'RestrictedKrbHost', 'TERMSRV', 'msomsdksvc', 'mssqlsvc']);\u003cBR /\u003eSecurityEvent\u003cBR /\u003e| where TimeGenerated \u0026gt;= ago(1d)\u003cBR /\u003e| where EventID == 4648\u003cBR /\u003e| where SubjectUserSid != 'S-1-0-0' // this is the Nobody SID which really means No security principal was included.\u003cBR /\u003e| where not(SubjectUserSid matches regex WellKnownLocalSIDs) //excluding system account/service account as this is generally normal\u003cBR /\u003e| where TargetInfo has '/' //looking for only items that indicate an interesting protocol is included\u003cBR /\u003e| where Computer !has tostring(split(TargetServerName,'$')[0])\u003cBR /\u003e| where TargetAccount !~ tostring(split(SubjectAccount,'$')[0])\u003cBR /\u003e| extend TargetInfoProtocol = tolower(split(TargetInfo, '/')[0]), TargetInfoMachine = toupper(split(TargetInfo, '/')[1])\u003cBR /\u003e| extend TargetAccount = tolower(TargetAccount), SubjectAccount = tolower(SubjectAccount)\u003cBR /\u003e| extend UncommonProtocol = case(not(TargetInfoProtocol has_any (protocols)), TargetInfoProtocol, 'NotApplicable')\u003cBR /\u003e| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), AccountsUsedCount = dcount(TargetAccount), AccountsUsed = make_set(TargetAccount), TargetMachineCount = dcount(TargetInfoMachine), \u003cBR /\u003eTargetMachines = make_set(TargetInfoMachine), TargetProtocols = dcount(TargetInfoProtocol), Protocols = make_set(TargetInfoProtocol), Processes = make_set(Process) by Computer, SubjectAccount, UncommonProtocol\u003cBR /\u003e| where TargetMachineCount \u0026gt; 1 or UncommonProtocol != 'NotApplicable'\u003cBR /\u003e| extend ProtocolCount = array_length(Protocols)\u003cBR /\u003e| extend ProtocolScore = case(\u003cBR /\u003eProtocols has 'rpcss' and Protocols has 'host' and Protocols has 'cifs', 10, //observed in Solorigate and depending on which are used together the higher the score\u003cBR /\u003eProtocols has 'rpcss' and Protocols has 'host', 5,\u003cBR /\u003eProtocols has 'rpcss' and Protocols has 'cifs', 5,\u003cBR /\u003eProtocols has 'host' and Protocols has 'cifs', 5,\u003cBR /\u003eProtocols has 'ldap' or Protocols has 'rpcss' or Protocols has 'host' or Protocols has 'cifs', 1, //ldap is more commonly seen in general, this was also seen with Solorigate but not usually to the same machines as the others above\u003cBR /\u003eUncommonProtocol != 'NotApplicable', 3,\u003cBR /\u003e0 //other protocols may be of interest, but in relation to observations for enumeration/execution in Solorigate they receive 0\u003cBR /\u003e)\u003cBR /\u003e| extend Score = ProtocolScore + ProtocolCount + AccountsUsedCount\u003cBR /\u003e| where Score \u0026gt;= 9 or (UncommonProtocol != 'NotApplicable' and Score \u0026gt;= 4) // Score must be 9 or better as this will include 5 points for atleast 2 of the interesting protocols + the count of protocols (min 2) + the number of accounts used for execution (min 2) = min of 9 OR score must be 4 or greater for an uncommon protocol\u003cBR /\u003e| extend TimePeriod = EndTime - StartTime //This identifies the time between start and finish for the use of the explicit credentials, shorter time period may indicate scripted executions\u003cBR /\u003e| project-away UncommonProtocol\u003cBR /\u003e| extend timestamp = StartTime, AccountCustomEntity = SubjectAccount, HostCustomEntity = Computer\u003cBR /\u003e| order by Score desc\u003c/div\u003e\u003cnoscript\u003e\u003cdiv class=\"lia-spoiler-noscript-container\"\u003e\u003cdiv class=\"lia-spoiler-noscript-content\"\u003elet WellKnownLocalSIDs = \"S-1-5-[0-9][0-9]$\";let protocols = dynamic(['cifs', 'ldap', 'RPCSS', 'host' , 'HTTP', 'RestrictedKrbHost', 'TERMSRV', 'msomsdksvc', 'mssqlsvc']);SecurityEvent| where TimeGenerated \u0026gt;= ago(1d)| where EventID == 4648| where SubjectUserSid != 'S-1-0-0' // this is the Nobody SID which really means No security principal was included.| where not(SubjectUserSid matches regex WellKnownLocalSIDs) //excluding system account/service account as this is generally normal| where TargetInfo has '/' //looking for only items that indicate an interesting protocol is included| where Computer !has tostring(split(TargetServerName,'$')[0])| where TargetAccount !~ tostring(split(SubjectAccount,'$')[0])| extend TargetInfoProtocol = tolower(split(TargetInfo, '/')[0]), TargetInfoMachine = toupper(split(TargetInfo, '/')[1])| extend TargetAccount = tolower(TargetAccount), SubjectAccount = tolower(SubjectAccount)| extend UncommonProtocol = case(not(TargetInfoProtocol has_any (protocols)), TargetInfoProtocol, 'NotApplicable')| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), AccountsUsedCount = dcount(TargetAccount), AccountsUsed = make_set(TargetAccount), TargetMachineCount = dcount(TargetInfoMachine), TargetMachines = make_set(TargetInfoMachine), TargetProtocols = dcount(TargetInfoProtocol), Protocols = make_set(TargetInfoProtocol), Processes = make_set(Process) by Computer, SubjectAccount, UncommonProtocol| where TargetMachineCount \u0026gt; 1 or UncommonProtocol != 'NotApplicable'| extend ProtocolCount = array_length(Protocols)| extend ProtocolScore = case(Protocols has 'rpcss' and Protocols has 'host' and Protocols has 'cifs', 10, //observed in Solorigate and depending on which are used together the higher the scoreProtocols has 'rpcss' and Protocols has 'host', 5,Protocols has 'rpcss' and Protocols has 'cifs', 5,Protocols has 'host' and Protocols has 'cifs', 5,Protocols has 'ldap' or Protocols has 'rpcss' or Protocols has 'host' or Protocols has 'cifs', 1, //ldap is more commonly seen in general, this was also seen with Solorigate but not usually to the same machines as the others aboveUncommonProtocol != 'NotApplicable', 3,0 //other protocols may be of interest, but in relation to observations for enumeration/execution in Solorigate they receive 0)| extend Score = ProtocolScore + ProtocolCount + AccountsUsedCount| where Score \u0026gt;= 9 or (UncommonProtocol != 'NotApplicable' and Score \u0026gt;= 4) // Score must be 9 or better as this will include 5 points for atleast 2 of the interesting protocols + the count of protocols (min 2) + the number of accounts used for execution (min 2) = min of 9 OR score must be 4 or greater for an uncommon protocol| extend TimePeriod = EndTime - StartTime //This identifies the time between start and finish for the use of the explicit credentials, shorter time period may indicate scripted executions| project-away UncommonProtocol| extend timestamp = StartTime, AccountCustomEntity = SubjectAccount, HostCustomEntity = Computer| order by Score desc\u003c/div\u003e\u003c/div\u003e\u003c/noscript\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cH2 id=\"community-1995095-toc-hId-2087634878\"\u003eData \u003cSPAN\u003eAccess\u003c/SPAN\u003e\u003c/H2\u003e\n\u003cP\u003eAccessing confidential data is one of the primary motives of this attack. Data access for the attacker here relied on leveraging minted SAML tokens to access user files/email stored in the cloud via compromised AppIds. One way to detect this is when a user or application signs in using \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SigninLogs/AzureAADPowerShellAnomaly.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eAzure Active Directory PowerShell to access non-Active Directory resources\u003c/A\u003e.\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003eMicrosoft Graph is one way that the attacker may be seen accessing resources and can help find what the attacker may have accessed using the Service principal Azure Active Directory sign-in logs. If you have data in your Log analytics you could easily plot a chart to see what anomalous activity is happening in your environment that is leveraging the graph.\u0026nbsp;\u003c/P\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/17/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003e\u003cSTRONG\u003eNote\u003c/STRONG\u003e that this data type in Azure Sentinel below is only available when additional Diagnostic Logging is enabled on the workspace.\u0026nbsp; Please see the instructions in the expandable section below.\u003c/P\u003e\n\u003cdiv class=\"lia-spoiler-container\"\u003e\u003ca class=\"lia-spoiler-link\" href=\"#community-1995095-\" rel=\"nofollow noopener noreferrer\"\u003eSpoiler\u003c/a\u003e\u003cnoscript\u003e (Highlight to read)\u003c/noscript\u003e\u003cdiv class=\"lia-spoiler-border\"\u003e\u003cdiv class=\"lia-spoiler-content\"\u003eThe AADServicePrincipalSigninLogs datatype will not be available in Azure Sentinel unless it is configured under Diagnostic Settings.\u0026nbsp; Please see screenshots below the query.\u003cBR /\u003e\u003cBR /\u003eAADServicePrincipalSignInLogs\u003cBR /\u003e| where TimeGenerated \u0026gt; ago(90d)\u003cBR /\u003e| where ResourceDisplayName == \"Microsoft Graph\"\u003cBR /\u003e| where ServicePrincipalId == \"524c43c4-c484-4f7a-bd44-89d4a0d8aeab\"\u003cBR /\u003e| summarize count() by bin(TimeGenerated, 1h)\u003cBR /\u003e| render timechart\u003cBR /\u003e\u003cBR /\u003eTo enable Service Principal Signin Logging, do the following:\u003cBR /\u003e\u003cBR /\u003e\u003cspan class=\"lia-media-object lia-media-is-inline lia-media-size-large\" data-image-alt=\"DiagnosticSettings1.png\"\u003e\u003cbutton class=\"lia-media-unstyled-btn\" type=\"button\" aria-haspopup=\"true\" aria-label=\"Enlarge Image DiagnosticSettings1.png\"\u003e\u003cimg src=\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTUyNmk0QUEzQjFDRjM0MkI0OTU4?image-dimensions=705x384\u0026amp;revision=57\" width=\"705\" height=\"384\" alt=\"DiagnosticSettings1.png\" /\u003e\u003c/button\u003e\u003c/span\u003e\n\u003cP\u003e \u003c/P\u003e\n\u003cspan class=\"lia-media-object lia-media-is-inline lia-media-size-large\" data-image-alt=\"DiagnosticSettings2.png\"\u003e\u003cbutton class=\"lia-media-unstyled-btn\" type=\"button\" aria-haspopup=\"true\" aria-label=\"Enlarge Image DiagnosticSettings2.png\"\u003e\u003cimg src=\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTUyN2lBRTZGNDQ4NjhDMUFCNDM5?image-dimensions=893x244\u0026amp;revision=57\" width=\"893\" height=\"244\" alt=\"DiagnosticSettings2.png\" /\u003e\u003c/button\u003e\u003c/span\u003e\n\u003cP\u003e \u003c/P\u003e\n\u003cspan class=\"lia-media-object lia-media-is-inline lia-media-size-large\" data-image-alt=\"DiagnosticSettings3.png\"\u003e\u003cbutton class=\"lia-media-unstyled-btn\" type=\"button\" aria-haspopup=\"true\" aria-label=\"Enlarge Image DiagnosticSettings3.png\"\u003e\u003cimg src=\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTUyOGlDQjYxQ0JGRTVCNjE3MUQ3?image-dimensions=800x517\u0026amp;revision=57\" width=\"800\" height=\"517\" alt=\"DiagnosticSettings3.png\" /\u003e\u003c/button\u003e\u003c/span\u003e\n\u003cP\u003e \u003c/P\u003e\n\u003c/div\u003e\u003cnoscript\u003e\u003cdiv class=\"lia-spoiler-noscript-container\"\u003e\u003cdiv class=\"lia-spoiler-noscript-content\"\u003eThe AADServicePrincipalSigninLogs datatype will not be available in Azure Sentinel unless it is configured under Diagnostic Settings.\u0026nbsp; Please see screenshots below the query.AADServicePrincipalSignInLogs| where TimeGenerated \u0026gt; ago(90d)| where ResourceDisplayName == \"Microsoft Graph\"| where ServicePrincipalId == \"524c43c4-c484-4f7a-bd44-89d4a0d8aeab\"| summarize count() by bin(TimeGenerated, 1h)| render timechartTo enable Service Principal Signin Logging, do the following:\n \n\n \n\n \n\u003c/div\u003e\u003c/div\u003e\u003c/noscript\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/21/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003eAdditionally, below is a sample query that brings out some of the logons to Azure AD where multi factor authentication was satisfied by token based logons versus MFA via phone auth or the like. It is possible this could produce many results, so additional tuning is suggested for your environment.\u003c/P\u003e\n\u003cdiv class=\"lia-spoiler-container\"\u003e\u003ca class=\"lia-spoiler-link\" href=\"#community-1995095-\" rel=\"nofollow noopener noreferrer\"\u003eSpoiler\u003c/a\u003e\u003cnoscript\u003e (Highlight to read)\u003c/noscript\u003e\u003cdiv class=\"lia-spoiler-border\"\u003e\u003cdiv class=\"lia-spoiler-content\"\u003eSigninLogs\u003cBR /\u003e| where TimeGenerated \u0026gt; ago(30d)\u003cBR /\u003e| where ResultType == 0\u003cBR /\u003e| extend additionalDetails = tostring(Status.additionalDetails)\u003cBR /\u003e| summarize make_set(additionalDetails), min(TimeGenerated), max(TimeGenerated) by IPAddress, UserPrincipalName\u003cBR /\u003e| where array_length(set_additionalDetails) == 2\u003cBR /\u003e| where (set_additionalDetails[1] == \"MFA requirement satisfied by claim in the token\" and set_additionalDetails[0] == \"MFA requirement satisfied by claim provided by external provider\") or (set_additionalDetails[0] == \"MFA requirement satisfied by claim in the token\" and set_additionalDetails[1] == \"MFA requirement satisfied by claim provided by external provider\")\u003cBR /\u003e//| project IPAddress, UserPrincipalName, min_TimeGenerated, max_TimeGenerated\u003c/div\u003e\u003cnoscript\u003e\u003cdiv class=\"lia-spoiler-noscript-container\"\u003e\u003cdiv class=\"lia-spoiler-noscript-content\"\u003eSigninLogs| where TimeGenerated \u0026gt; ago(30d)| where ResultType == 0| extend additionalDetails = tostring(Status.additionalDetails)| summarize make_set(additionalDetails), min(TimeGenerated), max(TimeGenerated) by IPAddress, UserPrincipalName| where array_length(set_additionalDetails) == 2| where (set_additionalDetails[1] == \"MFA requirement satisfied by claim in the token\" and set_additionalDetails[0] == \"MFA requirement satisfied by claim provided by external provider\") or (set_additionalDetails[0] == \"MFA requirement satisfied by claim in the token\" and set_additionalDetails[1] == \"MFA requirement satisfied by claim provided by external provider\")//| project IPAddress, UserPrincipalName, min_TimeGenerated, max_TimeGenerated\u003c/div\u003e\u003c/div\u003e\u003c/noscript\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUPDATED 12/17/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003eThis attack also used Virtual Private Servers (VPS) hosts to access victim networks and can be used in conjunction with the query above. Both MSTIC and FireEye have reported attacker logon events coming from network ranges associated with VPS providers. In order to highlight these logons, MSTIC has created a new hunting query -\u0026nbsp;\u003cSPAN\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SigninLogs/Signins-From-VPS-Providers.yaml\" target=\"_self\" rel=\"noopener noreferrer\"\u003eSignins From VPS Providers -\u0026nbsp;\u003c/A\u003e\u003c/SPAN\u003ethat looks for successful signins from network ranges associated with VPS providers. This is joined with the above query, the new query looks for IPs that only display sign-ins based on tokens and not other MFA options, although this could be removed if wanted. The list of VPS ranges in the query is not comprehensive and there is significant potential for false positives so results should be investigated before responding, however it can provide very effective signal. Combining the query below with data that list VPS server ranges will make this a high-confidence hunting query.\u0026nbsp;\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003eIn relation to the VPS servers section above, the previously mentioned workbook has a section that shows successful user signins from VPS (Virtual Private Server) providers where only tokens were used to authenticate. This uses the new KQL operator \u003cA href=\"https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/ipv4-lookup-plugin\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eipv4_lookup\u003c/A\u003e to evaluate if a login came from a known VPS provider network range. This operator can alternatively be used to look for all logons not coming from known ranges should your environment have a common logon source.\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cH2 aria-level=\"2\" id=\"community-1995095-toc-hId-280180415\"\u003e\u003cSPAN data-contrast=\"none\"\u003eData Exfiltration\u003c/SPAN\u003e\u003cSPAN data-ccp-props=\"{\u0026quot;201341983\u0026quot;:0,\u0026quot;335559738\u0026quot;:40,\u0026quot;335559739\u0026quot;:0,\u0026quot;335559740\u0026quot;:259}\"\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/H2\u003e\n\u003cP aria-level=\"2\"\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/20/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003e\u003cSPAN data-contrast=\"auto\"\u003eEmail data has been observed as a target for the\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003eSolorigate\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003e\u0026nbsp;attackers, one way to monitor for potential suspicious access is to look for anomalous\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003eMailItemsAccessed\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003e\u0026nbsp;volumes. MSTIC has created a specific hunting query to\u0026nbsp;identify \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/OfficeActivity/AnomolousUserAccessingOtherUsersMailbox.yaml\" target=\"_self\" rel=\"noopener noreferrer\"\u003eAnomolous User Accessing Other Users Mailbox\u003c/A\u003e\u0026nbsp;which can help to identify malicious activity related to this attack. Additionally, MSTIC previously created\u0026nbsp;a more generic detection - \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/OfficeActivity/MailItemsAccessedTimeSeries.yaml\" target=\"_self\" rel=\"noopener noreferrer\"\u003eExchange workflow MailItemsAccessed operation anomaly\u003c/A\u003e - which\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003e\u0026nbsp;looks for time series based anomalies in\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003eMailItemsAccessed\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003e\u0026nbsp;events in the\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003eOfficeActivity\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003e\u0026nbsp;log.\u003c/SPAN\u003e\u003cSPAN data-ccp-props=\"{\u0026quot;201341983\u0026quot;:0,\u0026quot;335559739\u0026quot;:160,\u0026quot;335559740\u0026quot;:259}\"\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/P\u003e\n\u003cdiv class=\"lia-spoiler-container\"\u003e\u003ca class=\"lia-spoiler-link\" href=\"#community-1995095-\" rel=\"nofollow noopener noreferrer\"\u003eSpoiler\u003c/a\u003e\u003cnoscript\u003e (Highlight to read)\u003c/noscript\u003e\u003cdiv class=\"lia-spoiler-border\"\u003e\u003cdiv class=\"lia-spoiler-content\"\u003e\u003cSTRONG\u003eAnomalous access to other user's mailboxes\u003c/STRONG\u003e\u003cBR /\u003elet timeframe = 14d;\u003cBR /\u003elet user_threshold = 1;\u003cBR /\u003elet folder_threshold = 5;\u003cBR /\u003eOfficeActivity\u003cBR /\u003e| where TimeGenerated \u0026gt; ago(timeframe)\u003cBR /\u003e| where Operation =~ \"MailItemsAccessed\" \u003cBR /\u003e| where ResultStatus =~ \"Succeeded\"\u003cBR /\u003e| mv-expand parse_json(Folders)\u003cBR /\u003e| extend folders = tostring(Folders.Path)\u003cBR /\u003e| where tolower(MailboxOwnerUPN) != tolower(UserId)\u003cBR /\u003e| extend ClientIP = iif(Client_IPAddress startswith \"[\", extract(\"\\\\[([^\\\\]]*)\", 1, Client_IPAddress), Client_IPAddress)\u003cBR /\u003e| summarize make_set(folders), make_set(ClientInfoString), make_set(ClientIP), make_set(MailboxGuid), make_set(MailboxOwnerUPN) by UserId\u003cBR /\u003e| extend folder_count = array_length(set_folders)\u003cBR /\u003e| extend user_count = array_length(set_MailboxGuid)\u003cBR /\u003e| where user_count \u0026gt; user_threshold or folder_count \u0026gt; folder_threshold\u003cBR /\u003e| sort by user_count desc\u003cBR /\u003e| project-reorder UserId, user_count, folder_count, set_MailboxOwnerUPN, set_ClientIP, set_ClientInfoString, set_folder\u003cBR /\u003e\u003cBR /\u003e\u003cSTRONG\u003eExchange workflow MailItemsAccessed operation anomaly\u003c/STRONG\u003e\u003cBR /\u003elet starttime = 14d;\u003cBR /\u003elet endtime = 1d;\u003cBR /\u003elet timeframe = 1h;\u003cBR /\u003elet scorethreshold = 1.5;\u003cBR /\u003elet percentthreshold = 50;\u003cBR /\u003e// Preparing the time series data aggregated hourly count of MailItemsAccessd Operation in the form of multi-value array to use with time series anomaly function.\u003cBR /\u003elet TimeSeriesData =\u003cBR /\u003eOfficeActivity\u003cBR /\u003e| where TimeGenerated between (startofday(ago(starttime))..startofday(ago(endtime)))\u003cBR /\u003e| where OfficeWorkload=~ \"Exchange\" and Operation =~ \"MailItemsAccessed\" and ResultStatus =~ \"Succeeded\"\u003cBR /\u003e| project TimeGenerated, Operation, MailboxOwnerUPN\u003cBR /\u003e| make-series Total=count() on TimeGenerated from startofday(ago(starttime)) to startofday(ago(endtime)) step timeframe;\u003cBR /\u003elet TimeSeriesAlerts = TimeSeriesData\u003cBR /\u003e| extend (anomalies, score, baseline) = series_decompose_anomalies(Total, scorethreshold, -1, 'linefit')\u003cBR /\u003e| mv-expand Total to typeof(double), TimeGenerated to typeof(datetime), anomalies to typeof(double), score to typeof(double), baseline to typeof(long)\u003cBR /\u003e| where anomalies \u0026gt; 0\u003cBR /\u003e| project TimeGenerated, Total, baseline, anomalies, score;\u003cBR /\u003e// Joining the flagged outlier from the previous step with the original dataset to present contextual information\u003cBR /\u003e// during the anomalyhour to analysts to conduct investigation or informed decisions.\u003cBR /\u003eTimeSeriesAlerts | where TimeGenerated \u0026gt; ago(2d)\u003cBR /\u003e// Join against base logs since specified timeframe to retrive records associated with the hour of anomoly\u003cBR /\u003e| join (\u003cBR /\u003eOfficeActivity\u003cBR /\u003e| where TimeGenerated \u0026gt; ago(2d)\u003cBR /\u003e| where OfficeWorkload=~ \"Exchange\" and Operation =~ \"MailItemsAccessed\" and ResultStatus =~ \"Succeeded\"\u003cBR /\u003e) on TimeGenerated\u003c/div\u003e\u003cnoscript\u003e\u003cdiv class=\"lia-spoiler-noscript-container\"\u003e\u003cdiv class=\"lia-spoiler-noscript-content\"\u003eAnomalous access to other user's mailboxeslet timeframe = 14d;let user_threshold = 1;let folder_threshold = 5;OfficeActivity| where TimeGenerated \u0026gt; ago(timeframe)| where Operation =~ \"MailItemsAccessed\" | where ResultStatus =~ \"Succeeded\"| mv-expand parse_json(Folders)| extend folders = tostring(Folders.Path)| where tolower(MailboxOwnerUPN) != tolower(UserId)| extend ClientIP = iif(Client_IPAddress startswith \"[\", extract(\"\\\\[([^\\\\]]*)\", 1, Client_IPAddress), Client_IPAddress)| summarize make_set(folders), make_set(ClientInfoString), make_set(ClientIP), make_set(MailboxGuid), make_set(MailboxOwnerUPN) by UserId| extend folder_count = array_length(set_folders)| extend user_count = array_length(set_MailboxGuid)| where user_count \u0026gt; user_threshold or folder_count \u0026gt; folder_threshold| sort by user_count desc| project-reorder UserId, user_count, folder_count, set_MailboxOwnerUPN, set_ClientIP, set_ClientInfoString, set_folderExchange workflow MailItemsAccessed operation anomalylet starttime = 14d;let endtime = 1d;let timeframe = 1h;let scorethreshold = 1.5;let percentthreshold = 50;// Preparing the time series data aggregated hourly count of MailItemsAccessd Operation in the form of multi-value array to use with time series anomaly function.let TimeSeriesData =OfficeActivity| where TimeGenerated between (startofday(ago(starttime))..startofday(ago(endtime)))| where OfficeWorkload=~ \"Exchange\" and Operation =~ \"MailItemsAccessed\" and ResultStatus =~ \"Succeeded\"| project TimeGenerated, Operation, MailboxOwnerUPN| make-series Total=count() on TimeGenerated from startofday(ago(starttime)) to startofday(ago(endtime)) step timeframe;let TimeSeriesAlerts = TimeSeriesData| extend (anomalies, score, baseline) = series_decompose_anomalies(Total, scorethreshold, -1, 'linefit')| mv-expand Total to typeof(double), TimeGenerated to typeof(datetime), anomalies to typeof(double), score to typeof(double), baseline to typeof(long)| where anomalies \u0026gt; 0| project TimeGenerated, Total, baseline, anomalies, score;// Joining the flagged outlier from the previous step with the original dataset to present contextual information// during the anomalyhour to analysts to conduct investigation or informed decisions.TimeSeriesAlerts | where TimeGenerated \u0026gt; ago(2d)// Join against base logs since specified timeframe to retrive records associated with the hour of anomoly| join (OfficeActivity| where TimeGenerated \u0026gt; ago(2d)| where OfficeWorkload=~ \"Exchange\" and Operation =~ \"MailItemsAccessed\" and ResultStatus =~ \"Succeeded\") on TimeGenerated\u003c/div\u003e\u003c/div\u003e\u003c/noscript\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/19/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003eTargeting of email data has also been observed by other industry members including \u003cA href=\"https://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/\" target=\"_blank\" rel=\"noopener nofollow noreferrer\"\u003eVolexity\u003c/A\u003e who reported attackers using PowerShell commands to export on premise Exchange mailboxes and then hosting those files on OWA servers in order to exfiltrate them.\u003c/P\u003e\n\u003cP\u003eMSTIC has created detections to identify this activity at both the \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/W3CIISLog/SuspectedMailBoxExportHostonOWA.yaml\" target=\"_self\" rel=\"noopener noreferrer\"\u003eOWA server\u003c/A\u003e and \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/HostExportingMailboxAndRemovingExport.yaml\" target=\"_self\" rel=\"noopener noreferrer\"\u003eattacking host level\u003c/A\u003e through IIS logs, and PowerShell command line logging.\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003eOWA exfiltration:\u003c/P\u003e\n\u003cdiv class=\"lia-spoiler-container\"\u003e\u003ca class=\"lia-spoiler-link\" href=\"#community-1995095-\" rel=\"nofollow noopener noreferrer\"\u003eSpoiler\u003c/a\u003e\u003cnoscript\u003e (Highlight to read)\u003c/noscript\u003e\u003cdiv class=\"lia-spoiler-border\"\u003e\u003cdiv class=\"lia-spoiler-content\"\u003elet excludeIps = dynamic([\"127.0.0.1\", \"::1\"]);\u003cBR /\u003elet scriptingExt = dynamic([\"aspx\", \"ashx\", \"asp\"]);\u003cBR /\u003eW3CIISLog\u003cBR /\u003e| where csUriStem contains \"/owa/\"\u003cBR /\u003e//The actor pulls a file back but won't send it any URI params\u003cBR /\u003e| where isempty(csUriQuery)\u003cBR /\u003e| extend file_ext = tostring(split(csUriStem, \".\")[-1])\u003cBR /\u003e//Giving your file a known scripting extension will throw an error\u003cBR /\u003e//rather than just serving the file as it will try to interpret the script\u003cBR /\u003e| where file_ext !in~ (scriptingExt)\u003cBR /\u003e//The actor was seen using image files, but we go wider in case they change this behaviour\u003cBR /\u003e//| where file_ext in~ (\"jpg\", \"jpeg\", \"png\", \"bmp\")\u003cBR /\u003e| extend file_name = tostring(split(csUriStem, \"/\")[-1])\u003cBR /\u003e| where file_name != \"\"\u003cBR /\u003e| where cIP !in~ (excludeIps)\u003cBR /\u003e| project file_ext, csUriStem, file_name, Computer, cIP, sIP, TenantId, TimeGenerated\u003cBR /\u003e| summarize dcount(cIP), AccessingIPs=make_set(cIP), AccessTimes=make_set(TimeGenerated), Access=count() by TenantId, file_name, Computer, csUriStem\u003cBR /\u003e//Collection of the exfiltration will occur only once, lets check for 2 accesses in case they mess up\u003cBR /\u003e//Tailor this for hunting\u003cBR /\u003e| where Access \u0026lt;= 2 and dcount_cIP == 1\u003c/div\u003e\u003cnoscript\u003e\u003cdiv class=\"lia-spoiler-noscript-container\"\u003e\u003cdiv class=\"lia-spoiler-noscript-content\"\u003elet excludeIps = dynamic([\"127.0.0.1\", \"::1\"]);let scriptingExt = dynamic([\"aspx\", \"ashx\", \"asp\"]);W3CIISLog| where csUriStem contains \"/owa/\"//The actor pulls a file back but won't send it any URI params| where isempty(csUriQuery)| extend file_ext = tostring(split(csUriStem, \".\")[-1])//Giving your file a known scripting extension will throw an error//rather than just serving the file as it will try to interpret the script| where file_ext !in~ (scriptingExt)//The actor was seen using image files, but we go wider in case they change this behaviour//| where file_ext in~ (\"jpg\", \"jpeg\", \"png\", \"bmp\")| extend file_name = tostring(split(csUriStem, \"/\")[-1])| where file_name != \"\"| where cIP !in~ (excludeIps)| project file_ext, csUriStem, file_name, Computer, cIP, sIP, TenantId, TimeGenerated| summarize dcount(cIP), AccessingIPs=make_set(cIP), AccessTimes=make_set(TimeGenerated), Access=count() by TenantId, file_name, Computer, csUriStem//Collection of the exfiltration will occur only once, lets check for 2 accesses in case they mess up//Tailor this for hunting| where Access \u0026lt;= 2 and dcount_cIP == 1\u003c/div\u003e\u003c/div\u003e\u003c/noscript\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cP\u003eHost creating then removing mailbox export requests using PowerShell cmdlets:\u003c/P\u003e\n\u003cdiv class=\"lia-spoiler-container\"\u003e\u003ca class=\"lia-spoiler-link\" href=\"#community-1995095-\" rel=\"nofollow noopener noreferrer\"\u003eSpoiler\u003c/a\u003e\u003cnoscript\u003e (Highlight to read)\u003c/noscript\u003e\u003cdiv class=\"lia-spoiler-border\"\u003e\u003cdiv class=\"lia-spoiler-content\"\u003e\n\u003cP\u003e\u0026nbsp; // Adjust the timeframe to change the window events need to occur within to alert\u003c/P\u003e\n\u003cP\u003e\u0026nbsp; let timeframe = 1h;\u003c/P\u003e\n\u003cP\u003e\u0026nbsp; SecurityEvent\u003c/P\u003e\n\u003cP\u003e\u0026nbsp; | where Process in (\"powershell.exe\", \"cmd.exe\")\u003c/P\u003e\n\u003cP\u003e\u0026nbsp; | where CommandLine contains 'New-MailboxExportRequest'\u003c/P\u003e\n\u003cP\u003e\u0026nbsp; | summarize by Computer, timekey = bin(TimeGenerated, timeframe), CommandLine, SubjectUserName\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u0026nbsp;| join kind=inner (SecurityEvent\u003c/P\u003e\n\u003cP\u003e\u0026nbsp; | where Process in (\"powershell.exe\", \"cmd.exe\")\u003c/P\u003e\n\u003cP\u003e\u0026nbsp; | where CommandLine contains 'Remove-MailboxExportRequest'\u003c/P\u003e\n\u003cP\u003e\u0026nbsp; | summarize by Computer, timekey = bin(TimeGenerated, timeframe), CommandLine, SubjectUserName) on Computer, timekey, SubjectUserName\u003c/P\u003e\n\u003cP\u003e\u0026nbsp; | extend commands = pack_array(CommandLine1, CommandLine)\u003c/P\u003e\n\u003cP\u003e\u0026nbsp; | summarize by timekey, Computer, tostring(commands), SubjectUserName\u003c/P\u003e\n\u003cP\u003e\u0026nbsp; | project-reorder timekey, Computer, SubjectUserName, ['commands']\u003c/P\u003e\n\u003cP\u003e\u0026nbsp; | extend HostCustomEntity = Computer, AccountCustomEntity = SubjectUserName\u003c/P\u003e\n\u003c/div\u003e\u003cnoscript\u003e\u003cdiv class=\"lia-spoiler-noscript-container\"\u003e\u003cdiv class=\"lia-spoiler-noscript-content\"\u003e\n\u0026nbsp; // Adjust the timeframe to change the window events need to occur within to alert\n\u0026nbsp; let timeframe = 1h;\n\u0026nbsp; SecurityEvent\n\u0026nbsp; | where Process in (\"powershell.exe\", \"cmd.exe\")\n\u0026nbsp; | where CommandLine contains 'New-MailboxExportRequest'\n\u0026nbsp; | summarize by Computer, timekey = bin(TimeGenerated, timeframe), CommandLine, SubjectUserName\n\u0026nbsp;\u0026nbsp;| join kind=inner (SecurityEvent\n\u0026nbsp; | where Process in (\"powershell.exe\", \"cmd.exe\")\n\u0026nbsp; | where CommandLine contains 'Remove-MailboxExportRequest'\n\u0026nbsp; | summarize by Computer, timekey = bin(TimeGenerated, timeframe), CommandLine, SubjectUserName) on Computer, timekey, SubjectUserName\n\u0026nbsp; | extend commands = pack_array(CommandLine1, CommandLine)\n\u0026nbsp; | summarize by timekey, Computer, tostring(commands), SubjectUserName\n\u0026nbsp; | project-reorder timekey, Computer, SubjectUserName, ['commands']\n\u0026nbsp; | extend HostCustomEntity = Computer, AccountCustomEntity = SubjectUserName\n\u003c/div\u003e\u003c/div\u003e\u003c/noscript\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cP aria-level=\"2\"\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/28/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cP aria-level=\"2\"\u003eEmail Delegation and later delegate access is another tactic that has been observed to gain access to user's mailboxes.\u0026nbsp; We have a previously created a method to discover\u0026nbsp;\u003cSPAN\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/OfficeActivity/nonowner_MailboxLogin.yaml\" target=\"_self\" rel=\"noopener noreferrer\"\u003eNon-owner mailbox login activity\u003c/A\u003e that can be applied here to help identify when delegates are inappropriately access email.\u003c/SPAN\u003e\u003c/P\u003e\n\u003cP aria-level=\"2\"\u003e\u0026nbsp;\u003c/P\u003e\n\u003cdiv class=\"lia-spoiler-container\"\u003e\u003ca class=\"lia-spoiler-link\" href=\"#community-1995095-\" rel=\"nofollow noopener noreferrer\"\u003eSpoiler\u003c/a\u003e\u003cnoscript\u003e (Highlight to read)\u003c/noscript\u003e\u003cdiv class=\"lia-spoiler-border\"\u003e\u003cdiv class=\"lia-spoiler-content\"\u003elet timeframe = 1d;\u003cBR /\u003eOfficeActivity\u003cBR /\u003e| where TimeGenerated \u0026gt;= ago(timeframe)\u003cBR /\u003e| where Operation == \"MailboxLogin\" and Logon_Type != \"Owner\" \u003cBR /\u003e| summarize count(), min(TimeGenerated), max(TimeGenerated) by Operation, OrganizationName, UserType, UserId, MailboxOwnerUPN, Logon_Type\u003cBR /\u003e| extend timestamp = min_TimeGenerated, AccountCustomEntity = UserId\u003c/div\u003e\u003cnoscript\u003e\u003cdiv class=\"lia-spoiler-noscript-container\"\u003e\u003cdiv class=\"lia-spoiler-noscript-content\"\u003elet timeframe = 1d;OfficeActivity| where TimeGenerated \u0026gt;= ago(timeframe)| where Operation == \"MailboxLogin\" and Logon_Type != \"Owner\" | summarize count(), min(TimeGenerated), max(TimeGenerated) by Operation, OrganizationName, UserType, UserId, MailboxOwnerUPN, Logon_Type| extend timestamp = min_TimeGenerated, AccountCustomEntity = UserId\u003c/div\u003e\u003c/div\u003e\u003c/noscript\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cH2 aria-level=\"2\" id=\"community-1995095-toc-hId--1527274048\"\u003e\u003cSPAN data-contrast=\"none\"\u003eDomain\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN data-contrast=\"none\"\u003eHunting\u003c/SPAN\u003e\u003c/H2\u003e\n\u003cP aria-level=\"2\"\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003e\u003cSPAN data-contrast=\"none\"\u003eUpdated 12/17/2020\u003c/SPAN\u003e\u003c/FONT\u003e\u003c/P\u003e\n\u003cH4 id=\"community-1995095-toc-hId-1218404223\"\u003e\u003cSPAN data-contrast=\"auto\"\u003eDomain specific\u003c/SPAN\u003e\u003c/H4\u003e\n\u003cP\u003e\u003cSPAN data-contrast=\"auto\"\u003eMSTIC has collated network based\u0026nbsp;IoCs\u0026nbsp;from\u0026nbsp;\u003c/SPAN\u003e\u003cA href=\"https://blogs.microsoft.com/on-the-issues/2020/12/13/customers-protect-nation-state-cyberattacks/\" target=\"_blank\" rel=\"noopener noreferrer\"\u003e\u003cSPAN data-contrast=\"none\"\u003eMSTIC\u003c/SPAN\u003e\u003c/A\u003e\u003cSPAN data-contrast=\"auto\"\u003e,\u0026nbsp;\u003c/SPAN\u003e\u003cA href=\"https://github.com/fireeye/sunburst_countermeasures/blob/main/indicator_release/Indicator_Release_NBIs.csv\" target=\"_blank\" rel=\"noopener noreferrer\"\u003e\u003cSPAN data-contrast=\"none\"\u003eFireEye\u003c/SPAN\u003e\u003c/A\u003e\u003cSPAN data-contrast=\"auto\"\u003e\u0026nbsp;and\u0026nbsp;\u003c/SPAN\u003e\u003cA href=\"https://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/\" target=\"_blank\" rel=\"noopener nofollow noreferrer\"\u003e\u003cSPAN data-contrast=\"none\"\u003eVolexity\u003c/SPAN\u003e\u003c/A\u003e\u003cSPAN data-contrast=\"auto\"\u003e\u0026nbsp;to create a network based\u0026nbsp;IoC\u0026nbsp;detection -\u0026nbsp;\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/MultipleDataSources/Solorigate-Network-Beacon.yaml\" target=\"_self\" rel=\"noopener noreferrer\"\u003eSolorigate Network Beacon\u003c/A\u003e -\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003ethat leverage multiple network focused data sources within Azure Sentinel.\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN data-ccp-props=\"{\u0026quot;201341983\u0026quot;:0,\u0026quot;335559739\u0026quot;:160,\u0026quot;335559740\u0026quot;:259}\"\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/P\u003e\n\u003cdiv class=\"lia-spoiler-container\"\u003e\u003ca class=\"lia-spoiler-link\" href=\"#community-1995095-\" rel=\"nofollow noopener noreferrer\"\u003eSpoiler\u003c/a\u003e\u003cnoscript\u003e (Highlight to read)\u003c/noscript\u003e\u003cdiv class=\"lia-spoiler-border\"\u003e\u003cdiv class=\"lia-spoiler-content\"\u003elet domains = dynamic([\"incomeupdate.com\",\"zupertech.com\",\"databasegalore.com\",\"panhardware.com\",\"avsvmcloud.com\",\"digitalcollege.org\",\"freescanonline.com\",\"deftsecurity.com\",\"thedoccloud.com\",\"virtualdataserver.com\",\"lcomputers.com\",\"webcodez.com\",\"globalnetworkissues.com\",\"kubecloud.com\",\"seobundlekit.com\",\"solartrackingsystem.net\",\"virtualwebdata.com\"]);\u003cBR /\u003elet timeframe = 6h;\u003cBR /\u003e(union isfuzzy=true\u003cBR /\u003e(CommonSecurityLog \u003cBR /\u003e| where TimeGenerated \u0026gt;= ago(timeframe) \u003cBR /\u003e| parse Message with * '(' DNSName ')' * \u003cBR /\u003e| where DNSName in~ (domains) or DestinationHostName has_any (domains) or RequestURL has_any(domains)\u003cBR /\u003e| extend AccountCustomEntity = SourceUserID, HostCustomEntity = DeviceName, IPCustomEntity = SourceIP\u003cBR /\u003e),\u003cBR /\u003e(DnsEvents \u003cBR /\u003e| where TimeGenerated \u0026gt;= ago(timeframe) \u003cBR /\u003e| extend DNSName = Name\u003cBR /\u003e| where isnotempty(DNSName)\u003cBR /\u003e| where DNSName in~ (domains)\u003cBR /\u003e| extend IPCustomEntity = ClientIP\u003cBR /\u003e),\u003cBR /\u003e(VMConnection \u003cBR /\u003e| where TimeGenerated \u0026gt;= ago(timeframe) \u003cBR /\u003e| parse RemoteDnsCanonicalNames with * '[\"' DNSName '\"]' *\u003cBR /\u003e| where isnotempty(DNSName)\u003cBR /\u003e| where DNSName in~ (domains)\u003cBR /\u003e| extend IPCustomEntity = RemoteIp\u003cBR /\u003e),\u003cBR /\u003e(DeviceNetworkEvents \u003cBR /\u003e| where TimeGenerated \u0026gt;= ago(timeframe) \u003cBR /\u003e| where isnotempty(RemoteUrl) \u003cBR /\u003e| where RemoteUrl has_any (domains) \u003cBR /\u003e| extend DNSName = RemoteUrl\u003cBR /\u003e| extend IPCustomEntity = RemoteIP \u003cBR /\u003e| extend HostCustomEntity = DeviceName \u003cBR /\u003e) \u003cBR /\u003e)\u003c/div\u003e\u003cnoscript\u003e\u003cdiv class=\"lia-spoiler-noscript-container\"\u003e\u003cdiv class=\"lia-spoiler-noscript-content\"\u003elet domains = dynamic([\"incomeupdate.com\",\"zupertech.com\",\"databasegalore.com\",\"panhardware.com\",\"avsvmcloud.com\",\"digitalcollege.org\",\"freescanonline.com\",\"deftsecurity.com\",\"thedoccloud.com\",\"virtualdataserver.com\",\"lcomputers.com\",\"webcodez.com\",\"globalnetworkissues.com\",\"kubecloud.com\",\"seobundlekit.com\",\"solartrackingsystem.net\",\"virtualwebdata.com\"]);let timeframe = 6h;(union isfuzzy=true(CommonSecurityLog | where TimeGenerated \u0026gt;= ago(timeframe) | parse Message with * '(' DNSName ')' * | where DNSName in~ (domains) or DestinationHostName has_any (domains) or RequestURL has_any(domains)| extend AccountCustomEntity = SourceUserID, HostCustomEntity = DeviceName, IPCustomEntity = SourceIP),(DnsEvents | where TimeGenerated \u0026gt;= ago(timeframe) | extend DNSName = Name| where isnotempty(DNSName)| where DNSName in~ (domains)| extend IPCustomEntity = ClientIP),(VMConnection | where TimeGenerated \u0026gt;= ago(timeframe) | parse RemoteDnsCanonicalNames with * '[\"' DNSName '\"]' *| where isnotempty(DNSName)| where DNSName in~ (domains)| extend IPCustomEntity = RemoteIp),(DeviceNetworkEvents | where TimeGenerated \u0026gt;= ago(timeframe) | where isnotempty(RemoteUrl) | where RemoteUrl has_any (domains) | extend DNSName = RemoteUrl| extend IPCustomEntity = RemoteIP | extend HostCustomEntity = DeviceName ) )\u003c/div\u003e\u003c/div\u003e\u003c/noscript\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cH4 aria-level=\"2\" id=\"community-1995095-toc-hId--589050240\"\u003e\u003cSPAN data-contrast=\"none\"\u003eDomain DGA\u003c/SPAN\u003e\u003c/H4\u003e\n\u003cP\u003e\u003cSPAN data-contrast=\"auto\"\u003eThe\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003eavsvmcloud[.]com\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003e\u0026nbsp;has been observed by several organizations as making DGA like subdomain queries as part of C2 activities. MSTIC have generated a hunting query -\u0026nbsp;\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/DnsEvents/Solorigate-DNS-Pattern.yaml\" target=\"_self\" rel=\"noopener noreferrer\"\u003eSolorigate DNS Pattern\u003c/A\u003e -\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003eto look for similar\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003epatterns of activity from other domains that might help identify other potential C2 sources.\u003c/SPAN\u003e\u003c/P\u003e\n\u003cdiv class=\"lia-spoiler-container\"\u003e\u003ca class=\"lia-spoiler-link\" href=\"#community-1995095-\" rel=\"nofollow noopener noreferrer\"\u003eSpoiler\u003c/a\u003e\u003cnoscript\u003e (Highlight to read)\u003c/noscript\u003e\u003cdiv class=\"lia-spoiler-border\"\u003e\u003cdiv class=\"lia-spoiler-content\"\u003elet cloudApiTerms = dynamic([\"api\", \"east\", \"west\"]);\u003cBR /\u003eDnsEvents\u003cBR /\u003e| where IPAddresses != \"\" and IPAddresses != \"127.0.0.1\"\u003cBR /\u003e| where Name endswith \".com\" or Name endswith \".org\" or Name endswith \".net\"\u003cBR /\u003e| extend domain_split = split(Name, \".\")\u003cBR /\u003e| where tostring(domain_split[-5]) != \"\" and tostring(domain_split[-6]) == \"\"\u003cBR /\u003e| extend sub_domain = tostring(domain_split[0])\u003cBR /\u003e| where sub_domain !contains \"-\"\u003cBR /\u003e| extend sub_directories = strcat(domain_split[-3], \" \", domain_split[-4])\u003cBR /\u003e| where sub_directories has_any(cloudApiTerms)\u003cBR /\u003e//Based on sample communications the subdomain is always between 20 and 30 bytes\u003cBR /\u003e| where strlen(domain_split) \u0026lt; 32 or strlen(domain_split) \u0026gt; 20\u003cBR /\u003e| extend domain = strcat(tostring(domain_split[-2]), \".\", tostring(domain_split[-1])) \u003cBR /\u003e| extend subdomain_no = countof(sub_domain, @\"(\\d)\", \"regex\")\u003cBR /\u003e| extend subdomain_ch = countof(sub_domain, @\"([a-z])\", \"regex\")\u003cBR /\u003e| where subdomain_no \u0026gt; 1\u003cBR /\u003e| extend percentage_numerical = toreal(subdomain_no) / toreal(strlen(sub_domain)) * 100\u003cBR /\u003e| where percentage_numerical \u0026lt; 50 and percentage_numerical \u0026gt; 5\u003cBR /\u003e| summarize count(), make_set(Name), FirstSeen=min(TimeGenerated), LastSeen=max(TimeGenerated) by Name\u003cBR /\u003e| order by count_ asc\u003c/div\u003e\u003cnoscript\u003e\u003cdiv class=\"lia-spoiler-noscript-container\"\u003e\u003cdiv class=\"lia-spoiler-noscript-content\"\u003elet cloudApiTerms = dynamic([\"api\", \"east\", \"west\"]);DnsEvents| where IPAddresses != \"\" and IPAddresses != \"127.0.0.1\"| where Name endswith \".com\" or Name endswith \".org\" or Name endswith \".net\"| extend domain_split = split(Name, \".\")| where tostring(domain_split[-5]) != \"\" and tostring(domain_split[-6]) == \"\"| extend sub_domain = tostring(domain_split[0])| where sub_domain !contains \"-\"| extend sub_directories = strcat(domain_split[-3], \" \", domain_split[-4])| where sub_directories has_any(cloudApiTerms)//Based on sample communications the subdomain is always between 20 and 30 bytes| where strlen(domain_split) \u0026lt; 32 or strlen(domain_split) \u0026gt; 20| extend domain = strcat(tostring(domain_split[-2]), \".\", tostring(domain_split[-1])) | extend subdomain_no = countof(sub_domain, @\"(\\d)\", \"regex\")| extend subdomain_ch = countof(sub_domain, @\"([a-z])\", \"regex\")| where subdomain_no \u0026gt; 1| extend percentage_numerical = toreal(subdomain_no) / toreal(strlen(sub_domain)) * 100| where percentage_numerical \u0026lt; 50 and percentage_numerical \u0026gt; 5| summarize count(), make_set(Name), FirstSeen=min(TimeGenerated), LastSeen=max(TimeGenerated) by Name| order by count_ asc\u003c/div\u003e\u003c/div\u003e\u003c/noscript\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cH4 id=\"community-1995095-toc-hId-1898462593\"\u003e\u003cSPAN class=\"TextRun SCXW219610271 BCX8\" data-contrast=\"auto\"\u003e\u003cSPAN class=\"NormalTextRun SCXW219610271 BCX8\"\u003eEncoded Domain\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/H4\u003e\n\u003cP\u003e\u003cSPAN class=\"TextRun SCXW219610271 BCX8\" data-contrast=\"auto\"\u003e\u003cSPAN class=\"NormalTextRun SCXW219610271 BCX8\"\u003eIn\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun ContextualSpellingAndGrammarErrorV2 SCXW219610271 BCX8\"\u003eaddition\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW219610271 BCX8\" data-contrast=\"auto\"\u003e\u003cSPAN class=\"NormalTextRun SCXW219610271 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003ewe have another query - \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/DnsEvents/Solorigate-Encoded-Domain-URL.yaml\" target=\"_self\" rel=\"noopener noreferrer\"\u003e\u003cSPAN\u003eSolorigate Encoded Domain in URL\u003c/SPAN\u003e\u003c/A\u003e-\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW219610271 BCX8\" data-contrast=\"auto\"\u003e\u003cSPAN class=\"NormalTextRun SCXW219610271 BCX8\"\u003ethat takes the encoding pattern the DGA uses, encodes the domains seen in\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun SpellingErrorV2 SCXW219610271 BCX8\"\u003esignin\u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun SCXW219610271 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003elogs and then looks for those patterns in DNS logs. This can help identify other C2 domains using the same encoding scheme.\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"EOP SCXW219610271 BCX8\" data-ccp-props=\"{\u0026quot;201341983\u0026quot;:0,\u0026quot;335559739\u0026quot;:160,\u0026quot;335559740\u0026quot;:240}\"\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/P\u003e\n\u003cdiv class=\"lia-spoiler-container\"\u003e\u003ca class=\"lia-spoiler-link\" href=\"#community-1995095-\" rel=\"nofollow noopener noreferrer\"\u003eSpoiler\u003c/a\u003e\u003cnoscript\u003e (Highlight to read)\u003c/noscript\u003e\u003cdiv class=\"lia-spoiler-border\"\u003e\u003cdiv class=\"lia-spoiler-content\"\u003elet dictionary = dynamic([\"r\",\"q\",\"3\",\"g\",\"s\",\"a\",\"l\",\"t\",\"6\",\"u\",\"1\",\"i\",\"y\",\"f\",\"z\",\"o\",\"p\",\"5\",\"7\",\"2\",\"d\",\"4\",\"9\",\"b\",\"n\",\"x\",\"8\",\"c\",\"v\",\"m\",\"k\",\"e\",\"w\",\"h\",\"j\"]);\u003cBR /\u003elet regex_bad_domains = SigninLogs\u003cBR /\u003e//Collect domains from tenant from signin logs\u003cBR /\u003e| where TimeGenerated \u0026gt; ago(1d)\u003cBR /\u003e| extend domain = tostring(split(UserPrincipalName, \"@\", 1)[0])\u003cBR /\u003e| where domain != \"\"\u003cBR /\u003e| summarize by domain\u003cBR /\u003e| extend split_domain = split(domain, \".\")\u003cBR /\u003e//This cuts back on domains such as na.contoso.com by electing not to match on the \"na\" portion\u003cBR /\u003e| extend target_string = iff(strlen(split_domain[0]) \u0026lt;= 2, split_domain[1], split_domain[0])\u003cBR /\u003e| extend target_string = split(target_string, \"-\")\u003cBR /\u003e| mv-expand target_string\u003cBR /\u003e//Rip all of the alphanumeric out of the domain name\u003cBR /\u003e| extend string_chars = extract_all(@\"([a-z0-9])\", tostring(target_string))\u003cBR /\u003e//Guid for tracking our data\u003cBR /\u003e| extend guid = new_guid()\u003cBR /\u003e//Expand to get all of the individual chars from the domain\u003cBR /\u003e| mv-expand string_chars\u003cBR /\u003e| extend chars = tostring(string_chars)\u003cBR /\u003e//Conduct computation to encode the domain as per actor spec\u003cBR /\u003e| extend computed_char = array_index_of(dictionary, chars)\u003cBR /\u003e| extend computed_char = dictionary[(computed_char + 4) % array_length(dictionary)] \u003cBR /\u003e| summarize make_list(computed_char) by guid, domain\u003cBR /\u003e| extend target_encoded = tostring(strcat_array(list_computed_char, \"\"))\u003cBR /\u003e//These are probably too small, but can be edited (expect FP's when going too small)\u003cBR /\u003e| where strlen(target_encoded) \u0026gt; 5\u003cBR /\u003e| distinct target_encoded\u003cBR /\u003e| summarize make_set(target_encoded)\u003cBR /\u003e//Key to join to DNS\u003cBR /\u003e| extend key = 1;\u003cBR /\u003eDnsEvents\u003cBR /\u003e| where TimeGenerated \u0026gt; ago(1d)\u003cBR /\u003e| summarize by Name\u003cBR /\u003e| extend key = 1\u003cBR /\u003e//For each DNS query join the malicious domain list\u003cBR /\u003e| join kind=inner ( \u003cBR /\u003eregex_bad_domains\u003cBR /\u003e) on key\u003cBR /\u003e| project-away key\u003cBR /\u003e//Expand each malicious key for each DNS query observed\u003cBR /\u003e| mv-expand set_target_encoded\u003cBR /\u003e//IndexOf allows us to fuzzy match on the substring\u003cBR /\u003e| extend match = indexof(Name, set_target_encoded)\u003cBR /\u003e| where match \u0026gt; -1\u003c/div\u003e\u003cnoscript\u003e\u003cdiv class=\"lia-spoiler-noscript-container\"\u003e\u003cdiv class=\"lia-spoiler-noscript-content\"\u003elet dictionary = dynamic([\"r\",\"q\",\"3\",\"g\",\"s\",\"a\",\"l\",\"t\",\"6\",\"u\",\"1\",\"i\",\"y\",\"f\",\"z\",\"o\",\"p\",\"5\",\"7\",\"2\",\"d\",\"4\",\"9\",\"b\",\"n\",\"x\",\"8\",\"c\",\"v\",\"m\",\"k\",\"e\",\"w\",\"h\",\"j\"]);let regex_bad_domains = SigninLogs//Collect domains from tenant from signin logs| where TimeGenerated \u0026gt; ago(1d)| extend domain = tostring(split(UserPrincipalName, \"@\", 1)[0])| where domain != \"\"| summarize by domain| extend split_domain = split(domain, \".\")//This cuts back on domains such as na.contoso.com by electing not to match on the \"na\" portion| extend target_string = iff(strlen(split_domain[0]) \u0026lt;= 2, split_domain[1], split_domain[0])| extend target_string = split(target_string, \"-\")| mv-expand target_string//Rip all of the alphanumeric out of the domain name| extend string_chars = extract_all(@\"([a-z0-9])\", tostring(target_string))//Guid for tracking our data| extend guid = new_guid()//Expand to get all of the individual chars from the domain| mv-expand string_chars| extend chars = tostring(string_chars)//Conduct computation to encode the domain as per actor spec| extend computed_char = array_index_of(dictionary, chars)| extend computed_char = dictionary[(computed_char + 4) % array_length(dictionary)] | summarize make_list(computed_char) by guid, domain| extend target_encoded = tostring(strcat_array(list_computed_char, \"\"))//These are probably too small, but can be edited (expect FP's when going too small)| where strlen(target_encoded) \u0026gt; 5| distinct target_encoded| summarize make_set(target_encoded)//Key to join to DNS| extend key = 1;DnsEvents| where TimeGenerated \u0026gt; ago(1d)| summarize by Name| extend key = 1//For each DNS query join the malicious domain list| join kind=inner ( regex_bad_domains) on key| project-away key//Expand each malicious key for each DNS query observed| mv-expand set_target_encoded//IndexOf allows us to fuzzy match on the substring| extend match = indexof(Name, set_target_encoded)| where match \u0026gt; -1\u003c/div\u003e\u003c/div\u003e\u003c/noscript\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cH2 id=\"community-1995095-toc-hId--167157308\"\u003eSecurity Service Tampering\u003c/H2\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003e\u003cSPAN data-contrast=\"none\"\u003eUpdated 01/19/2021\u003c/SPAN\u003e\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003eThere has been additional indication that security services are being tampered with to hinder detection and investigation. While this is a common tactic, we felt that we should include this reference. The query is currently written specifically for \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/PotentialMicrosoftSecurityServicesTampering.yaml\" target=\"_self\" rel=\"noopener noreferrer\"\u003ePotential Microsoft security services tampering\u003c/A\u003e, but can easily be adapted to identify other security services.\u003c/P\u003e\n\u003cdiv class=\"lia-spoiler-container\"\u003e\u003ca class=\"lia-spoiler-link\" href=\"#community-1995095-\" rel=\"nofollow noopener noreferrer\"\u003eSpoiler\u003c/a\u003e\u003cnoscript\u003e (Highlight to read)\u003c/noscript\u003e\u003cdiv class=\"lia-spoiler-border\"\u003e\u003cdiv class=\"lia-spoiler-content\"\u003elet includeProc = dynamic([\"sc.exe\",\"net1.exe\",\"net.exe\", \"taskkill.exe\", \"cmd.exe\", \"powershell.exe\"]);\u003cBR /\u003elet action = dynamic([\"stop\",\"disable\", \"delete\"]);\u003cBR /\u003elet service1 = dynamic(['sense', 'windefend', 'mssecflt']);\u003cBR /\u003elet service2 = dynamic(['sense', 'windefend', 'mssecflt', 'healthservice']);\u003cBR /\u003elet params1 = dynamic([\"-DisableRealtimeMonitoring\", \"-DisableBehaviorMonitoring\" ,\"-DisableIOAVProtection\"]);\u003cBR /\u003elet params2 = dynamic([\"sgrmbroker.exe\", \"mssense.exe\"]);\u003cBR /\u003elet regparams1 = dynamic(['reg add \"HKLM\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows Defender\"', 'reg add \"HKLM\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows Advanced Threat Protection\"']);\u003cBR /\u003elet regparams2 = dynamic(['ForceDefenderPassiveMode', 'DisableAntiSpyware']);\u003cBR /\u003elet regparams3 = dynamic(['sense', 'windefend']);\u003cBR /\u003elet regparams4 = dynamic(['demand', 'disabled']);\u003cBR /\u003elet regparams5 = dynamic(['reg add \"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\services\\\\HealthService\"', 'reg add \"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\Sense\"', 'reg add \"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\WinDefend\"', 'reg add \"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\MsSecFlt\"', 'reg add \"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\DiagTrack\"', 'reg add \"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\SgrmBroker\"', 'reg add \"HKLMSYSTEM\\\\CurrentControlSet\\\\Services\\\\SgrmAgent\"', 'reg add \"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\AATPSensorUpdater\"' , 'reg add \"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\AATPSensor\"', 'reg add \"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\mpssvc\"']);\u003cBR /\u003elet regparams6 = dynamic(['/d 4','/d \"4\"','/d 0x00000004']);\u003cBR /\u003elet regparams7 = dynamic(['/d 1','/d \"1\"','/d 0x00000001']);\u003cBR /\u003elet timeframe = 1d;\u003cBR /\u003e(union isfuzzy=true\u003cBR /\u003e(\u003cBR /\u003eSecurityEvent\u003cBR /\u003e| where TimeGenerated \u0026gt;= ago(timeframe)\u003cBR /\u003e| where EventID == 4688\u003cBR /\u003e| extend ProcessName = tostring(split(NewProcessName, '\\\\')[-1])\u003cBR /\u003e| where ProcessName in~ (includeProc)\u003cBR /\u003e| where (CommandLine has_any (action) and CommandLine has_any (service1)) \u003cBR /\u003eor (CommandLine has_any (params1) and CommandLine has 'Set-MpPreference' and CommandLine has '$true')\u003cBR /\u003eor (CommandLine has_any (params2) and CommandLine has \"/IM\") \u003cBR /\u003eor (CommandLine has_any (regparams5) and CommandLine has 'Start' and CommandLine has_any (regparams6))\u003cBR /\u003eor (CommandLine has_any (regparams1) and CommandLine has_any (regparams2) and CommandLine has_any (regparams7)) \u003cBR /\u003eor (CommandLine has \"start\" and CommandLine has \"config\" and CommandLine has_any (regparams3) and CommandLine has_any (regparams4))\u003cBR /\u003e| project TimeGenerated, Computer, Account, AccountDomain, ProcessName, ProcessNameFullPath = NewProcessName, EventID, Activity, CommandLine, EventSourceName, Type\u003cBR /\u003e),\u003cBR /\u003e(\u003cBR /\u003eEvent\u003cBR /\u003e| where TimeGenerated \u0026gt;= ago(timeframe)\u003cBR /\u003e| where Source =~ \"Microsoft-Windows-SENSE\"\u003cBR /\u003e| where EventID == 87 and ParameterXml in (\"\u0026lt;Param\u0026gt;sgrmbroker\u0026lt;/Param\u0026gt;\", \"\u0026lt;Param\u0026gt;WinDefend\u0026lt;/Param\u0026gt;\")\u003cBR /\u003e| project TimeGenerated, Computer, Account = UserName, EventID, Activity = RenderedDescription, EventSourceName = Source, Type\u003cBR /\u003e),\u003cBR /\u003e(\u003cBR /\u003eDeviceProcessEvents\u003cBR /\u003e| where TimeGenerated \u0026gt;= ago(timeframe)\u003cBR /\u003e| where InitiatingProcessFileName in~ (includeProc)\u003cBR /\u003e| where (InitiatingProcessCommandLine has_any(action) and InitiatingProcessCommandLine has_any (service2) and InitiatingProcessParentFileName != 'cscript.exe')\u003cBR /\u003eor (InitiatingProcessCommandLine has_any (params1) and InitiatingProcessCommandLine has 'Set-MpPreference' and InitiatingProcessCommandLine has '$true') \u003cBR /\u003eor (InitiatingProcessCommandLine has_any (params2) and InitiatingProcessCommandLine has \"/IM\") \u003cBR /\u003eor ( InitiatingProcessCommandLine has_any (regparams5) and InitiatingProcessCommandLine has 'Start' and InitiatingProcessCommandLine has_any (regparams6))\u003cBR /\u003eor (InitiatingProcessCommandLine has_any (regparams1) and InitiatingProcessCommandLine has_any (regparams2) and InitiatingProcessCommandLine has_any (regparams7)) \u003cBR /\u003eor (InitiatingProcessCommandLine has_any(\"start\") and InitiatingProcessCommandLine has \"config\" and InitiatingProcessCommandLine has_any (regparams3) and InitiatingProcessCommandLine has_any (regparams4))\u003cBR /\u003e| extend Account = iff(isnotempty(InitiatingProcessAccountUpn), InitiatingProcessAccountUpn, InitiatingProcessAccountName), Computer = DeviceName\u003cBR /\u003e| project TimeGenerated, Computer, Account, AccountDomain, ProcessName = InitiatingProcessFileName, ProcessNameFullPath = FolderPath, Activity = ActionType, CommandLine = InitiatingProcessCommandLine, Type, InitiatingProcessParentFileName\u003cBR /\u003e)\u003cBR /\u003e)\u003cBR /\u003e| extend timestamp = TimeGenerated, AccountCustomEntity = Account, HostCustomEntity = Computer\u003c/div\u003e\u003cnoscript\u003e\u003cdiv class=\"lia-spoiler-noscript-container\"\u003e\u003cdiv class=\"lia-spoiler-noscript-content\"\u003elet includeProc = dynamic([\"sc.exe\",\"net1.exe\",\"net.exe\", \"taskkill.exe\", \"cmd.exe\", \"powershell.exe\"]);let action = dynamic([\"stop\",\"disable\", \"delete\"]);let service1 = dynamic(['sense', 'windefend', 'mssecflt']);let service2 = dynamic(['sense', 'windefend', 'mssecflt', 'healthservice']);let params1 = dynamic([\"-DisableRealtimeMonitoring\", \"-DisableBehaviorMonitoring\" ,\"-DisableIOAVProtection\"]);let params2 = dynamic([\"sgrmbroker.exe\", \"mssense.exe\"]);let regparams1 = dynamic(['reg add \"HKLM\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows Defender\"', 'reg add \"HKLM\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows Advanced Threat Protection\"']);let regparams2 = dynamic(['ForceDefenderPassiveMode', 'DisableAntiSpyware']);let regparams3 = dynamic(['sense', 'windefend']);let regparams4 = dynamic(['demand', 'disabled']);let regparams5 = dynamic(['reg add \"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\services\\\\HealthService\"', 'reg add \"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\Sense\"', 'reg add \"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\WinDefend\"', 'reg add \"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\MsSecFlt\"', 'reg add \"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\DiagTrack\"', 'reg add \"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\SgrmBroker\"', 'reg add \"HKLMSYSTEM\\\\CurrentControlSet\\\\Services\\\\SgrmAgent\"', 'reg add \"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\AATPSensorUpdater\"' , 'reg add \"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\AATPSensor\"', 'reg add \"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\mpssvc\"']);let regparams6 = dynamic(['/d 4','/d \"4\"','/d 0x00000004']);let regparams7 = dynamic(['/d 1','/d \"1\"','/d 0x00000001']);let timeframe = 1d;(union isfuzzy=true(SecurityEvent| where TimeGenerated \u0026gt;= ago(timeframe)| where EventID == 4688| extend ProcessName = tostring(split(NewProcessName, '\\\\')[-1])| where ProcessName in~ (includeProc)| where (CommandLine has_any (action) and CommandLine has_any (service1)) or (CommandLine has_any (params1) and CommandLine has 'Set-MpPreference' and CommandLine has '$true')or (CommandLine has_any (params2) and CommandLine has \"/IM\") or (CommandLine has_any (regparams5) and CommandLine has 'Start' and CommandLine has_any (regparams6))or (CommandLine has_any (regparams1) and CommandLine has_any (regparams2) and CommandLine has_any (regparams7)) or (CommandLine has \"start\" and CommandLine has \"config\" and CommandLine has_any (regparams3) and CommandLine has_any (regparams4))| project TimeGenerated, Computer, Account, AccountDomain, ProcessName, ProcessNameFullPath = NewProcessName, EventID, Activity, CommandLine, EventSourceName, Type),(Event| where TimeGenerated \u0026gt;= ago(timeframe)| where Source =~ \"Microsoft-Windows-SENSE\"| where EventID == 87 and ParameterXml in (\"\u0026lt;Param\u0026gt;sgrmbroker\u0026lt;/Param\u0026gt;\", \"\u0026lt;Param\u0026gt;WinDefend\u0026lt;/Param\u0026gt;\")| project TimeGenerated, Computer, Account = UserName, EventID, Activity = RenderedDescription, EventSourceName = Source, Type),(DeviceProcessEvents| where TimeGenerated \u0026gt;= ago(timeframe)| where InitiatingProcessFileName in~ (includeProc)| where (InitiatingProcessCommandLine has_any(action) and InitiatingProcessCommandLine has_any (service2) and InitiatingProcessParentFileName != 'cscript.exe')or (InitiatingProcessCommandLine has_any (params1) and InitiatingProcessCommandLine has 'Set-MpPreference' and InitiatingProcessCommandLine has '$true') or (InitiatingProcessCommandLine has_any (params2) and InitiatingProcessCommandLine has \"/IM\") or ( InitiatingProcessCommandLine has_any (regparams5) and InitiatingProcessCommandLine has 'Start' and InitiatingProcessCommandLine has_any (regparams6))or (InitiatingProcessCommandLine has_any (regparams1) and InitiatingProcessCommandLine has_any (regparams2) and InitiatingProcessCommandLine has_any (regparams7)) or (InitiatingProcessCommandLine has_any(\"start\") and InitiatingProcessCommandLine has \"config\" and InitiatingProcessCommandLine has_any (regparams3) and InitiatingProcessCommandLine has_any (regparams4))| extend Account = iff(isnotempty(InitiatingProcessAccountUpn), InitiatingProcessAccountUpn, InitiatingProcessAccountName), Computer = DeviceName| project TimeGenerated, Computer, Account, AccountDomain, ProcessName = InitiatingProcessFileName, ProcessNameFullPath = FolderPath, Activity = ActionType, CommandLine = InitiatingProcessCommandLine, Type, InitiatingProcessParentFileName))| extend timestamp = TimeGenerated, AccountCustomEntity = Account, HostCustomEntity = Computer\u003c/div\u003e\u003c/div\u003e\u003c/noscript\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cH2 id=\"community-1995095-toc-hId--1974611771\"\u003eMicrosoft M365 Defender + Azure Sentinel detection correlation\u003c/H2\u003e\n\u003cP\u003e\u003cSPAN class=\"TextRun SCXW53252412 BCX8\" data-contrast=\"auto\"\u003e\u003cSPAN class=\"NormalTextRun SCXW53252412 BCX8\"\u003eIn\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun ContextualSpellingAndGrammarErrorV2 SCXW53252412 BCX8\"\u003eaddition\u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun SCXW53252412 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW53252412 BCX8\" data-contrast=\"auto\"\u003e\u003cSPAN class=\"NormalTextRun SCXW53252412 BCX8\"\u003ewe have created a query in Azure Sentinel\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW53252412 BCX8\" data-contrast=\"auto\"\u003e\u003cSPAN class=\"NormalTextRun SCXW53252412 BCX8\"\u003e\u003cSPAN\u003e-\u0026nbsp;\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityAlert/Solorigate-Defender-Detections.yaml\" target=\"_self\" rel=\"noopener noreferrer\"\u003eSolorigate Defender Detections\u003c/A\u003e -\u0026nbsp;\u003c/SPAN\u003eto collate the range of Defender detections that are now deployed. This query can be used to get an overview of such alerts and the hosts they relate to.\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"EOP SCXW53252412 BCX8\" data-ccp-props=\"{\u0026quot;201341983\u0026quot;:0,\u0026quot;335559739\u0026quot;:160,\u0026quot;335559740\u0026quot;:259}\"\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/P\u003e\n\u003cdiv class=\"lia-spoiler-container\"\u003e\u003ca class=\"lia-spoiler-link\" href=\"#community-1995095-\" rel=\"nofollow noopener noreferrer\"\u003eSpoiler\u003c/a\u003e\u003cnoscript\u003e (Highlight to read)\u003c/noscript\u003e\u003cdiv class=\"lia-spoiler-border\"\u003e\u003cdiv class=\"lia-spoiler-content\"\u003eDeviceInfo\u003cBR /\u003e| extend DeviceName = tolower(DeviceName)\u003cBR /\u003e| join (SecurityAlert\u003cBR /\u003e| where ProviderName =~ \"MDATP\"\u003cBR /\u003e| extend ThreatName = tostring(parse_json(ExtendedProperties).ThreatName)\u003cBR /\u003e| where ThreatName has \"Solarigate\"\u003cBR /\u003e| extend HostCustomEntity = tolower(CompromisedEntity)\u003cBR /\u003e| take 10) on $left.DeviceName == $right.HostCustomEntity\u003cBR /\u003e| project TimeGenerated, DisplayName, ThreatName, CompromisedEntity, PublicIP, MachineGroup, AlertSeverity, Description, LoggedOnUsers, DeviceId, TenantId\u003cBR /\u003e| extend timestamp = TimeGenerated, IPCustomEntity = PublicIP\u003c/div\u003e\u003cnoscript\u003e\u003cdiv class=\"lia-spoiler-noscript-container\"\u003e\u003cdiv class=\"lia-spoiler-noscript-content\"\u003eDeviceInfo| extend DeviceName = tolower(DeviceName)| join (SecurityAlert| where ProviderName =~ \"MDATP\"| extend ThreatName = tostring(parse_json(ExtendedProperties).ThreatName)| where ThreatName has \"Solarigate\"| extend HostCustomEntity = tolower(CompromisedEntity)| take 10) on $left.DeviceName == $right.HostCustomEntity| project TimeGenerated, DisplayName, ThreatName, CompromisedEntity, PublicIP, MachineGroup, AlertSeverity, Description, LoggedOnUsers, DeviceId, TenantId| extend timestamp = TimeGenerated, IPCustomEntity = PublicIP\u003c/div\u003e\u003c/div\u003e\u003c/noscript\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cH2 id=\"community-1995095-toc-hId-512901062\"\u003eConclusion\u003c/H2\u003e\n\u003cP\u003eAdditionally, as a cloud native SIEM Azure Sentinel can not only collect raw data from various disparate logs but it also gets alerts from various security products. For example, M365 Defender has a range of alerts for various attack components like SolarWinds malicious binaries, network traffic to the compromised domains, DNS queries for known patterns associated with SolarWinds compromise that can flow into Sentinel. Combining these alerts with other raw logs and additional data sources provides the security team with additional insights as well as a complete picture of nature and the scope of attack.\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cH2 id=\"community-1995095-toc-hId--596391460\"\u003eAppendix\u003c/H2\u003e\n\u003cP\u003eMany of these queries have been incorporated into the related \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Workbooks/SolarWindsPostCompromiseHunting.json\" target=\"_self\" rel=\"noopener noreferrer\"\u003ehunting workbook\u003c/A\u003e.\u003c/P\u003e\n\u003cP\u003eList of all Azure Sentinel Queries from each section\u003c/P\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003e\u003cSPAN data-contrast=\"none\"\u003eUpdated 01/15/2021\u003c/SPAN\u003e\u003c/FONT\u003e\u003c/P\u003e\n\u003cdiv class=\"lia-spoiler-container\"\u003e\u003ca class=\"lia-spoiler-link\" href=\"#community-1995095-\" rel=\"nofollow noopener noreferrer\"\u003eSpoiler\u003c/a\u003e\u003cnoscript\u003e (Highlight to read)\u003c/noscript\u003e\u003cdiv class=\"lia-spoiler-border\"\u003e\u003cdiv class=\"lia-spoiler-content\"\u003e\n\u003cTABLE width=\"1333px\"\u003e\n\u003cTBODY\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003e\u003cSTRONG\u003eGaining a foothold\u003c/STRONG\u003e\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u0026nbsp;\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eSolarWinds Inventory check query\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/SolarWindsInventory.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/SolarWindsInventory.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD\u003eSolorigate Name Pipe\u003c/TD\u003e\n\u003cTD\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/SolorigateNamedPipe.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/SolorigateNamedPipe.yaml\u003c/A\u003e\u0026nbsp;\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003e\u003cSTRONG\u003ePrivilege Escalation\u003c/STRONG\u003e\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u0026nbsp;\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eHosts with new logons\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/HostsWithNewLogons.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/HostsWithNewLogons.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"57px\"\u003eNew user created and added to the built-in administrators group\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"57px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserCreatedAddedToBuiltinAdmins_1d.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserCreatedAddedToBuiltinAdmins_1d.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"57px\"\u003eUser account added to built in domain local or global group\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"57px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserAccountAddedToPrivlegeGroup_1h.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserAccountAddedToPrivlegeGroup_1h.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eTracking Privileged Account Rare Activity\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/TrackingPrivAccounts.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/TrackingPrivAccounts.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003e\u003cSTRONG\u003eADFS Key Extraction\u003c/STRONG\u003e\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u0026nbsp;\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eADFS DKM Master Key Export\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/MultipleDataSources/ADFS-DKM-MasterKey-Export.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/MultipleDataSources/ADFS-DKM-MasterKey-Export.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eADFS Key Export (Sysmon)\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/ADFSKeyExportSysmon.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/ADFSKeyExportSysmon.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eEntropy for Processes for a given Host\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/ProcessEntropy.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/ProcessEntropy.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eRare processes run by Service accounts\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/RareProcbyServiceAccount.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/RareProcbyServiceAccount.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eUncommon processes - bottom 5%\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/uncommon_processes.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/uncommon_processes.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003e\u003cSTRONG\u003eAzure Active Directory\u003c/STRONG\u003e\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u0026nbsp;\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eModified domain federation trust settings\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/ADFSDomainTrustMods.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/ADFSDomainTrustMods.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"57px\"\u003eNew access credential added to Application or Service Principal\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"57px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/NewAppOrServicePrincipalCredential.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/NewAppOrServicePrincipalCredential.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"57px\"\u003eFirst access credential added to Application or Service Principal where no credential was present\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"57px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/FirstAppOrServicePrincipalCredential.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/FirstAppOrServicePrincipalCredential.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eMail.Read Permissions Granted to Application\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/MailPermissionsAddedToApplication.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/MailPermissionsAddedToApplication.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"57px\"\u003eSuspicious application consent similar to O365 Attack Toolkit\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"57px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/MaliciousOAuthApp_O365AttackToolkit.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/MaliciousOAuthApp_O365AttackToolkit.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eSuspicious application consent for offline access\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/SuspiciousOAuthApp_OfflineAccess.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/SuspiciousOAuthApp_OfflineAccess.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003e\u003cSTRONG\u003eRecon and Remote Execution\u003c/STRONG\u003e\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u0026nbsp;\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"57px\"\u003eSuspicious enumeration using Adfind tool\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"57px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/Suspicious_enumeration_using_adfind.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/Suspicious_enumeration_using_adfind.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"57px\"\u003eMultiple explicit credential usage - 4648 events\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"57px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/MultipleExplicitCredentialUsage4648Events.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/MultipleExplicitCredentialUsage4648Events.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003e\u003cSTRONG\u003eData Access\u003c/STRONG\u003e\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u0026nbsp;\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"57px\"\u003eAzure Active Directory PowerShell accessing non-AAD resources\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"57px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SigninLogs/AzureAADPowerShellAnomaly.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SigninLogs/AzureAADPowerShellAnomaly.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eSignins From VPS Providers\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SigninLogs/Signins-From-VPS-Providers.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SigninLogs/Signins-From-VPS-Providers.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003e\u003cSTRONG\u003eData Exfiltration\u003c/STRONG\u003e\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u0026nbsp;\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"57px\"\u003eAnomalous access to other user's mailboxes\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"57px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/OfficeActivity/AnomolousUserAccessingOtherUsersMailbox.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/OfficeActivity/AnomolousUserAccessingOtherUsersMailbox.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"57px\"\u003eExchange workflow MailItemsAccessed operation anomaly\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"57px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/OfficeActivity/MailItemsAccessedTimeSeries.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/OfficeActivity/MailItemsAccessedTimeSeries.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"57px\"\u003eSuspect Mailbox Export on IIS/OWA\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"57px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/W3CIISLog/SuspectedMailBoxExportHostonOWA.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/W3CIISLog/SuspectedMailBoxExportHostonOWA.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"57px\"\u003eHost Exporting Mailbox and Removing Export\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"57px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/HostExportingMailboxAndRemovingExport.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/HostExportingMailboxAndRemovingExport.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\"\u003eNon-owner mailbox login activity\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"20\" class=\"xl64\" style=\"height: 15.0pt; width: 48pt;\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/OfficeActivity/nonowner_MailboxLogin.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/OfficeActivity/nonowner_MailboxLogin.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003e\u003cSTRONG\u003eDomain Hunting\u003c/STRONG\u003e\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u0026nbsp;\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eSolorigate Network Beacon\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/MultipleDataSources/Solorigate-Network-Beacon.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/MultipleDataSources/Solorigate-Network-Beacon.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eSolorigate DNS Pattern\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/DnsEvents/Solorigate-DNS-Pattern.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/DnsEvents/Solorigate-DNS-Pattern.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eSolorigate Encoded Domain in URL\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/DnsEvents/Solorigate-Encoded-Domain-URL.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/DnsEvents/Solorigate-Encoded-Domain-URL.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD\u003e\u003cSTRONG\u003eSecurity Service Tampering\u003c/STRONG\u003e\u003c/TD\u003e\n\u003cTD\u003e\u0026nbsp;\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD\u003ePotential Microsoft security services tampering\u003c/TD\u003e\n\u003cTD\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/PotentialMicrosoftSecurityServicesTampering.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/PotentialMicrosoftSecurityServicesTampering.yaml\u003c/A\u003e\u0026nbsp;\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003e\u003cSTRONG\u003eM365+Sentinel\u003c/STRONG\u003e\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u0026nbsp;\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eSolorigate Defender Detections\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityAlert/Solorigate-Defender-Detections.yaml\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityAlert/Solorigate-Defender-Detections.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003c/TBODY\u003e\n\u003c/TABLE\u003e\n\u003c/div\u003e\u003cnoscript\u003e\u003cdiv class=\"lia-spoiler-noscript-container\"\u003e\u003cdiv class=\"lia-spoiler-noscript-content\"\u003e\n\n\n\nGaining a foothold\n\u0026nbsp;\n\n\nSolarWinds Inventory check query\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/SolarWindsInventory.yaml\n\n\nSolorigate Name Pipe\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/SolorigateNamedPipe.yaml\u0026nbsp;\n\n\nPrivilege Escalation\n\u0026nbsp;\n\n\nHosts with new logons\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/HostsWithNewLogons.yaml\n\n\nNew user created and added to the built-in administrators group\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserCreatedAddedToBuiltinAdmins_1d.yaml\n\n\nUser account added to built in domain local or global group\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserAccountAddedToPrivlegeGroup_1h.yaml\n\n\nTracking Privileged Account Rare Activity\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/TrackingPrivAccounts.yaml\n\n\nADFS Key Extraction\n\u0026nbsp;\n\n\nADFS DKM Master Key Export\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/MultipleDataSources/ADFS-DKM-MasterKey-Export.yaml\n\n\nADFS Key Export (Sysmon)\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/ADFSKeyExportSysmon.yaml\n\n\nEntropy for Processes for a given Host\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/ProcessEntropy.yaml\n\n\nRare processes run by Service accounts\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/RareProcbyServiceAccount.yaml\n\n\nUncommon processes - bottom 5%\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/uncommon_processes.yaml\n\n\nAzure Active Directory\n\u0026nbsp;\n\n\nModified domain federation trust settings\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/ADFSDomainTrustMods.yaml\n\n\nNew access credential added to Application or Service Principal\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/NewAppOrServicePrincipalCredential.yaml\n\n\nFirst access credential added to Application or Service Principal where no credential was present\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/FirstAppOrServicePrincipalCredential.yaml\n\n\nMail.Read Permissions Granted to Application\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/MailPermissionsAddedToApplication.yaml\n\n\nSuspicious application consent similar to O365 Attack Toolkit\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/MaliciousOAuthApp_O365AttackToolkit.yaml\n\n\nSuspicious application consent for offline access\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/SuspiciousOAuthApp_OfflineAccess.yaml\n\n\nRecon and Remote Execution\n\u0026nbsp;\n\n\nSuspicious enumeration using Adfind tool\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/Suspicious_enumeration_using_adfind.yaml\n\n\nMultiple explicit credential usage - 4648 events\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/MultipleExplicitCredentialUsage4648Events.yaml\n\n\nData Access\n\u0026nbsp;\n\n\nAzure Active Directory PowerShell accessing non-AAD resources\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SigninLogs/AzureAADPowerShellAnomaly.yaml\n\n\nSignins From VPS Providers\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SigninLogs/Signins-From-VPS-Providers.yaml\n\n\nData Exfiltration\n\u0026nbsp;\n\n\nAnomalous access to other user's mailboxes\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/OfficeActivity/AnomolousUserAccessingOtherUsersMailbox.yaml\n\n\nExchange workflow MailItemsAccessed operation anomaly\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/OfficeActivity/MailItemsAccessedTimeSeries.yaml\n\n\nSuspect Mailbox Export on IIS/OWA\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/W3CIISLog/SuspectedMailBoxExportHostonOWA.yaml\n\n\nHost Exporting Mailbox and Removing Export\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/HostExportingMailboxAndRemovingExport.yaml\n\n\nNon-owner mailbox login activity\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/OfficeActivity/nonowner_MailboxLogin.yaml\n\n\nDomain Hunting\n\u0026nbsp;\n\n\nSolorigate Network Beacon\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/MultipleDataSources/Solorigate-Network-Beacon.yaml\n\n\nSolorigate DNS Pattern\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/DnsEvents/Solorigate-DNS-Pattern.yaml\n\n\nSolorigate Encoded Domain in URL\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/DnsEvents/Solorigate-Encoded-Domain-URL.yaml\n\n\nSecurity Service Tampering\n\u0026nbsp;\n\n\nPotential Microsoft security services tampering\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/PotentialMicrosoftSecurityServicesTampering.yaml\u0026nbsp;\n\n\nM365+Sentinel\n\u0026nbsp;\n\n\nSolorigate Defender Detections\nhttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityAlert/Solorigate-Defender-Detections.yaml\n\n\n\n\u003c/div\u003e\u003c/div\u003e\u003c/noscript\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cH2 id=\"community-1995095-toc-hId-1891121373\"\u003eReferences\u003c/H2\u003e\n\u003cP\u003e\u003cA href=\"https://blogs.microsoft.com/on-the-issues/2020/12/13/customers-protect-nation-state-cyberattacks/\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eRecent Nation-State Cyber Attacks\u003c/A\u003e\u003cSPAN\u003e\u0026nbsp; \u003c/SPAN\u003e\u003c/P\u003e\n\u003cP\u003e\u003cA href=\"https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=Behavior:Win32/Solorigate.C!dha\u0026amp;ThreatID=2147771132\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eBehavior:Win32/Solorigate.C!dha threat description - Microsoft Security Intelligence\u003c/A\u003e\u003c/P\u003e\n\u003cP\u003e\u003cA href=\"https://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eCustomer guidance on recent nation-state cyberattacks\u0026nbsp;\u003c/A\u003e\u003c/P\u003e\n\u003cP\u003e\u003cA href=\"https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\" target=\"_blank\" rel=\"noopener nofollow noreferrer\"\u003eFireEye Advisory: Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims With SUNBURST Backdoor\u003c/A\u003e\u003c/P\u003e\n\u003cP\u003e\u003cA href=\"https://github.com/fireeye/sunburst_countermeasures\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eFireEye GitHub page: Sunburst Countermeasures\u0026nbsp;\u003c/A\u003e\u003c/P\u003e\n\u003cP\u003e\u003cA href=\"https://cyber.dhs.gov/ed/21-01/\" target=\"_blank\" rel=\"noopener nofollow noreferrer\"\u003eDHS Directive\u003c/A\u003e\u003c/P\u003e\n\u003cP\u003e\u003cA href=\"https://www.solarwinds.com/securityadvisory\" target=\"_blank\" rel=\"noopener nofollow noreferrer\"\u003eSolarWinds Security Advisory\u003c/A\u003e\u003c/P\u003e\n\u003cP\u003e\u003cA href=\"https://github.com/FalconForceTeam/FalconFriday/blob/master/Uncategorized/FireEye_red_team_tool_countermeasures.md\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eFalconFriday – Fireeye Red Team Tool Countermeasures KQL Queries \u0026nbsp;\u003c/A\u003e\u003c/P\u003e\n\u003cP\u003e\u003cA href=\"https://github.com/microsoft/Microsoft-365-Defender-Hunting-Queries\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eMicrosoft-365-Defender-Hunting-Queries: Sample queries for Advanced hunting in Microsoft 365 Defender (github.com)\u003c/A\u003e\u003c/P\u003e\n\u003cP\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Workbooks/SolarWindsPostCompromiseHunting.json\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eAzure Sentinel SolarWinds Post Compromise Hunting Workbook\u003c/A\u003e\u003c/P\u003e\n\u003cP data-unlink=\"true\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel-Notebooks/blob/master/Guided%20Investigation%20-%20Solarwinds%20Post%20Compromise%20Activity.ipynb\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eAzure Sentinel SolarWinds Post Compromise Notebook\u0026nbsp;\u003c/A\u003e\u003c/P\u003e\n\u003cP data-unlink=\"true\"\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/18/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cP data-unlink=\"true\"\u003e\u003cA href=\"https://techcommunity.microsoft.com/t5/microsoft-365-defender/new-threat-analytics-report-shares-the-latest-intelligence-on/ba-p/2001095\" target=\"_blank\"\u003eNew Threat analytics report shares the latest intelligence on recent nation-state cyber attacks - Microsoft Tech Community\u003c/A\u003e\u003c/P\u003e\n\u003cP data-unlink=\"true\"\u003e\u003cA href=\"https://aka.ms/solorigateattack\" target=\"_self\" rel=\"noopener noreferrer\"\u003eAnalyzing Solorigate, the compromised DLL file that started a sophisticated cyberattack, and how Microsoft Defender helps protect customers - Microsoft Security\u0026nbsp;\u003c/A\u003e\u003c/P\u003e\n\u003cP data-unlink=\"true\"\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/28/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cP data-unlink=\"true\"\u003e\u003cA href=\"https://www.microsoft.com/security/blog/2020/12/28/using-microsoft-365-defender-to-coordinate-protection-against-solorigate/\" target=\"_blank\" rel=\"noopener noreferrer\"\u003eUsing Microsoft 365 Defender to protect against Solorigate - Microsoft Security\u003c/A\u003e\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e","body@stringLength":"159837","rawBody":"\u003cP\u003e\u003cFONT size=\"3\" color=\"#993300\"\u003eMSTIC has released a number of new hunting and detection queries for Azure Sentinel based on additional observations as well as research released by partners and the wider community. In addition, the \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Workbooks/SolarWindsPostCompromiseHunting.json\" target=\"_self\"\u003eSolarWinds post compromise hunting workbook\u003c/A\u003e has been updated to include a number of new sections.\u0026nbsp;\u0026nbsp;\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003e\u003cFONT size=\"3\" color=\"#993300\"\u003eBlog sections have been marked with \u003cSTRONG\u003eUpdated\u0026nbsp;\u003c/STRONG\u003eand include the date they were last updated.\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003eMicrosoft recently blogged about the \u003cA href=\"https://blogs.microsoft.com/on-the-issues/2020/12/13/customers-protect-nation-state-cyberattacks/\" target=\"_blank\" rel=\"noopener\"\u003eRecent Nation-State Cyber Attacks\u003c/A\u003e that has impacted high value targets both across the government and private sector. This attack is also known as \u003cA href=\"https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=Trojan:MSIL/Solorigate.B!dha\" target=\"_blank\" rel=\"noopener\"\u003eSolorigate\u003c/A\u003e or \u003cA href=\"https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\" target=\"_blank\" rel=\"noopener\"\u003eSunburst\u003c/A\u003e. This threat actor is believed to be highly sophisticated and motivated. Relevant security data required for hunting and investigating such a complex attack is produced in multiple locations - cloud, on-premises and across multiple security tools and product logs.\u0026nbsp; Being able to analyze all the data from a single point makes it easier to spot trends and attacks. Azure Sentinel has made it easy to collect data from multiple data sources across different environments both on-prem and cloud with the goal of connecting that data together more easily. This blog post contains guidance and generic approaches to hunt for attacker activity (TTPs) in data that is available by default in Azure Sentinel or can be onboarded to Azure Sentinel.\u0026nbsp;\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003eAssociated content details:\u003c/P\u003e\n\u003cTABLE border=\"1\" width=\"100.03884623514038%\"\u003e\n\u003cTBODY\u003e\n\u003cTR\u003e\n\u003cTD width=\"100%\" height=\"95px\"\u003e\n\u003cH6\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/18/2020\u003c/FONT\u003e\u003c/H6\u003e\nCurrently known in depth\u0026nbsp;\u003cSTRONG\u003eattack details\u003c/STRONG\u003e have been provided by the M365 and MSTIC teams via the\u0026nbsp;\u003cA href=\"https://aka.ms/solorigateattack\" target=\"_self\"\u003edeep dive analysis blog\u003c/A\u003e\u003cSTRONG\u003e.\u003c/STRONG\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"100%\" height=\"84px\"\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/21/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003eCurrent \u003cSTRONG\u003eadvice for incident responders\u003c/STRONG\u003e\u0026nbsp;\u003cA href=\"https://aka.ms/dartrecoveryguide\" target=\"_self\"\u003eon recovery from systemic identity compromises\u003c/A\u003e has been provided by \u003cA href=\"https://www.microsoft.com/security/blog/2019/03/25/dart-the-microsoft-cybersecurity-team-we-hope-you-never-meet/\" target=\"_self\"\u003eMicrosoft Detection and Response Team\u003c/A\u003e.\u003c/P\u003e\n\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"100%\" height=\"111px\"\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/22/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003e\u003cSTRONG\u003eAzure AD Identity admins\u003c/STRONG\u003e who want to gain further visibility and understanding related to the identity implications of this attack on their environment can use the newly released \u003cA href=\"https://techcommunity.microsoft.com/t5/azure-active-directory-identity/azure-ad-workbook-to-help-you-assess-solorigate-risk/ba-p/2010718\" target=\"_self\"\u003eSensitive Operations Report workbook\u003c/A\u003e.\u003c/P\u003e\n\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD height=\"57px\"\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/26/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cSTRONG\u003eFor Identity Vendors and their customers\u003c/STRONG\u003e to understand the Solorigate identity related attack components the Identity team at Microsoft has produced \u003cA href=\"https://techcommunity.microsoft.com/t5/azure-active-directory-identity/understanding-quot-solorigate-quot-s-identity-iocs-for-identity/ba-p/2007610\" target=\"_self\"\u003ea blog has been created\u003c/A\u003e to walk thru this information.\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/28/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cFONT size=\"3\" color=\"#000000\"\u003e\u003cSTRONG\u003eUsers of Microsoft 365 Defender\u003c/STRONG\u003e can also hunt and detect on similar items in this blog, but tailored towards investigation using \u003cA href=\"https://aka.ms/detect_solorigate\" target=\"_self\"\u003eMicrosoft 365 Defender to protect against Solorigate\u003c/A\u003e.\u003c/FONT\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003c/TBODY\u003e\n\u003c/TABLE\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003eThe goal of this article is post-compromise investigation strategies and is focused on TTPs and not focused on specific IOCs.\u0026nbsp; Azure Sentinel customers are encouraged to review advisories and IOC’s shared by Microsoft MSRC and security partners to search on specific IOC’s in their environment using Azure Sentinel.\u0026nbsp; Links to these IOC’s are listed in the reference section at the end.\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003eTo make it easier for security teams to visualize and monitor their environments for this attack the MSTIC team has shared a \u003cA href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Workbooks/SolarWindsPostCompromiseHunting.json\" target=\"_blank\" rel=\"noopener\"\u003eSolarWinds Post Compromise\u003c/A\u003e hunting workbook via Azure Sentinel and Azure Sentinel GitHub. There are many things in this workbook that threat hunters would find useful and the workbook is complimentary to the hunting methods shared below. Importantly, if you have recently rotated ADFS key material this workbook can be useful in identifying attacker logon activity if they logon with old key material. Security teams should leverage this hunting workbook as part of their workflow in investigating this attack.\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003eThanks to the \u003cSTRONG\u003eMSTIC\u003c/STRONG\u003e and \u003cSTRONG\u003eM365\u003c/STRONG\u003e teams for collaborating to deliver this content in a timely manner. \u003cSTRONG\u003eSpecial thanks to\u003c/STRONG\u003e\u0026nbsp;\u003cLI-USER uid=\"293861\" login=\"aprakash13\"\u003e\u003c/LI-USER\u003e,\u0026nbsp;\u003cLI-USER uid=\"313528\" login=\"Ashwin_Patil\"\u003e\u003c/LI-USER\u003e,\u0026nbsp;\u003cLI-USER uid=\"113210\" login=\"Pete Bryan\"\u003e\u003c/LI-USER\u003e,\u0026nbsp;\u003cLI-USER uid=\"640594\" login=\"ItsReallyNick\"\u003e\u003c/LI-USER\u003e,\u0026nbsp;Chris Glyer,\u0026nbsp;\u003cLI-USER uid=\"591947\" login=\"Cyb3rWard0g\"\u003e\u003c/LI-USER\u003e,\u0026nbsp;\u003cLI-USER uid=\"178222\" login=\"Tim Burrell (MSTIC)\"\u003e\u003c/LI-USER\u003e,\u0026nbsp;Rob Mead,\u0026nbsp;\u003cLI-USER uid=\"686380\" login=\"TomMcElroy\"\u003e\u003c/LI-USER\u003e,\u0026nbsp;\u003cLI-USER uid=\"75694\" login=\"Elia Florio\"\u003e\u003c/LI-USER\u003e,\u0026nbsp;\u003cLI-USER uid=\"92617\" login=\"Corina Feuerstein\"\u003e\u003c/LI-USER\u003e,\u0026nbsp;Ramin Nafisi, Michael Matonis.\u0026nbsp;\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003ePlease note that since Azure Sentinel and the M365 Advanced Hunting portal share the same query language and share similar data types, all of the referenced queries can be used directly or slightly modified to work in both.\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cH2\u003eGaining a foothold\u003c/H2\u003e\n\u003cP\u003eAs shared in Microsoft’s technical blog – \u003cA href=\"https://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/\" target=\"_blank\" rel=\"noopener\"\u003eCustomer Guidance on Recent Nation-state Cyber Attacks\u003c/A\u003e - attackers might have compromised the internal build systems or the update distribution systems of SolarWinds Orion software then modified a DLL component in the legitimate software and embedded backdoor code that would allow these attackers to remotely perform commands or deliver additional payloads. Below is a representation of various attack stages which you can also see in \u003cA href=\"https://securitycenter.windows.com/\" target=\"_blank\" rel=\"noopener\"\u003eMicrosoft Threat Protection (MTP) portal\u003c/A\u003e.\u0026nbsp; Note that if you do not have Microsoft Threat Protection this link will not work for you.\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003e\u003cLI-IMAGE width=\"729\" height=\"481\" alt=\"Image1.png\" align=\"inline\" id=\"241151i3FE658CAF9C33585\" size=\"large\" resized=\"true\" sourcetype=\"new\" src=\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTE1MWkzRkU2NThDQUY5QzMzNTg1?image-dimensions=750x750\u0026amp;revision=57\"\u003e\u003c/LI-IMAGE\u003e\u003c/P\u003e\n\u003cP\u003e \u003c/P\u003e\n\u003cP\u003eTo hunt for similar TTPs used in this attack, a good place to start is to build an inventory of the machines that have SolarWinds Orion components. Organizations might already have a software inventory management system to indicate hosts where the SolarWinds application is installed. Alternatively, Azure Sentinel could be leveraged to run a simple query to gather similar details. Azure Sentinel collects data from multiple different logs that could be used to gather this information. For example, through the recently released \u003cSPAN\u003e\u003cA href=\"https://docs.microsoft.com/en-us/azure/sentinel/connect-microsoft-365-defender\" target=\"_blank\" rel=\"noopener\"\u003eMicrosoft 365 Defender connector\u003c/A\u003e\u003c/SPAN\u003e, security teams can now easily ingest Microsoft 365 raw data into Azure Sentinel. Using the ingested data, a simple query like below can be written that will pull the hosts with SolarWinds process running in last 30 days based on Process execution either via host on boarded to Sentinel or on boarded via Microsoft Defender for Endpoints (MDE). The query also leverages the Sysmon logs that a lot of customers are collecting from their environment to surface the machines that have SolarWinds running on them. Similar queries that leverage M365 raw data could also be run from the M365's Advanced hunting portal.\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/SolarWindsInventory.yaml\" target=\"_self\"\u003eSolarWinds Inventory check query\u003c/A\u003e\u003c/P\u003e\n\u003cLI-SPOILER\u003e\n\u003cDIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003elet\u0026nbsp;timeframe\u0026nbsp;=\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003e30\u003c/SPAN\u003e\u003cSPAN\u003ed\u003c/SPAN\u003e\u003cSPAN\u003e;\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eunion\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;isfuzzy=\u003c/SPAN\u003e\u003cSPAN\u003etrue\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003eSecurityEvent\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003ewhere\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;TimeGenerated\u0026nbsp;\u0026gt;=\u0026nbsp;ago\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003etimeframe\u003c/SPAN\u003e\u003cSPAN\u003e)\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003ewhere\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;EventID\u0026nbsp;==\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003e'4688'\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003ewhere\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;tolower\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eNewProcessName\u003c/SPAN\u003e\u003cSPAN\u003e)\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003ehas\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003e'solarwinds'\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003eextend\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;MachineName\u0026nbsp;=\u0026nbsp;Computer\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003e,\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Process\u0026nbsp;=\u0026nbsp;NewProcessName\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003esummarize\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;StartTime\u0026nbsp;=\u0026nbsp;min\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eTimeGenerated\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;EndTime\u0026nbsp;=\u0026nbsp;max\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eTimeGenerated\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;MachineCount\u0026nbsp;=\u0026nbsp;dcount\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eMachineName\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;AccountCount\u0026nbsp;=\u0026nbsp;dcount\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eAccount\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;MachineNames\u0026nbsp;=\u0026nbsp;make_set\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eMachineName\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Accounts\u0026nbsp;=\u0026nbsp;make_set\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eAccount\u003c/SPAN\u003e\u003cSPAN\u003e)\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003eby\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Process\u003c/SPAN\u003e\u003cSPAN\u003e,\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Type\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003eDeviceProcessEvents\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003ewhere\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;TimeGenerated\u0026nbsp;\u0026gt;=\u0026nbsp;ago\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003etimeframe\u003c/SPAN\u003e\u003cSPAN\u003e)\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003ewhere\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;tolower\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eInitiatingProcessFolderPath\u003c/SPAN\u003e\u003cSPAN\u003e)\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003ehas\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003e'solarwinds'\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003eextend\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;MachineName\u0026nbsp;=\u0026nbsp;DeviceName\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003e,\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Process\u0026nbsp;=\u0026nbsp;InitiatingProcessFolderPath\u003c/SPAN\u003e\u003cSPAN\u003e,\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Account\u0026nbsp;=\u0026nbsp;AccountName\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003esummarize\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;StartTime\u0026nbsp;=\u0026nbsp;min\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eTimeGenerated\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;EndTime\u0026nbsp;=\u0026nbsp;max\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eTimeGenerated\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;MachineCount\u0026nbsp;=\u0026nbsp;dcount\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eMachineName\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;AccountCount\u0026nbsp;=\u0026nbsp;dcount\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eAccount\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;MachineNames\u0026nbsp;=\u0026nbsp;make_set\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eMachineName\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Accounts\u0026nbsp;=\u0026nbsp;make_set\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eAccount\u003c/SPAN\u003e\u003cSPAN\u003e)\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003eby\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Process\u003c/SPAN\u003e\u003cSPAN\u003e,\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Type\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003eEvent\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003ewhere\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;TimeGenerated\u0026nbsp;\u0026gt;=\u0026nbsp;ago\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003etimeframe\u003c/SPAN\u003e\u003cSPAN\u003e)\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003ewhere\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Source\u0026nbsp;==\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003e\"Microsoft-Windows-Sysmon\"\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003ewhere\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;EventID\u0026nbsp;==\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003e1\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003eextend\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Image\u0026nbsp;=\u0026nbsp;EventDetail\u003c/SPAN\u003e\u003cSPAN\u003e.[\u003c/SPAN\u003e\u003cSPAN\u003e4\u003c/SPAN\u003e\u003cSPAN\u003e].[\u003c/SPAN\u003e\u003cSPAN\u003e\"#text\"\u003c/SPAN\u003e\u003cSPAN\u003e]\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003ewhere\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;tolower\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eImage\u003c/SPAN\u003e\u003cSPAN\u003e)\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003ehas\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003e'solarwinds'\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003eextend\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;MachineName\u0026nbsp;=\u0026nbsp;Computer\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003e,\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Process\u0026nbsp;=\u0026nbsp;Image\u003c/SPAN\u003e\u003cSPAN\u003e,\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Account\u0026nbsp;=\u0026nbsp;UserName\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e|\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003esummarize\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;StartTime\u0026nbsp;=\u0026nbsp;min\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eTimeGenerated\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;EndTime\u0026nbsp;=\u0026nbsp;max\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eTimeGenerated\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;MachineCount\u0026nbsp;=\u0026nbsp;dcount\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eMachineName\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;AccountCount\u0026nbsp;=\u0026nbsp;dcount\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eAccount\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;MachineNames\u0026nbsp;=\u0026nbsp;make_set\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eMachineName\u003c/SPAN\u003e\u003cSPAN\u003e),\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Accounts\u0026nbsp;=\u0026nbsp;make_set\u003c/SPAN\u003e\u003cSPAN\u003e(\u003c/SPAN\u003e\u003cSPAN\u003eAccount\u003c/SPAN\u003e\u003cSPAN\u003e)\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003eby\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Process\u003c/SPAN\u003e\u003cSPAN\u003e,\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;Type\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e)\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003cDIV\u003e\u003cSPAN\u003e)\u003c/SPAN\u003e\u003cSPAN\u003e\u0026nbsp;\u003cBR /\u003e\u003c/SPAN\u003e\u003c/DIV\u003e\n\u003c/DIV\u003e\n\u003c/LI-SPOILER\u003e\n\u003cH6\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/30/2020\u003c/FONT\u003e\u003c/H6\u003e\n\u003cP\u003eOn systems where the malicious SolarWinds DLL (SolarWinds.Orion.Core.BusinessLayer.dll) is running, it is known that the attacker used a hardcoded named pipe '583da945-62af-10e8-4902-a8f205c72b2e' to conduct various checks as well as to ensure only one instance of the backdoor was running. The use of named pipes by malware is not uncommon as it provides a mechanism for communication between processes. This activity by the malware can be detected if you are collecting Sysmon (Event Id 17/18) or Security Event Id 5145 in your Azure Sentinel workspace. The\u0026nbsp;\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/SolorigateNamedPipe.yaml\" target=\"_self\"\u003e\u003cSPAN\u003eSolorigate Named Pipe\u0026nbsp;\u003c/SPAN\u003edetection\u003c/A\u003e should not be considered reliable on its own as the creation of just the hardcoded named pipe does not indicate that the malicious code was completely triggered, and the machine beaconed out or received additional commands. However, presence of this is definitely suspicious and should warrant further in-depth investigation.\u003c/P\u003e\n\u003cLI-SPOILER\u003elet timeframe = 1d;\u003cBR /\u003e(union isfuzzy=true\u003cBR /\u003e(Event\u003cBR /\u003e| where TimeGenerated \u0026gt;= ago(timeframe)\u003cBR /\u003e| where Source == \"Microsoft-Windows-Sysmon\"\u003cBR /\u003e| where EventID in (17,18)\u003cBR /\u003e| extend EvData = parse_xml(EventData)\u003cBR /\u003e| extend EventDetail = EvData.DataItem.EventData.Data\u003cBR /\u003e| extend NamedPipe = EventDetail.[5].[\"#text\"]\u003cBR /\u003e| extend ProcessDetail = EventDetail.[6].[\"#text\"]\u003cBR /\u003e| where NamedPipe contains '583da945-62af-10e8-4902-a8f205c72b2e'\u003cBR /\u003e| extend Account = UserName\u003cBR /\u003e| project-away EventDetail, EvData\u003cBR /\u003e),\u003cBR /\u003e(\u003cBR /\u003eSecurityEvent\u003cBR /\u003e| where TimeGenerated \u0026gt;= ago(timeframe)\u003cBR /\u003e| where EventID == '5145'\u003cBR /\u003e| where AccessList has '%%4418' // presence of CreatePipeInstance value \u003cBR /\u003e| where RelativeTargetName contains '583da945-62af-10e8-4902-a8f205c72b2e'\u003cBR /\u003e)\u003cBR /\u003e)\u003cBR /\u003e| extend timestamp = TimeGenerated, AccountCustomEntity = Account, HostCustomEntity = Computer\u003c/LI-SPOILER\u003e\n\u003cH2\u003ePrivilege Escalation\u003c/H2\u003e\n\u003cP\u003eOnce the adversary acquires an initial foothold on a system thru the SolarWinds process they will have System account level access, the attacker will then attempt to elevate to domain admin level access to the environment. The Microsoft Threat Intelligence Center (MSTIC) team has already delivered multiple queries into Azure Sentinel that identify similar TTPs and many are also available in M365. These methodologies are not specific to just this threat actor or this attack but have been seen in various attack campaigns.\u003c/P\u003e\n\u003cP\u003eIdentifying abnormal logon activities or additions to privileged groups is one way to identify privilege escalation.\u003c/P\u003e\n\u003cH6\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/17/2020\u003c/FONT\u003e\u003c/H6\u003e\n\u003cUL\u003e\n\u003cLI\u003eChecking for \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/HostsWithNewLogons.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehosts with new logons\u003c/A\u003e to identify potential lateral movement by the attacker.\u003c/LI\u003e\n\u003cLI\u003eLook for any new\u0026nbsp;\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserCreatedAddedToBuiltinAdmins_1d.yaml\" target=\"_blank\" rel=\"noopener\"\u003eaccount being created and added to built-in administrators group.\u003c/A\u003e\u003c/LI\u003e\n\u003cLI\u003eLook for any \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserAccountAddedToPrivlegeGroup_1h.yaml\" target=\"_self\"\u003eu\u003c/A\u003e\u003cSPAN\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserAccountAddedToPrivlegeGroup_1h.yaml\" target=\"_self\"\u003eser account added to privileged built in domain local or global groups,\u003c/A\u003e\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN\u003eincluding adding accounts to a domain privileged group\u003c/SPAN\u003e such as Enterprise Admins, Cert Publishers or DnsAdmins.\u003c/LI\u003e\n\u003cLI\u003eMonitor for \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/TrackingPrivAccounts.yaml\" target=\"_blank\" rel=\"noopener\"\u003erare activity by a high-value account\u003c/A\u003e carried out on a system or service.\u003c/LI\u003e\n\u003c/UL\u003e\n\u003cP\u003eRelated to this attack, in some environments service account credentials had been granted administrative privileges. The above queries can be modified to remove the condition of focusing “User” accounts by commenting the query to include service accounts in the scope where applicable:\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003e\u003cSTRONG\u003e\u003cEM\u003e//| where AccountType == \"User\"\u003c/EM\u003e\u003c/STRONG\u003e\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003ePlease see the \u003cA href=\"https://github.com/Azure/Azure-Sentinel\" target=\"_blank\" rel=\"noopener\"\u003eAzure Sentinel Github\u003c/A\u003e for additional queries and hunting ideas related to Accounts under the Detections and Hunting Queries sections for AuditLogs, and SecurityEvents\u003c/P\u003e\n\u003cP\u003eMicrosoft 365 Defender team has also shared quite a few sample queries for use in their \u003cSPAN\u003e\u003cA href=\"https://github.com/microsoft/Microsoft-365-Defender-Hunting-Queries\" target=\"_blank\" rel=\"noopener\"\u003eadvanced hunting\u003c/A\u003e\u003c/SPAN\u003e portal that could be leveraged to detect this part of the attack. Additionally, the logic for many of the Azure Sentinel queries can also be transformed to equivalent queries for Microsoft 365 Defender, that could be run in their Advanced Hunting Portal.\u003c/P\u003e\n\u003cP\u003eMicrosoft 365 Defender has an upcoming complimentary blog that will be updated here once available.\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cH2\u003eCertificate Export\u003c/H2\u003e\n\u003cP\u003eThe next step in the attack was stealing the certificate that signs SAML tokens from the federation server (ADFS) called a Token Signing Cert (TSC). SAML Tokens\u0026nbsp;are basically XML representations of claims.\u0026nbsp; You can read more about ADFS in \u003cA href=\"https://docs.microsoft.com/en-us/azure/active-directory/hybrid/whatis-fed\" target=\"_blank\" rel=\"noopener\"\u003eWhat is federation with Azure AD? | Microsoft Docs\u003c/A\u003e and SAML at \u003cA href=\"https://docs.microsoft.com/en-us/azure/active-directory/develop/single-sign-on-saml-protocol\" target=\"_blank\" rel=\"noopener\"\u003eAzure Single Sign On SAML Protocol - Microsoft identity platform | Microsoft Docs\u003c/A\u003e. The process is as follows:\u003c/P\u003e\n\u003cOL\u003e\n\u003cLI\u003eA client requests a SAML token from an ADFS Server by authenticating to that server using Windows credentials.\u003c/LI\u003e\n\u003cLI\u003eThe ADFS server issues a SAML token to the client.\u003c/LI\u003e\n\u003cLI\u003eThe SAML token is signed with a certificate associated with the server.\u003c/LI\u003e\n\u003cLI\u003eThe client then presents the SAML token to the application that it needs access to.\u003c/LI\u003e\n\u003cLI\u003eThe signature over the SAML token tells the application that the security token service issued the token and grants access to the client.\u003c/LI\u003e\n\u003c/OL\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cH2\u003e\u003cSPAN data-contrast=\"none\"\u003eADFS Key Extraction \u003c/SPAN\u003e\u003c/H2\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003e\u003cSPAN data-contrast=\"none\"\u003eUpdated 01/15/2021\u003c/SPAN\u003e\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003eThe implication of stealing the Token Signing Cert (TSC) is that once the certificate has been acquired, the actor can forge SAML (Security Assertions Markup Language) tokens with whatever claims and lifetime they choose, then sign it with the certificate that has been acquired.  Microsoft continues to strongly recommend securing your AD FS (Active Directory Federation Service) TSC because if these TSC’s are acquired by a bad actor, this then enables the actor to forge SAML tokens that impersonate highly privileged accounts.  There are publicly available pen-testing tools like \u003cA href=\"https://github.com/fireeye/adfsdump\" target=\"_blank\" rel=\"noopener\"\u003eADFSDump\u003c/A\u003e and \u003cA href=\"https://github.com/fireeye/adfspoof\" target=\"_blank\" rel=\"noopener\"\u003eADFSpoof\u003c/A\u003e \u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003ethat help with extracting required information from\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003ethe AD\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003eFS configuration database\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun CommentStart  BCX8 SCXW227613231\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003eto generate the forged security tokens\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003e.  \u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun CommentStart  BCX8 SCXW227613231\"\u003eWhile\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003ewe have not confirmed\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003ethese\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun CommentStart  BCX8 SCXW227613231\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003especific tools were\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003eused in th\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003eis attack\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003e, they are useful for simulating the attack behavior or executing a similar attack and therefore\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003e,\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003eMicrosoft has\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun CommentStart  BCX8 SCXW227613231\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003ecreated\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003ea high\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003e-fidelity detection related to this\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW227613231\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW227613231\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003efor M365 Defender\u003c/SPAN\u003e\u003c/SPAN\u003e:\u003c/P\u003e\n\u003cUL\u003e\n\u003cLI\u003e\u003cSTRONG\u003eADFS private key extraction\u003c/STRONG\u003e which detects ADFS private key extraction patterns from tools such as ADFSDump.\u003c/LI\u003e\n\u003c/UL\u003e\n\u003cP\u003e\u003cSTRONG\u003eNote:\u003c/STRONG\u003e \u003cSPAN class=\"TextRun  BCX8 SCXW233666654\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW233666654\"\u003eAny M365 Defender alert\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW233666654\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW233666654\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003ecan be seen in Azure Sentinel Security Alerts or in the M365 security portal\u003c/SPAN\u003e\u003c/SPAN\u003e.\u003c/P\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 01/15/2021\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003e\u003cSPAN data-contrast=\"auto\"\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003eTh\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003ee\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003eTTP (tactics, techniques, and procedures)\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003e\u0026nbsp;observed in the \u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun SpellingErrorV2  BCX8 SCXW94422071\"\u003eSolorigate\u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003e attack is the creation of\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003ea\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003elegitimate SAML token used to authenticate as any user. One way an attacker could achieve this is by compromising\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun ContextualSpellingAndGrammarErrorV2  BCX8 SCXW94422071\"\u003eAD\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003eFS key material.\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003eMicrosoft\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003ehas a\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003e\u0026nbsp;new\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003e\u0026nbsp;detection for this as stated above\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun ContextualSpellingAndGrammarErrorV2  BCX8 DefaultHighlightTransition SCXW94422071\"\u003eand\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun ContextualSpellingAndGrammarErrorV2  BCX8 DefaultHighlightTransition SCXW94422071\"\u003efor\u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003e\u0026nbsp;Azure Sentinel\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003ehas\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003ealso created a Windows Event Log based detection that indicates\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003e\u0026nbsp;an\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003e \u003c/SPAN\u003e\u003c/SPAN\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/MultipleDataSources/ADFS-DKM-MasterKey-Export.yaml\" target=\"_self\"\u003eADFS DKM Master Key Export\u003c/A\u003e.\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003e\u0026nbsp;\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003eAs part of the update for this query to the Azure Sentinel GitHub,\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun CommentStart  BCX8 SCXW94422071\"\u003ethere is a\u003c/SPAN\u003e\u003c/SPAN\u003e \u003cA href=\"https://github.com/Azure/Azure-Sentinel/pull/1512#issue-543053339\" target=\"_self\"\u003edetailed write up\u003c/A\u003e \u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003efor\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003ewhy this\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003eis\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003einteresting\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW94422071\"\u003e\u0026nbsp;along with a\u0026nbsp;\u003cA class=\"Hyperlink  BCX8 SCXW94422071\" href=\"https://github.com/Azure/Azure-Sentinel/pull/1562#issue-551542469\" target=\"_blank\" rel=\"noopener noreferrer\"\u003e\u003cSPAN class=\"FieldRange  BCX8 SCXW94422071\"\u003e\u003cSPAN class=\"TextRun Underlined  BCX8 SCXW94422071\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun CommentStart  BCX8 SCXW94422071\" data-ccp-charstyle=\"Hyperlink\"\u003esubsequent addition\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/A\u003e\u0026nbsp;providing clarity\u0026nbsp;on how to get 4662\u0026nbsp;events\u0026nbsp;to fire\u003c/SPAN\u003e\u003c/SPAN\u003e.\u0026nbsp; This detection should not be considered reliable on its own but can identify suspicious activity that warrants further investigation.\u003c/SPAN\u003e\u003c/P\u003e\n\u003cP\u003e\u003cSPAN data-contrast=\"auto\"\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 01/15/2021\u003c/FONT\u003e\u003c/SPAN\u003e\u003c/P\u003e\n\u003cLI-SPOILER\u003e\n\u003cP\u003e\u0026nbsp;(union isfuzzy=true (SecurityEvent \u003cBR /\u003e| where EventID == 4662 // You need to create a SACL on the ADFS Policy Store DKM group for this event to be created. \u003cBR /\u003e| where ObjectServer == 'DS'\u003cBR /\u003e| where OperationType == 'Object Access'\u003cBR /\u003e//| where ObjectName contains '\u0026lt;GUID of ADFS Policy Store DKM Group object' This is unique to the domain. Check description for more details.\u003cBR /\u003e| where ObjectType contains '5cb41ed0-0e4c-11d0-a286-00aa003049e2' // Contact Class\u003cBR /\u003e| where Properties contains '8d3bca50-1d7e-11d0-a081-00aa006c33ed' // Picture Attribute - Ldap-Display-Name: thumbnailPhoto\u003cBR /\u003e| extend timestamp = TimeGenerated, HostCustomEntity = Computer, AccountCustomEntity = SubjectAccount),\u003cBR /\u003e(DeviceEvents\u003cBR /\u003e| where ActionType =~ \"LdapSearch\"\u003cBR /\u003e| where AdditionalFields.AttributeList contains \"thumbnailPhoto\"\u003cBR /\u003e| where AdditionalFields.DistinguishedName contains \"CN=ADFS,CN=Microsoft,CN=Program Data\" // Filter results to show only hits related to the ADFS AD container\u003cBR /\u003e| extend timestamp = TimeGenerated, HostCustomEntity = DeviceName, AccountCustomEntity = InitiatingProcessAccountName)\u003cBR /\u003e)\u003c/P\u003e\n\u003c/LI-SPOILER\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003e\u003cSPAN data-contrast=\"none\"\u003eUpdated 12/19/2020\u003c/SPAN\u003e\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003eMSTIC has developed another \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/ADFSKeyExportSysmon.yaml\" target=\"_blank\" rel=\"noopener\"\u003edetection\u003c/A\u003e for ADFS server key export events. This detection leverages the visibility provided by \u003cA href=\"https://docs.microsoft.com/en-us/sysinternals/downloads/sysmon\" target=\"_blank\" rel=\"noopener\"\u003eSysmon\u003c/A\u003e and provides a more reliable detection method than that covered in the Windows Event Log detection. For this detection to be effective you must be collecting Sysmon Event IDs 17 and 18 into \u003cA href=\"https://medium.com/blueteamlabs/using-sysmon-in-azure-sentinel-883eb6ffc431\" target=\"_blank\" rel=\"noopener\"\u003eyour Azure Sentinel workspace\u003c/A\u003e.\u003c/P\u003e\n\u003cLI-SPOILER\u003e// Adjust this to use a longer timeframe to identify ADFS servers\u003cBR /\u003elet lookback = 6d;\u003cBR /\u003e// Adjust this to adjust the key export detection timeframe\u003cBR /\u003elet timeframe = 1d;\u003cBR /\u003e// Start be identifying ADFS servers to reduce FP chance\u003cBR /\u003elet ADFS_Servers = (\u003cBR /\u003eEvent\u003cBR /\u003e| where TimeGenerated \u0026gt; ago(timeframe+lookback)\u003cBR /\u003e| where Source == \"Microsoft-Windows-Sysmon\"\u003cBR /\u003e| extend EventData = parse_xml(EventData).DataItem.EventData.Data\u003cBR /\u003e| mv-expand bagexpansion=array EventData\u003cBR /\u003e| evaluate bag_unpack(EventData)\u003cBR /\u003e| extend Key=tostring(['@Name']), Value=['#text']\u003cBR /\u003e| evaluate pivot(Key, any(Value), TimeGenerated, Source, EventLog, Computer, EventLevel, EventLevelName, EventID, UserName, RenderedDescription, MG, ManagementGroupName, Type, _ResourceId)\u003cBR /\u003e| extend process = split(Image, '\\\\', -1)[-1]\u003cBR /\u003e| where process =~ \"Microsoft.IdentityServer.ServiceHost.exe\"\u003cBR /\u003e| summarize by Computer);\u003cBR /\u003e// Look for ADFS servers where Named Pipes event are present\u003cBR /\u003eEvent\u003cBR /\u003e| where TimeGenerated \u0026gt; ago(timeframe)\u003cBR /\u003e| where Source == \"Microsoft-Windows-Sysmon\"\u003cBR /\u003e| where Computer in~ (ADFS_Servers)\u003cBR /\u003e| extend RenderedDescription = tostring(split(RenderedDescription, \":\")[0])\u003cBR /\u003e| extend EventData = parse_xml(EventData).DataItem.EventData.Data\u003cBR /\u003e| mv-expand bagexpansion=array EventData\u003cBR /\u003e| evaluate bag_unpack(EventData)\u003cBR /\u003e| extend Key=tostring(['@Name']), Value=['#text']\u003cBR /\u003e| evaluate pivot(Key, any(Value), TimeGenerated, Source, EventLog, Computer, EventLevel, EventLevelName, EventID, UserName, RenderedDescription, MG, ManagementGroupName, Type, _ResourceId)\u003cBR /\u003e| extend RuleName = column_ifexists(\"RuleName\", \"\"), TechniqueId = column_ifexists(\"TechniqueId\", \"\"), TechniqueName = column_ifexists(\"TechniqueName\", \"\")\u003cBR /\u003e| parse RuleName with * 'technique_id=' TechniqueId ',' * 'technique_name=' TechniqueName\u003cBR /\u003e| where EventID in (17,18)\u003cBR /\u003e// Look for Pipe related to querying the WID\u003cBR /\u003e| where PipeName == \"\\\\MICROSOFT##WID\\\\tsql\\\\query\"\u003cBR /\u003e| extend process = split(Image, '\\\\', -1)[-1]\u003cBR /\u003e// Exclude expected processes\u003cBR /\u003e| where process !in (\"Microsoft.IdentityServer.ServiceHost.exe\", \"Microsoft.Identity.Health.Adfs.PshSurrogate.exe\", \"AzureADConnect.exe\", \"Microsoft.Tri.Sensor.exe\", \"wsmprovhost.exe\",\"mmc.exe\", \"sqlservr.exe\")\u003cBR /\u003e| extend Operation = RenderedDescription\u003cBR /\u003e| project-reorder TimeGenerated, EventType, Operation, process, Image, Computer, UserName\u003cBR /\u003e| extend HostCustomEntity = Computer, AccountCustomEntity = UserName\u003c/LI-SPOILER\u003e\n\u003cP\u003eOutside of directly looking for tools, this adversary may have used custom tooling so looking for anomalous process executions or anomalous accounts logging on to our ADFS server can give us some clue when such attacks happen. Azure Sentinel provides queries that can help to:\u003c/P\u003e\n\u003cUL\u003e\n\u003cLI\u003eFind \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/ProcessEntropy.yaml\" target=\"_blank\" rel=\"noopener\"\u003erare anomalous process in your environment\u003c/A\u003e.\u003c/LI\u003e\n\u003cLI\u003eAlso look for \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/RareProcbyServiceAccount.yaml\" target=\"_blank\" rel=\"noopener\"\u003erare processes run by service accounts\u003c/A\u003e\u003c/LI\u003e\n\u003cLI\u003eOr uncommon processes that are in the \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/uncommon_processes.yaml\" target=\"_blank\" rel=\"noopener\"\u003ebottom 5% of all the process\u003c/A\u003e.\u003c/LI\u003e\n\u003cLI\u003eIn some instances, there is a rare command line syntax related to DLL loading, you can adjust these queries to also look at rarity on the command line.\u003c/LI\u003e\n\u003c/UL\u003e\n\u003cP\u003eEvery environment is different and some of these queries being generic could be noisy. So, in the first step a good approach would be to limit this kind of hunting to our ADFS server.\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cH2\u003eAzure Active Directory Hunting\u003c/H2\u003e\n\u003cP\u003eHaving gained a significant foothold in the on prem environment, the actor also targeted the Azure AD of some of the compromised organizations and made modifications to Azure AD settings to facilitate long term access. Microsoft has shared many relevant queries through the \u003cA href=\"https://github.com/Azure/Azure-Sentinel\" target=\"_self\"\u003eAzure Sentinel GitHub\u003c/A\u003e to identify these actions.\u003c/P\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 01/15/2021\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003eOne such activity is related to modifying \u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003edomain federation trust settings\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003e.\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003eA\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003efederation trust signifies\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003ethe establishment\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003eof\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003eauthentication\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003eand authorization trust\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003ebetween two organizations so that users located in partner organization\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003es\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003ecan send authentication\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003eand authorization\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW239135417 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW239135417 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003erequests successfully\u003c/SPAN\u003e\u003c/SPAN\u003e.\u003c/P\u003e\n\u003cUL\u003e\n\u003cLI\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003eWhile not specifically seen in this attack\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003e, tracking federation trust modifications is\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003eimportant\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003e.\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003eThe Azure Sentinel query for \u003c/SPAN\u003e\u003c/SPAN\u003e\u003cA class=\"Hyperlink  BCX8 SCXW231191900\" href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/ADFSDomainTrustMods.yaml\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003cSPAN class=\"TextRun Underlined  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003edomain federation trust settings modification\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/A\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003e will alert when a user or application modifies the federation settings on the domain particularly when a new Active Directory Federated Service (ADFS) Trusted Realm object, such as a signing certificate, is added to the domain\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003eor there is an update to domain authentication from \u003cSTRONG\u003emanaged\u003c/STRONG\u003e to\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSTRONG\u003e\u003cSPAN class=\"NormalTextRun ContextualSpellingAndGrammarErrorV2  BCX8 SCXW231191900\"\u003efederated\u003c/SPAN\u003e\u003c/STRONG\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003e\u003cSTRONG\u003e.\u003c/STRONG\u003e Modification to domain federation settings should be rare\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003eand\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003ethis\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003eshould be treated as\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003ea high-fidelity alert that\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003eAzure AD and\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun CommentStart  BCX8 SCXW231191900\"\u003eAzure Sentinel users\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003eshould\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun  BCX8 SCXW231191900\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun  BCX8 SCXW231191900\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003efollow up on\u003c/SPAN\u003e\u003c/SPAN\u003e.\u003c/LI\u003e\n\u003c/UL\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 01/15/2021\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003e\u003cSPAN class=\"TrackChangeTextInsertion TrackedChange SCXW226733069 BCX8\"\u003e\u003cSPAN class=\"TextRun SCXW226733069 BCX8\" data-contrast=\"none\"\u003e\u003cSPAN class=\"NormalTextRun SCXW226733069 BCX8\"\u003eThe original purpose of the\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/AuditLogs/StsRefreshTokenModification.yaml\" target=\"_self\"\u003e\u003cSPAN class=\"NormalTextRun SpellingErrorV2 SCXW226733069 BCX8 DefaultHighlightTransition\"\u003eSTSRefreshTokenModification\u003c/SPAN\u003e\u003c/A\u003e\u003cSPAN class=\"NormalTextRun SCXW226733069 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003elow severity, hunting-only query was to demonstrate an event that has token validity time periods in it and demonstrate how one could monitor for anomalous/edited tokens. We have determined this event will only fire on the manual expiration of the\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun SpellingErrorV2 SCXW226733069 BCX8\"\u003eStsRefreshToken\u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun SCXW226733069 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003eby an admin (or the user). These types of events are most often generated when legitimate administrators troubleshoot frequent AAD (Azure AD) user sign-ins. To avoid any confusion with\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun SpellingErrorV2 SCXW226733069 BCX8\"\u003eSolorigate\u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun SCXW226733069 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003einvestigation and hunting, we have removed this section from the blog.\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003eAnother such activity is adding access to the Service Principal or Application.\u0026nbsp; If a threat actor obtains access to an Application Administrator account, they may configure alternate authentication mechanisms for direct access to any of the scopes and services available to the Service Principal. With these privileges, the actor can add alternative authentication material for direct access to resources using this credential.\u003c/P\u003e\n\u003cUL\u003e\n\u003cLI\u003eIdentify where the\u0026nbsp;\u003cSPAN\u003everify KeyCredential\u003c/SPAN\u003e has\u003cSTRONG\u003e been updated\u003c/STRONG\u003e with\u0026nbsp;\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/NewAppOrServicePrincipalCredential.yaml\" target=\"_self\"\u003e\u003cSPAN\u003eNew access credential added to Application or Service Principal\u003c/SPAN\u003e.\u003c/A\u003e\u003c/LI\u003e\n\u003c/UL\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/20/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cUL\u003e\n\u003cLI\u003eIdentify where the\u0026nbsp;\u003cSPAN\u003everify KeyCredential \u003cSTRONG\u003ewas not present\u003c/STRONG\u003e and has now has had its \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/FirstAppOrServicePrincipalCredential.yaml\" target=\"_self\"\u003eFirst access credential added to Application or Service Principal where no credential was present\u003c/A\u003e.\u003c/SPAN\u003e\u003c/LI\u003e\n\u003c/UL\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cLI-SPOILER\u003e\n\u003cP\u003e\u003cSTRONG\u003eNew access credential added to Application or Service Principal\u003c/STRONG\u003e\u003cBR /\u003elet auditLookback = 1h;\u003cBR /\u003eAuditLogs\u003cBR /\u003e| where TimeGenerated \u0026gt; ago(auditLookback)\u003cBR /\u003e| where OperationName has_any (\"Add service principal\", \"Certificates and secrets management\") // captures \"Add service principal\", \"Add service principal credentials\", and \"Update application – Certificates and secrets management\" events\u003cBR /\u003e| where Result =~ \"success\"\u003cBR /\u003e| mv-expand target = TargetResources\u003cBR /\u003e| where tostring(InitiatedBy.user.userPrincipalName) has \"@\" or tostring(InitiatedBy.app.displayName) has \"@\"\u003cBR /\u003e| extend targetDisplayName = tostring(TargetResources[0].displayName)\u003cBR /\u003e| extend targetId = tostring(TargetResources[0].id)\u003cBR /\u003e| extend targetType = tostring(TargetResources[0].type)\u003cBR /\u003e| extend keyEvents = TargetResources[0].modifiedProperties\u003cBR /\u003e| mv-expand keyEvents\u003cBR /\u003e| where keyEvents.displayName =~ \"KeyDescription\"\u003cBR /\u003e| extend new_value_set = parse_json(tostring(keyEvents.newValue))\u003cBR /\u003e| extend old_value_set = parse_json(tostring(keyEvents.oldValue))\u003cBR /\u003e| where old_value_set != \"[]\"\u003cBR /\u003e| extend diff = set_difference(new_value_set, old_value_set)\u003cBR /\u003e| where isnotempty(diff)\u003cBR /\u003e| parse diff with * \"KeyIdentifier=\" keyIdentifier:string \",KeyType=\" keyType:string \",KeyUsage=\" keyUsage:string \",DisplayName=\" keyDisplayName:string \"]\" *\u003cBR /\u003e| where keyUsage == \"Verify\" or keyUsage == \"\"\u003cBR /\u003e| extend UserAgent = iff(AdditionalDetails[0].key == \"User-Agent\",tostring(AdditionalDetails[0].value),\"\")\u003cBR /\u003e| extend InitiatingUserOrApp = iff(isnotempty(InitiatedBy.user.userPrincipalName),tostring(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.app.displayName))\u003cBR /\u003e| extend InitiatingIpAddress = iff(isnotempty(InitiatedBy.user.ipAddress), tostring(InitiatedBy.user.ipAddress), tostring(InitiatedBy.app.ipAddress))\u003cBR /\u003e// The below line is currently commented out but Azure Sentinel users can modify this query to show only Application or only Service Principal events in their environment\u003cBR /\u003e//| where targetType =~ \"Application\" // or targetType =~ \"ServicePrincipal\"\u003cBR /\u003e| project-away diff, new_value_set, old_value_set\u003cBR /\u003e| project-reorder TimeGenerated, OperationName, InitiatingUserOrApp, InitiatingIpAddress, UserAgent, targetDisplayName, targetId, targetType, keyDisplayName, keyType, keyUsage, keyIdentifier, CorrelationId, TenantId\u003cBR /\u003e| extend timestamp = TimeGenerated, AccountCustomEntity = InitiatingUserOrApp, IPCustomEntity = InitiatingIpAddress\u003cBR /\u003e\u003cBR /\u003e\u003c/P\u003e\n\u003cP\u003e\u003cSTRONG\u003eFirst access credential added to Application or Service Principal where no credential was present\u003c/STRONG\u003e\u003cBR /\u003elet auditLookback = 1h;\u003cBR /\u003eAuditLogs\u003cBR /\u003e| where TimeGenerated \u0026gt; ago(auditLookback)\u003cBR /\u003e| where OperationName has_any (\"Add service principal\", \"Certificates and secrets management\") // captures \"Add service principal\", \"Add service principal credentials\", and \"Update application – Certificates and secrets management\" events\u003cBR /\u003e| where Result =~ \"success\"\u003cBR /\u003e| mv-expand target = TargetResources\u003cBR /\u003e| where tostring(InitiatedBy.user.userPrincipalName) has \"@\" or tostring(InitiatedBy.app.displayName) has \"@\"\u003cBR /\u003e| extend targetDisplayName = tostring(TargetResources[0].displayName)\u003cBR /\u003e| extend targetId = tostring(TargetResources[0].id)\u003cBR /\u003e| extend targetType = tostring(TargetResources[0].type)\u003cBR /\u003e| extend keyEvents = TargetResources[0].modifiedProperties\u003cBR /\u003e| mv-expand keyEvents\u003cBR /\u003e| where keyEvents.displayName =~ \"KeyDescription\"\u003cBR /\u003e| extend new_value_set = parse_json(tostring(keyEvents.newValue))\u003cBR /\u003e| extend old_value_set = parse_json(tostring(keyEvents.oldValue))\u003cBR /\u003e| where old_value_set == \"[]\"\u003cBR /\u003e| parse new_value_set with * \"KeyIdentifier=\" keyIdentifier:string \",KeyType=\" keyType:string \",KeyUsage=\" keyUsage:string \",DisplayName=\" keyDisplayName:string \"]\" *\u003cBR /\u003e| where keyUsage == \"Verify\" or keyUsage == \"\"\u003cBR /\u003e| extend UserAgent = iff(AdditionalDetails[0].key == \"User-Agent\",tostring(AdditionalDetails[0].value),\"\")\u003cBR /\u003e| extend InitiatingUserOrApp = iff(isnotempty(InitiatedBy.user.userPrincipalName),tostring(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.app.displayName))\u003cBR /\u003e| extend InitiatingIpAddress = iff(isnotempty(InitiatedBy.user.ipAddress), tostring(InitiatedBy.user.ipAddress), tostring(InitiatedBy.app.ipAddress))\u003cBR /\u003e// The below line is currently commented out but Azure Sentinel users can modify this query to show only Application or only Service Principal events in their environment\u003cBR /\u003e//| where targetType =~ \"Application\" // or targetType =~ \"ServicePrincipal\"\u003cBR /\u003e| project-away new_value_set, old_value_set\u003cBR /\u003e| project-reorder TimeGenerated, OperationName, InitiatingUserOrApp, InitiatingIpAddress, UserAgent, targetDisplayName, targetId, targetType, keyDisplayName, keyType, keyUsage, keyIdentifier, CorrelationId, TenantId\u003cBR /\u003e| extend timestamp = TimeGenerated, AccountCustomEntity = InitiatingUserOrApp, IPCustomEntity = InitiatingIpAddress\u003c/P\u003e\n\u003c/LI-SPOILER\u003e\n\u003cH6\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/19/2020\u003c/FONT\u003e\u003c/H6\u003e\n\u003cP\u003eThis threat actor has been observed using applications to read users mailboxes within a target environment. To help identify this activity MSTIC has created a \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/MailPermissionsAddedToApplication.yaml\" target=\"_self\"\u003ehunting query\u003c/A\u003e that looks for applications that have been granted mailbox read permissions followed by consent to this application. Whilst this may uncover legitimate applications hunters should validate applications granted mail read permissions genuinely require them.\u003c/P\u003e\n\u003cLI-SPOILER\u003eAuditLogs\u003cBR /\u003e| where Category =~ \"ApplicationManagement\"\u003cBR /\u003e| where ActivityDisplayName =~ \"Add delegated permission grant\"\u003cBR /\u003e| where Result =~ \"success\"\u003cBR /\u003e| where tostring(InitiatedBy.user.userPrincipalName) has \"@\" or tostring(InitiatedBy.app.displayName) has \"@\"\u003cBR /\u003e| extend props = parse_json(tostring(TargetResources[0].modifiedProperties))\u003cBR /\u003e| mv-expand props\u003cBR /\u003e| extend UserAgent = tostring(AdditionalDetails[0].value)\u003cBR /\u003e| extend InitiatingUser = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\u003cBR /\u003e| extend UserIPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)\u003cBR /\u003e| extend DisplayName = tostring(props.displayName)\u003cBR /\u003e| extend Permissions = tostring(parse_json(tostring(props.newValue)))\u003cBR /\u003e| where Permissions has_any (\"Mail.Read\", \"Mail.ReadWrite\")\u003cBR /\u003e| extend PermissionsAddedTo = tostring(TargetResources[0].displayName)\u003cBR /\u003e| extend Type = tostring(TargetResources[0].type)\u003cBR /\u003e| project-away props\u003cBR /\u003e| join kind=leftouter(\u003cBR /\u003eAuditLogs\u003cBR /\u003e| where ActivityDisplayName has \"Consent to application\"\u003cBR /\u003e| extend AppName = tostring(TargetResources[0].displayName)\u003cBR /\u003e| extend AppId = tostring(TargetResources[0].id)\u003cBR /\u003e| project AppName, AppId, CorrelationId) on CorrelationId\u003cBR /\u003e| project-reorder TimeGenerated, OperationName, InitiatingUser, UserIPAddress, UserAgent, PermissionsAddedTo, Permissions, AppName, AppId, CorrelationId\u003cBR /\u003e| extend timestamp = TimeGenerated, AccountCustomEntity = InitiatingUser, IPCustomEntity = UserIPAddress\u003c/LI-SPOILER\u003e\n\u003cP\u003eIt’s also advised to hunt for application consents for unexpected applications, particularly where they provide offline access to data or other high value access;\u003c/P\u003e\n\u003cUL\u003e\n\u003cLI\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/MaliciousOAuthApp_O365AttackToolkit.yaml\" target=\"_self\"\u003eSuspicious application consent similar to O365 Attack Toolkit\u003c/A\u003e\u003c/LI\u003e\n\u003cLI\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/SuspiciousOAuthApp_OfflineAccess.yaml\" target=\"_self\"\u003eSuspicious application consent for offline access\u003c/A\u003e\u003c/LI\u003e\n\u003c/UL\u003e\n\u003cH6\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/17/2020 (moved location)\u003c/FONT\u003e\u003c/H6\u003e\n\u003cP\u003eIn addition to Azure AD pre-compromise logon hunting it is also possible to monitor for logons attempting to use invalid key material. This can help identify attempted logons using stolen key material made after key material has been rotated. This can be done by querying SigninLogs in Azure Sentinel where the ResultType is 5000811. \u003cSTRONG\u003ePlease note\u003c/STRONG\u003e that if you roll your token signing certificate, there will be expected activity when searching on the above.\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cH2\u003eRecon and Remote Execution\u003c/H2\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/27/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003eThe adversary will often attempt to access on-prem systems to gain further insight and mapping of the environment.\u0026nbsp; As described in the \u003cSTRONG\u003eResulting hands-on-keyboard attack\u003c/STRONG\u003e section of the\u0026nbsp;\u003cA href=\"https://www.microsoft.com/security/blog/2020/12/18/analyzing-solorigate-the-compromised-dll-file-that-started-a-sophisticated-cyberattack-and-how-microsoft-defender-helps-protect/\" target=\"_self\"\u003eAnalyzing Solorigate blog by Microsoft\u003c/A\u003e, attackers renamed windows administrative tools like adfind.exe which were then used for domain enumeration. An example of the process execution command like can look like this:\u003c/P\u003e\n\u003cTABLE border=\"1\" width=\"100%\"\u003e\n\u003cTBODY\u003e\n\u003cTR\u003e\n\u003cTD width=\"100%\"\u003eC:\\Windows\\system32\\cmd.exe /C csrss.exe -h breached.contoso.com -f (name=”Domain Admins”) member -list | csrss.exe -h breached.contoso.com -f objectcategory=* \u0026gt; .\\Mod\\mod1.log\u003c/TD\u003e\n\u003c/TR\u003e\n\u003c/TBODY\u003e\n\u003c/TABLE\u003e\n\u003cP\u003e\u003cBR /\u003eWe have provided a query in the \u003cA href=\"https://github.com/Azure/Azure-Sentinel\" target=\"_self\"\u003eAzure Sentinel Github\u003c/A\u003e which will help in detecting the \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/Suspicious_enumeration_using_adfind.yaml\" target=\"_self\"\u003ecommand line patterns related to ADFind usage.\u003c/A\u003e You can customize this query to look at your specific DC/ADFS servers.\u003c/P\u003e\n\u003cLI-SPOILER\u003elet startdate = 1d;\u003cBR /\u003elet lookupwindow = 2m;\u003cBR /\u003elet threshold = 3; //number of commandlines in the set below\u003cBR /\u003elet DCADFSServersList = dynamic ([\"DCServer01\", \"DCServer02\", \"ADFSServer01\"]); // Enter a reference list of hostnames for your DC/ADFS servers\u003cBR /\u003elet tokens = dynamic([\"objectcategory\",\"domainlist\",\"dcmodes\",\"adinfo\",\"trustdmp\",\"computers_pwdnotreqd\",\"Domain Admins\", \"objectcategory=person\", \"objectcategory=computer\", \"objectcategory=*\"]);\u003cBR /\u003eSecurityEvent\u003cBR /\u003e//| where Computer in (DCADFSServersList) // Uncomment to limit it to your DC/ADFS servers list if specified above or any pattern in hostnames (startswith, matches regex, etc).\u003cBR /\u003e| where TimeGenerated between (ago(startdate) .. now())\u003cBR /\u003e| where EventID == 4688\u003cBR /\u003e| where CommandLine has_any (tokens)\u003cBR /\u003e| where CommandLine matches regex \"(.*)\u0026gt;(.*)\"\u003cBR /\u003e| summarize Commandlines = make_set(CommandLine), LastObserved=max(TimeGenerated) by bin(TimeGenerated, lookupwindow), Account, Computer, ParentProcessName, NewProcessName\u003cBR /\u003e| extend Count = array_length(Commandlines)\u003cBR /\u003e| where Count \u0026gt; threshold\u003c/LI-SPOILER\u003e\n\u003cP\u003eOn the remote execution side, there is a pattern that can be identified related to using alternate credentials than the currently logged on user, such as when using the RUN AS feature on a Windows system and passing in explicit credentials.\u0026nbsp; We have released a query that will identify when execution is occurring via\u0026nbsp;\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/MultipleExplicitCredentialUsage4648Events.yaml\" target=\"_self\"\u003emultiple explicit credentials\u003c/A\u003e against remote targets.\u0026nbsp; This requires that \u003cA href=\"https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4648\" target=\"_self\"\u003eWindows Event 4648\u003c/A\u003e is being collected as part of Azure Sentinel.\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cLI-SPOILER\u003elet WellKnownLocalSIDs = \"S-1-5-[0-9][0-9]$\";\u003cBR /\u003elet protocols = dynamic(['cifs', 'ldap', 'RPCSS', 'host' , 'HTTP', 'RestrictedKrbHost', 'TERMSRV', 'msomsdksvc', 'mssqlsvc']);\u003cBR /\u003eSecurityEvent\u003cBR /\u003e| where TimeGenerated \u0026gt;= ago(1d)\u003cBR /\u003e| where EventID == 4648\u003cBR /\u003e| where SubjectUserSid != 'S-1-0-0' // this is the Nobody SID which really means No security principal was included.\u003cBR /\u003e| where not(SubjectUserSid matches regex WellKnownLocalSIDs) //excluding system account/service account as this is generally normal\u003cBR /\u003e| where TargetInfo has '/' //looking for only items that indicate an interesting protocol is included\u003cBR /\u003e| where Computer !has tostring(split(TargetServerName,'$')[0])\u003cBR /\u003e| where TargetAccount !~ tostring(split(SubjectAccount,'$')[0])\u003cBR /\u003e| extend TargetInfoProtocol = tolower(split(TargetInfo, '/')[0]), TargetInfoMachine = toupper(split(TargetInfo, '/')[1])\u003cBR /\u003e| extend TargetAccount = tolower(TargetAccount), SubjectAccount = tolower(SubjectAccount)\u003cBR /\u003e| extend UncommonProtocol = case(not(TargetInfoProtocol has_any (protocols)), TargetInfoProtocol, 'NotApplicable')\u003cBR /\u003e| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), AccountsUsedCount = dcount(TargetAccount), AccountsUsed = make_set(TargetAccount), TargetMachineCount = dcount(TargetInfoMachine), \u003cBR /\u003eTargetMachines = make_set(TargetInfoMachine), TargetProtocols = dcount(TargetInfoProtocol), Protocols = make_set(TargetInfoProtocol), Processes = make_set(Process) by Computer, SubjectAccount, UncommonProtocol\u003cBR /\u003e| where TargetMachineCount \u0026gt; 1 or UncommonProtocol != 'NotApplicable'\u003cBR /\u003e| extend ProtocolCount = array_length(Protocols)\u003cBR /\u003e| extend ProtocolScore = case(\u003cBR /\u003eProtocols has 'rpcss' and Protocols has 'host' and Protocols has 'cifs', 10, //observed in Solorigate and depending on which are used together the higher the score\u003cBR /\u003eProtocols has 'rpcss' and Protocols has 'host', 5,\u003cBR /\u003eProtocols has 'rpcss' and Protocols has 'cifs', 5,\u003cBR /\u003eProtocols has 'host' and Protocols has 'cifs', 5,\u003cBR /\u003eProtocols has 'ldap' or Protocols has 'rpcss' or Protocols has 'host' or Protocols has 'cifs', 1, //ldap is more commonly seen in general, this was also seen with Solorigate but not usually to the same machines as the others above\u003cBR /\u003eUncommonProtocol != 'NotApplicable', 3,\u003cBR /\u003e0 //other protocols may be of interest, but in relation to observations for enumeration/execution in Solorigate they receive 0\u003cBR /\u003e)\u003cBR /\u003e| extend Score = ProtocolScore + ProtocolCount + AccountsUsedCount\u003cBR /\u003e| where Score \u0026gt;= 9 or (UncommonProtocol != 'NotApplicable' and Score \u0026gt;= 4) // Score must be 9 or better as this will include 5 points for atleast 2 of the interesting protocols + the count of protocols (min 2) + the number of accounts used for execution (min 2) = min of 9 OR score must be 4 or greater for an uncommon protocol\u003cBR /\u003e| extend TimePeriod = EndTime - StartTime //This identifies the time between start and finish for the use of the explicit credentials, shorter time period may indicate scripted executions\u003cBR /\u003e| project-away UncommonProtocol\u003cBR /\u003e| extend timestamp = StartTime, AccountCustomEntity = SubjectAccount, HostCustomEntity = Computer\u003cBR /\u003e| order by Score desc\u003c/LI-SPOILER\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cH2\u003eData \u003cSPAN\u003eAccess\u003c/SPAN\u003e\u003c/H2\u003e\n\u003cP\u003eAccessing confidential data is one of the primary motives of this attack. Data access for the attacker here relied on leveraging minted SAML tokens to access user files/email stored in the cloud via compromised AppIds. One way to detect this is when a user or application signs in using \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SigninLogs/AzureAADPowerShellAnomaly.yaml\" target=\"_blank\" rel=\"noopener\"\u003eAzure Active Directory PowerShell to access non-Active Directory resources\u003c/A\u003e.\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003eMicrosoft Graph is one way that the attacker may be seen accessing resources and can help find what the attacker may have accessed using the Service principal Azure Active Directory sign-in logs. If you have data in your Log analytics you could easily plot a chart to see what anomalous activity is happening in your environment that is leveraging the graph.\u0026nbsp;\u003c/P\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/17/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003e\u003cSTRONG\u003eNote\u003c/STRONG\u003e that this data type in Azure Sentinel below is only available when additional Diagnostic Logging is enabled on the workspace.\u0026nbsp; Please see the instructions in the expandable section below.\u003c/P\u003e\n\u003cLI-SPOILER\u003eThe AADServicePrincipalSigninLogs datatype will not be available in Azure Sentinel unless it is configured under Diagnostic Settings.\u0026nbsp; Please see screenshots below the query.\u003cBR /\u003e\u003cBR /\u003eAADServicePrincipalSignInLogs\u003cBR /\u003e| where TimeGenerated \u0026gt; ago(90d)\u003cBR /\u003e| where ResourceDisplayName == \"Microsoft Graph\"\u003cBR /\u003e| where ServicePrincipalId == \"524c43c4-c484-4f7a-bd44-89d4a0d8aeab\"\u003cBR /\u003e| summarize count() by bin(TimeGenerated, 1h)\u003cBR /\u003e| render timechart\u003cBR /\u003e\u003cBR /\u003eTo enable Service Principal Signin Logging, do the following:\u003cBR /\u003e\u003cBR /\u003e\u003cLI-IMAGE width=\"705\" height=\"384\" alt=\"DiagnosticSettings1.png\" align=\"inline\" id=\"241526i4AA3B1CF342B4958\" size=\"large\" resized=\"true\" sourcetype=\"new\" src=\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTUyNmk0QUEzQjFDRjM0MkI0OTU4?image-dimensions=750x750\u0026amp;revision=57\"\u003e\u003c/LI-IMAGE\u003e\n\u003cP\u003e \u003c/P\u003e\n\u003cLI-IMAGE width=\"893\" height=\"244\" alt=\"DiagnosticSettings2.png\" align=\"inline\" id=\"241527iAE6F44868C1AB439\" size=\"large\" resized=\"true\" sourcetype=\"new\" src=\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTUyN2lBRTZGNDQ4NjhDMUFCNDM5?image-dimensions=750x750\u0026amp;revision=57\"\u003e\u003c/LI-IMAGE\u003e\n\u003cP\u003e \u003c/P\u003e\n\u003cLI-IMAGE width=\"800\" height=\"517\" alt=\"DiagnosticSettings3.png\" align=\"inline\" id=\"241528iCB61CBFE5B6171D7\" size=\"large\" resized=\"true\" sourcetype=\"new\" src=\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTUyOGlDQjYxQ0JGRTVCNjE3MUQ3?image-dimensions=750x750\u0026amp;revision=57\"\u003e\u003c/LI-IMAGE\u003e\n\u003cP\u003e \u003c/P\u003e\n\u003c/LI-SPOILER\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/21/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003eAdditionally, below is a sample query that brings out some of the logons to Azure AD where multi factor authentication was satisfied by token based logons versus MFA via phone auth or the like. It is possible this could produce many results, so additional tuning is suggested for your environment.\u003c/P\u003e\n\u003cLI-SPOILER\u003eSigninLogs\u003cBR /\u003e| where TimeGenerated \u0026gt; ago(30d)\u003cBR /\u003e| where ResultType == 0\u003cBR /\u003e| extend additionalDetails = tostring(Status.additionalDetails)\u003cBR /\u003e| summarize make_set(additionalDetails), min(TimeGenerated), max(TimeGenerated) by IPAddress, UserPrincipalName\u003cBR /\u003e| where array_length(set_additionalDetails) == 2\u003cBR /\u003e| where (set_additionalDetails[1] == \"MFA requirement satisfied by claim in the token\" and set_additionalDetails[0] == \"MFA requirement satisfied by claim provided by external provider\") or (set_additionalDetails[0] == \"MFA requirement satisfied by claim in the token\" and set_additionalDetails[1] == \"MFA requirement satisfied by claim provided by external provider\")\u003cBR /\u003e//| project IPAddress, UserPrincipalName, min_TimeGenerated, max_TimeGenerated\u003c/LI-SPOILER\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUPDATED 12/17/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003eThis attack also used Virtual Private Servers (VPS) hosts to access victim networks and can be used in conjunction with the query above. Both MSTIC and FireEye have reported attacker logon events coming from network ranges associated with VPS providers. In order to highlight these logons, MSTIC has created a new hunting query -\u0026nbsp;\u003cSPAN\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SigninLogs/Signins-From-VPS-Providers.yaml\" target=\"_self\"\u003eSignins From VPS Providers -\u0026nbsp;\u003c/A\u003e\u003c/SPAN\u003ethat looks for successful signins from network ranges associated with VPS providers. This is joined with the above query, the new query looks for IPs that only display sign-ins based on tokens and not other MFA options, although this could be removed if wanted. The list of VPS ranges in the query is not comprehensive and there is significant potential for false positives so results should be investigated before responding, however it can provide very effective signal. Combining the query below with data that list VPS server ranges will make this a high-confidence hunting query.\u0026nbsp;\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003eIn relation to the VPS servers section above, the previously mentioned workbook has a section that shows successful user signins from VPS (Virtual Private Server) providers where only tokens were used to authenticate. This uses the new KQL operator \u003cA href=\"https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/ipv4-lookup-plugin\" target=\"_blank\" rel=\"noopener\"\u003eipv4_lookup\u003c/A\u003e to evaluate if a login came from a known VPS provider network range. This operator can alternatively be used to look for all logons not coming from known ranges should your environment have a common logon source.\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cH2 aria-level=\"2\"\u003e\u003cSPAN data-contrast=\"none\"\u003eData Exfiltration\u003c/SPAN\u003e\u003cSPAN data-ccp-props=\"{\u0026quot;201341983\u0026quot;:0,\u0026quot;335559738\u0026quot;:40,\u0026quot;335559739\u0026quot;:0,\u0026quot;335559740\u0026quot;:259}\"\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/H2\u003e\n\u003cP aria-level=\"2\"\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/20/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003e\u003cSPAN data-contrast=\"auto\"\u003eEmail data has been observed as a target for the\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003eSolorigate\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003e\u0026nbsp;attackers, one way to monitor for potential suspicious access is to look for anomalous\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003eMailItemsAccessed\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003e\u0026nbsp;volumes. MSTIC has created a specific hunting query to\u0026nbsp;identify \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/OfficeActivity/AnomolousUserAccessingOtherUsersMailbox.yaml\" target=\"_self\"\u003eAnomolous User Accessing Other Users Mailbox\u003c/A\u003e\u0026nbsp;which can help to identify malicious activity related to this attack. Additionally, MSTIC previously created\u0026nbsp;a more generic detection - \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/OfficeActivity/MailItemsAccessedTimeSeries.yaml\" target=\"_self\"\u003eExchange workflow MailItemsAccessed operation anomaly\u003c/A\u003e - which\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003e\u0026nbsp;looks for time series based anomalies in\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003eMailItemsAccessed\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003e\u0026nbsp;events in the\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003eOfficeActivity\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003e\u0026nbsp;log.\u003c/SPAN\u003e\u003cSPAN data-ccp-props=\"{\u0026quot;201341983\u0026quot;:0,\u0026quot;335559739\u0026quot;:160,\u0026quot;335559740\u0026quot;:259}\"\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/P\u003e\n\u003cLI-SPOILER\u003e\u003cSTRONG\u003eAnomalous access to other user's mailboxes\u003c/STRONG\u003e\u003cBR /\u003elet timeframe = 14d;\u003cBR /\u003elet user_threshold = 1;\u003cBR /\u003elet folder_threshold = 5;\u003cBR /\u003eOfficeActivity\u003cBR /\u003e| where TimeGenerated \u0026gt; ago(timeframe)\u003cBR /\u003e| where Operation =~ \"MailItemsAccessed\" \u003cBR /\u003e| where ResultStatus =~ \"Succeeded\"\u003cBR /\u003e| mv-expand parse_json(Folders)\u003cBR /\u003e| extend folders = tostring(Folders.Path)\u003cBR /\u003e| where tolower(MailboxOwnerUPN) != tolower(UserId)\u003cBR /\u003e| extend ClientIP = iif(Client_IPAddress startswith \"[\", extract(\"\\\\[([^\\\\]]*)\", 1, Client_IPAddress), Client_IPAddress)\u003cBR /\u003e| summarize make_set(folders), make_set(ClientInfoString), make_set(ClientIP), make_set(MailboxGuid), make_set(MailboxOwnerUPN) by UserId\u003cBR /\u003e| extend folder_count = array_length(set_folders)\u003cBR /\u003e| extend user_count = array_length(set_MailboxGuid)\u003cBR /\u003e| where user_count \u0026gt; user_threshold or folder_count \u0026gt; folder_threshold\u003cBR /\u003e| sort by user_count desc\u003cBR /\u003e| project-reorder UserId, user_count, folder_count, set_MailboxOwnerUPN, set_ClientIP, set_ClientInfoString, set_folder\u003cBR /\u003e\u003cBR /\u003e\u003cSTRONG\u003eExchange workflow MailItemsAccessed operation anomaly\u003c/STRONG\u003e\u003cBR /\u003elet starttime = 14d;\u003cBR /\u003elet endtime = 1d;\u003cBR /\u003elet timeframe = 1h;\u003cBR /\u003elet scorethreshold = 1.5;\u003cBR /\u003elet percentthreshold = 50;\u003cBR /\u003e// Preparing the time series data aggregated hourly count of MailItemsAccessd Operation in the form of multi-value array to use with time series anomaly function.\u003cBR /\u003elet TimeSeriesData =\u003cBR /\u003eOfficeActivity\u003cBR /\u003e| where TimeGenerated between (startofday(ago(starttime))..startofday(ago(endtime)))\u003cBR /\u003e| where OfficeWorkload=~ \"Exchange\" and Operation =~ \"MailItemsAccessed\" and ResultStatus =~ \"Succeeded\"\u003cBR /\u003e| project TimeGenerated, Operation, MailboxOwnerUPN\u003cBR /\u003e| make-series Total=count() on TimeGenerated from startofday(ago(starttime)) to startofday(ago(endtime)) step timeframe;\u003cBR /\u003elet TimeSeriesAlerts = TimeSeriesData\u003cBR /\u003e| extend (anomalies, score, baseline) = series_decompose_anomalies(Total, scorethreshold, -1, 'linefit')\u003cBR /\u003e| mv-expand Total to typeof(double), TimeGenerated to typeof(datetime), anomalies to typeof(double), score to typeof(double), baseline to typeof(long)\u003cBR /\u003e| where anomalies \u0026gt; 0\u003cBR /\u003e| project TimeGenerated, Total, baseline, anomalies, score;\u003cBR /\u003e// Joining the flagged outlier from the previous step with the original dataset to present contextual information\u003cBR /\u003e// during the anomalyhour to analysts to conduct investigation or informed decisions.\u003cBR /\u003eTimeSeriesAlerts | where TimeGenerated \u0026gt; ago(2d)\u003cBR /\u003e// Join against base logs since specified timeframe to retrive records associated with the hour of anomoly\u003cBR /\u003e| join (\u003cBR /\u003eOfficeActivity\u003cBR /\u003e| where TimeGenerated \u0026gt; ago(2d)\u003cBR /\u003e| where OfficeWorkload=~ \"Exchange\" and Operation =~ \"MailItemsAccessed\" and ResultStatus =~ \"Succeeded\"\u003cBR /\u003e) on TimeGenerated\u003c/LI-SPOILER\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/19/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003eTargeting of email data has also been observed by other industry members including \u003cA href=\"https://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/\" target=\"_blank\" rel=\"noopener\"\u003eVolexity\u003c/A\u003e who reported attackers using PowerShell commands to export on premise Exchange mailboxes and then hosting those files on OWA servers in order to exfiltrate them.\u003c/P\u003e\n\u003cP\u003eMSTIC has created detections to identify this activity at both the \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/W3CIISLog/SuspectedMailBoxExportHostonOWA.yaml\" target=\"_self\"\u003eOWA server\u003c/A\u003e and \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/HostExportingMailboxAndRemovingExport.yaml\" target=\"_self\"\u003eattacking host level\u003c/A\u003e through IIS logs, and PowerShell command line logging.\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003eOWA exfiltration:\u003c/P\u003e\n\u003cLI-SPOILER\u003elet excludeIps = dynamic([\"127.0.0.1\", \"::1\"]);\u003cBR /\u003elet scriptingExt = dynamic([\"aspx\", \"ashx\", \"asp\"]);\u003cBR /\u003eW3CIISLog\u003cBR /\u003e| where csUriStem contains \"/owa/\"\u003cBR /\u003e//The actor pulls a file back but won't send it any URI params\u003cBR /\u003e| where isempty(csUriQuery)\u003cBR /\u003e| extend file_ext = tostring(split(csUriStem, \".\")[-1])\u003cBR /\u003e//Giving your file a known scripting extension will throw an error\u003cBR /\u003e//rather than just serving the file as it will try to interpret the script\u003cBR /\u003e| where file_ext !in~ (scriptingExt)\u003cBR /\u003e//The actor was seen using image files, but we go wider in case they change this behaviour\u003cBR /\u003e//| where file_ext in~ (\"jpg\", \"jpeg\", \"png\", \"bmp\")\u003cBR /\u003e| extend file_name = tostring(split(csUriStem, \"/\")[-1])\u003cBR /\u003e| where file_name != \"\"\u003cBR /\u003e| where cIP !in~ (excludeIps)\u003cBR /\u003e| project file_ext, csUriStem, file_name, Computer, cIP, sIP, TenantId, TimeGenerated\u003cBR /\u003e| summarize dcount(cIP), AccessingIPs=make_set(cIP), AccessTimes=make_set(TimeGenerated), Access=count() by TenantId, file_name, Computer, csUriStem\u003cBR /\u003e//Collection of the exfiltration will occur only once, lets check for 2 accesses in case they mess up\u003cBR /\u003e//Tailor this for hunting\u003cBR /\u003e| where Access \u0026lt;= 2 and dcount_cIP == 1\u003c/LI-SPOILER\u003e\n\u003cP\u003eHost creating then removing mailbox export requests using PowerShell cmdlets:\u003c/P\u003e\n\u003cLI-SPOILER\u003e\n\u003cP\u003e\u0026nbsp; // Adjust the timeframe to change the window events need to occur within to alert\u003c/P\u003e\n\u003cP\u003e\u0026nbsp; let timeframe = 1h;\u003c/P\u003e\n\u003cP\u003e\u0026nbsp; SecurityEvent\u003c/P\u003e\n\u003cP\u003e\u0026nbsp; | where Process in (\"powershell.exe\", \"cmd.exe\")\u003c/P\u003e\n\u003cP\u003e\u0026nbsp; | where CommandLine contains 'New-MailboxExportRequest'\u003c/P\u003e\n\u003cP\u003e\u0026nbsp; | summarize by Computer, timekey = bin(TimeGenerated, timeframe), CommandLine, SubjectUserName\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u0026nbsp;| join kind=inner (SecurityEvent\u003c/P\u003e\n\u003cP\u003e\u0026nbsp; | where Process in (\"powershell.exe\", \"cmd.exe\")\u003c/P\u003e\n\u003cP\u003e\u0026nbsp; | where CommandLine contains 'Remove-MailboxExportRequest'\u003c/P\u003e\n\u003cP\u003e\u0026nbsp; | summarize by Computer, timekey = bin(TimeGenerated, timeframe), CommandLine, SubjectUserName) on Computer, timekey, SubjectUserName\u003c/P\u003e\n\u003cP\u003e\u0026nbsp; | extend commands = pack_array(CommandLine1, CommandLine)\u003c/P\u003e\n\u003cP\u003e\u0026nbsp; | summarize by timekey, Computer, tostring(commands), SubjectUserName\u003c/P\u003e\n\u003cP\u003e\u0026nbsp; | project-reorder timekey, Computer, SubjectUserName, ['commands']\u003c/P\u003e\n\u003cP\u003e\u0026nbsp; | extend HostCustomEntity = Computer, AccountCustomEntity = SubjectUserName\u003c/P\u003e\n\u003c/LI-SPOILER\u003e\n\u003cP aria-level=\"2\"\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/28/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cP aria-level=\"2\"\u003eEmail Delegation and later delegate access is another tactic that has been observed to gain access to user's mailboxes.\u0026nbsp; We have a previously created a method to discover\u0026nbsp;\u003cSPAN\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/OfficeActivity/nonowner_MailboxLogin.yaml\" target=\"_self\"\u003eNon-owner mailbox login activity\u003c/A\u003e that can be applied here to help identify when delegates are inappropriately access email.\u003c/SPAN\u003e\u003c/P\u003e\n\u003cP aria-level=\"2\"\u003e\u0026nbsp;\u003c/P\u003e\n\u003cLI-SPOILER\u003elet timeframe = 1d;\u003cBR /\u003eOfficeActivity\u003cBR /\u003e| where TimeGenerated \u0026gt;= ago(timeframe)\u003cBR /\u003e| where Operation == \"MailboxLogin\" and Logon_Type != \"Owner\" \u003cBR /\u003e| summarize count(), min(TimeGenerated), max(TimeGenerated) by Operation, OrganizationName, UserType, UserId, MailboxOwnerUPN, Logon_Type\u003cBR /\u003e| extend timestamp = min_TimeGenerated, AccountCustomEntity = UserId\u003c/LI-SPOILER\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cH2 aria-level=\"2\"\u003e\u003cSPAN data-contrast=\"none\"\u003eDomain\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN data-contrast=\"none\"\u003eHunting\u003c/SPAN\u003e\u003c/H2\u003e\n\u003cP aria-level=\"2\"\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003e\u003cSPAN data-contrast=\"none\"\u003eUpdated 12/17/2020\u003c/SPAN\u003e\u003c/FONT\u003e\u003c/P\u003e\n\u003cH4\u003e\u003cSPAN data-contrast=\"auto\"\u003eDomain specific\u003c/SPAN\u003e\u003c/H4\u003e\n\u003cP\u003e\u003cSPAN data-contrast=\"auto\"\u003eMSTIC has collated network based\u0026nbsp;IoCs\u0026nbsp;from\u0026nbsp;\u003c/SPAN\u003e\u003cA href=\"https://blogs.microsoft.com/on-the-issues/2020/12/13/customers-protect-nation-state-cyberattacks/\" target=\"_blank\" rel=\"noopener\"\u003e\u003cSPAN data-contrast=\"none\"\u003eMSTIC\u003c/SPAN\u003e\u003c/A\u003e\u003cSPAN data-contrast=\"auto\"\u003e,\u0026nbsp;\u003c/SPAN\u003e\u003cA href=\"https://github.com/fireeye/sunburst_countermeasures/blob/main/indicator_release/Indicator_Release_NBIs.csv\" target=\"_blank\" rel=\"noopener\"\u003e\u003cSPAN data-contrast=\"none\"\u003eFireEye\u003c/SPAN\u003e\u003c/A\u003e\u003cSPAN data-contrast=\"auto\"\u003e\u0026nbsp;and\u0026nbsp;\u003c/SPAN\u003e\u003cA href=\"https://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/\" target=\"_blank\" rel=\"noopener\"\u003e\u003cSPAN data-contrast=\"none\"\u003eVolexity\u003c/SPAN\u003e\u003c/A\u003e\u003cSPAN data-contrast=\"auto\"\u003e\u0026nbsp;to create a network based\u0026nbsp;IoC\u0026nbsp;detection -\u0026nbsp;\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/MultipleDataSources/Solorigate-Network-Beacon.yaml\" target=\"_self\"\u003eSolorigate Network Beacon\u003c/A\u003e -\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003ethat leverage multiple network focused data sources within Azure Sentinel.\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN data-ccp-props=\"{\u0026quot;201341983\u0026quot;:0,\u0026quot;335559739\u0026quot;:160,\u0026quot;335559740\u0026quot;:259}\"\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/P\u003e\n\u003cLI-SPOILER\u003elet domains = dynamic([\"incomeupdate.com\",\"zupertech.com\",\"databasegalore.com\",\"panhardware.com\",\"avsvmcloud.com\",\"digitalcollege.org\",\"freescanonline.com\",\"deftsecurity.com\",\"thedoccloud.com\",\"virtualdataserver.com\",\"lcomputers.com\",\"webcodez.com\",\"globalnetworkissues.com\",\"kubecloud.com\",\"seobundlekit.com\",\"solartrackingsystem.net\",\"virtualwebdata.com\"]);\u003cBR /\u003elet timeframe = 6h;\u003cBR /\u003e(union isfuzzy=true\u003cBR /\u003e(CommonSecurityLog \u003cBR /\u003e| where TimeGenerated \u0026gt;= ago(timeframe) \u003cBR /\u003e| parse Message with * '(' DNSName ')' * \u003cBR /\u003e| where DNSName in~ (domains) or DestinationHostName has_any (domains) or RequestURL has_any(domains)\u003cBR /\u003e| extend AccountCustomEntity = SourceUserID, HostCustomEntity = DeviceName, IPCustomEntity = SourceIP\u003cBR /\u003e),\u003cBR /\u003e(DnsEvents \u003cBR /\u003e| where TimeGenerated \u0026gt;= ago(timeframe) \u003cBR /\u003e| extend DNSName = Name\u003cBR /\u003e| where isnotempty(DNSName)\u003cBR /\u003e| where DNSName in~ (domains)\u003cBR /\u003e| extend IPCustomEntity = ClientIP\u003cBR /\u003e),\u003cBR /\u003e(VMConnection \u003cBR /\u003e| where TimeGenerated \u0026gt;= ago(timeframe) \u003cBR /\u003e| parse RemoteDnsCanonicalNames with * '[\"' DNSName '\"]' *\u003cBR /\u003e| where isnotempty(DNSName)\u003cBR /\u003e| where DNSName in~ (domains)\u003cBR /\u003e| extend IPCustomEntity = RemoteIp\u003cBR /\u003e),\u003cBR /\u003e(DeviceNetworkEvents \u003cBR /\u003e| where TimeGenerated \u0026gt;= ago(timeframe) \u003cBR /\u003e| where isnotempty(RemoteUrl) \u003cBR /\u003e| where RemoteUrl has_any (domains) \u003cBR /\u003e| extend DNSName = RemoteUrl\u003cBR /\u003e| extend IPCustomEntity = RemoteIP \u003cBR /\u003e| extend HostCustomEntity = DeviceName \u003cBR /\u003e) \u003cBR /\u003e)\u003c/LI-SPOILER\u003e\n\u003cH4 aria-level=\"2\"\u003e\u003cSPAN data-contrast=\"none\"\u003eDomain DGA\u003c/SPAN\u003e\u003c/H4\u003e\n\u003cP\u003e\u003cSPAN data-contrast=\"auto\"\u003eThe\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003eavsvmcloud[.]com\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003e\u0026nbsp;has been observed by several organizations as making DGA like subdomain queries as part of C2 activities. MSTIC have generated a hunting query -\u0026nbsp;\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/DnsEvents/Solorigate-DNS-Pattern.yaml\" target=\"_self\"\u003eSolorigate DNS Pattern\u003c/A\u003e -\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003eto look for similar\u0026nbsp;\u003c/SPAN\u003e\u003cSPAN data-contrast=\"auto\"\u003epatterns of activity from other domains that might help identify other potential C2 sources.\u003c/SPAN\u003e\u003c/P\u003e\n\u003cLI-SPOILER\u003elet cloudApiTerms = dynamic([\"api\", \"east\", \"west\"]);\u003cBR /\u003eDnsEvents\u003cBR /\u003e| where IPAddresses != \"\" and IPAddresses != \"127.0.0.1\"\u003cBR /\u003e| where Name endswith \".com\" or Name endswith \".org\" or Name endswith \".net\"\u003cBR /\u003e| extend domain_split = split(Name, \".\")\u003cBR /\u003e| where tostring(domain_split[-5]) != \"\" and tostring(domain_split[-6]) == \"\"\u003cBR /\u003e| extend sub_domain = tostring(domain_split[0])\u003cBR /\u003e| where sub_domain !contains \"-\"\u003cBR /\u003e| extend sub_directories = strcat(domain_split[-3], \" \", domain_split[-4])\u003cBR /\u003e| where sub_directories has_any(cloudApiTerms)\u003cBR /\u003e//Based on sample communications the subdomain is always between 20 and 30 bytes\u003cBR /\u003e| where strlen(domain_split) \u0026lt; 32 or strlen(domain_split) \u0026gt; 20\u003cBR /\u003e| extend domain = strcat(tostring(domain_split[-2]), \".\", tostring(domain_split[-1])) \u003cBR /\u003e| extend subdomain_no = countof(sub_domain, @\"(\\d)\", \"regex\")\u003cBR /\u003e| extend subdomain_ch = countof(sub_domain, @\"([a-z])\", \"regex\")\u003cBR /\u003e| where subdomain_no \u0026gt; 1\u003cBR /\u003e| extend percentage_numerical = toreal(subdomain_no) / toreal(strlen(sub_domain)) * 100\u003cBR /\u003e| where percentage_numerical \u0026lt; 50 and percentage_numerical \u0026gt; 5\u003cBR /\u003e| summarize count(), make_set(Name), FirstSeen=min(TimeGenerated), LastSeen=max(TimeGenerated) by Name\u003cBR /\u003e| order by count_ asc\u003c/LI-SPOILER\u003e\n\u003cH4\u003e\u003cSPAN class=\"TextRun SCXW219610271 BCX8\" data-contrast=\"auto\"\u003e\u003cSPAN class=\"NormalTextRun SCXW219610271 BCX8\"\u003eEncoded Domain\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/H4\u003e\n\u003cP\u003e\u003cSPAN class=\"TextRun SCXW219610271 BCX8\" data-contrast=\"auto\"\u003e\u003cSPAN class=\"NormalTextRun SCXW219610271 BCX8\"\u003eIn\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun ContextualSpellingAndGrammarErrorV2 SCXW219610271 BCX8\"\u003eaddition\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW219610271 BCX8\" data-contrast=\"auto\"\u003e\u003cSPAN class=\"NormalTextRun SCXW219610271 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003ewe have another query - \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/DnsEvents/Solorigate-Encoded-Domain-URL.yaml\" target=\"_self\"\u003e\u003cSPAN\u003eSolorigate Encoded Domain in URL\u003c/SPAN\u003e\u003c/A\u003e-\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW219610271 BCX8\" data-contrast=\"auto\"\u003e\u003cSPAN class=\"NormalTextRun SCXW219610271 BCX8\"\u003ethat takes the encoding pattern the DGA uses, encodes the domains seen in\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun SpellingErrorV2 SCXW219610271 BCX8\"\u003esignin\u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun SCXW219610271 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003elogs and then looks for those patterns in DNS logs. This can help identify other C2 domains using the same encoding scheme.\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"EOP SCXW219610271 BCX8\" data-ccp-props=\"{\u0026quot;201341983\u0026quot;:0,\u0026quot;335559739\u0026quot;:160,\u0026quot;335559740\u0026quot;:240}\"\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/P\u003e\n\u003cLI-SPOILER\u003elet dictionary = dynamic([\"r\",\"q\",\"3\",\"g\",\"s\",\"a\",\"l\",\"t\",\"6\",\"u\",\"1\",\"i\",\"y\",\"f\",\"z\",\"o\",\"p\",\"5\",\"7\",\"2\",\"d\",\"4\",\"9\",\"b\",\"n\",\"x\",\"8\",\"c\",\"v\",\"m\",\"k\",\"e\",\"w\",\"h\",\"j\"]);\u003cBR /\u003elet regex_bad_domains = SigninLogs\u003cBR /\u003e//Collect domains from tenant from signin logs\u003cBR /\u003e| where TimeGenerated \u0026gt; ago(1d)\u003cBR /\u003e| extend domain = tostring(split(UserPrincipalName, \"@\", 1)[0])\u003cBR /\u003e| where domain != \"\"\u003cBR /\u003e| summarize by domain\u003cBR /\u003e| extend split_domain = split(domain, \".\")\u003cBR /\u003e//This cuts back on domains such as na.contoso.com by electing not to match on the \"na\" portion\u003cBR /\u003e| extend target_string = iff(strlen(split_domain[0]) \u0026lt;= 2, split_domain[1], split_domain[0])\u003cBR /\u003e| extend target_string = split(target_string, \"-\")\u003cBR /\u003e| mv-expand target_string\u003cBR /\u003e//Rip all of the alphanumeric out of the domain name\u003cBR /\u003e| extend string_chars = extract_all(@\"([a-z0-9])\", tostring(target_string))\u003cBR /\u003e//Guid for tracking our data\u003cBR /\u003e| extend guid = new_guid()\u003cBR /\u003e//Expand to get all of the individual chars from the domain\u003cBR /\u003e| mv-expand string_chars\u003cBR /\u003e| extend chars = tostring(string_chars)\u003cBR /\u003e//Conduct computation to encode the domain as per actor spec\u003cBR /\u003e| extend computed_char = array_index_of(dictionary, chars)\u003cBR /\u003e| extend computed_char = dictionary[(computed_char + 4) % array_length(dictionary)] \u003cBR /\u003e| summarize make_list(computed_char) by guid, domain\u003cBR /\u003e| extend target_encoded = tostring(strcat_array(list_computed_char, \"\"))\u003cBR /\u003e//These are probably too small, but can be edited (expect FP's when going too small)\u003cBR /\u003e| where strlen(target_encoded) \u0026gt; 5\u003cBR /\u003e| distinct target_encoded\u003cBR /\u003e| summarize make_set(target_encoded)\u003cBR /\u003e//Key to join to DNS\u003cBR /\u003e| extend key = 1;\u003cBR /\u003eDnsEvents\u003cBR /\u003e| where TimeGenerated \u0026gt; ago(1d)\u003cBR /\u003e| summarize by Name\u003cBR /\u003e| extend key = 1\u003cBR /\u003e//For each DNS query join the malicious domain list\u003cBR /\u003e| join kind=inner ( \u003cBR /\u003eregex_bad_domains\u003cBR /\u003e) on key\u003cBR /\u003e| project-away key\u003cBR /\u003e//Expand each malicious key for each DNS query observed\u003cBR /\u003e| mv-expand set_target_encoded\u003cBR /\u003e//IndexOf allows us to fuzzy match on the substring\u003cBR /\u003e| extend match = indexof(Name, set_target_encoded)\u003cBR /\u003e| where match \u0026gt; -1\u003c/LI-SPOILER\u003e\n\u003cH2\u003eSecurity Service Tampering\u003c/H2\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003e\u003cSPAN data-contrast=\"none\"\u003eUpdated 01/19/2021\u003c/SPAN\u003e\u003c/FONT\u003e\u003c/P\u003e\n\u003cP\u003eThere has been additional indication that security services are being tampered with to hinder detection and investigation. While this is a common tactic, we felt that we should include this reference. The query is currently written specifically for \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/PotentialMicrosoftSecurityServicesTampering.yaml\" target=\"_self\"\u003ePotential Microsoft security services tampering\u003c/A\u003e, but can easily be adapted to identify other security services.\u003c/P\u003e\n\u003cLI-SPOILER\u003elet includeProc = dynamic([\"sc.exe\",\"net1.exe\",\"net.exe\", \"taskkill.exe\", \"cmd.exe\", \"powershell.exe\"]);\u003cBR /\u003elet action = dynamic([\"stop\",\"disable\", \"delete\"]);\u003cBR /\u003elet service1 = dynamic(['sense', 'windefend', 'mssecflt']);\u003cBR /\u003elet service2 = dynamic(['sense', 'windefend', 'mssecflt', 'healthservice']);\u003cBR /\u003elet params1 = dynamic([\"-DisableRealtimeMonitoring\", \"-DisableBehaviorMonitoring\" ,\"-DisableIOAVProtection\"]);\u003cBR /\u003elet params2 = dynamic([\"sgrmbroker.exe\", \"mssense.exe\"]);\u003cBR /\u003elet regparams1 = dynamic(['reg add \"HKLM\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows Defender\"', 'reg add \"HKLM\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows Advanced Threat Protection\"']);\u003cBR /\u003elet regparams2 = dynamic(['ForceDefenderPassiveMode', 'DisableAntiSpyware']);\u003cBR /\u003elet regparams3 = dynamic(['sense', 'windefend']);\u003cBR /\u003elet regparams4 = dynamic(['demand', 'disabled']);\u003cBR /\u003elet regparams5 = dynamic(['reg add \"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\services\\\\HealthService\"', 'reg add \"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\Sense\"', 'reg add \"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\WinDefend\"', 'reg add \"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\MsSecFlt\"', 'reg add \"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\DiagTrack\"', 'reg add \"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\SgrmBroker\"', 'reg add \"HKLMSYSTEM\\\\CurrentControlSet\\\\Services\\\\SgrmAgent\"', 'reg add \"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\AATPSensorUpdater\"' , 'reg add \"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\AATPSensor\"', 'reg add \"HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\mpssvc\"']);\u003cBR /\u003elet regparams6 = dynamic(['/d 4','/d \"4\"','/d 0x00000004']);\u003cBR /\u003elet regparams7 = dynamic(['/d 1','/d \"1\"','/d 0x00000001']);\u003cBR /\u003elet timeframe = 1d;\u003cBR /\u003e(union isfuzzy=true\u003cBR /\u003e(\u003cBR /\u003eSecurityEvent\u003cBR /\u003e| where TimeGenerated \u0026gt;= ago(timeframe)\u003cBR /\u003e| where EventID == 4688\u003cBR /\u003e| extend ProcessName = tostring(split(NewProcessName, '\\\\')[-1])\u003cBR /\u003e| where ProcessName in~ (includeProc)\u003cBR /\u003e| where (CommandLine has_any (action) and CommandLine has_any (service1)) \u003cBR /\u003eor (CommandLine has_any (params1) and CommandLine has 'Set-MpPreference' and CommandLine has '$true')\u003cBR /\u003eor (CommandLine has_any (params2) and CommandLine has \"/IM\") \u003cBR /\u003eor (CommandLine has_any (regparams5) and CommandLine has 'Start' and CommandLine has_any (regparams6))\u003cBR /\u003eor (CommandLine has_any (regparams1) and CommandLine has_any (regparams2) and CommandLine has_any (regparams7)) \u003cBR /\u003eor (CommandLine has \"start\" and CommandLine has \"config\" and CommandLine has_any (regparams3) and CommandLine has_any (regparams4))\u003cBR /\u003e| project TimeGenerated, Computer, Account, AccountDomain, ProcessName, ProcessNameFullPath = NewProcessName, EventID, Activity, CommandLine, EventSourceName, Type\u003cBR /\u003e),\u003cBR /\u003e(\u003cBR /\u003eEvent\u003cBR /\u003e| where TimeGenerated \u0026gt;= ago(timeframe)\u003cBR /\u003e| where Source =~ \"Microsoft-Windows-SENSE\"\u003cBR /\u003e| where EventID == 87 and ParameterXml in (\"\u0026lt;Param\u0026gt;sgrmbroker\u0026lt;/Param\u0026gt;\", \"\u0026lt;Param\u0026gt;WinDefend\u0026lt;/Param\u0026gt;\")\u003cBR /\u003e| project TimeGenerated, Computer, Account = UserName, EventID, Activity = RenderedDescription, EventSourceName = Source, Type\u003cBR /\u003e),\u003cBR /\u003e(\u003cBR /\u003eDeviceProcessEvents\u003cBR /\u003e| where TimeGenerated \u0026gt;= ago(timeframe)\u003cBR /\u003e| where InitiatingProcessFileName in~ (includeProc)\u003cBR /\u003e| where (InitiatingProcessCommandLine has_any(action) and InitiatingProcessCommandLine has_any (service2) and InitiatingProcessParentFileName != 'cscript.exe')\u003cBR /\u003eor (InitiatingProcessCommandLine has_any (params1) and InitiatingProcessCommandLine has 'Set-MpPreference' and InitiatingProcessCommandLine has '$true') \u003cBR /\u003eor (InitiatingProcessCommandLine has_any (params2) and InitiatingProcessCommandLine has \"/IM\") \u003cBR /\u003eor ( InitiatingProcessCommandLine has_any (regparams5) and InitiatingProcessCommandLine has 'Start' and InitiatingProcessCommandLine has_any (regparams6))\u003cBR /\u003eor (InitiatingProcessCommandLine has_any (regparams1) and InitiatingProcessCommandLine has_any (regparams2) and InitiatingProcessCommandLine has_any (regparams7)) \u003cBR /\u003eor (InitiatingProcessCommandLine has_any(\"start\") and InitiatingProcessCommandLine has \"config\" and InitiatingProcessCommandLine has_any (regparams3) and InitiatingProcessCommandLine has_any (regparams4))\u003cBR /\u003e| extend Account = iff(isnotempty(InitiatingProcessAccountUpn), InitiatingProcessAccountUpn, InitiatingProcessAccountName), Computer = DeviceName\u003cBR /\u003e| project TimeGenerated, Computer, Account, AccountDomain, ProcessName = InitiatingProcessFileName, ProcessNameFullPath = FolderPath, Activity = ActionType, CommandLine = InitiatingProcessCommandLine, Type, InitiatingProcessParentFileName\u003cBR /\u003e)\u003cBR /\u003e)\u003cBR /\u003e| extend timestamp = TimeGenerated, AccountCustomEntity = Account, HostCustomEntity = Computer\u003c/LI-SPOILER\u003e\n\u003cH2\u003eMicrosoft M365 Defender + Azure Sentinel detection correlation\u003c/H2\u003e\n\u003cP\u003e\u003cSPAN class=\"TextRun SCXW53252412 BCX8\" data-contrast=\"auto\"\u003e\u003cSPAN class=\"NormalTextRun SCXW53252412 BCX8\"\u003eIn\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun ContextualSpellingAndGrammarErrorV2 SCXW53252412 BCX8\"\u003eaddition\u003c/SPAN\u003e\u003cSPAN class=\"NormalTextRun SCXW53252412 BCX8\"\u003e\u003cSPAN\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW53252412 BCX8\" data-contrast=\"auto\"\u003e\u003cSPAN class=\"NormalTextRun SCXW53252412 BCX8\"\u003ewe have created a query in Azure Sentinel\u0026nbsp;\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"TextRun SCXW53252412 BCX8\" data-contrast=\"auto\"\u003e\u003cSPAN class=\"NormalTextRun SCXW53252412 BCX8\"\u003e\u003cSPAN\u003e-\u0026nbsp;\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityAlert/Solorigate-Defender-Detections.yaml\" target=\"_self\"\u003eSolorigate Defender Detections\u003c/A\u003e -\u0026nbsp;\u003c/SPAN\u003eto collate the range of Defender detections that are now deployed. This query can be used to get an overview of such alerts and the hosts they relate to.\u003c/SPAN\u003e\u003c/SPAN\u003e\u003cSPAN class=\"EOP SCXW53252412 BCX8\" data-ccp-props=\"{\u0026quot;201341983\u0026quot;:0,\u0026quot;335559739\u0026quot;:160,\u0026quot;335559740\u0026quot;:259}\"\u003e\u0026nbsp;\u003c/SPAN\u003e\u003c/P\u003e\n\u003cLI-SPOILER\u003eDeviceInfo\u003cBR /\u003e| extend DeviceName = tolower(DeviceName)\u003cBR /\u003e| join (SecurityAlert\u003cBR /\u003e| where ProviderName =~ \"MDATP\"\u003cBR /\u003e| extend ThreatName = tostring(parse_json(ExtendedProperties).ThreatName)\u003cBR /\u003e| where ThreatName has \"Solarigate\"\u003cBR /\u003e| extend HostCustomEntity = tolower(CompromisedEntity)\u003cBR /\u003e| take 10) on $left.DeviceName == $right.HostCustomEntity\u003cBR /\u003e| project TimeGenerated, DisplayName, ThreatName, CompromisedEntity, PublicIP, MachineGroup, AlertSeverity, Description, LoggedOnUsers, DeviceId, TenantId\u003cBR /\u003e| extend timestamp = TimeGenerated, IPCustomEntity = PublicIP\u003c/LI-SPOILER\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cH2\u003eConclusion\u003c/H2\u003e\n\u003cP\u003eAdditionally, as a cloud native SIEM Azure Sentinel can not only collect raw data from various disparate logs but it also gets alerts from various security products. For example, M365 Defender has a range of alerts for various attack components like SolarWinds malicious binaries, network traffic to the compromised domains, DNS queries for known patterns associated with SolarWinds compromise that can flow into Sentinel. Combining these alerts with other raw logs and additional data sources provides the security team with additional insights as well as a complete picture of nature and the scope of attack.\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cH2\u003eAppendix\u003c/H2\u003e\n\u003cP\u003eMany of these queries have been incorporated into the related \u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Workbooks/SolarWindsPostCompromiseHunting.json\" target=\"_self\"\u003ehunting workbook\u003c/A\u003e.\u003c/P\u003e\n\u003cP\u003eList of all Azure Sentinel Queries from each section\u003c/P\u003e\n\u003cP\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003e\u003cSPAN data-contrast=\"none\"\u003eUpdated 01/15/2021\u003c/SPAN\u003e\u003c/FONT\u003e\u003c/P\u003e\n\u003cLI-SPOILER\u003e\n\u003cTABLE width=\"1333px\"\u003e\n\u003cTBODY\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003e\u003cSTRONG\u003eGaining a foothold\u003c/STRONG\u003e\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u0026nbsp;\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eSolarWinds Inventory check query\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/SolarWindsInventory.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/SolarWindsInventory.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD\u003eSolorigate Name Pipe\u003c/TD\u003e\n\u003cTD\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/SolorigateNamedPipe.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/SolorigateNamedPipe.yaml\u003c/A\u003e\u0026nbsp;\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003e\u003cSTRONG\u003ePrivilege Escalation\u003c/STRONG\u003e\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u0026nbsp;\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eHosts with new logons\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/HostsWithNewLogons.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/HostsWithNewLogons.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"57px\"\u003eNew user created and added to the built-in administrators group\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"57px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserCreatedAddedToBuiltinAdmins_1d.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserCreatedAddedToBuiltinAdmins_1d.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"57px\"\u003eUser account added to built in domain local or global group\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"57px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserAccountAddedToPrivlegeGroup_1h.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/UserAccountAddedToPrivlegeGroup_1h.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eTracking Privileged Account Rare Activity\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/TrackingPrivAccounts.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/TrackingPrivAccounts.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003e\u003cSTRONG\u003eADFS Key Extraction\u003c/STRONG\u003e\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u0026nbsp;\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eADFS DKM Master Key Export\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/MultipleDataSources/ADFS-DKM-MasterKey-Export.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/MultipleDataSources/ADFS-DKM-MasterKey-Export.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eADFS Key Export (Sysmon)\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/ADFSKeyExportSysmon.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityEvent/ADFSKeyExportSysmon.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eEntropy for Processes for a given Host\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/ProcessEntropy.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/ProcessEntropy.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eRare processes run by Service accounts\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/RareProcbyServiceAccount.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/RareProcbyServiceAccount.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eUncommon processes - bottom 5%\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/uncommon_processes.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/uncommon_processes.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003e\u003cSTRONG\u003eAzure Active Directory\u003c/STRONG\u003e\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u0026nbsp;\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eModified domain federation trust settings\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/ADFSDomainTrustMods.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/ADFSDomainTrustMods.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"57px\"\u003eNew access credential added to Application or Service Principal\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"57px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/NewAppOrServicePrincipalCredential.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/NewAppOrServicePrincipalCredential.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"57px\"\u003eFirst access credential added to Application or Service Principal where no credential was present\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"57px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/FirstAppOrServicePrincipalCredential.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/FirstAppOrServicePrincipalCredential.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eMail.Read Permissions Granted to Application\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/MailPermissionsAddedToApplication.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/MailPermissionsAddedToApplication.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"57px\"\u003eSuspicious application consent similar to O365 Attack Toolkit\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"57px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/MaliciousOAuthApp_O365AttackToolkit.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/MaliciousOAuthApp_O365AttackToolkit.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eSuspicious application consent for offline access\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/SuspiciousOAuthApp_OfflineAccess.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/AuditLogs/SuspiciousOAuthApp_OfflineAccess.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003e\u003cSTRONG\u003eRecon and Remote Execution\u003c/STRONG\u003e\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u0026nbsp;\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"57px\"\u003eSuspicious enumeration using Adfind tool\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"57px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/Suspicious_enumeration_using_adfind.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/Suspicious_enumeration_using_adfind.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"57px\"\u003eMultiple explicit credential usage - 4648 events\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"57px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/MultipleExplicitCredentialUsage4648Events.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/MultipleExplicitCredentialUsage4648Events.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003e\u003cSTRONG\u003eData Access\u003c/STRONG\u003e\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u0026nbsp;\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"57px\"\u003eAzure Active Directory PowerShell accessing non-AAD resources\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"57px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SigninLogs/AzureAADPowerShellAnomaly.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SigninLogs/AzureAADPowerShellAnomaly.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eSignins From VPS Providers\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SigninLogs/Signins-From-VPS-Providers.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SigninLogs/Signins-From-VPS-Providers.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003e\u003cSTRONG\u003eData Exfiltration\u003c/STRONG\u003e\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u0026nbsp;\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"57px\"\u003eAnomalous access to other user's mailboxes\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"57px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/OfficeActivity/AnomolousUserAccessingOtherUsersMailbox.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/OfficeActivity/AnomolousUserAccessingOtherUsersMailbox.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"57px\"\u003eExchange workflow MailItemsAccessed operation anomaly\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"57px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/OfficeActivity/MailItemsAccessedTimeSeries.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/OfficeActivity/MailItemsAccessedTimeSeries.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"57px\"\u003eSuspect Mailbox Export on IIS/OWA\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"57px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/W3CIISLog/SuspectedMailBoxExportHostonOWA.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/W3CIISLog/SuspectedMailBoxExportHostonOWA.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"57px\"\u003eHost Exporting Mailbox and Removing Export\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"57px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/HostExportingMailboxAndRemovingExport.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/SecurityEvent/HostExportingMailboxAndRemovingExport.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\"\u003eNon-owner mailbox login activity\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"20\" class=\"xl64\" style=\"height: 15.0pt; width: 48pt;\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/OfficeActivity/nonowner_MailboxLogin.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/OfficeActivity/nonowner_MailboxLogin.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003e\u003cSTRONG\u003eDomain Hunting\u003c/STRONG\u003e\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u0026nbsp;\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eSolorigate Network Beacon\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/MultipleDataSources/Solorigate-Network-Beacon.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/MultipleDataSources/Solorigate-Network-Beacon.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eSolorigate DNS Pattern\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/DnsEvents/Solorigate-DNS-Pattern.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/DnsEvents/Solorigate-DNS-Pattern.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eSolorigate Encoded Domain in URL\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/DnsEvents/Solorigate-Encoded-Domain-URL.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/DnsEvents/Solorigate-Encoded-Domain-URL.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD\u003e\u003cSTRONG\u003eSecurity Service Tampering\u003c/STRONG\u003e\u003c/TD\u003e\n\u003cTD\u003e\u0026nbsp;\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD\u003ePotential Microsoft security services tampering\u003c/TD\u003e\n\u003cTD\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/PotentialMicrosoftSecurityServicesTampering.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Hunting%20Queries/MultipleDataSources/PotentialMicrosoftSecurityServicesTampering.yaml\u003c/A\u003e\u0026nbsp;\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003e\u003cSTRONG\u003eM365+Sentinel\u003c/STRONG\u003e\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u0026nbsp;\u003c/TD\u003e\n\u003c/TR\u003e\n\u003cTR\u003e\n\u003cTD width=\"416px\" height=\"30px\"\u003eSolorigate Defender Detections\u003c/TD\u003e\n\u003cTD width=\"917px\" height=\"30px\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityAlert/Solorigate-Defender-Detections.yaml\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/Azure/Azure-Sentinel/blob/master/Detections/SecurityAlert/Solorigate-Defender-Detections.yaml\u003c/A\u003e\u003c/TD\u003e\n\u003c/TR\u003e\n\u003c/TBODY\u003e\n\u003c/TABLE\u003e\n\u003c/LI-SPOILER\u003e\n\u003cH2\u003eReferences\u003c/H2\u003e\n\u003cP\u003e\u003cA href=\"https://blogs.microsoft.com/on-the-issues/2020/12/13/customers-protect-nation-state-cyberattacks/\" target=\"_blank\" rel=\"noopener\"\u003eRecent Nation-State Cyber Attacks\u003c/A\u003e\u003cSPAN\u003e\u0026nbsp; \u003c/SPAN\u003e\u003c/P\u003e\n\u003cP\u003e\u003cA href=\"https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=Behavior:Win32/Solorigate.C!dha\u0026amp;ThreatID=2147771132\" target=\"_blank\" rel=\"noopener\"\u003eBehavior:Win32/Solorigate.C!dha threat description - Microsoft Security Intelligence\u003c/A\u003e\u003c/P\u003e\n\u003cP\u003e\u003cA href=\"https://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/\" target=\"_blank\" rel=\"noopener\"\u003eCustomer guidance on recent nation-state cyberattacks\u0026nbsp;\u003c/A\u003e\u003c/P\u003e\n\u003cP\u003e\u003cA href=\"https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\" target=\"_blank\" rel=\"noopener\"\u003eFireEye Advisory: Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims With SUNBURST Backdoor\u003c/A\u003e\u003c/P\u003e\n\u003cP\u003e\u003cA href=\"https://github.com/fireeye/sunburst_countermeasures\" target=\"_blank\" rel=\"noopener\"\u003eFireEye GitHub page: Sunburst Countermeasures\u0026nbsp;\u003c/A\u003e\u003c/P\u003e\n\u003cP\u003e\u003cA href=\"https://cyber.dhs.gov/ed/21-01/\" target=\"_blank\" rel=\"noopener\"\u003eDHS Directive\u003c/A\u003e\u003c/P\u003e\n\u003cP\u003e\u003cA href=\"https://www.solarwinds.com/securityadvisory\" target=\"_blank\" rel=\"noopener\"\u003eSolarWinds Security Advisory\u003c/A\u003e\u003c/P\u003e\n\u003cP\u003e\u003cA href=\"https://github.com/FalconForceTeam/FalconFriday/blob/master/Uncategorized/FireEye_red_team_tool_countermeasures.md\" target=\"_blank\" rel=\"noopener\"\u003eFalconFriday – Fireeye Red Team Tool Countermeasures KQL Queries \u0026nbsp;\u003c/A\u003e\u003c/P\u003e\n\u003cP\u003e\u003cA href=\"https://github.com/microsoft/Microsoft-365-Defender-Hunting-Queries\" target=\"_blank\" rel=\"noopener\"\u003eMicrosoft-365-Defender-Hunting-Queries: Sample queries for Advanced hunting in Microsoft 365 Defender (github.com)\u003c/A\u003e\u003c/P\u003e\n\u003cP\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel/blob/master/Workbooks/SolarWindsPostCompromiseHunting.json\" target=\"_blank\" rel=\"noopener\"\u003eAzure Sentinel SolarWinds Post Compromise Hunting Workbook\u003c/A\u003e\u003c/P\u003e\n\u003cP data-unlink=\"true\"\u003e\u003cA href=\"https://github.com/Azure/Azure-Sentinel-Notebooks/blob/master/Guided%20Investigation%20-%20Solarwinds%20Post%20Compromise%20Activity.ipynb\" target=\"_blank\" rel=\"noopener\"\u003eAzure Sentinel SolarWinds Post Compromise Notebook\u0026nbsp;\u003c/A\u003e\u003c/P\u003e\n\u003cP data-unlink=\"true\"\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/18/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cP data-unlink=\"true\"\u003e\u003cA href=\"https://techcommunity.microsoft.com/t5/microsoft-365-defender/new-threat-analytics-report-shares-the-latest-intelligence-on/ba-p/2001095\" target=\"_blank\" rel=\"noopener\"\u003eNew Threat analytics report shares the latest intelligence on recent nation-state cyber attacks - Microsoft Tech Community\u003c/A\u003e\u003c/P\u003e\n\u003cP data-unlink=\"true\"\u003e\u003cA href=\"https://aka.ms/solorigateattack\" target=\"_self\"\u003eAnalyzing Solorigate, the compromised DLL file that started a sophisticated cyberattack, and how Microsoft Defender helps protect customers - Microsoft Security\u0026nbsp;\u003c/A\u003e\u003c/P\u003e\n\u003cP data-unlink=\"true\"\u003e\u003cFONT size=\"1 2 3 4 5 6 7\" color=\"#993300\"\u003eUpdated 12/28/2020\u003c/FONT\u003e\u003c/P\u003e\n\u003cP data-unlink=\"true\"\u003e\u003cA href=\"https://www.microsoft.com/security/blog/2020/12/28/using-microsoft-365-defender-to-coordinate-protection-against-solorigate/\" target=\"_blank\" rel=\"noopener\"\u003eUsing Microsoft 365 Defender to protect against Solorigate - Microsoft Security\u003c/A\u003e\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e\n\u003cP\u003e\u0026nbsp;\u003c/P\u003e","kudosSumWeight":13,"postTime":"2020-12-16T11:54:32.499-08:00","images":{"__typename":"AssociatedImageConnection","edges":[{"__typename":"AssociatedImageEdge","cursor":"MjUuM3wyLjF8b3wyNXxfTlZffDE","node":{"__ref":"AssociatedImage:{\"url\":\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTE2OGlFQjcxOEM5Njc1QzQ5Q0Q3?revision=57\"}"}},{"__typename":"AssociatedImageEdge","cursor":"MjUuM3wyLjF8b3wyNXxfTlZffDI","node":{"__ref":"AssociatedImage:{\"url\":\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTE1MWkzRkU2NThDQUY5QzMzNTg1?revision=57\"}"}},{"__typename":"AssociatedImageEdge","cursor":"MjUuM3wyLjF8b3wyNXxfTlZffDM","node":{"__ref":"AssociatedImage:{\"url\":\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTUyNmk0QUEzQjFDRjM0MkI0OTU4?revision=57\"}"}},{"__typename":"AssociatedImageEdge","cursor":"MjUuM3wyLjF8b3wyNXxfTlZffDQ","node":{"__ref":"AssociatedImage:{\"url\":\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTUyN2lBRTZGNDQ4NjhDMUFCNDM5?revision=57\"}"}},{"__typename":"AssociatedImageEdge","cursor":"MjUuM3wyLjF8b3wyNXxfTlZffDU","node":{"__ref":"AssociatedImage:{\"url\":\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTUyOGlDQjYxQ0JGRTVCNjE3MUQ3?revision=57\"}"}}],"totalCount":5,"pageInfo":{"__typename":"PageInfo","hasNextPage":false,"endCursor":null,"hasPreviousPage":false,"startCursor":null}},"attachments":{"__typename":"AttachmentConnection","pageInfo":{"__typename":"PageInfo","hasNextPage":false,"endCursor":null,"hasPreviousPage":false,"startCursor":null},"edges":[]},"tags":{"__typename":"TagConnection","pageInfo":{"__typename":"PageInfo","hasNextPage":false,"endCursor":null,"hasPreviousPage":false,"startCursor":null},"edges":[{"__typename":"TagEdge","cursor":"MjUuM3wyLjF8b3wxMHxfTlZffDE","node":{"__typename":"Tag","id":"tag:hunting","text":"hunting","time":"2019-04-11T09:00:00.012-07:00","lastActivityTime":null,"messagesCount":null,"followersCount":null}},{"__typename":"TagEdge","cursor":"MjUuM3wyLjF8b3wxMHxfTlZffDI","node":{"__typename":"Tag","id":"tag:microsoft sentinel","text":"microsoft sentinel","time":"2021-11-02T10:33:48.383-07:00","lastActivityTime":null,"messagesCount":null,"followersCount":null}}]},"timeToRead":33,"rawTeaser":"\u003cP\u003e\u003cLI-IMAGE width=\"799\" height=\"527\" alt=\"Image1.png\" align=\"inline\" id=\"241168iEB718C9675C49CD7\" size=\"large\" sourcetype=\"new\" src=\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTE2OGlFQjcxOEM5Njc1QzQ5Q0Q3?image-dimensions=750x750\u0026amp;revision=57\"\u003e\u003c/LI-IMAGE\u003e\u003c/P\u003e\n\u003cP\u003eMicrosoft recently blogged about the \u003cA href=\"https://blogs.microsoft.com/on-the-issues/2020/12/13/customers-protect-nation-state-cyberattacks/\" target=\"_blank\" rel=\"noopener\"\u003eRecent Nation-State Cyber Attacks\u003c/A\u003e that has impacted high value targets both across the government and private sector. This attack is also known as \u003cA href=\"https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=Trojan:MSIL/Solorigate.B!dha\" target=\"_blank\" rel=\"noopener\"\u003eSolorigate\u003c/A\u003e or \u003cA href=\"https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\" target=\"_blank\" rel=\"noopener\"\u003eSunburst\u003c/A\u003e.\u003c/P\u003e","introduction":"","coverImage":null,"coverImageProperties":{"__typename":"CoverImageProperties","style":"STANDARD","titlePosition":"BOTTOM","altText":""},"currentRevision":{"__ref":"Revision:revision:1995095_57"},"latestVersion":{"__typename":"FriendlyVersion","major":"55","minor":"0"},"metrics":{"__typename":"MessageMetrics","views":102680},"visibilityScope":"PUBLIC","canonicalUrl":null,"seoTitle":null,"seoDescription":null,"placeholder":false,"originalMessageForPlaceholder":null,"contributors":{"__typename":"UserConnection","edges":[]},"nonCoAuthorContributors":{"__typename":"UserConnection","edges":[]},"coAuthors":{"__typename":"UserConnection","edges":[]},"blogMessagePolicies":{"__typename":"BlogMessagePolicies","canDoAuthoringActionsOnBlog":{"__typename":"PolicyResult","failureReason":{"__typename":"FailureReason","message":"error.lithium.policies.blog.action_can_do_authoring_action.accessDenied","key":"error.lithium.policies.blog.action_can_do_authoring_action.accessDenied","args":[]}}},"archivalData":null,"customFields":[],"revisions({\"constraints\":{\"isPublished\":{\"eq\":true}},\"first\":1})":{"__typename":"RevisionConnection","totalCount":57}},"Conversation:conversation:1995095":{"__typename":"Conversation","id":"conversation:1995095","solved":false,"topic":{"__ref":"BlogTopicMessage:message:1995095"},"lastPostingActivityTime":"2021-11-02T18:30:13.281-07:00","lastPostTime":"2020-12-27T00:51:08.223-08:00","unreadReplyCount":5,"isSubscribed":false},"ModerationData:moderation_data:1995095":{"__typename":"ModerationData","id":"moderation_data:1995095","status":"APPROVED","rejectReason":null,"isReportedAbuse":false,"rejectUser":null,"rejectTime":null,"rejectActorType":null},"AssociatedImage:{\"url\":\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTE2OGlFQjcxOEM5Njc1QzQ5Q0Q3?revision=57\"}":{"__typename":"AssociatedImage","url":"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTE2OGlFQjcxOEM5Njc1QzQ5Q0Q3?revision=57","title":"Image1.png","associationType":"TEASER","width":799,"height":527,"altText":null},"AssociatedImage:{\"url\":\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTE1MWkzRkU2NThDQUY5QzMzNTg1?revision=57\"}":{"__typename":"AssociatedImage","url":"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTE1MWkzRkU2NThDQUY5QzMzNTg1?revision=57","title":"Image1.png","associationType":"BODY","width":799,"height":527,"altText":null},"AssociatedImage:{\"url\":\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTUyNmk0QUEzQjFDRjM0MkI0OTU4?revision=57\"}":{"__typename":"AssociatedImage","url":"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTUyNmk0QUEzQjFDRjM0MkI0OTU4?revision=57","title":"DiagnosticSettings1.png","associationType":"BODY","width":3454,"height":1879,"altText":null},"AssociatedImage:{\"url\":\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTUyN2lBRTZGNDQ4NjhDMUFCNDM5?revision=57\"}":{"__typename":"AssociatedImage","url":"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTUyN2lBRTZGNDQ4NjhDMUFCNDM5?revision=57","title":"DiagnosticSettings2.png","associationType":"BODY","width":3679,"height":1006,"altText":null},"AssociatedImage:{\"url\":\"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTUyOGlDQjYxQ0JGRTVCNjE3MUQ3?revision=57\"}":{"__typename":"AssociatedImage","url":"https://techcommunity.microsoft.com/t5/s/gxcuf89792/images/bS0xOTk1MDk1LTI0MTUyOGlDQjYxQ0JGRTVCNjE3MUQ3?revision=57","title":"DiagnosticSettings3.png","associationType":"BODY","width":2040,"height":1318,"altText":null},"Revision:revision:1995095_57":{"__typename":"Revision","id":"revision:1995095_57","lastEditTime":"2021-11-02T18:30:13.281-07:00"},"CachedAsset:theme:customTheme1-1749167508102":{"__typename":"CachedAsset","id":"theme:customTheme1-1749167508102","value":{"id":"customTheme1","animation":{"fast":"150ms","normal":"250ms","slow":"500ms","slowest":"750ms","function":"cubic-bezier(0.07, 0.91, 0.51, 1)","__typename":"AnimationThemeSettings"},"avatar":{"borderRadius":"50%","collections":["default"],"__typename":"AvatarThemeSettings"},"basics":{"browserIcon":{"imageAssetName":"favicon-1730836283320.png","imageLastModified":"1730836286415","__typename":"ThemeAsset"},"customerLogo":{"imageAssetName":"favicon-1730836271365.png","imageLastModified":"1730836274203","__typename":"ThemeAsset"},"maximumWidthOfPageContent":"1300px","oneColumnNarrowWidth":"800px","gridGutterWidthMd":"30px","gridGutterWidthXs":"10px","pageWidthStyle":"WIDTH_OF_BROWSER","__typename":"BasicsThemeSettings"},"buttons":{"borderRadiusSm":"3px","borderRadius":"3px","borderRadiusLg":"5px","paddingY":"5px","paddingYLg":"7px","paddingYHero":"var(--lia-bs-btn-padding-y-lg)","paddingX":"12px","paddingXLg":"16px","paddingXHero":"60px","fontStyle":"NORMAL","fontWeight":"700","textTransform":"NONE","disabledOpacity":0.5,"primaryTextColor":"var(--lia-bs-white)","primaryTextHoverColor":"var(--lia-bs-white)","primaryTextActiveColor":"var(--lia-bs-white)","primaryBgColor":"var(--lia-bs-primary)","primaryBgHoverColor":"hsl(var(--lia-bs-primary-h), var(--lia-bs-primary-s), calc(var(--lia-bs-primary-l) * 0.85))","primaryBgActiveColor":"hsl(var(--lia-bs-primary-h), var(--lia-bs-primary-s), calc(var(--lia-bs-primary-l) * 0.7))","primaryBorder":"1px solid transparent","primaryBorderHover":"1px solid transparent","primaryBorderActive":"1px solid transparent","primaryBorderFocus":"1px solid var(--lia-bs-white)","primaryBoxShadowFocus":"0 0 0 1px var(--lia-bs-primary), 0 0 0 4px hsla(var(--lia-bs-primary-h), var(--lia-bs-primary-s), var(--lia-bs-primary-l), 0.2)","secondaryTextColor":"var(--lia-bs-gray-900)","secondaryTextHoverColor":"hsl(var(--lia-bs-gray-900-h), var(--lia-bs-gray-900-s), calc(var(--lia-bs-gray-900-l) * 0.95))","secondaryTextActiveColor":"hsl(var(--lia-bs-gray-900-h), var(--lia-bs-gray-900-s), calc(var(--lia-bs-gray-900-l) * 0.9))","secondaryBgColor":"var(--lia-bs-gray-200)","secondaryBgHoverColor":"hsl(var(--lia-bs-gray-200-h), var(--lia-bs-gray-200-s), calc(var(--lia-bs-gray-200-l) * 0.96))","secondaryBgActiveColor":"hsl(var(--lia-bs-gray-200-h), var(--lia-bs-gray-200-s), calc(var(--lia-bs-gray-200-l) * 0.92))","secondaryBorder":"1px solid transparent","secondaryBorderHover":"1px solid transparent","secondaryBorderActive":"1px solid transparent","secondaryBorderFocus":"1px solid transparent","secondaryBoxShadowFocus":"0 0 0 1px var(--lia-bs-primary), 0 0 0 4px hsla(var(--lia-bs-primary-h), var(--lia-bs-primary-s), var(--lia-bs-primary-l), 0.2)","tertiaryTextColor":"var(--lia-bs-gray-900)","tertiaryTextHoverColor":"hsl(var(--lia-bs-gray-900-h), var(--lia-bs-gray-900-s), calc(var(--lia-bs-gray-900-l) * 0.95))","tertiaryTextActiveColor":"hsl(var(--lia-bs-gray-900-h), var(--lia-bs-gray-900-s), calc(var(--lia-bs-gray-900-l) * 0.9))","tertiaryBgColor":"transparent","tertiaryBgHoverColor":"transparent","tertiaryBgActiveColor":"hsla(var(--lia-bs-black-h), var(--lia-bs-black-s), var(--lia-bs-black-l), 0.04)","tertiaryBorder":"1px solid transparent","tertiaryBorderHover":"1px solid hsla(var(--lia-bs-black-h), var(--lia-bs-black-s), var(--lia-bs-black-l), 0.08)","tertiaryBorderActive":"1px solid transparent","tertiaryBorderFocus":"1px solid transparent","tertiaryBoxShadowFocus":"0 0 0 1px var(--lia-bs-primary), 0 0 0 4px hsla(var(--lia-bs-primary-h), var(--lia-bs-primary-s), var(--lia-bs-primary-l), 0.2)","destructiveTextColor":"var(--lia-bs-danger)","destructiveTextHoverColor":"hsl(var(--lia-bs-danger-h), var(--lia-bs-danger-s), calc(var(--lia-bs-danger-l) * 0.95))","destructiveTextActiveColor":"hsl(var(--lia-bs-danger-h), var(--lia-bs-danger-s), calc(var(--lia-bs-danger-l) * 0.9))","destructiveBgColor":"var(--lia-bs-gray-200)","destructiveBgHoverColor":"hsl(var(--lia-bs-gray-200-h), var(--lia-bs-gray-200-s), calc(var(--lia-bs-gray-200-l) * 0.96))","destructiveBgActiveColor":"hsl(var(--lia-bs-gray-200-h), var(--lia-bs-gray-200-s), calc(var(--lia-bs-gray-200-l) * 0.92))","destructiveBorder":"1px solid transparent","destructiveBorderHover":"1px solid transparent","destructiveBorderActive":"1px solid transparent","destructiveBorderFocus":"1px solid transparent","destructiveBoxShadowFocus":"0 0 0 1px var(--lia-bs-primary), 0 0 0 4px hsla(var(--lia-bs-primary-h), var(--lia-bs-primary-s), var(--lia-bs-primary-l), 0.2)","__typename":"ButtonsThemeSettings"},"border":{"color":"hsla(var(--lia-bs-black-h), var(--lia-bs-black-s), var(--lia-bs-black-l), 0.08)","mainContent":"NONE","sideContent":"LIGHT","radiusSm":"3px","radius":"5px","radiusLg":"9px","radius50":"100vw","__typename":"BorderThemeSettings"},"boxShadow":{"xs":"0 0 0 1px hsla(var(--lia-bs-gray-900-h), var(--lia-bs-gray-900-s), var(--lia-bs-gray-900-l), 0.08), 0 3px 0 -1px hsla(var(--lia-bs-gray-900-h), var(--lia-bs-gray-900-s), var(--lia-bs-gray-900-l), 0.16)","sm":"0 2px 4px hsla(var(--lia-bs-gray-900-h), var(--lia-bs-gray-900-s), var(--lia-bs-gray-900-l), 0.12)","md":"0 5px 15px hsla(var(--lia-bs-gray-900-h), var(--lia-bs-gray-900-s), var(--lia-bs-gray-900-l), 0.3)","lg":"0 10px 30px hsla(var(--lia-bs-gray-900-h), var(--lia-bs-gray-900-s), var(--lia-bs-gray-900-l), 0.3)","__typename":"BoxShadowThemeSettings"},"cards":{"bgColor":"var(--lia-panel-bg-color)","borderRadius":"var(--lia-panel-border-radius)","boxShadow":"var(--lia-box-shadow-xs)","__typename":"CardsThemeSettings"},"chip":{"maxWidth":"300px","height":"30px","__typename":"ChipThemeSettings"},"coreTypes":{"defaultMessageLinkColor":"var(--lia-bs-link-color)","defaultMessageLinkDecoration":"none","defaultMessageLinkFontStyle":"NORMAL","defaultMessageLinkFontWeight":"400","defaultMessageFontStyle":"NORMAL","defaultMessageFontWeight":"400","defaultMessageFontFamily":"var(--lia-bs-font-family-base)","forumColor":"#4099E2","forumFontFamily":"var(--lia-bs-font-family-base)","forumFontWeight":"var(--lia-default-message-font-weight)","forumLineHeight":"var(--lia-bs-line-height-base)","forumFontStyle":"var(--lia-default-message-font-style)","forumMessageLinkColor":"var(--lia-default-message-link-color)","forumMessageLinkDecoration":"var(--lia-default-message-link-decoration)","forumMessageLinkFontStyle":"var(--lia-default-message-link-font-style)","forumMessageLinkFontWeight":"var(--lia-default-message-link-font-weight)","forumSolvedColor":"#148563","blogColor":"#1CBAA0","blogFontFamily":"var(--lia-bs-font-family-base)","blogFontWeight":"var(--lia-default-message-font-weight)","blogLineHeight":"1.75","blogFontStyle":"var(--lia-default-message-font-style)","blogMessageLinkColor":"var(--lia-default-message-link-color)","blogMessageLinkDecoration":"var(--lia-default-message-link-decoration)","blogMessageLinkFontStyle":"var(--lia-default-message-link-font-style)","blogMessageLinkFontWeight":"var(--lia-default-message-link-font-weight)","tkbColor":"#4C6B90","tkbFontFamily":"var(--lia-bs-font-family-base)","tkbFontWeight":"var(--lia-default-message-font-weight)","tkbLineHeight":"1.75","tkbFontStyle":"var(--lia-default-message-font-style)","tkbMessageLinkColor":"var(--lia-default-message-link-color)","tkbMessageLinkDecoration":"var(--lia-default-message-link-decoration)","tkbMessageLinkFontStyle":"var(--lia-default-message-link-font-style)","tkbMessageLinkFontWeight":"var(--lia-default-message-link-font-weight)","qandaColor":"#4099E2","qandaFontFamily":"var(--lia-bs-font-family-base)","qandaFontWeight":"var(--lia-default-message-font-weight)","qandaLineHeight":"var(--lia-bs-line-height-base)","qandaFontStyle":"var(--lia-default-message-link-font-style)","qandaMessageLinkColor":"var(--lia-default-message-link-color)","qandaMessageLinkDecoration":"var(--lia-default-message-link-decoration)","qandaMessageLinkFontStyle":"var(--lia-default-message-link-font-style)","qandaMessageLinkFontWeight":"var(--lia-default-message-link-font-weight)","qandaSolvedColor":"#3FA023","ideaColor":"#FF8000","ideaFontFamily":"var(--lia-bs-font-family-base)","ideaFontWeight":"var(--lia-default-message-font-weight)","ideaLineHeight":"var(--lia-bs-line-height-base)","ideaFontStyle":"var(--lia-default-message-font-style)","ideaMessageLinkColor":"var(--lia-default-message-link-color)","ideaMessageLinkDecoration":"var(--lia-default-message-link-decoration)","ideaMessageLinkFontStyle":"var(--lia-default-message-link-font-style)","ideaMessageLinkFontWeight":"var(--lia-default-message-link-font-weight)","contestColor":"#FCC845","contestFontFamily":"var(--lia-bs-font-family-base)","contestFontWeight":"var(--lia-default-message-font-weight)","contestLineHeight":"var(--lia-bs-line-height-base)","contestFontStyle":"var(--lia-default-message-link-font-style)","contestMessageLinkColor":"var(--lia-default-message-link-color)","contestMessageLinkDecoration":"var(--lia-default-message-link-decoration)","contestMessageLinkFontStyle":"ITALIC","contestMessageLinkFontWeight":"var(--lia-default-message-link-font-weight)","occasionColor":"#D13A1F","occasionFontFamily":"var(--lia-bs-font-family-base)","occasionFontWeight":"var(--lia-default-message-font-weight)","occasionLineHeight":"var(--lia-bs-line-height-base)","occasionFontStyle":"var(--lia-default-message-font-style)","occasionMessageLinkColor":"var(--lia-default-message-link-color)","occasionMessageLinkDecoration":"var(--lia-default-message-link-decoration)","occasionMessageLinkFontStyle":"var(--lia-default-message-link-font-style)","occasionMessageLinkFontWeight":"var(--lia-default-message-link-font-weight)","grouphubColor":"#333333","categoryColor":"#949494","communityColor":"#FFFFFF","productColor":"#949494","__typename":"CoreTypesThemeSettings"},"colors":{"black":"#000000","white":"#FFFFFF","gray100":"#F7F7F7","gray200":"#F7F7F7","gray300":"#E8E8E8","gray400":"#D9D9D9","gray500":"#CCCCCC","gray600":"#717171","gray700":"#707070","gray800":"#545454","gray900":"#333333","dark":"#545454","light":"#F7F7F7","primary":"#0069D4","secondary":"#333333","bodyText":"#1E1E1E","bodyBg":"#FFFFFF","info":"#409AE2","success":"#41C5AE","warning":"#FCC844","danger":"#BC341B","alertSystem":"#FF6600","textMuted":"#707070","highlight":"#FFFCAD","outline":"var(--lia-bs-primary)","custom":["#D3F5A4","#243A5E"],"__typename":"ColorsThemeSettings"},"divider":{"size":"3px","marginLeft":"4px","marginRight":"4px","borderRadius":"50%","bgColor":"var(--lia-bs-gray-600)","bgColorActive":"var(--lia-bs-gray-600)","__typename":"DividerThemeSettings"},"dropdown":{"fontSize":"var(--lia-bs-font-size-sm)","borderColor":"var(--lia-bs-border-color)","borderRadius":"var(--lia-bs-border-radius-sm)","dividerBg":"var(--lia-bs-gray-300)","itemPaddingY":"5px","itemPaddingX":"20px","headerColor":"var(--lia-bs-gray-700)","__typename":"DropdownThemeSettings"},"email":{"link":{"color":"#0069D4","hoverColor":"#0061c2","decoration":"none","hoverDecoration":"underline","__typename":"EmailLinkSettings"},"border":{"color":"#e4e4e4","__typename":"EmailBorderSettings"},"buttons":{"borderRadiusLg":"5px","paddingXLg":"16px","paddingYLg":"7px","fontWeight":"700","primaryTextColor":"#ffffff","primaryTextHoverColor":"#ffffff","primaryBgColor":"#0069D4","primaryBgHoverColor":"#005cb8","primaryBorder":"1px solid transparent","primaryBorderHover":"1px solid transparent","__typename":"EmailButtonsSettings"},"panel":{"borderRadius":"5px","borderColor":"#e4e4e4","__typename":"EmailPanelSettings"},"__typename":"EmailThemeSettings"},"emoji":{"skinToneDefault":"#ffcd43","skinToneLight":"#fae3c5","skinToneMediumLight":"#e2cfa5","skinToneMedium":"#daa478","skinToneMediumDark":"#a78058","skinToneDark":"#5e4d43","__typename":"EmojiThemeSettings"},"heading":{"color":"var(--lia-bs-body-color)","fontFamily":"Segoe UI","fontStyle":"NORMAL","fontWeight":"400","h1FontSize":"34px","h2FontSize":"32px","h3FontSize":"28px","h4FontSize":"24px","h5FontSize":"20px","h6FontSize":"16px","lineHeight":"1.3","subHeaderFontSize":"11px","subHeaderFontWeight":"500","h1LetterSpacing":"normal","h2LetterSpacing":"normal","h3LetterSpacing":"normal","h4LetterSpacing":"normal","h5LetterSpacing":"normal","h6LetterSpacing":"normal","subHeaderLetterSpacing":"2px","h1FontWeight":"var(--lia-bs-headings-font-weight)","h2FontWeight":"var(--lia-bs-headings-font-weight)","h3FontWeight":"var(--lia-bs-headings-font-weight)","h4FontWeight":"var(--lia-bs-headings-font-weight)","h5FontWeight":"var(--lia-bs-headings-font-weight)","h6FontWeight":"var(--lia-bs-headings-font-weight)","__typename":"HeadingThemeSettings"},"icons":{"size10":"10px","size12":"12px","size14":"14px","size16":"16px","size20":"20px","size24":"24px","size30":"30px","size40":"40px","size50":"50px","size60":"60px","size80":"80px","size120":"120px","size160":"160px","__typename":"IconsThemeSettings"},"imagePreview":{"bgColor":"var(--lia-bs-gray-900)","titleColor":"var(--lia-bs-white)","controlColor":"var(--lia-bs-white)","controlBgColor":"var(--lia-bs-gray-800)","__typename":"ImagePreviewThemeSettings"},"input":{"borderColor":"var(--lia-bs-gray-600)","disabledColor":"var(--lia-bs-gray-600)","focusBorderColor":"var(--lia-bs-primary)","labelMarginBottom":"10px","btnFontSize":"var(--lia-bs-font-size-sm)","focusBoxShadow":"0 0 0 3px hsla(var(--lia-bs-primary-h), var(--lia-bs-primary-s), var(--lia-bs-primary-l), 0.2)","checkLabelMarginBottom":"2px","checkboxBorderRadius":"3px","borderRadiusSm":"var(--lia-bs-border-radius-sm)","borderRadius":"var(--lia-bs-border-radius)","borderRadiusLg":"var(--lia-bs-border-radius-lg)","formTextMarginTop":"4px","textAreaBorderRadius":"var(--lia-bs-border-radius)","activeFillColor":"var(--lia-bs-primary)","__typename":"InputThemeSettings"},"loading":{"dotDarkColor":"hsla(var(--lia-bs-black-h), var(--lia-bs-black-s), var(--lia-bs-black-l), 0.2)","dotLightColor":"hsla(var(--lia-bs-white-h), var(--lia-bs-white-s), var(--lia-bs-white-l), 0.5)","barDarkColor":"hsla(var(--lia-bs-black-h), var(--lia-bs-black-s), var(--lia-bs-black-l), 0.06)","barLightColor":"hsla(var(--lia-bs-white-h), var(--lia-bs-white-s), var(--lia-bs-white-l), 0.4)","__typename":"LoadingThemeSettings"},"link":{"color":"var(--lia-bs-primary)","hoverColor":"hsl(var(--lia-bs-primary-h), var(--lia-bs-primary-s), calc(var(--lia-bs-primary-l) - 10%))","decoration":"none","hoverDecoration":"underline","__typename":"LinkThemeSettings"},"listGroup":{"itemPaddingY":"15px","itemPaddingX":"15px","borderColor":"var(--lia-bs-gray-300)","__typename":"ListGroupThemeSettings"},"modal":{"contentTextColor":"var(--lia-bs-body-color)","contentBg":"var(--lia-bs-white)","backgroundBg":"var(--lia-bs-black)","smSize":"440px","mdSize":"760px","lgSize":"1080px","backdropOpacity":0.3,"contentBoxShadowXs":"var(--lia-bs-box-shadow-sm)","contentBoxShadow":"var(--lia-bs-box-shadow)","headerFontWeight":"700","__typename":"ModalThemeSettings"},"navbar":{"position":"FIXED","background":{"attachment":null,"clip":null,"color":"var(--lia-bs-white)","imageAssetName":"","imageLastModified":"0","origin":null,"position":"CENTER_CENTER","repeat":"NO_REPEAT","size":"COVER","__typename":"BackgroundProps"},"backgroundOpacity":0.8,"paddingTop":"15px","paddingBottom":"15px","borderBottom":"1px solid var(--lia-bs-border-color)","boxShadow":"var(--lia-bs-box-shadow-sm)","brandMarginRight":"30px","brandMarginRightSm":"10px","brandLogoHeight":"30px","linkGap":"10px","linkJustifyContent":"flex-start","linkPaddingY":"5px","linkPaddingX":"10px","linkDropdownPaddingY":"9px","linkDropdownPaddingX":"var(--lia-nav-link-px)","linkColor":"var(--lia-bs-body-color)","linkHoverColor":"var(--lia-bs-primary)","linkFontSize":"var(--lia-bs-font-size-sm)","linkFontStyle":"NORMAL","linkFontWeight":"400","linkTextTransform":"NONE","linkLetterSpacing":"normal","linkBorderRadius":"var(--lia-bs-border-radius-sm)","linkBgColor":"transparent","linkBgHoverColor":"transparent","linkBorder":"none","linkBorderHover":"none","linkBoxShadow":"none","linkBoxShadowHover":"none","linkTextBorderBottom":"none","linkTextBorderBottomHover":"none","dropdownPaddingTop":"10px","dropdownPaddingBottom":"15px","dropdownPaddingX":"10px","dropdownMenuOffset":"2px","dropdownDividerMarginTop":"10px","dropdownDividerMarginBottom":"10px","dropdownBorderColor":"hsla(var(--lia-bs-black-h), var(--lia-bs-black-s), var(--lia-bs-black-l), 0.08)","controllerBgHoverColor":"hsla(var(--lia-bs-black-h), var(--lia-bs-black-s), var(--lia-bs-black-l), 0.1)","controllerIconColor":"var(--lia-bs-body-color)","controllerIconHoverColor":"var(--lia-bs-body-color)","controllerTextColor":"var(--lia-nav-controller-icon-color)","controllerTextHoverColor":"var(--lia-nav-controller-icon-hover-color)","controllerHighlightColor":"hsla(30, 100%, 50%)","controllerHighlightTextColor":"var(--lia-yiq-light)","controllerBorderRadius":"var(--lia-border-radius-50)","hamburgerColor":"var(--lia-nav-controller-icon-color)","hamburgerHoverColor":"var(--lia-nav-controller-icon-color)","hamburgerBgColor":"transparent","hamburgerBgHoverColor":"transparent","hamburgerBorder":"none","hamburgerBorderHover":"none","collapseMenuMarginLeft":"20px","collapseMenuDividerBg":"var(--lia-nav-link-color)","collapseMenuDividerOpacity":0.16,"__typename":"NavbarThemeSettings"},"pager":{"textColor":"var(--lia-bs-link-color)","textFontWeight":"var(--lia-font-weight-md)","textFontSize":"var(--lia-bs-font-size-sm)","__typename":"PagerThemeSettings"},"panel":{"bgColor":"var(--lia-bs-white)","borderRadius":"var(--lia-bs-border-radius)","borderColor":"var(--lia-bs-border-color)","boxShadow":"none","__typename":"PanelThemeSettings"},"popover":{"arrowHeight":"8px","arrowWidth":"16px","maxWidth":"300px","minWidth":"100px","headerBg":"var(--lia-bs-white)","borderColor":"var(--lia-bs-border-color)","borderRadius":"var(--lia-bs-border-radius)","boxShadow":"0 0.5rem 1rem hsla(var(--lia-bs-black-h), var(--lia-bs-black-s), var(--lia-bs-black-l), 0.15)","__typename":"PopoverThemeSettings"},"prism":{"color":"#000000","bgColor":"#f5f2f0","fontFamily":"var(--font-family-monospace)","fontSize":"var(--lia-bs-font-size-base)","fontWeightBold":"var(--lia-bs-font-weight-bold)","fontStyleItalic":"italic","tabSize":2,"highlightColor":"#b3d4fc","commentColor":"#62707e","punctuationColor":"#6f6f6f","namespaceOpacity":"0.7","propColor":"#990055","selectorColor":"#517a00","operatorColor":"#906736","operatorBgColor":"hsla(0, 0%, 100%, 0.5)","keywordColor":"#0076a9","functionColor":"#d3284b","variableColor":"#c14700","__typename":"PrismThemeSettings"},"rte":{"bgColor":"var(--lia-bs-white)","borderRadius":"var(--lia-panel-border-radius)","boxShadow":" var(--lia-panel-box-shadow)","customColor1":"#bfedd2","customColor2":"#fbeeb8","customColor3":"#f8cac6","customColor4":"#eccafa","customColor5":"#c2e0f4","customColor6":"#2dc26b","customColor7":"#f1c40f","customColor8":"#e03e2d","customColor9":"#b96ad9","customColor10":"#3598db","customColor11":"#169179","customColor12":"#e67e23","customColor13":"#ba372a","customColor14":"#843fa1","customColor15":"#236fa1","customColor16":"#ecf0f1","customColor17":"#ced4d9","customColor18":"#95a5a6","customColor19":"#7e8c8d","customColor20":"#34495e","customColor21":"#000000","customColor22":"#ffffff","defaultMessageHeaderMarginTop":"40px","defaultMessageHeaderMarginBottom":"20px","defaultMessageItemMarginTop":"0","defaultMessageItemMarginBottom":"10px","diffAddedColor":"hsla(170, 53%, 51%, 0.4)","diffChangedColor":"hsla(43, 97%, 63%, 0.4)","diffNoneColor":"hsla(0, 0%, 80%, 0.4)","diffRemovedColor":"hsla(9, 74%, 47%, 0.4)","specialMessageHeaderMarginTop":"40px","specialMessageHeaderMarginBottom":"20px","specialMessageItemMarginTop":"0","specialMessageItemMarginBottom":"10px","__typename":"RteThemeSettings"},"tags":{"bgColor":"var(--lia-bs-gray-200)","bgHoverColor":"var(--lia-bs-gray-400)","borderRadius":"var(--lia-bs-border-radius-sm)","color":"var(--lia-bs-body-color)","hoverColor":"var(--lia-bs-body-color)","fontWeight":"var(--lia-font-weight-md)","fontSize":"var(--lia-font-size-xxs)","textTransform":"UPPERCASE","letterSpacing":"0.5px","__typename":"TagsThemeSettings"},"toasts":{"borderRadius":"var(--lia-bs-border-radius)","paddingX":"12px","__typename":"ToastsThemeSettings"},"typography":{"fontFamilyBase":"Segoe UI","fontStyleBase":"NORMAL","fontWeightBase":"400","fontWeightLight":"300","fontWeightNormal":"400","fontWeightMd":"500","fontWeightBold":"700","letterSpacingSm":"normal","letterSpacingXs":"normal","lineHeightBase":"1.5","fontSizeBase":"16px","fontSizeXxs":"11px","fontSizeXs":"12px","fontSizeSm":"14px","fontSizeLg":"20px","fontSizeXl":"24px","smallFontSize":"14px","customFonts":[{"source":"SERVER","name":"Segoe UI","styles":[{"style":"NORMAL","weight":"400","__typename":"FontStyleData"},{"style":"NORMAL","weight":"300","__typename":"FontStyleData"},{"style":"NORMAL","weight":"600","__typename":"FontStyleData"},{"style":"NORMAL","weight":"700","__typename":"FontStyleData"},{"style":"ITALIC","weight":"400","__typename":"FontStyleData"}],"assetNames":["SegoeUI-normal-400.woff2","SegoeUI-normal-300.woff2","SegoeUI-normal-600.woff2","SegoeUI-normal-700.woff2","SegoeUI-italic-400.woff2"],"__typename":"CustomFont"},{"source":"SERVER","name":"MWF Fluent Icons","styles":[{"style":"NORMAL","weight":"400","__typename":"FontStyleData"}],"assetNames":["MWFFluentIcons-normal-400.woff2"],"__typename":"CustomFont"}],"__typename":"TypographyThemeSettings"},"unstyledListItem":{"marginBottomSm":"5px","marginBottomMd":"10px","marginBottomLg":"15px","marginBottomXl":"20px","marginBottomXxl":"25px","__typename":"UnstyledListItemThemeSettings"},"yiq":{"light":"#ffffff","dark":"#000000","__typename":"YiqThemeSettings"},"colorLightness":{"primaryDark":0.36,"primaryLight":0.74,"primaryLighter":0.89,"primaryLightest":0.95,"infoDark":0.39,"infoLight":0.72,"infoLighter":0.85,"infoLightest":0.93,"successDark":0.24,"successLight":0.62,"successLighter":0.8,"successLightest":0.91,"warningDark":0.39,"warningLight":0.68,"warningLighter":0.84,"warningLightest":0.93,"dangerDark":0.41,"dangerLight":0.72,"dangerLighter":0.89,"dangerLightest":0.95,"__typename":"ColorLightnessThemeSettings"},"localOverride":false,"__typename":"Theme"},"localOverride":false},"CachedAsset:text:en_US-shared/client/components/common/Loading/LoadingDot-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-shared/client/components/common/Loading/LoadingDot-1747867729000","value":{"title":"Loading..."},"localOverride":false},"CachedAsset:quilt:o365.prod:pages/blogs/BlogMessagePage:board:MicrosoftSentinelBlog-1749167506305":{"__typename":"CachedAsset","id":"quilt:o365.prod:pages/blogs/BlogMessagePage:board:MicrosoftSentinelBlog-1749167506305","value":{"id":"BlogMessagePage","container":{"id":"Common","headerProps":{"backgroundImageProps":null,"backgroundColor":null,"addComponents":null,"removeComponents":["community.widget.bannerWidget"],"componentOrder":null,"__typename":"QuiltContainerSectionProps"},"headerComponentProps":{"community.widget.breadcrumbWidget":{"disableLastCrumbForDesktop":false}},"footerProps":null,"footerComponentProps":null,"items":[{"id":"blog-article","layout":"ONE_COLUMN","bgColor":null,"showTitle":null,"showDescription":null,"textPosition":null,"textColor":null,"sectionEditLevel":"LOCKED","bgImage":null,"disableSpacing":null,"edgeToEdgeDisplay":null,"fullHeight":null,"showBorder":null,"__typename":"OneColumnQuiltSection","columnMap":{"main":[{"id":"blogs.widget.blogArticleWidget","className":"lia-blog-container","props":null,"__typename":"QuiltComponent"}],"__typename":"OneSectionColumns"}},{"id":"section-1729184836777","layout":"MAIN_SIDE","bgColor":"transparent","showTitle":false,"showDescription":false,"textPosition":"CENTER","textColor":"var(--lia-bs-body-color)","sectionEditLevel":null,"bgImage":null,"disableSpacing":null,"edgeToEdgeDisplay":null,"fullHeight":null,"showBorder":null,"__typename":"MainSideQuiltSection","columnMap":{"main":[],"side":[],"__typename":"MainSideSectionColumns"}}],"__typename":"QuiltContainer"},"__typename":"Quilt","localOverride":false},"localOverride":false},"CachedAsset:text:en_US-components/common/EmailVerification-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-components/common/EmailVerification-1747867729000","value":{"email.verification.title":"Email Verification Required","email.verification.message.update.email":"To participate in the community, you must first verify your email address. The verification email was sent to {email}. To change your email, visit \u003clink\u003eMy Settings\u003c/link\u003e.","email.verification.message.resend.email":"To participate in the community, you must first verify your email address. The verification email was sent to {email}. \u003clink\u003eResend email\u003c/link\u003e."},"localOverride":false},"CachedAsset:text:en_US-pages/blogs/BlogMessagePage-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-pages/blogs/BlogMessagePage-1747867729000","value":{"title":"{contextMessageSubject} | {communityTitle}","errorMissing":"This blog post cannot be found","name":"Blog Message Page","section.blog-article.title":"Blog Post","archivedMessageTitle":"This Content Has Been Archived","section.section-1729184836777.title":"","section.section-1729184836777.description":"","section.CncIde.title":"Blog Post","section.tifEmD.description":"","section.tifEmD.title":""},"localOverride":false},"CachedAsset:quiltWrapper:o365.prod:Common:1749167433715":{"__typename":"CachedAsset","id":"quiltWrapper:o365.prod:Common:1749167433715","value":{"id":"Common","header":{"backgroundImageProps":{"assetName":null,"backgroundSize":"COVER","backgroundRepeat":"NO_REPEAT","backgroundPosition":"CENTER_CENTER","lastModified":null,"__typename":"BackgroundImageProps"},"backgroundColor":"transparent","items":[{"id":"community.widget.navbarWidget","props":{"showUserName":true,"showRegisterLink":true,"useIconLanguagePicker":true,"useLabelLanguagePicker":true,"className":"QuiltComponent_lia-component-edit-mode__0nCcm","links":{"sideLinks":[],"mainLinks":[{"children":[],"linkType":"INTERNAL","id":"gxcuf89792","params":{},"routeName":"CommunityPage"},{"children":[],"linkType":"EXTERNAL","id":"external-link","url":"/Directory","target":"SELF"},{"children":[{"linkType":"INTERNAL","id":"microsoft365","params":{"categoryId":"microsoft365"},"routeName":"CategoryPage"},{"linkType":"INTERNAL","id":"windows","params":{"categoryId":"Windows"},"routeName":"CategoryPage"},{"linkType":"INTERNAL","id":"Common-microsoft365-copilot-link","params":{"categoryId":"Microsoft365Copilot"},"routeName":"CategoryPage"},{"linkType":"INTERNAL","id":"microsoft-teams","params":{"categoryId":"MicrosoftTeams"},"routeName":"CategoryPage"},{"linkType":"INTERNAL","id":"microsoft-securityand-compliance","params":{"categoryId":"microsoft-security"},"routeName":"CategoryPage"},{"linkType":"INTERNAL","id":"azure","params":{"categoryId":"Azure"},"routeName":"CategoryPage"},{"linkType":"INTERNAL","id":"Common-content_management-link","params":{"categoryId":"Content_Management"},"routeName":"CategoryPage"},{"linkType":"INTERNAL","id":"exchange","params":{"categoryId":"Exchange"},"routeName":"CategoryPage"},{"linkType":"INTERNAL","id":"windows-server","params":{"categoryId":"Windows-Server"},"routeName":"CategoryPage"},{"linkType":"INTERNAL","id":"outlook","params":{"categoryId":"Outlook"},"routeName":"CategoryPage"},{"linkType":"INTERNAL","id":"microsoft-endpoint-manager","params":{"categoryId":"microsoftintune"},"routeName":"CategoryPage"},{"linkType":"EXTERNAL","id":"external-link-2","url":"/Directory","target":"SELF"}],"linkType":"EXTERNAL","id":"communities","url":"/","target":"BLANK"},{"children":[{"linkType":"INTERNAL","id":"a-i","params":{"categoryId":"AI"},"routeName":"CategoryPage"},{"linkType":"INTERNAL","id":"education-sector","params":{"categoryId":"EducationSector"},"routeName":"CategoryPage"},{"linkType":"INTERNAL","id":"partner-community","params":{"categoryId":"PartnerCommunity"},"routeName":"CategoryPage"},{"linkType":"INTERNAL","id":"i-t-ops-talk","params":{"categoryId":"ITOpsTalk"},"routeName":"CategoryPage"},{"linkType":"INTERNAL","id":"healthcare-and-life-sciences","params":{"categoryId":"HealthcareAndLifeSciences"},"routeName":"CategoryPage"},{"linkType":"INTERNAL","id":"microsoft-mechanics","params":{"categoryId":"MicrosoftMechanics"},"routeName":"CategoryPage"},{"linkType":"INTERNAL","id":"public-sector","params":{"categoryId":"PublicSector"},"routeName":"CategoryPage"},{"linkType":"INTERNAL","id":"s-m-b","params":{"categoryId":"MicrosoftforNonprofits"},"routeName":"CategoryPage"},{"linkType":"INTERNAL","id":"io-t","params":{"categoryId":"IoT"},"routeName":"CategoryPage"},{"linkType":"INTERNAL","id":"startupsat-microsoft","params":{"categoryId":"StartupsatMicrosoft"},"routeName":"CategoryPage"},{"linkType":"INTERNAL","id":"driving-adoption","params":{"categoryId":"DrivingAdoption"},"routeName":"CategoryPage"},{"linkType":"EXTERNAL","id":"external-link-1","url":"/Directory","target":"SELF"}],"linkType":"EXTERNAL","id":"communities-1","url":"/","target":"SELF"},{"children":[],"linkType":"EXTERNAL","id":"external","url":"/Blogs","target":"SELF"},{"children":[],"linkType":"EXTERNAL","id":"external-1","url":"/Events","target":"SELF"},{"children":[{"linkType":"INTERNAL","id":"microsoft-learn-1","params":{"categoryId":"MicrosoftLearn"},"routeName":"CategoryPage"},{"linkType":"INTERNAL","id":"microsoft-learn-blog","params":{"boardId":"MicrosoftLearnBlog","categoryId":"MicrosoftLearn"},"routeName":"BlogBoardPage"},{"linkType":"EXTERNAL","id":"external-10","url":"https://learningroomdirectory.microsoft.com/","target":"BLANK"},{"linkType":"EXTERNAL","id":"external-3","url":"https://docs.microsoft.com/learn/dynamics365/?WT.mc_id=techcom_header-webpage-m365","target":"BLANK"},{"linkType":"EXTERNAL","id":"external-4","url":"https://docs.microsoft.com/learn/m365/?wt.mc_id=techcom_header-webpage-m365","target":"BLANK"},{"linkType":"EXTERNAL","id":"external-5","url":"https://docs.microsoft.com/learn/topics/sci/?wt.mc_id=techcom_header-webpage-m365","target":"BLANK"},{"linkType":"EXTERNAL","id":"external-6","url":"https://docs.microsoft.com/learn/powerplatform/?wt.mc_id=techcom_header-webpage-powerplatform","target":"BLANK"},{"linkType":"EXTERNAL","id":"external-7","url":"https://docs.microsoft.com/learn/github/?wt.mc_id=techcom_header-webpage-github","target":"BLANK"},{"linkType":"EXTERNAL","id":"external-8","url":"https://docs.microsoft.com/learn/teams/?wt.mc_id=techcom_header-webpage-teams","target":"BLANK"},{"linkType":"EXTERNAL","id":"external-9","url":"https://docs.microsoft.com/learn/dotnet/?wt.mc_id=techcom_header-webpage-dotnet","target":"BLANK"},{"linkType":"EXTERNAL","id":"external-2","url":"https://docs.microsoft.com/learn/azure/?WT.mc_id=techcom_header-webpage-m365","target":"BLANK"}],"linkType":"INTERNAL","id":"microsoft-learn","params":{"categoryId":"MicrosoftLearn"},"routeName":"CategoryPage"},{"children":[],"linkType":"INTERNAL","id":"community-info-center","params":{"categoryId":"Community-Info-Center"},"routeName":"CategoryPage"}]},"style":{"boxShadow":"var(--lia-bs-box-shadow-sm)","controllerHighlightColor":"hsla(30, 100%, 50%)","linkFontWeight":"400","dropdownDividerMarginBottom":"10px","hamburgerBorderHover":"none","linkBoxShadowHover":"none","linkFontSize":"14px","backgroundOpacity":0.8,"controllerBorderRadius":"var(--lia-border-radius-50)","hamburgerBgColor":"transparent","hamburgerColor":"var(--lia-nav-controller-icon-color)","linkTextBorderBottom":"none","brandLogoHeight":"30px","linkBgHoverColor":"transparent","linkLetterSpacing":"normal","collapseMenuDividerOpacity":0.16,"dropdownPaddingBottom":"15px","paddingBottom":"15px","dropdownMenuOffset":"2px","hamburgerBgHoverColor":"transparent","borderBottom":"1px solid var(--lia-bs-border-color)","hamburgerBorder":"none","dropdownPaddingX":"10px","brandMarginRightSm":"10px","linkBoxShadow":"none","collapseMenuDividerBg":"var(--lia-nav-link-color)","linkColor":"var(--lia-bs-body-color)","linkJustifyContent":"flex-start","dropdownPaddingTop":"10px","controllerHighlightTextColor":"var(--lia-yiq-dark)","controllerTextColor":"var(--lia-nav-controller-icon-color)","background":{"imageAssetName":"","color":"var(--lia-bs-white)","size":"COVER","repeat":"NO_REPEAT","position":"CENTER_CENTER","imageLastModified":""},"linkBorderRadius":"var(--lia-bs-border-radius-sm)","linkHoverColor":"var(--lia-bs-body-color)","position":"FIXED","linkBorder":"none","linkTextBorderBottomHover":"2px solid var(--lia-bs-body-color)","brandMarginRight":"30px","hamburgerHoverColor":"var(--lia-nav-controller-icon-color)","linkBorderHover":"none","collapseMenuMarginLeft":"20px","linkFontStyle":"NORMAL","controllerTextHoverColor":"var(--lia-nav-controller-icon-hover-color)","linkPaddingX":"10px","linkPaddingY":"5px","paddingTop":"15px","linkTextTransform":"NONE","dropdownBorderColor":"hsla(var(--lia-bs-black-h), var(--lia-bs-black-s), var(--lia-bs-black-l), 0.08)","controllerBgHoverColor":"hsla(var(--lia-bs-black-h), var(--lia-bs-black-s), var(--lia-bs-black-l), 0.1)","linkBgColor":"transparent","linkDropdownPaddingX":"var(--lia-nav-link-px)","linkDropdownPaddingY":"9px","controllerIconColor":"var(--lia-bs-body-color)","dropdownDividerMarginTop":"10px","linkGap":"10px","controllerIconHoverColor":"var(--lia-bs-body-color)"},"showSearchIcon":false,"languagePickerStyle":"iconAndLabel"},"__typename":"QuiltComponent"},{"id":"community.widget.breadcrumbWidget","props":{"backgroundColor":"transparent","linkHighlightColor":"var(--lia-bs-primary)","visualEffects":{"showBottomBorder":true},"linkTextColor":"var(--lia-bs-gray-700)"},"__typename":"QuiltComponent"},{"id":"custom.widget.tempStatusBanner","props":{"widgetVisibility":"signedInOrAnonymous","useTitle":true,"useBackground":false,"title":"","lazyLoad":false},"__typename":"QuiltComponent"},{"id":"custom.widget.HeroBanner","props":{"widgetVisibility":"signedInOrAnonymous","usePageWidth":false,"useTitle":true,"cMax_items":3,"useBackground":false,"title":"","lazyLoad":false,"widgetChooser":"custom.widget.HeroBanner"},"__typename":"QuiltComponent"}],"__typename":"QuiltWrapperSection"},"footer":{"backgroundImageProps":{"assetName":null,"backgroundSize":"COVER","backgroundRepeat":"NO_REPEAT","backgroundPosition":"CENTER_CENTER","lastModified":null,"__typename":"BackgroundImageProps"},"backgroundColor":"transparent","items":[{"id":"custom.widget.MicrosoftFooter","props":{"widgetVisibility":"signedInOrAnonymous","useTitle":true,"useBackground":false,"title":"","lazyLoad":false},"__typename":"QuiltComponent"}],"__typename":"QuiltWrapperSection"},"__typename":"QuiltWrapper","localOverride":false},"localOverride":false},"CachedAsset:text:en_US-components/common/ActionFeedback-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-components/common/ActionFeedback-1747867729000","value":{"joinedGroupHub.title":"Welcome","joinedGroupHub.message":"You are now a member of this group and are subscribed to updates.","groupHubInviteNotFound.title":"Invitation Not Found","groupHubInviteNotFound.message":"Sorry, we could not find your invitation to the group. The owner may have canceled the invite.","groupHubNotFound.title":"Group Not Found","groupHubNotFound.message":"The grouphub you tried to join does not exist. It may have been deleted.","existingGroupHubMember.title":"Already Joined","existingGroupHubMember.message":"You are already a member of this group.","accountLocked.title":"Account Locked","accountLocked.message":"Your account has been locked due to multiple failed attempts. Try again in {lockoutTime} minutes.","editedGroupHub.title":"Changes Saved","editedGroupHub.message":"Your group has been updated.","leftGroupHub.title":"Goodbye","leftGroupHub.message":"You are no longer a member of this group and will not receive future updates.","deletedGroupHub.title":"Deleted","deletedGroupHub.message":"The group has been deleted.","groupHubCreated.title":"Group Created","groupHubCreated.message":"{groupHubName} is ready to use","accountClosed.title":"Account Closed","accountClosed.message":"The account has been closed and you will now be redirected to the homepage","resetTokenExpired.title":"Reset Password Link has Expired","resetTokenExpired.message":"Try resetting your password again","invalidUrl.title":"Invalid URL","invalidUrl.message":"The URL you're using is not recognized. Verify your URL and try again.","accountClosedForUser.title":"Account Closed","accountClosedForUser.message":"{userName}'s account is closed","inviteTokenInvalid.title":"Invitation Invalid","inviteTokenInvalid.message":"Your invitation to the community has been canceled or expired.","inviteTokenError.title":"Invitation Verification Failed","inviteTokenError.message":"The url you are utilizing is not recognized. Verify your URL and try again","pageNotFound.title":"Access Denied","pageNotFound.message":"You do not have access to this area of the community or it doesn't exist","eventAttending.title":"Responded as Attending","eventAttending.message":"You'll be notified when there's new activity and reminded as the event approaches","eventInterested.title":"Responded as Interested","eventInterested.message":"You'll be notified when there's new activity and reminded as the event approaches","eventNotFound.title":"Event Not Found","eventNotFound.message":"The event you tried to respond to does not exist.","redirectToRelatedPage.title":"Showing Related Content","redirectToRelatedPageForBaseUsers.title":"Showing Related Content","redirectToRelatedPageForBaseUsers.message":"The content you are trying to access is archived","redirectToRelatedPage.message":"The content you are trying to access is archived","relatedUrl.archivalLink.flyoutMessage":"The content you are trying to access is archived \u003clink\u003eView Archived Content\u003c/link\u003e"},"localOverride":false},"CachedAsset:component:custom.widget.tempStatusBanner-en-us-1749167552250":{"__typename":"CachedAsset","id":"component:custom.widget.tempStatusBanner-en-us-1749167552250","value":{"component":{"id":"custom.widget.tempStatusBanner","template":{"id":"tempStatusBanner","markupLanguage":"HTML","style":null,"texts":{},"defaults":{"config":{"applicablePages":[],"description":"","fetchedContent":null,"__typename":"ComponentConfiguration"},"props":[],"__typename":"ComponentProperties"},"components":[{"id":"custom.widget.tempStatusBanner","form":null,"config":null,"props":[],"__typename":"Component"}],"grouping":"TEXTHTML","__typename":"ComponentTemplate"},"properties":{"config":{"applicablePages":[],"description":"","fetchedContent":null,"__typename":"ComponentConfiguration"},"props":[],"__typename":"ComponentProperties"},"form":null,"__typename":"Component","localOverride":false},"globalCss":null,"form":null},"localOverride":false},"CachedAsset:component:custom.widget.HeroBanner-en-us-1749167552250":{"__typename":"CachedAsset","id":"component:custom.widget.HeroBanner-en-us-1749167552250","value":{"component":{"id":"custom.widget.HeroBanner","template":{"id":"HeroBanner","markupLanguage":"REACT","style":null,"texts":{"searchPlaceholderText":"Search this community","followActionText":"Follow","unfollowActionText":"Following","searchOnHoverText":"Please enter your search term(s) and then press return key to complete a search.","blogs.sidebar.pagetitle":"Latest Blogs | Microsoft Tech Community","followThisNode":"Follow this node","unfollowThisNode":"Unfollow this node"},"defaults":{"config":{"applicablePages":[],"description":null,"fetchedContent":null,"__typename":"ComponentConfiguration"},"props":[{"id":"max_items","dataType":"NUMBER","list":false,"defaultValue":"3","label":"Max Items","description":"The maximum number of items to display in the carousel","possibleValues":null,"control":"INPUT","__typename":"PropDefinition"}],"__typename":"ComponentProperties"},"components":[{"id":"custom.widget.HeroBanner","form":{"fields":[{"id":"widgetChooser","validation":null,"noValidation":null,"dataType":"STRING","list":null,"control":null,"defaultValue":null,"label":null,"description":null,"possibleValues":null,"__typename":"FormField"},{"id":"title","validation":null,"noValidation":null,"dataType":"STRING","list":null,"control":null,"defaultValue":null,"label":null,"description":null,"possibleValues":null,"__typename":"FormField"},{"id":"useTitle","validation":null,"noValidation":null,"dataType":"BOOLEAN","list":null,"control":null,"defaultValue":null,"label":null,"description":null,"possibleValues":null,"__typename":"FormField"},{"id":"useBackground","validation":null,"noValidation":null,"dataType":"BOOLEAN","list":null,"control":null,"defaultValue":null,"label":null,"description":null,"possibleValues":null,"__typename":"FormField"},{"id":"widgetVisibility","validation":null,"noValidation":null,"dataType":"STRING","list":null,"control":null,"defaultValue":null,"label":null,"description":null,"possibleValues":null,"__typename":"FormField"},{"id":"moreOptions","validation":null,"noValidation":null,"dataType":"STRING","list":null,"control":null,"defaultValue":null,"label":null,"description":null,"possibleValues":null,"__typename":"FormField"},{"id":"cMax_items","validation":null,"noValidation":null,"dataType":"NUMBER","list":false,"control":"INPUT","defaultValue":"3","label":"Max Items","description":"The maximum number of items to display in the carousel","possibleValues":null,"__typename":"FormField"}],"layout":{"rows":[{"id":"widgetChooserGroup","type":"fieldset","as":null,"items":[{"id":"widgetChooser","className":null,"__typename":"FormFieldRef"}],"props":null,"legend":null,"description":null,"className":null,"viewVariant":null,"toggleState":null,"__typename":"FormFieldset"},{"id":"titleGroup","type":"fieldset","as":null,"items":[{"id":"title","className":null,"__typename":"FormFieldRef"},{"id":"useTitle","className":null,"__typename":"FormFieldRef"}],"props":null,"legend":null,"description":null,"className":null,"viewVariant":null,"toggleState":null,"__typename":"FormFieldset"},{"id":"useBackground","type":"fieldset","as":null,"items":[{"id":"useBackground","className":null,"__typename":"FormFieldRef"}],"props":null,"legend":null,"description":null,"className":null,"viewVariant":null,"toggleState":null,"__typename":"FormFieldset"},{"id":"widgetVisibility","type":"fieldset","as":null,"items":[{"id":"widgetVisibility","className":null,"__typename":"FormFieldRef"}],"props":null,"legend":null,"description":null,"className":null,"viewVariant":null,"toggleState":null,"__typename":"FormFieldset"},{"id":"moreOptionsGroup","type":"fieldset","as":null,"items":[{"id":"moreOptions","className":null,"__typename":"FormFieldRef"}],"props":null,"legend":null,"description":null,"className":null,"viewVariant":null,"toggleState":null,"__typename":"FormFieldset"},{"id":"componentPropsGroup","type":"fieldset","as":null,"items":[{"id":"cMax_items","className":null,"__typename":"FormFieldRef"}],"props":null,"legend":null,"description":null,"className":null,"viewVariant":null,"toggleState":null,"__typename":"FormFieldset"}],"actionButtons":null,"className":"custom_widget_HeroBanner_form","formGroupFieldSeparator":"divider","__typename":"FormLayout"},"__typename":"Form"},"config":null,"props":[],"__typename":"Component"}],"grouping":"CUSTOM","__typename":"ComponentTemplate"},"properties":{"config":{"applicablePages":[],"description":null,"fetchedContent":null,"__typename":"ComponentConfiguration"},"props":[{"id":"max_items","dataType":"NUMBER","list":false,"defaultValue":"3","label":"Max Items","description":"The maximum number of items to display in the carousel","possibleValues":null,"control":"INPUT","__typename":"PropDefinition"}],"__typename":"ComponentProperties"},"form":{"fields":[{"id":"widgetChooser","validation":null,"noValidation":null,"dataType":"STRING","list":null,"control":null,"defaultValue":null,"label":null,"description":null,"possibleValues":null,"__typename":"FormField"},{"id":"title","validation":null,"noValidation":null,"dataType":"STRING","list":null,"control":null,"defaultValue":null,"label":null,"description":null,"possibleValues":null,"__typename":"FormField"},{"id":"useTitle","validation":null,"noValidation":null,"dataType":"BOOLEAN","list":null,"control":null,"defaultValue":null,"label":null,"description":null,"possibleValues":null,"__typename":"FormField"},{"id":"useBackground","validation":null,"noValidation":null,"dataType":"BOOLEAN","list":null,"control":null,"defaultValue":null,"label":null,"description":null,"possibleValues":null,"__typename":"FormField"},{"id":"widgetVisibility","validation":null,"noValidation":null,"dataType":"STRING","list":null,"control":null,"defaultValue":null,"label":null,"description":null,"possibleValues":null,"__typename":"FormField"},{"id":"moreOptions","validation":null,"noValidation":null,"dataType":"STRING","list":null,"control":null,"defaultValue":null,"label":null,"description":null,"possibleValues":null,"__typename":"FormField"},{"id":"cMax_items","validation":null,"noValidation":null,"dataType":"NUMBER","list":false,"control":"INPUT","defaultValue":"3","label":"Max Items","description":"The maximum number of items to display in the carousel","possibleValues":null,"__typename":"FormField"}],"layout":{"rows":[{"id":"widgetChooserGroup","type":"fieldset","as":null,"items":[{"id":"widgetChooser","className":null,"__typename":"FormFieldRef"}],"props":null,"legend":null,"description":null,"className":null,"viewVariant":null,"toggleState":null,"__typename":"FormFieldset"},{"id":"titleGroup","type":"fieldset","as":null,"items":[{"id":"title","className":null,"__typename":"FormFieldRef"},{"id":"useTitle","className":null,"__typename":"FormFieldRef"}],"props":null,"legend":null,"description":null,"className":null,"viewVariant":null,"toggleState":null,"__typename":"FormFieldset"},{"id":"useBackground","type":"fieldset","as":null,"items":[{"id":"useBackground","className":null,"__typename":"FormFieldRef"}],"props":null,"legend":null,"description":null,"className":null,"viewVariant":null,"toggleState":null,"__typename":"FormFieldset"},{"id":"widgetVisibility","type":"fieldset","as":null,"items":[{"id":"widgetVisibility","className":null,"__typename":"FormFieldRef"}],"props":null,"legend":null,"description":null,"className":null,"viewVariant":null,"toggleState":null,"__typename":"FormFieldset"},{"id":"moreOptionsGroup","type":"fieldset","as":null,"items":[{"id":"moreOptions","className":null,"__typename":"FormFieldRef"}],"props":null,"legend":null,"description":null,"className":null,"viewVariant":null,"toggleState":null,"__typename":"FormFieldset"},{"id":"componentPropsGroup","type":"fieldset","as":null,"items":[{"id":"cMax_items","className":null,"__typename":"FormFieldRef"}],"props":null,"legend":null,"description":null,"className":null,"viewVariant":null,"toggleState":null,"__typename":"FormFieldset"}],"actionButtons":null,"className":"custom_widget_HeroBanner_form","formGroupFieldSeparator":"divider","__typename":"FormLayout"},"__typename":"Form"},"__typename":"Component","localOverride":false},"globalCss":null,"form":{"fields":[{"id":"widgetChooser","validation":null,"noValidation":null,"dataType":"STRING","list":null,"control":null,"defaultValue":null,"label":null,"description":null,"possibleValues":null,"__typename":"FormField"},{"id":"title","validation":null,"noValidation":null,"dataType":"STRING","list":null,"control":null,"defaultValue":null,"label":null,"description":null,"possibleValues":null,"__typename":"FormField"},{"id":"useTitle","validation":null,"noValidation":null,"dataType":"BOOLEAN","list":null,"control":null,"defaultValue":null,"label":null,"description":null,"possibleValues":null,"__typename":"FormField"},{"id":"useBackground","validation":null,"noValidation":null,"dataType":"BOOLEAN","list":null,"control":null,"defaultValue":null,"label":null,"description":null,"possibleValues":null,"__typename":"FormField"},{"id":"widgetVisibility","validation":null,"noValidation":null,"dataType":"STRING","list":null,"control":null,"defaultValue":null,"label":null,"description":null,"possibleValues":null,"__typename":"FormField"},{"id":"moreOptions","validation":null,"noValidation":null,"dataType":"STRING","list":null,"control":null,"defaultValue":null,"label":null,"description":null,"possibleValues":null,"__typename":"FormField"},{"id":"cMax_items","validation":null,"noValidation":null,"dataType":"NUMBER","list":false,"control":"INPUT","defaultValue":"3","label":"Max Items","description":"The maximum number of items to display in the carousel","possibleValues":null,"__typename":"FormField"}],"layout":{"rows":[{"id":"widgetChooserGroup","type":"fieldset","as":null,"items":[{"id":"widgetChooser","className":null,"__typename":"FormFieldRef"}],"props":null,"legend":null,"description":null,"className":null,"viewVariant":null,"toggleState":null,"__typename":"FormFieldset"},{"id":"titleGroup","type":"fieldset","as":null,"items":[{"id":"title","className":null,"__typename":"FormFieldRef"},{"id":"useTitle","className":null,"__typename":"FormFieldRef"}],"props":null,"legend":null,"description":null,"className":null,"viewVariant":null,"toggleState":null,"__typename":"FormFieldset"},{"id":"useBackground","type":"fieldset","as":null,"items":[{"id":"useBackground","className":null,"__typename":"FormFieldRef"}],"props":null,"legend":null,"description":null,"className":null,"viewVariant":null,"toggleState":null,"__typename":"FormFieldset"},{"id":"widgetVisibility","type":"fieldset","as":null,"items":[{"id":"widgetVisibility","className":null,"__typename":"FormFieldRef"}],"props":null,"legend":null,"description":null,"className":null,"viewVariant":null,"toggleState":null,"__typename":"FormFieldset"},{"id":"moreOptionsGroup","type":"fieldset","as":null,"items":[{"id":"moreOptions","className":null,"__typename":"FormFieldRef"}],"props":null,"legend":null,"description":null,"className":null,"viewVariant":null,"toggleState":null,"__typename":"FormFieldset"},{"id":"componentPropsGroup","type":"fieldset","as":null,"items":[{"id":"cMax_items","className":null,"__typename":"FormFieldRef"}],"props":null,"legend":null,"description":null,"className":null,"viewVariant":null,"toggleState":null,"__typename":"FormFieldset"}],"actionButtons":null,"className":"custom_widget_HeroBanner_form","formGroupFieldSeparator":"divider","__typename":"FormLayout"},"__typename":"Form"}},"localOverride":false},"CachedAsset:component:custom.widget.MicrosoftFooter-en-us-1749167552250":{"__typename":"CachedAsset","id":"component:custom.widget.MicrosoftFooter-en-us-1749167552250","value":{"component":{"id":"custom.widget.MicrosoftFooter","template":{"id":"MicrosoftFooter","markupLanguage":"HANDLEBARS","style":".context-uhf {\n  min-width: 280px;\n  font-size: 15px;\n  box-sizing: border-box;\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n  \u0026 *,\n  \u0026 *:before,\n  \u0026 *:after {\n    box-sizing: inherit;\n  }\n  a.c-uhff-link {\n    color: #616161;\n    word-break: break-word;\n    text-decoration: none;\n  }\n  \u0026a:link,\n  \u0026a:focus,\n  \u0026a:hover,\n  \u0026a:active,\n  \u0026a:visited {\n    text-decoration: none;\n    color: inherit;\n  }\n  \u0026 div {\n    font-family: 'Segoe UI', SegoeUI, 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  }\n}\n.c-uhff {\n  background: #f2f2f2;\n  margin: -1.5625;\n  width: auto;\n  height: auto;\n}\n.c-uhff-nav {\n  margin: 0 auto;\n  max-width: calc(1600px + 10%);\n  padding: 0 5%;\n  box-sizing: inherit;\n  \u0026:before,\n  \u0026:after {\n    content: ' ';\n    display: table;\n    clear: left;\n  }\n  @media only screen and (max-width: 1083px) {\n    padding-left: 12px;\n  }\n  .c-heading-4 {\n    color: #616161;\n    word-break: break-word;\n    font-size: 15px;\n    line-height: 20px;\n    padding: 36px 0 4px;\n    font-weight: 600;\n  }\n  .c-uhff-nav-row {\n    .c-uhff-nav-group {\n      display: block;\n      float: left;\n      min-height: 1px;\n      vertical-align: text-top;\n      padding: 0 12px;\n      width: 100%;\n      zoom: 1;\n      \u0026:first-child {\n        padding-left: 0;\n        @media only screen and (max-width: 1083px) {\n          padding-left: 12px;\n        }\n      }\n      @media only screen and (min-width: 540px) and (max-width: 1082px) {\n        width: 33.33333%;\n      }\n      @media only screen and (min-width: 1083px) {\n        width: 16.6666666667%;\n      }\n      ul.c-list.f-bare {\n        font-size: 11px;\n        line-height: 16px;\n        margin-top: 0;\n        margin-bottom: 0;\n        padding-left: 0;\n        list-style-type: none;\n        li {\n          word-break: break-word;\n          padding: 8px 0;\n          margin: 0;\n        }\n      }\n    }\n  }\n}\n.c-uhff-base {\n  background: #f2f2f2;\n  margin: 0 auto;\n  max-width: calc(1600px + 10%);\n  padding: 30px 5% 16px;\n  \u0026:before,\n  \u0026:after {\n    content: ' ';\n    display: table;\n  }\n  \u0026:after {\n    clear: both;\n  }\n  a.c-uhff-ccpa {\n    font-size: 11px;\n    line-height: 16px;\n    float: left;\n    margin: 3px 0;\n  }\n  a.c-uhff-ccpa:hover {\n    text-decoration: underline;\n  }\n  ul.c-list {\n    font-size: 11px;\n    line-height: 16px;\n    float: right;\n    margin: 3px 0;\n    color: #616161;\n    li {\n      padding: 0 24px 4px 0;\n      display: inline-block;\n    }\n  }\n  .c-list.f-bare {\n    padding-left: 0;\n    list-style-type: none;\n  }\n  @media only screen and (max-width: 1083px) {\n    display: flex;\n    flex-wrap: wrap;\n    padding: 30px 24px 16px;\n  }\n}\n\n.social-share {\n  position: fixed;\n  top: 60%;\n  transform: translateY(-50%);\n  left: 0;\n  z-index: 1000;\n}\n\n.sharing-options {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: block;\n  flex-direction: column;\n  background-color: white;\n  width: 50px;\n  border-radius: 0px 7px 7px 0px;\n}\n.linkedin-icon {\n  border-top-right-radius: 7px;\n}\n.linkedin-icon:hover {\n  border-radius: 0;\n}\n\n.social-share-email-image:hover {\n  border-radius: 0;\n}\n\n.social-link-footer:hover .linkedin-icon {\n  border-radius: 0;\n}\n.social-link-footer:hover .social-share-email-image {\n  border-radius: 0;\n}\n\n.social-link-footer img {\n  width: 30px;\n  height: auto;\n  transition: filter 0.3s ease;\n}\n\n.social-share-list {\n  width: 50px;\n}\n.social-share-rss-image {\n  width: 30px;\n  height: auto;\n  transition: filter 0.3s ease;\n}\n.sharing-options li {\n  width: 50px;\n  height: 50px;\n  padding: 8px;\n  box-sizing: border-box;\n  border: 2px solid white; \n  display: inline-block;\n  text-align: center;\n  opacity: 1;\n  visibility: visible;\n  transition: border 0.3s ease; /* Smooth transition effect */\n  border-left: none;\n  border-bottom: none; /* Apply bottom border to only last item */\n}\n\n.social-share-list-linkedin {\n  background-color: #0474b4;\n  border-top-right-radius: 5px; /* Rounded top right corner of first item*/\n}\n.social-share-list-facebook {\n  background-color: #3c5c9c;\n}\n.social-share-list-xicon {\n  background-color: #000;\n}\n.social-share-list-reddit {\n  background-color: #fc4404;\n}\n.social-share-list-bluesky {\n  background-color: #f0f2f5;\n}\n.social-share-list-rss {\n  background-color: #ec7b1c;\n}\n.social-share-list-mail {\n  background-color: #848484;  \n  border-bottom-right-radius: 5px; /* Rounded bottom right corner of last item*/\n}\n.sharing-options li.social-share-list-mail {\n  border-bottom: 2px solid white;  /* Add bottom border only to the last item */\n  height: 52px; /* Increase last child height to make in align with the hover label */\n}\n.x-icon {\n  filter: invert(100%);\n  transition: filter 0.3s ease;\n  width: 20px !important;\n  height: auto;\n  padding-top: 5px !important;\n}\n.bluesky-icon {\n  filter: invert(20%) sepia(100%) saturate(3000%) hue-rotate(180deg);\n  transition: filter 0.3s ease;\n  padding-top: 5px !important;\n  width: 25px !important;\n}\n\n.share-icon {\n  border: 2px solid transparent;\n  display: inline-block;\n  position: relative;\n}\n\n.sharing-options li:hover {\n  border: 2px solid white; \n  border-left: none;\n  border-bottom: none;\n  border-radius: 0px;\n}\n.sharing-options li.social-share-list-mail:hover {\n  border-bottom: 2px solid white;  /* Add bottom border only to the last item */\n}\n\n.sharing-options li:hover .label {\n  opacity: 1;\n  visibility: visible;\n  border: 2px solid white;\n  box-sizing: border-box;\n  border-left: none;\n}\n\n.label {\n  position: absolute;\n  left: 100%;\n  white-space: nowrap;\n  opacity: 0;\n  visibility: hidden;\n  transition: all 0.2s ease;\n  color: white;\n  border-radius: 0 10 0 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  height: 52px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px 12px 15px 8px;\n  border: 2px solid white;\n}\n.linkedin {\n  background-color: #0474b4;\n  border-top-right-radius: 5px; /* Rounded top right corner of first item*/\n}\n.facebook {\n  background-color: #3c5c9c;\n}\n.twitter {\n  background-color: black;\n  color: white;\n}\n.reddit {\n  background-color: #fc4404;\n}\n.mail {\n  background-color: #848484;\n  border-bottom-right-radius: 5px; /* Rounded bottom right corner of last item*/\n}\n.bluesky {\n  background-color: #f0f2f5;\n  color: black;\n}\n.rss {\n  background-color: #ec7b1c;\n}\n\n@media (max-width: 991px) {\n  .social-share {\n    display: none;\n  }\n}\n","texts":{"New tab":"What's New","New 1":"Surface Laptop Studio 2","New 2":"Surface Laptop Go 3","New 3":"Surface Pro 9","New 4":"Surface Laptop 5","New 5":"Surface Studio 2+","New 6":"Copilot in Windows","New 7":"Microsoft 365","New 8":"Windows 11 apps","Store tab":"Microsoft Store","Store 1":"Account Profile","Store 2":"Download Center","Store 3":"Microsoft Store Support","Store 4":"Returns","Store 5":"Order tracking","Store 6":"Certified Refurbished","Store 7":"Microsoft Store Promise","Store 8":"Flexible Payments","Education tab":"Education","Edu 1":"Microsoft in education","Edu 2":"Devices for education","Edu 3":"Microsoft Teams for Education","Edu 4":"Microsoft 365 Education","Edu 5":"How to buy for your school","Edu 6":"Educator Training and development","Edu 7":"Deals for students and parents","Edu 8":"Azure for students","Business tab":"Business","Bus 1":"Microsoft Cloud","Bus 2":"Microsoft Security","Bus 3":"Dynamics 365","Bus 4":"Microsoft 365","Bus 5":"Microsoft Power Platform","Bus 6":"Microsoft Teams","Bus 7":"Microsoft Industry","Bus 8":"Small Business","Developer tab":"Developer \u0026 IT","Dev 1":"Azure","Dev 2":"Developer Center","Dev 3":"Documentation","Dev 4":"Microsoft Learn","Dev 5":"Microsoft Tech Community","Dev 6":"Azure Marketplace","Dev 7":"AppSource","Dev 8":"Visual Studio","Company tab":"Company","Com 1":"Careers","Com 2":"About Microsoft","Com 3":"Company News","Com 4":"Privacy at Microsoft","Com 5":"Investors","Com 6":"Diversity and inclusion","Com 7":"Accessiblity","Com 8":"Sustainibility"},"defaults":{"config":{"applicablePages":[],"description":"The Microsoft Footer","fetchedContent":null,"__typename":"ComponentConfiguration"},"props":[],"__typename":"ComponentProperties"},"components":[{"id":"custom.widget.MicrosoftFooter","form":null,"config":null,"props":[],"__typename":"Component"}],"grouping":"CUSTOM","__typename":"ComponentTemplate"},"properties":{"config":{"applicablePages":[],"description":"The Microsoft Footer","fetchedContent":null,"__typename":"ComponentConfiguration"},"props":[],"__typename":"ComponentProperties"},"form":null,"__typename":"Component","localOverride":false},"globalCss":{"css":".custom_widget_MicrosoftFooter_context-uhf_yuh6w_1 {\n  min-width: 17.5rem;\n  font-size: 0.9375rem;\n  box-sizing: border-box;\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n  \u0026 *,\n  \u0026 *:before,\n  \u0026 *:after {\n    box-sizing: inherit;\n  }\n  a.custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12 {\n    color: #616161;\n    word-break: break-word;\n    text-decoration: none;\n  }\n  \u0026a:link,\n  \u0026a:focus,\n  \u0026a:hover,\n  \u0026a:active,\n  \u0026a:visited {\n    text-decoration: none;\n    color: inherit;\n  }\n  \u0026 div {\n    font-family: 'Segoe UI', SegoeUI, 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  }\n}\n.custom_widget_MicrosoftFooter_c-uhff_yuh6w_12 {\n  background: #f2f2f2;\n  margin: -1.5625;\n  width: auto;\n  height: auto;\n}\n.custom_widget_MicrosoftFooter_c-uhff-nav_yuh6w_35 {\n  margin: 0 auto;\n  max-width: calc(100rem + 10%);\n  padding: 0 5%;\n  box-sizing: inherit;\n  \u0026:before,\n  \u0026:after {\n    content: ' ';\n    display: table;\n    clear: left;\n  }\n  @media only screen and (max-width: 1083px) {\n    padding-left: 0.75rem;\n  }\n  .custom_widget_MicrosoftFooter_c-heading-4_yuh6w_49 {\n    color: #616161;\n    word-break: break-word;\n    font-size: 0.9375rem;\n    line-height: 1.25rem;\n    padding: 2.25rem 0 0.25rem;\n    font-weight: 600;\n  }\n  .custom_widget_MicrosoftFooter_c-uhff-nav-row_yuh6w_57 {\n    .custom_widget_MicrosoftFooter_c-uhff-nav-group_yuh6w_58 {\n      display: block;\n      float: left;\n      min-height: 0.0625rem;\n      vertical-align: text-top;\n      padding: 0 0.75rem;\n      width: 100%;\n      zoom: 1;\n      \u0026:first-child {\n        padding-left: 0;\n        @media only screen and (max-width: 1083px) {\n          padding-left: 0.75rem;\n        }\n      }\n      @media only screen and (min-width: 540px) and (max-width: 1082px) {\n        width: 33.33333%;\n      }\n      @media only screen and (min-width: 1083px) {\n        width: 16.6666666667%;\n      }\n      ul.custom_widget_MicrosoftFooter_c-list_yuh6w_78.custom_widget_MicrosoftFooter_f-bare_yuh6w_78 {\n        font-size: 0.6875rem;\n        line-height: 1rem;\n        margin-top: 0;\n        margin-bottom: 0;\n        padding-left: 0;\n        list-style-type: none;\n        li {\n          word-break: break-word;\n          padding: 0.5rem 0;\n          margin: 0;\n        }\n      }\n    }\n  }\n}\n.custom_widget_MicrosoftFooter_c-uhff-base_yuh6w_94 {\n  background: #f2f2f2;\n  margin: 0 auto;\n  max-width: calc(100rem + 10%);\n  padding: 1.875rem 5% 1rem;\n  \u0026:before,\n  \u0026:after {\n    content: ' ';\n    display: table;\n  }\n  \u0026:after {\n    clear: both;\n  }\n  a.custom_widget_MicrosoftFooter_c-uhff-ccpa_yuh6w_107 {\n    font-size: 0.6875rem;\n    line-height: 1rem;\n    float: left;\n    margin: 0.1875rem 0;\n  }\n  a.custom_widget_MicrosoftFooter_c-uhff-ccpa_yuh6w_107:hover {\n    text-decoration: underline;\n  }\n  ul.custom_widget_MicrosoftFooter_c-list_yuh6w_78 {\n    font-size: 0.6875rem;\n    line-height: 1rem;\n    float: right;\n    margin: 0.1875rem 0;\n    color: #616161;\n    li {\n      padding: 0 1.5rem 0.25rem 0;\n      display: inline-block;\n    }\n  }\n  .custom_widget_MicrosoftFooter_c-list_yuh6w_78.custom_widget_MicrosoftFooter_f-bare_yuh6w_78 {\n    padding-left: 0;\n    list-style-type: none;\n  }\n  @media only screen and (max-width: 1083px) {\n    display: flex;\n    flex-wrap: wrap;\n    padding: 1.875rem 1.5rem 1rem;\n  }\n}\n.custom_widget_MicrosoftFooter_social-share_yuh6w_138 {\n  position: fixed;\n  top: 60%;\n  transform: translateY(-50%);\n  left: 0;\n  z-index: 1000;\n}\n.custom_widget_MicrosoftFooter_sharing-options_yuh6w_146 {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: block;\n  flex-direction: column;\n  background-color: white;\n  width: 3.125rem;\n  border-radius: 0 0.4375rem 0.4375rem 0;\n}\n.custom_widget_MicrosoftFooter_linkedin-icon_yuh6w_156 {\n  border-top-right-radius: 7px;\n}\n.custom_widget_MicrosoftFooter_linkedin-icon_yuh6w_156:hover {\n  border-radius: 0;\n}\n.custom_widget_MicrosoftFooter_social-share-email-image_yuh6w_163:hover {\n  border-radius: 0;\n}\n.custom_widget_MicrosoftFooter_social-link-footer_yuh6w_167:hover .custom_widget_MicrosoftFooter_linkedin-icon_yuh6w_156 {\n  border-radius: 0;\n}\n.custom_widget_MicrosoftFooter_social-link-footer_yuh6w_167:hover .custom_widget_MicrosoftFooter_social-share-email-image_yuh6w_163 {\n  border-radius: 0;\n}\n.custom_widget_MicrosoftFooter_social-link-footer_yuh6w_167 img {\n  width: 1.875rem;\n  height: auto;\n  transition: filter 0.3s ease;\n}\n.custom_widget_MicrosoftFooter_social-share-list_yuh6w_180 {\n  width: 3.125rem;\n}\n.custom_widget_MicrosoftFooter_social-share-rss-image_yuh6w_183 {\n  width: 1.875rem;\n  height: auto;\n  transition: filter 0.3s ease;\n}\n.custom_widget_MicrosoftFooter_sharing-options_yuh6w_146 li {\n  width: 3.125rem;\n  height: 3.125rem;\n  padding: 0.5rem;\n  box-sizing: border-box;\n  border: 2px solid white; \n  display: inline-block;\n  text-align: center;\n  opacity: 1;\n  visibility: visible;\n  transition: border 0.3s ease; /* Smooth transition effect */\n  border-left: none;\n  border-bottom: none; /* Apply bottom border to only last item */\n}\n.custom_widget_MicrosoftFooter_social-share-list-linkedin_yuh6w_203 {\n  background-color: #0474b4;\n  border-top-right-radius: 5px; /* Rounded top right corner of first item*/\n}\n.custom_widget_MicrosoftFooter_social-share-list-facebook_yuh6w_207 {\n  background-color: #3c5c9c;\n}\n.custom_widget_MicrosoftFooter_social-share-list-xicon_yuh6w_210 {\n  background-color: #000;\n}\n.custom_widget_MicrosoftFooter_social-share-list-reddit_yuh6w_213 {\n  background-color: #fc4404;\n}\n.custom_widget_MicrosoftFooter_social-share-list-bluesky_yuh6w_216 {\n  background-color: #f0f2f5;\n}\n.custom_widget_MicrosoftFooter_social-share-list-rss_yuh6w_219 {\n  background-color: #ec7b1c;\n}\n.custom_widget_MicrosoftFooter_social-share-list-mail_yuh6w_222 {\n  background-color: #848484;  \n  border-bottom-right-radius: 5px; /* Rounded bottom right corner of last item*/\n}\n.custom_widget_MicrosoftFooter_sharing-options_yuh6w_146 li.custom_widget_MicrosoftFooter_social-share-list-mail_yuh6w_222 {\n  border-bottom: 2px solid white;  /* Add bottom border only to the last item */\n  height: 3.25rem; /* Increase last child height to make in align with the hover label */\n}\n.custom_widget_MicrosoftFooter_x-icon_yuh6w_230 {\n  filter: invert(100%);\n  transition: filter 0.3s ease;\n  width: 1.25rem !important;\n  height: auto;\n  padding-top: 0.3125rem !important;\n}\n.custom_widget_MicrosoftFooter_bluesky-icon_yuh6w_237 {\n  filter: invert(20%) sepia(100%) saturate(3000%) hue-rotate(180deg);\n  transition: filter 0.3s ease;\n  padding-top: 0.3125rem !important;\n  width: 1.5625rem !important;\n}\n.custom_widget_MicrosoftFooter_share-icon_yuh6w_244 {\n  border: 2px solid transparent;\n  display: inline-block;\n  position: relative;\n}\n.custom_widget_MicrosoftFooter_sharing-options_yuh6w_146 li:hover {\n  border: 2px solid white; \n  border-left: none;\n  border-bottom: none;\n  border-radius: 0;\n}\n.custom_widget_MicrosoftFooter_sharing-options_yuh6w_146 li.custom_widget_MicrosoftFooter_social-share-list-mail_yuh6w_222:hover {\n  border-bottom: 2px solid white;  /* Add bottom border only to the last item */\n}\n.custom_widget_MicrosoftFooter_sharing-options_yuh6w_146 li:hover .custom_widget_MicrosoftFooter_label_yuh6w_260 {\n  opacity: 1;\n  visibility: visible;\n  border: 2px solid white;\n  box-sizing: border-box;\n  border-left: none;\n}\n.custom_widget_MicrosoftFooter_label_yuh6w_260 {\n  position: absolute;\n  left: 100%;\n  white-space: nowrap;\n  opacity: 0;\n  visibility: hidden;\n  transition: all 0.2s ease;\n  color: white;\n  border-radius: 0 10 0 0.625rem;\n  top: 50%;\n  transform: translateY(-50%);\n  height: 3.25rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.625rem 0.75rem 0.9375rem 0.5rem;\n  border: 2px solid white;\n}\n.custom_widget_MicrosoftFooter_linkedin_yuh6w_156 {\n  background-color: #0474b4;\n  border-top-right-radius: 5px; /* Rounded top right corner of first item*/\n}\n.custom_widget_MicrosoftFooter_facebook_yuh6w_290 {\n  background-color: #3c5c9c;\n}\n.custom_widget_MicrosoftFooter_twitter_yuh6w_293 {\n  background-color: black;\n  color: white;\n}\n.custom_widget_MicrosoftFooter_reddit_yuh6w_297 {\n  background-color: #fc4404;\n}\n.custom_widget_MicrosoftFooter_mail_yuh6w_300 {\n  background-color: #848484;\n  border-bottom-right-radius: 5px; /* Rounded bottom right corner of last item*/\n}\n.custom_widget_MicrosoftFooter_bluesky_yuh6w_237 {\n  background-color: #f0f2f5;\n  color: black;\n}\n.custom_widget_MicrosoftFooter_rss_yuh6w_308 {\n  background-color: #ec7b1c;\n}\n@media (max-width: 991px) {\n  .custom_widget_MicrosoftFooter_social-share_yuh6w_138 {\n    display: none;\n  }\n}\n","tokens":{"context-uhf":"custom_widget_MicrosoftFooter_context-uhf_yuh6w_1","c-uhff-link":"custom_widget_MicrosoftFooter_c-uhff-link_yuh6w_12","c-uhff":"custom_widget_MicrosoftFooter_c-uhff_yuh6w_12","c-uhff-nav":"custom_widget_MicrosoftFooter_c-uhff-nav_yuh6w_35","c-heading-4":"custom_widget_MicrosoftFooter_c-heading-4_yuh6w_49","c-uhff-nav-row":"custom_widget_MicrosoftFooter_c-uhff-nav-row_yuh6w_57","c-uhff-nav-group":"custom_widget_MicrosoftFooter_c-uhff-nav-group_yuh6w_58","c-list":"custom_widget_MicrosoftFooter_c-list_yuh6w_78","f-bare":"custom_widget_MicrosoftFooter_f-bare_yuh6w_78","c-uhff-base":"custom_widget_MicrosoftFooter_c-uhff-base_yuh6w_94","c-uhff-ccpa":"custom_widget_MicrosoftFooter_c-uhff-ccpa_yuh6w_107","social-share":"custom_widget_MicrosoftFooter_social-share_yuh6w_138","sharing-options":"custom_widget_MicrosoftFooter_sharing-options_yuh6w_146","linkedin-icon":"custom_widget_MicrosoftFooter_linkedin-icon_yuh6w_156","social-share-email-image":"custom_widget_MicrosoftFooter_social-share-email-image_yuh6w_163","social-link-footer":"custom_widget_MicrosoftFooter_social-link-footer_yuh6w_167","social-share-list":"custom_widget_MicrosoftFooter_social-share-list_yuh6w_180","social-share-rss-image":"custom_widget_MicrosoftFooter_social-share-rss-image_yuh6w_183","social-share-list-linkedin":"custom_widget_MicrosoftFooter_social-share-list-linkedin_yuh6w_203","social-share-list-facebook":"custom_widget_MicrosoftFooter_social-share-list-facebook_yuh6w_207","social-share-list-xicon":"custom_widget_MicrosoftFooter_social-share-list-xicon_yuh6w_210","social-share-list-reddit":"custom_widget_MicrosoftFooter_social-share-list-reddit_yuh6w_213","social-share-list-bluesky":"custom_widget_MicrosoftFooter_social-share-list-bluesky_yuh6w_216","social-share-list-rss":"custom_widget_MicrosoftFooter_social-share-list-rss_yuh6w_219","social-share-list-mail":"custom_widget_MicrosoftFooter_social-share-list-mail_yuh6w_222","x-icon":"custom_widget_MicrosoftFooter_x-icon_yuh6w_230","bluesky-icon":"custom_widget_MicrosoftFooter_bluesky-icon_yuh6w_237","share-icon":"custom_widget_MicrosoftFooter_share-icon_yuh6w_244","label":"custom_widget_MicrosoftFooter_label_yuh6w_260","linkedin":"custom_widget_MicrosoftFooter_linkedin_yuh6w_156","facebook":"custom_widget_MicrosoftFooter_facebook_yuh6w_290","twitter":"custom_widget_MicrosoftFooter_twitter_yuh6w_293","reddit":"custom_widget_MicrosoftFooter_reddit_yuh6w_297","mail":"custom_widget_MicrosoftFooter_mail_yuh6w_300","bluesky":"custom_widget_MicrosoftFooter_bluesky_yuh6w_237","rss":"custom_widget_MicrosoftFooter_rss_yuh6w_308"}},"form":null},"localOverride":false},"CachedAsset:text:en_US-components/community/Breadcrumb-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-components/community/Breadcrumb-1747867729000","value":{"navLabel":"Breadcrumbs","dropdown":"Additional parent page navigation"},"localOverride":false},"CachedAsset:text:en_US-components/messages/MessageBanner-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-components/messages/MessageBanner-1747867729000","value":{"messageMarkedAsSpam":"This post has been marked as spam","messageMarkedAsSpam@board:TKB":"This article has been marked as spam","messageMarkedAsSpam@board:BLOG":"This post has been marked as spam","messageMarkedAsSpam@board:FORUM":"This discussion has been marked as spam","messageMarkedAsSpam@board:OCCASION":"This event has been marked as spam","messageMarkedAsSpam@board:IDEA":"This idea has been marked as spam","manageSpam":"Manage Spam","messageMarkedAsAbuse":"This post has been marked as abuse","messageMarkedAsAbuse@board:TKB":"This article has been marked as abuse","messageMarkedAsAbuse@board:BLOG":"This post has been marked as abuse","messageMarkedAsAbuse@board:FORUM":"This discussion has been marked as abuse","messageMarkedAsAbuse@board:OCCASION":"This event has been marked as abuse","messageMarkedAsAbuse@board:IDEA":"This idea has been marked as abuse","preModCommentAuthorText":"This comment will be published as soon as it is approved","preModCommentModeratorText":"This comment is awaiting moderation","messageMarkedAsOther":"This post has been rejected due to other reasons","messageMarkedAsOther@board:TKB":"This article has been rejected due to other reasons","messageMarkedAsOther@board:BLOG":"This post has been rejected due to other reasons","messageMarkedAsOther@board:FORUM":"This discussion has been rejected due to other reasons","messageMarkedAsOther@board:OCCASION":"This event has been rejected due to other reasons","messageMarkedAsOther@board:IDEA":"This idea has been rejected due to other reasons","messageArchived":"This post was archived on {date}","relatedUrl":"View Related Content","relatedContentText":"Showing related content","archivedContentLink":"View Archived Content"},"localOverride":false},"CachedAsset:text:en_US-components/messages/MessageView/MessageViewStandard-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-components/messages/MessageView/MessageViewStandard-1747867729000","value":{"anonymous":"Anonymous","author":"\u003ca\u003e{messageAuthorLogin}\u003c/a\u003e","authorBy":"\u003ca\u003e{messageAuthorLogin}\u003c/a\u003e","board":"\u003ca\u003e{messageBoardTitle}\u003c/a\u003e","replyToUser":" to {parentAuthor}","showMoreReplies":"Show More","replyText":"Reply","repliesText":"Replies","markedAsSolved":"Marked as Solution","movedMessagePlaceholder.BLOG":"{count, plural, =0 {This comment has been} other {These comments have been} }","movedMessagePlaceholder.TKB":"{count, plural, =0 {This comment has been} other {These comments have been} }","movedMessagePlaceholder.FORUM":"{count, plural, =0 {This reply has been} other {These replies have been} }","movedMessagePlaceholder.IDEA":"{count, plural, =0 {This comment has been} other {These comments have been} }","movedMessagePlaceholder.OCCASION":"{count, plural, =0 {This comment has been} other {These comments have been} }","movedMessagePlaceholderUrlText":"moved.","messageStatus":"Status: ","statusChanged":"Status changed: {previousStatus} to {currentStatus}","statusAdded":"Status added: {status}","statusRemoved":"Status removed: {status}","labelExpand":"expand replies","labelCollapse":"collapse replies","unhelpfulReason.reason1":"Content is outdated","unhelpfulReason.reason2":"Article is missing information","unhelpfulReason.reason3":"Content is for a different Product","unhelpfulReason.reason4":"Doesn't match what I was searching for"},"localOverride":false},"CachedAsset:text:en_US-components/messages/MessageReplyCallToAction-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-components/messages/MessageReplyCallToAction-1747867729000","value":{"leaveReply":"Leave a reply...","leaveReply@board:BLOG@message:root":"Leave a comment...","leaveReply@board:TKB@message:root":"Leave a comment...","leaveReply@board:IDEA@message:root":"Leave a comment...","leaveReply@board:OCCASION@message:root":"Leave a comment...","repliesTurnedOff.FORUM":"Replies are turned off for this topic","repliesTurnedOff.BLOG":"Comments are turned off for this topic","repliesTurnedOff.TKB":"Comments are turned off for this topic","repliesTurnedOff.IDEA":"Comments are turned off for this topic","repliesTurnedOff.OCCASION":"Comments are turned off for this topic","infoText":"Stop poking me!"},"localOverride":false},"Category:category:Exchange":{"__typename":"Category","id":"category:Exchange","categoryPolicies":{"__typename":"CategoryPolicies","canReadNode":{"__typename":"PolicyResult","failureReason":null}}},"Category:category:Outlook":{"__typename":"Category","id":"category:Outlook","categoryPolicies":{"__typename":"CategoryPolicies","canReadNode":{"__typename":"PolicyResult","failureReason":null}}},"Category:category:Community-Info-Center":{"__typename":"Category","id":"category:Community-Info-Center","categoryPolicies":{"__typename":"CategoryPolicies","canReadNode":{"__typename":"PolicyResult","failureReason":null}}},"Category:category:EducationSector":{"__typename":"Category","id":"category:EducationSector","categoryPolicies":{"__typename":"CategoryPolicies","canReadNode":{"__typename":"PolicyResult","failureReason":null}}},"Category:category:DrivingAdoption":{"__typename":"Category","id":"category:DrivingAdoption","categoryPolicies":{"__typename":"CategoryPolicies","canReadNode":{"__typename":"PolicyResult","failureReason":null}}},"Category:category:Azure":{"__typename":"Category","id":"category:Azure","categoryPolicies":{"__typename":"CategoryPolicies","canReadNode":{"__typename":"PolicyResult","failureReason":null}}},"Category:category:Windows-Server":{"__typename":"Category","id":"category:Windows-Server","categoryPolicies":{"__typename":"CategoryPolicies","canReadNode":{"__typename":"PolicyResult","failureReason":null}}},"Category:category:MicrosoftTeams":{"__typename":"Category","id":"category:MicrosoftTeams","categoryPolicies":{"__typename":"CategoryPolicies","canReadNode":{"__typename":"PolicyResult","failureReason":null}}},"Category:category:PublicSector":{"__typename":"Category","id":"category:PublicSector","categoryPolicies":{"__typename":"CategoryPolicies","canReadNode":{"__typename":"PolicyResult","failureReason":null}}},"Category:category:microsoft365":{"__typename":"Category","id":"category:microsoft365","categoryPolicies":{"__typename":"CategoryPolicies","canReadNode":{"__typename":"PolicyResult","failureReason":null}}},"Category:category:IoT":{"__typename":"Category","id":"category:IoT","categoryPolicies":{"__typename":"CategoryPolicies","canReadNode":{"__typename":"PolicyResult","failureReason":null}}},"Category:category:HealthcareAndLifeSciences":{"__typename":"Category","id":"category:HealthcareAndLifeSciences","categoryPolicies":{"__typename":"CategoryPolicies","canReadNode":{"__typename":"PolicyResult","failureReason":null}}},"Category:category:ITOpsTalk":{"__typename":"Category","id":"category:ITOpsTalk","categoryPolicies":{"__typename":"CategoryPolicies","canReadNode":{"__typename":"PolicyResult","failureReason":null}}},"Category:category:MicrosoftLearn":{"__typename":"Category","id":"category:MicrosoftLearn","categoryPolicies":{"__typename":"CategoryPolicies","canReadNode":{"__typename":"PolicyResult","failureReason":null}}},"Blog:board:MicrosoftLearnBlog":{"__typename":"Blog","id":"board:MicrosoftLearnBlog","blogPolicies":{"__typename":"BlogPolicies","canReadNode":{"__typename":"PolicyResult","failureReason":null}},"boardPolicies":{"__typename":"BoardPolicies","canReadNode":{"__typename":"PolicyResult","failureReason":null}}},"Category:category:AI":{"__typename":"Category","id":"category:AI","categoryPolicies":{"__typename":"CategoryPolicies","canReadNode":{"__typename":"PolicyResult","failureReason":null}}},"Category:category:MicrosoftMechanics":{"__typename":"Category","id":"category:MicrosoftMechanics","categoryPolicies":{"__typename":"CategoryPolicies","canReadNode":{"__typename":"PolicyResult","failureReason":null}}},"Category:category:MicrosoftforNonprofits":{"__typename":"Category","id":"category:MicrosoftforNonprofits","categoryPolicies":{"__typename":"CategoryPolicies","canReadNode":{"__typename":"PolicyResult","failureReason":null}}},"Category:category:StartupsatMicrosoft":{"__typename":"Category","id":"category:StartupsatMicrosoft","categoryPolicies":{"__typename":"CategoryPolicies","canReadNode":{"__typename":"PolicyResult","failureReason":null}}},"Category:category:PartnerCommunity":{"__typename":"Category","id":"category:PartnerCommunity","categoryPolicies":{"__typename":"CategoryPolicies","canReadNode":{"__typename":"PolicyResult","failureReason":null}}},"Category:category:Microsoft365Copilot":{"__typename":"Category","id":"category:Microsoft365Copilot","categoryPolicies":{"__typename":"CategoryPolicies","canReadNode":{"__typename":"PolicyResult","failureReason":null}}},"Category:category:Windows":{"__typename":"Category","id":"category:Windows","categoryPolicies":{"__typename":"CategoryPolicies","canReadNode":{"__typename":"PolicyResult","failureReason":null}}},"Category:category:Content_Management":{"__typename":"Category","id":"category:Content_Management","categoryPolicies":{"__typename":"CategoryPolicies","canReadNode":{"__typename":"PolicyResult","failureReason":null}}},"Category:category:microsoftintune":{"__typename":"Category","id":"category:microsoftintune","categoryPolicies":{"__typename":"CategoryPolicies","canReadNode":{"__typename":"PolicyResult","failureReason":null}}},"CachedAsset:text:en_US-components/community/Navbar-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-components/community/Navbar-1747867729000","value":{"community":"Community Home","inbox":"Inbox","manageContent":"Manage Content","tos":"Terms of Service","forgotPassword":"Forgot Password","themeEditor":"Theme Editor","edit":"Edit Navigation Bar","skipContent":"Skip to content","gxcuf89792":"Tech Community","external-1":"Events","s-m-b":"Nonprofit Community","windows-server":"Windows Server","education-sector":"Education Sector","driving-adoption":"Driving Adoption","Common-content_management-link":"Content Management","microsoft-learn":"Microsoft Learn","s-q-l-server":"Content Management","partner-community":"Microsoft Partner Community","microsoft365":"Microsoft 365","external-9":".NET","external-8":"Teams","external-7":"Github","products-services":"Products","external-6":"Power Platform","communities-1":"Topics","external-5":"Microsoft Security","planner":"Outlook","external-4":"Microsoft 365","external-3":"Dynamics 365","azure":"Azure","healthcare-and-life-sciences":"Healthcare and Life Sciences","external-2":"Azure","microsoft-mechanics":"Microsoft Mechanics","microsoft-learn-1":"Community","external-10":"Learning Room Directory","microsoft-learn-blog":"Blog","windows":"Windows","i-t-ops-talk":"ITOps Talk","external-link-1":"View All","microsoft-securityand-compliance":"Microsoft Security","public-sector":"Public Sector","community-info-center":"Lounge","external-link-2":"View All","microsoft-teams":"Microsoft Teams","external":"Blogs","microsoft-endpoint-manager":"Microsoft Intune","startupsat-microsoft":"Startups at Microsoft","exchange":"Exchange","a-i":"AI and Machine Learning","io-t":"Internet of Things (IoT)","Common-microsoft365-copilot-link":"Microsoft 365 Copilot","outlook":"Microsoft 365 Copilot","external-link":"Community Hubs","communities":"Products"},"localOverride":false},"CachedAsset:text:en_US-components/community/NavbarHamburgerDropdown-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-components/community/NavbarHamburgerDropdown-1747867729000","value":{"hamburgerLabel":"Side Menu"},"localOverride":false},"CachedAsset:text:en_US-components/community/BrandLogo-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-components/community/BrandLogo-1747867729000","value":{"logoAlt":"Khoros","themeLogoAlt":"Brand Logo"},"localOverride":false},"CachedAsset:text:en_US-components/community/NavbarTextLinks-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-components/community/NavbarTextLinks-1747867729000","value":{"more":"More"},"localOverride":false},"CachedAsset:text:en_US-components/authentication/AuthenticationLink-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-components/authentication/AuthenticationLink-1747867729000","value":{"title.login":"Sign In","title.registration":"Register","title.forgotPassword":"Forgot Password","title.multiAuthLogin":"Sign In"},"localOverride":false},"CachedAsset:text:en_US-components/nodes/NodeLink-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-components/nodes/NodeLink-1747867729000","value":{"place":"Place {name}"},"localOverride":false},"CachedAsset:text:en_US-components/messages/MessageCoverImage-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-components/messages/MessageCoverImage-1747867729000","value":{"coverImageTitle":"Cover Image"},"localOverride":false},"CachedAsset:text:en_US-shared/client/components/nodes/NodeTitle-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-shared/client/components/nodes/NodeTitle-1747867729000","value":{"nodeTitle":"{nodeTitle, select, community {Community} other {{nodeTitle}}} "},"localOverride":false},"CachedAsset:text:en_US-components/messages/MessageTimeToRead-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-components/messages/MessageTimeToRead-1747867729000","value":{"minReadText":"{min} MIN READ"},"localOverride":false},"CachedAsset:text:en_US-components/messages/MessageSubject-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-components/messages/MessageSubject-1747867729000","value":{"noSubject":"(no subject)"},"localOverride":false},"CachedAsset:text:en_US-components/users/UserLink-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-components/users/UserLink-1747867729000","value":{"authorName":"View Profile: {author}","anonymous":"Anonymous"},"localOverride":false},"CachedAsset:text:en_US-shared/client/components/users/UserRank-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-shared/client/components/users/UserRank-1747867729000","value":{"rankName":"{rankName}","userRank":"Author rank {rankName}"},"localOverride":false},"CachedAsset:text:en_US-components/messages/MessageTime-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-components/messages/MessageTime-1747867729000","value":{"postTime":"Published: {time}","lastPublishTime":"Last Update: {time}","conversation.lastPostingActivityTime":"Last posting activity time: {time}","conversation.lastPostTime":"Last post time: {time}","moderationData.rejectTime":"Rejected time: {time}"},"localOverride":false},"CachedAsset:text:en_US-components/messages/MessageBody-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-components/messages/MessageBody-1747867729000","value":{"showMessageBody":"Show More","mentionsErrorTitle":"{mentionsType, select, board {Board} user {User} message {Message} other {}} No Longer Available","mentionsErrorMessage":"The {mentionsType} you are trying to view has been removed from the community.","videoProcessing":"Video is being processed. Please try again in a few minutes.","bannerTitle":"Video provider requires cookies to play the video. Accept to continue or {url} it directly on the provider's site.","buttonTitle":"Accept","urlText":"watch"},"localOverride":false},"CachedAsset:text:en_US-components/messages/MessageCustomFields-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-components/messages/MessageCustomFields-1747867729000","value":{"CustomField.default.label":"Value of {name}"},"localOverride":false},"CachedAsset:text:en_US-components/messages/MessageRevision-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-components/messages/MessageRevision-1747867729000","value":{"lastUpdatedDatePublished":"{publishCount, plural, one{Published} other{Updated}} {date}","lastUpdatedDateDraft":"Created {date}","version":"Version {major}.{minor}"},"localOverride":false},"CachedAsset:text:en_US-shared/client/components/common/QueryHandler-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-shared/client/components/common/QueryHandler-1747867729000","value":{"title":"Query Handler"},"localOverride":false},"CachedAsset:text:en_US-components/messages/MessageReplyButton-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-components/messages/MessageReplyButton-1747867729000","value":{"repliesCount":"{count}","title":"Reply","title@board:BLOG@message:root":"Comment","title@board:TKB@message:root":"Comment","title@board:IDEA@message:root":"Comment","title@board:OCCASION@message:root":"Comment"},"localOverride":false},"CachedAsset:text:en_US-components/messages/MessageAuthorBio-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-components/messages/MessageAuthorBio-1747867729000","value":{"sendMessage":"Send Message","actionMessage":"Follow this blog board to get notified when there's new activity","coAuthor":"CO-PUBLISHER","contributor":"CONTRIBUTOR","userProfile":"View Profile","iconlink":"Go to {name} {type}"},"localOverride":false},"CachedAsset:text:en_US-components/community/NavbarDropdownToggle-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-components/community/NavbarDropdownToggle-1747867729000","value":{"ariaLabelClosed":"Press the down arrow to open the menu"},"localOverride":false},"CachedAsset:text:en_US-components/customComponent/CustomComponent-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-components/customComponent/CustomComponent-1747867729000","value":{"errorMessage":"Error rendering component id: {customComponentId}","bannerTitle":"Video provider requires cookies to play the video. Accept to continue or {url} it directly on the provider's site.","buttonTitle":"Accept","urlText":"watch"},"localOverride":false},"CachedAsset:text:en_US-shared/client/components/users/UserAvatar-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-shared/client/components/users/UserAvatar-1747867729000","value":{"altText":"{login}'s avatar","altTextGeneric":"User's avatar"},"localOverride":false},"CachedAsset:text:en_US-shared/client/components/ranks/UserRankLabel-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-shared/client/components/ranks/UserRankLabel-1747867729000","value":{"altTitle":"Icon for {rankName} rank"},"localOverride":false},"CachedAsset:text:en_US-components/tags/TagView/TagViewChip-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-components/tags/TagView/TagViewChip-1747867729000","value":{"tagLabelName":"Tag name {tagName}"},"localOverride":false},"CachedAsset:text:en_US-components/users/UserRegistrationDate-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-components/users/UserRegistrationDate-1747867729000","value":{"noPrefix":"{date}","withPrefix":"Joined {date}"},"localOverride":false},"CachedAsset:text:en_US-shared/client/components/nodes/NodeAvatar-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-shared/client/components/nodes/NodeAvatar-1747867729000","value":{"altTitle":"Node avatar for {nodeTitle}"},"localOverride":false},"CachedAsset:text:en_US-shared/client/components/nodes/NodeDescription-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-shared/client/components/nodes/NodeDescription-1747867729000","value":{"description":"{description}"},"localOverride":false},"CachedAsset:text:en_US-shared/client/components/nodes/NodeIcon-1747867729000":{"__typename":"CachedAsset","id":"text:en_US-shared/client/components/nodes/NodeIcon-1747867729000","value":{"contentType":"Content Type {style, select, FORUM {Forum} BLOG {Blog} TKB {Knowledge Base} IDEA {Ideas} OCCASION {Events} other {}} icon"},"localOverride":false}}}},"page":"/blogs/BlogMessagePage/BlogMessagePage","query":{"boardId":"microsoftsentinelblog","messageSubject":"solarwinds-post-compromise-hunting-with-azure-sentinel","messageId":"1995095"},"buildId":"cQon2PUqbQU8la6pXifn2","runtimeConfig":{"buildInformationVisible":false,"logLevelApp":"info","logLevelMetrics":"info","openTelemetryClientEnabled":false,"openTelemetryConfigName":"o365","openTelemetryServiceVersion":"25.3.0","openTelemetryUniverse":"prod","openTelemetryCollector":"http://localhost:4318","openTelemetryRouteChangeAllowedTime":"5000","apolloDevToolsEnabled":false,"inboxMuteWipFeatureEnabled":false},"isFallback":false,"isExperimentalCompile":false,"dynamicIds":["LiUyRmNvbXBvbmVudHMlMkZjb21tdW5pdHklMkZOYXZiYXIlMkZOYXZiYXJXaWRnZXQudHN4","LiUyRmNvbXBvbmVudHMlMkZjb21tdW5pdHklMkZCcmVhZGNydW1iJTJGQnJlYWRjcnVtYldpZGdldC50c3g=","LiUyRmNvbXBvbmVudHMlMkZjdXN0b21Db21wb25lbnQlMkZDdXN0b21Db21wb25lbnQlMkZDdXN0b21Db21wb25lbnQudHN4","LiUyRmNvbXBvbmVudHMlMkZibG9ncyUyRkJsb2dBcnRpY2xlV2lkZ2V0JTJGQmxvZ0FydGljbGVXaWRnZXQudHN4","LiUyRmNvbXBvbmVudHMlMkZtZXNzYWdlcyUyRk1lc3NhZ2VWaWV3JTJGTWVzc2FnZVZpZXdTdGFuZGFyZCUyRk1lc3NhZ2VWaWV3U3RhbmRhcmQudHN4","LiUyRmNvbXBvbmVudHMlMkZleHRlcm5hbCUyRmNvbXBvbmVudHMlMkZFeHRlcm5hbENvbXBvbmVudC50c3g=","LiUyRmNvbXBvbmVudHMlMkZjdXN0b21Db21wb25lbnQlMkZDdXN0b21Db21wb25lbnRDb250ZW50JTJGSHRtbENvbnRlbnQudHN4","Li4lMkZzaGFyZWQlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGY29tbW9uJTJGTGlzdCUyRlVud3JhcHBlZExpc3QlMkZVbndyYXBwZWRMaXN0LnRzeA==","LiUyRmNvbXBvbmVudHMlMkZ0YWdzJTJGVGFnVmlldyUyRlRhZ1ZpZXcudHN4","LiUyRmNvbXBvbmVudHMlMkZ0YWdzJTJGVGFnVmlldyUyRlRhZ1ZpZXdDaGlwJTJGVGFnVmlld0NoaXAudHN4","LiUyRmNvbXBvbmVudHMlMkZjdXN0b21Db21wb25lbnQlMkZDdXN0b21Db21wb25lbnRDb250ZW50JTJGVGVtcGxhdGVDb250ZW50LnRzeA==","LiUyRmNvbXBvbmVudHMlMkZjdXN0b21Db21wb25lbnQlMkZDdXN0b21Db21wb25lbnRDb250ZW50JTJGQ3VzdG9tQ29tcG9uZW50U2NyaXB0cy50c3g="],"appGip":true,"scriptLoader":[{"id":"analytics","src":"https://techcommunity.microsoft.com/t5/s/gxcuf89792/pagescripts/1730819800000/analytics.js?page.id=BlogMessagePage\u0026entity.id=board%3Amicrosoftsentinelblog\u0026entity.id=message%3A1995095","strategy":"afterInteractive"}]}</script><script lang="javascript" type="text/javascript">
                const nextDataScript = document.getElementById("__NEXT_DATA__");
                if (nextDataScript) {
                  const nextData = JSON.parse(nextDataScript.textContent || '{}');
                    if (nextData.dynamicIds) {
                      nextData.dynamicIds = nextData.dynamicIds.map(id => {
                      const encodedString = atob(id);
                      return decodeURIComponent(encodedString);
                    });
                    nextDataScript.textContent = JSON.stringify(nextData);
                  }
                }</script><script lang="javascript" type="text/javascript">
                Object.keys(localStorage).filter(key => key.startsWith('aurora.fetchPolicies')).forEach(key => {
                  localStorage.removeItem(key);
                });</script></body></html>