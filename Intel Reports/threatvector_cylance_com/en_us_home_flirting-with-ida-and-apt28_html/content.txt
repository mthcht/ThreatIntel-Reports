<!DOCTYPE HTML>
<html lang="en">
    <head>
	<meta charset="UTF-8"/>

	
	









    <!-- OneTrust Cookies Consent Notice Start -->






    <script src="https://cdn.cookielaw.org/scripttemplates/otSDKStub.js" data-document-language="true" type="text/javascript" charset="UTF-8" data-domain-script="6373c986-7725-4c54-9731-2a91bdd43107"></script>


<script type="text/javascript">
    function OptanonWrapper() { }
</script>

<!-- OneTrust Cookies Consent Notice End -->


















	<title>Flirting With IDA and APT28</title>

	<script type="application/ld+json">
	{"@context":"https://schema.org","@type":"NewsArticle","mainEntityOfPage":{"@type":"WebPage","@id":"https://blogs.blackberry.com/en/2019/07/flirting-with-ida-and-apt28"},"headline":null,"image":["/content/dam/blogs-blackberry-com/images/category/research-thumbnail-350x350-b.jpg","/content/dam/blogs-blackberry-com/images/blogs/2019/07/071019-apt28-cylance-final5-lrg.jpg"],"datePublished":"2019-07-10T17:28:00.000-07:00","author":{"@type":"Person","name":"The BlackBerry Cylance Threat Research Team"},"publisher":{"@type":"Organization","name":"BlackBerry","logo":{"@type":"ImageObject","url":"https://blogs.blackberry.com/content/dam/blackberry-com/Images/logos/BlackBerry_Logo_Black_150.png"}}}
</script>


	<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
	<meta name="description" content="This blog shares a methodology used to develop Hex-Rays&#39; Interactive Disassembler (IDA) signatures created as part of pre-analysis for a recently published APT28 sample. This will allow an analyst to focus on the malicious code while disregarding the statically linked Poco framework functions."/>
	<meta name="keywords" content="Cybersecurity"/>
	

	<meta name="author" content="blogs.blackberry.com"/>
	<meta name="viewport" content="width=device-width, initial-scale=1"/>

	<link rel="icon" href="/etc.clientlibs/bbcom/clientlibs/clientlib-etc-legacy/resources/bbcom-aem-project/images/favicon.ico"/>
	<link rel="canonical" href="https://blogs.blackberry.com/en/2019/07/flirting-with-ida-and-apt28"/>

	<meta property="og:url" content="https://blogs.blackberry.com/en/2019/07/flirting-with-ida-and-apt28"/>
	<meta property="og:title" content="Flirting With IDA and APT28"/>
	<meta property="og:description" content="This blog shares a methodology used to develop Hex-Rays&#39; Interactive Disassembler (IDA) signatures created as part of pre-analysis for a recently published APT28 sample. This will allow an analyst to focus on the malicious code while disregarding the statically linked Poco framework functions."/>
	<meta property="og:type" content="article"/>
	<meta property="og:image" content="https://blogs.blackberry.com/content/dam/blogs-blackberry-com/images/blogs/2019/07/071019-apt28-cylance-final5-lrg.jpg"/>

	<meta name="twitter:card" content="summary_large_image"/>
	<meta name="twitter:site" content="@BlackBerry"/>
	<meta name="twitter:title" content="Flirting With IDA and APT28"/>
	<meta name="twitter:description" content="This blog shares a methodology used to develop Hex-Rays&#39; Interactive Disassembler (IDA) signatures created as part of pre-analysis for a recently published APT28 sample. This will allow an analyst to focus on the malicious code while disregarding the statically linked Poco framework functions."/>
	<meta name="twitter:image" content="https://blogs.blackberry.com/content/dam/blogs-blackberry-com/images/blogs/2019/07/071019-apt28-cylance-final5-lrg.jpg"/>

	

	
	
    
<link rel="stylesheet" href="/etc.clientlibs/blogs-bbcom/clientlibs/clientlib-site.min.1a90daab884e488ff81054034701df34.css" type="text/css">



	
    










	
		
<script>
(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-TXGFP23');
</script>



<script async src="https://www.googletagmanager.com/gtag/js?id=AW-944900006"></script>

<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date()); gtag('config', 'AW-944900006');
</script>


		
	

	




<script src="https://kit.fontawesome.com/3c243f8233.js" crossorigin="anonymous"></script>


	
    
    

    
    
    
    


	
</head>
    <body class="page basicpage" data-enable-history="true">
        



	
		
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-TXGFP23" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>


		
	

	


        
        
            



            

  
<!--
<sly data-sly-use.templatedContainer="com.day.cq.wcm.foundation.TemplatedContainer"
   data-sly-repeat.child=""
   data-sly-resource=""/>
-->

<header>
    




    
    
    


	


<nav class="blogs-navigationv2 bb-blogs-navbar navbar navbar-expand-lg navbar-dark bg-dark" data-nosnippet>
	<div class="container">
		<a class="navbar-brand" href="https://blogs.blackberry.com">
			<svg width="175" height="30" viewBox="0 0 175 30">
				<title>BlackBerry</title>
				<g stroke="none" strokeWidth="1" fill="none" fillRule="evenodd"><g transform="translate(-91.000000, -10.000000)" fill="#fff" fillRule="nonzero"><g transform="translate(91.000000, 10.000000)"><path d="M9.18042011,2.14285967 C9.18042011,1.19318021 8.5959918,-1.17624431e-15 6.16086942,-1.17624431e-15 C5.16247216,-1.17624431e-15 2.4107723,-1.17624431e-15 2.4107723,-1.17624431e-15 L1.33931598,4.94318021 C1.33931598,4.94318021 3.36046941,4.94318021 5.25986363,4.94318021 C8.32813214,4.91883014 9.18042011,3.48214033 9.18042011,2.14285967 Z"></path><path d="M19.2861873,2.14285967 C19.2861873,1.19318021 18.701759,-1.17624431e-15 16.2666366,-1.17624431e-15 C15.2682393,-1.17624431e-15 12.5165395,-1.17624431e-15 12.5165395,-1.17624431e-15 L11.4450831,4.94318021 C11.4450831,4.94318021 13.4662366,4.94318021 15.3412807,4.94318021 C18.4338993,4.91883014 19.2861873,3.48214033 19.2861873,2.14285967 Z"></path><path d="M7.84110413,9.54545936 C7.84110413,8.59578874 7.25667582,7.4025997 4.82155344,7.4025997 C3.82315617,7.4025997 1.07145632,7.4025997 1.07145632,7.4025997 L5.68518084e-15,12.3457799 C5.68518084e-15,12.3457799 2.02115343,12.3457799 3.89619757,12.3457799 C6.96445725,12.3457799 7.84110413,10.88474 7.84110413,9.54545936 Z"></path><path d="M17.9468713,9.54545936 C17.9468713,8.59578874 17.362443,7.4025997 14.9273206,7.4025997 C13.9289233,7.4025997 11.1772235,7.4025997 11.1772235,7.4025997 L10.1057671,12.3457799 C10.1057671,12.3457799 12.1269206,12.3457799 14.0263148,12.3457799 C17.0702244,12.3457799 17.9468713,10.88474 17.9468713,9.54545936 Z"></path><path d="M28.5153164,6.55032938 C28.5153164,5.60064992 27.930888,4.40746971 25.4957657,4.40746971 C24.4973684,4.40746971 21.7456774,4.40746971 21.7456774,4.40746971 L20.6742211,9.35064992 C20.6742211,9.35064992 22.6953745,9.35064992 24.5704186,9.35064992 C27.6386695,9.32629985 28.5153164,7.88961005 28.5153164,6.55032938 Z"></path><path d="M27.0542412,14.2694801 C27.0542412,13.3198006 26.4698129,12.1266204 24.0346816,12.1266204 C23.0362844,12.1266204 20.2845934,12.1266204 20.2845934,12.1266204 L19.213137,17.0698006 C19.213137,17.0698006 21.2342905,17.0698006 23.1093346,17.0698006 C26.1775943,17.0698006 27.0542412,15.6087696 27.0542412,14.2694801 Z"></path><path d="M16.4857961,17.2889601 C16.4857961,16.3392807 15.9013678,15.1461005 13.4662366,15.1461005 C12.4678393,15.1461005 9.71614827,15.1461005 9.71614827,15.1461005 L8.64469195,20.0892807 C8.64469195,20.0892807 10.6658454,20.0892807 12.5408895,20.0892807 C15.6091492,20.0649306 16.4857961,18.6282496 16.4857961,17.2889601 Z"></path><path d="M83.7683052,18.75 C83.5978459,19.11526 82.7455491,20.7711005 80.6026453,20.7711005 C78.1188139,20.7711005 77.1447667,18.701291 77.1447667,17.191551 C77.1447667,14.6590813 78.8493515,12.3944712 81.3575329,12.3944712 C84.0605238,12.3944712 84.6936523,14.4155717 84.7667113,14.7808317 L88.7359591,14.7808317 C88.9794775,13.2954417 87.786262,8.74187154 81.5036422,8.74187154 C76.9012483,8.74187154 73.2242102,12.4188213 73.2242102,17.3133014 C73.2242102,21.331161 75.7323917,24.4236913 80.3834769,24.4236913 C86.1790775,24.4236913 87.7375619,19.8701212 87.9323713,18.7499912 L83.7683052,18.7499912 L83.7683052,18.75 Z"></path><path d="M53.2805356,19.8457799 C53.2805356,19.6022703 53.3535858,19.1639601 53.5483953,18.2629897 C53.7432047,17.3376603 56.5435959,4.40746971 56.5435959,4.40746971 L52.8178577,4.40746971 L49.7252479,18.6769498 C49.6034887,19.2857193 49.5304385,19.87013 49.5304385,20.3814904 C49.5304385,23.4983708 51.9412108,24.4237002 53.889314,24.4237002 C54.5711514,24.4237002 55.22863,24.3019498 55.3747393,24.2775909 C55.4477895,23.961031 56.0322266,21.2824609 56.0565767,21.1607105 C55.9835265,21.1607105 55.5695487,21.2094107 55.0825295,21.2094107 C53.6945045,21.2094107 53.2805356,20.625 53.2805356,19.8457799 Z"></path><polygon points="106.220152 8.76623044 101.033339 8.76623044 94.3367415 14.7808405 96.6014133 4.38311963 92.8269661 4.38311963 88.5654909 24.1071403 92.3155881 24.1071403 93.3626943 19.3100606 95.6760575 17.4837696 98.8660763 24.1071403 103.054492 24.1071403 98.5251576 15.2435096"></polygon><path d="M32.7767827,18.0194801 C33.0933514,16.6071403 35.7232832,4.38311963 35.7232832,4.38311963 C35.7232832,4.38311963 40.2769681,4.38311963 42.8338497,4.38311963 C47.9963131,4.38311963 49.2625788,7.25649924 49.2625788,8.98538995 C49.2625788,12.8327903 45.6342409,13.8555199 45.1959219,13.9772703 C45.6098908,14.1233708 47.971963,15.0487002 47.971963,18.0681802 C47.971963,21.3555199 44.9524035,24.107459 40.2526181,24.107459 C40.2526181,24.107459 38.5723834,24.107459 38.1097143,24.107459 C34.1404576,24.1314904 32.0218951,21.4042201 32.7767827,18.0194801 Z M43.905306,17.7759705 C43.905306,16.8506411 43.2965277,15.681811 40.666587,15.681811 L37.2330585,15.681811 L36.2103112,20.4545406 L40.1065088,20.4545406 C42.5903401,20.4545406 43.905306,19.3100606 43.905306,17.7759705 Z M45.1715718,9.8133102 C45.1715718,8.86363075 44.4410342,8.0357105 42.6633904,8.0357105 L38.8645931,8.0357105 L38.0122963,12.0292201 L41.9815529,12.0292201 C44.0757654,12.0292201 45.1715718,10.9821403 45.1715718,9.8133102 Z"></path><path d="M104.515568,18.0194801 C104.832136,16.6071403 107.462068,4.38311963 107.462068,4.38311963 C107.462068,4.38311963 112.015753,4.38311963 114.572626,4.38311963 C119.735089,4.38311963 121.001364,7.25649924 121.001364,8.98538995 C121.001364,12.8327903 117.373026,13.8555199 116.934707,13.9772703 C117.348667,14.1233708 119.710748,15.0487002 119.710748,18.0681802 C119.710748,21.3555199 116.666847,24.107459 111.991394,24.107459 C111.991394,24.107459 110.311159,24.107459 109.84849,24.107459 C105.879234,24.1314904 103.76068,21.4042201 104.515568,18.0194801 Z M115.644091,17.7759705 C115.644091,16.8506411 115.035304,15.681811 112.405372,15.681811 L108.947493,15.681811 L107.924737,20.4545406 L111.820935,20.4545406 C114.329125,20.4545406 115.644091,19.3100606 115.644091,17.7759705 Z M116.910348,9.8133102 C116.910348,8.86363075 116.17981,8.0357105 114.377825,8.0357105 L110.603378,8.0357105 L109.751081,12.0292201 L113.720347,12.0292201 C115.81455,12.0292201 116.910348,10.9821403 116.910348,9.8133102 Z"></path><path d="M146.789339,8.76623044 C142.820083,8.76623044 140.092742,11.1282408 139.191745,15.5357105 C138.802126,17.4350606 137.365401,24.1071403 137.365401,24.1071403 L141.091139,24.1071403 C141.091139,24.1071403 142.454814,17.7516204 142.893133,15.75487 C143.45322,13.1493501 144.841236,12.2483796 146.69193,12.2483796 C147.300717,12.2483796 147.665986,12.3214298 147.860795,12.3457799 C147.958196,11.8100694 148.493915,9.44805023 148.615674,8.88798965 C148.226055,8.86363957 147.592918,8.76623044 146.789339,8.76623044 Z"></path><path d="M159.451988,30 L171.968527,8.76623044 L167.950571,8.76623044 L162.20367,18.75 L160.864354,8.74188037 C160.864354,8.74188037 158.818851,8.74188037 156.554179,8.74188037 C151.610875,8.74188037 149.054002,11.0064904 148.153005,15.316551 C147.690327,17.4594107 146.253602,24.1071315 146.253602,24.1071315 L149.97934,24.1071315 C149.97934,24.1071315 151.343015,17.8003117 151.903085,15.2678508 C152.438822,12.8084314 154.265166,12.0535613 156.23761,12.4675303 L157.016848,8.83928067 C157.601285,12.2727209 159.378911,23.2792113 159.378911,23.2792113 L155.482714,30 L159.451988,30 L159.451988,30 Z"></path><path d="M64.0437813,17.5811699 C64.871728,17.4594195 67.2581502,17.0941595 67.599069,17.0454594 C67.5260099,17.313319 67.4529597,17.7029291 67.3799095,18.0194889 C66.9415816,19.8701388 65.0665375,21.063319 62.972325,21.063319 C61.633009,21.063319 60.8537712,20.3571492 60.8537712,19.5048788 C60.8294212,18.7987002 61.4869085,17.9464298 64.0437813,17.5811699 Z M62.6314151,13.5876603 C62.7288242,13.4415598 63.6785213,11.9561699 66.0649435,11.9561699 C67.5503688,11.9561699 68.3052565,12.4918804 68.3052565,13.1493501 C68.3052565,14.0746706 66.8198312,14.3181802 64.2142406,14.6834402 C59.7579648,15.3165598 56.9332236,16.7045406 56.9332236,19.9188301 C56.9332236,22.2077903 58.8326178,24.4237002 62.193096,24.4237002 C64.9934872,24.4237002 66.4545624,22.7435096 66.5763216,22.5974003 C66.6006717,23.0113604 66.6493719,23.62013 66.6737308,24.1071403 C66.9902906,24.1071403 69.5715222,24.1071403 70.5212282,24.1071403 C70.399469,23.4496706 70.1072504,22.1590901 70.5699283,20.1136307 C70.8134379,19.0422009 71.4952754,15.9496706 71.8361941,14.24513 C72.4936815,11.0064904 70.7160376,8.74188037 66.1867116,8.74188037 C60.3424108,8.74188037 58.6621673,12.9301906 58.3943076,13.5876603 L62.6314151,13.5876603 Z"></path><path d="M131.862019,19.5292201 C131.715918,19.8214298 130.814921,21.0876603 128.793759,21.0876603 C125.871617,21.0876603 125.214139,18.6038995 125.28718,17.9464298 C126.845665,17.9464298 135.831275,17.9464298 136.659213,17.9464298 C136.732272,17.6785702 136.975791,16.6558493 136.975791,15.6087696 C136.975791,12.00487 134.540668,8.71753912 129.621714,8.71753912 C125.11673,8.71753912 121.512742,12.4918892 121.512742,16.9967592 C121.512742,21.3311787 124.118324,24.423709 128.745059,24.423709 C134.443259,24.423709 135.977393,19.9675391 136.123494,19.5292289 C135.100738,19.5292201 131.862019,19.5292201 131.862019,19.5292201 Z M129.670406,12.1266204 C132.178587,12.1266204 133.128284,13.6607105 133.030884,14.8782408 C131.594159,14.8782408 127.308342,14.8782408 125.84725,14.8782408 C126.042068,14.0990295 127.235283,12.1266204 129.670406,12.1266204 Z"></path><path d="M171.979978,19.5027334 C173.12535,19.5027334 174.087452,20.4108465 174.087452,21.6216668 C174.087452,22.8557689 173.10243,23.7406002 171.979978,23.7406002 C170.834615,23.7406002 169.849603,22.8324871 169.849603,21.6216668 C169.849603,20.4108465 170.834615,19.5027334 171.979978,19.5027334 Z M171.979978,19.8520043 C171.017877,19.8520043 170.26193,20.620409 170.26193,21.6216668 C170.26193,22.6462064 171.017877,23.4146111 171.979978,23.4146111 C172.942098,23.4146111 173.675125,22.6694882 173.675125,21.6216668 C173.675125,20.620409 172.919178,19.8520043 171.979978,19.8520043 Z M171.52183,22.8557689 L171.155316,22.8557689 L171.155316,20.4108465 L172.071613,20.4108465 C172.644299,20.4108465 172.919178,20.620409 172.919178,21.109397 C172.919178,21.5518126 172.644299,21.7380934 172.277768,21.7846569 L172.964991,22.8557689 L172.552655,22.8557689 L171.911246,21.7846569 L171.49891,21.7846569 L171.49891,22.8557689 L171.52183,22.8557689 Z M171.521821,21.4819585 L171.957076,21.4819585 C172.415225,21.4819585 172.552664,21.3422501 172.552664,21.0861152 C172.552664,20.8532621 172.438127,20.7135538 172.025792,20.7135538 L171.521821,20.7135538 L171.521821,21.4819585 L171.521821,21.4819585 Z"></path></g></g></g>
			</svg>
		</a>
		<button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
			<span class="navbar-toggler-icon"></span>
		</button>
		<div class="collapse navbar-collapse" id="navbarNav">
			
			<ul class="navbar-nav">
				<li class="nav-item">
					<a class="nav-link" href="https://blogs.blackberry.com/en/category/software-solutions/secure_comms">Secure Communications</a>
				</li>
				<li class="nav-item">
					<a class="nav-link" href="https://blogs.blackberry.com/en/category/automotive">Automotive &amp; IoT</a>
				</li>
			</ul>
			<ul class="navbar-nav ml-auto">
				<li class="nav-item mb-3 mb-lg-0">
					<button class="nav-link open-search-btn" role="button">
						<svg aria-hidden="true" viewBox="0 0 512 512">
							<path fill="currentColor" d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"></path>
						</svg>
					</button>
					<div id="searchOverlay" class="search-overlay">
						<span class="close-search-btn" title="Close Search">×</span>
						<div class="overlay-content">
							<form id="search-form">
								<input id="search-form--input" description="Search" data-search-url="https://blogs.blackberry.com/en/search" type="text" placeholder="Search" name="search"/>
								<button type="submit">
									<svg aria-hidden="true" viewBox="0 0 512 512">
										<path fill="currentColor" d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"></path>
									</svg>
								</button>
							</form>
						</div>
					</div>
				</li>
			</ul>
		</div>
	</div>
</nav>


<!-- END DO NOT INDEX -->






    
    
    <div class="hero">

      <div class="jumbotron mastheadDefault">
        <div class="hero-container narrower" style="background-image: url( \2f content\2f dam\2f blackberry-com\2fImages\2fsupport\2f bgs\2f bnr-blue-gradient-crop.jpg)">
          
          <div class="mask  "></div>

          <div class="container headings  l-align">
            <div class="col-lg-12">
          		




    
    
    <div class="blog-name-title">

  <div class="cmp-title ">
  
  
   <!-- <span class="highlighted-text-title blogs">INSIDE</span>
   <span class="normal-text-title">BlackBerry Blog</span> -->
   <span class="normal-text-title">BlackBerry Blog</span>
  
  
  
</div>
</div>



          	</div>
          </div>
      </div>
    </div>
</div>



</header><main>
    




    
    
    <div class="section">
  <section class="section     ">
    
    <div class="container">
        




    
    
    
<ol class="breadcrumb">
    <li class="breadcrumb-item ">
        <a href="/en.html">BlackBerry Blog</a>
    </li>

    <li class="breadcrumb-item active">
        Flirting With IDA and APT28
    </li>
</ol>

    


      
    </div>
  </section>
    

</div>


    
    
    <div class="blogsection">
    <section class="section     ">
      
      <div class="container sectionPadding py-0">
           
      <div class="col-md-9 col-lg-9 col-sm-12">
          




    
    
    <div class="cmp cmp-title blog-title row">
  

<div class="col-md-12 col-lg-12 col-sm-12">
<h1>Flirting With IDA and APT28</h1>
</div>



    
</div>


    
    
    <div class="categorydateauthor"><!--Pulling author bio from author page-->
<div class="categorydateauthor">
<span><a title="RESEARCH &amp; INTELLIGENCE" href="/en/category/research-and-intelligence">RESEARCH &amp; INTELLIGENCE</a> / </span><span class='publish-date'></span>07.10.19 / </span>

    <span class="author"><a href="/en/author/the-cylance-threat-research-team">The BlackBerry Cylance Threat Research Team</a></span>

</div></div>


    
    
    <div class="socialsharing">

<div class="socialSharing row">
	<ul class="socialSharing-icons">
		<li>
			<a href="https://x.com/intent/tweet?url=https://blogs.blackberry.com/en/2019/07/flirting-with-ida-and-apt28&text=Flirting%20With%20IDA%20and%20APT28&via=BlackBerry" title="Share on X" target="_blank" class="x-share">
				<span class="sr-only sr-only-focusable">Share on X</span>
				<span class="svgIcon-socialSharing svgIcon-socialSharing--tw" aria-hidden="true">
					<svg viewBox="0 0 1200 1227"><path d="M714.163 519.284L1160.89 0H1055.03L667.137 450.887L357.328 0H0L468.492 681.821L0 1226.37H105.866L515.491 750.218L842.672 1226.37H1200L714.137 519.284H714.163ZM569.165 687.828L521.697 619.934L144.011 79.6944H306.615L611.412 515.685L658.88 583.579L1055.08 1150.3H892.476L569.165 687.854V687.828Z"></path></svg>
				</span>
			</a>
		</li>
		<li>
			<a href="https://www.facebook.com/sharer/sharer.php?u=https://blogs.blackberry.com/en/2019/07/flirting-with-ida-and-apt28" title="Share on Facebook" target="_blank" class="facebook-share">
				<span class="sr-only sr-only-focusable">Share on Facebook</span>
				<span class="svgIcon-socialSharing svgIcon-socialSharing--fb" aria-hidden="true">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 264 512"><path d="M76.7 512V283H0v-91h76.7v-71.7C76.7 42.4 124.3 0 193.8 0c33.3 0 61.9 2.5 70.2 3.6V85h-48.2c-37.8 0-45.1 18-45.1 44.3V192H256l-11.7 91h-73.6v229"/></svg>
				</span>
			</a>
		</li>
		<li>
			<a href="https://www.linkedin.com/shareArticle?mini=true&url=https://blogs.blackberry.com/en/2019/07/flirting-with-ida-and-apt28&title=Flirting%20With%20IDA%20and%20APT28&summary=&source=blogs.blackberry.com" title="Share on LinkedIn" target="_blank" class="linkedin-share">
				<span class="sr-only sr-only-focusable">Share on LinkedIn</span>
				<span class="svgIcon-socialSharing svgIcon-socialSharing--li" aria-hidden="true">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448.1 512"><path d="M100.3 448H7.4V148.9h92.9V448zM53.8 108.1C24.1 108.1 0 83.5 0 53.8S24.1 0 53.8 0s53.8 24.1 53.8 53.8-24.1 54.3-53.8 54.3zM448 448h-92.7V302.4c0-34.7-.7-79.2-48.3-79.2-48.3 0-55.7 37.7-55.7 76.7V448h-92.8V148.9h89.1v40.8h1.3c12.4-23.5 42.7-48.3 87.9-48.3 94 0 111.3 61.9 111.3 142.3V448h-.1z"/></svg>
				</span>
			</a>
		</li>
		<li>
			<a href="mailto:?subject=Flirting%20With%20IDA%20and%20APT28&body=https://blogs.blackberry.com/en/2019/07/flirting-with-ida-and-apt28" title="Email" class="email-share">
				<span class="sr-only sr-only-focusable">Email</span>
				<span class="svgIcon-socialSharing svgIcon-socialSharing--email" aria-hidden="true">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M502.3 190.8c3.9-3.1 9.7-.2 9.7 4.7V400c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V195.6c0-5 5.7-7.8 9.7-4.7 22.4 17.4 52.1 39.5 154.1 113.6 21.1 15.4 56.7 47.8 92.2 47.6 35.7.3 72-32.8 92.3-47.6 102-74.1 131.6-96.3 154-113.7zM256 320c23.2.4 56.6-29.2 73.4-41.4 132.7-96.3 142.8-104.7 173.4-128.7 5.8-4.5 9.2-11.5 9.2-18.9v-19c0-26.5-21.5-48-48-48H48C21.5 64 0 85.5 0 112v19c0 7.4 3.4 14.3 9.2 18.9 30.6 23.9 40.7 32.4 173.4 128.7 16.8 12.2 50.2 41.8 73.4 41.4z"/></svg>
				</span>
			</a>
		</li>
	</ul>
</div>
</div>


    
    
    <div class="image">
  <div data-cmp-is="image" data-cmp-src="/en/2019/07/flirting-with-ida-and-apt28/_jcr_content/main/par/sectionblog/par/image.coreimg{.width}.jpeg/1596065666492/071019-apt28-cylance-final5-lrg.jpeg" data-asset="/content/dam/blogs-blackberry-com/images/blogs/2019/07/071019-apt28-cylance-final5-lrg.jpg" data-asset-id="b147c2ef-5ca0-478b-981e-e27c0bee4421" class="cmp-image" itemscope itemtype="http://schema.org/ImageObject">
 
     
         
         
          
         <img src="/content/dam/blogs-blackberry-com/images/blogs/2019/07/071019-apt28-cylance-final5-lrg.jpg" class="cmp-image__image" itemprop="contentUrl" data-cmp-hook-image="image" alt/>
         
         <figcaption class="figure-caption" styles="display:table-caption;caption-side:bottom;"></figcaption>
          
     
 
 
 
</div>

    
</div>


    
    
    <div class="text">    
    
    <div class='cylance-blog-container'><h2 style="text-align: center;"><b>Flirting With IDA and APT28</b></h2> <p>This document shares a methodology used to develop <i>Hex-Rays' Interactive Disassembler (IDA) signatures created as part of pre-analysis for a recently published APT28 sample. The internal functions, features and behavior of the published sample are not discussed. Access to IDA Flair, used to generate signatures for the IDA disassembler, requires a current hex-rays subscription.</i></p> <p>On May 17, the U.S.&nbsp;CyberCom&nbsp;Cyber National Mission Force&nbsp;(CNMF) tweeted a&nbsp;VirusTotal&nbsp;link to&nbsp;a new APT28 malware sample.&nbsp;No information about the circumstances surrounding the sample&nbsp;or its discovery&nbsp;was&nbsp;included.&nbsp;</p> <p>The SHA256 hash of the published sample is:&nbsp;<br> <b>b40909ac0b70b7bd82465dfc7761a6b4e0df55b894dd42290e3f72cb4280fa44&nbsp;</b></p> <p>Consensus amongst researchers&nbsp;suggests&nbsp;the&nbsp;sample is&nbsp;x-tunnel&nbsp;(aka XAPS), a tool&nbsp;used by&nbsp;APT28&nbsp;to&nbsp;make&nbsp;a&nbsp;compromised host inside&nbsp;the&nbsp;firewall act as a&nbsp;traffic proxy. This allows attacker-controlled&nbsp;traffic&nbsp;originating from external&nbsp;hosts&nbsp;to be relayed to other internal targets&nbsp;that might otherwise be inaccessible owing to perimeter traffic policy.&nbsp;</p> <p>X-tunnel&nbsp;was first&nbsp;seen in the wild&nbsp;in May 2013, and&nbsp;is understood&nbsp;to have been used&nbsp;in previous compromises including the&nbsp;2016&nbsp;DNC&nbsp;hack.&nbsp;&nbsp;</p> <p>Analysis of other in-the-wild (ITW) builds of x-tunnel shows its capabilities include remote command execution, UDP tunnelling, TLS encryption, proxy support, and persistent HTTP via the HTTP keep-alive header.</p> <p>Prior versions have weighed in around 1-2MB&nbsp;in&nbsp;size. Versions with obfuscated code, found in 2015,&nbsp;tended towards the larger&nbsp;end of the scale. The sample uploaded by CNMF&nbsp;stands at 3.2MB.&nbsp;</p> <p>A file this size hints at code obfuscation/virtualisation, static linking and/or embedded resources. Static linking affords self-sufficiency - a high priority for a threat actor operating inside a victim network. Code obfuscation hampers analysis efforts but can make a sample more suspicious in the eyes of antivirus (AV) software.&nbsp;&nbsp;</p> <p>Evidence within the sample&nbsp;indicates&nbsp;it&nbsp;was&nbsp;produced&nbsp;using&nbsp;Microsoft&nbsp;Visual C++.&nbsp;When&nbsp;<br> formulating an execution plan for a target computer,&nbsp;the author has two options:&nbsp;assume the corresponding&nbsp;(and necessary)&nbsp;Visual C++ Redistributable package is installed, or bundle&nbsp;(link) every piece of executable code needed within the file itself. This latter approach of <i>static linking</i> increases the size of the file but also increases the odds of successful execution.</p> <p>A&nbsp;few&nbsp;hints that our x-tunnel binary was built with Microsoft Visual C++:&nbsp;</p> <p style="margin-left: 40.0px;">1.&nbsp;&nbsp;&nbsp;&nbsp; The presence of a&nbsp;.pdata&nbsp;section&nbsp;containing&nbsp;the exception data directory. It’s here that the compiler stores&nbsp;exception handling&nbsp;metadata&nbsp;for&nbsp;PE32+/64-bit binaries.&nbsp;This&nbsp;section is present even for the simplest&nbsp;C/C++&nbsp;<i>”</i>Hello World<i>”</i> applications, provided it links against&nbsp;Microsoft Visual C++ Runtime.&nbsp;</p> <p style="margin-left: 40.0px;">2.&nbsp;&nbsp;&nbsp;&nbsp; For C++ specifically, the presence of mangled function names&nbsp;and references to&nbsp;Standard Template Library&nbsp;namespaces/containers/classes&nbsp;(<i>“</i>std<i>”</i>, <i>“</i>vector<i>”</i>, <i>“</i>ios<i>”</i>)&nbsp;within the strings output.&nbsp;</p> <p style="margin-left: 40.0px;">3.&nbsp;&nbsp;&nbsp;&nbsp; Output from parsing the&nbsp;PE Rich header.&nbsp;</p> <p>For&nbsp;the alternative of <i>dynamic&nbsp;linking</i> a&nbsp;Visual C++&nbsp;PE,&nbsp;you would typically see an import for mscvpXXX.dll, where XXX maps to the Visual Studio release number – 120 for Visual Studio 2013, 140 for Visual Studio 2015 etc.&nbsp;</p> <p>Disassembly of the&nbsp;sample using IDA shows a vast sea of executable code. What approach can we&nbsp;use&nbsp;to&nbsp;tackle&nbsp;the analysis of such an unwieldy file,&nbsp;allowing&nbsp;us to&nbsp;quickly&nbsp;zero in&nbsp;on&nbsp;its design&nbsp;and capabilities?&nbsp;</p> <p>IDA’s Navigator toolbar&nbsp;offers a visual decomposition of&nbsp;a&nbsp;sample’s executable code&nbsp;and data.&nbsp;If, during sample loading,&nbsp;the&nbsp;automatic use of&nbsp;Flirt Signatures&nbsp;is disabled&nbsp;(see&nbsp;“Kernel Options 2”),&nbsp;measuring the number of&nbsp;functions&nbsp;can be achieved using&nbsp;a simple Python&nbsp;one-liner:&nbsp;</p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="601" valign="top"><p><br> Python&gt;len(list(idautils.Functions()))<br> 7533</p> </td> </tr></tbody></table> <p style="text-align: center;"><i>Figure 1: Function count via IDAPython</i></p> <p>Since we’re dealing with a 64-bit Microsoft Visual C++ binary, we can apply&nbsp;the&nbsp;relevant&nbsp;default&nbsp;signatures&nbsp;provided with IDA&nbsp;(first&nbsp;re-select <b>Use flirt signatures</b> under General -&gt; Kernel Options 2): <i>vc64rtf</i>, <i>vc64ucrt</i>.&nbsp;</p> <p>The Signatures sub-view&nbsp;tells us&nbsp;~1600 functions&nbsp;have been identified as library&nbsp;(benign)&nbsp;code:&nbsp;</p> <p style="text-align: center;"><img src="/content/dam/blogs-blackberry-com/images/blogs/2019/07/fig2-apt28.png"><i><br> Figure&nbsp;2: First round of default signatures provided by IDA&nbsp;</i></p> <p>The majority of published&nbsp;x-tunnel&nbsp;samples link against&nbsp;the same&nbsp;version of the OpenSSL TLS/SSL library.&nbsp;Strings&nbsp;output for this&nbsp;sample&nbsp;shows it is&nbsp;also following suit: 1.0.1e 11 Feb 2013.&nbsp;&nbsp;<br> </p> <p>Analysts&nbsp;following along at home&nbsp;will also have noticed another recurring identifier present in the strings output: “poco”. Google&nbsp;results show&nbsp;this&nbsp;to be&nbsp;a&nbsp;C++ framework.&nbsp;In the ongoing effort to stay ahead of endpoint security, the author(s)&nbsp;have&nbsp;evidently&nbsp;re-tooled x-tunnel&nbsp;using a&nbsp;framework.&nbsp;</p> <p>Leveraging custom&nbsp;IDA Flirt signatures to fill in&nbsp;as many of the&nbsp;blanks as possible (by&nbsp;identifying benign&nbsp;library code)&nbsp;reduces&nbsp;the time required to&nbsp;derive&nbsp;meaningful analysis of&nbsp;the sample. Focusing&nbsp;our&nbsp;efforts on&nbsp;understanding&nbsp;the important (interesting) parts&nbsp;means we can&nbsp;expedite&nbsp;delivery of&nbsp;actionable&nbsp;threat&nbsp;intelligence.</p> <p>Strings output&nbsp;tell us version 1.7.3 of the&nbsp;Poco&nbsp;framework was used.&nbsp;We can use this information to&nbsp;build a static library&nbsp;(.lib)&nbsp;and&nbsp;from that, derive&nbsp;custom&nbsp;IDA&nbsp;signatures.&nbsp;&nbsp;</p> <p><i>Note:&nbsp;The Flair tools pcf (COFF parser) and sigmake (Signature File Maker) are available from the Hex Rays website as a zip download (active subscription required). Both Mac and Windows binaries are included; substitute paths in examples below reflect the location of your zip extract (and operating system, if using Windows).</i></p> <p>The first question&nbsp;we need to answer is which version of Visual Studio should we use&nbsp;to build&nbsp;our libs, and&nbsp;for the sake of curiosity,&nbsp;does&nbsp;it matter?&nbsp;(Spoiler:&nbsp;yes it does, at least for&nbsp;the&nbsp;small number of&nbsp;default installs of&nbsp;Visual Studio&nbsp;that were tested).&nbsp;</p> <p>The Rich header in the PE holds metadata about the&nbsp;compiler/linker&nbsp;used to produce&nbsp;a&nbsp;binary. Parsing it using one of the widely available tools we are&nbsp;shown:&nbsp;</p> <p style="text-align: center;"><img src="/content/dam/blogs-blackberry-com/images/blogs/2019/07/fig3-apt28.png"><i><br> Figure&nbsp;3: Rich header embedded within the sample&nbsp;</i></p> <p>Assuming this isn’t a forgery, our first&nbsp;build&nbsp;attempt&nbsp;should&nbsp;be with&nbsp;Visual Studio 2010 RTM.&nbsp;<br> </p> <p><i>Note: Building the&nbsp;OpenSSL and&nbsp;Poco&nbsp;static libraries was&nbsp;performed&nbsp;using&nbsp;the author’s standard&nbsp;Windows 7 SP1 x86&nbsp;analysis environment.&nbsp;Building under a native x64 environment should&nbsp;only involve minor changes to the steps described below.</i></p> <p>The&nbsp;Poco&nbsp;framework<i>’</i>s&nbsp;1.7.3&nbsp;source code&nbsp;is readily available&nbsp;for&nbsp;download from&nbsp;Github.&nbsp;The build instructions are&nbsp;easy to follow (see README, “Building on Windows”). The only minor caveat is a dependency on OpenSSL,&nbsp;which&nbsp;needs&nbsp;to&nbsp;exist&nbsp;first. We will&nbsp;adjust&nbsp;the build process&nbsp;slightly&nbsp;to remove the MySQL dependency. This can be done&nbsp;by editing the&nbsp;Poco&nbsp;components file.&nbsp;</p> <p>Building the OpenSSL&nbsp;.lib files&nbsp;is also&nbsp;straightforward.&nbsp;As&nbsp;stated by the documentation, some prerequisites need to be installed such as&nbsp;ActiveState&nbsp;ActivePerl;&nbsp;make sure&nbsp;perl.exe is&nbsp;in your %PATH%&nbsp;(handled by the installer when using defaults).&nbsp;</p> <p>Since our sample is 64-bit, we use the Visual Studio x64 Cross Tools Command Prompt (see&nbsp;Windows&nbsp;Start menu under <b>Visual Studio Tools</b>).</p> <p>As per the OpenSSL build documentation,&nbsp;running the&nbsp;following commands&nbsp;in the&nbsp;extracted&nbsp;source code directory&nbsp;should&nbsp;produce the&nbsp;necessary&nbsp;libeay32.lib and ssleay32.lib static libraries. This,&nbsp;in turn,&nbsp;will&nbsp;allow us to&nbsp;build&nbsp;Poco&nbsp;and finally&nbsp;produce&nbsp;our IDA&nbsp;signatures:&nbsp;</p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="601" valign="top">perl Configure VC-WIN64A<br> ms\do_win64<br> anmake -f ms\nt.mak</td> </tr></tbody></table> <p style="text-align: center;"><i>Figure 4: Building OpenSSL static libs</i></p> <p>Assuming the build process completes without error, static libraries should be in the out32<i> </i>folder:</p> <p style="text-align: center;"><img src="/content/dam/blogs-blackberry-com/images/blogs/2019/07/fig5-apt28.png"><i><br> Figure 5: OpenSSL x64 1.0.1e static libraries</i></p> <p>With these available, we can now build the Poco C++ framework libs. We need to modify the Poco buildwin.cmd file to indicate the location of our freshly built OpenSSL libraries and provide the whereabouts of OpenSSL header files. Here’s the edited buildwin.cmd:<br> </p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="601" valign="top">rem Change OPENSSL_DIR to match your setup<br> set OPENSSL_DIR=E:\Code\openssl-1.0.1e.tar\openssl-1.0.1e<br> set OPENSSL_INCLUDE=%OPENSSL_DIR%\inc32<br> set OPENSSL_LIB=%OPENSSL_DIR%\out32dll;%OPENSSL_DIR%\lib\VC<br> set INCLUDE=%INCLUDE%;%OPENSSL_INCLUDE%<br> set LIB=%LIB%;%OPENSSL_LIB%</td> </tr></tbody></table> <p style="text-align: center;"><i>Figure 6: Poco framework buildwin.cmd environment variables</i></p> <p>Note the use of inc32 for the OPENSSL_INCLUDE variable. The 1.0.1e tarball contains symlinks from include to inc32 that fail to extract properly on a Windows host, resulting in 0 byte .h files in the include folder.</p> <p>We can now build the Poco framework static libs using the Visual Studio 2010 x64 command prompt:</p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="601" valign="top"><p><br> buildwin.cmd 100 build static_mt release x64 nosamples notests</p> </td> </tr></tbody></table> <p style="text-align: center;"><i>Figure 7: Command to build Poco static libs</i></p> <p>The emitted libs can be found in the lib64 folder:</p> <p style="text-align: center;"><img src="/content/dam/blogs-blackberry-com/images/blogs/2019/07/fig8-apt28.png"><i><br> Figure 8: Poco framework static libraries</i></p> <p>Armed with our Poco and OpenSSL library files, we can now generate the IDA signatures.<br> </p> <p>The syntax for <i>pcf</i> and <i>sigmake</i> is straightforward. First, derive a pattern file for each of our .libs using <i>pcf</i>, found inside the Flair .zip download, available from Hex-Rays.</p> <p>An example execution of <i>pcf</i> for the OpenSSL libs on Mac OS (the .libs were copied locally from the build VM):</p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="601" valign="top">./flair72/bin/mac/pcf libeay32.lib<br> libeay32.lib: skipped 98, total 5646</td> </tr></tbody></table> <p style="text-align: center;"><i>Figure 9: Generating the IDA pattern file on MAC</i></p> <p>For Windows, an equivalent command would be:</p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="601" valign="top"><p><br> .\flair72\bin\win\pcf.exe libeay32.lib</p> </td> </tr></tbody></table> <p style="text-align: center;"><i>Figure 10: Generating the IDA pattern file on Windows</i></p> <p>Now generate signature files and resolve any resulting collisions. Collisions occur when the generalized opcodes taken from object files within the .lib are the same for more than one sub routine. The Flair signature generator won<i>’</i>t arbitrate, it<i>’</i>s up to the user to hand-curate (or ignore) any collisions.</p> <p>Depending on how many collisions are identified and how much time is available, you can opt to leave all colliding subroutines un-named or manually resolve/assign names by inspecting the .exc file.</p> <p>It<i>’</i>s helpful to add a name field to the signature file. This will be displayed in the FLAIR selection dialog, making your custom sigs easier to identify – particularly if you’re building lots of different versions with distinct compiler flags:</p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="601" valign="top">./flair72/bin/mac/sigmake -n&quot;OpenSSL 1.0.1e x64 VS2010 LIBEAY32 Od&quot;<br> libeay32.pat openssl-101e-x64-vs2010-libeay32.sig<br> openssl-101e-x64-vs2010-libeay32-Od.sig: modules/leaves: 2971/5438,<br> COLLISIONS: 114</td> </tr></tbody></table> <p style="text-align: center;"><i>Figure 11: FLAIR signature creation command-line</i></p> <p>For this example, we opt to take the path of least resistance and ignore all collisions - delete the four comment lines at the top of the generated .exc file. Re-execute <i>sigmake</i> to indicate the contents of the .exc file should be incorporated. No output means success. Repeat for ssleay32.lib.</p> <p>As a final step, our signatures need to be copied into the IDA install. On Mac OS for PE/COFF files:</p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="601" valign="top"><p><br> /Applications/IDA XXX YYY/ida.app/Contents/MacOS/sig/pc</p> </td> </tr></tbody></table> <p style="text-align: center;"><i>Figure 12: IDA signature files location on MAC</i></p> <p>For Windows installs, the default location would be:</p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="601" valign="top"><p><br> Program Files\IDA XXX\sig\pc</p> </td> </tr></tbody></table> <p style="text-align: center;"><i>Figure 13: IDA signature files location on Windows</i></p> <p>With the signatures in place, let’s apply them to the sample (File -&gt; Load File -&gt; FLIRT Signature File). No IDA restart is required.</p> <p>The Signatures sub-view tells us how well our signatures are faring:</p> <p style="text-align: center;"><img src="/content/dam/blogs-blackberry-com/images/blogs/2019/07/fig14-apt28.png"><br> <i>Figure 14: Poco framework signatures applied</i></p> <p>Complementing this with our OpenSSL signatures:</p> <p style="text-align: center;"><img src="/content/dam/blogs-blackberry-com/images/blogs/2019/07/fig15-apt28.png"><br> <i>Figure 15: OpenSSL signatures applied</i></p> <p>Progress, but many OpenSSL functions have been missed. Skimming through the disassembly for code still flagged as <i>Regular function</i>, the string annotations (comments) for OpenSSL code are readily apparent. Something in our signature generation has run wide of the mark.<br> </p> <p>By cross-referencing disassembly strings in IDA (e.g., “retcode=” present in ﻿sub_180097950), with the OpenSSL source code (hint: grep), we can identify a routine to serve as a starting point for improving our custom signatures.</p> <p>For the sake of brevity, ﻿sub_180097950 in IDA is the OpenSSL function module_run, found in ./crypto/conf/conf_mod.c. The string constants to the ERR_add_error_data function map (uniquely) to the IDA-generated cross-reference comments.</p> <p>Inspecting libeay32.pat gives us the current pattern is for the module_run function:</p> <p style="text-align: center;"><img src="/content/dam/blogs-blackberry-com/images/blogs/2019/07/fig16-apt28.png"><i><br> Figure 16: FLAIR pattern for module_run</i></p> <p>Which disassembles to:</p> <p style="text-align: center;"><img src="/content/dam/blogs-blackberry-com/images/blogs/2019/07/fig17-apt28.png"><br> <i>Figure 17: OpenSSL’s module_run as compiled using “Ox” in Visual Studio 2010</i></p> <p>Compare this with our sample’s module_run:</p> <p style="text-align: center;"><img src="/content/dam/blogs-blackberry-com/images/blogs/2019/07/fig18-apt28.png"><br> <i>Figure 18: sub_180097950 opcodes</i></p> <p>Clearly, our .lib compiled with Visual Studio 2010 has generated a different set of opcodes.<br> </p> <p>If object files inside the .lib have differing opcodes, then our derived signatures won<i>’</i>t match those in the sample and, as is the case for our “stock” build here, legitimate OpenSSL code is missed.</p> <p>The disassembly for the module_run opcodes in our .pat file starts with a <a href="https://docs.microsoft.com/en-us/cpp/build/reference/hotpatch-create-hotpatchable-image?view=vs-2019">2-byte hotpatch</a> <a href="https://docs.microsoft.com/en-us/cpp/build/reference/hotpatch-create-hotpatchable-image?view=vs-2019" target="_blank">aligned</a><sup>[1]</sup> push rbx instruction (40 53; hotpatch is implicit on x64). This is followed by preservation by the callee of non-volatile registers rbx, rsi, rdi, as determined by the x64 calling convention.</p> <p>Our APT-28 function prolog for the same function shows the use of <i>spill</i> or <i>home</i> space on the stack for the r8, r9, rcx and rdx registers.</p> <p>An explanation for the difference in compiler output comes courtesy of Raymond Chen in <a href="https://devblogs.microsoft.com/oldnewthing/20110302-00/?p=11333" target="_blank">a blog post from 2011:</a><sup>[2]</sup></p> <p><i>&quot;When compiler optimizations are disabled, the Visual C++ x64 compiler will spill all register parameters into their corresponding slots. This has as a nice side effect that debugging is a little easier, but really it’s just because you disabled optimizations, so the compiler generates simple, straightforward code, making no attempts to be clever.”</i></p> <p>With this in mind, let’s try building a <i>non-optimised</i> version of OpenSSL and see if it yields any improvements to our IDA signature hit count.</p> <p>OpenSSL compilation is adjusted by modifying nt.mak and editing the CFLAGS statement. Compiler optimisations are disabled by changing the default <i>Ox</i> (most speed optimisations) to <i>Od</i> (disable optimisations):</p> <table border="1" cellspacing="0" cellpadding="0"> <tbody><tr><td width="601" valign="top"># Set your compiler options<br> PLATFORM=VC-WIN64A<br> CC=cl<br> CFLAGS= /MT <b>/Od</b> -DOPENSSL_THREADS -DDSO_WIN32 -W3 –Gs0 -Gy -nologo<br> APP_CFLAG= /Zi /Fd$(TMP_D)/app<br> LIB_FLAG= /Zl /Zi /Fd$(TMP_D)/lib</td> </tr></tbody></table> <p style="text-align: center;"><i>Figure 19: Optimisations disabled via Ox -&gt; Od</i></p> <p>Following recompilation, regeneration of signatures, and a re-apply in IDA, our custom signature hit count looks healthier. The previously missed OpenSSL module_run function has also been correctly identified:</p> <p style="text-align: center;"><img src="/content/dam/blogs-blackberry-com/images/blogs/2019/07/fig20-apt28.png"><i><br> Figure 20: Revised Poco and OpenSSL signatures</i></p> <p>Compare the IDA Navigator toolbar showing initial decomposition (Figure 21) with custom Poco and non-optimised OpenSSL signatures applied (Figure 22):</p> <p style="text-align: center;"><img src="/content/dam/blogs-blackberry-com/images/blogs/2019/07/fig21-apt28.png"><br> <i>Figure 21: Initial decomposition</i></p> <p style="text-align: center;"><img src="/content/dam/blogs-blackberry-com/images/blogs/2019/07/fig22-apt28.png"><br> <i>Figure 22: Decomposition after applying Poco and OpenSSL signatures</i></p> <p>Much of the remaining, unidentified code relates to C++ exception handling, thunk functions (single jmp instructions), or small sub routines that were marked as having collisions at the time of signature generation. These are easy to identify with only a cursory review.<br> </p> <p>A valid consideration when developing custom signatures is the ability to mirror the author’s development environment. Visual Studio 2010 is quite old and only available for download from Microsoft if you are fortunate enough to have an MSDN subscription. Does the accuracy of our signatures change if Visual Studio 2019 Community Edition is used?</p> <p><i>Version 1.7.3 of the Poco C++ framework, released in May 2016, only supports up to Visual Studio 2015, therefore, no attempt was made to rebuild signatures using Visual Studio 2019:</i></p> <p style="text-align: center;"><img src="/content/dam/blogs-blackberry-com/images/blogs/2019/07/fig23-apt28.png"><br> <i>Figure 23: OpenSSL built with VS2019 Community; optimizations disabled</i></p> <p>Building v1.0.1e of the OpenSSL framework, released Feb 2013, using Visual Studio 2019 ends in premature failure: unresolved symbols to iob_func,a consequence of stdio changes made to the Microsoft CRT in Visual Studio 2015. Fortunately, the errors occur when building OpenSSL test executables - the static libraries are already (successfully) built by that point.<br> </p> <p>Repeating the process using Visual Studio 2015 Community Edition:</p> <p style="text-align: center;"><img src="/content/dam/blogs-blackberry-com/images/blogs/2019/07/fig24-apt28.png"><br> <i>Figure 24: OpenSSL &amp; Poco Framework built with Visual Studio 2015 Community</i></p> <p>For Visual Studio 2015 and 2019, the OpenSSL and Poco static libraries were built following a default install. The reason behind the reduction in signature hits was not investigated. One possibility is the addition of security/SDL checks incorporated by default in newer Visual Studio versions, altering the prolog opcodes and resultant Flair pattern.<br> </p> <p>Signature hit counts reported by IDA for different Visual Studio builds (2010, 2015 and 2019) tells us the most accurate signatures are obtained when mirroring the author’s build environment – at least for analysis of x64 PE files and when using default installs of Visual Studio.</p> <p>In this instance, the PE Rich header appears to be telling the truth.</p> <p>With our custom signatures applied, we’re ready to commence analysis of the sample. Reducing the amount of unidentified code has greatly simplified the analysis effort. We can now start in earnest to understand its inner workings, and how this version has evolved from previous ITW variants.</p> <p>Now the interesting work begins. счастливой охоты!</p> <p><i>Lumina metadata for the Poco and OpenSSL libraries has been pushed to Hex Rays. Anyone with IDA 7.2 or above can perform a Lumina pull from within IDA and get immediate identification of all benign library code found within this sample.</i></p> <p><b><br> Citations:</b></p> <p><sup>[1]</sup> <i><a href="https://docs.microsoft.com/en-us/cpp/build/reference/hotpatch-create-hotpatchable-image?view=vs-2019" target="_blank">https://docs.microsoft.com/en-us/cpp/build/reference/hotpatch-create-hotpatchable-image?view=vs-2019</a><br>  </i><sup>[2]</sup> <a href="https://devblogs.microsoft.com/oldnewthing/20110302-00/?p=11333" target="_blank"><i>https://devblogs.microsoft.com/oldnewthing/20110302-00/?p=11333</i></a></p> </div>
    
    
</div>


    
    
    <div class="authorblog"><!--Pulling author bio from author page-->

    
    
        
  



<div class="author-info" data-author-name="The BlackBerry Cylance Threat Research Team" data-author-path="https://blogs.blackberry.com/en/2019/07/flirting-with-ida-and-apt28">
  <div class="author-avatar">
    
    <img src="/content/dam/blogs-blackberry-com/images/blogs/blackberry-blogs/img/generic-profile-image.png" class="author-avatar" alt="The BlackBerry Cylance Threat Research Team"/>				
    
  </div><!-- .author-avatar -->
  <div class="author-description">
      
    
    <h2>About The BlackBerry Cylance Threat Research Team</h2>
    The BlackBerry Cylance Threat Research team examines malware and suspected malware to better identify its abilities, function and attack vectors. Threat Research is on the frontline of information security and often deeply examines malicious software, which puts us in a unique position to discuss never-seen-before threats.<br />
  </div><!-- .author-description	-->
</div>
<hr class="author-hr"/>
    
</div>


    
    
    <div class="socialsharing">

<div class="socialSharing row">
	<ul class="socialSharing-icons">
		<li>
			<a href="https://x.com/intent/tweet?url=https://blogs.blackberry.com/en/2019/07/flirting-with-ida-and-apt28&text=Flirting%20With%20IDA%20and%20APT28&via=BlackBerry" title="Share on X" target="_blank" class="x-share">
				<span class="sr-only sr-only-focusable">Share on X</span>
				<span class="svgIcon-socialSharing svgIcon-socialSharing--tw" aria-hidden="true">
					<svg viewBox="0 0 1200 1227"><path d="M714.163 519.284L1160.89 0H1055.03L667.137 450.887L357.328 0H0L468.492 681.821L0 1226.37H105.866L515.491 750.218L842.672 1226.37H1200L714.137 519.284H714.163ZM569.165 687.828L521.697 619.934L144.011 79.6944H306.615L611.412 515.685L658.88 583.579L1055.08 1150.3H892.476L569.165 687.854V687.828Z"></path></svg>
				</span>
			</a>
		</li>
		<li>
			<a href="https://www.facebook.com/sharer/sharer.php?u=https://blogs.blackberry.com/en/2019/07/flirting-with-ida-and-apt28" title="Share on Facebook" target="_blank" class="facebook-share">
				<span class="sr-only sr-only-focusable">Share on Facebook</span>
				<span class="svgIcon-socialSharing svgIcon-socialSharing--fb" aria-hidden="true">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 264 512"><path d="M76.7 512V283H0v-91h76.7v-71.7C76.7 42.4 124.3 0 193.8 0c33.3 0 61.9 2.5 70.2 3.6V85h-48.2c-37.8 0-45.1 18-45.1 44.3V192H256l-11.7 91h-73.6v229"/></svg>
				</span>
			</a>
		</li>
		<li>
			<a href="https://www.linkedin.com/shareArticle?mini=true&url=https://blogs.blackberry.com/en/2019/07/flirting-with-ida-and-apt28&title=Flirting%20With%20IDA%20and%20APT28&summary=&source=blogs.blackberry.com" title="Share on LinkedIn" target="_blank" class="linkedin-share">
				<span class="sr-only sr-only-focusable">Share on LinkedIn</span>
				<span class="svgIcon-socialSharing svgIcon-socialSharing--li" aria-hidden="true">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448.1 512"><path d="M100.3 448H7.4V148.9h92.9V448zM53.8 108.1C24.1 108.1 0 83.5 0 53.8S24.1 0 53.8 0s53.8 24.1 53.8 53.8-24.1 54.3-53.8 54.3zM448 448h-92.7V302.4c0-34.7-.7-79.2-48.3-79.2-48.3 0-55.7 37.7-55.7 76.7V448h-92.8V148.9h89.1v40.8h1.3c12.4-23.5 42.7-48.3 87.9-48.3 94 0 111.3 61.9 111.3 142.3V448h-.1z"/></svg>
				</span>
			</a>
		</li>
		<li>
			<a href="mailto:?subject=Flirting%20With%20IDA%20and%20APT28&body=https://blogs.blackberry.com/en/2019/07/flirting-with-ida-and-apt28" title="Email" class="email-share">
				<span class="sr-only sr-only-focusable">Email</span>
				<span class="svgIcon-socialSharing svgIcon-socialSharing--email" aria-hidden="true">
					<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path d="M502.3 190.8c3.9-3.1 9.7-.2 9.7 4.7V400c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V195.6c0-5 5.7-7.8 9.7-4.7 22.4 17.4 52.1 39.5 154.1 113.6 21.1 15.4 56.7 47.8 92.2 47.6 35.7.3 72-32.8 92.3-47.6 102-74.1 131.6-96.3 154-113.7zM256 320c23.2.4 56.6-29.2 73.4-41.4 132.7-96.3 142.8-104.7 173.4-128.7 5.8-4.5 9.2-11.5 9.2-18.9v-19c0-26.5-21.5-48-48-48H48C21.5 64 0 85.5 0 112v19c0 7.4 3.4 14.3 9.2 18.9 30.6 23.9 40.7 32.4 173.4 128.7 16.8 12.2 50.2 41.8 73.4 41.4z"/></svg>
				</span>
			</a>
		</li>
	</ul>
</div>
</div>


    
    
    <div class="backbutton">
<a href="javascript:history.back()" class="cta cta-primary btn-back-button">Back</a></div>



      </div>
      
          
      </div>
    </section>
      
  
  
</div>



</main><footer data-nosnippet>
	<div class="container pt-2">
		<nav id="footerNav">
			<div>
				<div class="row my-4">
					<div class="socialLinks col-lg-4 col-md-4 col-sm-12 pb-3">
						<a href="https://www.facebook.com/BlackBerry/" class="socialLink" target="_blank" rel="noopener" style="padding-left: 0 !important;">
							<span class="sr-only" aria-label="BlackBerry Facebook Account">Facebook</span>
							<span class="svgIcon-social" aria-hidden="true">
								<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M448 56.7v398.5c0 13.7-11.1 24.7-24.7 24.7H309.1V306.5h58.2l8.7-67.6h-67v-43.2c0-19.6 5.4-32.9 33.5-32.9h35.8v-60.5c-6.2-.8-27.4-2.7-52.2-2.7-51.6 0-87 31.5-87 89.4v49.9h-58.4v67.6h58.4V480H24.7C11.1 480 0 468.9 0 455.3V56.7C0 43.1 11.1 32 24.7 32h398.5c13.7 0 24.8 11.1 24.8 24.7z"/></svg>
							</span>
						</a>
						<a href="https://x.com/blackberry" target="_blank" class="socialLink" rel="noopener">
							<span class="sr-only" aria-label="BlackBerry X Account">X</span>
							<span class="svgIcon-social">
								<svg width="28" height="28" viewBox="0 0 1200 1227"><path d="M714.163 519.284L1160.89 0H1055.03L667.137 450.887L357.328 0H0L468.492 681.821L0 1226.37H105.866L515.491 750.218L842.672 1226.37H1200L714.137 519.284H714.163ZM569.165 687.828L521.697 619.934L144.011 79.6944H306.615L611.412 515.685L658.88 583.579L1055.08 1150.3H892.476L569.165 687.854V687.828Z" fill="#000"></path></svg>
							</span>
						</a>
						<a href="https://www.youtube.com/user/BlackBerry" target="_blank" class="socialLink" rel="noopener">
							<span class="sr-only" aria-label="BlackBerry YouTube Account">YouTube</span>
							<span class="svgIcon-social">
								<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><path d="M549.655 124.083c-6.281-23.65-24.787-42.276-48.284-48.597C458.781 64 288 64 288 64S117.22 64 74.629 75.486c-23.497 6.322-42.003 24.947-48.284 48.597-11.412 42.867-11.412 132.305-11.412 132.305s0 89.438 11.412 132.305c6.281 23.65 24.787 41.5 48.284 47.821C117.22 448 288 448 288 448s170.78 0 213.371-11.486c23.497-6.321 42.003-24.171 48.284-47.821 11.412-42.867 11.412-132.305 11.412-132.305s0-89.438-11.412-132.305zm-317.51 213.508V175.185l142.739 81.205-142.739 81.201z"/></svg>
							</span>
						</a>
						<a href="https://www.instagram.com/blackberry/" target="_blank" class="socialLink" rel="noopener">
							<span class="sr-only" aria-label="BlackBerry Instagram Account">Instagram</span>
							<span class="svgIcon-social">
								<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z"/></svg>
							</span>
						</a>
					</div>
					
				</div>
				<hr/>
				<div class="row mt-5">
					<div class="col-xs-12 col-md-4">
						
							<a class="footerCollapse" role="button" data-toggle="collapse" href="#collapse21" aria-expanded="false" aria-controls="collapse21">
								<h3>
									Corporate
									<span class="open">
										<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"/></svg>
									</span>
									<span class="closed">
										<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z"/></svg>
									</span>
								</h3>
							</a>
							
								<div id="collapse21" class="collapse in">
									<ul>
										<li>
											
											<a href="https://www.blackberry.com/us/en/company" rel="noopener" target="_blank">Company</a>
										</li>
									
										<li>
											<a href="https://www.blackberry.com/us/en/company/newsroom" target="_blank">Newsroom</a>
											
										</li>
									
										<li>
											<a href="https://www.blackberry.com/us/en/company/investors" target="_blank">Investors</a>
											
										</li>
									
										<li>
											
											<a href="https://www.blackberry.com/us/en/company/careers" rel="noopener" target="_blank">Careers</a>
										</li>
									
										<li>
											<a href="https://www.blackberry.com/us/en/company/leadership" target="_blank">Leadership</a>
											
										</li>
									
										<li>
											<a href="https://www.blackberry.com/us/en/company/corporate-responsibility-at-blackberry" target="_blank">Corporate Responsibility</a>
											
										</li>
									
										<li>
											
											<a href="https://www.blackberry.com/us/en/company/certifications" rel="noopener" target="_blank">Certifications</a>
										</li>
									
										<li>
											
											<a href="https://www.blackberry.com/us/en/success-stories" rel="noopener" target="_blank">Customer Success</a>
										</li>
									</ul>
								</div>
							
						
					</div>
					<div class="col-xs-12 col-md-4">
						
							<a class="footerCollapse" role="button" data-toggle="collapse" href="#collapse31" aria-expanded="false" aria-controls="collapse31">
								<h3>
									Developers
									<span class="open">
										<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"/></svg>
									</span>
									<span class="closed">
										<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z"/></svg>
									</span>
								</h3>
							</a>
							
								<div class="collapse in" id="collapse31">
									<ul>
										<li>
											
											<a href="https://developers.blackberry.com/" rel="noopener" target="_blank">Enterprise Platform &amp; Apps</a>
										</li>
									
										<li>
											
											<a href="https://www.qnx.com/account/login.html?returnaddress=%2Fdownload%2Fgroup.html%3Fprogramid%3D29178" rel="noopener" target="_blank">BlackBerry QNX Developer Network</a>
										</li>
									</ul>
								</div>
							
						
							<a class="footerCollapse" role="button" data-toggle="collapse" href="#collapse32" aria-expanded="false" aria-controls="collapse32">
								<h3>
									Blogs
									<span class="open">
										<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"/></svg>
									</span>
									<span class="closed">
										<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z"/></svg>
									</span>
								</h3>
							</a>
							
								<div class="collapse in" id="collapse32">
									<ul>
										<li>
											
											<a href="https://blogs.blackberry.com/" rel="noopener">BlackBerry ThreatVector Blog</a>
										</li>
									
										<li>
											
											<a href="https://devblog.blackberry.com/" rel="noopener" target="_blank">Developers Blog</a>
										</li>
									
										<li>
											
											<a href="https://helpblog.blackberry.com/" rel="noopener" target="_blank">Help Blog</a>
										</li>
									</ul>
								</div>
							
						
					</div>
					<div class="col-xs-12 col-md-4">
						
							<a class="footerCollapse" role="button" data-toggle="collapse" href="#collapse41" aria-expanded="false" aria-controls="collapse41">
								<h3>
									Legal
									<span class="open">
										<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"/></svg>
									</span>
									<span class="closed">
										<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z"/></svg>
									</span>
								</h3>
							</a>
							
								<div id="collapse41" class="collapse in">
									<ul>
										<li>
											<a href="https://www.blackberry.com/us/en/legal" target="_blank">Overview</a>
											
										</li>
									
										<li>
											<a href="https://www.blackberry.com/us/en/legal/accessibility" target="_blank">Accessibility</a>
											
										</li>
									
										<li>
											<a href="https://www.blackberry.com/us/en/legal/blackberry-virtual-patent-marking" target="_blank">Patents</a>
											
										</li>
									
										<li>
											<a href="https://www.blackberry.com/us/en/legal/trademarks" target="_blank">Trademarks</a>
											
										</li>
									
										<li>
											<a href="https://www.blackberry.com/us/en/legal/privacy-policy" target="_blank">Privacy Policy</a>
											
										</li>
									</ul>
								</div>
							
						
					</div>
				</div>
			</div>
			<div class="container">
				<div class="row tm10" style="padding-top: 50px;">
					<div class="col-xs-12 col-md-6 copyright">
						<p>© 2025 BlackBerry Limited. All rights reserved.</p>
					</div>
				</div>
			</div>
		</nav>
	</div>
</footer>

            
    
    
    
    
<script src="/etc.clientlibs/shared/clientlibs/jquery.min.96704cdeb2f89f0504fd10b631047e4f.js"></script>
<script src="/etc.clientlibs/blogs-bbcom/clientlibs/clientlib-dependencies.min.d41d8cd98f00b204e9800998ecf8427e.js"></script>





    
    
<script src="/etc.clientlibs/blogs-bbcom/clientlibs/clientlib-site.min.99c2223783644c816e6eadc9bcb42881.js"></script>




    

    

    
    
    

            

        
    </body>
</html>
