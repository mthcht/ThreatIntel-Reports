<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-TDBVSRVN');</script>
<!-- End Google Tag Manager -->
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<!-- Mobile Specific Metas  ================================================== -->
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
<!-- CORE CONCRETE  ================================================== -->
<script type="text/javascript">var BOOTSTRAP_VERSION ="lumen";
	var BOOTSTRAP_JS_HEAD =1;
	var BOOTSTRAP_CDN_ENABLE =0; var BOOTSTRAP_NAVBAR_TYPE =0; var BOOTSTRAP_LOGO_OPTION =0; var BOOTSTRAP_NAVBAR =1; var BootstrapInputFix =true;var BootstrapNavbarLineHeightFix =true;var BOOTSTRAP_EDT= 0; </script>

<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>Virus Bulletin :: VB2017 paper: Nine circles of Cerber</title>
<meta name="description" content="The Cerber ransomware was mentioned for the first time in March 2016 on some Russian underground forums, on which it was offered for rent in an affiliate program. Since then, it has been spread massively via exploit kits, infecting more and more users worldwide, mostly in the APAC (Asia-Pacific) region. In early August, we had a chance to take a look at the original Cerber decryptor code that was available for download upon payment of the ransom. Our main goal was to discover a flaw, based on the standard approaches we use against ransomware." />
<meta name="generator" content="concrete5 - 5.6.3.5" />
<script type="text/javascript">
var CCM_DISPATCHER_FILENAME = '/index.php';var CCM_CID = 5658;var CCM_EDIT_MODE = false;var CCM_ARRANGE_MODE = false;var CCM_IMAGE_PATH = "/concrete/images";
var CCM_TOOLS_PATH = "/index.php/tools/required";
var CCM_BASE_URL = "https://www.virusbulletin.com";
var CCM_REL = "";

</script>

	<link rel="shortcut icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
	<link rel="icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="stylesheet" type="text/css" href="/concrete/css/ccm.base.css" />
<script type="text/javascript" src="/concrete/js/jquery.js"></script>
<script type="text/javascript" src="/concrete/js/ccm.base.js"></script>

<script type="text/javascript">
var COOKIES_ALLOWED=false;
</script>
<link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure.css" />
<!--[if lte IE 8]><link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure_ie.css" /><![endif]-->

<script type="text/javascript">
var COOKIES_DISCLOSURE_HIDE_INTERVAL=10;
</script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_hide.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap-overwrites.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/members.css" />
<script type="text/javascript" src="/packages/bootstrap/js/common/prettify.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/jquery.easing.1.3.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/bootstrap.min.js"></script>
<link rel="stylesheet" type="text/css" href="/libraries/css/jquery.fancybox.css" />
<script type="text/javascript" src="/libraries/js/jquery.fancybox.pack.js"></script>
<link rel="stylesheet" media="screen" type="text/css" href="/files/cache/css/bootstrap/typography.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.4.1/chart.umd.js" integrity="sha512-ZwR1/gSZM3ai6vCdI+LVF1zSq/5HznD3ZSTk7kajkaj4D292NLuduDCO1c/NT8Id+jE58KYLKT7hXnbtryGmMg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script type="text/javascript" src="/index.php/tools/packages/free_cookies_disclosure/disclosure_i18n_js"></script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_ajax_form.js"></script>
<link rel="stylesheet" type="text/css" href="/concrete/blocks/page_list/view.css" />
<link rel="stylesheet" type="text/css" href="/blocks/expand_collapse_toc/templates/vbexpand/view.css" />
<script type="text/javascript" src="/blocks/expand_collapse_toc/js/jquery.color.js"></script>
<script type="text/javascript" src="/blocks/expand_collapse_toc/js/jquery.ba-hashchange.js"></script>
<script type="text/javascript" src="/blocks/expand_collapse_toc/js/expand.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/blocks/search/templates/VB_global_search/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/travisn_spacer/css/ccm.tnspacer.css" />
<!-- added by lian to get some nice icons: -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" integrity="sha384-T8Gy5hrqNKT+hzMclPo118YTQO6cYprQmhrYwIiQ/3axmI1hQomh7Ud2hPOy8SP1" crossorigin="anonymous">

<!-- added by lian to get syntax highlighting -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/prettify/r298/run_prettify.js" integrity="sha256-1SFdTXlsw0RkQ+iO0E91LDshGiIbPiTYqJto0px4wds=" crossorigin="anonymous"></script>

<!--[if gte IE 9]>
<script src="/packages/bootstrap/js/common/modernizr.js"></script>
<![endif]-->
<!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
<!--[if lt IE 9]>	
	
	<script src="/packages/bootstrap/js/common/html5shiv.js"></script>
	<script src="/packages/bootstrap/js/common/respond.min.js"></script>
	
<![endif]-->
</head>
<body data-spy="scroll" data-target=".bs-sidebar">

<!-- Navbar
    ================================================== -->
	<div class="navbar  navbar-fixed-top navbar-default  bs-docs-nav">
				<div class="navbar-inner">
					<div class="container"><div class="row"><div class="col-sm-4 col-md-4 logo-position-1 col-logo">
					<div class="navbar-header">
						<button type="button" class="navbar-toggle btn_navbar_custom" >
							<span class="icon-bar"></span>
							<span class="icon-bar"></span>
							<span class="icon-bar"></span>
						  </button><div class="mobile-clearfix"></div><div class="navbar-brand navbar-brand-area"><a href="/"><img border="0" class="ccm-image-block" alt="" src="/files/4614/4535/7515/logo-big.png" width="339" height="92" /></a></div>		</div>
				</div><div class="col-sm-8 col-md-8 logo-position-1 col-nav">		<div class="nav-collapse collapse nav_collapse_custom navbar-collapse" > <div style="clear:both"></div>
<div class="vb-global-search-div"> 
<form action="/index.php/global-search-results/" method="get">
<fieldset>
	<input name="search_paths[]" type="hidden" value="" />
		<input name="query" type="text"  class="vb-global-search"  placeholder="Search site..."/>
	<input name="submit" type="submit" value="Search!" style="display:none"/>
</fieldset>
</form>
</div>


<div class="tnSpacer" style="height:48px"></div>
<ul class="nav nav-pills"><li class=" nav-first nav-item-6299"><a href="/newsletter/" target="_self"  class=" nav-first nav-item-6299 "  >Newsletter</a></li><li class=" nav-item-260"><a href="/conference/" target="_self"  class=" nav-item-260 "  >VB Conference</a></li><li class=" nav-item-166"><a href="/testing/" target="_self"  class=" nav-item-166 "  >VB Testing</a></li><li class=" nav-path-selected active nav-item-160"><a href="/virusbulletin/" target="_self"  class=" nav-path-selected active nav-item-160 "  >Bulletin</a></li><li class=" nav-last nav-item-130"><a href="/blog/" target="_self"  class=" nav-last nav-item-130 "  >Blog</a></li></ul> 	</div>
				</div>
			</div><div class="clearfix"></div>
        </div>
      </div>
	 
    </div>
	<div class="navbar-top-fixed-space "><div class="clearfix"></div></div>
		
<!-- Navbar
    ================================================== -->		
<div class="container m-top-20">
	<div class="row">    
		<div class="col-md-9 col-sm-9 col-lg-9">
		<h1><a class="chapter" name="h1-vb2017-paper-nine-circles-cerber"></a>VB2017 paper: Nine circles of Cerber</h1>
<h3><a class="chapter" name="h3-stanislav-skuratovich-amp-neomi-rona"></a>Stanislav Skuratovich &amp; Neomi Rona</h3>
<p>Check Point Software Technologies, Belarus &amp; Israel</p>
<p><em>Copyright © 2017 Virus Bulletin</em></p>
<hr />
<p> </p>
<div class="ccm-expand-collapse-toc">
    <div id="ccm-expand-collapse-toc-title-11338" class="ccm-expand-collapse-toc-title ccm-expand-collapse-toc-closed" data-expander-speed="500">Table of contents</div><div id="ccm-expand-collapse-toc-content-11338" class="ccm-expand-collapse-toc-content"><p><a class="toc-level2" href="#h2-abstract">Abstract</a><br /> <a class="toc-level2" href="#h2-1-introduction">1. Introduction</a><br /> <a class="toc-level2" href="#h2-2-encryption-scheme">2. Encryption scheme</a><br /> <a class="toc-level2" href="#h2-3-decryption-scheme">3. Decryption scheme</a><br /> <a class="toc-level2" href="#h2-4-fatal-flaw">4. Fatal flaw</a><br /> <a class="toc-level2" href="#h2-5-decryption-service-installation">5. Decryption service installation</a><br /> <a class="toc-level2" href="#h2-6-ransomware-service-ecosystem">6. A ransomware-as-a-service ecosystem</a><br /> <a class="toc-level2" href="#h2-7-following-money-trail">7. Following the money trail</a><br /> <a class="toc-level2" href="#h2-summary">Summary</a><br /> <a class="toc-level2" href="#h2-acknowledgements">Acknowledgements</a><br /> <a class="toc-level2" href="#h2-references">References</a></p><p>&nbsp;</p></div></div>
<h2><a class="chapter" name="h2-abstract"></a>Abstract</h2>
<p>Without any doubt, 2016 was the year of ransomware. What makes ransomware so attractive to attackers is that it offers the possibility of large profits while not requiring too much effort. With the availability of ransomware-as-a-service, someone with very little actual knowledge of computers can easily manage a highly profitable campaign.</p>
<p>A wide variety of different ransomware families appeared over the course of the last year, including Locky, CryptoWall and CryptXXX, to name just a few. Let's talk about the very profitable Cerber.</p>
<p>The Cerber ransomware was mentioned for the first time in March 2016 on some Russian underground forums, on which it was offered for rent in an affiliate program. Since then, it has been spread massively via exploit kits, infecting more and more users worldwide, mostly in the APAC (Asia-Pacific) region. At the time of writing this paper, there are six major versions.</p>
<p>There have been multiple successful attempts to decrypt users' files without paying a ransom. At the end of July 2016, <em>Trend Micro</em> released a partially working decryptor for the first version of Cerber [<a href="#ref1">1</a>]. In early August, we had a chance to take a look at the original Cerber decryptor code that was available for download upon payment of the ransom. Our main goal was to discover a flaw, based on the standard approaches we use against ransomware.</p>
<p>From our perspective, it wouldn't be as much fun if this was one of the expected bugs – and fortunately, the one we discovered wasn't. However, as with any flaw, you need to hide the solution from the criminals. In an ironic twist, the ransomware authors released a new Cerber 2 version the day before we were due to release the decryptor.</p>
<p>In order to be able to provide our decryption tool to as many victims as possible, we gathered forces and adapted it to the new version on the same day, thus managing to release it on time. The tool was used by many victims worldwide.</p>
<p>This paper details the story of the ransomware's fatal flaw and our free decryption service [<a href="#ref2">2</a>, <a href="#ref3">3</a>]. We will dive deep into the background of Cerber as a service, the business operations, the money flow between the attacker and the affiliate, full global infection statistics and the estimated overall profit of the criminals [<a href="#ref4">4</a>].</p>
<h2><a class="chapter" name="h2-1-introduction"></a>1. Introduction</h2>
<p>In this paper we discuss one of the largest recent ransomware campaigns, known as Cerber. We describe the ransomware's encryption routine and reveal technical details of the server-side vulnerability that was used for the successful decryption of thousands of infected machines. We also share information on the money flow and estimated overall profit of the criminals, together with the tools used to collect that information. The decryption software will be available as open source on our <em>GitHub</em> repository [<a href="#ref5">5</a>].</p>
<h2><a class="chapter" name="h2-2-encryption-scheme"></a>2. Encryption scheme</h2>
<p>Let's describe the encryption scheme used by the Cerber ransomware. It uses mix of symmetric and asymmetric encryption algorithms, such as RC4 and RSA. Almost all the encryption keys are generated randomly on the victim's machine.</p>
<p>First, let's take a look at the keys that are used by Cerber during the encryption process:</p>
<table class="table table-bordered" border="0">
<tbody>
<tr>
<td><strong>Key</strong></td>
<td><strong>Appearance/description</strong></td>
<td><strong>Scope</strong></td>
</tr>
<tr>
<td><span class="monospace">RSA_M_PUB</span> (2048 bits)</td>
<td>
<p>Configuration</p>
<p>This is a master public key</p>
</td>
<td>Global</td>
</tr>
<tr>
<td><span class="monospace">RSA_X_PUB/PRI</span> (X bits)</td>
<td>
<p>Random</p>
<p>This is a local key pair</p>
</td>
<td>Global</td>
</tr>
<tr>
<td><span class="monospace">RC4_KEY</span> (128 bytes)</td>
<td>Random</td>
<td>Per file</td>
</tr>
</tbody>
</table>
<p> </p>
<p>The structure of the encrypted file is presented in <a href="#figure1">Figure 1</a>.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/ab80a74101a29edda95b32131a7c8e1c_f2108.png" alt="nine-circles-cerber-fig1.png" width="350" height="350" /><span class="centered-caption"><a class=" anchor" name="figure1"></a>Figure 1: Structure of encrypted file.</span></p>
<p>The goal of the encryption routine is to encrypt a single file from the file system. The number of bytes that are stolen from the beginning of each encrypted file (hereafter called <em>N</em>) is calculated once and depends on the local RSA key size. The steps performed by Cerber to encrypt a single file are as follows:</p>
<ol>
<li>Calculate the number of blocks that will be encrypted (up to the maximum number of blocks specified in the configuration).</li>
<li>Steal <em>N</em> bytes from the beginning of the file by replacing them with random bytes.</li>
<li>Encrypt each block with the RC4 algorithm using <span class="monospace">RC4_KEY</span> as a key.</li>
<li style="text-align: left;">The following meta information is encrypted and appended to the end of the processed file:
<table class="table table-bordered" border="0">
<tbody>
<tr>
<td><strong>Information</strong></td>
<td><strong>Algorithm</strong></td>
<td><strong>Key</strong></td>
</tr>
<tr>
<td class="monospace">FileMetainfo</td>
<td>RC4</td>
<td class="monospace">RC4_KEY</td>
</tr>
<tr>
<td class="monospace">FileStolenHeader</td>
<td>RSA</td>
<td class="monospace">RSA_X_PUB</td>
</tr>
<tr>
<td class="monospace">RSA_X_PUB/PRI</td>
<td>RSA</td>
<td class="monospace">RSA_M_PUB</td>
</tr>
</tbody>
</table>
The <span class="monospace">FileStolenHeader</span> contains <span class="monospace">RC4_KEY</span>, which can be used to restore the encrypted blocks, thus it is encrypted using <span class="monospace">RSA_X_PUB</span>. <span class="monospace">RSA_X_PRI</span> is encrypted by the master <span class="monospace">RSA_M_PUB</span> key, because it can be used for the <span class="monospace">FileStolenHeader</span> decryption.</li>
</ol>
<p>Two main data structures that represent the encrypted file are presented below:</p>
<pre class="prettyprint">struct FileStolenHeader {<br />   char ver_magic[4];    // magic header (version)<br />   uint32_t rand_bytes;  // random bytes<br />   uint16_t fn_len;      // Unicode filename length<br />   uint8_t blocks;       // blocks to encrypt<br />   uint32_t block_size;  // block size<br />   uint16_t N_to_steal;  // number of bytes to steal<br />   uint32_t N_bytes_mmh; // murmur3 hash of stolen<br />   char RC4_KEY[16];     // RC4_KEY<br />   char stolen_bytes[0]; // stolen bytes<br />};</pre>
<pre class="prettyprint"><br />struct FileMetainfo {<br />   FILETIME Creation;    // original CR time<br />   FILETIME LastAccess;  // original LA time<br />   FILETIME LastWrite;   // original LW time<br />   char orig_fn[0];      // original filename<br />   uint64_t blocks_mmh[0]; // murmur3 hash of blocks<br />};</pre>
<p>The overall structure of an encrypted file was presented in <a href="#figure1">Figure 1</a>, however this can vary depending on the size of encrypted file.</p>
<p>If a single block is encrypted:</p>
<pre class="prettyprint">struct EncryptedFile {<br />   char rand_bytes[N]; // stolen bytes repl<br />   char ct[FileSize-N]; // encrypted file data<br />   FileMetainfo enc_fmi; // encrypted FMI stru<br />   char enc_fsh[0]; // encrypted FSH stru<br />   char enc_RSA_X[0]; // encrypted RSA_X_*<br />};</pre>
<p>If multiple blocks are encrypted:</p>
<pre class="prettyprint">struct EncryptedFile {<br />   char rand_bytes[N];              // stolen bytes repl<br />   char pt_0[K];                       // plaintext chunk<br />   char ct_0[max_block_size];  // ciphertext chunk<br />   ...<br />   char pt_y[M];                      // plaintext chunk<br />   char ct_y[max_block_size]; // ciphertext chunk<br />   FileMetainfo enc_fmi;          // encrypted FMI stru<br />   char enc_fsh[0];                // encrypted FSH stru<br />   char enc_RSA_X[0];          // encrypted RSA_X_*<br />};</pre>
<p>If the file is small:</p>
<pre class="prettyprint">struct EncryptedFile {<br />   char rand_bytes[N];      // stolen bytes repl<br />   FileMetainfo enc_fmi;    // encrypted FMI stru<br />   char enc_fsh[0];          // encrypted FSH stru<br />   char enc_RSA_X[0];    // encrypted RSA_X_*<br />};</pre>
<p> </p>
<h2><a class="chapter" name="h2-3-decryption-scheme"></a>3. Decryption scheme</h2>
<p>Let's discuss the decryption scheme that is used by the Cerber ransomware, after the ransom has been paid. An overview of the decryption scheme is shown in <a href="#figure2">Figure 2</a>.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/8ca33fa9749fd5e2605f4608e75410d9_f2109.png" alt="nine-circles-cerber-fig2.png" width="350" height="735" /><span class="centered-caption"><a class=" anchor" name="figure2"></a>Figure 2: Decryption scheme.</span></p>
<p>The following steps are performed by the decryptor in order to restore encrypted files:</p>
<ol>
<li>Extract encrypted blob of <span class="monospace">RSA_X_PUB/PR</span>I (hereafter <span class="monospace">ENC_RSA_X_BLOB</span>) from the end of the encrypted file and send it to the server.</li>
<li>Decrypt <span class="monospace">RSA_X_PRI</span> on the server by using <span class="monospace">RSA_M_PRI</span> and send it to the client. <span class="monospace">RSA_M_PRI</span> is the master private key and is known only to the attacker.</li>
<li>Use the obtained <span class="monospace">RSA_X_PRI</span> to decrypt the <span class="monospace">FileStolenHeader</span> structure, thus restoring <span class="monospace">RC4_KEY</span> and the stolen bytes.</li>
<li>Decrypt encrypted blocks by using <span class="monospace">RC4_KEY</span>.</li>
<li>Restore original file content by combining stolen header with the decrypted blocks.</li>
<li>Decrypt <span class="monospace">FileMetainfo</span> structure using <span class="monospace">RC4_KEY</span> and restore file meta information.</li>
</ol>
<p>As we can see, the decryption routine is not complicated. The only blind spot is the <span class="monospace">RSA_M_PRI</span> key. Factorization of a 2048-bit number is a nice challenge [<a href="#ref6">6</a>], but is definitely not what we want to deal with, because cracking such a long key is not feasible in a reasonable amount of time.</p>
<p>Let's take a look at how the decryptor communicates with the server in order to obtain <span class="monospace">RSA_X_PRI</span>, which is critical for the decryption process. The decryptor encodes <span class="monospace">ENC_RSA_X_BLOB</span> using a base64 algorithm (hereafter <span class="monospace">PRIVATE_KEY</span>). The ID of the infected machine is calculated as an MD5 of the previously encoded block (hereafter <span class="monospace">SIGN</span>) (see Figure 3).</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/8015/0954/3027/nine-circles-cerber-fig3.png" alt="nine-circles-cerber-fig3.png" width="262" height="272" /><span class="centered-caption">Figure 3: Signature generation.</span></p>
<p>The first message contains only the machine ID, which is sent using the following format:</p>
<pre>"sign=%s" % SIGN</pre>
<p>The response from the server contains a CAPTCHA image, which must be solved to continue decryption. We assume that this is done to protect the decryption server from the DDoS.</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/8015/0954/3065/nine-circles-cerber-fig4.png" alt="nine-circles-cerber-fig4.png" width="635" height="443" /><span class="centered-caption">Figure 4: CAPTCHA.</span></p>
<p>The CAPTCHA solution, together with <span class="monospace">PRIVATE_KEY</span> and <span class="monospace">SIGN</span>, are sent to the server using the following format:</p>
<pre>"captcha=%d&amp;sign=%s&amp;private_key=%s" % (CAPTCHA, SIGN, PRIVATE_KEY)</pre>
<p>If the CAPTCHA has successfully been solved and the specified machine ID has made the ransom payment, the server decrypts <span class="monospace">RSA_X_PRI</span> and sends it back to the client. Then the decryptor starts the file restore process.</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/7815/0954/3127/nine-circles-cerber-fig5.png" alt="nine-circles-cerber-fig5.png" width="633" height="439" /><span class="centered-caption">Figure 5: Successful decryption.</span></p>
<p>If the ransom for the specified machine ID is not paid, the user receives the message shown in Figure 6 during communication with decryption server.</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/5815/0954/3162/nine-circles-cerber-fig6.png" alt="nine-circles-cerber-fig6.png" width="635" height="444" /><span class="centered-caption">Figure 6: Ransom not paid.</span></p>
<p>Now we have familiarized ourselves with the decryption scheme and communication method, let's consider what can go wrong in the existent solution.</p>
<p> </p>
<h2><a class="chapter" name="h2-4-fatal-flaw"></a>4. Fatal flaw</h2>
<p>This section describes the approaches that were used to find a flaw in the decryptor. First, we should understand how exactly the server validates that the ransom has been paid for a specific machine. The most obvious answer is the use of the <span class="monospace">SIGN</span> field. If the ransom is paid for SIGN, the server decrypts <span class="monospace">PRIVATE_KEY</span> and sends <span class="monospace">RSA_X_PRI</span> to the user. Let's try to rewrite the server code that is responsible for handling decryption requests from users based on received responses:</p>
<pre class="prettyprint">def handle_request_decrypt_private_key(packet):<br />   if not captcha_correct(packet['captcha']):<br />      send('{"error": "Captcha expired or invalid"}')<br />      return<br />   if not paid(packet['sign']):<br />      send('{"error":"Not paid"}')<br />      return<br />   pk = urls_to_b64(packet['private_key'])<br />   #**********************************************<br />   # DOES SERVER SIDE HAVE SUCH INTEGRITY CHECK ?#<br />   if md5(pk).hexdigest() != packet['sign'])<br />      send('{???}')<br />      return<br />   #**********************************************<br />   RSA_X_PRI = decrypt(b64decode(pk))<br />   send('{"error": "null", "private_key": "%s"}' %\<br />      encode(RSA_X_PRI))</pre>
<p>Now let's try to recreate the server's exact behaviour based on the received responses and common sense:</p>
<ol>
<li>Check if CAPTCHA is correct.</li>
<li>Check if <span class="monospace">SIGN</span> is paid. Server treats <span class="monospace">SIGN</span> as a unique machine ID.</li>
<li>Perform integrity check on delivered <span class="monospace">PRIVATE_KEY</span> using <span class="monospace">SIGN</span>, because <span class="monospace">SIGN</span> is the hexlified MD5 of <span class="monospace">PRIVATE_KEY</span>.</li>
<li>Decrypt <span class="monospace">PRIVATE_KEY</span> and extract <span class="monospace">RSA_X_PRI</span>.</li>
</ol>
<p>The first two steps can easily be checked by sending an incorrect CAPTCHA solution and <span class="monospace">SIGN</span> that is unpaid. The third step is what we are really interested in.</p>
<p>Let's imagine that <span class="monospace">SIGN_A</span> signature is paid and we have a possibility to restore <span class="monospace">RSA_X_PRI_A</span>. <span class="monospace">RSA_X_PRI_A</span> is restored from the <span class="monospace">PRIVATE_KEY</span> data that is under the sender's control. So what happens if the user spoofs that data?</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/9712f9fa741137e52c9a0a5097d7287f_f2114.png" alt="nine-circles-cerber-fig7.png" width="350" height="315" /><span class="centered-caption">Figure 7: Original PRIVATE_KEY for the paid SIGN.</span></p>
<p>Let's think what exactly we can achieve by setting <span class="monospace">PRIVATE_KEY</span> to prepared data assuming <span class="monospace">SIGN_A</span> is paid. What will happen if we can calculate <span class="monospace">PRIVATE_KEY_V</span> for another infection? Assuming that a data integrity check is absent, then the server will simply decrypt <span class="monospace">PRIVATE_KEY_V</span> and extract <span class="monospace">RSA_X_PRI_V</span>, thus giving the possibility to restore infected files for the user who hasn't paid! By applying the same tactics to all infected machines, we can restore them by using only one valid <span class="monospace">SIGN</span>.</p>
<p>If the server does not perform an integrity check of the <span class="monospace">PRIVATE_KEY</span> data, then it is decrypted and the <span class="monospace">RSA_X_PRI_V</span> key is sent to the user. The user then adopts that key to restore encrypted files.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/9de0f13ae2538c9d1d327cd08c4a48d7_f2115.png" alt="nine-circles-cerber-fig8.png" width="350" height="315" /><span class="centered-caption">Figure 8: Spoofed PRIVATE_KEY for the paid SIGN.</span></p>
<p>To showcase this theory we paid the ransom for one infection that was performed on a specially prepared machine. All the checks on the server side passed and the decryption process succeeded (Figure 9).</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/9415/0954/4039/nine-circles-cerber-fig9.png" alt="nine-circles-cerber-fig9.png" width="629" height="440" /><span class="centered-caption">Figure 9: Successful decryption for original PRIVATE_KEY.</span></p>
<p>Next, a second machine was infected and encrypted with the Cerber ransomware. It obviously had a different <span class="monospace">PRIVATE_KEY</span>. The original decryptor was dirty patched to use the same <span class="monospace">SIGN</span> as was previously paid. We started the decryptor on the second infected machine, and all the data on the infected machine was decrypted! (Figure 10).</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/8515/0954/4093/nine-circles-cerber-fig10.png" alt="nine-circles-cerber-fig10.png" width="634" height="444" /><span class="centered-caption">Figure 10: Successful decryption for spoofed PRIVATE_KEY.</span></p>
<p>The Cerber authors simply did not perform a data integrity check, thus giving us the possibility to exploit this bug and decrypt machines with only one paid signature.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/21bc0ab1cdb45b1bb632caf117a5c052_f2118.png" alt="nine-circles-cerber-fig11.png" width="500" height="79" /><span class="centered-caption">Figure 11: Data integrity check that authors have skipped.</span></p>
<p> </p>
<h2><a class="chapter" name="h2-5-decryption-service-installation"></a>5. Decryption service installation</h2>
<p>This section provides a general description of what actions were performed in order to establish a decryption service as soon as possible after the vulnerability was discovered. Our two main goals were to hide the flaw from the attackers for as long as possible and to make the bandwidth for decryption as wide as possible.</p>
<p>In order to fulfil both requirements we decided to set up a server that would be responsible for fetching the keys. After being fetched, the obtained key would be sent to the infected user. This key would then be used by the client-side decryptor to restore the files. Figure 12 provides an overview of the process.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/92543e8be224333bff6b94b886a7c469_f2119.png" alt="nine-circles-cerber-fig12.png" width="350" height="907" /><span class="centered-caption">Figure 12: Fetching decryption key for specific infection.</span></p>
<p>The following steps are taken in order to retrieve the decryption key for a specific infection:</p>
<ol>
<li>User uploads encrypted file from the infected machine to the <em>Check Point Decryption Service</em> (<em>CPDS</em>).</li>
<li><em>CPDS</em> extracts <span class="monospace">ENC_RSA_X_BLOB</span> from the received file, which is aliased with<span class="monospace"> PRIVATE_KEY_K</span>.</li>
<li><span class="monospace">PRIVATE_KEY_K</span> is sent to the Cerber Decryption Server (CDS) together with the paid <span class="monospace">SIGN_A</span>.</li>
<li>CDS checks if <span class="monospace">SIGN_A</span> is paid and decrypts the <span class="monospace">RSA_X_PRI</span> client private key by using <span class="monospace">RSA_M_PRI</span>.</li>
<li>CDS sends <span class="monospace">RSA_X_PRI_K</span> in a specific format to the <em>CPDS</em>.</li>
<li><em>CPDS</em> extracts <span class="monospace">RSA_X_PRI_K</span> and sends the file with its content to the user.</li>
<li>User uses the obtained file together with the <span class="monospace">RSA_X_PRI_K</span> in order to restore encrypted files by the running prepared application.</li>
</ol>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/5815/0954/4343/nine-circles-cerber-fig13.png" alt="nine-circles-cerber-fig13.png" width="677" height="342" /><span class="centered-caption">Figure 13: Infected machine decryption process.</span></p>
<p>In order to parallelize victims' requests and reduce both the waiting time and server bug fixing, four decryption signatures were purchased. With that number of keys we were able to handle up to 20,000 decryption requests per day.</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/eb85037f1b635f27bba7c07916752652_f2121.jpg" alt="nine-circles-cerber-fig14.jpg" width="700" height="483" /><span class="centered-caption">Figure 14: Check Point Cerber Ransomware Decryption Tool.</span></p>
<p>Now that we have examined the server-side flaw that gave us the chance to decrypt infected computers, let's take a look at the Cerber ecosystem and associated money laundering.</p>
<p> </p>
<h2><a class="chapter" name="h2-6-ransomware-service-ecosystem"></a>6. A ransomware-as-a-service ecosystem</h2>
<p>Cerber ransomware-as-a-service illustrates every aspect of an effective business franchise. The actor behind the operation, dubbed 'crbr', offers the ransomware for sale through a private, carefully managed affiliate program – actors who are willing to distribute the ransomware are granted a comprehensive use panel through which they can monitor the rate of the infections, encryption process and ransom payments. In return, 40% of the profits are transferred to 'crbr' as a fee. Based on data collected by our sensors, during July 2016 Cerber affiliates ran over 150 active campaigns, infecting nearly 150,000 victims, with a total estimated profit of US$195,000 per month, which adds up to US$2.3 million per year (the numbers are based on a Bitcoin conversion rate of US$590). In fact, the Cerber ransomware demonstrates a growth rate higher than that of major global fast food chains.</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/78649070a0617edd64952c4b8a74b96c_f2122.png" alt="nine-circles-cerber-fig15.png" width="800" height="418" /><span class="centered-caption">Figure 15: Cerber global distribution map.</span></p>
<p> </p>
<h2><a class="chapter" name="h2-7-following-money-trail"></a>7. Following the money trail</h2>
<p>Cerber generates a unique Bitcoin wallet to receive funds from each victim. The generated wallet appears in the landing page shown to the victim, represented by an encoded string in the URL. <em>Check Point</em> researchers examined tens of thousands of victim Bitcoin wallets, and found that only 0.3% of the victims chose to pay the ransom. But the bigger question is: once a Bitcoin transaction occurs, what happens to the money? Based on our analysis, it seems that Cerber uses a Bitcoin mixing service as part of its money flow in order to remain untraceable. A mixing service allows the ransomware author to transfer Bitcoins and receive the same amount back to a wallet that cannot be associated with the original owner. This is achieved by mixing multiple users' funds together, using tens of thousands of Bitcoin wallets, making it almost impossible to track them individually (see <a href="#figure16">Figure 16</a>). Based on our research, automated tools distribute the affiliate shares only after the money has been swapped by the mixing service and the malware author's share has been collected.</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/4415/0954/4565/nine-circles-cerber-fig16.png" alt="nine-circles-cerber-fig16.png" width="679" height="961" /><span class="centered-caption"><a class=" anchor" name="figure16"></a>Figure 16: Cerber Bitcoin flow.</span></p>
<p> </p>
<h2><a class="chapter" name="h2-summary"></a>Summary</h2>
<p>Thousands of users restored their files while the <em>Check Point Cerber Decryption Service</em> was active. Unfortunately, the attackers were quite responsive and fixed the vulnerability within 24 hours.</p>
<p>Cerber ransomware-as-a-service uses a business model that has been proven to be effective by some of the biggest franchise businesses worldwide. Furthermore, the malware author uses a sophisticated money flow to ensure that the profits remain sealed and that its Bitcoin wallets cannot be associated with the attack operation. It is therefore little wonder that Cerber ransomware is one of the most widespread pieces of ransomware of our time.</p>
<p> </p>
<h2><a class="chapter" name="h2-acknowledgements"></a>Acknowledgements</h2>
<p>We would like to thank the<em> Check Point</em> Malware Research and Threat Intelligence teams and in particular Aliaksandr Trafimchuk for his devoted help throughout the research.</p>
<p> </p>
<h2><a class="chapter" name="h2-references"></a>References</h2>
<p><a class=" anchor" name="ref1"></a>[1] Cerber Decryptor. <a href="http://blog.trendmicro.com/trend-micro-ransomware-file-decryptor-updated/" target="_blank">http://blog.trendmicro.com/trend-micro-ransomware-file-decryptor-updated/</a>.</p>
<p><a class=" anchor" name="ref2"></a>[2] Check Point Releases Working Decryptor for the Cerber Ransomware. <a href="https://www.bleepingcomputer.com/news/security/check-point-releases-working-decryptor-for-the-cerber-ransomware/" target="_blank">https://www.bleepingcomputer.com/news/security/check-point-releases-working-decryptor-for-the-cerber-ransomware/</a>.</p>
<p><a class=" anchor" name="ref3"></a>[3] Cerber 2 Ransomware: Free Decryption Tool Released. <a href="http://www.bankinfosecurity.com/cerber-2-ransomware-free-decryption-tool-released-a-9341" target="_blank">http://www.bankinfosecurity.com/cerber-2-ransomware-free-decryption-tool-released-a-9341</a>.</p>
<p><a class=" anchor" name="ref4"></a>[4] Cerber. <a href="https://blog.checkpoint.com/2016/08/16/cerberring" target="_blank">http://blog.checkpoint.com/2016/08/16/cerberring</a>/.</p>
<p><a class=" anchor" name="ref5"></a>[5] Source code. <a href="https://github.com/CheckPointSW/CerberDecryptionService" target="_blank">https://github.com/CheckPointSW/CerberDecryptionService</a>.</p>
<p><a class=" anchor" name="ref6"></a>[6] RSA Factoring Challenge. <a href="https://en.wikipedia.org/wiki/RSA_Factoring_Challenge" target="_blank">https://en.wikipedia.org/wiki/RSA_Factoring_Challenge</a>.</p>		</div>
		<div class="col-md-3 col-sm-3 col-lg-3">
		<p><a href="/uploads/pdf/magazine/2017/VB2017-Skuratovich-Rona.pdf" target="_blank"><img src="/uploads/images/buttons/pdf-download-button.jpg" alt="Download PDF" width="262" height="45" /></a></p>
<div id="NDPHPBlock13359" class="NDPHPBlock">
<div style="width: 100%;"><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Tweet this!' href="https://twitter.com/share?text=VB2017 paper: Nine circles of Cerber&url=https://www.virusbulletin.com/virusbulletin/2017/12/vb2017-paper-nine-circles-cerber"><img src='/uploads/images/buttons/twitter.png' alt='twitter.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Facebook' href='https://www.facebook.com/sharer.php?u=https://www.virusbulletin.com/virusbulletin/2017/12/vb2017-paper-nine-circles-cerber'><img src='/uploads/images/buttons/fb.png' alt='fb.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on LinkedIn' href="https://www.linkedin.com/shareArticle?mini=true&url=https://www.virusbulletin.com/virusbulletin/2017/12/vb2017-paper-nine-circles-cerber&title=VB2017 paper: Nine circles of Cerber"><img src='/uploads/images/buttons/linkedin.png' alt='linkedin.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Hacker News' href="https://news.ycombinator.com/submitlink?u=https://www.virusbulletin.com/virusbulletin/2017/12/vb2017-paper-nine-circles-cerber&t=VB2017 paper: Nine circles of Cerber"><img src='/uploads/images/buttons/hackernews.png' alt='hackernews.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='reddit this!' href="https://www.reddit.com/submit?url=https://www.virusbulletin.com/virusbulletin/2017/12/vb2017-paper-nine-circles-cerber"><img src='/uploads/images/buttons/reddit.png' alt='reddit.png' width='45' height='45' class='responsive' /></a></center></div></div></div><p> </p>
<h2>Latest articles:</h2>
<div class="ccm-page-list">

			<h3 class="ccm-page-list-title">
			<a href="/virusbulletin/2023/10/nexus-android-banking-botnet-compromising-cc-panels-and-dissecting-mobile-appinjects/" target="_self">Nexus Android banking botnet &ndash; compromising C&amp;C panels and dissecting mobile AppInjects</a>
		</h3>
		<div class="ccm-page-list-description">
			Aditya Sood &amp; Rohit Bansal provide details of a security vulnerability in the Nexus Android botnet C&amp;C panel that was exploited to compromise the C&amp;C panel in order to gather threat intelligence, and present a model of mobile AppInjects.		</div>
		
			<h3 class="ccm-page-list-title">
			<a href="/virusbulletin/2022/04/cryptojacking-fly-teamtnt-using-nvidia-drivers-mine-cryptocurrency/" target="_self">Cryptojacking on the fly: TeamTNT using NVIDIA drivers to mine cryptocurrency</a>
		</h3>
		<div class="ccm-page-list-description">
			TeamTNT is known for attacking insecure and vulnerable Kubernetes deployments in order to infiltrate organizations&rsquo; dedicated environments and transform them into attack launchpads. In this article Aditya Sood presents a new module introduced by&hellip;		</div>
		
			<h3 class="ccm-page-list-title">
			<a href="/virusbulletin/2021/12/collector-stealer-russian-origin-credential-and-information-extractor/" target="_self">Collector-stealer: a Russian origin credential and information extractor</a>
		</h3>
		<div class="ccm-page-list-description">
			Collector-stealer, a piece of malware of Russian origin, is heavily used on the Internet to exfiltrate sensitive data from end-user systems and store it in its C&amp;C panels. In this article, researchers Aditya K Sood and Rohit Chaturvedi present a 360&hellip;		</div>
		
			<h3 class="ccm-page-list-title">
			<a href="/virusbulletin/2021/06/fighting-fire-fire/" target="_self">Fighting Fire with Fire</a>
		</h3>
		<div class="ccm-page-list-description">
			In 1989, Joe Wells encountered his first virus: Jerusalem. He disassembled the virus, and from that moment onward, was intrigued by the properties of these small pieces of self-replicating code. Joe Wells was an expert on computer viruses, was partly&hellip;		</div>
		
			<h3 class="ccm-page-list-title">
			<a href="/virusbulletin/2021/04/run-your-malicious-vba-macros-anywhere/" target="_self">Run your malicious VBA macros anywhere!</a>
		</h3>
		<div class="ccm-page-list-description">
			Kurt Natvig wanted to understand whether it&rsquo;s possible to recompile VBA macros to another language, which could then easily be &lsquo;run&rsquo; on any gateway, thus revealing a sample&rsquo;s true nature in a safe manner. In this article he explains how he recompiled&hellip;		</div>
		
	 

	 
</div><!-- end .ccm-page-list -->


<p><br /><a class="btn btn-block btn-warning" href="/virusbulletin/archive">Bulletin Archive</a></p>		</div>
	</div>
</div>

<!-- Footer
    ================================================== -->
    <footer class="bs-footer" role="contentinfo">
      <div class="container">
        <div class="bs-social">
			<div class="row ">
						
				<div class="col-md-3">
					<p><a title="About Us" href="/about-vb/about-us/">About us</a></p>
<p><a title="Contact Us" href="/about-vb/contact-us/">Contact us</a></p>
<p><a title="Advisory Board" href="/about-vb/advisory-board/">Advisory board</a></p>
<p><a title="Press" href="/about-vb/press/">Press information</a></p>
<p><a title="Newsletter" href="/newsletter/">Virus Bulletin newsletter</a></p>				</div>
				<div class="col-md-3">
					<p><a title="VB Testing" href="/testing/">Testing</a></p>
<p><a title="VB100" href="/testing/vb100/">VB100</a></p>
<p><a title="VBSpam" href="/testing/vbspam/">VBSpam</a></p>
<p><a title="Consultancy Services" href="/testing/consultancy-services/">Consultancy services</a></p>
<p><a title="The Spammers' Compendium" href="/resources/spammerscompendium/">Spammers' Compendium</a></p>				</div>	
									<div class="col-md-3">
					<p><a title="VB2024" href="/conference/vb2024/">VB2024 (Dublin)</a></p>
<p><a title="VB2023" href="/conference/vb2023/">VB2023 (London)</a></p>
<p><a title="VB2022" href="/conference/vb2022/">VB2022 (Prague)</a></p>
<p><a title="VB2021 localhost" href="/conference/vb2021/">VB2021 localhost</a></p>
<p><a title="VB2020 localhost" href="/conference/vb2020/">VB2020 localhost</a></p>
<p><a title="Conference Archive" href="/conference/vb-conference-archive/">Older conferences</a></p>					</div>	
				
									<div class="col-md-3">
					<div class="row">
<table style="float: right;" border="0">
<tbody>
<tr>
<td align="center"><a href="/rss" target="_blank"><img title="Get our blog updates" src="/uploads/images/buttons/rss-square-gray.png" alt="rss.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://twitter.com/virusbtn" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on Twitter" src="/uploads/images/buttons/twitter-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.linkedin.com/company/virus-bulletin" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on LinkedIn" src="/uploads/images/buttons/linkedin-square-gray.png" alt="linkedin.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.facebook.com/virusbulletin" target="_blank"><img title="Visit us on Facebook" src="/uploads/images/buttons/fb-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.youtube.com/user/virusbtn" target="_blank"><img title="Visit us on Youtube" src="/uploads/images/buttons/youtube-square-gray.png" alt="youtube.png" width="35" height="35" /></a></td>
</tr>
</tbody>
</table>
</div>					</div>	
				
								
			</div>
			<div class="row ">
				<div class="col-md-12">
									</div>							
			</div>
		</div>
      </div>
    </footer>

	<!-- lian's attempt for a new footer -->
    <footer class="bs-footer2" role="contentinfo">
      <div class="container">
        <div class="bs-social2">
			<div class="row ">
						
				<div class="col-md-3">
									</div>
				<div class="col-md-3">
									</div>	
									<div class="col-md-3">
										</div>	
				
									<div class="col-md-3">
										</div>	
				
								
			</div>
			<div class="row ">
				<div class="col-md-12">
					<p style="text-align: left;">©1989-2025 Virus Bulletin.        <a title="Privacy Policy" href="/about-vb/privacy-policy/">Privacy policy</a>        <a title="Cookies" href="/about-vb/privacy-policy/cookies/">Cookies</a>        <a title="Terms and Conditions" href="/about-vb/terms-and-conditions/">Terms and Conditions</a></p>				</div>							
			</div>
		</div>
      </div>
    </footer>

<script type="text/javascript" src="/libraries/js/fancybox.load.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/app.js"></script>
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-TDBVSRVN"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

<div id="ccm-cookiesDisclosure" class="disclosure-bottom">
	<div class="disclosure-container">
					<div class="disclosure-content">
				<p> We have placed cookies on your device in order to improve the functionality of this site, as outlined in our <a href="/about-vb/privacy-policy/cookies" target="_blank">cookies policy</a>. However, you may delete and block all cookies from this site and your use of the site will be unaffected. By continuing to browse this site, you are agreeing to Virus Bulletin's use of data as outlined in our <a href="/about-vb/privacy-policy/" target="_blank">privacy policy</a>.</p>
			</div>
			<div class="disclosure-form">
	<form action="/index.php/cookies_disclosure/" method="POST">
					<input type="hidden" name="allowCookies" value="1" />
							<div class="button">
			<input class="btn btn-info btn-sm" type="submit" name="submit" value="I understand. Don't show this message again!" />
		</div>
	</form>
</div>
				<div class="ccm-spacer">&nbsp;</div>
	</div>
</div>
</body>
</html>