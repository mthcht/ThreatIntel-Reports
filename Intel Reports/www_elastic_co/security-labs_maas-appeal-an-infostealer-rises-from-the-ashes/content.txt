<!DOCTYPE html><html lang="en"><head><meta charSet="utf-8"/><meta name="viewport" content="width=device-width"/><title>MaaS Appeal: An Infostealer Rises From The Ashes — Elastic Security Labs</title><meta name="description" content="NOVABLIGHT is a NodeJS infostealer developed and sold as a MaaS offering; it is used primarily to steal credentials and compromise cryptowallets."/><meta property="og:title" content="MaaS Appeal: An Infostealer Rises From The Ashes — Elastic Security Labs"/><meta property="og:description" content="NOVABLIGHT is a NodeJS infostealer developed and sold as a MaaS offering; it is used primarily to steal credentials and compromise cryptowallets."/><meta property="og:image" content="https://www.elastic.co/security-labs/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/Security Labs Images 7.jpg?02c9a6759e3ccf234a3f42c8de1f480e"/><meta property="og:image:alt" content="NOVABLIGHT is a NodeJS infostealer developed and sold as a MaaS offering; it is used primarily to steal credentials and compromise cryptowallets."/><meta property="og:site_name"/><meta property="og:url" content="https://www.elastic.co/security-labs/maas-appeal-an-infostealer-rises-from-the-ashes"/><meta property="og:type" content="website"/><meta name="twitter:card" content="summary_large_image"/><meta name="twitter:title" content="MaaS Appeal: An Infostealer Rises From The Ashes — Elastic Security Labs"/><meta name="twitter:description" content="NOVABLIGHT is a NodeJS infostealer developed and sold as a MaaS offering; it is used primarily to steal credentials and compromise cryptowallets."/><meta name="twitter:image" content="https://www.elastic.co/security-labs/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/Security Labs Images 7.jpg?02c9a6759e3ccf234a3f42c8de1f480e"/><meta name="twitter:image:alt" content="NOVABLIGHT is a NodeJS infostealer developed and sold as a MaaS offering; it is used primarily to steal credentials and compromise cryptowallets."/><link rel="canonical" href="https://www.elastic.co/security-labs/maas-appeal-an-infostealer-rises-from-the-ashes"/><link rel="preload" href="/security-labs/logo.svg" as="image" fetchpriority="high"/><link rel="preload" as="image" imageSrcSet="/security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fmaas-appeal-an-infostealer-rises-from-the-ashes%2FSecurity%20Labs%20Images%207.jpg&amp;w=640&amp;q=75 640w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fmaas-appeal-an-infostealer-rises-from-the-ashes%2FSecurity%20Labs%20Images%207.jpg&amp;w=750&amp;q=75 750w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fmaas-appeal-an-infostealer-rises-from-the-ashes%2FSecurity%20Labs%20Images%207.jpg&amp;w=828&amp;q=75 828w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fmaas-appeal-an-infostealer-rises-from-the-ashes%2FSecurity%20Labs%20Images%207.jpg&amp;w=1080&amp;q=75 1080w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fmaas-appeal-an-infostealer-rises-from-the-ashes%2FSecurity%20Labs%20Images%207.jpg&amp;w=1200&amp;q=75 1200w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fmaas-appeal-an-infostealer-rises-from-the-ashes%2FSecurity%20Labs%20Images%207.jpg&amp;w=1920&amp;q=75 1920w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fmaas-appeal-an-infostealer-rises-from-the-ashes%2FSecurity%20Labs%20Images%207.jpg&amp;w=2048&amp;q=75 2048w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fmaas-appeal-an-infostealer-rises-from-the-ashes%2FSecurity%20Labs%20Images%207.jpg&amp;w=3840&amp;q=75 3840w" imageSizes="100vw" fetchpriority="high"/><meta name="next-head-count" content="19"/><script src="https://play.vidyard.com/embed/v4.js" type="text/javascript" async=""></script><link rel="icon" href="/security-labs/favicon.svg"/><link rel="mask-icon" href="/security-labs/favicon.svg" color="#1C1E23"/><link rel="apple-touch-icon" href="/security-labs/favicon.svg"/><meta name="theme-color" content="#1C1E23"/><link rel="preload" href="/security-labs/_next/static/media/8e9860b6e62d6359-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/e4af272ccee01ff0-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/0ea4f4df910e6120-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/739c2d8941231bb4-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/ee71530a747ff30b-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/9fac010bc1f02be0-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><link rel="preload" href="/security-labs/_next/static/media/cbf5fbad4d73afac-s.p.woff2" as="font" type="font/woff2" crossorigin="anonymous" data-next-font="size-adjust"/><script id="google-tag-manager" data-nscript="beforeInteractive">
          (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
          new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
          j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
          'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
          })(window,document,'script','dataLayer','GTM-KNJMG2M');
          </script><link rel="preload" href="/security-labs/_next/static/css/a87fdfbf44b3f106.css" as="style"/><link rel="stylesheet" href="/security-labs/_next/static/css/a87fdfbf44b3f106.css" data-n-g=""/><link rel="preload" href="/security-labs/_next/static/css/1007ff9e696f6f88.css" as="style"/><link rel="stylesheet" href="/security-labs/_next/static/css/1007ff9e696f6f88.css" data-n-p=""/><noscript data-n-css=""></noscript><script defer="" nomodule="" src="/security-labs/_next/static/chunks/polyfills-78c92fac7aa8fdd8.js"></script><script src="/security-labs/_next/static/chunks/webpack-7987c6fda769d510.js" defer=""></script><script src="/security-labs/_next/static/chunks/framework-7a7e500878b44665.js" defer=""></script><script src="/security-labs/_next/static/chunks/main-ebd33a9f1cae5951.js" defer=""></script><script src="/security-labs/_next/static/chunks/pages/_app-e159b4ec612933fd.js" defer=""></script><script src="/security-labs/_next/static/chunks/fec483df-43ee602fabdfe3a4.js" defer=""></script><script src="/security-labs/_next/static/chunks/877-34f408271ef44c22.js" defer=""></script><script src="/security-labs/_next/static/chunks/511-d08fe0fdd6f8a984.js" defer=""></script><script src="/security-labs/_next/static/chunks/683-a5053c37fe5bd0c9.js" defer=""></script><script src="/security-labs/_next/static/chunks/402-a39cedc40e53ff5e.js" defer=""></script><script src="/security-labs/_next/static/chunks/616-0b017b9cfa597392.js" defer=""></script><script src="/security-labs/_next/static/chunks/pages/%5Bslug%5D-b0c191de1a3710e4.js" defer=""></script><script src="/security-labs/_next/static/_SefzxskCogRxxQ4n3Dnc/_buildManifest.js" defer=""></script><script src="/security-labs/_next/static/_SefzxskCogRxxQ4n3Dnc/_ssgManifest.js" defer=""></script></head><body><noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KNJMG2M" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript><div id="__next"><main class="__variable_0351a5 __variable_d672da __variable_ead7f7 flex flex-col min-h-screen"><div class="scroll-percentage-container"><div class="scroll-percentage-bar" style="width:0%"></div></div><nav class="fixed w-full z-40" data-headlessui-state=""><div class="bg-gradient-to-b from-zinc-900 from-20% h-[200%] to-transparent absolute inset-0 z-0 pointer-events-none"></div><div class="container relative z-10"><div class="flex h-16 items-center justify-between"><div class="flex items-center justify-start w-full"><div><a class="hover:opacity-50 transition" href="/security-labs"><img alt="elastic security labs logo" fetchpriority="high" width="200" height="30" decoding="async" data-nimg="1" style="color:transparent" src="/security-labs/logo.svg"/></a></div><div class="hidden lg:ml-6 lg:block"><div class="flex space-x-4"><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="/security-labs/about"><span>About</span></a><div class="relative" data-headlessui-state=""><div><button class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" id="headlessui-menu-button-:R2kpm:" type="button" aria-haspopup="menu" aria-expanded="false" data-headlessui-state="">Topics<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="ml-1 -mr-1 h-4 w-4 text-zinc-400 relative top-[1px]"><path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z" clip-rule="evenodd"></path></svg></button></div></div><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="/security-labs/category/vulnerability-updates"><span>Vulnerability updates</span></a><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="/security-labs/category/reports"><span>Reports</span></a><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="/security-labs/category/tools"><span>Tools</span></a></div></div><div class="hidden lg:ml-auto lg:block"><div class="flex items-center space-x-4"><a class="rounded flex items-center p-4 text-white focus:outline-none focus:ring-0 focus:ring-offset-1 focus:ring-offset-zinc-600 group" href="https://search.elastic.co/?location%5B0%5D=Security%20Labs&amp;referrer=https://www.elastic.co/security-labs/maas-appeal-an-infostealer-rises-from-the-ashes"><div class="flex items-center relative font-display"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"></path></svg></div></a><a class="flex lg:inline-flex font-light my-1 py-1 px-2 font-display font-semibold lg:text-sm xl:text-base items-center transition hover:hover-link hover:text-white focus:accessible-link-focus" href="https://www.elastic.co/security-labs/rss/feed.xml"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="h-4 w-4 mr-1"><path d="M3.75 3a.75.75 0 00-.75.75v.5c0 .414.336.75.75.75H4c6.075 0 11 4.925 11 11v.25c0 .414.336.75.75.75h.5a.75.75 0 00.75-.75V16C17 8.82 11.18 3 4 3h-.25z"></path><path d="M3 8.75A.75.75 0 013.75 8H4a8 8 0 018 8v.25a.75.75 0 01-.75.75h-.5a.75.75 0 01-.75-.75V16a6 6 0 00-6-6h-.25A.75.75 0 013 9.25v-.5zM7 15a2 2 0 11-4 0 2 2 0 014 0z"></path></svg><span class="hidden xl:block">Subscribe</span></a><a class="font-display inline-flex items-center justify-center rounded font-semibold disabled:!select-none disabled:!bg-gray-400 bg-blue-600 text-white hover:bg-blue-500 enabled:hover:text-white/80 transition-colors px-4 py-2 text-sm flex-1 lg:flex-auto" href="https://cloud.elastic.co/registration?cta=cloud-registration&amp;tech=trial&amp;plcmt=navigation&amp;pg=security-labs">Start free trial</a><a class="font-display inline-flex items-center justify-center rounded font-semibold text-white disabled:!select-none disabled:!bg-gray-400 button px-4 py-2 text-sm flex-1 lg:flex-auto" href="https://www.elastic.co/contact">Contact sales</a></div></div></div><div class="-mr-2 flex lg:hidden"><a class="rounded flex items-center p-4 text-white focus:outline-none focus:ring-0 focus:ring-offset-1 focus:ring-offset-zinc-600 group" href="https://search.elastic.co/?location%5B0%5D=Security%20Labs&amp;referrer=https://www.elastic.co/security-labs/maas-appeal-an-infostealer-rises-from-the-ashes"><div class="flex items-center relative font-display"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"></path></svg></div></a><button class="inline-flex items-center justify-center rounded-md p-2 text-gray-400 hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white" id="headlessui-disclosure-button-:R59m:" type="button" aria-expanded="false" data-headlessui-state=""><span class="sr-only">Open navigation menu</span><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="block h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path></svg></button></div></div></div></nav><main class="mb-20 flex-1 flex flex-col"><div class="h-48 md:h-64"><div class="after:absolute after:block after:bg-blue-400 after:blur-3xl after:content-[&#x27; &#x27;] after:h-96 after:opacity-5 after:right-0 after:rounded-full after:top-20 after:w-1/2 after:z-0 before:absolute before:block before:blur-3xl before:bg-orange-400 before:content-[&#x27; &#x27;] before:h-96 before:left-0 before:opacity-5 before:rounded-full before:w-1/2 before:z-0 w-full h-full relative"><div class="relative z-10 w-full h-[125%] -top-[25%] bg-no-repeat bg-cover bg-bottom flex items-center justify-center" style="background-image:url(/security-labs/grid.svg)"></div></div></div><article class="px-4"><div class="max-w-7xl mx-auto relative z-10 flex flex-col space-y-4"><div class="eyebrow break-words"><time class="block mb-2 md:mb-0 md:inline-block article-published-date" dateTime="2025-07-29T00:00:00.000Z">29 July 2025</time><span class="hidden md:inline-block md:mx-2">•</span><a class="hover:text-blue-400 text-xs md:text-sm whitespace-nowrap author-name" href="/security-labs/author/jia-yu-chan">Jia Yu Chan</a><span class="mx-2">•</span><a class="hover:text-blue-400 text-xs md:text-sm whitespace-nowrap author-name" href="/security-labs/author/elastic-security-labs">Elastic Security Labs</a></div><h1 class="font-bold leading-tighter text-3xl md:text-5xl"><span>MaaS Appeal: An Infostealer Rises From The&nbsp;Ashes</span></h1><p class="text-zinc-200 text-base md:text-xl">NOVABLIGHT is a NodeJS infostealer developed and sold as a MaaS offering; it is used primarily to steal credentials and compromise cryptowallets.</p><div class="flex items-center mt-4 text-zinc-200 text-sm space-x-4 border-t border-white/25 pt-4"><span class="flex items-center space-x-1"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="h-4 w-4 text-zinc-400"><path stroke-linecap="round" stroke-linejoin="round" d="M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg><span>18 min read</span></span><span class="flex items-center space-x-1"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="h-4 w-4 text-zinc-400"><path stroke-linecap="round" stroke-linejoin="round" d="M9.568 3H5.25A2.25 2.25 0 003 5.25v4.318c0 .597.237 1.17.659 1.591l9.581 9.581c.699.699 1.78.872 2.607.33a18.095 18.095 0 005.223-5.223c.542-.827.369-1.908-.33-2.607L11.16 3.66A2.25 2.25 0 009.568 3z"></path><path stroke-linecap="round" stroke-linejoin="round" d="M6 6h.008v.008H6V6z"></path></svg><span><a class="hover:text-blue-400 whitespace-nowrap" href="/security-labs/category/malware-analysis">Malware analysis</a></span></span></div></div><div class="max-w-7xl mx-auto"><div class="bg-zinc-900 border border-zinc-800 drop-shadow-lg p-5 sm:p-8 md:p-10 rounded-3xl mt-5 md:mt-10"><div class="relative w-full rounded-lg overflow-hidden aspect-video"><img alt="MaaS Appeal: An Infostealer Rises From The Ashes" fetchpriority="high" decoding="async" data-nimg="fill" class="object-cover absolute h-full w-full" style="position:absolute;height:100%;width:100%;left:0;top:0;right:0;bottom:0;color:transparent" sizes="100vw" srcSet="/security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fmaas-appeal-an-infostealer-rises-from-the-ashes%2FSecurity%20Labs%20Images%207.jpg&amp;w=640&amp;q=75 640w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fmaas-appeal-an-infostealer-rises-from-the-ashes%2FSecurity%20Labs%20Images%207.jpg&amp;w=750&amp;q=75 750w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fmaas-appeal-an-infostealer-rises-from-the-ashes%2FSecurity%20Labs%20Images%207.jpg&amp;w=828&amp;q=75 828w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fmaas-appeal-an-infostealer-rises-from-the-ashes%2FSecurity%20Labs%20Images%207.jpg&amp;w=1080&amp;q=75 1080w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fmaas-appeal-an-infostealer-rises-from-the-ashes%2FSecurity%20Labs%20Images%207.jpg&amp;w=1200&amp;q=75 1200w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fmaas-appeal-an-infostealer-rises-from-the-ashes%2FSecurity%20Labs%20Images%207.jpg&amp;w=1920&amp;q=75 1920w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fmaas-appeal-an-infostealer-rises-from-the-ashes%2FSecurity%20Labs%20Images%207.jpg&amp;w=2048&amp;q=75 2048w, /security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fmaas-appeal-an-infostealer-rises-from-the-ashes%2FSecurity%20Labs%20Images%207.jpg&amp;w=3840&amp;q=75 3840w" src="/security-labs/_next/image?url=%2Fsecurity-labs%2Fassets%2Fimages%2Fmaas-appeal-an-infostealer-rises-from-the-ashes%2FSecurity%20Labs%20Images%207.jpg&amp;w=3840&amp;q=75"/><div class="absolute border border-white/50 inset-0 mix-blend-overlay rounded-lg z-10"></div></div></div></div><div class="lg:max-w-7xl mx-auto relative mt-12 lg:grid lg:grid-cols-4 lg:gap-8 items-start"><div class="flex justify-center lg:col-span-3"><div class="prose lg:prose-lg prose-invert w-full article-content"><div><h2 class="font-bold text-2xl md:text-4xl relative"><span id="novablight-at-a-glance" class="absolute -top-32"></span>NOVABLIGHT at a glance</h2>
<p>NOVABLIGHT is a NodeJS-based Malware-as-a-Service (MaaS) information stealer developed and sold by a threat group that demonstrates French-language proficiency. This is apparent in their discussions and operational communications on their primary sales and support platforms, Telegram and Discord.</p>
<p>Based on our analysis of the latest released version of NOVABLIGHT, the following code snippet suggests that the Sordeal Group, the group behind <a href="https://www.cyfirma.com/research/emerging-maas-operator-sordeal-releases-nova-infostealer/">Nova Sentinel and MALICORD</a>, is responsible for NOVABLIGHT as well.</p>
<p></p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="key-takeaways" class="absolute -top-32"></span>Key takeaways</h3>
<ul>
<li>NOVABLIGHT is an infostealer described as an educational tool, though Telegram channel messages reveal sensitive information and unredacted screenshots.</li>
<li>NOVABLIGHT licenses are valid for up to one year, and binaries can be generated via Telegram or Discord.</li>
<li>Heavily obfuscated code with many capabilities.</li>
</ul>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="discovery" class="absolute -top-32"></span>Discovery</h2>
<p>Elastic Security Labs identified multiple campaigns leveraging fake video game installer downloads as an initial access lure for MaaS infections of internet users. In one example, the URL <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">http://gonefishe[.]com</code> prompted the user to download a binary and install a French-language version of a game with a name and description comparable to one recently released on Steam.</p>
<p></p>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="distribution-monetization-and-community" class="absolute -top-32"></span>Distribution, monetization, and community</h2>
<p>The group advertised and sold their product on various online platforms, previously Sellix and Sellpass and currently Billgang.</p>
<p></p>
<p>The group sells an API key, which expires between 1 and 12 months. This key can then be used to build an instance of NOVABLIGHT through a Telegram bot or through Discord.</p>
<p>The group promotes a referral program on their Discord channel with API keys as rewards.</p>
<p>Users get access to a dashboard hosted by the group that presents the information collected from victims. The following domains were identified, though others may exist:</p>
<ul>
<li><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">api.nova-blight[.]top</code></li>
<li><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">shadow.nova-blight[.]top</code></li>
<li><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">nova-blight[.]site</code></li>
<li><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">nova-blight[.]xyz</code></li>
<li><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">bamboulacity.nova-blight[.]xyz</code></li>
</ul>
<p>Some of the images used in the dashboard panel are hosted in GitHub repositories associated with different accounts, which helped expose more details about the group.</p>
<p></p>
<p>The GitHub account <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">KSCHcuck1</code> is a pseudonym similar to that of the previous author of MALICORD, a free version of the earliest version of the stealer that was hosted on GitHub under the account <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">KSCH-58</code> (<a href="https://web.archive.org/web/20231216010712/https:/github.com/KSCH-58">WEB ARCHIVE LINK</a>). The X account <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">@KSCH_dsc</code> also possessed similarities, and was actively advertising their &quot;best stealer ever released&quot; as recently as 2023.</p>
<p>The following GitHub accounts have been identified in relation to the group:</p>
<ul>
<li><a href="https://github.com/KSCHcuck1">https://github.com/KSCHcuck1</a></li>
<li><a href="https://github.com/CrackedProgramer412/caca">https://github.com/CrackedProgramer412/caca</a></li>
<li><a href="https://github.com/MYnva">https://github.com/MYnva</a></li>
<li><a href="https://github.com/404log">https://github.com/404log</a> (dead)</li>
</ul>
<p>Their public Telegram channel hosts tutorials and a community of users. In the following image capture, users are sharing screenshots of the build process.</p>
<p></p>
<p>Users of the infostealer are openly sharing images of luxury items and money transfers, which is notable because NOVABLIGHT is described as being solely for educational purposes.</p>
<p></p>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="novablight-analysis" class="absolute -top-32"></span>NOVABLIGHT analysis</h2>
<p>NOVABLIGHT is a modular and feature-rich information stealer built on NodeJS with the Electron framework. Its capabilities go beyond simple credential theft, incorporating methods for data collection and exfiltration, sandbox detection, and heavy obfuscation.</p>
<p></p>
<p>A notable aspect of the malware&#x27;s build process is its modular configuration. Although a customer can choose to disable specific features, the underlying code for those functions remains within the final payload; it is dormant and won’t be executed based on the build&#x27;s configuration flags.</p>
<p></p>
<p>Code snippets in this report are from a non-obfuscated version 2.0 <a href="https://www.virustotal.com/gui/file/abc5a9605010890d7514f239e3defbbccecaeaf4cc2e2b7d54cdaaed88dd3766">sample</a>, when implementation details match version 2.2 samples, or from our manually de-obfuscated code of a version 2.2 <a href="https://www.virustotal.com/gui/file/1a2fc6ee9c48f35cff500d7a95f5d919f644d0eeb2980f9cdad4762c42b94afc/detection">sample</a> when they differ.</p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="code-structure" class="absolute -top-32"></span>Code structure</h3>
<p>From initial setup to data theft, the infostealer is organized into a clear, multi-stage pipeline managed by high-level &quot;flow&quot; controllers. The primary stages are:</p>
<ul>
<li><strong>flow/init:</strong> Pre-flight checks (running instances, admin privileges, internet connectivity), anti-analysis checks, system info enumeration, establish persistence, etc.</li>
<li><strong>flow/injecting:</strong> Application injection and patching (Atomic, Mullvad, Discord, …)</li>
<li><strong>flow/grabb</strong>: Data harvesting</li>
<li><strong>flow/ClipBoard</strong>: Clipboard hijacking</li>
<li><strong>flow/sending</strong>: Data exfiltration</li>
<li><strong>flow/disable</strong>: System sabotage (disable Windows Defender, system anti-reset, broken Internet connectivity, …)</li>
<li><strong>flow/cleaning:</strong> Post-exfiltration cleanup</li>
</ul>
<p>For more insights into the code structure, check out this GitHub <a href="https://gist.github.com/jiayuchann/b13ec30e72e69cb542e2e6d2e009c4a4">Gist</a>, which lists the direct dependencies for each of NOVABLIGHT’s core modules and execution flows.</p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="anti-debug-and-sandbox-detection" class="absolute -top-32"></span>Anti-debug and sandbox detection</h3>
<p>NOVABLIGHT incorporates multiple techniques to detect and evade analysis environments, combining environment fingerprinting with active countermeasures. These checks include:</p>
<ul>
<li>Detecting VM-related GPU names (vmware, virtualbox, qemu)</li>
<li>Checking for blacklisted usernames (sandbox, test, malware)</li>
<li>Identifying VM-specific driver files (balloon.sys, qemu-ga)</li>
<li>Checking for low screen resolution and lack of USB devices</li>
<li>Querying GitHub for blacklists of IPs, HWIDs, usernames, programs, organizations, GPU names, PC names, and Operating Systems</li>
<li>Actively killing known analysis and debugging tools found in a remote list</li>
</ul>
<p></p>
<p>The blacklists are hosted on GitHub:</p>
<ul>
<li><a href="https://raw.githubusercontent.com/Mynva/sub/main/json/blocked_ips.json">https://raw.githubusercontent.com/Mynva/sub/main/json/blocked_ips.json</a></li>
<li><a href="https://raw.githubusercontent.com/Mynva/sub/main/json/blocked_progr.json">https://raw.githubusercontent.com/Mynva/sub/main/json/blocked_progr.json</a></li>
<li><a href="https://raw.githubusercontent.com/Mynva/sub/refs/heads/main/json/blockedorg.json">https://raw.githubusercontent.com/Mynva/sub/refs/heads/main/json/blockedorg.json</a></li>
<li><a href="https://raw.githubusercontent.com/Mynva/sub/main/json/blocked_GPUTYPE.json">https://raw.githubusercontent.com/Mynva/sub/main/json/blocked_GPUTYPE.json</a></li>
<li><a href="https://raw.githubusercontent.com/Mynva/sub/main/json/nope.json">https://raw.githubusercontent.com/Mynva/sub/main/json/nope.json</a></li>
<li><a href="https://raw.githubusercontent.com/Mynva/sub/main/json/blocked_hwid.json">https://raw.githubusercontent.com/Mynva/sub/main/json/blocked_hwid.json</a></li>
<li><a href="https://raw.githubusercontent.com/Mynva/sub/main/json/blockedpcname.json">https://raw.githubusercontent.com/Mynva/sub/main/json/blockedpcname.json</a></li>
<li><a href="https://raw.githubusercontent.com/MYnva/sub/refs/heads/main/json/blockedOS.json">https://raw.githubusercontent.com/MYnva/sub/refs/heads/main/json/blockedOS.json</a></li>
</ul>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="disable-defender--attempts-to-disable-task-manager" class="absolute -top-32"></span>Disable Defender &amp; attempts to disable Task Manager</h3>
<p>NOVABLIGHT attempts to disable Windows Defender and related Windows security features by downloading and executing a batch script, <a href="https://raw.githubusercontent.com/ZygoteCode/WinDefendManager/refs/heads/main/Resources/DisableWD.bat">DisableWD.bat</a>, from a public GitHub repository.</p>
<p>The malware claims to be capable of disabling the Task Manager, making it difficult for a non-technical user to identify and terminate the malicious program. It uses <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">setValues</code> from the <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">regedit-rs</code> package to set the <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">DisableTaskMgr</code> value to <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">1</code> under <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">HKCU\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\System</code>.</p>
<p></p>
<p>However, looking at the <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">regedit-rs</code> <a href="https://github.com/Zagrios/regedit-rs/blob/4b7874eb6542cf162f62cf40719b44e69f086497/js-binding.js#L318">repo</a> (v1.0.3 to match), there are no exported functions named <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">setValues</code>, only <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">putValue</code>. This functionality may not work as intended.</p>
<p></p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="disable-internet-access" class="absolute -top-32"></span>Disable internet access</h3>
<p>To disrupt the victim&#x27;s internet connection, the malware employs two distinct methods. The first involves persistently disabling the Wi-Fi adapter by repeatedly resetting it in a rapid loop, utilizing the external npm package <a href="https://www.npmjs.com/package/wifi-control">wifi-control</a> and its <a href="https://github.com/msolters/wifi-control-node/blob/13d02226a3e6b12b48ebd063af2e7e3c97ef0abe/src/wifi-control.coffee#L293">resetWiFi</a> function.</p>
<p></p>
<p>The second method disables the primary “Ethernet” network adapter using the <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">netsh</code> command, running it every 5 seconds to disable re-enabling attempts.</p>
<p></p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="defeat-system-recovery" class="absolute -top-32"></span>Defeat system recovery</h3>
<p>The malware can sabotage system recovery by disabling the Windows Recovery Environment (<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">reagentc /disable</code>) and deleting all Volume Shadow Copies (<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">vssadmin delete shadows /all</code>) when the <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">antireset</code> flag is enabled in the configuration.</p>
<p></p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="blocking-file-deletion" class="absolute -top-32"></span>Blocking file deletion</h3>
<p>Another system sabotage function that might be apparent to the victim involves making the malware’s own executable file undeletable by modifying its security permissions through <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">icacls “${filePath}” /deny ${currentUser}:(DE,DC)</code>  where <a href="https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/icacls">DE denies delete rights and DC prevents deletion</a> via the parent folder and optionally creating a pop-up message box containing a “troll” message.</p>
<p></p>
<p>Before locking itself, it also executes a PowerShell command to remove the victim’s account from the following system groups: <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">Administrators</code>, <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">Power Users</code>, <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">Remote Desktop Users</code>, <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">Administrateurs</code>.</p>
<p></p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="clipboard-address-substitution" class="absolute -top-32"></span>Clipboard address substitution</h3>
<p>The malware implements a &quot;clipper&quot; module that actively monitors the clipboard of the machine for any Crypto or Paypal addresses and replaces them with addresses defined in the configuration, if the user who built the payload did not provide their own addresses, the malware defaults to a hardcoded set, presumably controlled by the developers to capture funds from their less experienced users.</p>
<p></p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="electron-application-injections" class="absolute -top-32"></span>Electron application injections</h3>
<p>NOVABLIGHT can inject malicious code into several popular Electron-based applications. The payloads are dynamically fetched from the endpoint <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">https://api.nova-blight[.]top/injections/*targeted_application*/*some_key*</code>, targeting applications such as:</p>
<ul>
<li>Discord client</li>
<li>Exodus wallet</li>
<li>Mullvad VPN client</li>
<li>Atomic wallet</li>
<li>Mailspring email client</li>
</ul>
<p>We were able to retrieve all of the modules from a public GitHub <a href="https://github.com/CrackedProgramer412/caca/tree/main">repository</a>.</p>
<p>The injection implementation is a classic example of Electron App repacking: unpacking the ASAR file, rewriting any targeted source files, then repacking it. Looking at an example involving the Mullvad client, it first unpacks <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">Program Files\\Mullvad VPN\\resources\\app.asar</code> into a temporary directory, fetches a backdoored version of <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">account.js</code> from <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">https://api.nova-blight[.]top/injections/mullvad/dVukBEtL8rW2PDgkwdwfbNSdG3imwU8bZhYUygzthir66sXXUuyURunOin9s</code>, overwrites the source file <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">account.js</code>, and finally repacks it. While it might still work for older versions of Mullvad such as <a href="https://github.com/mullvad/mullvadvpn-app/releases/tag/2025.4">2025.4</a>, this does not seem to work on the latest version of Mullvad.</p>
<p></p>
<p>In a similar case for the Exodus client, the NOVABLIGHT developers modified the setPassphrase function in the main module of the Exodus application, with additional credential-stealing functionalities.<br/>
<!-- -->This is what <a href="https://www.virustotal.com/gui/file/cf3a8cdb3fca4e9944dc90d13f2f4f2b4ae317955571d9132e97cc46a06f277b/detection"><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">main/index.js</code></a> looks like in a legitimate release of Exodus 25.28.4:</p>
<p></p>
<p>In the trojanized <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">index.js</code>, user-entered passphrases are exfiltrated via configurable Discord webhooks and Telegram - using either the official Telegram API or a custom Telegram API proxy.</p>
<p></p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="chrome-sensitive-data-extraction" class="absolute -top-32"></span>Chrome sensitive data extraction</h3>
<p>For targeting Chromium-based browsers (Brave, Chrome, Edge) running on version 137, the malware downloads a zip file containing a Chrome data decryption tool from <a href="https://github.com/Hyutop/pandakmc-auto-vote/blob/main/bin.zip">https://github.com/Hyutop/pandakmc-auto-vote/blob/main/bin.zip</a>.</p>
<p></p>
<p>The GitHub repository attempts to masquerade as a Minecraft voting management tool.</p>
<p></p>
<p>However, the zip file <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">bin.zip</code> contains the compiled code (<a href="https://www.virustotal.com/gui/file/82920f3482c55430361b0cf184abf546fdb32fa079026d6ce1653f4cab49647d/detection">decrypt.exe</a> and <a href="https://www.virustotal.com/gui/file/daa1caa02a95411261aa7ed94762864e6f7bd7aa5fa79dfc9c1f3741d5ef8027">chrome_decrypt.dll</a>) of version 0.11.0 of the Chrome App-bound decrypter PoC project by <a href="https://github.com/xaitax/Chrome-App-Bound-Encryption-Decryption">xaitax</a>.</p>
<p></p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="system-enumeration" class="absolute -top-32"></span>System enumeration</h3>
<p>Once active, NOVABLIGHT executes a comprehensive suite of system enumeration functions designed to build a complete profile of the victim&#x27;s machine and user activity. Each module targets a specific piece of information, which is then saved to a local directory before being uploaded to the command-and-control server. Detection engineers should note the specific implementations of each technique, and which data source(s) provide sufficient visibility.</p>
<ul>
<li><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">captureSystemInfo()</code>: Gathers extensive hardware and software specifications to fingerprint the device. This includes the Hardware ID (HWID), CPU and GPU models, RAM size, disk information, Windows OS version, and a list of all connected USB devices.</li>
<li>Output: <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">*configured_path*/System Info.txt</code></li>
</ul>
<p></p>
<ul>
<li><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">captureScreen()</code>: Captures a full screenshot of the victim&#x27;s desktop, providing immediate insight into the user&#x27;s current activity.<!-- -->
<ul>
<li>Method: Utilizes the <a href="https://www.npmjs.com/package/screenshot-desktop">screenshot-desktop</a> library.</li>
<li>Output: A timestamped image file (e.g., <em>configured_path</em>/<em>hostname</em>_2025-10-26_14-30-00.png`).</li>
</ul>
</li>
<li><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">captureTaskList()</code>: Obtains a list of all currently running processes for situational awareness, allowing the attacker to see what applications and security tools are active.<!-- -->
<ul>
<li>Method: Executes the command <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">tasklist /FO CSV /NH</code>.</li>
<li>Output: <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">*configured_path*/TaskManagerInfo.txt </code></li>
</ul>
</li>
<li><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">captureAVDetails()</code>: Identifies the installed antivirus or endpoint protection product by querying the Windows Security Center.<!-- -->
<ul>
<li>Method: Executes the PowerShell command <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">Get-CimInstance -Namespace root/SecurityCenter2 -ClassName AntiVirusProduct | Format-List</code></li>
<li>Output: <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">*configured_path*/Avdetails.txt</code></li>
</ul>
</li>
<li><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">captureClipboardContent()</code>: Dumps the current content of the user&#x27;s clipboard, which can contain sensitive, transient information like passwords or copied messages.<!-- -->
<ul>
<li>Method: Executes the PowerShell command <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">Get-Clipboard</code>.</li>
<li>Output: <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">*configured_path*/Clipboard.txt</code></li>
</ul>
</li>
<li><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">captureWebcamVideo()</code>: Covertly records a video using the system&#x27;s primary webcam, providing visual intelligence on the victim and their environment.<!-- -->
<ul>
<li>Method: Leverages the <a href="http://direct-synch-show"><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">direct-synch-show</code></a> library for video capture.</li>
<li>Output: <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">*configured_path*/Bighead.avi</code></li>
</ul>
</li>
<li><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">captureWifiPasswords()</code>: Exfiltrates the passwords for all saved Wi-Fi networks on the device, allowing for potential lateral movement or access to other networks the victim uses.<!-- -->
<ul>
<li>Method: Executes the command <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">netsh wlan show profile *wifi_ssid* key=clear</code> for each profile.</li>
<li>Output: <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">*configured_path*/WifiPasswords.txt</code></li>
</ul>
</li>
<li><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">getFilesUrgents</code>: This functionality exfiltrate files on disk according to a set of keywords as follow: <strong>backup, default, code, discord, token, passw, mdp, motdepasse, mot_de_passe, login, secret, account, acount, apacht, banque, bank, matamask, wallet, crypto, exdous, 2fa, a1f, memo, compone, finance, seecret, credit, cni,</strong> these files are archived as <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">files.zip</code> then sent to the C2.</li>
</ul>
<p></p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="data-exfiltration" class="absolute -top-32"></span>Data exfiltration</h3>
<p>There are 3 channels for the stolen data: the official web panel owned by the NOVABLIGHT group, the Discord webhook API, and the Telegram API. The status of these channels is uncertain, as the main proxy API and web panel are currently down, which may disrupt the functionality of the Discord and Telegram channels if they rely on the same proxy infrastructure.</p>
<p>The web panel was once the official exfiltration channel, as it was advertised as their primary data management platform.</p>
<p></p>
<p>The Telegram implementation first tries to send the data to a configured proxy URL, the code checks if the URL contains the string <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">req</code> in this case <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">https://bamboulacity.nova-blight[.]xyz/req/dVukBEtL8rW2PDgkwdwfbNSdG3imwU8bZhYUygzthir66sXXUuyURunOin9s</code>.</p>
<p>If the proxy URL is not configured or does not meet the condition, the module falls back to communicating directly with the official Telegram API (at <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">https://api.telegram[.]org/bot*token*/sendMessage</code>) using a configured userId, chatId and botToken to send the stolen data.</p>
<p></p>
<p>Unlike the Telegram module, the Discord webhook implementation is much simpler. It utilizes a single  URL for exfiltration with no fallback mechanism. The analyzed samples consistently used the custom proxy URL for this purpose.</p>
<p></p>
<p>NOVABLIGHT employs a redundant and multi-tiered infrastructure. Instead of relying on a single upload host, which would create a single point of failure, the malware leverages a combination of legitimate third-party file-hosting services and its own dedicated backend. The following is the extracted list of domains and endpoints:</p>
<ul>
<li><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">https://bashupload[.]com</code></li>
<li><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">https://litterbox.catbox[.]moe/resources/internals/api.php</code></li>
<li><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">https://tmpfiles[.]org/api/v1/upload</code></li>
<li><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">https://oshi[.]at/</code></li>
<li><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">http://sendfile[.]su/</code></li>
<li><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">https://wsend[.]net</code></li>
<li><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">https://api.gofile[.]io/servers</code></li>
<li><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">https://gofile[.]io/uploadFiles</code></li>
<li><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">https://rdmfile[.]eu/api/upload</code></li>
<li><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">https://bamboulacity.nova-blight[.]xyz/file/</code></li>
</ul>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="targeted-data" class="absolute -top-32"></span>Targeted data</h3>
<p>NOVABLIGHT executes targeted routines designed to steal credentials and session files from a specific list of installed software. The curated list is available in this GitHub <a href="https://gist.github.com/jiayuchann/4a27afce5be67dd73edb9c4b9a6de1f9">Gist</a>.</p>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="obfuscation-techniques" class="absolute -top-32"></span>Obfuscation techniques</h2>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="array-mapping" class="absolute -top-32"></span>Array mapping</h3>
<p>The first technique to tackle is the malware’s use of array mapping. The script initializes a single large global array <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">__p_6Aeb_dlrArray</code> with values of different types and encoding, which accounts for nearly all literal values used in the script.</p>
<p></p>
<p>After substituting array index references, many small string chunks that make up a full string are split and concatenated at runtime, but at this stage, the NOVABLIGHT versioning number can be identified easily.</p>
<p></p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="string-encoding" class="absolute -top-32"></span>String encoding</h3>
<p>The second technique used to hide strings is the usage of base91 encoding. The function wrapper <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">__p_xIFu_MAIN_STR</code> is called with an integer argument.</p>
<p></p>
<p>The integer is an index of a secondary array mapping <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">__p_9sMm_array</code> that contains encoded strings. It retrieves the encoded string and passes it to the decoding routine <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">__p_xIFu_MAIN_STR_decode</code>.</p>
<p></p>
<p><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">__p_xIFu_MAIN_STR_decode</code> will then decode it using a custom alphabet:<br/>
<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">vFAjbQox\&gt;5?4K$m=83GYu.nBIh\&lt;drPaN\^@%Hk:D_sSyz&quot;ER9/p,(*JwtfO)iUl&amp;C\[~\}\{|Z+gX1MqL;60!e]T#2cVW7</code> and return the decoded string.</p>
<p></p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="access-pattern-obfuscation" class="absolute -top-32"></span>Access pattern obfuscation</h3>
<p>Instead of accessing objects and functions directly, the code uses intermediate flattened “proxy” objects with mangled keys, wrapping objects in another layer of objects to hide the original access patterns.</p>
<p>For example, the function <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">__p_LQ1f_flat_…</code> is passed a flat object <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">__p_w3Th_flat_object</code>. This object contains 3 get accessors for properties, one of which returns the disableNetwork flag retrieved from the config, and a wrapper for a dispatcher call (<code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">__p_jGTR_dispatcher_26</code>). Throughout the code, there is a pattern where the property names start with <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">empretecerian.js</code>, which happens to also be the script file’s name. The callee function can then access the actual objects and functions through this flat object populated by the caller.</p>
<p></p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="control-flow-obfuscation" class="absolute -top-32"></span>Control flow obfuscation</h3>
<p>Some of the code’s execution path is routed through a central dispatcher,  <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">__p_jGTR_dispatcher_26</code>, in which the first argument name takes a short ID string.</p>
<p></p>
<p>Each ID is mapped to a distinct function. For example, the ID <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">jgqatJ</code> is referenced by the <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">modules/init/Troll.js</code> module and it is responsible for a “troll” popup message box.</p>
<p></p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="proxy-variables" class="absolute -top-32"></span>Proxy variables</h3>
<p>First, the obfuscation transforms function syntax to “<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters">rest parameters syntax</a>” which replaces the parameters with an array that stores variable values instead of direct variables, the code then references the array with numerical values. For instance, the function <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">__p_xIFu_MAIN_STR_decode</code> is not called with direct parameters. Instead, its arguments are first placed into the <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">__p_A5wG_varMask</code> array (line 22), and the function is programmed to retrieve them from predefined indices. For example, at line 25, the index <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">-36</code> of the array stores the index of the character &quot;c&quot; in a string stored in <code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">__p_A5wG_varMask[171]</code>.</p>
<p></p>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="novablight-and-mitre-attck" class="absolute -top-32"></span>NOVABLIGHT and MITRE ATT&amp;CK</h2>
<p>Elastic uses the <a href="https://attack.mitre.org/">MITRE ATT&amp;CK</a> framework to document common tactics, techniques, and procedures that advanced persistent threats use against enterprise networks.</p>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="tactics" class="absolute -top-32"></span>Tactics</h3>
<ul>
<li><a href="https://attack.mitre.org/tactics/TA0002/">Execution</a></li>
<li><a href="https://attack.mitre.org/tactics/TA0003/">Persistence</a></li>
<li><a href="https://attack.mitre.org/tactics/TA0005/">Defense Evasion</a></li>
<li><a href="https://attack.mitre.org/tactics/TA0006/">Credential Access</a></li>
<li><a href="https://attack.mitre.org/tactics/TA0007/">Discovery</a></li>
<li><a href="https://attack.mitre.org/tactics/TA0009/">Collection</a></li>
<li><a href="https://attack.mitre.org/tactics/TA0011/">Command and Control</a></li>
<li><a href="https://attack.mitre.org/tactics/TA0010/">Exfiltration</a></li>
</ul>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="techniques" class="absolute -top-32"></span>Techniques</h3>
<ul>
<li><a href="https://attack.mitre.org/techniques/T1027/">Obfuscated Files or Information</a></li>
<li><a href="https://attack.mitre.org/techniques/T1057/">Process Discovery</a></li>
<li><a href="https://attack.mitre.org/techniques/T1059/001/">Command and Scripting Interpreter: PowerShell</a></li>
<li><a href="https://attack.mitre.org/techniques/T1059/007/">Command and Scripting Interpreter: JavaScript</a></li>
<li><a href="https://attack.mitre.org/techniques/T1074/001/">Data Staged: Local Data Staging</a></li>
<li><a href="https://attack.mitre.org/techniques/T1082/">System Information Discovery</a></li>
<li><a href="https://attack.mitre.org/techniques/T1083/">File and Directory Discovery</a></li>
<li><a href="https://attack.mitre.org/techniques/T1113/">Screen Capture</a></li>
<li><a href="https://attack.mitre.org/techniques/T1115/">Clipboard Data</a></li>
<li><a href="https://attack.mitre.org/techniques/T1125/">Video Capture</a></li>
<li><a href="https://attack.mitre.org/techniques/T1497/001/">Virtualization/Sandbox Evasion: System Checks</a></li>
<li><a href="https://attack.mitre.org/techniques/T1531/">Account Access Removal</a></li>
<li><a href="https://attack.mitre.org/techniques/T1555/003/">Credentials from Password Stores: Credentials from Web Browsers</a></li>
<li><a href="https://attack.mitre.org/techniques/T1562/001/">Impair Defenses: Disable or Modify Tools</a></li>
<li><a href="https://attack.mitre.org/techniques/T1567/002/">Exfiltration Over Web Service: Exfiltration to Cloud Storage</a></li>
</ul>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="conclusion" class="absolute -top-32"></span>Conclusion</h2>
<p>NOVABLIGHT shows how even lesser-known malware can make an impact. By offering a polished, easy-to-use tool through platforms like Telegram and Discord, its creators have made it simple for anyone to get involved in cybercrime.</p>
<p>Furthermore, this threat is not static. Our analysis confirms that NOVABLIGHT is under continuous and active development. This ongoing evolution ensures that NOVABLIGHT will remain a persistent and relevant threat for the foreseeable future.</p>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="detecting-novablight" class="absolute -top-32"></span>Detecting NOVABLIGHT</h2>
<h3 class="font-bold leading-tight text-xl md:text-3xl relative"><span id="yara" class="absolute -top-32"></span>YARA</h3>
<p>Elastic Security has created YARA rules to identify this activity.</p>
<pre><code>rule Windows_Infostealer_NovaBlight {
    meta:
        author = &quot;Elastic Security&quot;
        creation_date = &quot;2025-07-18&quot;
        last_modified = &quot;2025-07-28&quot;
        os = &quot;Windows&quot;
        arch = &quot;x86&quot;
        category_type = &quot;Infostealer&quot;
        family = &quot;NovaBlight&quot;
        threat_name = &quot;Windows.Infostealer.NovaBlight&quot;
        reference_sample = &quot;d806d6b5811965e745fd444b8e57f2648780cc23db9aa2c1675bc9d18530ab73&quot;

    strings:
        $a1 = &quot;C:\\Users\\Administrateur\\Desktop\\Nova\\&quot;
        $a2 = &quot;[+] Recording...&quot; fullword
        $a3 = &quot;[+] Capture start&quot; fullword
    condition:
        all of them
}</code></pre>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="observations" class="absolute -top-32"></span>Observations</h2>
<p>The following observables were discussed in this research.</p>
<div class="table-container"><table style="width:100%;table-layout:fixed;word-wrap:break-word"><thead><tr><th align="left">Observable</th><th align="left">Type</th><th align="left">Name</th><th align="left">Reference</th></tr></thead><tbody><tr><td align="left"><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">ed164ee2eacad0eea9dc4fbe271ee2b2387b59929d73c843281a8d5e94c05d64</code></td><td align="left">SHA-256</td><td align="left"></td><td align="left">NOVABLIGHT VERSION 2.2</td></tr><tr><td align="left"><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">39f09771d70e96c7b760b3b6a30a015ec5fb6a9dd5bc1e2e609ddf073c2c853d</code></td><td align="left">SHA-256</td><td align="left"></td><td align="left">NOVABLIGHT VERSION 2.1</td></tr><tr><td align="left"><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">97393c27195c58f8e4acc9312a4c36818fe78f2ddce7ccba47f77a5ca42eab65</code></td><td align="left">SHA-256</td><td align="left"></td><td align="left">NOVABLIGHT VERSION 2.0</td></tr><tr><td align="left"><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">api.nova-blight[.]top</code></td><td align="left">DOMAIN</td><td align="left"></td><td align="left">NOVABLIGHT dashboard</td></tr><tr><td align="left"><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">shadow.nova-blight[.]top</code></td><td align="left">DOMAIN</td><td align="left"></td><td align="left">NOVABLIGHT dashboard</td></tr><tr><td align="left"><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">nova-blight[.]site</code></td><td align="left">DOMAIN</td><td align="left"></td><td align="left">NOVABLIGHT dashboard</td></tr><tr><td align="left"><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">nova-blight[.]xyz</code></td><td align="left">DOMAIN</td><td align="left"></td><td align="left">NOVABLIGHT dashboard</td></tr><tr><td align="left"><code class="px-1.5 py-1 rounded not-prose bg-[var(--tw-prose-invert-pre-bg)] whitespace-break-spaces text-[85%] text-emerald-600">bamboulacity.nova-blight[.]xyz</code></td><td align="left">DOMAIN</td><td align="left"></td><td align="left">NOVABLIGHT dashboard</td></tr></tbody></table></div>
<h2 class="font-bold text-2xl md:text-4xl relative"><span id="references" class="absolute -top-32"></span>References</h2>
<p>The following were referenced throughout the above research:</p>
<ul>
<li><a href="https://www.gatewatcher.com/lab/groupe-nova-sentinel/">https://www.gatewatcher.com/lab/groupe-nova-sentinel/</a></li>
<li><a href="https://www.cyfirma.com/research/emerging-maas-operator-sordeal-releases-nova-infostealer/">https://www.cyfirma.com/research/emerging-maas-operator-sordeal-releases-nova-infostealer/</a></li>
</ul></div></div></div><div class="hidden lg:flex lg:col-span-1 text-sm lg:flex-col lg:space-y-6"><div class="toc"><h4 class="font-bold leading-tight text-lg md:text-2xl mb-3">Jump to section</h4><ul class="flex flex-col space-y-2"><li><a class="flex items-center space-x-1 hover:text-white" href="/security-labs/maas-appeal-an-infostealer-rises-from-the-ashes#novablight-at-a-glance"><span>NOVABLIGHT at a&nbsp;glance</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/maas-appeal-an-infostealer-rises-from-the-ashes#key-takeaways"><span>Key&nbsp;takeaways</span></a></li><li><a class="flex items-center space-x-1 hover:text-white" href="/security-labs/maas-appeal-an-infostealer-rises-from-the-ashes#discovery"><span>Discovery</span></a></li><li><a class="flex items-center space-x-1 hover:text-white" href="/security-labs/maas-appeal-an-infostealer-rises-from-the-ashes#distribution-monetization-and-community"><span>Distribution, monetization, and&nbsp;community</span></a></li><li><a class="flex items-center space-x-1 hover:text-white" href="/security-labs/maas-appeal-an-infostealer-rises-from-the-ashes#novablight-analysis"><span>NOVABLIGHT&nbsp;analysis</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/maas-appeal-an-infostealer-rises-from-the-ashes#code-structure"><span>Code&nbsp;structure</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/maas-appeal-an-infostealer-rises-from-the-ashes#anti-debug-and-sandbox-detection"><span>Anti-&nbsp;debug and sandbox&nbsp;detection</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/maas-appeal-an-infostealer-rises-from-the-ashes#disable-defender--attempts-to-disable-task-manager"><span>Disable Defender & attempts to disable Task&nbsp;Manager</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/maas-appeal-an-infostealer-rises-from-the-ashes#disable-internet-access"><span>Disable internet&nbsp;access</span></a></li><li><a class="flex items-center space-x-1 hover:text-white ml-4" href="/security-labs/maas-appeal-an-infostealer-rises-from-the-ashes#defeat-system-recovery"><span>Defeat system&nbsp;recovery</span></a></li></ul><button class="border-t border-white/20 w-full mt-3 py-2 flex items-center space-x-1 text-xs font-medium uppercase tracking-wide hover:text-white"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="w-3 h-3"><path d="M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z"></path></svg><span>Show more</span></button></div><div class="bg-zinc-900 border border-zinc-800 drop-shadow-lg p-5 md:p-2 sm:p-4 md:px-6 md:py-4 rounded-xl"><h4 class="font-bold leading-tight text-lg md:text-2xl mb-3">Elastic Security Labs Newsletter</h4><div><a target="_blank" class="button inline-flex" href="https://www.elastic.co/elastic-security-labs/newsletter?utm_source=security-labs">Sign Up</a></div></div></div></div><div class="bg-zinc-900 border border-zinc-800 drop-shadow-lg p-5 md:p-2 sm:p-4 md:px-6 md:py-4 rounded-xl my-5 md:my-10 max-w-3xl mx-auto flex flex-col items-center shadow-2xl"><h4 class="font-bold leading-tight text-lg md:text-2xl">Share this article</h4><div class="flex flex-wrap items-center justify-center mt-4 space-x-4"><a class="flex items-center space-x-2 button" href="https://twitter.com/intent/tweet?text=MaaS Appeal: An Infostealer Rises From The Ashes&amp;url=https://www.elastic.co/security-labs/maas-appeal-an-infostealer-rises-from-the-ashes" target="_blank" rel="noopener noreferrer" aria-label="Share this article on Twitter" title="Share this article on Twitter"><svg class="w-4 h-4" viewBox="0 0 24 24"><path fill="currentColor" d="M23.954 4.569c-.885.389-1.83.653-2.825.772a4.98 4.98 0 002.187-2.746 9.955 9.955 0 01-3.157 1.204 4.98 4.98 0 00-8.49 4.54A14.128 14.128 0 011.69 3.05a4.98 4.98 0 001.54 6.638A4.94 4.94 0 011.2 8.62v.06a4.98 4.98 0 004 4.87 4.94 4.94 0 01-2.24.086 4.98 4.98 0 004.64 3.45A9.97 9.97 0 010 20.35a14.075 14.075 0 007.59 2.22c9.16 0 14.17-7.583 14.17-14.17 0-.217-.005-.434-.015-.65a10.128 10.128 0 002.485-2.58l-.001-.001z"></path></svg><span>Twitter</span></a><a class="flex items-center space-x-2 button" href="https://www.facebook.com/sharer/sharer.php?u=https://www.elastic.co/security-labs/maas-appeal-an-infostealer-rises-from-the-ashes" target="_blank" rel="noopener noreferrer" aria-label="Share this article on Facebook" title="Share this article on Facebook"><svg class="w-4 h-4" viewBox="0 0 24 24"><path fill="currentColor" d="M22.5 12c0-5.799-4.701-10.5-10.5-10.5S1.5 6.201 1.5 12c0 5.301 3.901 9.699 9 10.401V14.4h-2.7v-2.7h2.7v-2.1c0-2.7 1.8-4.2 4.2-4.2 1.2 0 2.1.1 2.4.2v2.4h-1.5c-1.2 0-1.5.6-1.5 1.5v1.8h3l-.3 2.7h-2.7V22C18.599 21.3 22.5 17.301 22.5 12z"></path></svg><span>Facebook</span></a><a class="flex items-center space-x-2 button" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=https://www.elastic.co/security-labs/maas-appeal-an-infostealer-rises-from-the-ashes&amp;title=MaaS Appeal: An Infostealer Rises From The Ashes" target="_blank" rel="noopener noreferrer" aria-label="Share this article on LinkedIn" title="Share this article on LinkedIn"><svg class="w-4 h-4" viewBox="0 0 24 24"><path fill="currentColor" d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"></path></svg><span>LinkedIn</span></a><a class="flex items-center space-x-2 button" href="https://reddit.com/submit?url=https://www.elastic.co/security-labs/maas-appeal-an-infostealer-rises-from-the-ashes&amp;title=MaaS Appeal: An Infostealer Rises From The Ashes" target="_blank" rel="noopener noreferrer" aria-label="Share this article on Reddit" title="Share this article on Reddit"><svg class="w-4 h-4" viewBox="0 0 24 24"><path fill-rule="evenodd" clip-rule="evenodd" d="M24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12ZM19.6879 11.0584C19.8819 11.3352 19.9916 11.6622 20.004 12C20.0091 12.3306 19.9205 12.656 19.7485 12.9384C19.5765 13.2208 19.3281 13.4488 19.032 13.596C19.0455 13.7717 19.0455 13.9483 19.032 14.124C19.032 16.812 15.9 18.996 12.036 18.996C8.172 18.996 5.04 16.812 5.04 14.124C5.02649 13.9483 5.02649 13.7717 5.04 13.596C4.80919 13.49 4.6042 13.335 4.43923 13.1419C4.27427 12.9487 4.15327 12.722 4.08462 12.4775C4.01598 12.2329 4.00133 11.9764 4.04169 11.7256C4.08205 11.4748 4.17646 11.2358 4.31837 11.0251C4.46028 10.8145 4.6463 10.6372 4.86354 10.5056C5.08078 10.3739 5.32404 10.2911 5.57646 10.2629C5.82889 10.2346 6.08444 10.2616 6.32541 10.3419C6.56638 10.4222 6.78701 10.5539 6.972 10.728C8.35473 9.79023 9.98146 9.27718 11.652 9.252L12.54 5.088C12.55 5.03979 12.5694 4.99405 12.5972 4.95341C12.625 4.91277 12.6605 4.87805 12.7018 4.85127C12.7431 4.82448 12.7894 4.80615 12.8378 4.79735C12.8862 4.78855 12.9359 4.78945 12.984 4.8L15.924 5.388C16.0676 5.14132 16.2944 4.9539 16.5637 4.85937C16.833 4.76484 17.1272 4.7694 17.3934 4.87222C17.6597 4.97505 17.8806 5.1694 18.0164 5.42041C18.1523 5.67141 18.1942 5.96262 18.1348 6.24177C18.0753 6.52092 17.9182 6.76972 17.6918 6.94352C17.4654 7.11732 17.1845 7.20473 16.8995 7.19006C16.6144 7.1754 16.3439 7.05962 16.1366 6.8635C15.9292 6.66738 15.7985 6.40378 15.768 6.12L13.2 5.58L12.42 9.324C14.0702 9.3594 15.6749 9.87206 17.04 10.8C17.2839 10.566 17.5902 10.4074 17.9221 10.3436C18.254 10.2797 18.5973 10.3132 18.9106 10.4401C19.2239 10.5669 19.4939 10.7817 19.6879 11.0584ZM8.20624 12.5333C8.07438 12.7307 8.004 12.9627 8.004 13.2C8.004 13.5183 8.13043 13.8235 8.35547 14.0485C8.58051 14.2736 8.88574 14.4 9.204 14.4C9.44134 14.4 9.67335 14.3296 9.87068 14.1978C10.068 14.0659 10.2218 13.8785 10.3127 13.6592C10.4035 13.4399 10.4272 13.1987 10.3809 12.9659C10.3346 12.7331 10.2204 12.5193 10.0525 12.3515C9.8847 12.1836 9.67089 12.0694 9.43811 12.0231C9.20533 11.9768 8.96405 12.0005 8.74478 12.0913C8.52551 12.1822 8.33809 12.336 8.20624 12.5333ZM12.012 17.424C13.0771 17.4681 14.1246 17.1416 14.976 16.5V16.548C15.0075 16.5173 15.0327 16.4806 15.05 16.4402C15.0674 16.3997 15.0766 16.3563 15.0772 16.3122C15.0777 16.2682 15.0696 16.2245 15.0533 16.1837C15.0369 16.1428 15.0127 16.1055 14.982 16.074C14.9513 16.0425 14.9146 16.0173 14.8742 16C14.8337 15.9826 14.7903 15.9734 14.7462 15.9728C14.7022 15.9723 14.6585 15.9804 14.6177 15.9967C14.5768 16.0131 14.5395 16.0373 14.508 16.068C13.7797 16.5904 12.895 16.8487 12 16.8C11.1061 16.8399 10.2255 16.5732 9.504 16.044C9.44182 15.993 9.36289 15.9669 9.28256 15.9708C9.20222 15.9748 9.12622 16.0085 9.06935 16.0653C9.01247 16.1222 8.97879 16.1982 8.97484 16.2786C8.97089 16.3589 8.99697 16.4378 9.048 16.5C9.89937 17.1416 10.9469 17.4681 12.012 17.424ZM14.0933 14.2458C14.2907 14.3776 14.5227 14.448 14.76 14.448L14.748 14.496C14.9107 14.4978 15.0721 14.4664 15.2223 14.4038C15.3725 14.3413 15.5084 14.2488 15.6218 14.1321C15.7352 14.0154 15.8236 13.8768 15.8818 13.7248C15.9399 13.5728 15.9665 13.4106 15.96 13.248C15.96 13.0107 15.8896 12.7787 15.7578 12.5813C15.6259 12.384 15.4385 12.2302 15.2192 12.1393C14.9999 12.0485 14.7587 12.0248 14.5259 12.0711C14.2931 12.1174 14.0793 12.2316 13.9115 12.3995C13.7436 12.5673 13.6294 12.7811 13.5831 13.0139C13.5368 13.2467 13.5605 13.4879 13.6513 13.7072C13.7422 13.9265 13.896 14.1139 14.0933 14.2458Z" fill="currentColor"></path></svg><span>Reddit</span></a></div></div></article></main><footer class="mt-auto text-xs md:text-sm"><div class="container py-6 flex flex-col md:flex-row gap-2 md:gap-0 justify-between items-center"><div class="text-zinc-300"><nav><ul class="flex space-x-4"><li><a class="hover:text-white font-medium" href="/security-labs/sitemap.xml">Sitemap</a></li><li><a class="hover:text-white font-medium flex items-center space-x-1" href="https://elastic.co?utm_source=elastic-search-labs&amp;utm_medium=referral&amp;utm_campaign=search-labs&amp;utm_content=footer"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="inline-block w-3 h-3"><path stroke-linecap="round" stroke-linejoin="round" d="M13.5 6H5.25A2.25 2.25 0 003 8.25v10.5A2.25 2.25 0 005.25 21h10.5A2.25 2.25 0 0018 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25"></path></svg><span>Elastic.co</span></a></li><li><a class="hover:text-white font-medium flex items-center space-x-1" href="https://twitter.com/elasticseclabs"><svg class="w-4 h-4 inline-block w-3 h-3" viewBox="0 0 24 24"><path fill="currentColor" d="M23.954 4.569c-.885.389-1.83.653-2.825.772a4.98 4.98 0 002.187-2.746 9.955 9.955 0 01-3.157 1.204 4.98 4.98 0 00-8.49 4.54A14.128 14.128 0 011.69 3.05a4.98 4.98 0 001.54 6.638A4.94 4.94 0 011.2 8.62v.06a4.98 4.98 0 004 4.87 4.94 4.94 0 01-2.24.086 4.98 4.98 0 004.64 3.45A9.97 9.97 0 010 20.35a14.075 14.075 0 007.59 2.22c9.16 0 14.17-7.583 14.17-14.17 0-.217-.005-.434-.015-.65a10.128 10.128 0 002.485-2.58l-.001-.001z"></path></svg><span>@elasticseclabs</span></a></li></ul></nav></div><div class="flex flex-col space-y-1 text-zinc-300"><p>© <!-- -->2025<!-- -->. Elasticsearch B.V. All Rights Reserved.</p></div></div></footer></main></div><script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{"article":{"title":"MaaS Appeal: An Infostealer Rises From The Ashes","slug":"maas-appeal-an-infostealer-rises-from-the-ashes","date":"2025-07-29","description":"NOVABLIGHT is a NodeJS infostealer developed and sold as a MaaS offering; it is used primarily to steal credentials and compromise cryptowallets.","image":"Security Labs Images 7.jpg","body":{"raw":"\n## NOVABLIGHT at a glance\n\nNOVABLIGHT is a NodeJS-based Malware-as-a-Service (MaaS) information stealer developed and sold by a threat group that demonstrates French-language proficiency. This is apparent in their discussions and operational communications on their primary sales and support platforms, Telegram and Discord.\n\nBased on our analysis of the latest released version of NOVABLIGHT, the following code snippet suggests that the Sordeal Group, the group behind [Nova Sentinel and MALICORD](https://www.cyfirma.com/research/emerging-maas-operator-sordeal-releases-nova-infostealer/), is responsible for NOVABLIGHT as well.\n\n![Sordeal Group mentioned, followed by a link to the Telegram channel](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image18.png)\n\n### Key takeaways\n\n* NOVABLIGHT is an infostealer described as an educational tool, though Telegram channel messages reveal sensitive information and unredacted screenshots.   \n* NOVABLIGHT licenses are valid for up to one year, and binaries can be generated via Telegram or Discord.  \n* Heavily obfuscated code with many capabilities.\n\n## Discovery\n\nElastic Security Labs identified multiple campaigns leveraging fake video game installer downloads as an initial access lure for MaaS infections of internet users. In one example, the URL `http://gonefishe[.]com` prompted the user to download a binary and install a French-language version of a game with a name and description comparable to one recently released on Steam.\n\n![Landing page for http://gonefishe . com](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image37.png)\n\n## Distribution, monetization, and community\n\nThe group advertised and sold their product on various online platforms, previously Sellix and Sellpass and currently Billgang.\n\n![NOVABLIGHT’s product page on Billgang](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image27.png)\n\nThe group sells an API key, which expires between 1 and 12 months. This key can then be used to build an instance of NOVABLIGHT through a Telegram bot or through Discord.\n\nThe group promotes a referral program on their Discord channel with API keys as rewards.\n\nUsers get access to a dashboard hosted by the group that presents the information collected from victims. The following domains were identified, though others may exist:\n\n* `api.nova-blight[.]top`  \n* `shadow.nova-blight[.]top`  \n* `nova-blight[.]site`  \n* `nova-blight[.]xyz`  \n* `bamboulacity.nova-blight[.]xyz`\n\nSome of the images used in the dashboard panel are hosted in GitHub repositories associated with different accounts, which helped expose more details about the group.\n\n![HTTP response from https://shadow.nova-blight .top found in VirusTotal](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image30.png) \n   \nThe GitHub account `KSCHcuck1` is a pseudonym similar to that of the previous author of MALICORD, a free version of the earliest version of the stealer that was hosted on GitHub under the account `KSCH-58` ([WEB ARCHIVE LINK](https://web.archive.org/web/20231216010712/https://github.com/KSCH-58)). The X account `@KSCH_dsc` also possessed similarities, and was actively advertising their \"best stealer ever released\" as recently as 2023.\n\nThe following GitHub accounts have been identified in relation to the group:\n\n* [https://github.com/KSCHcuck1](https://github.com/KSCHcuck1)   \n* [https://github.com/CrackedProgramer412/caca](https://github.com/CrackedProgramer412/caca)  \n* [https://github.com/MYnva](https://github.com/MYnva)  \n* [https://github.com/404log](https://github.com/404log) (dead)\n\nTheir public Telegram channel hosts tutorials and a community of users. In the following image capture, users are sharing screenshots of the build process.\n\n![User screenshots of building NOVABLIGHT](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image22.png)\n\nUsers of the infostealer are openly sharing images of luxury items and money transfers, which is notable because NOVABLIGHT is described as being solely for educational purposes.\n\n![Image of phones a user of NOVABLIGHT claims to have purchased, shared via Telegram on May 15, 2025](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image23.png)\n\n## NOVABLIGHT analysis\n   \nNOVABLIGHT is a modular and feature-rich information stealer built on NodeJS with the Electron framework. Its capabilities go beyond simple credential theft, incorporating methods for data collection and exfiltration, sandbox detection, and heavy obfuscation.\n\n![VirusTotal depicting low detection rate of NOVABLIGHT](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image16.png)\n\nA notable aspect of the malware's build process is its modular configuration. Although a customer can choose to disable specific features, the underlying code for those functions remains within the final payload; it is dormant and won’t be executed based on the build's configuration flags.\n\n![Wallet clipper logic can either be executed or not, based on the config field swapWallet.active](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image25.png)\n\nCode snippets in this report are from a non-obfuscated version 2.0 [sample](https://www.virustotal.com/gui/file/abc5a9605010890d7514f239e3defbbccecaeaf4cc2e2b7d54cdaaed88dd3766), when implementation details match version 2.2 samples, or from our manually de-obfuscated code of a version 2.2 [sample](https://www.virustotal.com/gui/file/1a2fc6ee9c48f35cff500d7a95f5d919f644d0eeb2980f9cdad4762c42b94afc/detection) when they differ.\n\n### Code structure\n\nFrom initial setup to data theft, the infostealer is organized into a clear, multi-stage pipeline managed by high-level \"flow\" controllers. The primary stages are:\n\n* **flow/init:** Pre-flight checks (running instances, admin privileges, internet connectivity), anti-analysis checks, system info enumeration, establish persistence, etc.  \n* **flow/injecting:** Application injection and patching (Atomic, Mullvad, Discord, …)  \n* **flow/grabb**: Data harvesting  \n* **flow/ClipBoard**: Clipboard hijacking  \n* **flow/sending**: Data exfiltration  \n* **flow/disable**: System sabotage (disable Windows Defender, system anti-reset, broken Internet connectivity, …)  \n* **flow/cleaning:** Post-exfiltration cleanup\n\nFor more insights into the code structure, check out this GitHub [Gist](https://gist.github.com/jiayuchann/b13ec30e72e69cb542e2e6d2e009c4a4), which lists the direct dependencies for each of NOVABLIGHT’s core modules and execution flows.\n\n### Anti-debug and sandbox detection\n\nNOVABLIGHT incorporates multiple techniques to detect and evade analysis environments, combining environment fingerprinting with active countermeasures. These checks include:\n\n* Detecting VM-related GPU names (vmware, virtualbox, qemu)\n* Checking for blacklisted usernames (sandbox, test, malware)\n* Identifying VM-specific driver files (balloon.sys, qemu-ga)\n* Checking for low screen resolution and lack of USB devices \n* Querying GitHub for blacklists of IPs, HWIDs, usernames, programs, organizations, GPU names, PC names, and Operating Systems\n* Actively killing known analysis and debugging tools found in a remote list\n\n![Anti-debug and anti-VM checks](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image2.png)\n\nThe blacklists are hosted on GitHub:\n* [https://raw.githubusercontent.com/Mynva/sub/main/json/blocked_ips.json](https://raw.githubusercontent.com/Mynva/sub/main/json/blocked_ips.json)  \n* [https://raw.githubusercontent.com/Mynva/sub/main/json/blocked_progr.json](https://raw.githubusercontent.com/Mynva/sub/main/json/blocked_progr.json)   \n* [https://raw.githubusercontent.com/Mynva/sub/refs/heads/main/json/blockedorg.json](https://raw.githubusercontent.com/Mynva/sub/refs/heads/main/json/blockedorg.json)  \n* [https://raw.githubusercontent.com/Mynva/sub/main/json/blocked_GPUTYPE.json](https://raw.githubusercontent.com/Mynva/sub/main/json/blocked_GPUTYPE.json)  \n* [https://raw.githubusercontent.com/Mynva/sub/main/json/nope.json](https://raw.githubusercontent.com/Mynva/sub/main/json/nope.json)  \n* [https://raw.githubusercontent.com/Mynva/sub/main/json/blocked_hwid.json](https://raw.githubusercontent.com/Mynva/sub/main/json/blocked_hwid.json)  \n* [https://raw.githubusercontent.com/Mynva/sub/main/json/blockedpcname.json](https://raw.githubusercontent.com/Mynva/sub/main/json/blockedpcname.json)  \n* [https://raw.githubusercontent.com/MYnva/sub/refs/heads/main/json/blockedOS.json](https://raw.githubusercontent.com/MYnva/sub/refs/heads/main/json/blockedOS.json) \n\n### Disable Defender \u0026 attempts to disable Task Manager\n\nNOVABLIGHT attempts to disable Windows Defender and related Windows security features by downloading and executing a batch script, [DisableWD.bat](https://raw.githubusercontent.com/ZygoteCode/WinDefendManager/refs/heads/main/Resources/DisableWD.bat), from a public GitHub repository. \n\nThe malware claims to be capable of disabling the Task Manager, making it difficult for a non-technical user to identify and terminate the malicious program. It uses `setValues` from the `regedit-rs` package to set the `DisableTaskMgr` value to `1` under `HKCU\\\\\\\\Software\\\\\\\\Microsoft\\\\\\\\Windows\\\\\\\\CurrentVersion\\\\\\\\Policies\\\\\\\\System`. \n\n![Disable Task Manager through the registry](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image20.png)\n\nHowever, looking at the `regedit-rs` [repo](https://github.com/Zagrios/regedit-rs/blob/4b7874eb6542cf162f62cf40719b44e69f086497/js-binding.js#L318) (v1.0.3 to match), there are no exported functions named `setValues`, only `putValue`. This functionality may not work as intended.\n\n![Snippet of `js-binding.js` from the `regedit-rs` GitHub repo](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image31.png)\n\n### Disable internet access\n\nTo disrupt the victim's internet connection, the malware employs two distinct methods. The first involves persistently disabling the Wi-Fi adapter by repeatedly resetting it in a rapid loop, utilizing the external npm package [wifi-control](https://www.npmjs.com/package/wifi-control) and its [resetWiFi](https://github.com/msolters/wifi-control-node/blob/13d02226a3e6b12b48ebd063af2e7e3c97ef0abe/src/wifi-control.coffee#L293) function.\n\n![Disable Wi-Fi adapter](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image6.png)\n\nThe second method disables the primary “Ethernet” network adapter using the `netsh` command, running it every 5 seconds to disable re-enabling attempts.\n\n![Disable network adapter named “Ethernet”](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image5.png)\n\n### Defeat system recovery\n\nThe malware can sabotage system recovery by disabling the Windows Recovery Environment (`reagentc /disable`) and deleting all Volume Shadow Copies (`vssadmin delete shadows /all`) when the `antireset` flag is enabled in the configuration.\n\n![Disable system restore](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image1.png)\n\n### Blocking file deletion\n\nAnother system sabotage function that might be apparent to the victim involves making the malware’s own executable file undeletable by modifying its security permissions through `icacls “${filePath}” /deny ${currentUser}:(DE,DC)`  where [DE denies delete rights and DC prevents deletion](https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/icacls) via the parent folder and optionally creating a pop-up message box containing a “troll” message.\n\n![Block current user from deleting the malware executable](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image11.png)\n\nBefore locking itself, it also executes a PowerShell command to remove the victim’s account from the following system groups: `Administrators`, `Power Users`, `Remote Desktop Users`, `Administrateurs`. \n\n![Remove current user from Admin groups](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image15.png)\n\n### Clipboard address substitution\n\nThe malware implements a \"clipper\" module that actively monitors the clipboard of the machine for any Crypto or Paypal addresses and replaces them with addresses defined in the configuration, if the user who built the payload did not provide their own addresses, the malware defaults to a hardcoded set, presumably controlled by the developers to capture funds from their less experienced users.\n\n![Fallback addresses are used if not specified in the config](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image13.png)\n\n### Electron application injections\n\nNOVABLIGHT can inject malicious code into several popular Electron-based applications. The payloads are dynamically fetched from the endpoint `https://api.nova-blight[.]top/injections/*targeted_application*/*some_key*`, targeting applications such as:\n\n* Discord client  \n* Exodus wallet  \n* Mullvad VPN client  \n* Atomic wallet  \n* Mailspring email client\n\nWe were able to retrieve all of the modules from a public GitHub [repository](https://github.com/CrackedProgramer412/caca/tree/main).\n\nThe injection implementation is a classic example of Electron App repacking: unpacking the ASAR file, rewriting any targeted source files, then repacking it. Looking at an example involving the Mullvad client, it first unpacks `Program Files\\\\Mullvad VPN\\\\resources\\\\app.asar` into a temporary directory, fetches a backdoored version of `account.js` from `https://api.nova-blight[.]top/injections/mullvad/dVukBEtL8rW2PDgkwdwfbNSdG3imwU8bZhYUygzthir66sXXUuyURunOin9s`, overwrites the source file `account.js`, and finally repacks it. While it might still work for older versions of Mullvad such as [2025.4](https://github.com/mullvad/mullvadvpn-app/releases/tag/2025.4), this does not seem to work on the latest version of Mullvad.\n\n![Repacking the Mullvad client](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image17.png)\n\nIn a similar case for the Exodus client, the NOVABLIGHT developers modified the setPassphrase function in the main module of the Exodus application, with additional credential-stealing functionalities.   \nThis is what [`main/index.js`](https://www.virustotal.com/gui/file/cf3a8cdb3fca4e9944dc90d13f2f4f2b4ae317955571d9132e97cc46a06f277b/detection) looks like in a legitimate release of Exodus 25.28.4:\n\n![Original logic of `main/index.js` in the Exodus client](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image21.png)\n\nIn the trojanized `index.js`, user-entered passphrases are exfiltrated via configurable Discord webhooks and Telegram - using either the official Telegram API or a custom Telegram API proxy.\n\n![Trojanized `index.js`](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image8.png)\n\n### Chrome sensitive data extraction\n\nFor targeting Chromium-based browsers (Brave, Chrome, Edge) running on version 137, the malware downloads a zip file containing a Chrome data decryption tool from https://github.com/Hyutop/pandakmc-auto-vote/blob/main/bin.zip. \n\n![Dynamically retrieving Chrome data decryption tool](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image35.png)\n\nThe GitHub repository attempts to masquerade as a Minecraft voting management tool. \n\n![GitHub repo with a fake README](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image36.png)\n\nHowever, the zip file `bin.zip` contains the compiled code ([decrypt.exe](https://www.virustotal.com/gui/file/82920f3482c55430361b0cf184abf546fdb32fa079026d6ce1653f4cab49647d/detection) and [chrome_decrypt.dll](https://www.virustotal.com/gui/file/daa1caa02a95411261aa7ed94762864e6f7bd7aa5fa79dfc9c1f3741d5ef8027)) of version 0.11.0 of the Chrome App-bound decrypter PoC project by [xaitax](https://github.com/xaitax/Chrome-App-Bound-Encryption-Decryption).\n\n![Chrome App-Bound Decryption tool by xaitax](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image32.png)\n\n### System enumeration\n\nOnce active, NOVABLIGHT executes a comprehensive suite of system enumeration functions designed to build a complete profile of the victim's machine and user activity. Each module targets a specific piece of information, which is then saved to a local directory before being uploaded to the command-and-control server. Detection engineers should note the specific implementations of each technique, and which data source(s) provide sufficient visibility.\n\n* `captureSystemInfo()`: Gathers extensive hardware and software specifications to fingerprint the device. This includes the Hardware ID (HWID), CPU and GPU models, RAM size, disk information, Windows OS version, and a list of all connected USB devices.  \n* Output: `*configured_path*/System Info.txt`  \n\n![Collecting system information](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image34.png)\n\n* `captureScreen()`: Captures a full screenshot of the victim's desktop, providing immediate insight into the user's current activity.  \n  * Method: Utilizes the [screenshot-desktop](https://www.npmjs.com/package/screenshot-desktop) library.  \n  * Output: A timestamped image file (e.g., *configured_path*/*hostname*\\_2025-10-26\\_14-30-00.png`).  \n* `captureTaskList()`: Obtains a list of all currently running processes for situational awareness, allowing the attacker to see what applications and security tools are active.  \n  * Method: Executes the command `tasklist /FO CSV /NH`.  \n  * Output: `*configured_path*/TaskManagerInfo.txt ` \n* `captureAVDetails()`: Identifies the installed antivirus or endpoint protection product by querying the Windows Security Center.  \n  * Method: Executes the PowerShell command `Get-CimInstance -Namespace root/SecurityCenter2 -ClassName AntiVirusProduct | Format-List`\n  * Output: `*configured_path*/Avdetails.txt` \n* `captureClipboardContent()`: Dumps the current content of the user's clipboard, which can contain sensitive, transient information like passwords or copied messages.  \n  * Method: Executes the PowerShell command `Get-Clipboard`.\n  * Output: `*configured_path*/Clipboard.txt`  \n* `captureWebcamVideo()`: Covertly records a video using the system's primary webcam, providing visual intelligence on the victim and their environment.  \n  * Method: Leverages the [`direct-synch-show`](http://direct-synch-show) library for video capture.  \n  * Output: `*configured_path*/Bighead.avi` \n* `captureWifiPasswords()`: Exfiltrates the passwords for all saved Wi-Fi networks on the device, allowing for potential lateral movement or access to other networks the victim uses.  \n  * Method: Executes the command `netsh wlan show profile *wifi_ssid* key=clear` for each profile.  \n  * Output: `*configured_path*/WifiPasswords.txt` \n* `getFilesUrgents`: This functionality exfiltrate files on disk according to a set of keywords as follow: **backup, default, code, discord, token, passw, mdp, motdepasse, mot_de_passe, login, secret, account, acount, apacht, banque, bank, matamask, wallet, crypto, exdous, 2fa, a1f, memo, compone, finance, seecret, credit, cni,** these files are archived as `files.zip` then sent to the C2.\n\n![Collecting important files](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image28.png)\n\n### Data exfiltration\n\nThere are 3 channels for the stolen data: the official web panel owned by the NOVABLIGHT group, the Discord webhook API, and the Telegram API. The status of these channels is uncertain, as the main proxy API and web panel are currently down, which may disrupt the functionality of the Discord and Telegram channels if they rely on the same proxy infrastructure.\n\nThe web panel was once the official exfiltration channel, as it was advertised as their primary data management platform. \n\n![Dashboard on the NOVABLIGHT web panel](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image12.png)\n\nThe Telegram implementation first tries to send the data to a configured proxy URL, the code checks if the URL contains the string `req` in this case `https://bamboulacity.nova-blight[.]xyz/req/dVukBEtL8rW2PDgkwdwfbNSdG3imwU8bZhYUygzthir66sXXUuyURunOin9s`.\n\nIf the proxy URL is not configured or does not meet the condition, the module falls back to communicating directly with the official Telegram API (at `https://api.telegram[.]org/bot*token*/sendMessage`) using a configured userId, chatId and botToken to send the stolen data. \n\n![Data exfiltration channel: Telegram](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image33.png)\n\nUnlike the Telegram module, the Discord webhook implementation is much simpler. It utilizes a single  URL for exfiltration with no fallback mechanism. The analyzed samples consistently used the custom proxy URL for this purpose.\n\n![Data exfiltration channel: Discord](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image19.png)\n\nNOVABLIGHT employs a redundant and multi-tiered infrastructure. Instead of relying on a single upload host, which would create a single point of failure, the malware leverages a combination of legitimate third-party file-hosting services and its own dedicated backend. The following is the extracted list of domains and endpoints:\n\n* `https://bashupload[.]com`  \n* `https://litterbox.catbox[.]moe/resources/internals/api.php`  \n* `https://tmpfiles[.]org/api/v1/upload`  \n* `https://oshi[.]at/`  \n* `http://sendfile[.]su/`  \n* `https://wsend[.]net`  \n* `https://api.gofile[.]io/servers`  \n* `https://gofile[.]io/uploadFiles`  \n* `https://rdmfile[.]eu/api/upload`  \n* `https://bamboulacity.nova-blight[.]xyz/file/`\n\n### Targeted data\n\nNOVABLIGHT executes targeted routines designed to steal credentials and session files from a specific list of installed software. The curated list is available in this GitHub [Gist](https://gist.github.com/jiayuchann/4a27afce5be67dd73edb9c4b9a6de1f9).\n\n## Obfuscation techniques\n\n### Array mapping\n\nThe first technique to tackle is the malware’s use of array mapping. The script initializes a single large global array `__p_6Aeb_dlrArray` with values of different types and encoding, which accounts for nearly all literal values used in the script. \n\n![Main global array used for value lookups](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image4.png)\n\nAfter substituting array index references, many small string chunks that make up a full string are split and concatenated at runtime, but at this stage, the NOVABLIGHT versioning number can be identified easily.\n\n![Results after fixing array mapping for `__p_6Aeb_dlrArray`](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image24.png)\n\n### String encoding\n\nThe second technique used to hide strings is the usage of base91 encoding. The function wrapper `__p_xIFu_MAIN_STR` is called with an integer argument.\n\n![Obfuscated strings](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image10.png)\n   \nThe integer is an index of a secondary array mapping `__p_9sMm_array` that contains encoded strings. It retrieves the encoded string and passes it to the decoding routine `__p_xIFu_MAIN_STR_decode`.\n\n![Global array used for lookup by `__p_xIFu_MAIN_STR`](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image9.png)\n\n`__p_xIFu_MAIN_STR_decode` will then decode it using a custom alphabet:   \n`vFAjbQox\\\u003e5?4K$m=83GYu.nBIh\\\u003cdrPaN\\^@%Hk:D_sSyz\"ER9/p,(*JwtfO)iUl\u0026C\\[~\\}\\{|Z+gX1MqL;60!e]T#2cVW7` and return the decoded string.\n\n![Main logic for string decoding](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image26.png)\n\n### Access pattern obfuscation\n\nInstead of accessing objects and functions directly, the code uses intermediate flattened “proxy” objects with mangled keys, wrapping objects in another layer of objects to hide the original access patterns. \n\nFor example, the function `__p_LQ1f_flat_…` is passed a flat object `__p_w3Th_flat_object`. This object contains 3 get accessors for properties, one of which returns the disableNetwork flag retrieved from the config, and a wrapper for a dispatcher call (`__p_jGTR_dispatcher_26`). Throughout the code, there is a pattern where the property names start with `empretecerian.js`, which happens to also be the script file’s name. The callee function can then access the actual objects and functions through this flat object populated by the caller.\n\n![Example pattern for flattened object](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image29.png)\n\n### Control flow obfuscation\n\nSome of the code’s execution path is routed through a central dispatcher,  `__p_jGTR_dispatcher_26`, in which the first argument name takes a short ID string.\n\n![The main dispatcher’s function signature](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image7.png)\n\nEach ID is mapped to a distinct function. For example, the ID `jgqatJ` is referenced by the `modules/init/Troll.js` module and it is responsible for a “troll” popup message box.\n\n![Mapping function ID to the actual function](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image14.png)\n\n### Proxy variables\n\nFirst, the obfuscation transforms function syntax to “[rest parameters syntax](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters)” which replaces the parameters with an array that stores variable values instead of direct variables, the code then references the array with numerical values. For instance, the function `__p_xIFu_MAIN_STR_decode` is not called with direct parameters. Instead, its arguments are first placed into the `__p_A5wG_varMask` array (line 22), and the function is programmed to retrieve them from predefined indices. For example, at line 25, the index `-36` of the array stores the index of the character \"c\" in a string stored in `__p_A5wG_varMask[171]`.\n\n![Function utilizing rest parameters](/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image3.png)\n\n## NOVABLIGHT and MITRE ATT\u0026CK\n\nElastic uses the [MITRE ATT\u0026CK](https://attack.mitre.org/) framework to document common tactics, techniques, and procedures that advanced persistent threats use against enterprise networks.\n\n### Tactics\n\n* [Execution](https://attack.mitre.org/tactics/TA0002/)  \n* [Persistence](https://attack.mitre.org/tactics/TA0003/)  \n* [Defense Evasion](https://attack.mitre.org/tactics/TA0005/)  \n* [Credential Access](https://attack.mitre.org/tactics/TA0006/)  \n* [Discovery](https://attack.mitre.org/tactics/TA0007/)  \n* [Collection](https://attack.mitre.org/tactics/TA0009/)  \n* [Command and Control](https://attack.mitre.org/tactics/TA0011/)  \n* [Exfiltration](https://attack.mitre.org/tactics/TA0010/)\n\n### Techniques\n\n* [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027/)  \n* [Process Discovery](https://attack.mitre.org/techniques/T1057/)  \n* [Command and Scripting Interpreter: PowerShell](https://attack.mitre.org/techniques/T1059/001/)  \n* [Command and Scripting Interpreter: JavaScript](https://attack.mitre.org/techniques/T1059/007/)  \n* [Data Staged: Local Data Staging](https://attack.mitre.org/techniques/T1074/001/)  \n* [System Information Discovery](https://attack.mitre.org/techniques/T1082/)  \n* [File and Directory Discovery](https://attack.mitre.org/techniques/T1083/)  \n* [Screen Capture](https://attack.mitre.org/techniques/T1113/)  \n* [Clipboard Data](https://attack.mitre.org/techniques/T1115/)  \n* [Video Capture](https://attack.mitre.org/techniques/T1125/)  \n* [Virtualization/Sandbox Evasion: System Checks](https://attack.mitre.org/techniques/T1497/001/)  \n* [Account Access Removal](https://attack.mitre.org/techniques/T1531/)  \n* [Credentials from Password Stores: Credentials from Web Browsers](https://attack.mitre.org/techniques/T1555/003/)  \n* [Impair Defenses: Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001/)  \n* [Exfiltration Over Web Service: Exfiltration to Cloud Storage](https://attack.mitre.org/techniques/T1567/002/)\n\n## Conclusion\n\nNOVABLIGHT shows how even lesser-known malware can make an impact. By offering a polished, easy-to-use tool through platforms like Telegram and Discord, its creators have made it simple for anyone to get involved in cybercrime.  \n\nFurthermore, this threat is not static. Our analysis confirms that NOVABLIGHT is under continuous and active development. This ongoing evolution ensures that NOVABLIGHT will remain a persistent and relevant threat for the foreseeable future.\n\n## Detecting NOVABLIGHT\n\n### YARA\n\nElastic Security has created YARA rules to identify this activity.\n\n```yara  \nrule Windows_Infostealer_NovaBlight {\n    meta:\n        author = \"Elastic Security\"\n        creation_date = \"2025-07-18\"\n        last_modified = \"2025-07-28\"\n        os = \"Windows\"\n        arch = \"x86\"\n        category_type = \"Infostealer\"\n        family = \"NovaBlight\"\n        threat_name = \"Windows.Infostealer.NovaBlight\"\n        reference_sample = \"d806d6b5811965e745fd444b8e57f2648780cc23db9aa2c1675bc9d18530ab73\"\n\n    strings:\n        $a1 = \"C:\\\\Users\\\\Administrateur\\\\Desktop\\\\Nova\\\\\"\n        $a2 = \"[+] Recording...\" fullword\n        $a3 = \"[+] Capture start\" fullword\n    condition:\n        all of them\n}\n```\n\n## Observations\n\nThe following observables were discussed in this research.\n\n| Observable | Type | Name | Reference |\n| :---- | :---- | :---- | :---- |\n| `ed164ee2eacad0eea9dc4fbe271ee2b2387b59929d73c843281a8d5e94c05d64` | SHA-256 |  | NOVABLIGHT VERSION 2.2 |\n| `39f09771d70e96c7b760b3b6a30a015ec5fb6a9dd5bc1e2e609ddf073c2c853d` | SHA-256 |  | NOVABLIGHT VERSION 2.1 |\n| `97393c27195c58f8e4acc9312a4c36818fe78f2ddce7ccba47f77a5ca42eab65` | SHA-256 |  | NOVABLIGHT VERSION 2.0 |\n| `api.nova-blight[.]top` | DOMAIN |  | NOVABLIGHT dashboard |\n| `shadow.nova-blight[.]top` | DOMAIN |  | NOVABLIGHT dashboard |\n| `nova-blight[.]site` | DOMAIN |  | NOVABLIGHT dashboard |\n| `nova-blight[.]xyz` | DOMAIN |  | NOVABLIGHT dashboard |\n| `bamboulacity.nova-blight[.]xyz` | DOMAIN |  | NOVABLIGHT dashboard |\n\n## References\n\nThe following were referenced throughout the above research:\n\n* [https://www.gatewatcher.com/lab/groupe-nova-sentinel/](https://www.gatewatcher.com/lab/groupe-nova-sentinel/)  \n* [https://www.cyfirma.com/research/emerging-maas-operator-sordeal-releases-nova-infostealer/](https://www.cyfirma.com/research/emerging-maas-operator-sordeal-releases-nova-infostealer/)\n","code":"var Component=(()=\u003e{var d=Object.create;var r=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var u=(n,e)=\u003e()=\u003e(e||n((e={exports:{}}).exports,e),e.exports),b=(n,e)=\u003e{for(var t in e)r(n,t,{get:e[t],enumerable:!0})},o=(n,e,t,s)=\u003e{if(e\u0026\u0026typeof e==\"object\"||typeof e==\"function\")for(let a of m(e))!g.call(n,a)\u0026\u0026a!==t\u0026\u0026r(n,a,{get:()=\u003ee[a],enumerable:!(s=p(e,a))||s.enumerable});return n};var w=(n,e,t)=\u003e(t=n!=null?d(f(n)):{},o(e||!n||!n.__esModule?r(t,\"default\",{value:n,enumerable:!0}):t,n)),y=n=\u003eo(r({},\"__esModule\",{value:!0}),n);var c=u((I,l)=\u003e{l.exports=_jsx_runtime});var x={};b(x,{default:()=\u003ek,frontmatter:()=\u003ev});var i=w(c()),v={title:\"MaaS Appeal: An Infostealer Rises From The Ashes\",slug:\"maas-appeal-an-infostealer-rises-from-the-ashes\",date:\"2025-07-29\",description:\"NOVABLIGHT is a NodeJS infostealer developed and sold as a MaaS offering; it is used primarily to steal credentials and compromise cryptowallets.\",author:[{slug:\"jia-yu-chan\"},{slug:\"elastic-security-labs\"}],image:\"Security Labs Images 7.jpg\",category:[{slug:\"malware-analysis\"}]};function h(n){let e=Object.assign({h2:\"h2\",p:\"p\",a:\"a\",img:\"img\",h3:\"h3\",ul:\"ul\",li:\"li\",code:\"code\",strong:\"strong\",br:\"br\",em:\"em\",pre:\"pre\",div:\"div\",table:\"table\",thead:\"thead\",tr:\"tr\",th:\"th\",tbody:\"tbody\",td:\"td\"},n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{id:\"novablight-at-a-glance\",children:\"NOVABLIGHT at a glance\"}),`\n`,(0,i.jsx)(e.p,{children:\"NOVABLIGHT is a NodeJS-based Malware-as-a-Service (MaaS) information stealer developed and sold by a threat group that demonstrates French-language proficiency. This is apparent in their discussions and operational communications on their primary sales and support platforms, Telegram and Discord.\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"Based on our analysis of the latest released version of NOVABLIGHT, the following code snippet suggests that the Sordeal Group, the group behind \",(0,i.jsx)(e.a,{href:\"https://www.cyfirma.com/research/emerging-maas-operator-sordeal-releases-nova-infostealer/\",rel:\"nofollow\",children:\"Nova Sentinel and MALICORD\"}),\", is responsible for NOVABLIGHT as well.\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image18.png\",alt:\"Sordeal Group mentioned, followed by a link to the Telegram channel\",width:\"567\",height:\"69\"})}),`\n`,(0,i.jsx)(e.h3,{id:\"key-takeaways\",children:\"Key takeaways\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:\"NOVABLIGHT is an infostealer described as an educational tool, though Telegram channel messages reveal sensitive information and unredacted screenshots.\"}),`\n`,(0,i.jsx)(e.li,{children:\"NOVABLIGHT licenses are valid for up to one year, and binaries can be generated via Telegram or Discord.\"}),`\n`,(0,i.jsx)(e.li,{children:\"Heavily obfuscated code with many capabilities.\"}),`\n`]}),`\n`,(0,i.jsx)(e.h2,{id:\"discovery\",children:\"Discovery\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"Elastic Security Labs identified multiple campaigns leveraging fake video game installer downloads as an initial access lure for MaaS infections of internet users. In one example, the URL \",(0,i.jsx)(e.code,{children:\"http://gonefishe[.]com\"}),\" prompted the user to download a binary and install a French-language version of a game with a name and description comparable to one recently released on Steam.\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image37.png\",alt:\"Landing page for http://gonefishe . com\",width:\"1999\",height:\"1238\"})}),`\n`,(0,i.jsx)(e.h2,{id:\"distribution-monetization-and-community\",children:\"Distribution, monetization, and community\"}),`\n`,(0,i.jsx)(e.p,{children:\"The group advertised and sold their product on various online platforms, previously Sellix and Sellpass and currently Billgang.\"}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image27.png\",alt:\"NOVABLIGHT\\u2019s product page on Billgang\",width:\"1999\",height:\"942\"})}),`\n`,(0,i.jsx)(e.p,{children:\"The group sells an API key, which expires between 1 and 12 months. This key can then be used to build an instance of NOVABLIGHT through a Telegram bot or through Discord.\"}),`\n`,(0,i.jsx)(e.p,{children:\"The group promotes a referral program on their Discord channel with API keys as rewards.\"}),`\n`,(0,i.jsx)(e.p,{children:\"Users get access to a dashboard hosted by the group that presents the information collected from victims. The following domains were identified, though others may exist:\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:\"api.nova-blight[.]top\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:\"shadow.nova-blight[.]top\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:\"nova-blight[.]site\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:\"nova-blight[.]xyz\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:\"bamboulacity.nova-blight[.]xyz\"})}),`\n`]}),`\n`,(0,i.jsx)(e.p,{children:\"Some of the images used in the dashboard panel are hosted in GitHub repositories associated with different accounts, which helped expose more details about the group.\"}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image30.png\",alt:\"HTTP response from https://shadow.nova-blight .top found in VirusTotal\",width:\"1891\",height:\"714\"})}),`\n`,(0,i.jsxs)(e.p,{children:[\"The GitHub account \",(0,i.jsx)(e.code,{children:\"KSCHcuck1\"}),\" is a pseudonym similar to that of the previous author of MALICORD, a free version of the earliest version of the stealer that was hosted on GitHub under the account \",(0,i.jsx)(e.code,{children:\"KSCH-58\"}),\" (\",(0,i.jsx)(e.a,{href:\"https://web.archive.org/web/20231216010712/https://github.com/KSCH-58\",rel:\"nofollow\",children:\"WEB ARCHIVE LINK\"}),\"). The X account \",(0,i.jsx)(e.code,{children:\"@KSCH_dsc\"}),' also possessed similarities, and was actively advertising their \"best stealer ever released\" as recently as 2023.']}),`\n`,(0,i.jsx)(e.p,{children:\"The following GitHub accounts have been identified in relation to the group:\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://github.com/KSCHcuck1\",rel:\"nofollow\",children:\"https://github.com/KSCHcuck1\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://github.com/CrackedProgramer412/caca\",rel:\"nofollow\",children:\"https://github.com/CrackedProgramer412/caca\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://github.com/MYnva\",rel:\"nofollow\",children:\"https://github.com/MYnva\"})}),`\n`,(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.a,{href:\"https://github.com/404log\",rel:\"nofollow\",children:\"https://github.com/404log\"}),\" (dead)\"]}),`\n`]}),`\n`,(0,i.jsx)(e.p,{children:\"Their public Telegram channel hosts tutorials and a community of users. In the following image capture, users are sharing screenshots of the build process.\"}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image22.png\",alt:\"User screenshots of building NOVABLIGHT\",width:\"589\",height:\"1280\"})}),`\n`,(0,i.jsx)(e.p,{children:\"Users of the infostealer are openly sharing images of luxury items and money transfers, which is notable because NOVABLIGHT is described as being solely for educational purposes.\"}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image23.png\",alt:\"Image of phones a user of NOVABLIGHT claims to have purchased, shared via Telegram on May 15, 2025\",width:\"343\",height:\"473\"})}),`\n`,(0,i.jsx)(e.h2,{id:\"novablight-analysis\",children:\"NOVABLIGHT analysis\"}),`\n`,(0,i.jsx)(e.p,{children:\"NOVABLIGHT is a modular and feature-rich information stealer built on NodeJS with the Electron framework. Its capabilities go beyond simple credential theft, incorporating methods for data collection and exfiltration, sandbox detection, and heavy obfuscation.\"}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image16.png\",alt:\"VirusTotal depicting low detection rate of NOVABLIGHT\",width:\"1889\",height:\"515\"})}),`\n`,(0,i.jsx)(e.p,{children:\"A notable aspect of the malware's build process is its modular configuration. Although a customer can choose to disable specific features, the underlying code for those functions remains within the final payload; it is dormant and won\\u2019t be executed based on the build's configuration flags.\"}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image25.png\",alt:\"Wallet clipper logic can either be executed or not, based on the config field swapWallet.active\",width:\"1396\",height:\"318\"})}),`\n`,(0,i.jsxs)(e.p,{children:[\"Code snippets in this report are from a non-obfuscated version 2.0 \",(0,i.jsx)(e.a,{href:\"https://www.virustotal.com/gui/file/abc5a9605010890d7514f239e3defbbccecaeaf4cc2e2b7d54cdaaed88dd3766\",rel:\"nofollow\",children:\"sample\"}),\", when implementation details match version 2.2 samples, or from our manually de-obfuscated code of a version 2.2 \",(0,i.jsx)(e.a,{href:\"https://www.virustotal.com/gui/file/1a2fc6ee9c48f35cff500d7a95f5d919f644d0eeb2980f9cdad4762c42b94afc/detection\",rel:\"nofollow\",children:\"sample\"}),\" when they differ.\"]}),`\n`,(0,i.jsx)(e.h3,{id:\"code-structure\",children:\"Code structure\"}),`\n`,(0,i.jsx)(e.p,{children:'From initial setup to data theft, the infostealer is organized into a clear, multi-stage pipeline managed by high-level \"flow\" controllers. The primary stages are:'}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:\"flow/init:\"}),\" Pre-flight checks (running instances, admin privileges, internet connectivity), anti-analysis checks, system info enumeration, establish persistence, etc.\"]}),`\n`,(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:\"flow/injecting:\"}),\" Application injection and patching (Atomic, Mullvad, Discord, \\u2026)\"]}),`\n`,(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:\"flow/grabb\"}),\": Data harvesting\"]}),`\n`,(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:\"flow/ClipBoard\"}),\": Clipboard hijacking\"]}),`\n`,(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:\"flow/sending\"}),\": Data exfiltration\"]}),`\n`,(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:\"flow/disable\"}),\": System sabotage (disable Windows Defender, system anti-reset, broken Internet connectivity, \\u2026)\"]}),`\n`,(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:\"flow/cleaning:\"}),\" Post-exfiltration cleanup\"]}),`\n`]}),`\n`,(0,i.jsxs)(e.p,{children:[\"For more insights into the code structure, check out this GitHub \",(0,i.jsx)(e.a,{href:\"https://gist.github.com/jiayuchann/b13ec30e72e69cb542e2e6d2e009c4a4\",rel:\"nofollow\",children:\"Gist\"}),\", which lists the direct dependencies for each of NOVABLIGHT\\u2019s core modules and execution flows.\"]}),`\n`,(0,i.jsx)(e.h3,{id:\"anti-debug-and-sandbox-detection\",children:\"Anti-debug and sandbox detection\"}),`\n`,(0,i.jsx)(e.p,{children:\"NOVABLIGHT incorporates multiple techniques to detect and evade analysis environments, combining environment fingerprinting with active countermeasures. These checks include:\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:\"Detecting VM-related GPU names (vmware, virtualbox, qemu)\"}),`\n`,(0,i.jsx)(e.li,{children:\"Checking for blacklisted usernames (sandbox, test, malware)\"}),`\n`,(0,i.jsx)(e.li,{children:\"Identifying VM-specific driver files (balloon.sys, qemu-ga)\"}),`\n`,(0,i.jsx)(e.li,{children:\"Checking for low screen resolution and lack of USB devices\"}),`\n`,(0,i.jsx)(e.li,{children:\"Querying GitHub for blacklists of IPs, HWIDs, usernames, programs, organizations, GPU names, PC names, and Operating Systems\"}),`\n`,(0,i.jsx)(e.li,{children:\"Actively killing known analysis and debugging tools found in a remote list\"}),`\n`]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image2.png\",alt:\"Anti-debug and anti-VM checks\",width:\"1070\",height:\"570\"})}),`\n`,(0,i.jsx)(e.p,{children:\"The blacklists are hosted on GitHub:\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://raw.githubusercontent.com/Mynva/sub/main/json/blocked_ips.json\",rel:\"nofollow\",children:\"https://raw.githubusercontent.com/Mynva/sub/main/json/blocked_ips.json\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://raw.githubusercontent.com/Mynva/sub/main/json/blocked_progr.json\",rel:\"nofollow\",children:\"https://raw.githubusercontent.com/Mynva/sub/main/json/blocked_progr.json\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://raw.githubusercontent.com/Mynva/sub/refs/heads/main/json/blockedorg.json\",rel:\"nofollow\",children:\"https://raw.githubusercontent.com/Mynva/sub/refs/heads/main/json/blockedorg.json\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://raw.githubusercontent.com/Mynva/sub/main/json/blocked_GPUTYPE.json\",rel:\"nofollow\",children:\"https://raw.githubusercontent.com/Mynva/sub/main/json/blocked_GPUTYPE.json\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://raw.githubusercontent.com/Mynva/sub/main/json/nope.json\",rel:\"nofollow\",children:\"https://raw.githubusercontent.com/Mynva/sub/main/json/nope.json\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://raw.githubusercontent.com/Mynva/sub/main/json/blocked_hwid.json\",rel:\"nofollow\",children:\"https://raw.githubusercontent.com/Mynva/sub/main/json/blocked_hwid.json\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://raw.githubusercontent.com/Mynva/sub/main/json/blockedpcname.json\",rel:\"nofollow\",children:\"https://raw.githubusercontent.com/Mynva/sub/main/json/blockedpcname.json\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://raw.githubusercontent.com/MYnva/sub/refs/heads/main/json/blockedOS.json\",rel:\"nofollow\",children:\"https://raw.githubusercontent.com/MYnva/sub/refs/heads/main/json/blockedOS.json\"})}),`\n`]}),`\n`,(0,i.jsx)(e.h3,{id:\"disable-defender--attempts-to-disable-task-manager\",children:\"Disable Defender \u0026 attempts to disable Task Manager\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"NOVABLIGHT attempts to disable Windows Defender and related Windows security features by downloading and executing a batch script, \",(0,i.jsx)(e.a,{href:\"https://raw.githubusercontent.com/ZygoteCode/WinDefendManager/refs/heads/main/Resources/DisableWD.bat\",rel:\"nofollow\",children:\"DisableWD.bat\"}),\", from a public GitHub repository.\"]}),`\n`,(0,i.jsxs)(e.p,{children:[\"The malware claims to be capable of disabling the Task Manager, making it difficult for a non-technical user to identify and terminate the malicious program. It uses \",(0,i.jsx)(e.code,{children:\"setValues\"}),\" from the \",(0,i.jsx)(e.code,{children:\"regedit-rs\"}),\" package to set the \",(0,i.jsx)(e.code,{children:\"DisableTaskMgr\"}),\" value to \",(0,i.jsx)(e.code,{children:\"1\"}),\" under \",(0,i.jsx)(e.code,{children:\"HKCU\\\\\\\\\\\\\\\\Software\\\\\\\\\\\\\\\\Microsoft\\\\\\\\\\\\\\\\Windows\\\\\\\\\\\\\\\\CurrentVersion\\\\\\\\\\\\\\\\Policies\\\\\\\\\\\\\\\\System\"}),\".\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image20.png\",alt:\"Disable Task Manager through the registry\",width:\"752\",height:\"419\"})}),`\n`,(0,i.jsxs)(e.p,{children:[\"However, looking at the \",(0,i.jsx)(e.code,{children:\"regedit-rs\"}),\" \",(0,i.jsx)(e.a,{href:\"https://github.com/Zagrios/regedit-rs/blob/4b7874eb6542cf162f62cf40719b44e69f086497/js-binding.js#L318\",rel:\"nofollow\",children:\"repo\"}),\" (v1.0.3 to match), there are no exported functions named \",(0,i.jsx)(e.code,{children:\"setValues\"}),\", only \",(0,i.jsx)(e.code,{children:\"putValue\"}),\". This functionality may not work as intended.\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image31.png\",alt:\"Snippet of js-binding.js from the regedit-rs GitHub repo\",width:\"662\",height:\"168\"})}),`\n`,(0,i.jsx)(e.h3,{id:\"disable-internet-access\",children:\"Disable internet access\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"To disrupt the victim's internet connection, the malware employs two distinct methods. The first involves persistently disabling the Wi-Fi adapter by repeatedly resetting it in a rapid loop, utilizing the external npm package \",(0,i.jsx)(e.a,{href:\"https://www.npmjs.com/package/wifi-control\",rel:\"nofollow\",children:\"wifi-control\"}),\" and its \",(0,i.jsx)(e.a,{href:\"https://github.com/msolters/wifi-control-node/blob/13d02226a3e6b12b48ebd063af2e7e3c97ef0abe/src/wifi-control.coffee#L293\",rel:\"nofollow\",children:\"resetWiFi\"}),\" function.\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image6.png\",alt:\"Disable Wi-Fi adapter\",width:\"473\",height:\"437\"})}),`\n`,(0,i.jsxs)(e.p,{children:[\"The second method disables the primary \\u201CEthernet\\u201D network adapter using the \",(0,i.jsx)(e.code,{children:\"netsh\"}),\" command, running it every 5 seconds to disable re-enabling attempts.\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image5.png\",alt:\"Disable network adapter named \\u201CEthernet\\u201D\",width:\"631\",height:\"286\"})}),`\n`,(0,i.jsx)(e.h3,{id:\"defeat-system-recovery\",children:\"Defeat system recovery\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"The malware can sabotage system recovery by disabling the Windows Recovery Environment (\",(0,i.jsx)(e.code,{children:\"reagentc /disable\"}),\") and deleting all Volume Shadow Copies (\",(0,i.jsx)(e.code,{children:\"vssadmin delete shadows /all\"}),\") when the \",(0,i.jsx)(e.code,{children:\"antireset\"}),\" flag is enabled in the configuration.\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image1.png\",alt:\"Disable system restore\",width:\"518\",height:\"344\"})}),`\n`,(0,i.jsx)(e.h3,{id:\"blocking-file-deletion\",children:\"Blocking file deletion\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"Another system sabotage function that might be apparent to the victim involves making the malware\\u2019s own executable file undeletable by modifying its security permissions through \",(0,i.jsx)(e.code,{children:\"icacls \\u201C${filePath}\\u201D /deny ${currentUser}:(DE,DC)\"}),\"  where \",(0,i.jsx)(e.a,{href:\"https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/icacls\",rel:\"nofollow\",children:\"DE denies delete rights and DC prevents deletion\"}),\" via the parent folder and optionally creating a pop-up message box containing a \\u201Ctroll\\u201D message.\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image11.png\",alt:\"Block current user from deleting the malware executable\",width:\"565\",height:\"500\"})}),`\n`,(0,i.jsxs)(e.p,{children:[\"Before locking itself, it also executes a PowerShell command to remove the victim\\u2019s account from the following system groups: \",(0,i.jsx)(e.code,{children:\"Administrators\"}),\", \",(0,i.jsx)(e.code,{children:\"Power Users\"}),\", \",(0,i.jsx)(e.code,{children:\"Remote Desktop Users\"}),\", \",(0,i.jsx)(e.code,{children:\"Administrateurs\"}),\".\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image15.png\",alt:\"Remove current user from Admin groups\",width:\"976\",height:\"141\"})}),`\n`,(0,i.jsx)(e.h3,{id:\"clipboard-address-substitution\",children:\"Clipboard address substitution\"}),`\n`,(0,i.jsx)(e.p,{children:'The malware implements a \"clipper\" module that actively monitors the clipboard of the machine for any Crypto or Paypal addresses and replaces them with addresses defined in the configuration, if the user who built the payload did not provide their own addresses, the malware defaults to a hardcoded set, presumably controlled by the developers to capture funds from their less experienced users.'}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image13.png\",alt:\"Fallback addresses are used if not specified in the config\",width:\"1871\",height:\"1237\"})}),`\n`,(0,i.jsx)(e.h3,{id:\"electron-application-injections\",children:\"Electron application injections\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"NOVABLIGHT can inject malicious code into several popular Electron-based applications. The payloads are dynamically fetched from the endpoint \",(0,i.jsx)(e.code,{children:\"https://api.nova-blight[.]top/injections/*targeted_application*/*some_key*\"}),\", targeting applications such as:\"]}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:\"Discord client\"}),`\n`,(0,i.jsx)(e.li,{children:\"Exodus wallet\"}),`\n`,(0,i.jsx)(e.li,{children:\"Mullvad VPN client\"}),`\n`,(0,i.jsx)(e.li,{children:\"Atomic wallet\"}),`\n`,(0,i.jsx)(e.li,{children:\"Mailspring email client\"}),`\n`]}),`\n`,(0,i.jsxs)(e.p,{children:[\"We were able to retrieve all of the modules from a public GitHub \",(0,i.jsx)(e.a,{href:\"https://github.com/CrackedProgramer412/caca/tree/main\",rel:\"nofollow\",children:\"repository\"}),\".\"]}),`\n`,(0,i.jsxs)(e.p,{children:[\"The injection implementation is a classic example of Electron App repacking: unpacking the ASAR file, rewriting any targeted source files, then repacking it. Looking at an example involving the Mullvad client, it first unpacks \",(0,i.jsx)(e.code,{children:\"Program Files\\\\\\\\Mullvad VPN\\\\\\\\resources\\\\\\\\app.asar\"}),\" into a temporary directory, fetches a backdoored version of \",(0,i.jsx)(e.code,{children:\"account.js\"}),\" from \",(0,i.jsx)(e.code,{children:\"https://api.nova-blight[.]top/injections/mullvad/dVukBEtL8rW2PDgkwdwfbNSdG3imwU8bZhYUygzthir66sXXUuyURunOin9s\"}),\", overwrites the source file \",(0,i.jsx)(e.code,{children:\"account.js\"}),\", and finally repacks it. While it might still work for older versions of Mullvad such as \",(0,i.jsx)(e.a,{href:\"https://github.com/mullvad/mullvadvpn-app/releases/tag/2025.4\",rel:\"nofollow\",children:\"2025.4\"}),\", this does not seem to work on the latest version of Mullvad.\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image17.png\",alt:\"Repacking the Mullvad client\",width:\"776\",height:\"524\"})}),`\n`,(0,i.jsxs)(e.p,{children:[\"In a similar case for the Exodus client, the NOVABLIGHT developers modified the setPassphrase function in the main module of the Exodus application, with additional credential-stealing functionalities.\",(0,i.jsx)(e.br,{}),`\n`,\"This is what \",(0,i.jsx)(e.a,{href:\"https://www.virustotal.com/gui/file/cf3a8cdb3fca4e9944dc90d13f2f4f2b4ae317955571d9132e97cc46a06f277b/detection\",rel:\"nofollow\",children:(0,i.jsx)(e.code,{children:\"main/index.js\"})}),\" looks like in a legitimate release of Exodus 25.28.4:\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image21.png\",alt:\"Original logic of main/index.js in the Exodus client\",width:\"924\",height:\"413\"})}),`\n`,(0,i.jsxs)(e.p,{children:[\"In the trojanized \",(0,i.jsx)(e.code,{children:\"index.js\"}),\", user-entered passphrases are exfiltrated via configurable Discord webhooks and Telegram - using either the official Telegram API or a custom Telegram API proxy.\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image8.png\",alt:\"Trojanized index.js\",width:\"749\",height:\"807\"})}),`\n`,(0,i.jsx)(e.h3,{id:\"chrome-sensitive-data-extraction\",children:\"Chrome sensitive data extraction\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"For targeting Chromium-based browsers (Brave, Chrome, Edge) running on version 137, the malware downloads a zip file containing a Chrome data decryption tool from \",(0,i.jsx)(e.a,{href:\"https://github.com/Hyutop/pandakmc-auto-vote/blob/main/bin.zip\",rel:\"nofollow\",children:\"https://github.com/Hyutop/pandakmc-auto-vote/blob/main/bin.zip\"}),\".\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image35.png\",alt:\"Dynamically retrieving Chrome data decryption tool\",width:\"1897\",height:\"565\"})}),`\n`,(0,i.jsx)(e.p,{children:\"The GitHub repository attempts to masquerade as a Minecraft voting management tool.\"}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image36.png\",alt:\"GitHub repo with a fake README\",width:\"1382\",height:\"553\"})}),`\n`,(0,i.jsxs)(e.p,{children:[\"However, the zip file \",(0,i.jsx)(e.code,{children:\"bin.zip\"}),\" contains the compiled code (\",(0,i.jsx)(e.a,{href:\"https://www.virustotal.com/gui/file/82920f3482c55430361b0cf184abf546fdb32fa079026d6ce1653f4cab49647d/detection\",rel:\"nofollow\",children:\"decrypt.exe\"}),\" and \",(0,i.jsx)(e.a,{href:\"https://www.virustotal.com/gui/file/daa1caa02a95411261aa7ed94762864e6f7bd7aa5fa79dfc9c1f3741d5ef8027\",rel:\"nofollow\",children:\"chrome_decrypt.dll\"}),\") of version 0.11.0 of the Chrome App-bound decrypter PoC project by \",(0,i.jsx)(e.a,{href:\"https://github.com/xaitax/Chrome-App-Bound-Encryption-Decryption\",rel:\"nofollow\",children:\"xaitax\"}),\".\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image32.png\",alt:\"Chrome App-Bound Decryption tool by xaitax\",width:\"1412\",height:\"463\"})}),`\n`,(0,i.jsx)(e.h3,{id:\"system-enumeration\",children:\"System enumeration\"}),`\n`,(0,i.jsx)(e.p,{children:\"Once active, NOVABLIGHT executes a comprehensive suite of system enumeration functions designed to build a complete profile of the victim's machine and user activity. Each module targets a specific piece of information, which is then saved to a local directory before being uploaded to the command-and-control server. Detection engineers should note the specific implementations of each technique, and which data source(s) provide sufficient visibility.\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:\"captureSystemInfo()\"}),\": Gathers extensive hardware and software specifications to fingerprint the device. This includes the Hardware ID (HWID), CPU and GPU models, RAM size, disk information, Windows OS version, and a list of all connected USB devices.\"]}),`\n`,(0,i.jsxs)(e.li,{children:[\"Output: \",(0,i.jsx)(e.code,{children:\"*configured_path*/System Info.txt\"})]}),`\n`]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image34.png\",alt:\"Collecting system information\",width:\"1999\",height:\"835\"})}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:\"captureScreen()\"}),\": Captures a full screenshot of the victim's desktop, providing immediate insight into the user's current activity.\",`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsxs)(e.li,{children:[\"Method: Utilizes the \",(0,i.jsx)(e.a,{href:\"https://www.npmjs.com/package/screenshot-desktop\",rel:\"nofollow\",children:\"screenshot-desktop\"}),\" library.\"]}),`\n`,(0,i.jsxs)(e.li,{children:[\"Output: A timestamped image file (e.g., \",(0,i.jsx)(e.em,{children:\"configured_path\"}),\"/\",(0,i.jsx)(e.em,{children:\"hostname\"}),\"_2025-10-26_14-30-00.png`).\"]}),`\n`]}),`\n`]}),`\n`,(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:\"captureTaskList()\"}),\": Obtains a list of all currently running processes for situational awareness, allowing the attacker to see what applications and security tools are active.\",`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsxs)(e.li,{children:[\"Method: Executes the command \",(0,i.jsx)(e.code,{children:\"tasklist /FO CSV /NH\"}),\".\"]}),`\n`,(0,i.jsxs)(e.li,{children:[\"Output: \",(0,i.jsx)(e.code,{children:\"*configured_path*/TaskManagerInfo.txt \"})]}),`\n`]}),`\n`]}),`\n`,(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:\"captureAVDetails()\"}),\": Identifies the installed antivirus or endpoint protection product by querying the Windows Security Center.\",`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsxs)(e.li,{children:[\"Method: Executes the PowerShell command \",(0,i.jsx)(e.code,{children:\"Get-CimInstance -Namespace root/SecurityCenter2 -ClassName AntiVirusProduct | Format-List\"})]}),`\n`,(0,i.jsxs)(e.li,{children:[\"Output: \",(0,i.jsx)(e.code,{children:\"*configured_path*/Avdetails.txt\"})]}),`\n`]}),`\n`]}),`\n`,(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:\"captureClipboardContent()\"}),\": Dumps the current content of the user's clipboard, which can contain sensitive, transient information like passwords or copied messages.\",`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsxs)(e.li,{children:[\"Method: Executes the PowerShell command \",(0,i.jsx)(e.code,{children:\"Get-Clipboard\"}),\".\"]}),`\n`,(0,i.jsxs)(e.li,{children:[\"Output: \",(0,i.jsx)(e.code,{children:\"*configured_path*/Clipboard.txt\"})]}),`\n`]}),`\n`]}),`\n`,(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:\"captureWebcamVideo()\"}),\": Covertly records a video using the system's primary webcam, providing visual intelligence on the victim and their environment.\",`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsxs)(e.li,{children:[\"Method: Leverages the \",(0,i.jsx)(e.a,{href:\"http://direct-synch-show\",rel:\"nofollow\",children:(0,i.jsx)(e.code,{children:\"direct-synch-show\"})}),\" library for video capture.\"]}),`\n`,(0,i.jsxs)(e.li,{children:[\"Output: \",(0,i.jsx)(e.code,{children:\"*configured_path*/Bighead.avi\"})]}),`\n`]}),`\n`]}),`\n`,(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:\"captureWifiPasswords()\"}),\": Exfiltrates the passwords for all saved Wi-Fi networks on the device, allowing for potential lateral movement or access to other networks the victim uses.\",`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsxs)(e.li,{children:[\"Method: Executes the command \",(0,i.jsx)(e.code,{children:\"netsh wlan show profile *wifi_ssid* key=clear\"}),\" for each profile.\"]}),`\n`,(0,i.jsxs)(e.li,{children:[\"Output: \",(0,i.jsx)(e.code,{children:\"*configured_path*/WifiPasswords.txt\"})]}),`\n`]}),`\n`]}),`\n`,(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:\"getFilesUrgents\"}),\": This functionality exfiltrate files on disk according to a set of keywords as follow: \",(0,i.jsx)(e.strong,{children:\"backup, default, code, discord, token, passw, mdp, motdepasse, mot_de_passe, login, secret, account, acount, apacht, banque, bank, matamask, wallet, crypto, exdous, 2fa, a1f, memo, compone, finance, seecret, credit, cni,\"}),\" these files are archived as \",(0,i.jsx)(e.code,{children:\"files.zip\"}),\" then sent to the C2.\"]}),`\n`]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image28.png\",alt:\"Collecting important files\",width:\"1366\",height:\"599\"})}),`\n`,(0,i.jsx)(e.h3,{id:\"data-exfiltration\",children:\"Data exfiltration\"}),`\n`,(0,i.jsx)(e.p,{children:\"There are 3 channels for the stolen data: the official web panel owned by the NOVABLIGHT group, the Discord webhook API, and the Telegram API. The status of these channels is uncertain, as the main proxy API and web panel are currently down, which may disrupt the functionality of the Discord and Telegram channels if they rely on the same proxy infrastructure.\"}),`\n`,(0,i.jsx)(e.p,{children:\"The web panel was once the official exfiltration channel, as it was advertised as their primary data management platform.\"}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image12.png\",alt:\"Dashboard on the NOVABLIGHT web panel\",width:\"852\",height:\"620\"})}),`\n`,(0,i.jsxs)(e.p,{children:[\"The Telegram implementation first tries to send the data to a configured proxy URL, the code checks if the URL contains the string \",(0,i.jsx)(e.code,{children:\"req\"}),\" in this case \",(0,i.jsx)(e.code,{children:\"https://bamboulacity.nova-blight[.]xyz/req/dVukBEtL8rW2PDgkwdwfbNSdG3imwU8bZhYUygzthir66sXXUuyURunOin9s\"}),\".\"]}),`\n`,(0,i.jsxs)(e.p,{children:[\"If the proxy URL is not configured or does not meet the condition, the module falls back to communicating directly with the official Telegram API (at \",(0,i.jsx)(e.code,{children:\"https://api.telegram[.]org/bot*token*/sendMessage\"}),\") using a configured userId, chatId and botToken to send the stolen data.\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image33.png\",alt:\"Data exfiltration channel: Telegram\",width:\"1097\",height:\"725\"})}),`\n`,(0,i.jsx)(e.p,{children:\"Unlike the Telegram module, the Discord webhook implementation is much simpler. It utilizes a single  URL for exfiltration with no fallback mechanism. The analyzed samples consistently used the custom proxy URL for this purpose.\"}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image19.png\",alt:\"Data exfiltration channel: Discord\",width:\"868\",height:\"518\"})}),`\n`,(0,i.jsx)(e.p,{children:\"NOVABLIGHT employs a redundant and multi-tiered infrastructure. Instead of relying on a single upload host, which would create a single point of failure, the malware leverages a combination of legitimate third-party file-hosting services and its own dedicated backend. The following is the extracted list of domains and endpoints:\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:\"https://bashupload[.]com\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:\"https://litterbox.catbox[.]moe/resources/internals/api.php\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:\"https://tmpfiles[.]org/api/v1/upload\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:\"https://oshi[.]at/\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:\"http://sendfile[.]su/\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:\"https://wsend[.]net\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:\"https://api.gofile[.]io/servers\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:\"https://gofile[.]io/uploadFiles\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:\"https://rdmfile[.]eu/api/upload\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:\"https://bamboulacity.nova-blight[.]xyz/file/\"})}),`\n`]}),`\n`,(0,i.jsx)(e.h3,{id:\"targeted-data\",children:\"Targeted data\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"NOVABLIGHT executes targeted routines designed to steal credentials and session files from a specific list of installed software. The curated list is available in this GitHub \",(0,i.jsx)(e.a,{href:\"https://gist.github.com/jiayuchann/4a27afce5be67dd73edb9c4b9a6de1f9\",rel:\"nofollow\",children:\"Gist\"}),\".\"]}),`\n`,(0,i.jsx)(e.h2,{id:\"obfuscation-techniques\",children:\"Obfuscation techniques\"}),`\n`,(0,i.jsx)(e.h3,{id:\"array-mapping\",children:\"Array mapping\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"The first technique to tackle is the malware\\u2019s use of array mapping. The script initializes a single large global array \",(0,i.jsx)(e.code,{children:\"__p_6Aeb_dlrArray\"}),\" with values of different types and encoding, which accounts for nearly all literal values used in the script.\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image4.png\",alt:\"Main global array used for value lookups\",width:\"887\",height:\"325\"})}),`\n`,(0,i.jsx)(e.p,{children:\"After substituting array index references, many small string chunks that make up a full string are split and concatenated at runtime, but at this stage, the NOVABLIGHT versioning number can be identified easily.\"}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image24.png\",alt:\"Results after fixing array mapping for __p_6Aeb_dlrArray\",width:\"954\",height:\"420\"})}),`\n`,(0,i.jsx)(e.h3,{id:\"string-encoding\",children:\"String encoding\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"The second technique used to hide strings is the usage of base91 encoding. The function wrapper \",(0,i.jsx)(e.code,{children:\"__p_xIFu_MAIN_STR\"}),\" is called with an integer argument.\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image10.png\",alt:\"Obfuscated strings\",width:\"1999\",height:\"241\"})}),`\n`,(0,i.jsxs)(e.p,{children:[\"The integer is an index of a secondary array mapping \",(0,i.jsx)(e.code,{children:\"__p_9sMm_array\"}),\" that contains encoded strings. It retrieves the encoded string and passes it to the decoding routine \",(0,i.jsx)(e.code,{children:\"__p_xIFu_MAIN_STR_decode\"}),\".\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image9.png\",alt:\"Global array used for lookup by __p_xIFu_MAIN_STR\",width:\"1999\",height:\"463\"})}),`\n`,(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:\"__p_xIFu_MAIN_STR_decode\"}),\" will then decode it using a custom alphabet:\",(0,i.jsx)(e.br,{}),`\n`,(0,i.jsx)(e.code,{children:'vFAjbQox\\\\\u003e5?4K$m=83GYu.nBIh\\\\\u003cdrPaN\\\\^@%Hk:D_sSyz\"ER9/p,(*JwtfO)iUl\u0026C\\\\[~\\\\}\\\\{|Z+gX1MqL;60!e]T#2cVW7'}),\" and return the decoded string.\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image26.png\",alt:\"Main logic for string decoding\",width:\"1999\",height:\"652\"})}),`\n`,(0,i.jsx)(e.h3,{id:\"access-pattern-obfuscation\",children:\"Access pattern obfuscation\"}),`\n`,(0,i.jsx)(e.p,{children:\"Instead of accessing objects and functions directly, the code uses intermediate flattened \\u201Cproxy\\u201D objects with mangled keys, wrapping objects in another layer of objects to hide the original access patterns.\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"For example, the function \",(0,i.jsx)(e.code,{children:\"__p_LQ1f_flat_\\u2026\"}),\" is passed a flat object \",(0,i.jsx)(e.code,{children:\"__p_w3Th_flat_object\"}),\". This object contains 3 get accessors for properties, one of which returns the disableNetwork flag retrieved from the config, and a wrapper for a dispatcher call (\",(0,i.jsx)(e.code,{children:\"__p_jGTR_dispatcher_26\"}),\"). Throughout the code, there is a pattern where the property names start with \",(0,i.jsx)(e.code,{children:\"empretecerian.js\"}),\", which happens to also be the script file\\u2019s name. The callee function can then access the actual objects and functions through this flat object populated by the caller.\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image29.png\",alt:\"Example pattern for flattened object\",width:\"874\",height:\"462\"})}),`\n`,(0,i.jsx)(e.h3,{id:\"control-flow-obfuscation\",children:\"Control flow obfuscation\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"Some of the code\\u2019s execution path is routed through a central dispatcher,  \",(0,i.jsx)(e.code,{children:\"__p_jGTR_dispatcher_26\"}),\", in which the first argument name takes a short ID string.\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image7.png\",alt:\"The main dispatcher\\u2019s function signature\",width:\"585\",height:\"170\"})}),`\n`,(0,i.jsxs)(e.p,{children:[\"Each ID is mapped to a distinct function. For example, the ID \",(0,i.jsx)(e.code,{children:\"jgqatJ\"}),\" is referenced by the \",(0,i.jsx)(e.code,{children:\"modules/init/Troll.js\"}),\" module and it is responsible for a \\u201Ctroll\\u201D popup message box.\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image14.png\",alt:\"Mapping function ID to the actual function\",width:\"1055\",height:\"429\"})}),`\n`,(0,i.jsx)(e.h3,{id:\"proxy-variables\",children:\"Proxy variables\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"First, the obfuscation transforms function syntax to \\u201C\",(0,i.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters\",rel:\"nofollow\",children:\"rest parameters syntax\"}),\"\\u201D which replaces the parameters with an array that stores variable values instead of direct variables, the code then references the array with numerical values. For instance, the function \",(0,i.jsx)(e.code,{children:\"__p_xIFu_MAIN_STR_decode\"}),\" is not called with direct parameters. Instead, its arguments are first placed into the \",(0,i.jsx)(e.code,{children:\"__p_A5wG_varMask\"}),\" array (line 22), and the function is programmed to retrieve them from predefined indices. For example, at line 25, the index \",(0,i.jsx)(e.code,{children:\"-36\"}),' of the array stores the index of the character \"c\" in a string stored in ',(0,i.jsx)(e.code,{children:\"__p_A5wG_varMask[171]\"}),\".\"]}),`\n`,(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:\"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/image3.png\",alt:\"Function utilizing rest parameters\",width:\"1999\",height:\"525\"})}),`\n`,(0,i.jsx)(e.h2,{id:\"novablight-and-mitre-attck\",children:\"NOVABLIGHT and MITRE ATT\u0026CK\"}),`\n`,(0,i.jsxs)(e.p,{children:[\"Elastic uses the \",(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/\",rel:\"nofollow\",children:\"MITRE ATT\u0026CK\"}),\" framework to document common tactics, techniques, and procedures that advanced persistent threats use against enterprise networks.\"]}),`\n`,(0,i.jsx)(e.h3,{id:\"tactics\",children:\"Tactics\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/tactics/TA0002/\",rel:\"nofollow\",children:\"Execution\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/tactics/TA0003/\",rel:\"nofollow\",children:\"Persistence\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/tactics/TA0005/\",rel:\"nofollow\",children:\"Defense Evasion\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/tactics/TA0006/\",rel:\"nofollow\",children:\"Credential Access\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/tactics/TA0007/\",rel:\"nofollow\",children:\"Discovery\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/tactics/TA0009/\",rel:\"nofollow\",children:\"Collection\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/tactics/TA0011/\",rel:\"nofollow\",children:\"Command and Control\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/tactics/TA0010/\",rel:\"nofollow\",children:\"Exfiltration\"})}),`\n`]}),`\n`,(0,i.jsx)(e.h3,{id:\"techniques\",children:\"Techniques\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/techniques/T1027/\",rel:\"nofollow\",children:\"Obfuscated Files or Information\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/techniques/T1057/\",rel:\"nofollow\",children:\"Process Discovery\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/techniques/T1059/001/\",rel:\"nofollow\",children:\"Command and Scripting Interpreter: PowerShell\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/techniques/T1059/007/\",rel:\"nofollow\",children:\"Command and Scripting Interpreter: JavaScript\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/techniques/T1074/001/\",rel:\"nofollow\",children:\"Data Staged: Local Data Staging\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/techniques/T1082/\",rel:\"nofollow\",children:\"System Information Discovery\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/techniques/T1083/\",rel:\"nofollow\",children:\"File and Directory Discovery\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/techniques/T1113/\",rel:\"nofollow\",children:\"Screen Capture\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/techniques/T1115/\",rel:\"nofollow\",children:\"Clipboard Data\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/techniques/T1125/\",rel:\"nofollow\",children:\"Video Capture\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/techniques/T1497/001/\",rel:\"nofollow\",children:\"Virtualization/Sandbox Evasion: System Checks\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/techniques/T1531/\",rel:\"nofollow\",children:\"Account Access Removal\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/techniques/T1555/003/\",rel:\"nofollow\",children:\"Credentials from Password Stores: Credentials from Web Browsers\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/techniques/T1562/001/\",rel:\"nofollow\",children:\"Impair Defenses: Disable or Modify Tools\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://attack.mitre.org/techniques/T1567/002/\",rel:\"nofollow\",children:\"Exfiltration Over Web Service: Exfiltration to Cloud Storage\"})}),`\n`]}),`\n`,(0,i.jsx)(e.h2,{id:\"conclusion\",children:\"Conclusion\"}),`\n`,(0,i.jsx)(e.p,{children:\"NOVABLIGHT shows how even lesser-known malware can make an impact. By offering a polished, easy-to-use tool through platforms like Telegram and Discord, its creators have made it simple for anyone to get involved in cybercrime.\"}),`\n`,(0,i.jsx)(e.p,{children:\"Furthermore, this threat is not static. Our analysis confirms that NOVABLIGHT is under continuous and active development. This ongoing evolution ensures that NOVABLIGHT will remain a persistent and relevant threat for the foreseeable future.\"}),`\n`,(0,i.jsx)(e.h2,{id:\"detecting-novablight\",children:\"Detecting NOVABLIGHT\"}),`\n`,(0,i.jsx)(e.h3,{id:\"yara\",children:\"YARA\"}),`\n`,(0,i.jsx)(e.p,{children:\"Elastic Security has created YARA rules to identify this activity.\"}),`\n`,(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:\"language-yara\",children:`rule Windows_Infostealer_NovaBlight {\n    meta:\n        author = \"Elastic Security\"\n        creation_date = \"2025-07-18\"\n        last_modified = \"2025-07-28\"\n        os = \"Windows\"\n        arch = \"x86\"\n        category_type = \"Infostealer\"\n        family = \"NovaBlight\"\n        threat_name = \"Windows.Infostealer.NovaBlight\"\n        reference_sample = \"d806d6b5811965e745fd444b8e57f2648780cc23db9aa2c1675bc9d18530ab73\"\n\n    strings:\n        $a1 = \"C:\\\\\\\\Users\\\\\\\\Administrateur\\\\\\\\Desktop\\\\\\\\Nova\\\\\\\\\"\n        $a2 = \"[+] Recording...\" fullword\n        $a3 = \"[+] Capture start\" fullword\n    condition:\n        all of them\n}\n`})}),`\n`,(0,i.jsx)(e.h2,{id:\"observations\",children:\"Observations\"}),`\n`,(0,i.jsx)(e.p,{children:\"The following observables were discussed in this research.\"}),`\n`,(0,i.jsx)(e.div,{className:\"table-container\",children:(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{align:\"left\",children:\"Observable\"}),(0,i.jsx)(e.th,{align:\"left\",children:\"Type\"}),(0,i.jsx)(e.th,{align:\"left\",children:\"Name\"}),(0,i.jsx)(e.th,{align:\"left\",children:\"Reference\"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{align:\"left\",children:(0,i.jsx)(e.code,{children:\"ed164ee2eacad0eea9dc4fbe271ee2b2387b59929d73c843281a8d5e94c05d64\"})}),(0,i.jsx)(e.td,{align:\"left\",children:\"SHA-256\"}),(0,i.jsx)(e.td,{align:\"left\"}),(0,i.jsx)(e.td,{align:\"left\",children:\"NOVABLIGHT VERSION 2.2\"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{align:\"left\",children:(0,i.jsx)(e.code,{children:\"39f09771d70e96c7b760b3b6a30a015ec5fb6a9dd5bc1e2e609ddf073c2c853d\"})}),(0,i.jsx)(e.td,{align:\"left\",children:\"SHA-256\"}),(0,i.jsx)(e.td,{align:\"left\"}),(0,i.jsx)(e.td,{align:\"left\",children:\"NOVABLIGHT VERSION 2.1\"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{align:\"left\",children:(0,i.jsx)(e.code,{children:\"97393c27195c58f8e4acc9312a4c36818fe78f2ddce7ccba47f77a5ca42eab65\"})}),(0,i.jsx)(e.td,{align:\"left\",children:\"SHA-256\"}),(0,i.jsx)(e.td,{align:\"left\"}),(0,i.jsx)(e.td,{align:\"left\",children:\"NOVABLIGHT VERSION 2.0\"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{align:\"left\",children:(0,i.jsx)(e.code,{children:\"api.nova-blight[.]top\"})}),(0,i.jsx)(e.td,{align:\"left\",children:\"DOMAIN\"}),(0,i.jsx)(e.td,{align:\"left\"}),(0,i.jsx)(e.td,{align:\"left\",children:\"NOVABLIGHT dashboard\"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{align:\"left\",children:(0,i.jsx)(e.code,{children:\"shadow.nova-blight[.]top\"})}),(0,i.jsx)(e.td,{align:\"left\",children:\"DOMAIN\"}),(0,i.jsx)(e.td,{align:\"left\"}),(0,i.jsx)(e.td,{align:\"left\",children:\"NOVABLIGHT dashboard\"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{align:\"left\",children:(0,i.jsx)(e.code,{children:\"nova-blight[.]site\"})}),(0,i.jsx)(e.td,{align:\"left\",children:\"DOMAIN\"}),(0,i.jsx)(e.td,{align:\"left\"}),(0,i.jsx)(e.td,{align:\"left\",children:\"NOVABLIGHT dashboard\"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{align:\"left\",children:(0,i.jsx)(e.code,{children:\"nova-blight[.]xyz\"})}),(0,i.jsx)(e.td,{align:\"left\",children:\"DOMAIN\"}),(0,i.jsx)(e.td,{align:\"left\"}),(0,i.jsx)(e.td,{align:\"left\",children:\"NOVABLIGHT dashboard\"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{align:\"left\",children:(0,i.jsx)(e.code,{children:\"bamboulacity.nova-blight[.]xyz\"})}),(0,i.jsx)(e.td,{align:\"left\",children:\"DOMAIN\"}),(0,i.jsx)(e.td,{align:\"left\"}),(0,i.jsx)(e.td,{align:\"left\",children:\"NOVABLIGHT dashboard\"})]})]})]})}),`\n`,(0,i.jsx)(e.h2,{id:\"references\",children:\"References\"}),`\n`,(0,i.jsx)(e.p,{children:\"The following were referenced throughout the above research:\"}),`\n`,(0,i.jsxs)(e.ul,{children:[`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://www.gatewatcher.com/lab/groupe-nova-sentinel/\",rel:\"nofollow\",children:\"https://www.gatewatcher.com/lab/groupe-nova-sentinel/\"})}),`\n`,(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://www.cyfirma.com/research/emerging-maas-operator-sordeal-releases-nova-infostealer/\",rel:\"nofollow\",children:\"https://www.cyfirma.com/research/emerging-maas-operator-sordeal-releases-nova-infostealer/\"})}),`\n`]})]})}function T(n={}){let{wrapper:e}=n.components||{};return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(h,n)})):h(n)}var k=T;return y(x);})();\n;return Component;"},"_id":"articles/maas-appeal-an-infostealer-rises-from-the-ashes.mdx","_raw":{"sourceFilePath":"articles/maas-appeal-an-infostealer-rises-from-the-ashes.mdx","sourceFileName":"maas-appeal-an-infostealer-rises-from-the-ashes.mdx","sourceFileDir":"articles","contentType":"mdx","flattenedPath":"articles/maas-appeal-an-infostealer-rises-from-the-ashes"},"type":"Article","imageUrl":"/assets/images/maas-appeal-an-infostealer-rises-from-the-ashes/Security Labs Images 7.jpg","readingTime":"18 min read","series":"","url":"/maas-appeal-an-infostealer-rises-from-the-ashes","headings":[{"level":2,"title":"NOVABLIGHT at a glance","href":"#novablight-at-a-glance"},{"level":3,"title":"Key takeaways","href":"#key-takeaways"},{"level":2,"title":"Discovery","href":"#discovery"},{"level":2,"title":"Distribution, monetization, and community","href":"#distribution-monetization-and-community"},{"level":2,"title":"NOVABLIGHT analysis","href":"#novablight-analysis"},{"level":3,"title":"Code structure","href":"#code-structure"},{"level":3,"title":"Anti-debug and sandbox detection","href":"#anti-debug-and-sandbox-detection"},{"level":3,"title":"Disable Defender \u0026 attempts to disable Task Manager","href":"#disable-defender--attempts-to-disable-task-manager"},{"level":3,"title":"Disable internet access","href":"#disable-internet-access"},{"level":3,"title":"Defeat system recovery","href":"#defeat-system-recovery"},{"level":3,"title":"Blocking file deletion","href":"#blocking-file-deletion"},{"level":3,"title":"Clipboard address substitution","href":"#clipboard-address-substitution"},{"level":3,"title":"Electron application injections","href":"#electron-application-injections"},{"level":3,"title":"Chrome sensitive data extraction","href":"#chrome-sensitive-data-extraction"},{"level":3,"title":"System enumeration","href":"#system-enumeration"},{"level":3,"title":"Data exfiltration","href":"#data-exfiltration"},{"level":3,"title":"Targeted data","href":"#targeted-data"},{"level":2,"title":"Obfuscation techniques","href":"#obfuscation-techniques"},{"level":3,"title":"Array mapping","href":"#array-mapping"},{"level":3,"title":"String encoding","href":"#string-encoding"},{"level":3,"title":"Access pattern obfuscation","href":"#access-pattern-obfuscation"},{"level":3,"title":"Control flow obfuscation","href":"#control-flow-obfuscation"},{"level":3,"title":"Proxy variables","href":"#proxy-variables"},{"level":2,"title":"NOVABLIGHT and MITRE ATT\u0026CK","href":"#novablight-and-mitre-attck"},{"level":3,"title":"Tactics","href":"#tactics"},{"level":3,"title":"Techniques","href":"#techniques"},{"level":2,"title":"Conclusion","href":"#conclusion"},{"level":2,"title":"Detecting NOVABLIGHT","href":"#detecting-novablight"},{"level":3,"title":"YARA","href":"#yara"},{"level":2,"title":"Observations","href":"#observations"},{"level":2,"title":"References","href":"#references"}],"author":[{"title":"Jia Yu Chan","slug":"jia-yu-chan","description":"Elastic Security Labs Team Research Engineer, Malware","image":"jiayuchan.jpg","body":{"raw":"","code":"var Component=(()=\u003e{var g=Object.create;var i=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var l=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var h=(t,e)=\u003e()=\u003e(e||t((e={exports:{}}).exports,e),e.exports),p=(t,e)=\u003e{for(var n in e)i(t,n,{get:e[n],enumerable:!0})},o=(t,e,n,c)=\u003e{if(e\u0026\u0026typeof e==\"object\"||typeof e==\"function\")for(let r of x(e))!f.call(t,r)\u0026\u0026r!==n\u0026\u0026i(t,r,{get:()=\u003ee[r],enumerable:!(c=j(e,r))||c.enumerable});return t};var _=(t,e,n)=\u003e(n=t!=null?g(l(t)):{},o(e||!t||!t.__esModule?i(n,\"default\",{value:t,enumerable:!0}):n,t)),d=t=\u003eo(i({},\"__esModule\",{value:!0}),t);var u=h((D,s)=\u003e{s.exports=_jsx_runtime});var b={};p(b,{default:()=\u003eC,frontmatter:()=\u003ey});var a=_(u()),y={title:\"Jia Yu Chan\",description:\"Elastic Security Labs Team Research Engineer, Malware\",slug:\"jia-yu-chan\",image:\"jiayuchan.jpg\"};function m(t){return(0,a.jsx)(a.Fragment,{})}function M(t={}){let{wrapper:e}=t.components||{};return e?(0,a.jsx)(e,Object.assign({},t,{children:(0,a.jsx)(m,t)})):m(t)}var C=M;return d(b);})();\n;return Component;"},"_id":"authors/jia-yu-chan.mdx","_raw":{"sourceFilePath":"authors/jia-yu-chan.mdx","sourceFileName":"jia-yu-chan.mdx","sourceFileDir":"authors","contentType":"mdx","flattenedPath":"authors/jia-yu-chan"},"type":"Author","imageUrl":"/assets/images/authors/jiayuchan.jpg","url":"/authors/jia-yu-chan"},{"title":"Elastic Security Labs","slug":"elastic-security-labs","body":{"raw":"","code":"var Component=(()=\u003e{var m=Object.create;var a=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var _=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var j=(t,e)=\u003e()=\u003e(e||t((e={exports:{}}).exports,e),e.exports),b=(t,e)=\u003e{for(var n in e)a(t,n,{get:e[n],enumerable:!0})},c=(t,e,n,o)=\u003e{if(e\u0026\u0026typeof e==\"object\"||typeof e==\"function\")for(let s of f(e))!g.call(t,s)\u0026\u0026s!==n\u0026\u0026a(t,s,{get:()=\u003ee[s],enumerable:!(o=x(e,s))||o.enumerable});return t};var d=(t,e,n)=\u003e(n=t!=null?m(_(t)):{},c(e||!t||!t.__esModule?a(n,\"default\",{value:t,enumerable:!0}):n,t)),p=t=\u003ec(a({},\"__esModule\",{value:!0}),t);var u=j((L,i)=\u003e{i.exports=_jsx_runtime});var D={};b(D,{default:()=\u003eC,frontmatter:()=\u003ey});var r=d(u()),y={title:\"Elastic Security Labs\",slug:\"elastic-security-labs\"};function l(t){return(0,r.jsx)(r.Fragment,{})}function M(t={}){let{wrapper:e}=t.components||{};return e?(0,r.jsx)(e,Object.assign({},t,{children:(0,r.jsx)(l,t)})):l(t)}var C=M;return p(D);})();\n;return Component;"},"_id":"authors/elastic-security-labs.mdx","_raw":{"sourceFilePath":"authors/elastic-security-labs.mdx","sourceFileName":"elastic-security-labs.mdx","sourceFileDir":"authors","contentType":"mdx","flattenedPath":"authors/elastic-security-labs"},"type":"Author","imageUrl":"","url":"/authors/elastic-security-labs"}],"category":[{"title":"Malware analysis","slug":"malware-analysis","body":{"raw":"","code":"var Component=(()=\u003e{var u=Object.create;var s=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var _=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var j=(t,n)=\u003e()=\u003e(n||t((n={exports:{}}).exports,n),n.exports),M=(t,n)=\u003e{for(var e in n)s(t,e,{get:n[e],enumerable:!0})},i=(t,n,e,o)=\u003e{if(n\u0026\u0026typeof n==\"object\"||typeof n==\"function\")for(let r of f(n))!g.call(t,r)\u0026\u0026r!==e\u0026\u0026s(t,r,{get:()=\u003en[r],enumerable:!(o=x(n,r))||o.enumerable});return t};var d=(t,n,e)=\u003e(e=t!=null?u(_(t)):{},i(n||!t||!t.__esModule?s(e,\"default\",{value:t,enumerable:!0}):e,t)),p=t=\u003ei(s({},\"__esModule\",{value:!0}),t);var l=j((X,c)=\u003e{c.exports=_jsx_runtime});var D={};M(D,{default:()=\u003eC,frontmatter:()=\u003ew});var a=d(l()),w={title:\"Malware analysis\",slug:\"malware-analysis\"};function m(t){return(0,a.jsx)(a.Fragment,{})}function y(t={}){let{wrapper:n}=t.components||{};return n?(0,a.jsx)(n,Object.assign({},t,{children:(0,a.jsx)(m,t)})):m(t)}var C=y;return p(D);})();\n;return Component;"},"_id":"categories/malware-analysis.mdx","_raw":{"sourceFilePath":"categories/malware-analysis.mdx","sourceFileName":"malware-analysis.mdx","sourceFileDir":"categories","contentType":"mdx","flattenedPath":"categories/malware-analysis"},"type":"Category","url":"/categories/malware-analysis"}]},"seriesArticles":null},"__N_SSG":true},"page":"/[slug]","query":{"slug":"maas-appeal-an-infostealer-rises-from-the-ashes"},"buildId":"_SefzxskCogRxxQ4n3Dnc","assetPrefix":"/security-labs","isFallback":false,"gsp":true,"scriptLoader":[]}</script></body></html>